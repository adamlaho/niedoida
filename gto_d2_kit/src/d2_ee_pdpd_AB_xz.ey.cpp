/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AB_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_12_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49152 = 0 * ae;
    const double C49151 = ae * be;
    const double C49150 = 0 * be;
    const double C49149 = ae + be;
    const double C49148 = 0 * be;
    const double C49147 = xA - xB;
    const double C49195 = 0 * be;
    const double C49194 = zA - zB;
    const double C49238 = 0 * ae;
    const double C49234 = 0 * be;
    const double C49272 = xP - xQ;
    const double C49271 = zP - zQ;
    const double C49270 = p + q;
    const double C49269 = p * q;
    const double C49277 = bs[3];
    const double C49287 = bs[4];
    const double C49296 = bs[5];
    const double C49310 = bs[6];
    const double C49332 = bs[7];
    const double C49441 = yP - yQ;
    const double C49650 = bs[2];
    const double C122 = bs[0];
    const double C50082 = ce + de;
    const double C50081 = ce * de;
    const double C50080 = xC - xD;
    const double C50104 = yC - yD;
    const double C50120 = zC - zD;
    const double C50206 = yA - yB;
    const double C49157 = C49152 / C49149;
    const double C49154 = 2 * C49149;
    const double C49153 = std::pow(C49149, 2);
    const double C49156 = C49151 * C49147;
    const double C49155 = C49147 * C49150;
    const double C50058 = C49147 * be;
    const double C50057 = C49147 * ae;
    const double C50056 = std::pow(C49147, 2);
    const double C49196 = C49151 * C49194;
    const double C49235 = C49194 * C49195;
    const double C50218 = std::pow(C49194, 2);
    const double C50282 = C49194 * be;
    const double C50281 = C49194 * ae;
    const double C49243 = C49238 / C49149;
    const double C49297 = std::pow(C49272, 2);
    const double C49367 = C49272 * ae;
    const double C49279 = C49271 * be;
    const double C49278 = C49272 * C49271;
    const double C49514 = std::pow(C49271, 2);
    const double C49273 = 2 * C49269;
    const double C49459 = std::pow(C49441, 2);
    const double C50084 = 2 * C50082;
    const double C50094 = std::pow(C50082, 2);
    const double C50086 = C50080 * de;
    const double C50085 = C50080 * ce;
    const double C50083 = std::pow(C50080, 2);
    const double C50105 = std::pow(C50104, 2);
    const double C50157 = C50104 * de;
    const double C50156 = C50104 * ce;
    const double C50121 = std::pow(C50120, 2);
    const double C50185 = C50120 * de;
    const double C50184 = C50120 * ce;
    const double C50207 = std::pow(C50206, 2);
    const double C50256 = C50206 * be;
    const double C50255 = C50206 * ae;
    const double C50066 = std::pow(C49154, -1);
    const double C50362 = std::pow(C49154, -2);
    const double C49158 = 2 * C49153;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * ae * be) /
                        C49153;
    const double C50340 = 4 * C49153;
    const double C49159 = C49155 / C49149;
    const double C50059 = C50056 * C49151;
    const double C49240 = C49235 / C49149;
    const double C50219 = C50218 * C49151;
    const double C49370 = C49287 * C49367;
    const double C49374 = C49277 * C49367;
    const double C49381 = C49296 * C49367;
    const double C49393 = C49310 * C49367;
    const double C49414 = C49332 * C49367;
    const double C49282 = C49277 * C49279;
    const double C49289 = C49287 * C49279;
    const double C49299 = C49296 * C49279;
    const double C49314 = C49310 * C49279;
    const double C49338 = C49332 * C49279;
    const double C49281 = C49278 * ae;
    const double C49274 = C49273 / C49270;
    const double C129 = (-(bs[1] * C49279 * C49273) / C49270) / C49149;
    const double C130 = (-(bs[1] * C49367 * C49273) / C49270) / C49149;
    const double C123 = -(C49272 * bs[1] * C49273) / C49270;
    const double C281 = -(C49441 * bs[1] * C49273) / C49270;
    const double C446 = -(C49271 * bs[1] * C49273) / C49270;
    const double C50095 = std::pow(C50084, -1);
    const double C50349 = std::pow(C50084, -2);
    const double C50099 = 2 * C50094;
    const double C50347 = 4 * C50094;
    const double C50087 = C50083 * C50081;
    const double C50106 = C50105 * C50081;
    const double C50122 = C50121 * C50081;
    const double C50208 = C50207 * C49151;
    const double C49164 = C49150 / C49158;
    const double C49162 = C49148 / C49158;
    const double C49237 = C49195 / C49158;
    const double C49241 = C49234 / C49158;
    const double C49161 = 0 - C49159;
    const double C50060 = C50059 / C49149;
    const double C49244 = 0 - C49240;
    const double C50220 = C50219 / C49149;
    const double C49283 = C49281 * be;
    const double C49276 = -C49274;
    const double C49286 = std::pow(C49274, 4);
    const double C49309 = std::pow(C49274, 6);
    const double C144 =
        (ae * std::pow(C49274, 2) * bs[2] * C49271 * be +
         C49272 * std::pow(-C49274, 3) * bs[3] * C49272 * C49271 * ae * be) /
        C49153;
    const double C49649 = std::pow(C49274, 2);
    const double C131 =
        (C49272 * std::pow(C49274, 2) * bs[2] * C49279) / C49149;
    const double C132 =
        (C49272 * std::pow(C49274, 2) * bs[2] * C49367) / C49149 -
        (ae * bs[1] * C49273) / (C49270 * C49149);
    const double C50088 = C50087 / C50082;
    const double C50107 = C50106 / C50082;
    const double C50123 = C50122 / C50082;
    const double C50209 = C50208 / C49149;
    const double C49166 = C49161 * ae;
    const double C50061 = -C50060;
    const double C49247 = C49244 * ae;
    const double C50221 = -C50220;
    const double C49288 = C49287 * C49283;
    const double C49298 = C49296 * C49283;
    const double C49312 = C49310 * C49283;
    const double C49336 = C49332 * C49283;
    const double C49280 = std::pow(C49276, 3);
    const double C49295 = std::pow(C49276, 5);
    const double C49331 = std::pow(C49276, 7);
    const double C49291 = C49286 * C49289;
    const double C49371 = C49287 * C49286;
    const double C49372 = C49286 * C49370;
    const double C49317 = C49309 * C49314;
    const double C49395 = C49309 * C49393;
    const double C49415 = C49310 * C49309;
    const double C49651 = C49650 * C49649;
    const double C291 = (C49441 * C49649 * C49650 * C49279) / C49149;
    const double C292 = (C49441 * C49649 * C49650 * C49367) / C49149;
    const double C456 = (C49271 * C49649 * C49650 * C49279) / C49149 -
                        (be * bs[1] * C49273) / (C49270 * C49149);
    const double C457 = (C49271 * C49649 * C49650 * C49367) / C49149;
    const double C50089 = -C50088;
    const double C50108 = -C50107;
    const double C50124 = -C50123;
    const double C50210 = -C50209;
    const double C49169 = C49166 / C49149;
    const double C50062 = std::exp(C50061);
    const double C49249 = C49247 / C49149;
    const double C50222 = std::exp(C50221);
    const double C49290 = C49286 * C49288;
    const double C49316 = C49309 * C49312;
    const double C49284 = C49280 * C49282;
    const double C49368 = C49277 * C49280;
    const double C49375 = C49280 * C49374;
    const double C311 = ((yP - yQ) * C49280 * C49277 * C49283) / C49153;
    const double C476 = (be * std::pow(C49274, 2) * bs[2] * C49272 * ae +
                         C49271 * C49280 * C49277 * C49283) /
                        C49153;
    const double C49301 = C49295 * C49299;
    const double C49300 = C49295 * C49298;
    const double C49384 = C49295 * C49381;
    const double C49394 = C49296 * C49295;
    const double C49341 = C49331 * C49338;
    const double C49340 = C49331 * C49336;
    const double C49417 = C49331 * C49414;
    const double C49294 = ae * C49291;
    const double C49293 = C49272 * C49291;
    const double C49812 = C49441 * C49291;
    const double C49822 = C49271 * C49291;
    const double C49383 = C49272 * C49371;
    const double C49382 = C49371 * ae;
    const double C49657 = C49371 * C49297;
    const double C49766 = C49371 * C49459;
    const double C49792 = C49441 * C49371;
    const double C49825 = C49371 * C49514;
    const double C49872 = C49271 * C49371;
    const double C49871 = C49371 * be;
    const double C49377 = C49272 * C49372;
    const double C49451 = C49441 * C49372;
    const double C49512 = be * C49372;
    const double C49511 = C49271 * C49372;
    const double C49319 = C49317 * C49297;
    const double C49330 = ae * C49317;
    const double C49329 = C49272 * C49317;
    const double C49901 = C49317 * C49459;
    const double C49929 = C49441 * C49317;
    const double C49947 = C49271 * C49317;
    const double C49399 = C49272 * C49395;
    const double C49490 = C49395 * C49459;
    const double C49539 = C49441 * C49395;
    const double C49557 = C49395 * C49514;
    const double C49625 = be * C49395;
    const double C49624 = C49271 * C49395;
    const double C49420 = C49415 * C49297;
    const double C49419 = C49272 * C49415;
    const double C49418 = C49415 * ae;
    const double C49909 = C49415 * C49459;
    const double C49932 = C49441 * C49415;
    const double C49951 = C49415 * C49514;
    const double C124 = C49651 * C49297 - (bs[1] * C49273) / C49270;
    const double C282 = C49441 * C49272 * C49651;
    const double C285 = C49651 * C49459 - (bs[1] * C49273) / C49270;
    const double C447 = C49271 * C49272 * C49651;
    const double C450 = C49651 * C49514 - (bs[1] * C49273) / C49270;
    const double C867 = C49271 * C49441 * C49651;
    const double C50090 = std::exp(C50089);
    const double C50109 = std::exp(C50108);
    const double C50125 = std::exp(C50124);
    const double C50211 = std::exp(C50210);
    const double C49171 = C49169 - C49162;
    const double C49160 = C49156 * C50062;
    const double C50063 = C50062 * C50057;
    const double C50067 = C50066 * C50062;
    const double C50337 = C50062 * C50058;
    const double C50334 = C50062 / C49154;
    const double C16924 = C50362 * C50062;
    const double C49251 = C49249 - C49241;
    const double C153 = C50222 * C144;
    const double C151 = C50222 * C131;
    const double C2427 = C50222 * C291;
    const double C49197 = C49196 * C50222;
    const double C117 = -(2 * ae * be * (zA - zB) * C50222) / (ae + be);
    const double C50283 = C50222 * C50281;
    const double C50286 = C50066 * C50222;
    const double C50370 = C50222 * C50282;
    const double C50363 = C50222 / C49154;
    const double C5102 = C50362 * C50222;
    const double C315 =
        (C49280 * C49277 * C49283 + C49290 * std::pow(yP - yQ, 2)) / C49153;
    const double C49318 = C49272 * C49316;
    const double C49483 = C49316 * C49459;
    const double C49538 = C49441 * C49316;
    const double C49556 = C49271 * C49316;
    const double C145 = (C49280 * C49277 * C49283 + ae * C49272 * C49284 +
                         C49272 * (ae * C49284 + C49272 * std::pow(C49274, 4) *
                                                     bs[4] * C49283)) /
                        C49153;
    const double C146 =
        (2 * (ae * C49284 + C49272 * C49290) +
         ae * (C49284 + C49291 * std::pow(C49272, 2)) +
         C49272 * (C49290 + ae * C49272 * C49291 +
                   C49272 * (ae * C49291 +
                             C49272 * std::pow(C49276, 5) * bs[5] * C49283))) /
        C49153;
    const double C312 = ((yP - yQ) * (ae * C49284 + C49272 * C49290)) / C49153;
    const double C477 = (be * (C49272 * C49280 * C49277 * C49272 * ae +
                               bs[2] * std::pow(C49274, 2) * ae) +
                         C49271 * (ae * C49284 + C49272 * C49290)) /
                        C49153;
    const double C133 =
        (std::pow(C49274, 2) * bs[2] * C49279 + C49284 * C49297) / C49149;
    const double C135 =
        (2 * C49272 * C49284 + C49272 * (C49284 + C49291 * C49297)) / C49149;
    const double C293 = (C49441 * C49272 * C49284) / C49149;
    const double C295 = (C49441 * (C49284 + C49291 * C49297)) / C49149;
    const double C299 = (C49649 * C49650 * C49279 + C49284 * C49459) / C49149;
    const double C458 =
        (C49271 * C49272 * C49284 + C49272 * C49651 * be) / C49149;
    const double C464 =
        (C49649 * C49650 * C49279 + C49271 * (C49271 * C49284 + C49651 * be) +
         C49271 * C49651 * be) /
        C49149;
    const double C872 =
        (C49271 * C49441 * C49284 + C49441 * C49651 * be) / C49149;
    const double C1077 =
        (2 * C49441 * C49284 + C49441 * (C49284 + C49291 * C49459)) / C49149;
    const double C49378 = C49368 * ae;
    const double C49656 = C49272 * C49368;
    const double C49732 = C49441 * C49368;
    const double C49824 = C49271 * C49368;
    const double C49823 = C49368 * be;
    const double C460 = (C49271 * (C49284 + C49291 * C49297) +
                         (C49651 + C49368 * C49297) * be) /
                        C49149;
    const double C1538 = (C49271 * (C49284 + C49291 * C49459) +
                          (C49651 + C49368 * C49459) * be) /
                         C49149;
    const double C1822 =
        (2 * (C49271 * C49284 + C49651 * be) +
         C49271 * (C49284 + C49271 * (C49271 * C49291 + C49368 * be) +
                   C49271 * C49368 * be) +
         (C49651 + C49368 * C49514) * be) /
        C49149;
    const double C125 =
        2 * C49272 * C49651 + C49272 * (C49651 + C49368 * C49297);
    const double C283 = C49441 * (C49651 + C49368 * C49297);
    const double C448 = C49271 * (C49651 + C49368 * C49297);
    const double C1073 =
        2 * C49441 * C49651 + C49441 * (C49651 + C49368 * C49459);
    const double C1534 = C49271 * (C49651 + C49368 * C49459);
    const double C1818 =
        2 * C49271 * C49651 + C49271 * (C49651 + C49368 * C49514);
    const double C480 = (C49280 * C49277 * C49283 + be * C49271 * C49375 +
                         C49271 * (be * C49375 + C49271 * C49290)) /
                        C49153;
    const double C882 =
        (be * C49441 * C49375 + C49271 * C49441 * C49290) / C49153;
    const double C134 =
        (C49649 * C49650 * C49367 + C49272 * (C49272 * C49375 + C49651 * ae) +
         C49272 * C49651 * ae) /
        C49149;
    const double C294 = (C49441 * (C49272 * C49375 + C49651 * ae)) / C49149;
    const double C300 = (C49649 * C49650 * C49367 + C49375 * C49459) / C49149;
    const double C459 = (C49271 * (C49272 * C49375 + C49651 * ae)) / C49149;
    const double C465 = (C49649 * C49650 * C49367 + C49375 * C49514) / C49149;
    const double C873 = (C49271 * C49441 * C49375) / C49149;
    const double C1078 =
        (2 * C49441 * C49375 + C49441 * (C49375 + C49372 * C49459)) / C49149;
    const double C1539 = (C49271 * (C49375 + C49372 * C49459)) / C49149;
    const double C1823 =
        (2 * C49271 * C49375 + C49271 * (C49375 + C49372 * C49514)) / C49149;
    const double C2429 = C50222 * C311;
    const double C49303 = C49301 * C49297;
    const double C49308 = ae * C49301;
    const double C49307 = C49272 * C49301;
    const double C49784 = C49301 * C49459;
    const double C49850 = C49441 * C49301;
    const double C49870 = C49271 * C49301;
    const double C2417 =
        (3 * (C49284 + C49291 * C49459) +
         C49441 * (2 * C49441 * C49291 + C49441 * (C49291 + C49301 * C49459))) /
        C49149;
    const double C49302 = C49272 * C49300;
    const double C49505 = C49441 * C49300;
    const double C49513 = C49271 * C49300;
    const double C1085 = (2 * C49441 * C49290 +
                          C49441 * (C49290 + C49300 * std::pow(C49441, 2))) /
                         C49153;
    const double C1546 = (be * (C49375 + C49372 * C49459) +
                          C49271 * (C49290 + C49300 * C49459)) /
                         C49153;
    const double C1830 = (2 * (be * C49375 + C49271 * C49290) +
                          be * (C49375 + C49372 * std::pow(C49271, 2)) +
                          C49271 * (C49290 + be * C49271 * C49372 +
                                    C49271 * (be * C49372 + C49271 * C49300))) /
                         C49153;
    const double C2423 =
        (3 * (C49290 + C49300 * C49459) +
         C49441 * (2 * C49441 * C49300 + C49441 * (C49300 + C49316 * C49459))) /
        C49153;
    const double C49386 = C49272 * C49384;
    const double C49471 = C49384 * C49459;
    const double C49489 = C49441 * C49384;
    const double C49516 = C49384 * C49514;
    const double C49555 = be * C49384;
    const double C49554 = C49271 * C49384;
    const double C49398 = C49394 * C49297;
    const double C49397 = C49272 * C49394;
    const double C49396 = C49394 * ae;
    const double C49793 = C49394 * C49459;
    const double C49853 = C49441 * C49394;
    const double C49873 = C49394 * C49514;
    const double C49949 = C49271 * C49394;
    const double C49948 = C49394 * be;
    const double C49343 = C49341 * C49297;
    const double C49342 = C49272 * C49340;
    const double C49583 = C49340 * C49459;
    const double C49608 = C49441 * C49340;
    const double C49626 = C49271 * C49340;
    const double C49421 = C49272 * C49417;
    const double C49590 = C49417 * C49459;
    const double C49609 = C49441 * C49417;
    const double C49628 = C49417 * C49514;
    const double C301 = (C49272 * C49284 + C49293 * C49459) / C49149;
    const double C49385 = C49383 * ae;
    const double C49661 = 2 * C49383;
    const double C49735 = C49441 * C49383;
    const double C49832 = C49271 * C49383;
    const double C49831 = C49383 * be;
    const double C49658 = C49368 + C49657;
    const double C49767 = C49368 + C49766;
    const double C49794 = 2 * C49792;
    const double C49852 = C49271 * C49792;
    const double C49851 = C49792 * be;
    const double C49827 = C49368 + C49825;
    const double C49877 = 2 * C49872;
    const double C49875 = C49872 * be;
    const double C1199 = (C49441 * C49290 + be * C49271 * C49451 +
                          C49271 * (be * C49451 + C49271 * C49441 * C49300)) /
                         C49153;
    const double C1192 = (C49441 * C49375 + C49451 * C49514) / C49149;
    const double C49321 = C49301 + C49319;
    const double C49337 = 2 * C49329;
    const double C49335 = ae * C49329;
    const double C49788 = C49329 * C49459;
    const double C49860 = C49441 * C49329;
    const double C49885 = C49271 * C49329;
    const double C49902 = C49301 + C49901;
    const double C49933 = C49271 * C49929;
    const double C49492 = C49384 + C49490;
    const double C49541 = C49539 * C49514;
    const double C49589 = 2 * C49539;
    const double C49607 = be * C49539;
    const double C49606 = C49271 * C49539;
    const double C49561 = C49384 + C49557;
    const double C49632 = 2 * C49624;
    const double C49630 = be * C49624;
    const double C49423 = C49394 + C49420;
    const double C49422 = C49419 * ae;
    const double C49801 = C49419 * C49459;
    const double C49863 = C49441 * C49419;
    const double C49888 = C49419 * C49514;
    const double C49910 = C49394 + C49909;
    const double C49935 = C49932 * C49514;
    const double C49955 = C49394 + C49951;
    const double C50091 = C50090 * C50085;
    const double C50096 = C50095 * C50090;
    const double C50344 = C50090 * C50086;
    const double C50341 = C50090 / C50084;
    const double C1001 = C50349 * C50090;
    const double C50158 = C50109 * C50156;
    const double C50161 = C50095 * C50109;
    const double C50353 = C50109 * C50157;
    const double C50348 = C50109 / C50084;
    const double C278 = C50349 * C50109;
    const double C50186 = C50125 * C50184;
    const double C50189 = C50095 * C50125;
    const double C50357 = C50125 * C50185;
    const double C50350 = C50125 / C50084;
    const double C445 = C50349 * C50125;
    const double C50257 = C50211 * C50255;
    const double C50260 = C50066 * C50211;
    const double C50366 = C50211 * C50256;
    const double C50361 = C50211 / C49154;
    const double C2265 = C50362 * C50211;
    const double C49165 = C49160 / C49153;
    const double C49163 = 2 * C49160;
    const double C50338 = C50063 / C49158;
    const double C50336 = C50063 / C49149;
    const double C50335 = C50063 * C50058;
    const double C16923 = (2 * C50066 * C50063) / C49149;
    const double C50339 = C50067 * C50058;
    const double C109 = C50067 / C50340;
    const double C7888 = C50067 / C49154;
    const double C50375 = C50337 / C49149;
    const double C16922 = (C50062 * std::pow(C50057, 2)) / C49153 + C50334;
    const double C49239 = C49197 / C49153;
    const double C49236 = 2 * C49197;
    const double C5105 =
        ((0 * ae) / C49149 - C49197 / C49153) / C49154 + (0 * ae) / C49149;
    const double C10534 =
        ((C50222 - (C49194 * 2 * C49197) / C49149) * ae) / C49149 -
        C49195 / C49158;
    const double C10535 = (0 * ae) / C49149 - C49197 / C49153;
    const double C32933 =
        (-C49195 / C49149) / C49154 -
        ((C50222 - (C49194 * 2 * C49197) / C49149) * be) / C49149;
    const double C32934 = (-(2 * C49197) / C49149) / C49154 - (0 * be) / C49149;
    const double C156 = C117 * C124;
    const double C154 = C117 * C132;
    const double C152 = C117 * C123;
    const double C322 = C117 * C282;
    const double C487 = C117 * C447;
    const double C2434 = C117 * C285;
    const double C2430 = C117 * C292;
    const double C2428 = C117 * C281;
    const double C3157 = C117 * C867;
    const double C50372 = C50283 / C49158;
    const double C50371 = C50283 * C50282;
    const double C50365 = C50283 / C49149;
    const double C5101 = (2 * C50066 * C50283) / C49149;
    const double C5104 =
        (((C50222 - (C49194 * 2 * C49197) / C49149) * ae) / C49149 -
         C49195 / C49158) /
            C49154 +
        ((C49194 * ((0 * ae) / C49149 - C49197 / C49153) + C50286) * ae) /
            C49149;
    const double C50373 = C50286 * C50282;
    const double C38438 = C50286 / C50340;
    const double C43781 = C50286 / C49154;
    const double C50389 = C50370 / C49149;
    const double C5100 = (C50222 * std::pow(C50281, 2)) / C49153 + C50363;
    const double C2435 = C50222 * C315;
    const double C49484 = C49300 + C49483;
    const double C49540 = C49271 * C49538;
    const double C49582 = 2 * C49538;
    const double C157 = C50222 * C145;
    const double C161 = C50222 * C146;
    const double C325 = C50222 * C312;
    const double C490 = C50222 * C477;
    const double C10543 = C50286 * C477;
    const double C32942 = C50286 * C477;
    const double C155 = C50222 * C133;
    const double C159 = C50222 * C135;
    const double C323 = C50222 * C293;
    const double C327 = C50222 * C295;
    const double C2433 = C50222 * C299;
    const double C488 = C50222 * C458;
    const double C10539 = C50286 * C458;
    const double C32938 = C50286 * C458;
    const double C3158 = C50222 * C872;
    const double C13545 = C50286 * C872;
    const double C35864 = C50286 * C872;
    const double C2444 = C50222 * C1077;
    const double C49379 = C49377 + C49378;
    const double C466 =
        (C49272 * C49284 + C49271 * (C49271 * C49293 + C49656 * be) +
         C49271 * C49656 * be) /
        C49149;
    const double C874 =
        (C49271 * C49441 * C49293 + C49441 * C49656 * be) / C49149;
    const double C286 = C49272 * C49651 + C49656 * C49459;
    const double C451 = C49272 * C49651 + C49656 * C49514;
    const double C868 = C49271 * C49441 * C49656;
    const double C1074 =
        2 * C49441 * C49656 + C49441 * (C49656 + C49383 * C49459);
    const double C1535 = C49271 * (C49656 + C49383 * C49459);
    const double C1819 =
        2 * C49271 * C49656 + C49271 * (C49656 + C49383 * C49514);
    const double C1191 =
        (C49441 * C49284 + C49271 * (C49271 * C49441 * C49291 + C49732 * be) +
         C49271 * C49732 * be) /
        C49149;
    const double C4504 =
        (2 * (C49271 * C49812 + C49732 * be) +
         C49271 * (C49812 + C49271 * (C49271 * C49441 * C49301 + C49792 * be) +
                   C49271 * C49792 * be) +
         (C49732 + C49792 * C49514) * be) /
        C49149;
    const double C1187 = C49441 * C49651 + C49732 * C49514;
    const double C4500 =
        2 * C49271 * C49732 + C49271 * (C49732 + C49792 * C49514);
    const double C49826 = C49822 + C49823;
    const double C492 = C50222 * C460;
    const double C10547 = C50286 * C460;
    const double C32946 = C50286 * C460;
    const double C3164 = C50222 * C1538;
    const double C13562 = C50286 * C1538;
    const double C35872 = C50286 * C1538;
    const double C160 = C117 * C125;
    const double C326 = C117 * C283;
    const double C491 = C117 * C448;
    const double C2443 = C117 * C1073;
    const double C3163 = C117 * C1534;
    const double C3160 = C50222 * C882;
    const double C13549 = C50286 * C882;
    const double C35868 = C50286 * C882;
    const double C158 = C117 * C134;
    const double C324 = C117 * C294;
    const double C2436 = C117 * C300;
    const double C489 = C117 * C459;
    const double C3159 = C117 * C873;
    const double C2445 = C117 * C1078;
    const double C3165 = C117 * C1539;
    const double C49305 = C49291 + C49303;
    const double C49320 = C49308 + C49318;
    const double C49313 = 2 * C49307;
    const double C49311 = ae * C49307;
    const double C49815 = C49441 * C49307;
    const double C49830 = C49271 * C49307;
    const double C1079 =
        (2 * C49441 * C49293 + C49441 * (C49293 + C49307 * C49459)) / C49149;
    const double C1540 = (C49271 * (C49293 + C49307 * C49459) +
                          (C49656 + C49383 * C49459) * be) /
                         C49149;
    const double C1824 =
        (2 * (C49271 * C49293 + C49656 * be) +
         C49271 * (C49293 + C49271 * (C49271 * C49307 + C49383 * be) +
                   C49271 * C49383 * be) +
         (C49656 + C49383 * C49514) * be) /
        C49149;
    const double C2419 =
        (3 * (C49293 + C49307 * C49459) +
         C49441 * (2 * C49441 * C49307 + C49441 * (C49307 + C49329 * C49459))) /
        C49149;
    const double C49785 = C49291 + C49784;
    const double C49854 = C49271 * C49850;
    const double C49900 = 2 * C49850;
    const double C49874 = C49870 + C49871;
    const double C3433 = C50222 * C2417;
    const double C49304 = C49294 + C49302;
    const double C49515 = C49512 + C49513;
    const double C2446 = C50222 * C1085;
    const double C3166 = C50222 * C1546;
    const double C13566 = C50286 * C1546;
    const double C35876 = C50286 * C1546;
    const double C3435 = C50222 * C2423;
    const double C49387 = C49386 + C49382;
    const double C49472 = C49372 + C49471;
    const double C49491 = 2 * C49489;
    const double C49537 = be * C49489;
    const double C49536 = C49271 * C49489;
    const double C4512 =
        (2 * (be * C49451 + C49271 * C49505) +
         be * (C49451 + C49489 * std::pow(C49271, 2)) +
         C49271 * (C49505 + be * C49271 * C49489 +
                   C49271 * (be * C49489 + C49271 * C49441 * C49316))) /
        C49153;
    const double C4505 =
        (2 * C49271 * C49451 + C49271 * (C49451 + C49489 * C49514)) / C49149;
    const double C49517 = C49372 + C49516;
    const double C49559 = C49555 + C49556;
    const double C49560 = 2 * C49554;
    const double C49558 = be * C49554;
    const double C49401 = C49371 + C49398;
    const double C49400 = C49397 * ae;
    const double C49416 = 2 * C49397;
    const double C49770 = C49397 * C49459;
    const double C49800 = C49441 * C49397;
    const double C49833 = C49397 * C49514;
    const double C49887 = C49271 * C49397;
    const double C49886 = C49397 * be;
    const double C49402 = C49399 + C49396;
    const double C49795 = C49371 + C49793;
    const double C49855 = C49853 * C49514;
    const double C49908 = 2 * C49853;
    const double C49931 = C49271 * C49853;
    const double C49930 = C49853 * be;
    const double C49876 = C49371 + C49873;
    const double C49956 = 2 * C49949;
    const double C49954 = C49949 * be;
    const double C49953 = C49947 + C49948;
    const double C49345 = C49317 + C49343;
    const double C49344 = C49330 + C49342;
    const double C49584 = C49316 + C49583;
    const double C49611 = C49271 * C49608;
    const double C49631 = C49625 + C49626;
    const double C49424 = C49421 + C49418;
    const double C49591 = C49395 + C49590;
    const double C49613 = C49609 * C49514;
    const double C49633 = C49395 + C49628;
    const double C334 = C50222 * C301;
    const double C1193 =
        (C49441 * C49293 + C49271 * (C49271 * C49441 * C49307 + C49735 * be) +
         C49271 * C49735 * be) /
        C49149;
    const double C1188 = C49441 * C49656 + C49735 * C49514;
    const double C126 = 3 * (C49651 + C49368 * C49297) +
                        C49272 * (2 * C49656 + C49272 * C49658);
    const double C284 = C49441 * (2 * C49656 + C49272 * C49658);
    const double C287 = C49651 + C49368 * C49297 + C49658 * C49459;
    const double C449 = C49271 * (2 * C49656 + C49272 * C49658);
    const double C452 = C49651 + C49368 * C49297 + C49658 * C49514;
    const double C869 = C49271 * C49441 * C49658;
    const double C2629 =
        (C49284 + C49291 * C49459 +
         C49271 * (C49271 * (C49291 + C49301 * C49459) + C49767 * be) +
         C49271 * C49767 * be) /
        C49149;
    const double C3147 =
        (C49271 * (2 * C49441 * C49291 + C49441 * (C49291 + C49301 * C49459)) +
         (2 * C49732 + C49441 * C49767) * be) /
        C49149;
    const double C2414 = 3 * (C49651 + C49368 * C49459) +
                         C49441 * (2 * C49732 + C49441 * C49767);
    const double C2626 = C49651 + C49368 * C49459 + C49767 * C49514;
    const double C3144 = C49271 * (2 * C49732 + C49441 * C49767);
    const double C5458 = 3 * (C49651 + C49368 * C49514) +
                         C49271 * (2 * C49824 + C49271 * C49827);
    const double C3598 = C50222 * C1199;
    const double C14452 = C50286 * C1199;
    const double C21543 = C5102 * C1199;
    const double C36551 = C50286 * C1199;
    const double C3599 = C117 * C1192;
    const double C49323 = C49272 * C49321;
    const double C49333 = 3 * C49321;
    const double C49328 = ae * C49321;
    const double C49838 = C49271 * C49321;
    const double C49846 = C49441 * C49321;
    const double C49339 = C49316 + C49335;
    const double C49789 = C49307 + C49788;
    const double C49864 = C49271 * C49860;
    const double C49903 = C49441 * C49902;
    const double C49921 = C49271 * C49902;
    const double C49493 = C49441 * C49492;
    const double C49588 = 3 * C49492;
    const double C49600 = be * C49492;
    const double C49599 = C49271 * C49492;
    const double C49543 = C49489 + C49541;
    const double C49612 = 2 * C49606;
    const double C49610 = be * C49606;
    const double C49564 = C49271 * C49561;
    const double C49627 = 3 * C49561;
    const double C49623 = be * C49561;
    const double C49634 = C49316 + C49630;
    const double C49426 = C49272 * C49423;
    const double C49425 = C49423 * ae;
    const double C49774 = C49423 * C49459;
    const double C49841 = C49423 * C49514;
    const double C49847 = C49441 * C49423;
    const double C49803 = C49397 + C49801;
    const double C49865 = C49863 * C49514;
    const double C49891 = C49397 + C49888;
    const double C49911 = C49441 * C49910;
    const double C49924 = C49910 * C49514;
    const double C49938 = C49853 + C49935;
    const double C49958 = C49271 * C49955;
    const double C50345 = C50091 / C50099;
    const double C50343 = C50091 / C50082;
    const double C50342 = C50091 * C50086;
    const double C1000 = (2 * C50095 * C50091) / C50082;
    const double C50346 = C50096 * C50086;
    const double C116 = C50096 / C50347;
    const double C612 = C50096 / C50084;
    const double C50378 = C50344 / C50082;
    const double C999 = (C50090 * std::pow(C50085, 2)) / C50094 + C50341;
    const double C50355 = C50158 / C50099;
    const double C50354 = C50158 * C50157;
    const double C50351 = C50158 / C50082;
    const double C277 = (2 * C50095 * C50158) / C50082;
    const double C50356 = C50161 * C50157;
    const double C1071 = C50161 / C50347;
    const double C1303 = C50161 / C50084;
    const double C50380 = C50353 / C50082;
    const double C276 = (C50109 * std::pow(C50156, 2)) / C50094 + C50348;
    const double C50359 = C50186 / C50099;
    const double C50358 = C50186 * C50185;
    const double C50352 = C50186 / C50082;
    const double C444 = (2 * C50095 * C50186) / C50082;
    const double C50360 = C50189 * C50185;
    const double C1817 = C50189 / C50347;
    const double C2064 = C50189 / C50084;
    const double C50383 = C50357 / C50082;
    const double C443 = (C50125 * std::pow(C50184, 2)) / C50094 + C50350;
    const double C50368 = C50257 / C49158;
    const double C50367 = C50257 * C50256;
    const double C50364 = C50257 / C49149;
    const double C2264 = (2 * C50066 * C50257) / C49149;
    const double C50369 = C50260 * C50256;
    const double C19530 = C50260 / C50340;
    const double C24098 = C50260 / C49154;
    const double C50386 = C50366 / C49149;
    const double C2263 = (C50211 * std::pow(C50255, 2)) / C49153 + C50361;
    const double C49168 = C49157 - C49165;
    const double C49167 = C49147 * C49163;
    const double C2267 = (-C49163 / C49149) / C49154 - (0 * be) / C49149;
    const double C19531 = -C49163 / C49149;
    const double C50374 = C50335 / C49153;
    const double C50376 = C50339 / C49149;
    const double C2261 = -C50375;
    const double C49246 = C49243 - C49239;
    const double C49242 = C49194 * C49236;
    const double C21544 = C5105 * C1192;
    const double C10553 = C10534 * C125;
    const double C10550 = C10534 * C134;
    const double C10546 = C10534 * C124;
    const double C10542 = C10534 * C132;
    const double C10538 = C10534 * C123;
    const double C10735 = C10534 * C283;
    const double C10731 = C10534 * C294;
    const double C10727 = C10534 * C282;
    const double C10913 = C10534 * C448;
    const double C10909 = C10534 * C459;
    const double C10905 = C10534 * C447;
    const double C13563 = C10534 * C300;
    const double C13559 = C10534 * C285;
    const double C13548 = C10534 * C292;
    const double C13544 = C10534 * C281;
    const double C14449 = C10534 * C873;
    const double C14445 = C10534 * C867;
    const double C14802 = C10534 * C1078;
    const double C14798 = C10534 * C1073;
    const double C15004 = C10534 * C1192;
    const double C15658 = C10534 * C1539;
    const double C15654 = C10534 * C1534;
    const double C10548 = C10535 * C448;
    const double C10544 = C10535 * C459;
    const double C10540 = C10535 * C447;
    const double C13565 = C10535 * C1539;
    const double C13561 = C10535 * C1534;
    const double C13550 = C10535 * C873;
    const double C13546 = C10535 * C867;
    const double C14451 = C10535 * C1192;
    const double C32952 = C32933 * C125;
    const double C32949 = C32933 * C134;
    const double C32945 = C32933 * C124;
    const double C32941 = C32933 * C132;
    const double C32937 = C32933 * C123;
    const double C33134 = C32933 * C283;
    const double C33130 = C32933 * C294;
    const double C33126 = C32933 * C282;
    const double C33312 = C32933 * C448;
    const double C33308 = C32933 * C459;
    const double C33304 = C32933 * C447;
    const double C35882 = C32933 * C1078;
    const double C35878 = C32933 * C1073;
    const double C35875 = C32933 * C300;
    const double C35871 = C32933 * C285;
    const double C35867 = C32933 * C292;
    const double C35863 = C32933 * C281;
    const double C36556 = C32933 * C1539;
    const double C36552 = C32933 * C1534;
    const double C36548 = C32933 * C873;
    const double C36544 = C32933 * C867;
    const double C36980 = C32933 * C1192;
    const double C32947 = C32934 * C448;
    const double C32943 = C32934 * C459;
    const double C32939 = C32934 * C447;
    const double C35877 = C32934 * C1539;
    const double C35873 = C32934 * C1534;
    const double C35869 = C32934 * C873;
    const double C35865 = C32934 * C867;
    const double C36550 = C32934 * C1192;
    const double C50390 = C50371 / C49153;
    const double C10558 = C50365 * C146;
    const double C10554 = C50365 * C135;
    const double C10549 = C50365 * C145;
    const double C10545 = C50365 * C133;
    const double C10541 = C50365 * C144;
    const double C10537 = C50365 * C131;
    const double C10743 = C50365 * C301;
    const double C10736 = C50365 * C295;
    const double C10732 = C50365 * C312;
    const double C10728 = C50365 * C293;
    const double C10914 = C50365 * C460;
    const double C10910 = C50365 * C477;
    const double C10906 = C50365 * C458;
    const double C13564 = C50365 * C315;
    const double C13560 = C50365 * C299;
    const double C13547 = C50365 * C311;
    const double C13543 = C50365 * C291;
    const double C14450 = C50365 * C882;
    const double C14446 = C50365 * C872;
    const double C14801 = C50365 * C1085;
    const double C14797 = C50365 * C1077;
    const double C15003 = C50365 * C1199;
    const double C15657 = C50365 * C1546;
    const double C15653 = C50365 * C1538;
    const double C31292 = C50365 * C2423;
    const double C31288 = C50365 * C2417;
    const double C5103 =
        (((0 - (C49194 * C49195) / C49149) * ae) / C49149 - (0 * be) / C49158) /
            C49154 +
        ((C49194 * (((C50222 - (C49194 * 2 * C49197) / C49149) * ae) / C49149 -
                    C49195 / C49158) +
          C50365) *
         ae) /
            C49149 +
        (0 * ae) / C49149 - C49197 / C49153;
    const double C5122 = C5101 * C460;
    const double C5115 = C5101 * C477;
    const double C5109 = C5101 * C458;
    const double C21554 = C5101 * C1546;
    const double C21548 = C5101 * C1538;
    const double C21541 = C5101 * C882;
    const double C21535 = C5101 * C872;
    const double C22198 = C5101 * C1199;
    const double C5121 = C5104 * C448;
    const double C5116 = C5104 * C459;
    const double C5110 = C5104 * C447;
    const double C21553 = C5104 * C1539;
    const double C21547 = C5104 * C1534;
    const double C21542 = C5104 * C873;
    const double C21536 = C5104 * C867;
    const double C22197 = C5104 * C1192;
    const double C50391 = C50373 / C49149;
    const double C46690 = C43781 * C1199;
    const double C32931 = -C50389;
    const double C5137 = C5100 * C146;
    const double C5131 = C5100 * C135;
    const double C5126 = C5100 * C145;
    const double C5120 = C5100 * C133;
    const double C5113 = C5100 * C144;
    const double C5107 = C5100 * C131;
    const double C5301 = C5100 * C301;
    const double C5296 = C5100 * C312;
    const double C5290 = C5100 * C293;
    const double C5478 = C5100 * C477;
    const double C5472 = C5100 * C458;
    const double C5641 = C5100 * C295;
    const double C5799 = C5100 * C460;
    const double C21552 = C5100 * C315;
    const double C21546 = C5100 * C299;
    const double C21539 = C5100 * C311;
    const double C21533 = C5100 * C291;
    const double C22196 = C5100 * C882;
    const double C22190 = C5100 * C872;
    const double C22451 = C5100 * C1085;
    const double C22445 = C5100 * C1077;
    const double C22613 = C5100 * C1199;
    const double C23111 = C5100 * C1546;
    const double C23105 = C5100 * C1538;
    const double C3426 =
        (4 * (2 * C49441 * C49300 + C49441 * C49484) +
         C49441 *
             (3 * C49484 + C49441 * (2 * C49441 * C49316 +
                                     C49441 * (C49316 + C49340 * C49459)))) /
        C49153;
    const double C171 = C155 - C156;
    const double C2439 = C322 - C323;
    const double C2431 = C323 - C322;
    const double C2461 = C2433 - C2434;
    const double C136 =
        (2 * (C49272 * C49375 + C49651 * ae) +
         C49272 * (C49375 + C49272 * C49379 + C49272 * C49368 * ae) +
         (C49651 + C49368 * C49297) * ae) /
        C49149;
    const double C296 =
        (C49441 * (C49375 + C49272 * C49379 + C49656 * ae)) / C49149;
    const double C302 =
        (C49272 * C49375 + C49651 * ae + C49379 * C49459) / C49149;
    const double C461 =
        (C49271 * (C49375 + C49272 * C49379 + C49656 * ae)) / C49149;
    const double C467 =
        (C49272 * C49375 + C49651 * ae + C49379 * C49514) / C49149;
    const double C875 = (C49271 * C49441 * C49379) / C49149;
    const double C499 = C50222 * C466;
    const double C5111 = C5102 * C466;
    const double C5483 = C5100 * C466;
    const double C5474 = C5101 * C466;
    const double C10921 = C50365 * C466;
    const double C10908 = C50286 * C466;
    const double C33307 = C50286 * C466;
    const double C43790 = C43781 * C466;
    const double C888 = C50222 * C874;
    const double C5292 = C5101 * C874;
    const double C6009 = C5100 * C874;
    const double C10730 = C50286 * C874;
    const double C11451 = C50365 * C874;
    const double C33129 = C50286 * C874;
    const double C335 = C117 * C286;
    const double C10744 = C10534 * C286;
    const double C33143 = C32933 * C286;
    const double C500 = C117 * C451;
    const double C5112 = C5105 * C451;
    const double C5473 = C5104 * C451;
    const double C10922 = C10534 * C451;
    const double C10907 = C10535 * C451;
    const double C33321 = C32933 * C451;
    const double C33306 = C32934 * C451;
    const double C889 = C117 * C868;
    const double C5291 = C5104 * C868;
    const double C10729 = C10535 * C868;
    const double C11452 = C10534 * C868;
    const double C33128 = C32934 * C868;
    const double C33851 = C32933 * C868;
    const double C2447 = C117 * C1074;
    const double C13576 = C10534 * C1074;
    const double C35891 = C32933 * C1074;
    const double C2639 = C117 * C1535;
    const double C5304 = C5104 * C1535;
    const double C10746 = C10535 * C1535;
    const double C14462 = C10534 * C1535;
    const double C33145 = C32934 * C1535;
    const double C36561 = C32933 * C1535;
    const double C5486 = C5104 * C1819;
    const double C5475 = C5105 * C1819;
    const double C10924 = C10535 * C1819;
    const double C33323 = C32934 * C1819;
    const double C3596 = C50222 * C1191;
    const double C14448 = C50286 * C1191;
    const double C14999 = C50365 * C1191;
    const double C21537 = C5102 * C1191;
    const double C22192 = C5101 * C1191;
    const double C22607 = C5100 * C1191;
    const double C36547 = C50286 * C1191;
    const double C46684 = C43781 * C1191;
    const double C15001 = C50286 * C4504;
    const double C22194 = C5102 * C4504;
    const double C22609 = C5101 * C4504;
    const double C36977 = C50286 * C4504;
    const double C47341 = C43781 * C4504;
    const double C3597 = C117 * C1187;
    const double C14447 = C10535 * C1187;
    const double C15000 = C10534 * C1187;
    const double C21538 = C5105 * C1187;
    const double C22191 = C5104 * C1187;
    const double C36546 = C32934 * C1187;
    const double C36976 = C32933 * C1187;
    const double C15002 = C10535 * C4500;
    const double C22193 = C5105 * C4500;
    const double C22610 = C5104 * C4500;
    const double C36978 = C32934 * C4500;
    const double C5461 =
        (3 * (C49284 + C49271 * C49826 + C49824 * be) +
         C49271 * (2 * C49826 +
                   C49271 * (C49291 + C49271 * (C49271 * C49301 + C49371 * be) +
                             C49271 * C49371 * be) +
                   C49827 * be) +
         (2 * C49824 + C49271 * C49827) * be) /
        C49149;
    const double C175 = C160 - C159;
    const double C173 = C159 - C160;
    const double C618 = C326 - C327;
    const double C2797 = C327 - C326;
    const double C730 = C491 - C492;
    const double C3429 = C2443 - C2444;
    const double C19633 = C2444 - C2443;
    const double C4098 = C3163 - C3164;
    const double C172 = C157 - C158;
    const double C2440 = C324 - C325;
    const double C2432 = C325 - C324;
    const double C2462 = C2435 - C2436;
    const double C137 = (3 * (C49284 + C49291 * C49297) +
                         C49272 * (2 * C49293 + C49272 * C49305)) /
                        C49149;
    const double C297 = (C49441 * (2 * C49293 + C49272 * C49305)) / C49149;
    const double C303 = (C49284 + C49291 * C49297 + C49305 * C49459) / C49149;
    const double C462 = (C49271 * (2 * C49293 + C49272 * C49305) +
                         (2 * C49656 + C49272 * C49658) * be) /
                        C49149;
    const double C468 =
        (C49284 + C49291 * C49297 + C49271 * (C49271 * C49305 + C49658 * be) +
         C49271 * C49658 * be) /
        C49149;
    const double C876 =
        (C49271 * C49441 * C49305 + C49441 * C49658 * be) / C49149;
    const double C1081 =
        (2 * C49441 * C49305 + C49441 * (C49305 + C49321 * C49459)) / C49149;
    const double C49322 = C49272 * C49320;
    const double C49327 = 2 * C49320;
    const double C49507 = C49441 * C49320;
    const double C49521 = C49271 * C49320;
    const double C49315 = C49300 + C49311;
    const double C49834 = C49830 + C49831;
    const double C2448 = C50222 * C1079;
    const double C13575 = C50365 * C1079;
    const double C2640 = C50222 * C1540;
    const double C5303 = C5101 * C1540;
    const double C10745 = C50286 * C1540;
    const double C14461 = C50365 * C1540;
    const double C33144 = C50286 * C1540;
    const double C5485 = C5101 * C1824;
    const double C5476 = C5102 * C1824;
    const double C10923 = C50286 * C1824;
    const double C33322 = C50286 * C1824;
    const double C44143 = C43781 * C1824;
    const double C2451 = C50222 * C2419;
    const double C3422 =
        (4 * (2 * C49441 * C49291 + C49441 * C49785) +
         C49441 *
             (3 * C49785 + C49441 * (2 * C49441 * C49301 +
                                     C49441 * (C49301 + C49317 * C49459)))) /
        C49149;
    const double C49856 = C49854 + C49851;
    const double C49878 = C49271 * C49874;
    const double C49946 = 2 * C49874;
    const double C147 =
        (3 * (C49290 + ae * C49293 + C49272 * C49304) +
         ae * (2 * C49293 + C49272 * C49305) +
         C49272 *
             (2 * C49304 + ae * C49305 +
              C49272 * (C49300 + ae * C49272 * C49301 +
                        C49272 * (ae * C49301 + C49272 * std::pow(C49274, 6) *
                                                    bs[6] * C49283)))) /
        C49153;
    const double C313 =
        ((yP - yQ) * (C49290 + ae * C49293 + C49272 * C49304)) / C49153;
    const double C316 =
        (ae * C49284 + C49272 * C49290 + C49304 * std::pow(yP - yQ, 2)) /
        C49153;
    const double C478 =
        (be * (C49280 * C49277 * C49367 +
               C49272 * (C49272 * C49286 * C49287 * C49367 + C49368 * ae) +
               C49272 * C49368 * ae) +
         C49271 * (C49290 + ae * C49293 + C49272 * C49304)) /
        C49153;
    const double C481 = (ae * C49284 + C49272 * C49290 + be * C49271 * C49379 +
                         C49271 * (be * C49379 + C49271 * C49304)) /
                        C49153;
    const double C883 =
        (be * C49441 * C49379 + C49271 * C49441 * C49304) / C49153;
    const double C1086 = (2 * C49441 * C49304 +
                          C49441 * (C49304 + C49320 * std::pow(C49441, 2))) /
                         C49153;
    const double C3430 = C2445 - C2446;
    const double C19634 = C2446 - C2445;
    const double C4099 = C3165 - C3166;
    const double C49388 = C49272 * C49387;
    const double C49392 = 2 * C49387;
    const double C49453 = C49441 * C49387;
    const double C49520 = be * C49387;
    const double C49519 = C49271 * C49387;
    const double C1547 = (be * (C49379 + C49387 * C49459) +
                          C49271 * (C49304 + C49320 * C49459)) /
                         C49153;
    const double C1831 = (2 * (be * C49379 + C49271 * C49304) +
                          be * (C49379 + C49387 * std::pow(C49271, 2)) +
                          C49271 * (C49304 + be * C49271 * C49387 +
                                    C49271 * (be * C49387 + C49271 * C49320))) /
                         C49153;
    const double C1080 =
        (2 * C49441 * C49379 + C49441 * (C49379 + C49387 * C49459)) / C49149;
    const double C1541 = (C49271 * (C49379 + C49387 * C49459)) / C49149;
    const double C1825 =
        (2 * C49271 * C49379 + C49271 * (C49379 + C49387 * C49514)) / C49149;
    const double C2635 =
        (C49290 + C49300 * C49459 + be * C49271 * C49472 +
         C49271 * (be * C49472 + C49271 * (C49300 + C49316 * C49459))) /
        C49153;
    const double C3153 =
        (be * (2 * C49451 + C49441 * C49472) +
         C49271 * (2 * C49441 * C49300 + C49441 * (C49300 + C49316 * C49459))) /
        C49153;
    const double C4514 =
        (2 * (be * C49472 + C49271 * C49484) +
         be * (C49472 + C49492 * std::pow(C49271, 2)) +
         C49271 *
             (C49484 + be * C49271 * C49492 +
              C49271 * (be * C49492 + C49271 * (C49316 + C49340 * C49459)))) /
        C49153;
    const double C2418 = (3 * (C49375 + C49372 * C49459) +
                          C49441 * (2 * C49451 + C49441 * C49472)) /
                         C49149;
    const double C2630 = (C49375 + C49372 * C49459 + C49472 * C49514) / C49149;
    const double C3148 = (C49271 * (2 * C49451 + C49441 * C49472)) / C49149;
    const double C4509 =
        (2 * C49271 * C49472 + C49271 * (C49472 + C49492 * C49514)) / C49149;
    const double C49542 = C49537 + C49540;
    const double C15005 = C50286 * C4512;
    const double C22200 = C5102 * C4512;
    const double C22615 = C5101 * C4512;
    const double C36981 = C50286 * C4512;
    const double C47347 = C43781 * C4512;
    const double C15006 = C10535 * C4505;
    const double C22199 = C5105 * C4505;
    const double C22616 = C5104 * C4505;
    const double C36982 = C32934 * C4505;
    const double C5467 =
        (3 * (C49290 + be * C49511 + C49271 * C49515) +
         be * (2 * C49511 + C49271 * C49517) +
         C49271 * (2 * C49515 + be * C49517 +
                   C49271 * (C49300 + be * C49271 * C49384 +
                             C49271 * (be * C49384 + C49271 * C49316)))) /
        C49153;
    const double C5462 = (3 * (C49375 + C49372 * C49514) +
                          C49271 * (2 * C49511 + C49271 * C49517)) /
                         C49149;
    const double C49563 = C49271 * C49559;
    const double C49622 = 2 * C49559;
    const double C49562 = C49300 + C49558;
    const double C49403 = C49401 * ae;
    const double C49662 = C49272 * C49401;
    const double C49666 = 3 * C49401;
    const double C49738 = C49441 * C49401;
    const double C49840 = C49271 * C49401;
    const double C49839 = C49401 * be;
    const double C1542 = (C49271 * (C49305 + C49321 * C49459) +
                          (C49658 + C49401 * C49459) * be) /
                         C49149;
    const double C1826 =
        (2 * (C49271 * C49305 + C49658 * be) +
         C49271 * (C49305 + C49271 * (C49271 * C49321 + C49401 * be) +
                   C49271 * C49401 * be) +
         (C49658 + C49401 * C49514) * be) /
        C49149;
    const double C1075 =
        2 * C49441 * C49658 + C49441 * (C49658 + C49401 * C49459);
    const double C1536 = C49271 * (C49658 + C49401 * C49459);
    const double C1820 =
        2 * C49271 * C49658 + C49271 * (C49658 + C49401 * C49514);
    const double C49771 = C49383 + C49770;
    const double C49802 = 2 * C49800;
    const double C49862 = C49271 * C49800;
    const double C49861 = C49800 * be;
    const double C4506 =
        (2 * (C49271 * C49815 + C49735 * be) +
         C49271 * (C49815 + C49271 * (C49271 * C49441 * C49329 + C49800 * be) +
                   C49271 * C49800 * be) +
         (C49735 + C49800 * C49514) * be) /
        C49149;
    const double C4501 =
        2 * C49271 * C49735 + C49271 * (C49735 + C49800 * C49514);
    const double C49835 = C49383 + C49833;
    const double C49892 = 2 * C49887;
    const double C49890 = C49887 * be;
    const double C49889 = C49885 + C49886;
    const double C49404 = C49272 * C49402;
    const double C49413 = 2 * C49402;
    const double C49474 = C49402 * C49459;
    const double C49496 = C49441 * C49402;
    const double C49522 = C49402 * C49514;
    const double C49569 = be * C49402;
    const double C49568 = C49271 * C49402;
    const double C49796 = C49441 * C49795;
    const double C49907 = 3 * C49795;
    const double C49923 = C49271 * C49795;
    const double C49922 = C49795 * be;
    const double C4508 =
        (2 * (C49271 * C49785 + C49767 * be) +
         C49271 *
             (C49785 +
              C49271 * (C49271 * (C49301 + C49317 * C49459) + C49795 * be) +
              C49271 * C49795 * be) +
         (C49767 + C49795 * C49514) * be) /
        C49149;
    const double C4502 =
        2 * C49271 * C49767 + C49271 * (C49767 + C49795 * C49514);
    const double C49857 = C49792 + C49855;
    const double C49936 = 2 * C49931;
    const double C49934 = C49931 * be;
    const double C49937 = C49933 + C49930;
    const double C49879 = C49271 * C49876;
    const double C49952 = 3 * C49876;
    const double C49950 = C49876 * be;
    const double C49957 = C49271 * C49953;
    const double C49347 = C49272 * C49345;
    const double C2421 =
        (3 * (C49305 + C49321 * C49459) +
         C49441 * (2 * C49441 * C49321 + C49441 * (C49321 + C49345 * C49459))) /
        C49149;
    const double C49346 = C49272 * C49344;
    const double C49486 = C49344 * C49459;
    const double C49547 = C49441 * C49344;
    const double C49570 = C49271 * C49344;
    const double C2424 =
        (3 * (C49304 + C49320 * C49459) +
         C49441 * (2 * C49441 * C49320 + C49441 * (C49320 + C49344 * C49459))) /
        C49153;
    const double C49585 = C49441 * C49584;
    const double C49601 = C49271 * C49584;
    const double C49615 = C49607 + C49611;
    const double C49635 = C49271 * C49631;
    const double C49427 = C49272 * C49424;
    const double C49497 = C49424 * C49459;
    const double C49548 = C49441 * C49424;
    const double C49571 = C49424 * C49514;
    const double C49592 = C49441 * C49591;
    const double C49602 = C49591 * C49514;
    const double C49616 = C49539 + C49613;
    const double C49636 = C49271 * C49633;
    const double C2643 = C50222 * C1193;
    const double C5294 = C5102 * C1193;
    const double C6011 = C5101 * C1193;
    const double C11453 = C50286 * C1193;
    const double C13785 = C50365 * C1193;
    const double C33852 = C50286 * C1193;
    const double C43973 = C43781 * C1193;
    const double C2644 = C117 * C1188;
    const double C5293 = C5105 * C1188;
    const double C6012 = C5104 * C1188;
    const double C11454 = C10535 * C1188;
    const double C13786 = C10534 * C1188;
    const double C33853 = C32934 * C1188;
    const double C40683 = C32933 * C1188;
    const double C163 = C117 * C126;
    const double C10562 = C10534 * C126;
    const double C32961 = C32933 * C126;
    const double C330 = C117 * C284;
    const double C11088 = C10534 * C284;
    const double C33487 = C32933 * C284;
    const double C339 = C117 * C287;
    const double C10752 = C10534 * C287;
    const double C33151 = C32933 * C287;
    const double C495 = C117 * C449;
    const double C5134 = C5104 * C449;
    const double C10555 = C10535 * C449;
    const double C11248 = C10534 * C449;
    const double C32954 = C32934 * C449;
    const double C33647 = C32933 * C449;
    const double C504 = C117 * C452;
    const double C5123 = C5105 * C452;
    const double C5802 = C5104 * C452;
    const double C10930 = C10534 * C452;
    const double C10915 = C10535 * C452;
    const double C33329 = C32933 * C452;
    const double C33314 = C32934 * C452;
    const double C893 = C117 * C869;
    const double C5644 = C5104 * C869;
    const double C10737 = C10535 * C869;
    const double C11460 = C10534 * C869;
    const double C33136 = C32934 * C869;
    const double C33859 = C32933 * C869;
    const double C3600 = C50222 * C2629;
    const double C15655 = C50286 * C2629;
    const double C21550 = C5102 * C2629;
    const double C23107 = C5101 * C2629;
    const double C31447 = C50365 * C2629;
    const double C36555 = C50286 * C2629;
    const double C46697 = C43781 * C2629;
    const double C4102 = C50222 * C3147;
    const double C14799 = C50286 * C3147;
    const double C22447 = C5101 * C3147;
    const double C31945 = C50365 * C3147;
    const double C35881 = C50286 * C3147;
    const double C3434 = C117 * C2414;
    const double C31289 = C10534 * C2414;
    const double C36817 = C32933 * C2414;
    const double C3601 = C117 * C2626;
    const double C15656 = C10535 * C2626;
    const double C21549 = C5105 * C2626;
    const double C23108 = C5104 * C2626;
    const double C31448 = C10534 * C2626;
    const double C36554 = C32934 * C2626;
    const double C36984 = C32933 * C2626;
    const double C4103 = C117 * C3144;
    const double C14800 = C10535 * C3144;
    const double C22448 = C5104 * C3144;
    const double C31946 = C10534 * C3144;
    const double C35880 = C32934 * C3144;
    const double C37482 = C32933 * C3144;
    const double C49325 = C49313 + C49323;
    const double C3424 =
        (4 * (2 * C49441 * C49307 + C49441 * C49789) +
         C49441 * (3 * C49789 +
                   C49441 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49459)))) /
        C49149;
    const double C49904 = C49900 + C49903;
    const double C49494 = C49491 + C49493;
    const double C6413 = (3 * (C49451 + C49489 * C49514) +
                          C49271 * (2 * C49536 + C49271 * C49543)) /
                         C49149;
    const double C49614 = C49538 + C49610;
    const double C49566 = C49560 + C49564;
    const double C49428 = C49416 + C49426;
    const double C49775 = C49401 + C49774;
    const double C49843 = C49401 + C49841;
    const double C49804 = C49441 * C49803;
    const double C49867 = C49800 + C49865;
    const double C49894 = C49271 * C49891;
    const double C49912 = C49908 + C49911;
    const double C49926 = C49795 + C49924;
    const double C49940 = C49271 * C49938;
    const double C49960 = C49956 + C49958;
    const double C50377 = C50342 / C50094;
    const double C50379 = C50346 / C50082;
    const double C279 = -C50378;
    const double C50381 = C50354 / C50094;
    const double C50382 = C50356 / C50082;
    const double C997 = -C50380;
    const double C50384 = C50358 / C50094;
    const double C50385 = C50360 / C50082;
    const double C1648 = -C50383;
    const double C50387 = C50367 / C49153;
    const double C50388 = C50369 / C49149;
    const double C16925 = -C50386;
    const double C121 =
        (C49168 / C49154 - (0 * be) / C49149) / C49154 + (0 * ae) / C49149;
    const double C7893 = C49168 / C49154 - (0 * be) / C49149;
    const double C16929 = C49168 / C49154 + (0 * ae) / C49149;
    const double C49170 = C49167 / C49149;
    const double C50392 = C50334 - C50374;
    const double C50393 = C50338 - C50376;
    const double C38442 =
        (C49246 / C49154 - (0 * be) / C49149) / C49154 + (0 * ae) / C49149;
    const double C43784 = C49246 / C49154 - (0 * be) / C49149;
    const double C49245 = C49242 / C49149;
    const double C10570 = C10547 - C10548;
    const double C30399 = C13566 - C13565;
    const double C30397 = C13562 - C13561;
    const double C32969 = C32946 - C32947;
    const double C35901 = C35876 - C35877;
    const double C35899 = C35872 - C35873;
    const double C50402 = C50363 - C50390;
    const double C10573 = C10553 - C10554;
    const double C10571 = C10549 - C10550;
    const double C10569 = C10545 - C10546;
    const double C11083 = C10735 - C10736;
    const double C13987 = C10736 - C10735;
    const double C13557 = C10731 - C10732;
    const double C13553 = C10732 - C10731;
    const double C13555 = C10727 - C10728;
    const double C13551 = C10728 - C10727;
    const double C11243 = C10913 - C10914;
    const double C30398 = C13564 - C13563;
    const double C30396 = C13560 - C13559;
    const double C31286 = C14802 - C14801;
    const double C31284 = C14798 - C14797;
    const double C31943 = C15658 - C15657;
    const double C31941 = C15654 - C15653;
    const double C5132 = C5103 * C125;
    const double C5125 = C5103 * C134;
    const double C5119 = C5103 * C124;
    const double C5114 = C5103 * C132;
    const double C5108 = C5103 * C123;
    const double C5302 = C5103 * C286;
    const double C5295 = C5103 * C294;
    const double C5289 = C5103 * C282;
    const double C5484 = C5103 * C451;
    const double C5477 = C5103 * C459;
    const double C5471 = C5103 * C447;
    const double C5642 = C5103 * C283;
    const double C5800 = C5103 * C448;
    const double C6010 = C5103 * C868;
    const double C21551 = C5103 * C300;
    const double C21545 = C5103 * C285;
    const double C21540 = C5103 * C292;
    const double C21534 = C5103 * C281;
    const double C22195 = C5103 * C873;
    const double C22189 = C5103 * C867;
    const double C22452 = C5103 * C1078;
    const double C22446 = C5103 * C1073;
    const double C22614 = C5103 * C1192;
    const double C22608 = C5103 * C1187;
    const double C23112 = C5103 * C1539;
    const double C23106 = C5103 * C1534;
    const double C50403 = C50372 - C50391;
    const double C32957 = C32931 * C146;
    const double C32953 = C32931 * C135;
    const double C32948 = C32931 * C145;
    const double C32944 = C32931 * C133;
    const double C32940 = C32931 * C144;
    const double C32936 = C32931 * C131;
    const double C33142 = C32931 * C301;
    const double C33135 = C32931 * C295;
    const double C33131 = C32931 * C312;
    const double C33127 = C32931 * C293;
    const double C33320 = C32931 * C466;
    const double C33313 = C32931 * C460;
    const double C33309 = C32931 * C477;
    const double C33305 = C32931 * C458;
    const double C33850 = C32931 * C874;
    const double C35890 = C32931 * C1079;
    const double C35883 = C32931 * C1085;
    const double C35879 = C32931 * C1077;
    const double C35874 = C32931 * C315;
    const double C35870 = C32931 * C299;
    const double C35866 = C32931 * C311;
    const double C35862 = C32931 * C291;
    const double C36560 = C32931 * C1540;
    const double C36557 = C32931 * C1546;
    const double C36553 = C32931 * C1538;
    const double C36549 = C32931 * C882;
    const double C36545 = C32931 * C872;
    const double C36820 = C32931 * C2423;
    const double C36816 = C32931 * C2417;
    const double C36983 = C32931 * C2629;
    const double C36979 = C32931 * C1199;
    const double C36975 = C32931 * C1191;
    const double C37481 = C32931 * C3147;
    const double C40682 = C32931 * C1193;
    const double C20243 = C50222 * C3426;
    const double C19631 = C2461 * C19531;
    const double C162 = C117 * C136;
    const double C5138 = C5103 * C136;
    const double C10557 = C10534 * C136;
    const double C32956 = C32933 * C136;
    const double C328 = C117 * C296;
    const double C5648 = C5103 * C296;
    const double C10739 = C10534 * C296;
    const double C33138 = C32933 * C296;
    const double C337 = C117 * C302;
    const double C5308 = C5103 * C302;
    const double C10748 = C10534 * C302;
    const double C33147 = C32933 * C302;
    const double C493 = C117 * C461;
    const double C5127 = C5104 * C461;
    const double C5806 = C5103 * C461;
    const double C10552 = C10535 * C461;
    const double C10917 = C10534 * C461;
    const double C32951 = C32934 * C461;
    const double C33316 = C32933 * C461;
    const double C502 = C117 * C467;
    const double C5118 = C5105 * C467;
    const double C5490 = C5103 * C467;
    const double C5479 = C5104 * C467;
    const double C10926 = C10534 * C467;
    const double C10911 = C10535 * C467;
    const double C33325 = C32933 * C467;
    const double C33310 = C32934 * C467;
    const double C891 = C117 * C875;
    const double C5297 = C5104 * C875;
    const double C6016 = C5103 * C875;
    const double C10733 = C10535 * C875;
    const double C11456 = C10534 * C875;
    const double C33132 = C32934 * C875;
    const double C33855 = C32933 * C875;
    const double C2441 = C335 - C334;
    const double C2437 = C334 - C335;
    const double C13571 = C10743 - C10744;
    const double C13567 = C10744 - C10743;
    const double C3169 = C888 - C889;
    const double C3161 = C889 - C888;
    const double C13556 = C10729 - C10730;
    const double C13552 = C10730 - C10729;
    const double C14457 = C11451 - C11452;
    const double C14453 = C11452 - C11451;
    const double C40475 = C33128 - C33129;
    const double C40471 = C33129 - C33128;
    const double C20237 = C3429 * C19531;
    const double C19640 = C19633 * C19531;
    const double C20685 = C4098 * C19531;
    const double C2474 = C2462 * C2261;
    const double C19632 = C2462 * C50062;
    const double C24249 = C2462 * C50336;
    const double C164 = C50222 * C137;
    const double C10561 = C50365 * C137;
    const double C32960 = C32931 * C137;
    const double C331 = C50222 * C297;
    const double C11087 = C50365 * C297;
    const double C33486 = C32931 * C297;
    const double C338 = C50222 * C303;
    const double C10751 = C50365 * C303;
    const double C33150 = C32931 * C303;
    const double C496 = C50222 * C462;
    const double C5133 = C5101 * C462;
    const double C10556 = C50286 * C462;
    const double C11247 = C50365 * C462;
    const double C32955 = C50286 * C462;
    const double C33646 = C32931 * C462;
    const double C503 = C50222 * C468;
    const double C5124 = C5102 * C468;
    const double C5801 = C5101 * C468;
    const double C10929 = C50365 * C468;
    const double C10916 = C50286 * C468;
    const double C33328 = C32931 * C468;
    const double C33315 = C50286 * C468;
    const double C43803 = C43781 * C468;
    const double C892 = C50222 * C876;
    const double C5643 = C5101 * C876;
    const double C10738 = C50286 * C876;
    const double C11459 = C50365 * C876;
    const double C33137 = C50286 * C876;
    const double C33858 = C32931 * C876;
    const double C2457 = C50222 * C1081;
    const double C49334 = C49327 + C49328;
    const double C49324 = C49315 + C49322;
    const double C2467 = C2448 - C2447;
    const double C2465 = C2447 - C2448;
    const double C3171 = C2640 - C2639;
    const double C3167 = C2639 - C2640;
    const double C13572 = C10745 - C10746;
    const double C13568 = C10746 - C10745;
    const double C35887 = C33145 - C33144;
    const double C40479 = C33144 - C33145;
    const double C20241 = C50222 * C3422;
    const double C49880 = C49291 + C49878;
    const double C166 = C50222 * C147;
    const double C10565 = C50365 * C147;
    const double C32964 = C32931 * C147;
    const double C329 = C50222 * C313;
    const double C5647 = C5100 * C313;
    const double C10740 = C50365 * C313;
    const double C33139 = C32931 * C313;
    const double C336 = C50222 * C316;
    const double C5307 = C5100 * C316;
    const double C10747 = C50365 * C316;
    const double C33146 = C32931 * C316;
    const double C494 = C50222 * C478;
    const double C5128 = C5101 * C478;
    const double C5805 = C5100 * C478;
    const double C10551 = C50286 * C478;
    const double C10918 = C50365 * C478;
    const double C32950 = C50286 * C478;
    const double C33317 = C32931 * C478;
    const double C501 = C50222 * C481;
    const double C5117 = C5102 * C481;
    const double C5489 = C5100 * C481;
    const double C5480 = C5101 * C481;
    const double C10925 = C50365 * C481;
    const double C10912 = C50286 * C481;
    const double C33324 = C32931 * C481;
    const double C33311 = C50286 * C481;
    const double C43796 = C43781 * C481;
    const double C890 = C50222 * C883;
    const double C5298 = C5101 * C883;
    const double C6015 = C5100 * C883;
    const double C10734 = C50286 * C883;
    const double C11455 = C50365 * C883;
    const double C33133 = C50286 * C883;
    const double C33854 = C32931 * C883;
    const double C2450 = C50222 * C1086;
    const double C13579 = C50365 * C1086;
    const double C35894 = C32931 * C1086;
    const double C3438 = C3430 * C2261;
    const double C20238 = C3430 * C50062;
    const double C25139 = C3430 * C50336;
    const double C19641 = C19634 * C50062;
    const double C4107 = C4099 * C2261;
    const double C20686 = C4099 * C50062;
    const double C25778 = C4099 * C50336;
    const double C49389 = C49372 + C49388;
    const double C1200 = (C49441 * C49304 + be * C49271 * C49453 +
                          C49271 * (be * C49453 + C49271 * C49441 * C49320)) /
                         C49153;
    const double C1194 = (C49441 * C49379 + C49453 * C49514) / C49149;
    const double C49523 = C49520 + C49521;
    const double C2642 = C50222 * C1547;
    const double C5309 = C5101 * C1547;
    const double C10749 = C50286 * C1547;
    const double C14465 = C50365 * C1547;
    const double C33148 = C50286 * C1547;
    const double C36564 = C32931 * C1547;
    const double C5491 = C5101 * C1831;
    const double C5482 = C5102 * C1831;
    const double C10927 = C50286 * C1831;
    const double C33326 = C50286 * C1831;
    const double C44149 = C43781 * C1831;
    const double C2449 = C117 * C1080;
    const double C13580 = C10534 * C1080;
    const double C35895 = C32933 * C1080;
    const double C2641 = C117 * C1541;
    const double C5310 = C5104 * C1541;
    const double C10750 = C10535 * C1541;
    const double C14466 = C10534 * C1541;
    const double C33149 = C32934 * C1541;
    const double C36565 = C32933 * C1541;
    const double C5492 = C5104 * C1825;
    const double C5481 = C5105 * C1825;
    const double C10928 = C10535 * C1825;
    const double C33327 = C32934 * C1825;
    const double C3602 = C50222 * C2635;
    const double C15659 = C50286 * C2635;
    const double C21556 = C5102 * C2635;
    const double C23113 = C5101 * C2635;
    const double C31451 = C50365 * C2635;
    const double C36559 = C50286 * C2635;
    const double C36987 = C32931 * C2635;
    const double C46703 = C43781 * C2635;
    const double C4104 = C50222 * C3153;
    const double C14803 = C50286 * C3153;
    const double C22453 = C5101 * C3153;
    const double C31949 = C50365 * C3153;
    const double C35885 = C50286 * C3153;
    const double C37485 = C32931 * C3153;
    const double C23115 = C5102 * C4514;
    const double C31453 = C50286 * C4514;
    const double C36989 = C50286 * C4514;
    const double C48258 = C43781 * C4514;
    const double C3436 = C117 * C2418;
    const double C31293 = C10534 * C2418;
    const double C36821 = C32933 * C2418;
    const double C3603 = C117 * C2630;
    const double C15660 = C10535 * C2630;
    const double C21555 = C5105 * C2630;
    const double C23114 = C5104 * C2630;
    const double C31452 = C10534 * C2630;
    const double C36558 = C32934 * C2630;
    const double C36988 = C32933 * C2630;
    const double C4105 = C117 * C3148;
    const double C14804 = C10535 * C3148;
    const double C22454 = C5104 * C3148;
    const double C31950 = C10534 * C3148;
    const double C35884 = C32934 * C3148;
    const double C37486 = C32933 * C3148;
    const double C23116 = C5105 * C4509;
    const double C31454 = C10535 * C4509;
    const double C36990 = C32934 * C4509;
    const double C6416 =
        (3 * (C49505 + be * C49536 + C49271 * C49542) +
         be * (2 * C49536 + C49271 * C49543) +
         C49271 *
             (2 * C49542 + be * C49543 +
              C49271 * (C49538 + be * C49271 * C49539 +
                        C49271 * (be * C49539 + C49271 * C49441 * C49340)))) /
        C49153;
    const double C49629 = C49622 + C49623;
    const double C49565 = C49562 + C49563;
    const double C49663 = C49661 + C49662;
    const double C1195 =
        (C49441 * C49305 + C49271 * (C49271 * C49441 * C49321 + C49738 * be) +
         C49271 * C49738 * be) /
        C49149;
    const double C6005 =
        (2 * (C49271 * C49846 + C49738 * be) +
         C49271 * (C49846 + C49271 * (C49271 * C49441 * C49345 + C49847 * be) +
                   C49271 * C49847 * be) +
         (C49738 + C49847 * C49514) * be) /
        C49149;
    const double C1189 = C49441 * C49658 + C49738 * C49514;
    const double C6004 =
        2 * C49271 * C49738 + C49271 * (C49738 + C49847 * C49514);
    const double C49842 = C49838 + C49839;
    const double C2947 = C50222 * C1542;
    const double C10753 = C50286 * C1542;
    const double C33152 = C50286 * C1542;
    const double C5803 = C5102 * C1826;
    const double C10931 = C50286 * C1826;
    const double C33330 = C50286 * C1826;
    const double C44470 = C43781 * C1826;
    const double C2458 = C117 * C1075;
    const double C2948 = C117 * C1536;
    const double C10754 = C10535 * C1536;
    const double C33153 = C32934 * C1536;
    const double C5804 = C5105 * C1820;
    const double C10932 = C10535 * C1820;
    const double C33331 = C32934 * C1820;
    const double C2631 =
        (C49293 + C49307 * C49459 +
         C49271 * (C49271 * (C49307 + C49329 * C49459) + C49771 * be) +
         C49271 * C49771 * be) /
        C49149;
    const double C3149 =
        (C49271 * (2 * C49441 * C49307 + C49441 * (C49307 + C49329 * C49459)) +
         (2 * C49735 + C49441 * C49771) * be) /
        C49149;
    const double C4510 =
        (2 * (C49271 * C49789 + C49771 * be) +
         C49271 * (C49789 +
                   C49271 * (C49271 * (C49329 + C49272 * C49341 * C49459) +
                             C49803 * be) +
                   C49271 * C49803 * be) +
         (C49771 + C49803 * C49514) * be) /
        C49149;
    const double C2415 = 3 * (C49656 + C49383 * C49459) +
                         C49441 * (2 * C49735 + C49441 * C49771);
    const double C2627 = C49656 + C49383 * C49459 + C49771 * C49514;
    const double C3145 = C49271 * (2 * C49735 + C49441 * C49771);
    const double C4503 =
        2 * C49271 * C49771 + C49271 * (C49771 + C49803 * C49514);
    const double C49866 = C49864 + C49861;
    const double C6013 = C5102 * C4506;
    const double C13787 = C50286 * C4506;
    const double C40684 = C50286 * C4506;
    const double C44676 = C43781 * C4506;
    const double C6014 = C5105 * C4501;
    const double C13788 = C10535 * C4501;
    const double C40685 = C32934 * C4501;
    const double C5463 =
        (3 * (C49293 + C49271 * C49834 + C49832 * be) +
         C49271 * (2 * C49834 +
                   C49271 * (C49307 + C49271 * (C49271 * C49329 + C49397 * be) +
                             C49271 * C49397 * be) +
                   C49835 * be) +
         (2 * C49832 + C49271 * C49835) * be) /
        C49149;
    const double C5459 = 3 * (C49656 + C49383 * C49514) +
                         C49271 * (2 * C49832 + C49271 * C49835);
    const double C49893 = C49271 * C49889;
    const double C49405 = C49384 + C49404;
    const double C49475 = C49387 + C49474;
    const double C49498 = 2 * C49496;
    const double C49546 = be * C49496;
    const double C49545 = C49271 * C49496;
    const double C4513 =
        (2 * (be * C49453 + C49271 * C49507) +
         be * (C49453 + C49496 * std::pow(C49271, 2)) +
         C49271 * (C49507 + be * C49271 * C49496 +
                   C49271 * (be * C49496 + C49271 * C49441 * C49344))) /
        C49153;
    const double C4507 =
        (2 * C49271 * C49453 + C49271 * (C49453 + C49496 * C49514)) / C49149;
    const double C49524 = C49387 + C49522;
    const double C49574 = 2 * C49568;
    const double C49572 = be * C49568;
    const double C49797 = C49794 + C49796;
    const double C49925 = C49921 + C49922;
    const double C23109 = C5102 * C4508;
    const double C31449 = C50286 * C4508;
    const double C36985 = C50286 * C4508;
    const double C48252 = C43781 * C4508;
    const double C23110 = C5105 * C4502;
    const double C31450 = C10535 * C4502;
    const double C36986 = C32934 * C4502;
    const double C6412 =
        (3 * (C49812 + C49271 * C49856 + C49852 * be) +
         C49271 * (2 * C49856 +
                   C49271 * (C49850 +
                             C49271 * (C49271 * C49441 * C49317 + C49853 * be) +
                             C49271 * C49853 * be) +
                   C49857 * be) +
         (2 * C49852 + C49271 * C49857) * be) /
        C49149;
    const double C6410 = 3 * (C49732 + C49792 * C49514) +
                         C49271 * (2 * C49852 + C49271 * C49857);
    const double C49939 = C49271 * C49937;
    const double C49881 = C49877 + C49879;
    const double C49959 = C49301 + C49957;
    const double C49349 = C49337 + C49347;
    const double C49348 = C49339 + C49346;
    const double C49487 = C49320 + C49486;
    const double C49549 = C49271 * C49547;
    const double C49573 = C49569 + C49570;
    const double C2453 = C50222 * C2424;
    const double C49586 = C49582 + C49585;
    const double C49603 = C49600 + C49601;
    const double C49617 = C49271 * C49615;
    const double C49637 = C49634 + C49635;
    const double C49429 = C49395 + C49427;
    const double C49499 = C49402 + C49497;
    const double C49550 = C49548 * C49514;
    const double C49575 = C49402 + C49571;
    const double C49593 = C49589 + C49592;
    const double C49604 = C49492 + C49602;
    const double C49618 = C49271 * C49616;
    const double C49638 = C49632 + C49636;
    const double C14458 = C11453 - C11454;
    const double C14454 = C11454 - C11453;
    const double C41347 = C33852 - C33853;
    const double C41343 = C33853 - C33852;
    const double C20239 = C3434 - C3433;
    const double C31942 = C15656 - C15655;
    const double C37478 = C36554 - C36555;
    const double C20687 = C4103 - C4102;
    const double C31285 = C14800 - C14799;
    const double C36813 = C35880 - C35881;
    const double C139 = (4 * (2 * C49293 + C49272 * C49305) +
                         C49272 * (3 * C49305 + C49272 * C49325)) /
                        C49149;
    const double C305 =
        (2 * C49293 + C49272 * C49305 + C49325 * C49459) / C49149;
    const double C307 = (C49441 * (3 * C49305 + C49272 * C49325)) / C49149;
    const double C20233 =
        (5 * (3 * C49785 + C49441 * C49904) +
         C49441 * (4 * C49904 +
                   C49441 * (3 * C49902 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459))))) /
        C49149;
    const double C3593 =
        (2 * C49441 * C49300 + C49441 * C49484 + be * C49271 * C49494 +
         C49271 *
             (be * C49494 + C49271 * (2 * C49441 * C49316 +
                                      C49441 * (C49316 + C49340 * C49459)))) /
        C49153;
    const double C4095 =
        (be * (3 * C49472 + C49441 * C49494) +
         C49271 *
             (3 * C49484 + C49441 * (2 * C49441 * C49316 +
                                     C49441 * (C49316 + C49340 * C49459)))) /
        C49153;
    const double C3423 = (4 * (2 * C49451 + C49441 * C49472) +
                          C49441 * (3 * C49472 + C49441 * C49494)) /
                         C49149;
    const double C3590 =
        (2 * C49451 + C49441 * C49472 + C49494 * C49514) / C49149;
    const double C4092 = (C49271 * (3 * C49472 + C49441 * C49494)) / C49149;
    const double C22618 = C5105 * C6413;
    const double C7297 = (4 * (2 * C49511 + C49271 * C49517) +
                          C49271 * (3 * C49517 + C49271 * C49566)) /
                         C49149;
    const double C49430 = C49428 * ae;
    const double C49667 = C49272 * C49428;
    const double C49741 = C49441 * C49428;
    const double C2633 =
        (C49305 + C49321 * C49459 +
         C49271 * (C49271 * (C49321 + C49345 * C49459) + C49775 * be) +
         C49271 * C49775 * be) /
        C49149;
    const double C3151 =
        (C49271 * (2 * C49441 * C49321 + C49441 * (C49321 + C49345 * C49459)) +
         (2 * C49738 + C49441 * C49775) * be) /
        C49149;
    const double C2416 = 3 * (C49658 + C49401 * C49459) +
                         C49441 * (2 * C49738 + C49441 * C49775);
    const double C2628 = C49658 + C49401 * C49459 + C49775 * C49514;
    const double C3146 = C49271 * (2 * C49738 + C49441 * C49775);
    const double C5460 = 3 * (C49658 + C49401 * C49514) +
                         C49271 * (2 * C49840 + C49271 * C49843);
    const double C49805 = C49802 + C49804;
    const double C6411 = 3 * (C49735 + C49800 * C49514) +
                         C49271 * (2 * C49862 + C49271 * C49867);
    const double C49896 = C49892 + C49894;
    const double C49913 = C49441 * C49912;
    const double C22602 = 3 * (C49767 + C49795 * C49514) +
                          C49271 * (2 * C49923 + C49271 * C49926);
    const double C49942 = C49936 + C49940;
    const double C49962 = C49271 * C49960;
    const double C50394 = C50341 - C50377;
    const double C50395 = C50345 - C50379;
    const double C50396 = C50348 - C50381;
    const double C50397 = C50355 - C50382;
    const double C50398 = C50350 - C50384;
    const double C50399 = C50359 - C50385;
    const double C50400 = C50361 - C50387;
    const double C50401 = C50368 - C50388;
    const double C49172 = C50062 - C49170;
    const double C106 = (C50392 * C50057) / C49149 + (C50336 - C50375) / C49154;
    const double C107 =
        (C50393 * C50057) / C49149 + (2 * C50067 + C50392) / C49154;
    const double C108 = (C50057 * C50067) / C49158 + C50393 / C49154;
    const double C43802 = C43784 * C452;
    const double C43797 = C43784 * C467;
    const double C43791 = C43784 * C451;
    const double C43972 = C43784 * C1188;
    const double C44148 = C43784 * C1825;
    const double C44142 = C43784 * C1819;
    const double C44471 = C43784 * C1820;
    const double C44677 = C43784 * C4501;
    const double C46702 = C43784 * C2630;
    const double C46696 = C43784 * C2626;
    const double C46691 = C43784 * C1192;
    const double C46685 = C43784 * C1187;
    const double C47346 = C43784 * C4505;
    const double C47340 = C43784 * C4500;
    const double C47761 = C43784 * C6413;
    const double C48259 = C43784 * C4509;
    const double C48253 = C43784 * C4502;
    const double C49248 = C50222 - C49245;
    const double C43816 = C50402 * C146;
    const double C43810 = C50402 * C135;
    const double C43805 = C50402 * C145;
    const double C43799 = C50402 * C133;
    const double C43792 = C50402 * C144;
    const double C43786 = C50402 * C131;
    const double C43986 = C50402 * C316;
    const double C43980 = C50402 * C301;
    const double C43975 = C50402 * C312;
    const double C43969 = C50402 * C293;
    const double C44156 = C50402 * C481;
    const double C44150 = C50402 * C466;
    const double C44145 = C50402 * C477;
    const double C44139 = C50402 * C458;
    const double C44314 = C50402 * C313;
    const double C44308 = C50402 * C295;
    const double C44472 = C50402 * C478;
    const double C44466 = C50402 * C460;
    const double C44678 = C50402 * C883;
    const double C44672 = C50402 * C874;
    const double C46699 = C50402 * C315;
    const double C46693 = C50402 * C299;
    const double C46686 = C50402 * C311;
    const double C46680 = C50402 * C291;
    const double C47343 = C50402 * C882;
    const double C47337 = C50402 * C872;
    const double C47598 = C50402 * C1085;
    const double C47592 = C50402 * C1077;
    const double C47756 = C50402 * C1199;
    const double C47750 = C50402 * C1191;
    const double C48254 = C50402 * C1546;
    const double C48248 = C50402 * C1538;
    const double C38435 =
        (C50402 * C50281) / C49149 + (C50365 - C50389) / C49154;
    const double C10577 = C10569 + C10570;
    const double C30403 = C30398 + C30399;
    const double C30402 = C30396 + C30397;
    const double C43812 = C50403 * C462;
    const double C43807 = C50403 * C478;
    const double C43801 = C50403 * C460;
    const double C43794 = C50403 * C477;
    const double C43788 = C50403 * C458;
    const double C43988 = C50403 * C1547;
    const double C43982 = C50403 * C1540;
    const double C43977 = C50403 * C883;
    const double C43971 = C50403 * C874;
    const double C44158 = C50403 * C1831;
    const double C44152 = C50403 * C1824;
    const double C44147 = C50403 * C481;
    const double C44141 = C50403 * C466;
    const double C44310 = C50403 * C876;
    const double C44468 = C50403 * C468;
    const double C44674 = C50403 * C1193;
    const double C46701 = C50403 * C1546;
    const double C46695 = C50403 * C1538;
    const double C46688 = C50403 * C882;
    const double C46682 = C50403 * C872;
    const double C47345 = C50403 * C1199;
    const double C47339 = C50403 * C1191;
    const double C47600 = C50403 * C3153;
    const double C47594 = C50403 * C3147;
    const double C47758 = C50403 * C4512;
    const double C47752 = C50403 * C4504;
    const double C48256 = C50403 * C2635;
    const double C48250 = C50403 * C2629;
    const double C38436 =
        (C50403 * C50281) / C49149 + (2 * C50286 + C50402) / C49154;
    const double C38437 = (C50281 * C50286) / C49158 + C50403 / C49154;
    const double C32972 = C32952 - C32953;
    const double C32970 = C32948 - C32949;
    const double C32968 = C32944 - C32945;
    const double C35886 = C33143 - C33142;
    const double C40478 = C33142 - C33143;
    const double C33482 = C33134 - C33135;
    const double C40884 = C33135 - C33134;
    const double C40476 = C33130 - C33131;
    const double C40472 = C33131 - C33130;
    const double C40474 = C33126 - C33127;
    const double C40470 = C33127 - C33126;
    const double C33642 = C33312 - C33313;
    const double C41346 = C33850 - C33851;
    const double C41342 = C33851 - C33850;
    const double C36814 = C35882 - C35883;
    const double C36812 = C35878 - C35879;
    const double C35900 = C35874 - C35875;
    const double C35898 = C35870 - C35871;
    const double C37479 = C36556 - C36557;
    const double C37477 = C36552 - C36553;
    const double C176 = C162 - C161;
    const double C174 = C161 - C162;
    const double C10575 = C10557 - C10558;
    const double C32974 = C32956 - C32957;
    const double C19635 = C2441 * C19531;
    const double C2463 = C2437 * C2267;
    const double C24250 = C2437 * C49168;
    const double C13585 = C13555 + C13556;
    const double C13583 = C13551 + C13552;
    const double C19639 = C19631 + C19632;
    const double C177 = C163 - C164;
    const double C620 = C330 - C331;
    const double C8337 = C331 - C330;
    const double C2455 = C339 - C338;
    const double C2799 = C338 - C339;
    const double C732 = C495 - C496;
    const double C10574 = C10555 - C10556;
    const double C32973 = C32954 - C32955;
    const double C11244 = C10915 - C10916;
    const double C33643 = C33314 - C33315;
    const double C8485 = C893 - C892;
    const double C8681 = C892 - C893;
    const double C11084 = C10737 - C10738;
    const double C13988 = C10738 - C10737;
    const double C33483 = C33136 - C33137;
    const double C40885 = C33137 - C33136;
    const double C148 =
        (4 * (2 * C49304 + ae * C49305 + C49272 * C49324) +
         ae * (3 * C49305 + C49272 * C49325) +
         C49272 * (3 * C49324 + ae * C49325 +
                   C49272 * (2 * C49320 + ae * C49321 +
                             C49272 * (C49316 + ae * C49272 * C49317 +
                                       C49272 * (ae * C49317 +
                                                 C49272 * std::pow(C49276, 7) *
                                                     bs[7] * C49283))))) /
        C49153;
    const double C314 =
        ((yP - yQ) * (2 * C49304 + ae * C49305 + C49272 * C49324)) / C49153;
    const double C317 = (C49290 + ae * C49293 + C49272 * C49304 +
                         C49324 * std::pow(yP - yQ, 2)) /
                        C49153;
    const double C479 =
        (be * (2 * (C49272 * C49372 + C49368 * ae) +
               C49272 *
                   (C49372 +
                    C49272 * (C49272 * C49295 * C49296 * C49367 + C49371 * ae) +
                    C49272 * C49371 * ae) +
               (C49368 + C49371 * C49297) * ae) +
         C49271 * (2 * C49304 + ae * C49305 + C49272 * C49324)) /
        C49153;
    const double C3431 = C2465 * C2267;
    const double C19637 = C2465 * C19531;
    const double C25140 = C2465 * C49168;
    const double C4100 = C3167 * C2267;
    const double C25779 = C3167 * C49168;
    const double C13589 = C13571 + C13572;
    const double C13587 = C13567 + C13568;
    const double C49882 = C49880 + C49875;
    const double C619 = C328 - C329;
    const double C2798 = C329 - C328;
    const double C11085 = C10739 - C10740;
    const double C13989 = C10740 - C10739;
    const double C33484 = C33138 - C33139;
    const double C40886 = C33139 - C33138;
    const double C2442 = C337 - C336;
    const double C2438 = C336 - C337;
    const double C13573 = C10747 - C10748;
    const double C13569 = C10748 - C10747;
    const double C35888 = C33147 - C33146;
    const double C40480 = C33146 - C33147;
    const double C731 = C493 - C494;
    const double C10572 = C10551 - C10552;
    const double C11245 = C10917 - C10918;
    const double C32971 = C32950 - C32951;
    const double C33644 = C33316 - C33317;
    const double C3170 = C890 - C891;
    const double C3162 = C891 - C890;
    const double C13558 = C10733 - C10734;
    const double C13554 = C10734 - C10733;
    const double C14459 = C11455 - C11456;
    const double C14455 = C11456 - C11455;
    const double C40477 = C33132 - C33133;
    const double C40473 = C33133 - C33132;
    const double C41348 = C33854 - C33855;
    const double C41344 = C33855 - C33854;
    const double C20245 = C20237 + C20238;
    const double C19644 = C19640 + C19641;
    const double C20693 = C20685 + C20686;
    const double C49390 = C49389 + C49385;
    const double C2645 = C50222 * C1200;
    const double C5300 = C5102 * C1200;
    const double C6017 = C5101 * C1200;
    const double C11457 = C50286 * C1200;
    const double C13789 = C50365 * C1200;
    const double C33856 = C50286 * C1200;
    const double C40686 = C32931 * C1200;
    const double C43979 = C43781 * C1200;
    const double C44680 = C50403 * C1200;
    const double C2646 = C117 * C1194;
    const double C5299 = C5105 * C1194;
    const double C6018 = C5104 * C1194;
    const double C11458 = C10535 * C1194;
    const double C13790 = C10534 * C1194;
    const double C33857 = C32934 * C1194;
    const double C40687 = C32933 * C1194;
    const double C43978 = C43784 * C1194;
    const double C2468 = C2450 - C2449;
    const double C2466 = C2449 - C2450;
    const double C3172 = C2642 - C2641;
    const double C3168 = C2641 - C2642;
    const double C13574 = C10749 - C10750;
    const double C13570 = C10750 - C10749;
    const double C35889 = C33149 - C33148;
    const double C40481 = C33148 - C33149;
    const double C20240 = C3436 - C3435;
    const double C31944 = C15660 - C15659;
    const double C37480 = C36558 - C36559;
    const double C20688 = C4105 - C4104;
    const double C31287 = C14804 - C14803;
    const double C36815 = C35884 - C35885;
    const double C22617 = C5102 * C6416;
    const double C47760 = C43781 * C6416;
    const double C7300 =
        (4 * (2 * C49515 + be * C49517 + C49271 * C49565) +
         be * (3 * C49517 + C49271 * C49566) +
         C49271 *
             (3 * C49565 + be * C49566 +
              C49271 * (2 * C49559 + be * C49561 +
                        C49271 * (C49316 + be * C49271 * C49395 +
                                  C49271 * (be * C49395 + C49271 * C49340))))) /
        C49153;
    const double C470 =
        (2 * C49293 + C49272 * C49305 +
         C49271 * (C49271 * C49325 + C49663 * be) + C49271 * C49663 * be) /
        C49149;
    const double C472 = (C49271 * (3 * C49305 + C49272 * C49325) +
                         (3 * C49658 + C49272 * C49663) * be) /
                        C49149;
    const double C878 =
        (C49271 * C49441 * C49325 + C49441 * C49663 * be) / C49149;
    const double C127 = 4 * (2 * C49656 + C49272 * C49658) +
                        C49272 * (3 * C49658 + C49272 * C49663);
    const double C288 = 2 * C49656 + C49272 * C49658 + C49663 * C49459;
    const double C289 = C49441 * (3 * C49658 + C49272 * C49663);
    const double C453 = 2 * C49656 + C49272 * C49658 + C49663 * C49514;
    const double C454 = C49271 * (3 * C49658 + C49272 * C49663);
    const double C870 = C49271 * C49441 * C49663;
    const double C1076 =
        2 * C49441 * C49663 + C49441 * (C49663 + C49428 * C49459);
    const double C1537 = C49271 * (C49663 + C49428 * C49459);
    const double C1821 =
        2 * C49271 * C49663 + C49271 * (C49663 + C49428 * C49514);
    const double C5645 = C5102 * C1195;
    const double C8187 = C50222 * C1195;
    const double C11461 = C50286 * C1195;
    const double C33860 = C50286 * C1195;
    const double C44312 = C43781 * C1195;
    const double C5646 = C5105 * C1189;
    const double C8188 = C117 * C1189;
    const double C11462 = C10535 * C1189;
    const double C33861 = C32934 * C1189;
    const double C44313 = C43784 * C1189;
    const double C5465 =
        (3 * (C49305 + C49271 * C49842 + C49840 * be) +
         C49271 * (2 * C49842 +
                   C49271 * (C49321 + C49271 * (C49271 * C49345 + C49423 * be) +
                             C49271 * C49423 * be) +
                   C49843 * be) +
         (2 * C49840 + C49271 * C49843) * be) /
        C49149;
    const double C2647 = C50222 * C2631;
    const double C5305 = C5102 * C2631;
    const double C14463 = C50286 * C2631;
    const double C36562 = C50286 * C2631;
    const double C43984 = C43781 * C2631;
    const double C3173 = C50222 * C3149;
    const double C13577 = C50286 * C3149;
    const double C35892 = C50286 * C3149;
    const double C2452 = C117 * C2415;
    const double C2648 = C117 * C2627;
    const double C5306 = C5105 * C2627;
    const double C14464 = C10535 * C2627;
    const double C36563 = C32934 * C2627;
    const double C43985 = C43784 * C2627;
    const double C3174 = C117 * C3145;
    const double C13578 = C10535 * C3145;
    const double C35893 = C32934 * C3145;
    const double C6414 =
        (3 * (C49815 + C49271 * C49866 + C49862 * be) +
         C49271 * (2 * C49866 +
                   C49271 * (C49860 +
                             C49271 * (C49271 * C49441 * C49272 * C49341 +
                                       C49863 * be) +
                             C49271 * C49863 * be) +
                   C49867 * be) +
         (2 * C49862 + C49271 * C49867) * be) /
        C49149;
    const double C5487 = C5102 * C5463;
    const double C44154 = C43781 * C5463;
    const double C5488 = C5105 * C5459;
    const double C44155 = C43784 * C5459;
    const double C49895 = C49307 + C49893;
    const double C49406 = C49405 + C49400;
    const double C2636 =
        (C49304 + C49320 * C49459 + be * C49271 * C49475 +
         C49271 * (be * C49475 + C49271 * (C49320 + C49344 * C49459))) /
        C49153;
    const double C3154 =
        (be * (2 * C49453 + C49441 * C49475) +
         C49271 * (2 * C49441 * C49320 + C49441 * (C49320 + C49344 * C49459))) /
        C49153;
    const double C2420 = (3 * (C49379 + C49387 * C49459) +
                          C49441 * (2 * C49453 + C49441 * C49475)) /
                         C49149;
    const double C2632 = (C49379 + C49387 * C49459 + C49475 * C49514) / C49149;
    const double C3150 = (C49271 * (2 * C49453 + C49441 * C49475)) / C49149;
    const double C6019 = C5102 * C4513;
    const double C13791 = C50286 * C4513;
    const double C40688 = C50286 * C4513;
    const double C44682 = C43781 * C4513;
    const double C6020 = C5105 * C4507;
    const double C13792 = C10535 * C4507;
    const double C40689 = C32934 * C4507;
    const double C44683 = C43784 * C4507;
    const double C5468 =
        (3 * (C49304 + be * C49519 + C49271 * C49523) +
         be * (2 * C49519 + C49271 * C49524) +
         C49271 * (2 * C49523 + be * C49524 +
                   C49271 * (C49320 + be * C49271 * C49402 +
                             C49271 * (be * C49402 + C49271 * C49344)))) /
        C49153;
    const double C5464 = (3 * (C49379 + C49387 * C49514) +
                          C49271 * (2 * C49519 + C49271 * C49524)) /
                         C49149;
    const double C49576 = C49320 + C49572;
    const double C3589 =
        (2 * C49441 * C49291 + C49441 * C49785 +
         C49271 * (C49271 * (2 * C49441 * C49301 +
                             C49441 * (C49301 + C49317 * C49459)) +
                   C49797 * be) +
         C49271 * C49797 * be) /
        C49149;
    const double C4091 =
        (C49271 *
             (3 * C49785 + C49441 * (2 * C49441 * C49301 +
                                     C49441 * (C49301 + C49317 * C49459))) +
         (3 * C49767 + C49441 * C49797) * be) /
        C49149;
    const double C20959 =
        (2 * (C49271 * C49904 + C49797 * be) +
         C49271 * (C49904 +
                   C49271 * (C49271 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459)) +
                             C49912 * be) +
                   C49271 * C49912 * be) +
         (C49797 + C49912 * C49514) * be) /
        C49149;
    const double C3420 = 4 * (2 * C49732 + C49441 * C49767) +
                         C49441 * (3 * C49767 + C49441 * C49797);
    const double C3587 = 2 * C49732 + C49441 * C49767 + C49797 * C49514;
    const double C4089 = C49271 * (3 * C49767 + C49441 * C49797);
    const double C20958 =
        2 * C49271 * C49797 + C49271 * (C49797 + C49912 * C49514);
    const double C22603 =
        (3 * (C49785 + C49271 * C49925 + C49923 * be) +
         C49271 * (2 * C49925 +
                   C49271 * (C49902 +
                             C49271 * (C49271 * (C49317 + C49341 * C49459) +
                                       C49910 * be) +
                             C49271 * C49910 * be) +
                   C49926 * be) +
         (2 * C49923 + C49271 * C49926) * be) /
        C49149;
    const double C22611 = C5102 * C6412;
    const double C47754 = C43781 * C6412;
    const double C22612 = C5105 * C6410;
    const double C47755 = C43784 * C6410;
    const double C49941 = C49850 + C49939;
    const double C7294 = 4 * (2 * C49824 + C49271 * C49827) +
                         C49271 * (3 * C49827 + C49271 * C49881);
    const double C49961 = C49959 + C49954;
    const double C49351 = C49272 * C49349;
    const double C1083 =
        (2 * C49441 * C49325 + C49441 * (C49325 + C49349 * C49459)) / C49149;
    const double C1544 = (C49271 * (C49325 + C49349 * C49459) +
                          (C49663 + C49428 * C49459) * be) /
                         C49149;
    const double C1828 =
        (2 * (C49271 * C49325 + C49663 * be) +
         C49271 * (C49325 + C49271 * (C49271 * C49349 + C49428 * be) +
                   C49271 * C49428 * be) +
         (C49663 + C49428 * C49514) * be) /
        C49149;
    const double C49350 = C49272 * C49348;
    const double C49528 = C49271 * C49348;
    const double C49533 = C49441 * C49348;
    const double C1087 = (2 * C49441 * C49324 +
                          C49441 * (C49324 + C49348 * std::pow(C49441, 2))) /
                         C49153;
    const double C2425 =
        (3 * (C49324 + C49348 * C49459) +
         C49441 * (2 * C49441 * C49348 +
                   C49441 * (C49348 + (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49459))) /
        C49153;
    const double C3427 =
        (4 * (2 * C49441 * C49320 + C49441 * C49487) +
         C49441 * (3 * C49487 +
                   C49441 * (2 * C49441 * C49344 +
                             C49441 * (C49344 + (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49153;
    const double C49551 = C49546 + C49549;
    const double C49577 = C49271 * C49573;
    const double C20235 =
        (5 * (3 * C49484 + C49441 * C49586) +
         C49441 * (4 * C49586 +
                   C49441 * (3 * C49584 +
                             C49441 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49153;
    const double C49619 = C49614 + C49617;
    const double C49639 = C49271 * C49637;
    const double C49431 = C49429 + C49422;
    const double C49500 = C49441 * C49499;
    const double C4515 =
        (2 * (be * C49475 + C49271 * C49487) +
         be * (C49475 + C49499 * std::pow(C49271, 2)) +
         C49271 * (C49487 + be * C49271 * C49499 +
                   C49271 * (be * C49499 +
                             C49271 * (C49344 + (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49153;
    const double C4511 =
        (2 * C49271 * C49475 + C49271 * (C49475 + C49499 * C49514)) / C49149;
    const double C49552 = C49496 + C49550;
    const double C49578 = C49271 * C49575;
    const double C49594 = C49441 * C49593;
    const double C20961 =
        (2 * (be * C49494 + C49271 * C49586) + be * (C49494 + C49593 * C49514) +
         C49271 * (C49586 + be * C49271 * C49593 +
                   C49271 * (be * C49593 +
                             C49271 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49153;
    const double C20960 =
        (2 * C49271 * C49494 + C49271 * (C49494 + C49593 * C49514)) / C49149;
    const double C22605 =
        (3 * (C49484 + be * C49599 + C49271 * C49603) +
         be * (2 * C49599 + C49271 * C49604) +
         C49271 * (2 * C49603 + be * C49604 +
                   C49271 * (C49584 + be * C49271 * C49591 +
                             C49271 * (be * C49591 +
                                       C49271 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49153;
    const double C22604 = (3 * (C49472 + C49492 * C49514) +
                           C49271 * (2 * C49599 + C49271 * C49604)) /
                          C49149;
    const double C49620 = C49612 + C49618;
    const double C49640 = C49271 * C49638;
    const double C14471 = C14457 + C14458;
    const double C14469 = C14453 + C14454;
    const double C20246 = C20239 * C19531;
    const double C31953 = C31941 + C31942;
    const double C20694 = C20687 * C19531;
    const double C31296 = C31284 + C31285;
    const double C167 = C50222 * C139;
    const double C342 = C50222 * C305;
    const double C622 = C50222 * C307;
    const double C20353 = C50222 * C3593;
    const double C22455 = C5102 * C3593;
    const double C31951 = C50286 * C3593;
    const double C37487 = C50286 * C3593;
    const double C47602 = C43781 * C3593;
    const double C20691 = C50222 * C4095;
    const double C31294 = C50286 * C4095;
    const double C36822 = C50286 * C4095;
    const double C20244 = C117 * C3423;
    const double C20354 = C117 * C3590;
    const double C22456 = C5105 * C3590;
    const double C31952 = C10535 * C3590;
    const double C37488 = C32934 * C3590;
    const double C47603 = C43784 * C3590;
    const double C20692 = C117 * C4092;
    const double C31295 = C10535 * C4092;
    const double C36823 = C32934 * C4092;
    const double C49668 = C49666 + C49667;
    const double C1197 =
        (C49441 * C49325 + C49271 * (C49271 * C49441 * C49349 + C49741 * be) +
         C49271 * C49741 * be) /
        C49149;
    const double C1190 = C49441 * C49663 + C49741 * C49514;
    const double C3591 =
        (2 * C49441 * C49307 + C49441 * C49789 +
         C49271 * (C49271 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49459)) +
                   C49805 * be) +
         C49271 * C49805 * be) /
        C49149;
    const double C4093 =
        (C49271 * (3 * C49789 +
                   C49441 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49459))) +
         (3 * C49771 + C49441 * C49805) * be) /
        C49149;
    const double C3421 = 4 * (2 * C49735 + C49441 * C49771) +
                         C49441 * (3 * C49771 + C49441 * C49805);
    const double C3588 = 2 * C49735 + C49441 * C49771 + C49805 * C49514;
    const double C4090 = C49271 * (3 * C49771 + C49441 * C49805);
    const double C7295 = 4 * (2 * C49832 + C49271 * C49835) +
                         C49271 * (3 * C49835 + C49271 * C49896);
    const double C49914 = C49907 + C49913;
    const double C23506 = 4 * (2 * C49852 + C49271 * C49857) +
                          C49271 * (3 * C49857 + C49271 * C49942);
    const double C49964 = C49952 + C49962;
    const double C113 = (C50394 * C50085) / C50082 + (C50343 - C50378) / C50084;
    const double C114 =
        (C50395 * C50085) / C50082 + (2 * C50096 + C50394) / C50084;
    const double C115 = (C50085 * C50096) / C50099 + C50395 / C50084;
    const double C1068 =
        (C50396 * C50156) / C50082 + (C50351 - C50380) / C50084;
    const double C1069 =
        (C50397 * C50156) / C50082 + (2 * C50161 + C50396) / C50084;
    const double C1070 = (C50156 * C50161) / C50099 + C50397 / C50084;
    const double C1814 =
        (C50398 * C50184) / C50082 + (C50352 - C50383) / C50084;
    const double C1815 =
        (C50399 * C50184) / C50082 + (2 * C50189 + C50398) / C50084;
    const double C1816 = (C50184 * C50189) / C50099 + C50399 / C50084;
    const double C19527 =
        (C50400 * C50255) / C49149 + (C50364 - C50386) / C49154;
    const double C19528 =
        (C50401 * C50255) / C49149 + (2 * C50260 + C50400) / C49154;
    const double C19529 = (C50255 * C50260) / C49158 + C50401 / C49154;
    const double C49173 = C49172 * ae;
    const double C2266 = (-C49150 / C49149) / C49154 - (C49172 * be) / C49149;
    const double C49250 = C49248 * ae;
    const double C30406 = C30403 * C50062;
    const double C30405 = C30402 * C19531;
    const double C32976 = C32968 + C32969;
    const double C35902 = C35886 + C35887;
    const double C40486 = C40478 + C40479;
    const double C40484 = C40474 + C40475;
    const double C40482 = C40470 + C40471;
    const double C41352 = C41346 + C41347;
    const double C41350 = C41342 + C41343;
    const double C36824 = C36812 + C36813;
    const double C35905 = C35900 + C35901;
    const double C35904 = C35898 + C35899;
    const double C37489 = C37477 + C37478;
    const double C2471 = C2455 * C2267;
    const double C24254 = C2455 * C49168;
    const double C10579 = C10573 + C10574;
    const double C32978 = C32972 + C32973;
    const double C11255 = C11243 + C11244;
    const double C33654 = C33642 + C33643;
    const double C11095 = C11083 + C11084;
    const double C13991 = C13987 + C13988;
    const double C33494 = C33482 + C33483;
    const double C40888 = C40884 + C40885;
    const double C169 = C50222 * C148;
    const double C333 = C50222 * C314;
    const double C11091 = C50365 * C314;
    const double C33490 = C32931 * C314;
    const double C340 = C50222 * C317;
    const double C10755 = C50365 * C317;
    const double C33154 = C32931 * C317;
    const double C498 = C50222 * C479;
    const double C5139 = C5101 * C479;
    const double C10560 = C50286 * C479;
    const double C11251 = C50365 * C479;
    const double C32959 = C50286 * C479;
    const double C33650 = C32931 * C479;
    const double C43818 = C50403 * C479;
    const double C30400 = C13587 * C19531;
    const double C7296 =
        (4 * (2 * C49826 + C49271 * C49882 + C49827 * be) +
         C49271 *
             (3 * C49882 +
              C49271 *
                  (2 * C49874 +
                   C49271 * (C49301 + C49271 * (C49271 * C49317 + C49394 * be) +
                             C49271 * C49394 * be) +
                   C49876 * be) +
              C49881 * be) +
         (3 * C49827 + C49271 * C49881) * be) /
        C49149;
    const double C2470 = C2442 * C2261;
    const double C19636 = C2442 * C50062;
    const double C24253 = C2442 * C50336;
    const double C2464 = C2438 * C50067;
    const double C24251 = C2438 * C50067;
    const double C10578 = C10571 + C10572;
    const double C32977 = C32970 + C32971;
    const double C13586 = C13557 + C13558;
    const double C13584 = C13553 + C13554;
    const double C40485 = C40476 + C40477;
    const double C40483 = C40472 + C40473;
    const double C482 =
        (C49290 + ae * C49293 + C49272 * C49304 + be * C49271 * C49390 +
         C49271 * (be * C49390 + C49271 * C49324)) /
        C49153;
    const double C884 =
        (be * C49441 * C49390 + C49271 * C49441 * C49324) / C49153;
    const double C138 = (3 * (C49375 + C49272 * C49379 + C49656 * ae) +
                         C49272 * (2 * C49379 + C49272 * C49390 + C49658 * ae) +
                         (2 * C49656 + C49272 * C49658) * ae) /
                        C49149;
    const double C298 =
        (C49441 * (2 * C49379 + C49272 * C49390 + C49658 * ae)) / C49149;
    const double C304 =
        (C49375 + C49272 * C49379 + C49656 * ae + C49390 * C49459) / C49149;
    const double C463 =
        (C49271 * (2 * C49379 + C49272 * C49390 + C49658 * ae)) / C49149;
    const double C469 =
        (C49375 + C49272 * C49379 + C49656 * ae + C49390 * C49514) / C49149;
    const double C877 = (C49271 * C49441 * C49390) / C49149;
    const double C14460 = C11457 - C11458;
    const double C14456 = C11458 - C11457;
    const double C41349 = C33856 - C33857;
    const double C41345 = C33857 - C33856;
    const double C3432 = C2466 * C50067;
    const double C19638 = C2466 * C50062;
    const double C25141 = C2466 * C50067;
    const double C4101 = C3168 * C50067;
    const double C25780 = C3168 * C50067;
    const double C13590 = C13573 + C13574;
    const double C13588 = C13569 + C13570;
    const double C35903 = C35888 + C35889;
    const double C40487 = C40480 + C40481;
    const double C20247 = C20240 * C50062;
    const double C31954 = C31943 + C31944;
    const double C37490 = C37479 + C37480;
    const double C20695 = C20688 * C50062;
    const double C31297 = C31286 + C31287;
    const double C36825 = C36814 + C36815;
    const double C507 = C50222 * C470;
    const double C5135 = C5102 * C470;
    const double C11249 = C50286 * C470;
    const double C33648 = C50286 * C470;
    const double C43814 = C43781 * C470;
    const double C734 = C50222 * C472;
    const double C10563 = C50286 * C472;
    const double C32962 = C50286 * C472;
    const double C896 = C50222 * C878;
    const double C11089 = C50286 * C878;
    const double C33488 = C50286 * C878;
    const double C168 = C117 * C127;
    const double C343 = C117 * C288;
    const double C623 = C117 * C289;
    const double C508 = C117 * C453;
    const double C5136 = C5105 * C453;
    const double C11250 = C10535 * C453;
    const double C33649 = C32934 * C453;
    const double C43815 = C43784 * C453;
    const double C735 = C117 * C454;
    const double C10564 = C10535 * C454;
    const double C32963 = C32934 * C454;
    const double C897 = C117 * C870;
    const double C11090 = C10535 * C870;
    const double C33489 = C32934 * C870;
    const double C49897 = C49895 + C49890;
    const double C49407 = C49272 * C49406;
    const double C49412 = 3 * C49406;
    const double C49455 = C49441 * C49406;
    const double C49527 = be * C49406;
    const double C49526 = C49271 * C49406;
    const double C1548 = (be * (C49390 + C49406 * C49459) +
                          C49271 * (C49324 + C49348 * C49459)) /
                         C49153;
    const double C1832 = (2 * (be * C49390 + C49271 * C49324) +
                          be * (C49390 + C49406 * std::pow(C49271, 2)) +
                          C49271 * (C49324 + be * C49271 * C49406 +
                                    C49271 * (be * C49406 + C49271 * C49348))) /
                         C49153;
    const double C1082 =
        (2 * C49441 * C49390 + C49441 * (C49390 + C49406 * C49459)) / C49149;
    const double C1543 = (C49271 * (C49390 + C49406 * C49459)) / C49149;
    const double C1827 =
        (2 * C49271 * C49390 + C49271 * (C49390 + C49406 * C49514)) / C49149;
    const double C2649 = C50222 * C2636;
    const double C5311 = C5102 * C2636;
    const double C14467 = C50286 * C2636;
    const double C36566 = C50286 * C2636;
    const double C43990 = C43781 * C2636;
    const double C3175 = C50222 * C3154;
    const double C13581 = C50286 * C3154;
    const double C35896 = C50286 * C3154;
    const double C2454 = C117 * C2420;
    const double C2650 = C117 * C2632;
    const double C5312 = C5105 * C2632;
    const double C14468 = C10535 * C2632;
    const double C36567 = C32934 * C2632;
    const double C43991 = C43784 * C2632;
    const double C3176 = C117 * C3150;
    const double C13582 = C10535 * C3150;
    const double C35897 = C32934 * C3150;
    const double C5493 = C5102 * C5468;
    const double C44160 = C43781 * C5468;
    const double C5494 = C5105 * C5464;
    const double C44161 = C43784 * C5464;
    const double C20351 = C50222 * C3589;
    const double C22449 = C5102 * C3589;
    const double C31947 = C50286 * C3589;
    const double C37483 = C50286 * C3589;
    const double C47596 = C43781 * C3589;
    const double C20689 = C50222 * C4091;
    const double C31290 = C50286 * C4091;
    const double C36818 = C50286 * C4091;
    const double C20242 = C117 * C3420;
    const double C20352 = C117 * C3587;
    const double C22450 = C5105 * C3587;
    const double C31948 = C10535 * C3587;
    const double C37484 = C32934 * C3587;
    const double C47597 = C43784 * C3587;
    const double C20690 = C117 * C4089;
    const double C31291 = C10535 * C4089;
    const double C36819 = C32934 * C4089;
    const double C49943 = C49941 + C49934;
    const double C49963 = C49271 * C49961;
    const double C49353 = C49333 + C49351;
    const double C49352 = C49334 + C49350;
    const double C2459 = C50222 * C1087;
    const double C49579 = C49576 + C49577;
    const double C49641 = C49629 + C49639;
    const double C49432 = C49272 * C49431;
    const double C49477 = C49431 * C49459;
    const double C49529 = C49431 * C49514;
    const double C49534 = C49441 * C49431;
    const double C49501 = C49498 + C49500;
    const double C6417 =
        (3 * (C49507 + be * C49545 + C49271 * C49551) +
         be * (2 * C49545 + C49271 * C49552) +
         C49271 * (2 * C49551 + be * C49552 +
                   C49271 * (C49547 + be * C49271 * C49548 +
                             C49271 * (be * C49548 +
                                       C49271 * C49441 *
                                           (ae * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49153;
    const double C6415 = (3 * (C49453 + C49496 * C49514) +
                          C49271 * (2 * C49545 + C49271 * C49552)) /
                         C49149;
    const double C49580 = C49574 + C49578;
    const double C49595 = C49588 + C49594;
    const double C23509 =
        (4 * (2 * C49542 + be * C49543 + C49271 * C49619) +
         be * (3 * C49543 + C49271 * C49620) +
         C49271 * (3 * C49619 + be * C49620 +
                   C49271 * (2 * C49615 + be * C49616 +
                             C49271 * (C49608 + be * C49271 * C49609 +
                                       C49271 * (be * C49609 +
                                                 C49271 * C49441 *
                                                     std::pow(C49274, 8) *
                                                     bs[8] * C49283))))) /
        C49153;
    const double C23508 = (4 * (2 * C49536 + C49271 * C49543) +
                           C49271 * (3 * C49543 + C49271 * C49620)) /
                          C49149;
    const double C49642 = C49627 + C49640;
    const double C31955 = C31953 * C19531;
    const double C31298 = C31296 * C19531;
    const double C128 = 5 * (3 * C49658 + C49272 * C49663) +
                        C49272 * (4 * C49663 + C49272 * C49668);
    const double C290 = 3 * C49658 + C49272 * C49663 + C49668 * C49459;
    const double C455 = 3 * C49658 + C49272 * C49663 + C49668 * C49514;
    const double C613 = C49441 * (4 * C49663 + C49272 * C49668);
    const double C725 = C49271 * (4 * C49663 + C49272 * C49668);
    const double C871 = C49271 * C49441 * C49668;
    const double C20347 =
        (3 * C49785 + C49441 * C49904 +
         C49271 * (C49271 * (3 * C49902 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459))) +
                   C49914 * be) +
         C49271 * C49914 * be) /
        C49149;
    const double C20681 =
        (C49271 * (4 * C49904 +
                   C49441 * (3 * C49902 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459)))) +
         (4 * C49797 + C49441 * C49914) * be) /
        C49149;
    const double C20232 = 5 * (3 * C49767 + C49441 * C49797) +
                          C49441 * (4 * C49797 + C49441 * C49914);
    const double C20346 = 3 * C49767 + C49441 * C49797 + C49914 * C49514;
    const double C20680 = C49271 * (4 * C49797 + C49441 * C49914);
    const double C39815 = 5 * (3 * C49827 + C49271 * C49881) +
                          C49271 * (4 * C49881 + C49271 * C49964);
    const double C49174 = C49173 / C49149;
    const double C2469 = C2441 * C2266;
    const double C2473 = C2461 * C2266;
    const double C3437 = C3429 * C2266;
    const double C4106 = C4098 * C2266;
    const double C49252 = C49250 / C49149;
    const double C30407 = C30405 + C30406;
    const double C35906 = C35902 * C19531;
    const double C36826 = C36824 * C19531;
    const double C35909 = C35905 * C50062;
    const double C35908 = C35904 * C19531;
    const double C37491 = C37489 * C19531;
    const double C19642 = C19635 + C19636;
    const double C505 = C50222 * C482;
    const double C5130 = C5102 * C482;
    const double C5807 = C5101 * C482;
    const double C10933 = C50365 * C482;
    const double C10920 = C50286 * C482;
    const double C33332 = C32931 * C482;
    const double C33319 = C50286 * C482;
    const double C43809 = C43781 * C482;
    const double C44474 = C50403 * C482;
    const double C894 = C50222 * C884;
    const double C5649 = C5101 * C884;
    const double C10742 = C50286 * C884;
    const double C11463 = C50365 * C884;
    const double C33141 = C50286 * C884;
    const double C33862 = C32931 * C884;
    const double C44316 = C50403 * C884;
    const double C165 = C117 * C138;
    const double C10566 = C10534 * C138;
    const double C32965 = C32933 * C138;
    const double C332 = C117 * C298;
    const double C11092 = C10534 * C298;
    const double C33491 = C32933 * C298;
    const double C341 = C117 * C304;
    const double C10756 = C10534 * C304;
    const double C33155 = C32933 * C304;
    const double C497 = C117 * C463;
    const double C5140 = C5104 * C463;
    const double C10559 = C10535 * C463;
    const double C11252 = C10534 * C463;
    const double C32958 = C32934 * C463;
    const double C33651 = C32933 * C463;
    const double C506 = C117 * C469;
    const double C5129 = C5105 * C469;
    const double C5808 = C5104 * C469;
    const double C10934 = C10534 * C469;
    const double C10919 = C10535 * C469;
    const double C33333 = C32933 * C469;
    const double C33318 = C32934 * C469;
    const double C43808 = C43784 * C469;
    const double C895 = C117 * C877;
    const double C5650 = C5104 * C877;
    const double C10741 = C10535 * C877;
    const double C11464 = C10534 * C877;
    const double C33140 = C32934 * C877;
    const double C33863 = C32933 * C877;
    const double C14472 = C14459 + C14460;
    const double C14470 = C14455 + C14456;
    const double C41353 = C41348 + C41349;
    const double C41351 = C41344 + C41345;
    const double C19643 = C19637 + C19638;
    const double C30401 = C13588 * C50062;
    const double C35907 = C35903 * C50062;
    const double C20248 = C20246 + C20247;
    const double C31956 = C31954 * C50062;
    const double C37492 = C37490 * C50062;
    const double C20696 = C20694 + C20695;
    const double C31299 = C31297 * C50062;
    const double C36827 = C36825 * C50062;
    const double C7298 =
        (4 * (2 * C49834 + C49271 * C49897 + C49835 * be) +
         C49271 * (3 * C49897 +
                   C49271 * (2 * C49889 +
                             C49271 * (C49329 +
                                       C49271 * (C49271 * C49272 * C49341 +
                                                 C49419 * be) +
                                       C49271 * C49419 * be) +
                             C49891 * be) +
                   C49896 * be) +
         (3 * C49835 + C49271 * C49896) * be) /
        C49149;
    const double C49408 = C49392 + C49407;
    const double C1201 = (C49441 * C49324 + be * C49271 * C49455 +
                          C49271 * (be * C49455 + C49271 * C49441 * C49348)) /
                         C49153;
    const double C1196 = (C49441 * C49390 + C49455 * C49514) / C49149;
    const double C49530 = C49527 + C49528;
    const double C2949 = C50222 * C1548;
    const double C10757 = C50286 * C1548;
    const double C33156 = C50286 * C1548;
    const double C5809 = C5102 * C1832;
    const double C10935 = C50286 * C1832;
    const double C33334 = C50286 * C1832;
    const double C44476 = C43781 * C1832;
    const double C2460 = C117 * C1082;
    const double C2950 = C117 * C1543;
    const double C10758 = C10535 * C1543;
    const double C33157 = C32934 * C1543;
    const double C5810 = C5105 * C1827;
    const double C10936 = C10535 * C1827;
    const double C33335 = C32934 * C1827;
    const double C44477 = C43784 * C1827;
    const double C23507 =
        (4 * (2 * C49856 + C49271 * C49943 + C49857 * be) +
         C49271 * (3 * C49943 +
                   C49271 * (2 * C49937 +
                             C49271 * (C49929 +
                                       C49271 * (C49271 * C49441 * C49341 +
                                                 C49932 * be) +
                                       C49271 * C49932 * be) +
                             C49938 * be) +
                   C49942 * be) +
         (3 * C49857 + C49271 * C49942) * be) /
        C49149;
    const double C49965 = C49946 + C49963;
    const double C141 = (5 * (3 * C49305 + C49272 * C49325) +
                         C49272 * (4 * C49325 + C49272 * C49353)) /
                        C49149;
    const double C309 =
        (3 * C49305 + C49272 * C49325 + C49353 * C49459) / C49149;
    const double C474 =
        (3 * C49305 + C49272 * C49325 +
         C49271 * (C49271 * C49353 + C49668 * be) + C49271 * C49668 * be) /
        C49149;
    const double C614 = (C49441 * (4 * C49325 + C49272 * C49353)) / C49149;
    const double C726 = (C49271 * (4 * C49325 + C49272 * C49353) +
                         (4 * C49663 + C49272 * C49668) * be) /
                        C49149;
    const double C880 =
        (C49271 * C49441 * C49353 + C49441 * C49668 * be) / C49149;
    const double C149 =
        (5 * (3 * C49324 + ae * C49325 + C49272 * C49352) +
         ae * (4 * C49325 + C49272 * C49353) +
         C49272 *
             (4 * C49352 + ae * C49353 +
              C49272 *
                  (3 * C49348 + ae * C49349 +
                   C49272 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C318 = (2 * C49304 + ae * C49305 + C49272 * C49324 +
                         C49352 * std::pow(yP - yQ, 2)) /
                        C49153;
    const double C319 =
        ((yP - yQ) * (3 * C49324 + ae * C49325 + C49272 * C49352)) / C49153;
    const double C320 =
        (3 * C49324 + ae * C49325 + C49272 * C49352 +
         (3 * C49348 + ae * C49349 +
          C49272 *
              (2 * C49344 + ae * C49345 +
               C49272 * (C49340 + ae * C49272 * C49341 +
                         C49272 * (ae * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(yP - yQ, 2)) /
        C49153;
    const double C616 =
        ((yP - yQ) *
         (4 * C49352 + ae * C49353 +
          C49272 * (3 * C49348 + ae * C49349 +
                    C49272 * (2 * C49344 + ae * C49345 +
                              C49272 * (C49340 + ae * C49272 * C49341 +
                                        C49272 * (ae * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C1088 =
        (2 * C49441 * C49352 +
         C49441 * (C49352 + (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                std::pow(C49441, 2))) /
        C49153;
    const double C49433 = C49413 + C49432;
    const double C49478 = C49406 + C49477;
    const double C49531 = C49406 + C49529;
    const double C6007 =
        (2 * (be * C49455 + C49271 * C49533) + be * (C49455 + C49534 * C49514) +
         C49271 * (C49533 + be * C49271 * C49534 +
                   C49271 * (be * C49534 +
                             C49271 * C49441 *
                                 (C49340 + ae * C49272 * C49341 +
                                  C49272 * (ae * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49153;
    const double C6006 =
        (2 * C49271 * C49455 + C49271 * (C49455 + C49534 * C49514)) / C49149;
    const double C3594 =
        (2 * C49441 * C49320 + C49441 * C49487 + be * C49271 * C49501 +
         C49271 * (be * C49501 +
                   C49271 * (2 * C49441 * C49344 +
                             C49441 * (C49344 + (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49153;
    const double C4096 =
        (be * (3 * C49475 + C49441 * C49501) +
         C49271 * (3 * C49487 +
                   C49441 * (2 * C49441 * C49344 +
                             C49441 * (C49344 + (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49153;
    const double C3425 = (4 * (2 * C49453 + C49441 * C49475) +
                          C49441 * (3 * C49475 + C49441 * C49501)) /
                         C49149;
    const double C3592 =
        (2 * C49453 + C49441 * C49475 + C49501 * C49514) / C49149;
    const double C4094 = (C49271 * (3 * C49475 + C49441 * C49501)) / C49149;
    const double C7301 =
        (4 * (2 * C49523 + be * C49524 + C49271 * C49579) +
         be * (3 * C49524 + C49271 * C49580) +
         C49271 *
             (3 * C49579 + be * C49580 +
              C49271 *
                  (2 * C49573 + be * C49575 +
                   C49271 * (C49344 + be * C49271 * C49424 +
                             C49271 * (be * C49424 +
                                       C49271 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C7299 = (4 * (2 * C49519 + C49271 * C49524) +
                          C49271 * (3 * C49524 + C49271 * C49580)) /
                         C49149;
    const double C20349 =
        (3 * C49484 + C49441 * C49586 + be * C49271 * C49595 +
         C49271 * (be * C49595 +
                   C49271 * (3 * C49584 +
                             C49441 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49153;
    const double C20683 =
        (be * (4 * C49494 + C49441 * C49595) +
         C49271 * (4 * C49586 +
                   C49441 * (3 * C49584 +
                             C49441 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49153;
    const double C20234 = (5 * (3 * C49472 + C49441 * C49494) +
                           C49441 * (4 * C49494 + C49441 * C49595)) /
                          C49149;
    const double C20348 =
        (3 * C49472 + C49441 * C49494 + C49595 * C49514) / C49149;
    const double C20682 = (C49271 * (4 * C49494 + C49441 * C49595)) / C49149;
    const double C39818 =
        (5 * (3 * C49565 + be * C49566 + C49271 * C49641) +
         be * (4 * C49566 + C49271 * C49642) +
         C49271 *
             (4 * C49641 + be * C49642 +
              C49271 *
                  (3 * C49637 + be * C49638 +
                   C49271 * (2 * C49631 + be * C49633 +
                             C49271 * (C49340 + be * C49271 * C49417 +
                                       C49271 * (be * C49417 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C39817 = (5 * (3 * C49517 + C49271 * C49566) +
                           C49271 * (4 * C49566 + C49271 * C49642)) /
                          C49149;
    const double C49175 = C49174 - C49164;
    const double C2475 = C2469 + C2470;
    const double C2476 = C2473 + C2474;
    const double C3439 = C3437 + C3438;
    const double C4108 = C4106 + C4107;
    const double C49253 = C49252 - C49237;
    const double C35911 = C35908 + C35909;
    const double C178 = C165 - C166;
    const double C621 = C332 - C333;
    const double C8338 = C333 - C332;
    const double C2456 = C341 - C340;
    const double C2800 = C340 - C341;
    const double C733 = C497 - C498;
    const double C10576 = C10559 - C10560;
    const double C32975 = C32958 - C32959;
    const double C11246 = C10919 - C10920;
    const double C33645 = C33318 - C33319;
    const double C8486 = C895 - C894;
    const double C8682 = C894 - C895;
    const double C11086 = C10741 - C10742;
    const double C13990 = C10742 - C10741;
    const double C33485 = C33140 - C33141;
    const double C40887 = C33141 - C33140;
    const double C30404 = C30400 + C30401;
    const double C35910 = C35906 + C35907;
    const double C31957 = C31955 + C31956;
    const double C37493 = C37491 + C37492;
    const double C31300 = C31298 + C31299;
    const double C36828 = C36826 + C36827;
    const double C49409 = C49408 + C49403;
    const double C5651 = C5102 * C1201;
    const double C8189 = C50222 * C1201;
    const double C11465 = C50286 * C1201;
    const double C33864 = C50286 * C1201;
    const double C44318 = C43781 * C1201;
    const double C5652 = C5105 * C1196;
    const double C8190 = C117 * C1196;
    const double C11466 = C10535 * C1196;
    const double C33865 = C32934 * C1196;
    const double C44319 = C43784 * C1196;
    const double C49966 = C49965 + C49950;
    const double C344 = C50222 * C318;
    const double C624 = C50222 * C319;
    const double C49434 = C49433 + C49425;
    const double C2637 =
        (C49324 + C49348 * C49459 + be * C49271 * C49478 +
         C49271 * (be * C49478 +
                   C49271 * (C49348 + (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49459))) /
        C49153;
    const double C3155 =
        (be * (2 * C49455 + C49441 * C49478) +
         C49271 * (2 * C49441 * C49348 +
                   C49441 * (C49348 + (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49459))) /
        C49153;
    const double C2422 = (3 * (C49390 + C49406 * C49459) +
                          C49441 * (2 * C49455 + C49441 * C49478)) /
                         C49149;
    const double C2634 = (C49390 + C49406 * C49459 + C49478 * C49514) / C49149;
    const double C3152 = (C49271 * (2 * C49455 + C49441 * C49478)) / C49149;
    const double C5469 =
        (3 * (C49324 + be * C49526 + C49271 * C49530) +
         be * (2 * C49526 + C49271 * C49531) +
         C49271 *
             (2 * C49530 + be * C49531 +
              C49271 *
                  (C49348 + be * C49271 * C49431 +
                   C49271 * (be * C49431 +
                             C49271 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C5466 = (3 * (C49390 + C49406 * C49514) +
                          C49271 * (2 * C49526 + C49271 * C49531)) /
                         C49149;
    const double C24252 = C2441 * C49175;
    const double C24248 = C2461 * C49175;
    const double C25138 = C3429 * C49175;
    const double C25777 = C4098 * C49175;
    const double C118 =
        ((((0 - (C49147 * C49148) / C49149) * ae) / C49149 - (0 * be) / C49158 +
          C49150 / C49149) /
             C49154 -
         ((C49147 * C49171 + 0) * be) / C49149) /
            C49154 +
        ((C49147 * (C49171 / C49154 -
                    ((C49147 * C49175 + C50336) * be) / C49149 + C49168) +
          C50392) *
         ae) /
            C49149 +
        C49175 / C49154 - ((C49147 * C49168 + C50067) * be) / C49149;
    const double C119 =
        (C49171 / C49154 - ((C49147 * C49175 + C50336) * be) / C49149 +
         C49168) /
            C49154 +
        ((C49147 *
              (C49175 / C49154 - ((C49147 * C49168 + C50067) * be) / C49149) +
          C50393) *
         ae) /
            C49149 +
        2 * (C49168 / C49154 - (0 * be) / C49149);
    const double C120 =
        (C49175 / C49154 - ((C49147 * C49168 + C50067) * be) / C49149) /
            C49154 +
        ((C49147 * (C49168 / C49154 - (0 * be) / C49149) + C7888) * ae) /
            C49149;
    const double C7891 =
        C49171 / C49154 - ((C49147 * C49175 + C50336) * be) / C49149 + C49168;
    const double C7892 =
        C49175 / C49154 - ((C49147 * C49168 + C50067) * be) / C49149;
    const double C16927 =
        C49171 / C49154 + ((C49147 * C49175 + C50336) * ae) / C49149 + C49168;
    const double C16928 =
        C49175 / C49154 + ((C49147 * C49168 + C50067) * ae) / C49149;
    const double C2477 = C2475 + C2471;
    const double C2478 = C2476 + C2463;
    const double C3440 = C3439 + C3431;
    const double C4109 = C4108 + C4100;
    const double C38439 =
        ((((0 - (C49194 * C49234) / C49149) * ae) / C49149 - (0 * be) / C49158 +
          C49195 / C49149) /
             C49154 -
         ((C49194 * C49251 + 0) * be) / C49149) /
            C49154 +
        ((C49194 * (C49251 / C49154 -
                    ((C49194 * C49253 + C50365) * be) / C49149 + C49246) +
          C50402) *
         ae) /
            C49149 +
        C49253 / C49154 - ((C49194 * C49246 + C50286) * be) / C49149;
    const double C38440 =
        (C49251 / C49154 - ((C49194 * C49253 + C50365) * be) / C49149 +
         C49246) /
            C49154 +
        ((C49194 *
              (C49253 / C49154 - ((C49194 * C49246 + C50286) * be) / C49149) +
          C50403) *
         ae) /
            C49149 +
        2 * (C49246 / C49154 - (0 * be) / C49149);
    const double C38441 =
        (C49253 / C49154 - ((C49194 * C49246 + C50286) * be) / C49149) /
            C49154 +
        ((C49194 * (C49246 / C49154 - (0 * be) / C49149) + C43781) * ae) /
            C49149;
    const double C43782 =
        C49251 / C49154 - ((C49194 * C49253 + C50365) * be) / C49149 + C49246;
    const double C43783 =
        C49253 / C49154 - ((C49194 * C49246 + C50286) * be) / C49149;
    const double C2472 = C2456 * C50067;
    const double C24255 = C2456 * C50067;
    const double C10580 = C10575 + C10576;
    const double C32979 = C32974 + C32975;
    const double C11256 = C11245 + C11246;
    const double C33655 = C33644 + C33645;
    const double C11096 = C11085 + C11086;
    const double C13992 = C13989 + C13990;
    const double C33495 = C33484 + C33485;
    const double C40889 = C40886 + C40887;
    const double C483 =
        (2 * C49304 + ae * C49305 + C49272 * C49324 + be * C49271 * C49409 +
         C49271 * (be * C49409 + C49271 * C49352)) /
        C49153;
    const double C484 =
        (be * (3 * C49390 + C49272 * C49409 +
               (2 * C49383 + C49272 * C49401) * ae) +
         C49271 * (3 * C49324 + ae * C49325 + C49272 * C49352)) /
        C49153;
    const double C885 =
        (be * C49441 * C49409 + C49271 * C49441 * C49352) / C49153;
    const double C140 = (4 * (2 * C49379 + C49272 * C49390 + C49658 * ae) +
                         C49272 * (3 * C49390 + C49272 * C49409 + C49663 * ae) +
                         (3 * C49658 + C49272 * C49663) * ae) /
                        C49149;
    const double C306 =
        (2 * C49379 + C49272 * C49390 + C49658 * ae + C49409 * C49459) / C49149;
    const double C308 =
        (C49441 * (3 * C49390 + C49272 * C49409 + C49663 * ae)) / C49149;
    const double C471 =
        (2 * C49379 + C49272 * C49390 + C49658 * ae + C49409 * C49514) / C49149;
    const double C473 =
        (C49271 * (3 * C49390 + C49272 * C49409 + C49663 * ae)) / C49149;
    const double C879 = (C49271 * C49441 * C49409) / C49149;
    const double C39816 =
        (5 * (3 * C49882 + C49271 * C49966 + C49881 * be) +
         C49271 * (4 * C49966 +
                   C49271 * (3 * C49961 +
                             C49271 * (2 * C49953 +
                                       C49271 * (C49317 +
                                                 C49271 * (C49271 * C49341 +
                                                           C49415 * be) +
                                                 C49271 * C49415 * be) +
                                       C49955 * be) +
                             C49960 * be) +
                   C49964 * be) +
         (4 * C49881 + C49271 * C49964) * be) /
        C49149;
    const double C49435 = C49272 * C49434;
    const double C49457 = C49441 * C49434;
    const double C1549 =
        (be * (C49409 + C49434 * C49459) +
         C49271 * (C49352 + (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                C49459)) /
        C49153;
    const double C1833 =
        (2 * (be * C49409 + C49271 * C49352) +
         be * (C49409 + C49434 * std::pow(C49271, 2)) +
         C49271 *
             (C49352 + be * C49271 * C49434 +
              C49271 *
                  (be * C49434 +
                   C49271 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C1084 =
        (2 * C49441 * C49409 + C49441 * (C49409 + C49434 * C49459)) / C49149;
    const double C1545 = (C49271 * (C49409 + C49434 * C49459)) / C49149;
    const double C1829 =
        (2 * C49271 * C49409 + C49271 * (C49409 + C49434 * C49514)) / C49149;
    const double C24257 = C24252 + C24253;
    const double C24256 = C24248 + C24249;
    const double C25142 = C25138 + C25139;
    const double C25781 = C25777 + C25778;
    const double C2480 = C2478 + C2464;
    const double C3441 = C3440 + C3432;
    const double C4110 = C4109 + C4101;
    const double C43817 = C43782 * C136;
    const double C43811 = C43782 * C125;
    const double C43804 = C43782 * C134;
    const double C43798 = C43782 * C124;
    const double C43793 = C43782 * C132;
    const double C43787 = C43782 * C123;
    const double C43987 = C43782 * C302;
    const double C43981 = C43782 * C286;
    const double C43974 = C43782 * C294;
    const double C43968 = C43782 * C282;
    const double C44157 = C43782 * C467;
    const double C44151 = C43782 * C451;
    const double C44144 = C43782 * C459;
    const double C44138 = C43782 * C447;
    const double C44315 = C43782 * C296;
    const double C44309 = C43782 * C283;
    const double C44473 = C43782 * C461;
    const double C44467 = C43782 * C448;
    const double C44679 = C43782 * C875;
    const double C44673 = C43782 * C868;
    const double C46698 = C43782 * C300;
    const double C46692 = C43782 * C285;
    const double C46687 = C43782 * C292;
    const double C46681 = C43782 * C281;
    const double C47342 = C43782 * C873;
    const double C47336 = C43782 * C867;
    const double C47599 = C43782 * C1078;
    const double C47593 = C43782 * C1073;
    const double C47757 = C43782 * C1192;
    const double C47751 = C43782 * C1187;
    const double C48255 = C43782 * C1539;
    const double C48249 = C43782 * C1534;
    const double C43819 = C43783 * C463;
    const double C43813 = C43783 * C449;
    const double C43806 = C43783 * C461;
    const double C43800 = C43783 * C448;
    const double C43795 = C43783 * C459;
    const double C43789 = C43783 * C447;
    const double C43989 = C43783 * C1541;
    const double C43983 = C43783 * C1535;
    const double C43976 = C43783 * C875;
    const double C43970 = C43783 * C868;
    const double C44159 = C43783 * C1825;
    const double C44153 = C43783 * C1819;
    const double C44146 = C43783 * C467;
    const double C44140 = C43783 * C451;
    const double C44317 = C43783 * C877;
    const double C44311 = C43783 * C869;
    const double C44475 = C43783 * C469;
    const double C44469 = C43783 * C452;
    const double C44681 = C43783 * C1194;
    const double C44675 = C43783 * C1188;
    const double C46700 = C43783 * C1539;
    const double C46694 = C43783 * C1534;
    const double C46689 = C43783 * C873;
    const double C46683 = C43783 * C867;
    const double C47344 = C43783 * C1192;
    const double C47338 = C43783 * C1187;
    const double C47601 = C43783 * C3148;
    const double C47595 = C43783 * C3144;
    const double C47759 = C43783 * C4505;
    const double C47753 = C43783 * C4500;
    const double C48257 = C43783 * C2630;
    const double C48251 = C43783 * C2626;
    const double C2479 = C2477 + C2472;
    const double C509 = C50222 * C483;
    const double C5141 = C5102 * C483;
    const double C11253 = C50286 * C483;
    const double C33652 = C50286 * C483;
    const double C43820 = C43781 * C483;
    const double C736 = C50222 * C484;
    const double C10567 = C50286 * C484;
    const double C32966 = C50286 * C484;
    const double C898 = C50222 * C885;
    const double C11093 = C50286 * C885;
    const double C33492 = C50286 * C885;
    const double C170 = C117 * C140;
    const double C345 = C117 * C306;
    const double C625 = C117 * C308;
    const double C510 = C117 * C471;
    const double C5142 = C5105 * C471;
    const double C11254 = C10535 * C471;
    const double C33653 = C32934 * C471;
    const double C43821 = C43784 * C471;
    const double C737 = C117 * C473;
    const double C10568 = C10535 * C473;
    const double C32967 = C32934 * C473;
    const double C899 = C117 * C879;
    const double C11094 = C10535 * C879;
    const double C33493 = C32934 * C879;
    const double C49436 = C49412 + C49435;
    const double C1202 =
        (C49441 * C49352 + be * C49271 * C49457 +
         C49271 * (be * C49457 +
                   C49271 * C49441 *
                       (2 * C49344 + ae * C49345 +
                        C49272 * (C49340 + ae * C49272 * C49341 +
                                  C49272 * (ae * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49153;
    const double C1198 = (C49441 * C49409 + C49457 * C49514) / C49149;
    const double C24259 = C24257 + C24254;
    const double C24258 = C24256 + C24250;
    const double C25143 = C25142 + C25140;
    const double C25782 = C25781 + C25779;
    const double C49437 = C49436 + C49430;
    const double C24261 = C24259 + C24255;
    const double C24260 = C24258 + C24251;
    const double C25144 = C25143 + C25141;
    const double C25783 = C25782 + C25780;
    const double C485 =
        (3 * C49324 + ae * C49325 + C49272 * C49352 + be * C49271 * C49437 +
         C49271 *
             (be * C49437 +
              C49271 *
                  (3 * C49348 + ae * C49349 +
                   C49272 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C728 =
        (be * (4 * C49409 + C49272 * C49437 +
               (3 * C49401 + C49272 * C49428) * ae) +
         C49271 *
             (4 * C49352 + ae * C49353 +
              C49272 *
                  (3 * C49348 + ae * C49349 +
                   C49272 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C886 =
        (be * C49441 * C49437 +
         C49271 * C49441 *
             (3 * C49348 + ae * C49349 +
              C49272 * (2 * C49344 + ae * C49345 +
                        C49272 * (C49340 + ae * C49272 * C49341 +
                                  C49272 * (ae * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49153;
    const double C142 = (5 * (3 * C49390 + C49272 * C49409 + C49663 * ae) +
                         C49272 * (4 * C49409 + C49272 * C49437 + C49668 * ae) +
                         (4 * C49663 + C49272 * C49668) * ae) /
                        C49149;
    const double C310 =
        (3 * C49390 + C49272 * C49409 + C49663 * ae + C49437 * C49459) / C49149;
    const double C475 =
        (3 * C49390 + C49272 * C49409 + C49663 * ae + C49437 * C49514) / C49149;
    const double C615 =
        (C49441 * (4 * C49409 + C49272 * C49437 + C49668 * ae)) / C49149;
    const double C727 =
        (C49271 * (4 * C49409 + C49272 * C49437 + C49668 * ae)) / C49149;
    const double C881 = (C49271 * C49441 * C49437) / C49149;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50125 * C50351 +
           (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50125 * C50351 +
           ((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
             C8337 * C7893 + C8338 * C7888) *
                C50364 +
            (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
             (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
             (C164 - C163) * C7893 + (C166 - C165) * C7888) *
                C50364 +
            (C2797 * C7891 + C2798 * C50392 + C8337 * C7892 + C8338 * C50393 +
             (C622 - C623) * C7893 + (C624 - C625) * C7888) *
                C50260) *
               C50125 * C50351 +
           ((C618 * C7891 + C619 * C50392 + C620 * C7892 + C621 * C50393 +
             (C623 - C622) * C7893 + (C625 - C624) * C7888) *
                C50364 +
            (C2455 * C7891 + C2456 * C50392 + (C343 - C342) * C7892 +
             (C345 - C344) * C50393 + (C117 * C290 - C50222 * C309) * C7893 +
             (C117 * C310 - C50222 * C320) * C7888) *
                C50260) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C7891 +
              (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
              (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                 C50364 +
             ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
              C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                 C50260) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C7891 +
              (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
              (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                 C50364 +
             ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
              C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
              C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                 C50364 +
             ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
              C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                 C50260) *
                C50352 +
            (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
              C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                 C50364 +
             ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
              C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
              (C2949 - C2950) * C7888) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
              (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
              C176 * C7888) *
                 C50364 +
             (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
              C620 * C7893 + C621 * C7888) *
                 C50260) *
                C50352 +
            (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
              (C492 - C491) * C7892 + (C494 - C493) * C50393 +
              (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                 C50364 +
             (C3169 * C7891 + C3170 * C50392 + C8681 * C7892 + C8682 * C50393 +
              (C896 - C897) * C7893 + (C898 - C899) * C7888) *
                 C50260) *
                C50189) *
               C50351 +
           (((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
              C8337 * C7893 + C8338 * C7888) *
                 C50364 +
             (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
              (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                 C50260) *
                C50352 +
            ((C3161 * C7891 + C3162 * C50392 + C8485 * C7892 + C8486 * C50393 +
              (C897 - C896) * C7893 + (C899 - C898) * C7888) *
                 C50364 +
             (C3167 * C7891 + C3168 * C50392 + (C2948 - C2947) * C7892 +
              (C2950 - C2949) * C50393 +
              (C117 * C1537 - C50222 * C1544) * C7893 +
              (C117 * C1545 - C50222 * C1549) * C7888) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50125 * C276 +
           (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50125 * C277 +
           ((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
             C2799 * C7893 + C2800 * C7888) *
                C50364 +
            ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 +
             C2467 * C7892 + C2468 * C50393 + (C2457 - C2458) * C7893 +
             (C2459 - C2460) * C7888) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50125 * C276 +
           ((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
             (C331 - C330) * C7893 + (C333 - C332) * C7888) *
                C50364 +
            (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
             (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                C50260) *
               C50125 * C277 +
           ((C2441 * C7891 + C2442 * C50392 + C2455 * C7892 + C2456 * C50393 +
             (C343 - C342) * C7893 + (C345 - C344) * C7888) *
                C50364 +
            (C2465 * C7891 + C2466 * C50392 + (C2458 - C2457) * C7892 +
             (C2460 - C2459) * C50393 +
             (C117 * C1076 - C50222 * C1083) * C7893 +
             (C117 * C1084 - C50222 * C1088) * C7888) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C7891 +
            (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
            (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
               C50364 +
           ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 + C2431 * C7892 +
            C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C7891 + (C154 - C153) * C50392 +
            (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
            C176 * C7888) *
               C50364 +
           (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
            C620 * C7893 + C621 * C7888) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
            (C164 - C163) * C7893 + (C166 - C165) * C7888) *
               C50364 +
           (C2797 * C7891 + C2798 * C50392 + (C331 - C330) * C7892 +
            (C333 - C332) * C50393 + (C622 - C623) * C7893 +
            (C624 - C625) * C7888) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C175 * C7891 + C176 * C50392 + C177 * C7892 + C178 * C50393 +
            (C168 - C167) * C7893 + (C170 - C169) * C7888) *
               C50364 +
           (C620 * C7891 + C621 * C50392 + (C623 - C622) * C7892 +
            (C625 - C624) * C50393 + (C117 * C613 - C50222 * C614) * C7893 +
            (C117 * C615 - C50222 * C616) * C7888) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + (C893 - C892) * C7893 +
             (C895 - C894) * C7888) *
                C50260) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C7891 +
             (C50222 * C480 - C117 * C465) * C50392 + (C499 - C500) * C7892 +
             (C501 - C502) * C50393 + (C503 - C504) * C7893 +
             (C505 - C506) * C7888) *
                C50364 +
            ((C3596 - C3597) * C7891 + (C3598 - C3599) * C50392 +
             (C2643 - C2644) * C7892 + (C2645 - C2646) * C50393 +
             (C8187 - C8188) * C7893 + (C8189 - C8190) * C7888) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C443 +
           (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
             (C492 - C491) * C7892 + (C494 - C493) * C50393 +
             (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                C50364 +
            (C3169 * C7891 + C3170 * C50392 + (C892 - C893) * C7892 +
             (C894 - C895) * C50393 + (C896 - C897) * C7893 +
             (C898 - C899) * C7888) *
                C50260) *
               C444 +
           (((C500 - C499) * C7891 + (C502 - C501) * C50392 +
             (C504 - C503) * C7892 + (C506 - C505) * C50393 +
             (C508 - C507) * C7893 + (C510 - C509) * C7888) *
                C50364 +
            ((C2644 - C2643) * C7891 + (C2646 - C2645) * C50392 +
             (C8188 - C8187) * C7892 + (C8190 - C8189) * C50393 +
             (C117 * C1190 - C50222 * C1197) * C7893 +
             (C117 * C1198 - C50222 * C1202) * C7888) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50352 +
           (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
             (C492 - C491) * C7892 + (C494 - C493) * C50393 +
             (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                C50364 +
            (C3169 * C7891 + C3170 * C50392 + (C892 - C893) * C7892 +
             (C894 - C895) * C50393 + (C896 - C897) * C7893 +
             (C898 - C899) * C7888) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
             (C164 - C163) * C7893 + (C166 - C165) * C7888) *
                C50364 +
            (C2797 * C7891 + C2798 * C50392 + C8337 * C7892 + C8338 * C50393 +
             (C622 - C623) * C7893 + (C624 - C625) * C7888) *
                C50260) *
               C50352 +
           ((C730 * C7891 + C731 * C50392 + C732 * C7892 + C733 * C50393 +
             (C735 - C734) * C7893 + (C737 - C736) * C7888) *
                C50364 +
            (C8485 * C7891 + C8486 * C50392 + (C897 - C896) * C7892 +
             (C899 - C898) * C50393 + (C117 * C871 - C50222 * C880) * C7893 +
             (C117 * C881 - C50222 * C886) * C7888) *
                C50260) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C7891 +
            (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
            (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
               C50364 +
           ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 + C2431 * C7892 +
            C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C7891 + (C154 - C153) * C50392 +
            (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
            C176 * C7888) *
               C50364 +
           (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
            C620 * C7893 + C621 * C7888) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
            (C164 - C163) * C7893 + (C166 - C165) * C7888) *
               C50364 +
           (C2797 * C7891 + C2798 * C50392 + (C331 - C330) * C7892 +
            (C333 - C332) * C50393 + (C622 - C623) * C7893 +
            (C624 - C625) * C7888) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C175 * C7891 + C176 * C50392 + C177 * C7892 + C178 * C50393 +
            (C168 - C167) * C7893 + (C170 - C169) * C7888) *
               C50364 +
           (C620 * C7891 + C621 * C50392 + (C623 - C622) * C7892 +
            (C625 - C624) * C50393 + (C117 * C613 - C50222 * C614) * C7893 +
            (C117 * C615 - C50222 * C616) * C7888) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50125 * C276 +
           (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50125 * C277 +
           ((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
             C2799 * C7893 + C2800 * C7888) *
                C50364 +
            ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 +
             C2467 * C7892 + C2468 * C50393 + (C2457 - C2458) * C7893 +
             (C2459 - C2460) * C7888) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50125 * C276 +
           ((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
             (C331 - C330) * C7893 + (C333 - C332) * C7888) *
                C50364 +
            (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
             (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                C50260) *
               C50125 * C277 +
           ((C2441 * C7891 + C2442 * C50392 + C2455 * C7892 + C2456 * C50393 +
             (C343 - C342) * C7893 + (C345 - C344) * C7888) *
                C50364 +
            (C2465 * C7891 + C2466 * C50392 + (C2458 - C2457) * C7892 +
             (C2460 - C2459) * C50393 +
             (C117 * C1076 - C50222 * C1083) * C7893 +
             (C117 * C1084 - C50222 * C1088) * C7888) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50125 * C50396 +
           (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50125 * C50397 +
           ((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
             C2799 * C7893 + C2800 * C7888) *
                C50364 +
            ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 +
             C2467 * C7892 + C2468 * C50393 + (C2457 - C2458) * C7893 +
             (C2459 - C2460) * C7888) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50125 * C50396 +
           ((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
             C8337 * C7893 + C8338 * C7888) *
                C50364 +
            (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
             (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                C50260) *
               C50125 * C50397 +
           ((C2441 * C7891 + C2442 * C50392 + C2455 * C7892 + C2456 * C50393 +
             (C343 - C342) * C7893 + (C345 - C344) * C7888) *
                C50364 +
            (C2465 * C7891 + C2466 * C50392 + (C2458 - C2457) * C7892 +
             (C2460 - C2459) * C50393 +
             (C117 * C1076 - C50222 * C1083) * C7893 +
             (C117 * C1084 - C50222 * C1088) * C7888) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50352 +
           (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
             C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                C50364 +
            ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
             C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
             (C2949 - C2950) * C7888) *
                C50260) *
               C50189) *
              C50397 +
          (((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
             C2799 * C7893 + C2800 * C7888) *
                C50364 +
            ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 +
             C2467 * C7892 + C2468 * C50393 + (C2457 - C2458) * C7893 +
             (C2459 - C2460) * C7888) *
                C50260) *
               C50352 +
           ((C4098 * C7891 + C4099 * C50392 + C3167 * C7892 + C3168 * C50393 +
             (C2948 - C2947) * C7893 + (C2950 - C2949) * C7888) *
                C50364 +
            ((C4103 - C4102) * C7891 + (C4105 - C4104) * C50392 +
             (C3174 - C3173) * C7892 + (C3176 - C3175) * C50393 +
             (C117 * C3146 - C50222 * C3151) * C7893 +
             (C117 * C3152 - C50222 * C3155) * C7888) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C7891 +
            (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
            (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
               C50364 +
           ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 + C2431 * C7892 +
            C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
               C50260) *
              C50125 * C1068 +
          (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 + C2439 * C7892 +
            C2440 * C50393 + C618 * C7893 + C619 * C7888) *
               C50364 +
           ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 + C2441 * C7892 +
            C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
               C50260) *
              C50125 * C1069 +
          ((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
            C2799 * C7893 + C2800 * C7888) *
               C50364 +
           ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 + C2467 * C7892 +
            C2468 * C50393 + (C2457 - C2458) * C7893 +
            (C2459 - C2460) * C7888) *
               C50260) *
              C50125 * C1070 +
          ((C3429 * C7891 + C3430 * C50392 + C2465 * C7892 + C2466 * C50393 +
            (C2458 - C2457) * C7893 + (C2460 - C2459) * C7888) *
               C50364 +
           ((C3434 - C3433) * C7891 + (C3436 - C3435) * C50392 +
            (C2452 - C2451) * C7892 + (C2454 - C2453) * C50393 +
            (C117 * C2416 - C50222 * C2421) * C7893 +
            (C117 * C2422 - C50222 * C2425) * C7888) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50125 * C997 +
           (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50125 * C997 +
           ((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
             C8337 * C7893 + C8338 * C7888) *
                C50364 +
            (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
             (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
             (C164 - C163) * C7893 + (C166 - C165) * C7888) *
                C50364 +
            (C2797 * C7891 + C2798 * C50392 + C8337 * C7892 + C8338 * C50393 +
             (C622 - C623) * C7893 + (C624 - C625) * C7888) *
                C50260) *
               C50125 * C997 +
           ((C618 * C7891 + C619 * C50392 + C620 * C7892 + C621 * C50393 +
             (C623 - C622) * C7893 + (C625 - C624) * C7888) *
                C50364 +
            (C2455 * C7891 + C2456 * C50392 + (C343 - C342) * C7892 +
             (C345 - C344) * C50393 + (C117 * C290 - C50222 * C309) * C7893 +
             (C117 * C310 - C50222 * C320) * C7888) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C7891 +
             (C50222 * C480 - C117 * C465) * C50392 + (C499 - C500) * C7892 +
             (C501 - C502) * C50393 + (C503 - C504) * C7893 +
             (C505 - C506) * C7888) *
                C50364 +
            ((C3596 - C3597) * C7891 + (C3598 - C3599) * C50392 +
             (C2643 - C2644) * C7892 + (C2645 - C2646) * C50393 +
             (C8187 - C8188) * C7893 + (C8189 - C8190) * C7888) *
                C50260) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C443 +
           (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
             C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                C50364 +
            ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
             C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
             (C2949 - C2950) * C7888) *
                C50260) *
               C444 +
           (((C3597 - C3596) * C7891 + (C3599 - C3598) * C50392 +
             (C2644 - C2643) * C7892 + (C2646 - C2645) * C50393 +
             (C8188 - C8187) * C7893 + (C8190 - C8189) * C7888) *
                C50364 +
            ((C3601 - C3600) * C7891 + (C3603 - C3602) * C50392 +
             (C2648 - C2647) * C7892 + (C2650 - C2649) * C50393 +
             (C117 * C2628 - C50222 * C2633) * C7893 +
             (C117 * C2634 - C50222 * C2637) * C7888) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C7891 +
              (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
              (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                 C50364 +
             ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
              C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                 C50260) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C7891 +
              (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
              (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                 C50364 +
             ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
              C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                 C50260) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
              C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                 C50364 +
             ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
              C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                 C50260) *
                C50352 +
            (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
              C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                 C50364 +
             ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
              C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
              (C2949 - C2950) * C7888) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
              (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
              C176 * C7888) *
                 C50364 +
             (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
              C620 * C7893 + C621 * C7888) *
                 C50260) *
                C50352 +
            (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
              (C492 - C491) * C7892 + (C494 - C493) * C50393 +
              (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                 C50364 +
             (C3169 * C7891 + C3170 * C50392 + C8681 * C7892 + C8682 * C50393 +
              (C896 - C897) * C7893 + (C898 - C899) * C7888) *
                 C50260) *
                C50189) *
               C997 +
           (((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
              C8337 * C7893 + C8338 * C7888) *
                 C50364 +
             (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
              (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                 C50260) *
                C50352 +
            ((C3161 * C7891 + C3162 * C50392 + C8485 * C7892 + C8486 * C50393 +
              (C897 - C896) * C7893 + (C899 - C898) * C7888) *
                 C50364 +
             (C3167 * C7891 + C3168 * C50392 + (C2948 - C2947) * C7892 +
              (C2950 - C2949) * C50393 +
              (C117 * C1537 - C50222 * C1544) * C7893 +
              (C117 * C1545 - C50222 * C1549) * C7888) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50125 * C997 +
           (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50125 * C997 +
           ((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
             C8337 * C7893 + C8338 * C7888) *
                C50364 +
            (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
             (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
             (C164 - C163) * C7893 + (C166 - C165) * C7888) *
                C50364 +
            (C2797 * C7891 + C2798 * C50392 + C8337 * C7892 + C8338 * C50393 +
             (C622 - C623) * C7893 + (C624 - C625) * C7888) *
                C50260) *
               C50125 * C997 +
           ((C618 * C7891 + C619 * C50392 + C620 * C7892 + C621 * C50393 +
             (C623 - C622) * C7893 + (C625 - C624) * C7888) *
                C50364 +
            (C2455 * C7891 + C2456 * C50392 + (C343 - C342) * C7892 +
             (C345 - C344) * C50393 + (C117 * C290 - C50222 * C309) * C7893 +
             (C117 * C310 - C50222 * C320) * C7888) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C7891 +
            (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
            (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
               C50364 +
           ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 + C2431 * C7892 +
            C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
               C50260) *
              C50125 * C1068 +
          (((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 + C2439 * C7892 +
            C2440 * C50393 + C618 * C7893 + C619 * C7888) *
               C50364 +
           ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 + C2441 * C7892 +
            C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
               C50260) *
              C50125 * C1069 +
          ((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
            C2799 * C7893 + C2800 * C7888) *
               C50364 +
           ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 + C2467 * C7892 +
            C2468 * C50393 + (C2457 - C2458) * C7893 +
            (C2459 - C2460) * C7888) *
               C50260) *
              C50125 * C1070 +
          ((C3429 * C7891 + C3430 * C50392 + C2465 * C7892 + C2466 * C50393 +
            (C2458 - C2457) * C7893 + (C2460 - C2459) * C7888) *
               C50364 +
           ((C3434 - C3433) * C7891 + (C3436 - C3435) * C50392 +
            (C2452 - C2451) * C7892 + (C2454 - C2453) * C50393 +
            (C117 * C2416 - C50222 * C2421) * C7893 +
            (C117 * C2422 - C50222 * C2425) * C7888) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C7891 +
              (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
              (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                 C50364 +
             ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
              C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                 C50260) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C7891 +
              (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
              (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                 C50364 +
             ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
              C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
              C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                 C50364 +
             ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
              C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                 C50260) *
                C1648 +
            (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
              C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                 C50364 +
             ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
              C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
              (C2949 - C2950) * C7888) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
              (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
              C176 * C7888) *
                 C50364 +
             (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
              C620 * C7893 + C621 * C7888) *
                 C50260) *
                C1648 +
            (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
              (C492 - C491) * C7892 + (C494 - C493) * C50393 +
              (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                 C50364 +
             (C3169 * C7891 + C3170 * C50392 + C8681 * C7892 + C8682 * C50393 +
              (C896 - C897) * C7893 + (C898 - C899) * C7888) *
                 C50260) *
                C50189) *
               C50351 +
           (((C2431 * C7891 + C2432 * C50392 + C2797 * C7892 + C2798 * C50393 +
              C8337 * C7893 + C8338 * C7888) *
                 C50364 +
             (C2437 * C7891 + C2438 * C50392 + C2799 * C7892 + C2800 * C50393 +
              (C342 - C343) * C7893 + (C344 - C345) * C7888) *
                 C50260) *
                C1648 +
            ((C3161 * C7891 + C3162 * C50392 + C8485 * C7892 + C8486 * C50393 +
              (C897 - C896) * C7893 + (C899 - C898) * C7888) *
                 C50364 +
             (C3167 * C7891 + C3168 * C50392 + (C2948 - C2947) * C7892 +
              (C2950 - C2949) * C50393 +
              (C117 * C1537 - C50222 * C1544) * C7893 +
              (C117 * C1545 - C50222 * C1549) * C7888) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C7891 +
             (C50222 * C480 - C117 * C465) * C50392 + (C499 - C500) * C7892 +
             (C501 - C502) * C50393 + (C503 - C504) * C7893 +
             (C505 - C506) * C7888) *
                C50364 +
            ((C3596 - C3597) * C7891 + (C3598 - C3599) * C50392 +
             (C2643 - C2644) * C7892 + (C2645 - C2646) * C50393 +
             (C8187 - C8188) * C7893 + (C8189 - C8190) * C7888) *
                C50260) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C50398 +
           (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
             C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                C50364 +
            ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
             C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
             (C2949 - C2950) * C7888) *
                C50260) *
               C50399 +
           (((C3597 - C3596) * C7891 + (C3599 - C3598) * C50392 +
             (C2644 - C2643) * C7892 + (C2646 - C2645) * C50393 +
             (C8188 - C8187) * C7893 + (C8190 - C8189) * C7888) *
                C50364 +
            ((C3601 - C3600) * C7891 + (C3603 - C3602) * C50392 +
             (C2648 - C2647) * C7892 + (C2650 - C2649) * C50393 +
             (C117 * C2628 - C50222 * C2633) * C7893 +
             (C117 * C2634 - C50222 * C2637) * C7888) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C1648 +
           (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
             C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                C50364 +
            ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
             C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
             (C2949 - C2950) * C7888) *
                C50260) *
               C50189) *
              C277 +
          (((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
             C2799 * C7893 + C2800 * C7888) *
                C50364 +
            ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 +
             C2467 * C7892 + C2468 * C50393 + (C2457 - C2458) * C7893 +
             (C2459 - C2460) * C7888) *
                C50260) *
               C1648 +
           ((C4098 * C7891 + C4099 * C50392 + C3167 * C7892 + C3168 * C50393 +
             (C2948 - C2947) * C7893 + (C2950 - C2949) * C7888) *
                C50364 +
            ((C4103 - C4102) * C7891 + (C4105 - C4104) * C50392 +
             (C3174 - C3173) * C7892 + (C3176 - C3175) * C50393 +
             (C117 * C3146 - C50222 * C3151) * C7893 +
             (C117 * C3152 - C50222 * C3155) * C7888) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C1648 +
           (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
             (C492 - C491) * C7892 + (C494 - C493) * C50393 +
             (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                C50364 +
            (C3169 * C7891 + C3170 * C50392 + C8681 * C7892 + C8682 * C50393 +
             (C896 - C897) * C7893 + (C898 - C899) * C7888) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
             (C164 - C163) * C7893 + (C166 - C165) * C7888) *
                C50364 +
            (C2797 * C7891 + C2798 * C50392 + C8337 * C7892 + C8338 * C50393 +
             (C622 - C623) * C7893 + (C624 - C625) * C7888) *
                C50260) *
               C1648 +
           ((C730 * C7891 + C731 * C50392 + C732 * C7892 + C733 * C50393 +
             (C735 - C734) * C7893 + (C737 - C736) * C7888) *
                C50364 +
            (C8485 * C7891 + C8486 * C50392 + (C897 - C896) * C7892 +
             (C899 - C898) * C50393 + (C117 * C871 - C50222 * C880) * C7893 +
             (C117 * C881 - C50222 * C886) * C7888) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C7891 +
            (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
            (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
               C50364 +
           ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 + C2431 * C7892 +
            C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
               C50260) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C7891 +
            (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
            (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
               C50364 +
           ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 + C3161 * C7892 +
            C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
               C50260) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C7891 +
            (C50222 * C480 - C117 * C465) * C50392 + (C499 - C500) * C7892 +
            (C501 - C502) * C50393 + (C503 - C504) * C7893 +
            (C505 - C506) * C7888) *
               C50364 +
           ((C3596 - C3597) * C7891 + (C3598 - C3599) * C50392 +
            (C2643 - C2644) * C7892 + (C2645 - C2646) * C50393 +
            (C8187 - C8188) * C7893 + (C8189 - C8190) * C7888) *
               C50260) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C7891 +
            (C117 * C1823 - C50222 * C1830) * C50392 +
            (C117 * C1819 - C50222 * C1824) * C7892 +
            (C117 * C1825 - C50222 * C1831) * C50393 +
            (C117 * C1820 - C50222 * C1826) * C7893 +
            (C117 * C1827 - C50222 * C1832) * C7888) *
               C50364 +
           ((C117 * C4500 - C50222 * C4504) * C7891 +
            (C117 * C4505 - C50222 * C4512) * C50392 +
            (C117 * C4501 - C50222 * C4506) * C7892 +
            (C117 * C4507 - C50222 * C4513) * C50393 +
            (C117 * C6004 - C50222 * C6005) * C7893 +
            (C117 * C6006 - C50222 * C6007) * C7888) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C7891 +
             (C50222 * C480 - C117 * C465) * C50392 + (C499 - C500) * C7892 +
             (C501 - C502) * C50393 + (C503 - C504) * C7893 +
             (C505 - C506) * C7888) *
                C50364 +
            ((C3596 - C3597) * C7891 + (C3598 - C3599) * C50392 +
             (C2643 - C2644) * C7892 + (C2645 - C2646) * C50393 +
             (C8187 - C8188) * C7893 + (C8189 - C8190) * C7888) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C50398 +
           (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
             (C492 - C491) * C7892 + (C494 - C493) * C50393 +
             (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                C50364 +
            (C3169 * C7891 + C3170 * C50392 + C8681 * C7892 + C8682 * C50393 +
             (C896 - C897) * C7893 + (C898 - C899) * C7888) *
                C50260) *
               C50399 +
           (((C500 - C499) * C7891 + (C502 - C501) * C50392 +
             (C504 - C503) * C7892 + (C506 - C505) * C50393 +
             (C508 - C507) * C7893 + (C510 - C509) * C7888) *
                C50364 +
            ((C2644 - C2643) * C7891 + (C2646 - C2645) * C50392 +
             (C8188 - C8187) * C7892 + (C8190 - C8189) * C50393 +
             (C117 * C1190 - C50222 * C1197) * C7893 +
             (C117 * C1198 - C50222 * C1202) * C7888) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C7891 + (C154 - C153) * C50392 +
             (C156 - C155) * C7892 + (C158 - C157) * C50393 + C175 * C7893 +
             C176 * C7888) *
                C50364 +
            (C2439 * C7891 + C2440 * C50392 + C618 * C7892 + C619 * C50393 +
             C620 * C7893 + C621 * C7888) *
                C50260) *
               C1648 +
           (((C488 - C487) * C7891 + (C490 - C489) * C50392 +
             (C492 - C491) * C7892 + (C494 - C493) * C50393 +
             (C496 - C495) * C7893 + (C498 - C497) * C7888) *
                C50364 +
            (C3169 * C7891 + C3170 * C50392 + C8681 * C7892 + C8682 * C50393 +
             (C896 - C897) * C7893 + (C898 - C899) * C7888) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C7891 + C172 * C50392 + C173 * C7892 + C174 * C50393 +
             (C164 - C163) * C7893 + (C166 - C165) * C7888) *
                C50364 +
            (C2797 * C7891 + C2798 * C50392 + C8337 * C7892 + C8338 * C50393 +
             (C622 - C623) * C7893 + (C624 - C625) * C7888) *
                C50260) *
               C1648 +
           ((C730 * C7891 + C731 * C50392 + C732 * C7892 + C733 * C50393 +
             (C735 - C734) * C7893 + (C737 - C736) * C7888) *
                C50364 +
            (C8485 * C7891 + C8486 * C50392 + (C897 - C896) * C7892 +
             (C899 - C898) * C50393 + (C117 * C871 - C50222 * C880) * C7893 +
             (C117 * C881 - C50222 * C886) * C7888) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C7891 +
             (C50222 * C143 - C117 * C130) * C50392 + (C151 - C152) * C7892 +
             (C153 - C154) * C50393 + C171 * C7893 + C172 * C7888) *
                C50364 +
            ((C2427 - C2428) * C7891 + (C2429 - C2430) * C50392 +
             C2431 * C7892 + C2432 * C50393 + C2797 * C7893 + C2798 * C7888) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C7891 +
             (C117 * C457 - C50222 * C476) * C50392 + (C487 - C488) * C7892 +
             (C489 - C490) * C50393 + C730 * C7893 + C731 * C7888) *
                C50364 +
            ((C3157 - C3158) * C7891 + (C3159 - C3160) * C50392 +
             C3161 * C7892 + C3162 * C50393 + C8485 * C7893 + C8486 * C7888) *
                C50260) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C7891 + (C2430 - C2429) * C50392 +
             C2439 * C7892 + C2440 * C50393 + C618 * C7893 + C619 * C7888) *
                C50364 +
            ((C2434 - C2433) * C7891 + (C2436 - C2435) * C50392 +
             C2441 * C7892 + C2442 * C50393 + C2455 * C7893 + C2456 * C7888) *
                C50260) *
               C1648 +
           (((C3158 - C3157) * C7891 + (C3160 - C3159) * C50392 +
             C3169 * C7892 + C3170 * C50393 + C8681 * C7893 + C8682 * C7888) *
                C50364 +
            ((C3164 - C3163) * C7891 + (C3166 - C3165) * C50392 +
             C3171 * C7892 + C3172 * C50393 + (C2947 - C2948) * C7893 +
             (C2949 - C2950) * C7888) *
                C50260) *
               C50189) *
              C277 +
          (((C2461 * C7891 + C2462 * C50392 + C2437 * C7892 + C2438 * C50393 +
             C2799 * C7893 + C2800 * C7888) *
                C50364 +
            ((C2444 - C2443) * C7891 + (C2446 - C2445) * C50392 +
             C2467 * C7892 + C2468 * C50393 + (C2457 - C2458) * C7893 +
             (C2459 - C2460) * C7888) *
                C50260) *
               C1648 +
           ((C4098 * C7891 + C4099 * C50392 + C3167 * C7892 + C3168 * C50393 +
             (C2948 - C2947) * C7893 + (C2950 - C2949) * C7888) *
                C50364 +
            ((C4103 - C4102) * C7891 + (C4105 - C4104) * C50392 +
             (C3174 - C3173) * C7892 + (C3176 - C3175) * C50393 +
             (C117 * C3146 - C50222 * C3151) * C7893 +
             (C117 * C3152 - C50222 * C3155) * C7888) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50125 * C50351 +
           (((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50125 * C50351 +
           ((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
             C13992 * C50067) *
                C50364 +
            (C13589 * C2266 + C13590 * C2261 +
             (C10751 - C10752 + C10753 - C10754) * C2267 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          (((C10577 * C2266 + C10578 * C2261 +
             (C10554 - C10553 + C10556 - C10555) * C2267 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C50364 +
            (C13991 * C2266 + C13992 * C2261 +
             (C11087 - C11088 + C11089 - C11090) * C2267 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50125 * C50351 +
           ((C11095 * C2266 + C11096 * C2261 +
             (C11088 - C11087 + C11090 - C11089) * C2267 +
             (C11092 - C11091 + C11094 - C11093) * C50067) *
                C50364 +
            ((C10752 - C10751 + C10754 - C10753) * C2266 +
             (C10756 - C10755 + C10758 - C10757) * C2261 +
             (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                 C2267 +
             (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C2266 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C2261 +
              (C10537 - C10538 + C10539 - C10540) * C2267 +
              (C10541 - C10542 + C10543 - C10544) * C50067) *
                 C50364 +
             ((C13543 - C13544 + C13545 - C13546) * C2266 +
              (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
              C13584 * C50067) *
                 C50260) *
                C50352 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C2266 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C2261 +
              (C10905 - C10906 + C10907 - C10908) * C2267 +
              (C10909 - C10910 + C10911 - C10912) * C50067) *
                 C50364 +
             ((C14445 - C14446 + C14447 - C14448) * C2266 +
              (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
              C14470 * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C13544 - C13543 + C13546 - C13545) * C2266 +
              (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
              C13586 * C50067) *
                 C50364 +
             ((C13559 - C13560 + C13561 - C13562) * C2266 +
              (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
              C13588 * C50067) *
                 C50260) *
                C50352 +
            (((C14446 - C14445 + C14448 - C14447) * C2266 +
              (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
              C14472 * C50067) *
                 C50364 +
             ((C50365 * C1538 - C10534 * C1534 + C50286 * C2629 -
               C10535 * C2626) *
                  C2266 +
              (C50365 * C1546 - C10534 * C1539 + C50286 * C2635 -
               C10535 * C2630) *
                  C2261 +
              (C14461 - C14462 + C14463 - C14464) * C2267 +
              (C14465 - C14466 + C14467 - C14468) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C10538 - C10537 + C10540 - C10539) * C2266 +
              (C10542 - C10541 + C10544 - C10543) * C2261 +
              (C10546 - C10545 + C10548 - C10547) * C2267 +
              (C10550 - C10549 + C10552 - C10551) * C50067) *
                 C50364 +
             (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
              C11096 * C50067) *
                 C50260) *
                C50352 +
            (((C10906 - C10905 + C10908 - C10907) * C2266 +
              (C10910 - C10909 + C10912 - C10911) * C2261 +
              (C10914 - C10913 + C10916 - C10915) * C2267 +
              (C10918 - C10917 + C10920 - C10919) * C50067) *
                 C50364 +
             (C14471 * C2266 + C14472 * C2261 +
              (C11459 - C11460 + C11461 - C11462) * C2267 +
              (C11463 - C11464 + C11465 - C11466) * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           (((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
              C13992 * C50067) *
                 C50364 +
             (C13589 * C2266 + C13590 * C2261 +
              (C10751 - C10752 + C10753 - C10754) * C2267 +
              (C10755 - C10756 + C10757 - C10758) * C50067) *
                 C50260) *
                C50352 +
            ((C14469 * C2266 + C14470 * C2261 +
              (C11460 - C11459 + C11462 - C11461) * C2267 +
              (C11464 - C11463 + C11466 - C11465) * C50067) *
                 C50364 +
             ((C14462 - C14461 + C14464 - C14463) * C2266 +
              (C14466 - C14465 + C14468 - C14467) * C2261 +
              (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
               C50286 * C2633) *
                  C2267 +
              (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50125 * C276 +
           (((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50125 * C277 +
           (((C13560 - C13559 + C13562 - C13561) * C2266 +
             (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
             C13590 * C50067) *
                C50364 +
            ((C50365 * C1077 - C10534 * C1073 + C50286 * C3147 -
              C10535 * C3144) *
                 C2266 +
             (C50365 * C1085 - C10534 * C1078 + C50286 * C3153 -
              C10535 * C3148) *
                 C2261 +
             (C13575 - C13576 + C13577 - C13578) * C2267 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50125 * C276 +
           ((C13583 * C2266 + C13584 * C2261 +
             (C10736 - C10735 + C10738 - C10737) * C2267 +
             (C10740 - C10739 + C10742 - C10741) * C50067) *
                C50364 +
            (C13589 * C2266 + C13590 * C2261 +
             (C10751 - C10752 + C10753 - C10754) * C2267 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C277 +
           ((C13587 * C2266 + C13588 * C2261 +
             (C10752 - C10751 + C10754 - C10753) * C2267 +
             (C10756 - C10755 + C10758 - C10757) * C50067) *
                C50364 +
            ((C13576 - C13575 + C13578 - C13577) * C2266 +
             (C13580 - C13579 + C13582 - C13581) * C2261 +
             (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C2267 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C2266 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C2261 +
            (C10537 - C10538 + C10539 - C10540) * C2267 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C50364 +
           ((C50365 * C291 - C10534 * C281 + C50286 * C872 - C10535 * C867) *
                C2266 +
            (C50365 * C311 - C10534 * C292 + C50286 * C882 - C10535 * C873) *
                C2261 +
            (C10728 - C10727 + C10730 - C10729) * C2267 +
            (C10732 - C10731 + C10734 - C10733) * C50067) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C10538 - C10537 + C10540 - C10539) * C2266 +
            (C10542 - C10541 + C10544 - C10543) * C2261 +
            (C10546 - C10545 + C10548 - C10547) * C2267 +
            (C10550 - C10549 + C10552 - C10551) * C50067) *
               C50364 +
           ((C10727 - C10728 + C10729 - C10730) * C2266 +
            (C10731 - C10732 + C10733 - C10734) * C2261 + C11095 * C2267 +
            C11096 * C50067) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C10577 * C2266 + C10578 * C2261 +
            (C10554 - C10553 + C10556 - C10555) * C2267 +
            (C10558 - C10557 + C10560 - C10559) * C50067) *
               C50364 +
           ((C10736 - C10735 + C10738 - C10737) * C2266 +
            (C10740 - C10739 + C10742 - C10741) * C2261 +
            (C11087 - C11088 + C11089 - C11090) * C2267 +
            (C11091 - C11092 + C11093 - C11094) * C50067) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C10579 * C2266 + C10580 * C2261 +
            (C10562 - C10561 + C10564 - C10563) * C2267 +
            (C10566 - C10565 + C10568 - C10567) * C50067) *
               C50364 +
           ((C11088 - C11087 + C11090 - C11089) * C2266 +
            (C11092 - C11091 + C11094 - C11093) * C2261 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C2267 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C50067) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C443 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C10534 * C867 - C50365 * C872 + C10535 * C1187 - C50286 * C1191) *
                 C2266 +
             (C10534 * C873 - C50365 * C882 + C10535 * C1192 - C50286 * C1199) *
                 C2261 +
             (C11452 - C11451 + C11454 - C11453) * C2267 +
             (C11456 - C11455 + C11458 - C11457) * C50067) *
                C50260) *
               C444 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C2266 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C2261 +
             (C10921 - C10922 + C10923 - C10924) * C2267 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C50364 +
            ((C50365 * C1191 - C10534 * C1187 + C50286 * C4504 -
              C10535 * C4500) *
                 C2266 +
             (C50365 * C1199 - C10534 * C1192 + C50286 * C4512 -
              C10535 * C4505) *
                 C2261 +
             (C13785 - C13786 + C13787 - C13788) * C2267 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C443 +
           (((C10906 - C10905 + C10908 - C10907) * C2266 +
             (C10910 - C10909 + C10912 - C10911) * C2261 +
             (C10914 - C10913 + C10916 - C10915) * C2267 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C50364 +
            ((C11451 - C11452 + C11453 - C11454) * C2266 +
             (C11455 - C11456 + C11457 - C11458) * C2261 +
             (C11459 - C11460 + C11461 - C11462) * C2267 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C444 +
           (((C10922 - C10921 + C10924 - C10923) * C2266 +
             (C10926 - C10925 + C10928 - C10927) * C2261 +
             (C10930 - C10929 + C10932 - C10931) * C2267 +
             (C10934 - C10933 + C10936 - C10935) * C50067) *
                C50364 +
            ((C13786 - C13785 + C13788 - C13787) * C2266 +
             (C13790 - C13789 + C13792 - C13791) * C2261 +
             (C10534 * C1189 - C50365 * C1195 + C10535 * C6004 -
              C50286 * C6005) *
                 C2267 +
             (C10534 * C1196 - C50365 * C1201 + C10535 * C6006 -
              C50286 * C6007) *
                 C50067) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50352 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C10534 * C867 - C50365 * C872 + C10535 * C1187 - C50286 * C1191) *
                 C2266 +
             (C10534 * C873 - C50365 * C882 + C10535 * C1192 - C50286 * C1199) *
                 C2261 +
             (C11452 - C11451 + C11454 - C11453) * C2267 +
             (C11456 - C11455 + C11458 - C11457) * C50067) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50352 +
           (((C10906 - C10905 + C10908 - C10907) * C2266 +
             (C10910 - C10909 + C10912 - C10911) * C2261 +
             (C10914 - C10913 + C10916 - C10915) * C2267 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C50364 +
            ((C11451 - C11452 + C11453 - C11454) * C2266 +
             (C11455 - C11456 + C11457 - C11458) * C2261 +
             (C11459 - C11460 + C11461 - C11462) * C2267 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          (((C10577 * C2266 + C10578 * C2261 +
             (C10554 - C10553 + C10556 - C10555) * C2267 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C50364 +
            (C13991 * C2266 + C13992 * C2261 +
             (C11087 - C11088 + C11089 - C11090) * C2267 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50352 +
           ((C11255 * C2266 + C11256 * C2261 +
             (C11248 - C11247 + C11250 - C11249) * C2267 +
             (C11252 - C11251 + C11254 - C11253) * C50067) *
                C50364 +
            ((C11460 - C11459 + C11462 - C11461) * C2266 +
             (C11464 - C11463 + C11466 - C11465) * C2261 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C2267 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C2266 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C2261 +
            (C10537 - C10538 + C10539 - C10540) * C2267 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C50364 +
           ((C50365 * C291 - C10534 * C281 + C50286 * C872 - C10535 * C867) *
                C2266 +
            (C50365 * C311 - C10534 * C292 + C50286 * C882 - C10535 * C873) *
                C2261 +
            (C10728 - C10727 + C10730 - C10729) * C2267 +
            (C10732 - C10731 + C10734 - C10733) * C50067) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C10538 - C10537 + C10540 - C10539) * C2266 +
            (C10542 - C10541 + C10544 - C10543) * C2261 +
            (C10546 - C10545 + C10548 - C10547) * C2267 +
            (C10550 - C10549 + C10552 - C10551) * C50067) *
               C50364 +
           ((C10727 - C10728 + C10729 - C10730) * C2266 +
            (C10731 - C10732 + C10733 - C10734) * C2261 + C11095 * C2267 +
            C11096 * C50067) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C10577 * C2266 + C10578 * C2261 +
            (C10554 - C10553 + C10556 - C10555) * C2267 +
            (C10558 - C10557 + C10560 - C10559) * C50067) *
               C50364 +
           ((C10736 - C10735 + C10738 - C10737) * C2266 +
            (C10740 - C10739 + C10742 - C10741) * C2261 +
            (C11087 - C11088 + C11089 - C11090) * C2267 +
            (C11091 - C11092 + C11093 - C11094) * C50067) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C10579 * C2266 + C10580 * C2261 +
            (C10562 - C10561 + C10564 - C10563) * C2267 +
            (C10566 - C10565 + C10568 - C10567) * C50067) *
               C50364 +
           ((C11088 - C11087 + C11090 - C11089) * C2266 +
            (C11092 - C11091 + C11094 - C11093) * C2261 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C2267 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C50067) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50125 * C276 +
           (((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50125 * C277 +
           (((C13560 - C13559 + C13562 - C13561) * C2266 +
             (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
             C13590 * C50067) *
                C50364 +
            ((C50365 * C1077 - C10534 * C1073 + C50286 * C3147 -
              C10535 * C3144) *
                 C2266 +
             (C50365 * C1085 - C10534 * C1078 + C50286 * C3153 -
              C10535 * C3148) *
                 C2261 +
             (C13575 - C13576 + C13577 - C13578) * C2267 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50125 * C276 +
           ((C13583 * C2266 + C13584 * C2261 +
             (C10736 - C10735 + C10738 - C10737) * C2267 +
             (C10740 - C10739 + C10742 - C10741) * C50067) *
                C50364 +
            (C13589 * C2266 + C13590 * C2261 +
             (C10751 - C10752 + C10753 - C10754) * C2267 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C277 +
           ((C13587 * C2266 + C13588 * C2261 +
             (C10752 - C10751 + C10754 - C10753) * C2267 +
             (C10756 - C10755 + C10758 - C10757) * C50067) *
                C50364 +
            ((C13576 - C13575 + C13578 - C13577) * C2266 +
             (C13580 - C13579 + C13582 - C13581) * C2261 +
             (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C2267 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50125 * C50396 +
           (((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50397 +
           (((C13560 - C13559 + C13562 - C13561) * C2266 +
             (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
             C13590 * C50067) *
                C50364 +
            ((C14797 - C14798 + C14799 - C14800) * C2266 +
             (C14801 - C14802 + C14803 - C14804) * C2261 +
             (C13575 - C13576 + C13577 - C13578) * C2267 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50125 * C50396 +
           ((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
             C13992 * C50067) *
                C50364 +
            (C13589 * C2266 + C13590 * C2261 +
             (C10751 - C10752 + C10753 - C10754) * C2267 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50397 +
           ((C13587 * C2266 + C13588 * C2261 +
             (C10752 - C10751 + C10754 - C10753) * C2267 +
             (C10756 - C10755 + C10758 - C10757) * C50067) *
                C50364 +
            ((C13576 - C13575 + C13578 - C13577) * C2266 +
             (C13580 - C13579 + C13582 - C13581) * C2261 +
             (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C2267 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50352 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50396 +
          ((((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50352 +
           (((C14446 - C14445 + C14448 - C14447) * C2266 +
             (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
             C14472 * C50067) *
                C50364 +
            ((C15653 - C15654 + C15655 - C15656) * C2266 +
             (C15657 - C15658 + C15659 - C15660) * C2261 +
             (C14461 - C14462 + C14463 - C14464) * C2267 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50189) *
              C50397 +
          ((((C13560 - C13559 + C13562 - C13561) * C2266 +
             (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
             C13590 * C50067) *
                C50364 +
            ((C14797 - C14798 + C14799 - C14800) * C2266 +
             (C14801 - C14802 + C14803 - C14804) * C2261 +
             (C13575 - C13576 + C13577 - C13578) * C2267 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50352 +
           (((C15654 - C15653 + C15656 - C15655) * C2266 +
             (C15658 - C15657 + C15660 - C15659) * C2261 +
             (C14462 - C14461 + C14464 - C14463) * C2267 +
             (C14466 - C14465 + C14468 - C14467) * C50067) *
                C50364 +
            ((C10534 * C3144 - C50365 * C3147 + C10535 * C3587 -
              C50286 * C3589) *
                 C2266 +
             (C10534 * C3148 - C50365 * C3153 + C10535 * C3590 -
              C50286 * C3593) *
                 C2261 +
             (C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
              C50286 * C3591) *
                 C2267 +
             (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C2266 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C2261 +
            (C10537 - C10538 + C10539 - C10540) * C2267 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C50364 +
           ((C13543 - C13544 + C13545 - C13546) * C2266 +
            (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
            C13584 * C50067) *
               C50260) *
              C50125 * C1068 +
          (((C13544 - C13543 + C13546 - C13545) * C2266 +
            (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
            C13586 * C50067) *
               C50364 +
           ((C13559 - C13560 + C13561 - C13562) * C2266 +
            (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
            C13588 * C50067) *
               C50260) *
              C50125 * C1069 +
          (((C13560 - C13559 + C13562 - C13561) * C2266 +
            (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
            C13590 * C50067) *
               C50364 +
           ((C14797 - C14798 + C14799 - C14800) * C2266 +
            (C14801 - C14802 + C14803 - C14804) * C2261 +
            (C13575 - C13576 + C13577 - C13578) * C2267 +
            (C13579 - C13580 + C13581 - C13582) * C50067) *
               C50260) *
              C50125 * C1070 +
          (((C14798 - C14797 + C14800 - C14799) * C2266 +
            (C14802 - C14801 + C14804 - C14803) * C2261 +
            (C13576 - C13575 + C13578 - C13577) * C2267 +
            (C13580 - C13579 + C13582 - C13581) * C50067) *
               C50364 +
           ((C10534 * C2414 - C50365 * C2417 + C10535 * C4089 -
             C50286 * C4091) *
                C2266 +
            (C10534 * C2418 - C50365 * C2423 + C10535 * C4092 -
             C50286 * C4095) *
                C2261 +
            (C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
             C50286 * C4093) *
                C2267 +
            (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
             C50286 * C4096) *
                C50067) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50125 * C997 +
           (((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50125 * C997 +
           ((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
             C13992 * C50067) *
                C50364 +
            (C13589 * C2266 + C13590 * C2261 +
             (C10751 - C10752 + C10753 - C10754) * C2267 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C10577 * C2266 + C10578 * C2261 +
             (C10554 - C10553 + C10556 - C10555) * C2267 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C50364 +
            (C13991 * C2266 + C13992 * C2261 +
             (C11087 - C11088 + C11089 - C11090) * C2267 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50125 * C997 +
           ((C11095 * C2266 + C11096 * C2261 +
             (C11088 - C11087 + C11090 - C11089) * C2267 +
             (C11092 - C11091 + C11094 - C11093) * C50067) *
                C50364 +
            ((C10752 - C10751 + C10754 - C10753) * C2266 +
             (C10756 - C10755 + C10758 - C10757) * C2261 +
             (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                 C2267 +
             (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C443 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C444 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C2266 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C2261 +
             (C10921 - C10922 + C10923 - C10924) * C2267 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C50364 +
            ((C14999 - C15000 + C15001 - C15002) * C2266 +
             (C15003 - C15004 + C15005 - C15006) * C2261 +
             (C13785 - C13786 + C13787 - C13788) * C2267 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C445) *
              C997 +
          ((((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C443 +
           (((C14446 - C14445 + C14448 - C14447) * C2266 +
             (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
             C14472 * C50067) *
                C50364 +
            ((C50365 * C1538 - C10534 * C1534 + C50286 * C2629 -
              C10535 * C2626) *
                 C2266 +
             (C50365 * C1546 - C10534 * C1539 + C50286 * C2635 -
              C10535 * C2630) *
                 C2261 +
             (C14461 - C14462 + C14463 - C14464) * C2267 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C444 +
           (((C15000 - C14999 + C15002 - C15001) * C2266 +
             (C15004 - C15003 + C15006 - C15005) * C2261 +
             (C13786 - C13785 + C13788 - C13787) * C2267 +
             (C13790 - C13789 + C13792 - C13791) * C50067) *
                C50364 +
            ((C10534 * C2626 - C50365 * C2629 + C10535 * C4502 -
              C50286 * C4508) *
                 C2266 +
             (C10534 * C2630 - C50365 * C2635 + C10535 * C4509 -
              C50286 * C4514) *
                 C2261 +
             (C10534 * C2627 - C50365 * C2631 + C10535 * C4503 -
              C50286 * C4510) *
                 C2267 +
             (C10534 * C2632 - C50365 * C2636 + C10535 * C4511 -
              C50286 * C4515) *
                 C50067) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C2266 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C2261 +
              (C10537 - C10538 + C10539 - C10540) * C2267 +
              (C10541 - C10542 + C10543 - C10544) * C50067) *
                 C50364 +
             ((C13543 - C13544 + C13545 - C13546) * C2266 +
              (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
              C13584 * C50067) *
                 C50260) *
                C50352 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C2266 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C2261 +
              (C10905 - C10906 + C10907 - C10908) * C2267 +
              (C10909 - C10910 + C10911 - C10912) * C50067) *
                 C50364 +
             ((C14445 - C14446 + C14447 - C14448) * C2266 +
              (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
              C14470 * C50067) *
                 C50260) *
                C50189) *
               C997 +
           ((((C13544 - C13543 + C13546 - C13545) * C2266 +
              (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
              C13586 * C50067) *
                 C50364 +
             ((C13559 - C13560 + C13561 - C13562) * C2266 +
              (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
              C13588 * C50067) *
                 C50260) *
                C50352 +
            (((C14446 - C14445 + C14448 - C14447) * C2266 +
              (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
              C14472 * C50067) *
                 C50364 +
             ((C50365 * C1538 - C10534 * C1534 + C50286 * C2629 -
               C10535 * C2626) *
                  C2266 +
              (C50365 * C1546 - C10534 * C1539 + C50286 * C2635 -
               C10535 * C2630) *
                  C2261 +
              (C14461 - C14462 + C14463 - C14464) * C2267 +
              (C14465 - C14466 + C14467 - C14468) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C10538 - C10537 + C10540 - C10539) * C2266 +
              (C10542 - C10541 + C10544 - C10543) * C2261 +
              (C10546 - C10545 + C10548 - C10547) * C2267 +
              (C10550 - C10549 + C10552 - C10551) * C50067) *
                 C50364 +
             (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
              C11096 * C50067) *
                 C50260) *
                C50352 +
            (((C10906 - C10905 + C10908 - C10907) * C2266 +
              (C10910 - C10909 + C10912 - C10911) * C2261 +
              (C10914 - C10913 + C10916 - C10915) * C2267 +
              (C10918 - C10917 + C10920 - C10919) * C50067) *
                 C50364 +
             (C14471 * C2266 + C14472 * C2261 +
              (C11459 - C11460 + C11461 - C11462) * C2267 +
              (C11463 - C11464 + C11465 - C11466) * C50067) *
                 C50260) *
                C50189) *
               C997 +
           (((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
              C13992 * C50067) *
                 C50364 +
             (C13589 * C2266 + C13590 * C2261 +
              (C10751 - C10752 + C10753 - C10754) * C2267 +
              (C10755 - C10756 + C10757 - C10758) * C50067) *
                 C50260) *
                C50352 +
            ((C14469 * C2266 + C14470 * C2261 +
              (C11460 - C11459 + C11462 - C11461) * C2267 +
              (C11464 - C11463 + C11466 - C11465) * C50067) *
                 C50364 +
             ((C14462 - C14461 + C14464 - C14463) * C2266 +
              (C14466 - C14465 + C14468 - C14467) * C2261 +
              (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
               C50286 * C2633) *
                  C2267 +
              (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50125 * C997 +
           (((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50125 * C997 +
           ((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
             C13992 * C50067) *
                C50364 +
            (C13589 * C2266 + C13590 * C2261 +
             (C10751 - C10752 + C10753 - C10754) * C2267 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C10577 * C2266 + C10578 * C2261 +
             (C10554 - C10553 + C10556 - C10555) * C2267 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C50364 +
            (C13991 * C2266 + C13992 * C2261 +
             (C11087 - C11088 + C11089 - C11090) * C2267 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50125 * C997 +
           ((C11095 * C2266 + C11096 * C2261 +
             (C11088 - C11087 + C11090 - C11089) * C2267 +
             (C11092 - C11091 + C11094 - C11093) * C50067) *
                C50364 +
            ((C10752 - C10751 + C10754 - C10753) * C2266 +
             (C10756 - C10755 + C10758 - C10757) * C2261 +
             (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                 C2267 +
             (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C2266 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C2261 +
            (C10537 - C10538 + C10539 - C10540) * C2267 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C50364 +
           ((C13543 - C13544 + C13545 - C13546) * C2266 +
            (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
            C13584 * C50067) *
               C50260) *
              C50125 * C1068 +
          (((C13544 - C13543 + C13546 - C13545) * C2266 +
            (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
            C13586 * C50067) *
               C50364 +
           ((C13559 - C13560 + C13561 - C13562) * C2266 +
            (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
            C13588 * C50067) *
               C50260) *
              C50125 * C1069 +
          (((C13560 - C13559 + C13562 - C13561) * C2266 +
            (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
            C13590 * C50067) *
               C50364 +
           ((C14797 - C14798 + C14799 - C14800) * C2266 +
            (C14801 - C14802 + C14803 - C14804) * C2261 +
            (C13575 - C13576 + C13577 - C13578) * C2267 +
            (C13579 - C13580 + C13581 - C13582) * C50067) *
               C50260) *
              C50125 * C1070 +
          (((C14798 - C14797 + C14800 - C14799) * C2266 +
            (C14802 - C14801 + C14804 - C14803) * C2261 +
            (C13576 - C13575 + C13578 - C13577) * C2267 +
            (C13580 - C13579 + C13582 - C13581) * C50067) *
               C50364 +
           ((C10534 * C2414 - C50365 * C2417 + C10535 * C4089 -
             C50286 * C4091) *
                C2266 +
            (C10534 * C2418 - C50365 * C2423 + C10535 * C4092 -
             C50286 * C4095) *
                C2261 +
            (C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
             C50286 * C4093) *
                C2267 +
            (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
             C50286 * C4096) *
                C50067) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C2266 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C2261 +
              (C10537 - C10538 + C10539 - C10540) * C2267 +
              (C10541 - C10542 + C10543 - C10544) * C50067) *
                 C50364 +
             ((C13543 - C13544 + C13545 - C13546) * C2266 +
              (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
              C13584 * C50067) *
                 C50260) *
                C1648 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C2266 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C2261 +
              (C10905 - C10906 + C10907 - C10908) * C2267 +
              (C10909 - C10910 + C10911 - C10912) * C50067) *
                 C50364 +
             ((C14445 - C14446 + C14447 - C14448) * C2266 +
              (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
              C14470 * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C13544 - C13543 + C13546 - C13545) * C2266 +
              (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
              C13586 * C50067) *
                 C50364 +
             ((C13559 - C13560 + C13561 - C13562) * C2266 +
              (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
              C13588 * C50067) *
                 C50260) *
                C1648 +
            (((C14446 - C14445 + C14448 - C14447) * C2266 +
              (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
              C14472 * C50067) *
                 C50364 +
             ((C15653 - C15654 + C15655 - C15656) * C2266 +
              (C15657 - C15658 + C15659 - C15660) * C2261 +
              (C14461 - C14462 + C14463 - C14464) * C2267 +
              (C14465 - C14466 + C14467 - C14468) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C10538 - C10537 + C10540 - C10539) * C2266 +
              (C10542 - C10541 + C10544 - C10543) * C2261 +
              (C10546 - C10545 + C10548 - C10547) * C2267 +
              (C10550 - C10549 + C10552 - C10551) * C50067) *
                 C50364 +
             (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
              C11096 * C50067) *
                 C50260) *
                C1648 +
            (((C10906 - C10905 + C10908 - C10907) * C2266 +
              (C10910 - C10909 + C10912 - C10911) * C2261 +
              (C10914 - C10913 + C10916 - C10915) * C2267 +
              (C10918 - C10917 + C10920 - C10919) * C50067) *
                 C50364 +
             (C14471 * C2266 + C14472 * C2261 +
              (C11459 - C11460 + C11461 - C11462) * C2267 +
              (C11463 - C11464 + C11465 - C11466) * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           (((C13583 * C2266 + C13584 * C2261 + C13991 * C2267 +
              C13992 * C50067) *
                 C50364 +
             (C13589 * C2266 + C13590 * C2261 +
              (C10751 - C10752 + C10753 - C10754) * C2267 +
              (C10755 - C10756 + C10757 - C10758) * C50067) *
                 C50260) *
                C1648 +
            ((C14469 * C2266 + C14470 * C2261 +
              (C11460 - C11459 + C11462 - C11461) * C2267 +
              (C11464 - C11463 + C11466 - C11465) * C50067) *
                 C50364 +
             ((C14462 - C14461 + C14464 - C14463) * C2266 +
              (C14466 - C14465 + C14468 - C14467) * C2261 +
              (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
               C50286 * C2633) *
                  C2267 +
              (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50398 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50399 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C2266 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C2261 +
             (C10921 - C10922 + C10923 - C10924) * C2267 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C50364 +
            ((C14999 - C15000 + C15001 - C15002) * C2266 +
             (C15003 - C15004 + C15005 - C15006) * C2261 +
             (C13785 - C13786 + C13787 - C13788) * C2267 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C2064) *
              C50351 +
          ((((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C50398 +
           (((C14446 - C14445 + C14448 - C14447) * C2266 +
             (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
             C14472 * C50067) *
                C50364 +
            ((C15653 - C15654 + C15655 - C15656) * C2266 +
             (C15657 - C15658 + C15659 - C15660) * C2261 +
             (C14461 - C14462 + C14463 - C14464) * C2267 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50399 +
           (((C15000 - C14999 + C15002 - C15001) * C2266 +
             (C15004 - C15003 + C15006 - C15005) * C2261 +
             (C13786 - C13785 + C13788 - C13787) * C2267 +
             (C13790 - C13789 + C13792 - C13791) * C50067) *
                C50364 +
            ((C10534 * C2626 - C50365 * C2629 + C10535 * C4502 -
              C50286 * C4508) *
                 C2266 +
             (C10534 * C2630 - C50365 * C2635 + C10535 * C4509 -
              C50286 * C4514) *
                 C2261 +
             (C10534 * C2627 - C50365 * C2631 + C10535 * C4503 -
              C50286 * C4510) *
                 C2267 +
             (C10534 * C2632 - C50365 * C2636 + C10535 * C4511 -
              C50286 * C4515) *
                 C50067) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C276 +
          ((((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C2266 +
             (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
             C14472 * C50067) *
                C50364 +
            ((C15653 - C15654 + C15655 - C15656) * C2266 +
             (C15657 - C15658 + C15659 - C15660) * C2261 +
             (C14461 - C14462 + C14463 - C14464) * C2267 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50189) *
              C277 +
          ((((C13560 - C13559 + C13562 - C13561) * C2266 +
             (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
             C13590 * C50067) *
                C50364 +
            ((C14797 - C14798 + C14799 - C14800) * C2266 +
             (C14801 - C14802 + C14803 - C14804) * C2261 +
             (C13575 - C13576 + C13577 - C13578) * C2267 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C1648 +
           (((C15654 - C15653 + C15656 - C15655) * C2266 +
             (C15658 - C15657 + C15660 - C15659) * C2261 +
             (C14462 - C14461 + C14464 - C14463) * C2267 +
             (C14466 - C14465 + C14468 - C14467) * C50067) *
                C50364 +
            ((C10534 * C3144 - C50365 * C3147 + C10535 * C3587 -
              C50286 * C3589) *
                 C2266 +
             (C10534 * C3148 - C50365 * C3153 + C10535 * C3590 -
              C50286 * C3593) *
                 C2261 +
             (C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
              C50286 * C3591) *
                 C2267 +
             (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C1648 +
           (((C10906 - C10905 + C10908 - C10907) * C2266 +
             (C10910 - C10909 + C10912 - C10911) * C2261 +
             (C10914 - C10913 + C10916 - C10915) * C2267 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C50364 +
            (C14471 * C2266 + C14472 * C2261 +
             (C11459 - C11460 + C11461 - C11462) * C2267 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C10577 * C2266 + C10578 * C2261 +
             (C10554 - C10553 + C10556 - C10555) * C2267 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C50364 +
            (C13991 * C2266 + C13992 * C2261 +
             (C11087 - C11088 + C11089 - C11090) * C2267 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C1648 +
           ((C11255 * C2266 + C11256 * C2261 +
             (C11248 - C11247 + C11250 - C11249) * C2267 +
             (C11252 - C11251 + C11254 - C11253) * C50067) *
                C50364 +
            ((C11460 - C11459 + C11462 - C11461) * C2266 +
             (C11464 - C11463 + C11466 - C11465) * C2261 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C2267 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C2266 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C2261 +
            (C10537 - C10538 + C10539 - C10540) * C2267 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C50364 +
           ((C13543 - C13544 + C13545 - C13546) * C2266 +
            (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
            C13584 * C50067) *
               C50260) *
              C1814 +
          (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C2266 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C2261 +
            (C10905 - C10906 + C10907 - C10908) * C2267 +
            (C10909 - C10910 + C10911 - C10912) * C50067) *
               C50364 +
           ((C14445 - C14446 + C14447 - C14448) * C2266 +
            (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
            C14470 * C50067) *
               C50260) *
              C1815 +
          (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C2266 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C2261 +
            (C10921 - C10922 + C10923 - C10924) * C2267 +
            (C10925 - C10926 + C10927 - C10928) * C50067) *
               C50364 +
           ((C14999 - C15000 + C15001 - C15002) * C2266 +
            (C15003 - C15004 + C15005 - C15006) * C2261 +
            (C13785 - C13786 + C13787 - C13788) * C2267 +
            (C13789 - C13790 + C13791 - C13792) * C50067) *
               C50260) *
              C1816 +
          (((C10534 * C1818 - C50365 * C1822 + C10535 * C5458 -
             C50286 * C5461) *
                C2266 +
            (C10534 * C1823 - C50365 * C1830 + C10535 * C5462 -
             C50286 * C5467) *
                C2261 +
            (C10534 * C1819 - C50365 * C1824 + C10535 * C5459 -
             C50286 * C5463) *
                C2267 +
            (C10534 * C1825 - C50365 * C1831 + C10535 * C5464 -
             C50286 * C5468) *
                C50067) *
               C50364 +
           ((C10534 * C4500 - C50365 * C4504 + C10535 * C6410 -
             C50286 * C6412) *
                C2266 +
            (C10534 * C4505 - C50365 * C4512 + C10535 * C6413 -
             C50286 * C6416) *
                C2261 +
            (C10534 * C4501 - C50365 * C4506 + C10535 * C6411 -
             C50286 * C6414) *
                C2267 +
            (C10534 * C4507 - C50365 * C4513 + C10535 * C6415 -
             C50286 * C6417) *
                C50067) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C50398 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50399 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C2266 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C2261 +
             (C10921 - C10922 + C10923 - C10924) * C2267 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C50364 +
            ((C14999 - C15000 + C15001 - C15002) * C2266 +
             (C15003 - C15004 + C15005 - C15006) * C2261 +
             (C13785 - C13786 + C13787 - C13788) * C2267 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C50398 +
           (((C10906 - C10905 + C10908 - C10907) * C2266 +
             (C10910 - C10909 + C10912 - C10911) * C2261 +
             (C10914 - C10913 + C10916 - C10915) * C2267 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C50364 +
            (C14471 * C2266 + C14472 * C2261 +
             (C11459 - C11460 + C11461 - C11462) * C2267 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50399 +
           (((C10922 - C10921 + C10924 - C10923) * C2266 +
             (C10926 - C10925 + C10928 - C10927) * C2261 +
             (C10930 - C10929 + C10932 - C10931) * C2267 +
             (C10934 - C10933 + C10936 - C10935) * C50067) *
                C50364 +
            ((C13786 - C13785 + C13788 - C13787) * C2266 +
             (C13790 - C13789 + C13792 - C13791) * C2261 +
             (C10534 * C1189 - C50365 * C1195 + C10535 * C6004 -
              C50286 * C6005) *
                 C2267 +
             (C10534 * C1196 - C50365 * C1201 + C10535 * C6006 -
              C50286 * C6007) *
                 C50067) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C2266 +
             (C10542 - C10541 + C10544 - C10543) * C2261 +
             (C10546 - C10545 + C10548 - C10547) * C2267 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C50364 +
            (C13585 * C2266 + C13586 * C2261 + C11095 * C2267 +
             C11096 * C50067) *
                C50260) *
               C1648 +
           (((C10906 - C10905 + C10908 - C10907) * C2266 +
             (C10910 - C10909 + C10912 - C10911) * C2261 +
             (C10914 - C10913 + C10916 - C10915) * C2267 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C50364 +
            (C14471 * C2266 + C14472 * C2261 +
             (C11459 - C11460 + C11461 - C11462) * C2267 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C10577 * C2266 + C10578 * C2261 +
             (C10554 - C10553 + C10556 - C10555) * C2267 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C50364 +
            (C13991 * C2266 + C13992 * C2261 +
             (C11087 - C11088 + C11089 - C11090) * C2267 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C1648 +
           ((C11255 * C2266 + C11256 * C2261 +
             (C11248 - C11247 + C11250 - C11249) * C2267 +
             (C11252 - C11251 + C11254 - C11253) * C50067) *
                C50364 +
            ((C11460 - C11459 + C11462 - C11461) * C2266 +
             (C11464 - C11463 + C11466 - C11465) * C2261 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C2267 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C2266 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C2261 +
             (C10537 - C10538 + C10539 - C10540) * C2267 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C50364 +
            ((C13543 - C13544 + C13545 - C13546) * C2266 +
             (C13547 - C13548 + C13549 - C13550) * C2261 + C13583 * C2267 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C2266 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C2261 +
             (C10905 - C10906 + C10907 - C10908) * C2267 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C50364 +
            ((C14445 - C14446 + C14447 - C14448) * C2266 +
             (C14449 - C14450 + C14451 - C14452) * C2261 + C14469 * C2267 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C276 +
          ((((C13544 - C13543 + C13546 - C13545) * C2266 +
             (C13548 - C13547 + C13550 - C13549) * C2261 + C13585 * C2267 +
             C13586 * C50067) *
                C50364 +
            ((C13559 - C13560 + C13561 - C13562) * C2266 +
             (C13563 - C13564 + C13565 - C13566) * C2261 + C13587 * C2267 +
             C13588 * C50067) *
                C50260) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C2266 +
             (C14450 - C14449 + C14452 - C14451) * C2261 + C14471 * C2267 +
             C14472 * C50067) *
                C50364 +
            ((C15653 - C15654 + C15655 - C15656) * C2266 +
             (C15657 - C15658 + C15659 - C15660) * C2261 +
             (C14461 - C14462 + C14463 - C14464) * C2267 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50189) *
              C277 +
          ((((C13560 - C13559 + C13562 - C13561) * C2266 +
             (C13564 - C13563 + C13566 - C13565) * C2261 + C13589 * C2267 +
             C13590 * C50067) *
                C50364 +
            ((C14797 - C14798 + C14799 - C14800) * C2266 +
             (C14801 - C14802 + C14803 - C14804) * C2261 +
             (C13575 - C13576 + C13577 - C13578) * C2267 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C1648 +
           (((C15654 - C15653 + C15656 - C15655) * C2266 +
             (C15658 - C15657 + C15660 - C15659) * C2261 +
             (C14462 - C14461 + C14464 - C14463) * C2267 +
             (C14466 - C14465 + C14468 - C14467) * C50067) *
                C50364 +
            ((C10534 * C3144 - C50365 * C3147 + C10535 * C3587 -
              C50286 * C3589) *
                 C2266 +
             (C10534 * C3148 - C50365 * C3153 + C10535 * C3590 -
              C50286 * C3593) *
                 C2261 +
             (C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
              C50286 * C3591) *
                 C2267 +
             (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C50351 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C50351 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50125 * C50351 +
           ((C618 * C2266 + C619 * C2261 + C620 * C2267 + C621 * C50067) *
                C2263 +
            (C2455 * C2266 + C2456 * C2261 + (C343 - C342) * C2267 +
             (C345 - C344) * C50067) *
                C2264 +
            ((C2458 - C2457) * C2266 + (C2460 - C2459) * C2261 +
             (C117 * C1076 - C50222 * C1083) * C2267 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C2265) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C50351 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C50351 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50161) *
              C50395 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50125 * C50351 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50222 * C614) * C121 +
            (C117 * C615 - C50222 * C616) * C109) *
               C50211 * C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50125 * C50351 +
           ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50125 * C50351 +
           ((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
            (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
            (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
            (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
               C50211 * C50125 * C50351 +
           ((C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C2266 +
            (C5648 - C5647 + C5650 - C5649 + C5652 - C5651) * C2261 +
            (C5103 * C284 - C5100 * C297 + C5104 * C870 - C5101 * C878 +
             C5105 * C1190 - C5102 * C1197) *
                C2267 +
            (C5103 * C298 - C5100 * C314 + C5104 * C879 - C5101 * C885 +
             C5105 * C1198 - C5102 * C1202) *
                C50067) *
               C50211 * C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C2266 +
              (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
              (C153 - C154) * C50067) *
                 C2263 +
             ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 +
              C2431 * C2267 + C2432 * C50067) *
                 C2264 +
             C2480 * C2265) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C2266 +
              (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
              (C489 - C490) * C50067) *
                 C2263 +
             ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 +
              C3161 * C2267 + C3162 * C50067) *
                 C2264 +
             ((C3163 - C3164) * C2266 + (C3165 - C3166) * C2261 +
              C3167 * C2267 + C3168 * C50067) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 +
              C2439 * C2267 + C2440 * C50067) *
                 C2263 +
             ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 +
              C2441 * C2267 + C2442 * C50067) *
                 C2264 +
             ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 +
              C2465 * C2267 + C2466 * C50067) *
                 C2265) *
                C50352 +
            (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 +
              C3169 * C2267 + C3170 * C50067) *
                 C2263 +
             ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 +
              C3171 * C2267 + C3172 * C50067) *
                 C2264 +
             ((C50222 * C3147 - C117 * C3144) * C2266 +
              (C50222 * C3153 - C117 * C3148) * C2261 +
              (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
              (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                 C2263 +
             (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                 C2264 +
             C2479 * C2265) *
                C50352 +
            (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
              (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                 C2263 +
             (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
              (C894 - C895) * C50067) *
                 C2264 +
             (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
              (C2949 - C2950) * C50067) *
                 C2265) *
                C50189) *
               C50351 +
           (((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                 C2263 +
             (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                 C2264 +
             (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
              (C2459 - C2460) * C50067) *
                 C2265) *
                C50352 +
            ((C3161 * C2266 + C3162 * C2261 + (C893 - C892) * C2267 +
              (C895 - C894) * C50067) *
                 C2263 +
             (C3167 * C2266 + C3168 * C2261 + (C2948 - C2947) * C2267 +
              (C2950 - C2949) * C50067) *
                 C2264 +
             ((C3174 - C3173) * C2266 + (C3176 - C3175) * C2261 +
              (C117 * C3146 - C50222 * C3151) * C2267 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C118 +
             (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50211 * C50352 +
            ((C117 * C446 - C50222 * C456) * C118 +
             (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C281 - C50222 * C291) * C118 +
             (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50211 * C50352 +
            ((C50222 * C872 - C117 * C867) * C118 +
             (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50211 * C50352 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50211 * C50189) *
               C50351 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50211 * C50352 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50222 * C880) * C121 +
             (C117 * C881 - C50222 * C886) * C109) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C2266 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C2261 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
             (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
                C50211 * C50352 +
            ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C2266 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C2261 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
             (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
              C5105 * C1187 - C5102 * C1191) *
                 C2266 +
             (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
              C5105 * C1192 - C5102 * C1199) *
                 C2261 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
                C50211 * C50352 +
            ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
              C5102 * C4504 - C5105 * C4500) *
                 C2266 +
             (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
              C5102 * C4512 - C5105 * C4505) *
                 C2261 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
             (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
                C50211 * C50352 +
            ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
             (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
                C50211 * C50352 +
            ((C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C2266 +
             (C6016 - C6015 + C6018 - C6017 + C6020 - C6019) * C2261 +
             (C5103 * C869 - C5100 * C876 + C5104 * C1189 - C5101 * C1195 +
              C5105 * C6004 - C5102 * C6005) *
                 C2267 +
             (C5103 * C877 - C5100 * C884 + C5104 * C1196 - C5101 * C1201 +
              C5105 * C6006 - C5102 * C6007) *
                 C50067) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C50222 * C129 - C117 * C122) * C118 +
               (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
               (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
               C174 * C109) *
                  C50211 * C50125 * C50109 * C113 +
              ((C152 - C151) * C118 + (C154 - C153) * C106 +
               (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
               C176 * C108 + C177 * C121 + C178 * C109) *
                  C50211 * C50125 * C50109 * C114 +
              (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
               (C164 - C163) * C120 + (C166 - C165) * C108 +
               (C167 - C168) * C121 + (C169 - C170) * C109) *
                  C50211 * C50125 * C50109 * C115 +
              (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
               (C168 - C167) * C120 + (C170 - C169) * C108 +
               (C117 * C128 - C50222 * C141) * C121 +
               (C117 * C142 - C50222 * C149) * C109) *
                  C50211 * C50125 * C50109 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50222 * C129 - C117 * C122) * C118 +
                (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50211 * C50125 * C276 +
               ((C117 * C281 - C50222 * C291) * C118 +
                (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
                (C324 - C325) * C107 + (C326 - C327) * C120 +
                (C328 - C329) * C108 + (C330 - C331) * C121 +
                (C332 - C333) * C109) *
                   C50211 * C50125 * C277 +
               ((C50222 * C299 - C117 * C285) * C118 +
                (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
                (C336 - C337) * C107 + (C338 - C339) * C120 +
                (C340 - C341) * C108 + (C342 - C343) * C121 +
                (C344 - C345) * C109) *
                   C50211 * C50125 * C278) *
                  C279 +
              (((C152 - C151) * C118 + (C154 - C153) * C106 +
                (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                C176 * C108 + C177 * C121 + C178 * C109) *
                   C50211 * C50125 * C276 +
               ((C323 - C322) * C118 + (C325 - C324) * C106 +
                (C327 - C326) * C119 + (C329 - C328) * C107 +
                (C331 - C330) * C120 + (C333 - C332) * C108 +
                (C50222 * C307 - C117 * C289) * C121 +
                (C50222 * C319 - C117 * C308) * C109) *
                   C50211 * C50125 * C277 +
               ((C335 - C334) * C118 + (C337 - C336) * C106 +
                (C339 - C338) * C119 + (C341 - C340) * C107 +
                (C343 - C342) * C120 + (C345 - C344) * C108 +
                (C117 * C290 - C50222 * C309) * C121 +
                (C117 * C310 - C50222 * C320) * C109) *
                   C50211 * C50125 * C278) *
                  C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C443 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + (C491 - C492) * C120 + (C493 - C494) * C108 +
            (C495 - C496) * C121 + (C497 - C498) * C109) *
               C50211 * C444 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C445) *
              C50109 * C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C443 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C50222 * C472 - C117 * C454) * C121 +
            (C50222 * C484 - C117 * C473) * C109) *
               C50211 * C444 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50222 * C474) * C121 +
            (C117 * C475 - C50222 * C485) * C109) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C50222 * C291 - C117 * C281) * C2266 +
            (C50222 * C311 - C117 * C292) * C2261 + (C323 - C322) * C2267 +
            (C325 - C324) * C50067) *
               C2264 +
           ((C50222 * C299 - C117 * C285) * C2266 +
            (C50222 * C315 - C117 * C300) * C2261 + (C334 - C335) * C2267 +
            (C336 - C337) * C50067) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C2266 + (C154 - C153) * C2261 +
            (C156 - C155) * C2267 + (C158 - C157) * C50067) *
               C2263 +
           ((C322 - C323) * C2266 + (C324 - C325) * C2261 + C618 * C2267 +
            C619 * C50067) *
               C2264 +
           ((C335 - C334) * C2266 + (C337 - C336) * C2261 +
            (C339 - C338) * C2267 + (C341 - C340) * C50067) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
               C2263 +
           ((C327 - C326) * C2266 + (C329 - C328) * C2261 +
            (C331 - C330) * C2267 + (C333 - C332) * C50067) *
               C2264 +
           ((C338 - C339) * C2266 + (C340 - C341) * C2261 +
            (C342 - C343) * C2267 + (C344 - C345) * C50067) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C175 * C2266 + C176 * C2261 + C177 * C2267 + C178 * C50067) *
               C2263 +
           (C620 * C2266 + C621 * C2261 + (C623 - C622) * C2267 +
            (C625 - C624) * C50067) *
               C2264 +
           ((C343 - C342) * C2266 + (C345 - C344) * C2261 +
            (C117 * C290 - C50222 * C309) * C2267 +
            (C117 * C310 - C50222 * C320) * C50067) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C276 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C277 +
           (C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C50222 * C2417 - C117 * C2414) * C2266 +
             (C50222 * C2423 - C117 * C2418) * C2261 + (C2451 - C2452) * C2267 +
             (C2453 - C2454) * C50067) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C276 +
           ((C2431 * C2266 + C2432 * C2261 + (C327 - C326) * C2267 +
             (C329 - C328) * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + (C338 - C339) * C2267 +
             (C340 - C341) * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C277 +
           (C2479 * C2263 +
            (C2465 * C2266 + C2466 * C2261 + (C2458 - C2457) * C2267 +
             (C2460 - C2459) * C50067) *
                C2264 +
            ((C2452 - C2451) * C2266 + (C2454 - C2453) * C2261 +
             (C117 * C2416 - C50222 * C2421) * C2267 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C117 * C867 - C50222 * C872) * C2266 +
             (C117 * C873 - C50222 * C882) * C2261 + (C889 - C888) * C2267 +
             (C891 - C890) * C50067) *
                C2264 +
            ((C117 * C1534 - C50222 * C1538) * C2266 +
             (C117 * C1539 - C50222 * C1546) * C2261 + (C2639 - C2640) * C2267 +
             (C2641 - C2642) * C50067) *
                C2265) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C50222 * C1191 - C117 * C1187) * C2266 +
             (C50222 * C1199 - C117 * C1192) * C2261 + (C2643 - C2644) * C2267 +
             (C2645 - C2646) * C50067) *
                C2264 +
            ((C50222 * C2629 - C117 * C2626) * C2266 +
             (C50222 * C2635 - C117 * C2630) * C2261 + (C2647 - C2648) * C2267 +
             (C2649 - C2650) * C50067) *
                C2265) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C443 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            ((C888 - C889) * C2266 + (C890 - C891) * C2261 +
             (C892 - C893) * C2267 + (C894 - C895) * C50067) *
                C2264 +
            ((C2640 - C2639) * C2266 + (C2642 - C2641) * C2261 +
             (C50222 * C1542 - C117 * C1536) * C2267 +
             (C50222 * C1548 - C117 * C1543) * C50067) *
                C2265) *
               C444 +
           (((C500 - C499) * C2266 + (C502 - C501) * C2261 +
             (C504 - C503) * C2267 + (C506 - C505) * C50067) *
                C2263 +
            ((C2644 - C2643) * C2266 + (C2646 - C2645) * C2261 +
             (C117 * C1189 - C50222 * C1195) * C2267 +
             (C117 * C1196 - C50222 * C1201) * C50067) *
                C2264 +
            ((C2648 - C2647) * C2266 + (C2650 - C2649) * C2261 +
             (C117 * C2628 - C50222 * C2633) * C2267 +
             (C117 * C2634 - C50222 * C2637) * C50067) *
                C2265) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
            C5102 * C464 - C5105 * C450) *
               C2266 +
           (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
            C5102 * C480 - C5105 * C465) *
               C2261 +
           (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
           (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
              C50211 * C50125 * C50109 * C113 +
          ((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
           (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
           (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
           (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
              C50211 * C50125 * C50109 * C114 +
          ((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
           (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
           (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
           (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
              C50211 * C50125 * C50109 * C115 +
          ((C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C2266 +
           (C5138 - C5137 + C5140 - C5139 + C5142 - C5141) * C2261 +
           (C5103 * C126 - C5100 * C137 + C5104 * C454 - C5101 * C472 +
            C5105 * C455 - C5102 * C474) *
               C2267 +
           (C5103 * C138 - C5100 * C147 + C5104 * C473 - C5101 * C484 +
            C5105 * C475 - C5102 * C485) *
               C50067) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50125 * C276 +
           ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50125 * C277 +
           ((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
             C5102 * C2629 - C5105 * C2626) *
                C2266 +
            (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
             C5102 * C2635 - C5105 * C2630) *
                C2261 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
            (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
               C50211 * C50125 * C278) *
              C279 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50125 * C276 +
           ((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
            (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
            (C5100 * C295 - C5103 * C283 + C5101 * C876 - C5104 * C869 +
             C5102 * C1195 - C5105 * C1189) *
                C2267 +
            (C5100 * C313 - C5103 * C296 + C5101 * C884 - C5104 * C877 +
             C5102 * C1201 - C5105 * C1196) *
                C50067) *
               C50211 * C50125 * C277 +
           ((C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C2266 +
            (C5308 - C5307 + C5310 - C5309 + C5312 - C5311) * C2261 +
            (C5103 * C287 - C5100 * C303 + C5104 * C1536 - C5101 * C1542 +
             C5105 * C2628 - C5102 * C2633) *
                C2267 +
            (C5103 * C304 - C5100 * C317 + C5104 * C1543 - C5101 * C1548 +
             C5105 * C2634 - C5102 * C2637) *
                C50067) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C443 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C444 +
           ((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
             C5102 * C5461 - C5105 * C5458) *
                C2266 +
            (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
             C5102 * C5467 - C5105 * C5462) *
                C2261 +
            (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C2267 +
            (C5489 - C5490 + C5491 - C5492 + C5493 - C5494) * C50067) *
               C50211 * C445) *
              C50109 * C279 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C443 +
           ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
            (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
            (C5100 * C460 - C5103 * C448 + C5101 * C468 - C5104 * C452 +
             C5102 * C1826 - C5105 * C1820) *
                C2267 +
            (C5100 * C478 - C5103 * C461 + C5101 * C482 - C5104 * C469 +
             C5102 * C1832 - C5105 * C1827) *
                C50067) *
               C50211 * C444 +
           ((C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C2266 +
            (C5490 - C5489 + C5492 - C5491 + C5494 - C5493) * C2261 +
            (C5103 * C452 - C5100 * C468 + C5104 * C1820 - C5101 * C1826 +
             C5105 * C5460 - C5102 * C5465) *
                C2267 +
            (C5103 * C469 - C5100 * C482 + C5104 * C1827 - C5101 * C1832 +
             C5105 * C5466 - C5102 * C5469) *
                C50067) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C117 * C867 - C50222 * C872) * C2266 +
             (C117 * C873 - C50222 * C882) * C2261 + (C889 - C888) * C2267 +
             (C891 - C890) * C50067) *
                C2264 +
            ((C117 * C1534 - C50222 * C1538) * C2266 +
             (C117 * C1539 - C50222 * C1546) * C2261 + (C2639 - C2640) * C2267 +
             (C2641 - C2642) * C50067) *
                C2265) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50352 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            ((C888 - C889) * C2266 + (C890 - C891) * C2261 +
             (C892 - C893) * C2267 + (C894 - C895) * C50067) *
                C2264 +
            ((C2640 - C2639) * C2266 + (C2642 - C2641) * C2261 +
             (C2947 - C2948) * C2267 + (C2949 - C2950) * C50067) *
                C2265) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50352 +
           ((C730 * C2266 + C731 * C2261 + C732 * C2267 + C733 * C50067) *
                C2263 +
            ((C893 - C892) * C2266 + (C895 - C894) * C2261 +
             (C897 - C896) * C2267 + (C899 - C898) * C50067) *
                C2264 +
            ((C2948 - C2947) * C2266 + (C2950 - C2949) * C2261 +
             (C117 * C1537 - C50222 * C1544) * C2267 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C2265) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50352 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50352 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50189) *
              C50109 * C50395 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50352 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50222 * C726) * C121 +
            (C117 * C727 - C50222 * C728) * C109) *
               C50211 * C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50352 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50352 +
           ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
            (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
            (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
            (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
            (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
               C50211 * C50352 +
           ((C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C2266 +
            (C5806 - C5805 + C5808 - C5807 + C5810 - C5809) * C2261 +
            (C5103 * C449 - C5100 * C462 + C5104 * C453 - C5101 * C470 +
             C5105 * C1821 - C5102 * C1828) *
                C2267 +
            (C5103 * C463 - C5100 * C479 + C5104 * C471 - C5101 * C483 +
             C5105 * C1829 - C5102 * C1833) *
                C50067) *
               C50211 * C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C276 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + (C326 - C327) * C120 + (C328 - C329) * C108 +
            (C330 - C331) * C121 + (C332 - C333) * C109) *
               C50211 * C50125 * C277 +
           ((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50125 * C278) *
              C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C276 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C50222 * C307 - C117 * C289) * C121 +
            (C50222 * C319 - C117 * C308) * C109) *
               C50211 * C50125 * C277 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50222 * C309) * C121 +
            (C117 * C310 - C50222 * C320) * C109) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C50125 * C50109 * C113 +
          ((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
           (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
           C178 * C109) *
              C50211 * C50125 * C50109 * C114 +
          (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
           (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
           (C169 - C170) * C109) *
              C50211 * C50125 * C50109 * C115 +
          (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
           (C168 - C167) * C120 + (C170 - C169) * C108 +
           (C117 * C128 - C50222 * C141) * C121 +
           (C117 * C142 - C50222 * C149) * C109) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C50222 * C291 - C117 * C281) * C2266 +
            (C50222 * C311 - C117 * C292) * C2261 + (C323 - C322) * C2267 +
            (C325 - C324) * C50067) *
               C2264 +
           ((C50222 * C299 - C117 * C285) * C2266 +
            (C50222 * C315 - C117 * C300) * C2261 + (C334 - C335) * C2267 +
            (C336 - C337) * C50067) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C2266 + (C154 - C153) * C2261 +
            (C156 - C155) * C2267 + (C158 - C157) * C50067) *
               C2263 +
           ((C322 - C323) * C2266 + (C324 - C325) * C2261 + C618 * C2267 +
            C619 * C50067) *
               C2264 +
           ((C335 - C334) * C2266 + (C337 - C336) * C2261 +
            (C339 - C338) * C2267 + (C341 - C340) * C50067) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
               C2263 +
           ((C327 - C326) * C2266 + (C329 - C328) * C2261 +
            (C331 - C330) * C2267 + (C333 - C332) * C50067) *
               C2264 +
           ((C338 - C339) * C2266 + (C340 - C341) * C2261 +
            (C342 - C343) * C2267 + (C344 - C345) * C50067) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C175 * C2266 + C176 * C2261 + C177 * C2267 + C178 * C50067) *
               C2263 +
           (C620 * C2266 + C621 * C2261 + (C623 - C622) * C2267 +
            (C625 - C624) * C50067) *
               C2264 +
           ((C343 - C342) * C2266 + (C345 - C344) * C2261 +
            (C117 * C290 - C50222 * C309) * C2267 +
            (C117 * C310 - C50222 * C320) * C50067) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C276 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C277 +
           (C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C50222 * C2417 - C117 * C2414) * C2266 +
             (C50222 * C2423 - C117 * C2418) * C2261 + (C2451 - C2452) * C2267 +
             (C2453 - C2454) * C50067) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C276 +
           ((C2431 * C2266 + C2432 * C2261 + (C327 - C326) * C2267 +
             (C329 - C328) * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + (C338 - C339) * C2267 +
             (C340 - C341) * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C277 +
           (C2479 * C2263 +
            (C2465 * C2266 + C2466 * C2261 + (C2458 - C2457) * C2267 +
             (C2460 - C2459) * C50067) *
                C2264 +
            ((C2452 - C2451) * C2266 + (C2454 - C2453) * C2261 +
             (C117 * C2416 - C50222 * C2421) * C2267 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
            C5102 * C464 - C5105 * C450) *
               C2266 +
           (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
            C5102 * C480 - C5105 * C465) *
               C2261 +
           (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
           (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
              C50211 * C50125 * C50109 * C113 +
          ((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
           (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
           (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
           (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
              C50211 * C50125 * C50109 * C114 +
          ((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
           (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
           (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
           (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
              C50211 * C50125 * C50109 * C115 +
          ((C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C2266 +
           (C5138 - C5137 + C5140 - C5139 + C5142 - C5141) * C2261 +
           (C5103 * C126 - C5100 * C137 + C5104 * C454 - C5101 * C472 +
            C5105 * C455 - C5102 * C474) *
               C2267 +
           (C5103 * C138 - C5100 * C147 + C5104 * C473 - C5101 * C484 +
            C5105 * C475 - C5102 * C485) *
               C50067) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50125 * C276 +
           ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50125 * C277 +
           ((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
             C5102 * C2629 - C5105 * C2626) *
                C2266 +
            (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
             C5102 * C2635 - C5105 * C2630) *
                C2261 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
            (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
               C50211 * C50125 * C278) *
              C279 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50125 * C276 +
           ((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
            (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
            (C5100 * C295 - C5103 * C283 + C5101 * C876 - C5104 * C869 +
             C5102 * C1195 - C5105 * C1189) *
                C2267 +
            (C5100 * C313 - C5103 * C296 + C5101 * C884 - C5104 * C877 +
             C5102 * C1201 - C5105 * C1196) *
                C50067) *
               C50211 * C50125 * C277 +
           ((C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C2266 +
            (C5308 - C5307 + C5310 - C5309 + C5312 - C5311) * C2261 +
            (C5103 * C287 - C5100 * C303 + C5104 * C1536 - C5101 * C1542 +
             C5105 * C2628 - C5102 * C2633) *
                C2267 +
            (C5103 * C304 - C5100 * C317 + C5104 * C1543 - C5101 * C1548 +
             C5105 * C2634 - C5102 * C2637) *
                C50067) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C50396 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C50125 * C50397 +
           (C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C50396 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50397 +
           (C2479 * C2263 +
            (C2465 * C2266 + C2466 * C2261 + (C2458 - C2457) * C2267 +
             (C2460 - C2459) * C50067) *
                C2264 +
            ((C2452 - C2451) * C2266 + (C2454 - C2453) * C2261 +
             (C117 * C2416 - C50222 * C2421) * C2267 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C2265) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C50396 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50397 +
           ((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C50396 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50397 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50222 * C309) * C121 +
            (C117 * C310 - C50222 * C320) * C109) *
               C50211 * C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50125 * C50396 +
           ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50125 * C50397 +
           ((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
             C5102 * C2629 - C5105 * C2626) *
                C2266 +
            (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
             C5102 * C2635 - C5105 * C2630) *
                C2261 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
            (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50125 * C50396 +
           ((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
            (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
            (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
               C50211 * C50125 * C50397 +
           ((C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C2266 +
            (C5308 - C5307 + C5310 - C5309 + C5312 - C5311) * C2261 +
            (C5103 * C287 - C5100 * C303 + C5104 * C1536 - C5101 * C1542 +
             C5105 * C2628 - C5102 * C2633) *
                C2267 +
            (C5103 * C304 - C5100 * C317 + C5104 * C1543 - C5101 * C1548 +
             C5105 * C2634 - C5102 * C2637) *
                C50067) *
               C50211 * C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C50352 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50189) *
              C50397 +
          ((C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C50352 +
           (C4110 * C2263 +
            ((C4103 - C4102) * C2266 + (C4105 - C4104) * C2261 +
             (C3174 - C3173) * C2267 + (C3176 - C3175) * C50067) *
                C2264 +
            ((C117 * C4089 - C50222 * C4091) * C2266 +
             (C117 * C4092 - C50222 * C4095) * C2261 +
             (C117 * C4090 - C50222 * C4093) * C2267 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C2265) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50352 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50396 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50352 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50189) *
              C50397 +
          (((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50352 +
           ((C117 * C1534 - C50222 * C1538) * C118 +
            (C117 * C1539 - C50222 * C1546) * C106 +
            (C117 * C1535 - C50222 * C1540) * C119 +
            (C117 * C1541 - C50222 * C1547) * C107 +
            (C117 * C1536 - C50222 * C1542) * C120 +
            (C117 * C1543 - C50222 * C1548) * C108 +
            (C117 * C1537 - C50222 * C1544) * C121 +
            (C117 * C1545 - C50222 * C1549) * C109) *
               C50211 * C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50352 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50189) *
              C50396 +
          (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50352 +
           ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
             C5102 * C4504 - C5105 * C4500) *
                C2266 +
            (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
             C5102 * C4512 - C5105 * C4505) *
                C2261 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
            (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
               C50211 * C50189) *
              C50397 +
          (((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
             C5102 * C2629 - C5105 * C2626) *
                C2266 +
            (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
             C5102 * C2635 - C5105 * C2630) *
                C2261 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
            (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
               C50211 * C50352 +
           ((C5103 * C1534 - C5100 * C1538 + C5104 * C2626 - C5101 * C2629 +
             C5105 * C4502 - C5102 * C4508) *
                C2266 +
            (C5103 * C1539 - C5100 * C1546 + C5104 * C2630 - C5101 * C2635 +
             C5105 * C4509 - C5102 * C4514) *
                C2261 +
            (C5103 * C1535 - C5100 * C1540 + C5104 * C2627 - C5101 * C2631 +
             C5105 * C4503 - C5102 * C4510) *
                C2267 +
            (C5103 * C1541 - C5100 * C1547 + C5104 * C2632 - C5101 * C2636 +
             C5105 * C4511 - C5102 * C4515) *
                C50067) *
               C50211 * C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50222 * C129 - C117 * C122) * C118 +
                (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50211 * C50125 * C997 +
               ((C117 * C281 - C50222 * C291) * C118 +
                (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
                (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
                C621 * C109) *
                   C50211 * C50125 * C50161) *
                  C999 +
              (((C152 - C151) * C118 + (C154 - C153) * C106 +
                (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                C176 * C108 + C177 * C121 + C178 * C109) *
                   C50211 * C50125 * C997 +
               ((C323 - C322) * C118 + (C325 - C324) * C106 +
                (C327 - C326) * C119 + (C329 - C328) * C107 +
                (C331 - C330) * C120 + (C333 - C332) * C108 +
                (C622 - C623) * C121 + (C624 - C625) * C109) *
                   C50211 * C50125 * C50161) *
                  C1000 +
              ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
                (C164 - C163) * C120 + (C166 - C165) * C108 +
                (C167 - C168) * C121 + (C169 - C170) * C109) *
                   C50211 * C50125 * C997 +
               (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
                (C623 - C622) * C120 + (C625 - C624) * C108 +
                (C117 * C613 - C50222 * C614) * C121 +
                (C117 * C615 - C50222 * C616) * C109) *
                   C50211 * C50125 * C50161) *
                  C1001) +
         0.5 * std::pow(Pi, 2.5) *
             (((C50222 * C129 - C117 * C122) * C118 +
               (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
               (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
               C174 * C109) *
                  C50211 * C50125 * C1068 +
              ((C117 * C281 - C50222 * C291) * C118 +
               (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
               (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
               C621 * C109) *
                  C50211 * C50125 * C1069 +
              ((C50222 * C299 - C117 * C285) * C118 +
               (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
               (C336 - C337) * C107 + (C338 - C339) * C120 +
               (C340 - C341) * C108 + (C342 - C343) * C121 +
               (C344 - C345) * C109) *
                  C50211 * C50125 * C1070 +
              ((C117 * C1073 - C50222 * C1077) * C118 +
               (C117 * C1078 - C50222 * C1085) * C106 +
               (C117 * C1074 - C50222 * C1079) * C119 +
               (C117 * C1080 - C50222 * C1086) * C107 +
               (C117 * C1075 - C50222 * C1081) * C120 +
               (C117 * C1082 - C50222 * C1087) * C108 +
               (C117 * C1076 - C50222 * C1083) * C121 +
               (C117 * C1084 - C50222 * C1088) * C109) *
                  C50211 * C50125 * C1071) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C443 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C444 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C445) *
              C997 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C443 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C444 +
           ((C117 * C1187 - C50222 * C1191) * C118 +
            (C117 * C1192 - C50222 * C1199) * C106 +
            (C117 * C1188 - C50222 * C1193) * C119 +
            (C117 * C1194 - C50222 * C1200) * C107 +
            (C117 * C1189 - C50222 * C1195) * C120 +
            (C117 * C1196 - C50222 * C1201) * C108 +
            (C117 * C1190 - C50222 * C1197) * C121 +
            (C117 * C1198 - C50222 * C1202) * C109) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C997 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C997 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50125 * C997 +
           ((C618 * C2266 + C619 * C2261 + C620 * C2267 + C621 * C50067) *
                C2263 +
            (C2455 * C2266 + C2456 * C2261 + (C343 - C342) * C2267 +
             (C345 - C344) * C50067) *
                C2264 +
            ((C2458 - C2457) * C2266 + (C2460 - C2459) * C2261 +
             (C117 * C1076 - C50222 * C1083) * C2267 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
            C2432 * C50067) *
               C2264 +
           C2480 * C2265) *
              C50125 * C1068 +
          (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
            C2440 * C50067) *
               C2263 +
           ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
            C2442 * C50067) *
               C2264 +
           C3441 * C2265) *
              C50125 * C1069 +
          (C2480 * C2263 +
           ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
            C2468 * C50067) *
               C2264 +
           ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
            (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
               C2265) *
              C50125 * C1070 +
          (C3441 * C2263 +
           ((C3434 - C3433) * C2266 + (C3436 - C3435) * C2261 +
            (C2452 - C2451) * C2267 + (C2454 - C2453) * C50067) *
               C2264 +
           ((C117 * C3420 - C50222 * C3422) * C2266 +
            (C117 * C3423 - C50222 * C3426) * C2261 +
            (C117 * C3421 - C50222 * C3424) * C2267 +
            (C117 * C3425 - C50222 * C3427) * C50067) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            ((C3163 - C3164) * C2266 + (C3165 - C3166) * C2261 + C3167 * C2267 +
             C3168 * C50067) *
                C2265) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
             (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
                C2264 +
            ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
             (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
                C2265) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C443 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C50222 * C3147 - C117 * C3144) * C2266 +
             (C50222 * C3153 - C117 * C3148) * C2261 + (C3173 - C3174) * C2267 +
             (C3175 - C3176) * C50067) *
                C2265) *
               C444 +
           (((C3597 - C3596) * C2266 + (C3599 - C3598) * C2261 +
             (C2644 - C2643) * C2267 + (C2646 - C2645) * C50067) *
                C2263 +
            ((C3601 - C3600) * C2266 + (C3603 - C3602) * C2261 +
             (C2648 - C2647) * C2267 + (C2650 - C2649) * C50067) *
                C2264 +
            ((C117 * C3587 - C50222 * C3589) * C2266 +
             (C117 * C3590 - C50222 * C3593) * C2261 +
             (C117 * C3588 - C50222 * C3591) * C2267 +
             (C117 * C3592 - C50222 * C3594) * C50067) *
                C2265) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50125 * C997 +
           ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50125 * C997 +
           ((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
            (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
            (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
               C50211 * C50125 * C50161) *
              C1000 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
            (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
               C50211 * C50125 * C997 +
           ((C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C2266 +
            (C5648 - C5647 + C5650 - C5649 + C5652 - C5651) * C2261 +
            (C5103 * C284 - C5100 * C297 + C5104 * C870 - C5101 * C878 +
             C5105 * C1190 - C5102 * C1197) *
                C2267 +
            (C5103 * C298 - C5100 * C314 + C5104 * C879 - C5101 * C885 +
             C5105 * C1198 - C5102 * C1202) *
                C50067) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
            C5102 * C464 - C5105 * C450) *
               C2266 +
           (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
            C5102 * C480 - C5105 * C465) *
               C2261 +
           (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
           (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
              C50211 * C50125 * C1068 +
          ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
            C5105 * C1187 - C5102 * C1191) *
               C2266 +
           (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
            C5105 * C1192 - C5102 * C1199) *
               C2261 +
           (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
           (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
              C50211 * C50125 * C1069 +
          ((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
            C5102 * C2629 - C5105 * C2626) *
               C2266 +
           (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
            C5102 * C2635 - C5105 * C2630) *
               C2261 +
           (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
           (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
              C50211 * C50125 * C1070 +
          ((C5103 * C1073 - C5100 * C1077 + C5104 * C3144 - C5101 * C3147 +
            C5105 * C3587 - C5102 * C3589) *
               C2266 +
           (C5103 * C1078 - C5100 * C1085 + C5104 * C3148 - C5101 * C3153 +
            C5105 * C3590 - C5102 * C3593) *
               C2261 +
           (C5103 * C1074 - C5100 * C1079 + C5104 * C3145 - C5101 * C3149 +
            C5105 * C3588 - C5102 * C3591) *
               C2267 +
           (C5103 * C1080 - C5100 * C1086 + C5104 * C3150 - C5101 * C3154 +
            C5105 * C3592 - C5102 * C3594) *
               C50067) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C443 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C444 +
           ((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
             C5102 * C5461 - C5105 * C5458) *
                C2266 +
            (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
             C5102 * C5467 - C5105 * C5462) *
                C2261 +
            (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C2267 +
            (C5489 - C5490 + C5491 - C5492 + C5493 - C5494) * C50067) *
               C50211 * C445) *
              C997 +
          (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C443 +
           ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
             C5102 * C4504 - C5105 * C4500) *
                C2266 +
            (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
             C5102 * C4512 - C5105 * C4505) *
                C2261 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
            (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
               C50211 * C444 +
           ((C5103 * C1187 - C5100 * C1191 + C5104 * C4500 - C5101 * C4504 +
             C5105 * C6410 - C5102 * C6412) *
                C2266 +
            (C5103 * C1192 - C5100 * C1199 + C5104 * C4505 - C5101 * C4512 +
             C5105 * C6413 - C5102 * C6416) *
                C2261 +
            (C5103 * C1188 - C5100 * C1193 + C5104 * C4501 - C5101 * C4506 +
             C5105 * C6411 - C5102 * C6414) *
                C2267 +
            (C5103 * C1194 - C5100 * C1200 + C5104 * C4507 - C5101 * C4513 +
             C5105 * C6415 - C5102 * C6417) *
                C50067) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C2266 +
              (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
              (C153 - C154) * C50067) *
                 C2263 +
             ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 +
              C2431 * C2267 + C2432 * C50067) *
                 C2264 +
             C2480 * C2265) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C2266 +
              (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
              (C489 - C490) * C50067) *
                 C2263 +
             ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 +
              C3161 * C2267 + C3162 * C50067) *
                 C2264 +
             ((C3163 - C3164) * C2266 + (C3165 - C3166) * C2261 +
              C3167 * C2267 + C3168 * C50067) *
                 C2265) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 +
              C2439 * C2267 + C2440 * C50067) *
                 C2263 +
             ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 +
              C2441 * C2267 + C2442 * C50067) *
                 C2264 +
             C3441 * C2265) *
                C50352 +
            (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 +
              C3169 * C2267 + C3170 * C50067) *
                 C2263 +
             ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 +
              C3171 * C2267 + C3172 * C50067) *
                 C2264 +
             ((C50222 * C3147 - C117 * C3144) * C2266 +
              (C50222 * C3153 - C117 * C3148) * C2261 +
              (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
              (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                 C2263 +
             (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                 C2264 +
             C2479 * C2265) *
                C50352 +
            (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
              (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                 C2263 +
             (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
              (C894 - C895) * C50067) *
                 C2264 +
             (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
              (C2949 - C2950) * C50067) *
                 C2265) *
                C50189) *
               C997 +
           (((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                 C2263 +
             (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                 C2264 +
             (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
              (C2459 - C2460) * C50067) *
                 C2265) *
                C50352 +
            ((C3161 * C2266 + C3162 * C2261 + (C893 - C892) * C2267 +
              (C895 - C894) * C50067) *
                 C2263 +
             (C3167 * C2266 + C3168 * C2261 + (C2948 - C2947) * C2267 +
              (C2950 - C2949) * C50067) *
                 C2264 +
             ((C3174 - C3173) * C2266 + (C3176 - C3175) * C2261 +
              (C117 * C3146 - C50222 * C3151) * C2267 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C118 +
             (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50211 * C50352 +
            ((C117 * C446 - C50222 * C456) * C118 +
             (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50211 * C50189) *
               C997 +
           (((C117 * C281 - C50222 * C291) * C118 +
             (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50211 * C50352 +
            ((C50222 * C872 - C117 * C867) * C118 +
             (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50211 * C50352 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50211 * C50189) *
               C997 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50211 * C50352 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50222 * C880) * C121 +
             (C117 * C881 - C50222 * C886) * C109) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C2266 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C2261 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
             (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
                C50211 * C50352 +
            ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C2266 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C2261 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
             (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
                C50211 * C50189) *
               C997 +
           (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
              C5105 * C1187 - C5102 * C1191) *
                 C2266 +
             (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
              C5105 * C1192 - C5102 * C1199) *
                 C2261 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
                C50211 * C50352 +
            ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
              C5102 * C4504 - C5105 * C4500) *
                 C2266 +
             (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
              C5102 * C4512 - C5105 * C4505) *
                 C2261 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
             (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
                C50211 * C50352 +
            ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
             (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
                C50211 * C50189) *
               C997 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
                C50211 * C50352 +
            ((C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C2266 +
             (C6016 - C6015 + C6018 - C6017 + C6020 - C6019) * C2261 +
             (C5103 * C869 - C5100 * C876 + C5104 * C1189 - C5101 * C1195 +
              C5105 * C6004 - C5102 * C6005) *
                 C2267 +
             (C5103 * C877 - C5100 * C884 + C5104 * C1196 - C5101 * C1201 +
              C5105 * C6006 - C5102 * C6007) *
                 C50067) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C50125 * C1068 +
          ((C117 * C281 - C50222 * C291) * C118 +
           (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
           (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
           C621 * C109) *
              C50211 * C50125 * C1069 +
          ((C50222 * C299 - C117 * C285) * C118 +
           (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
           (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
           (C342 - C343) * C121 + (C344 - C345) * C109) *
              C50211 * C50125 * C1070 +
          ((C117 * C1073 - C50222 * C1077) * C118 +
           (C117 * C1078 - C50222 * C1085) * C106 +
           (C117 * C1074 - C50222 * C1079) * C119 +
           (C117 * C1080 - C50222 * C1086) * C107 +
           (C117 * C1075 - C50222 * C1081) * C120 +
           (C117 * C1082 - C50222 * C1087) * C108 +
           (C117 * C1076 - C50222 * C1083) * C121 +
           (C117 * C1084 - C50222 * C1088) * C109) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C997 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C997 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50125 * C997 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50222 * C614) * C121 +
            (C117 * C615 - C50222 * C616) * C109) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C997 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C997 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50125 * C997 +
           ((C618 * C2266 + C619 * C2261 + C620 * C2267 + C621 * C50067) *
                C2263 +
            (C2455 * C2266 + C2456 * C2261 + (C343 - C342) * C2267 +
             (C345 - C344) * C50067) *
                C2264 +
            ((C2458 - C2457) * C2266 + (C2460 - C2459) * C2261 +
             (C117 * C1076 - C50222 * C1083) * C2267 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
            C2432 * C50067) *
               C2264 +
           C2480 * C2265) *
              C50125 * C1068 +
          (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
            C2440 * C50067) *
               C2263 +
           ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
            C2442 * C50067) *
               C2264 +
           C3441 * C2265) *
              C50125 * C1069 +
          (C2480 * C2263 +
           ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
            C2468 * C50067) *
               C2264 +
           ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
            (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
               C2265) *
              C50125 * C1070 +
          (C3441 * C2263 +
           ((C3434 - C3433) * C2266 + (C3436 - C3435) * C2261 +
            (C2452 - C2451) * C2267 + (C2454 - C2453) * C50067) *
               C2264 +
           ((C117 * C3420 - C50222 * C3422) * C2266 +
            (C117 * C3423 - C50222 * C3426) * C2261 +
            (C117 * C3421 - C50222 * C3424) * C2267 +
            (C117 * C3425 - C50222 * C3427) * C50067) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50125 * C997 +
           ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50125 * C997 +
           ((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
            (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
            (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
               C50211 * C50125 * C50161) *
              C1000 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
            (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
               C50211 * C50125 * C997 +
           ((C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C2266 +
            (C5648 - C5647 + C5650 - C5649 + C5652 - C5651) * C2261 +
            (C5103 * C284 - C5100 * C297 + C5104 * C870 - C5101 * C878 +
             C5105 * C1190 - C5102 * C1197) *
                C2267 +
            (C5103 * C298 - C5100 * C314 + C5104 * C879 - C5101 * C885 +
             C5105 * C1198 - C5102 * C1202) *
                C50067) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
            C5102 * C464 - C5105 * C450) *
               C2266 +
           (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
            C5102 * C480 - C5105 * C465) *
               C2261 +
           (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
           (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
              C50211 * C50125 * C1068 +
          ((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
            C5105 * C1187 - C5102 * C1191) *
               C2266 +
           (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
            C5105 * C1192 - C5102 * C1199) *
               C2261 +
           (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
           (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
              C50211 * C50125 * C1069 +
          ((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
            C5102 * C2629 - C5105 * C2626) *
               C2266 +
           (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
            C5102 * C2635 - C5105 * C2630) *
               C2261 +
           (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
           (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
              C50211 * C50125 * C1070 +
          ((C5103 * C1073 - C5100 * C1077 + C5104 * C3144 - C5101 * C3147 +
            C5105 * C3587 - C5102 * C3589) *
               C2266 +
           (C5103 * C1078 - C5100 * C1085 + C5104 * C3148 - C5101 * C3153 +
            C5105 * C3590 - C5102 * C3593) *
               C2261 +
           (C5103 * C1074 - C5100 * C1079 + C5104 * C3145 - C5101 * C3149 +
            C5105 * C3588 - C5102 * C3591) *
               C2267 +
           (C5103 * C1080 - C5100 * C1086 + C5104 * C3150 - C5101 * C3154 +
            C5105 * C3592 - C5102 * C3594) *
               C50067) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C2266 +
              (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
              (C153 - C154) * C50067) *
                 C2263 +
             ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 +
              C2431 * C2267 + C2432 * C50067) *
                 C2264 +
             C2480 * C2265) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C2266 +
              (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
              (C489 - C490) * C50067) *
                 C2263 +
             ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 +
              C3161 * C2267 + C3162 * C50067) *
                 C2264 +
             C4110 * C2265) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 +
              C2439 * C2267 + C2440 * C50067) *
                 C2263 +
             ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 +
              C2441 * C2267 + C2442 * C50067) *
                 C2264 +
             C3441 * C2265) *
                C1648 +
            (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 +
              C3169 * C2267 + C3170 * C50067) *
                 C2263 +
             ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 +
              C3171 * C2267 + C3172 * C50067) *
                 C2264 +
             ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
              (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
              (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                 C2263 +
             (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                 C2264 +
             C2479 * C2265) *
                C1648 +
            (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
              (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                 C2263 +
             (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
              (C894 - C895) * C50067) *
                 C2264 +
             (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
              (C2949 - C2950) * C50067) *
                 C2265) *
                C50189) *
               C50351 +
           (((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                 C2263 +
             (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                 C2264 +
             (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
              (C2459 - C2460) * C50067) *
                 C2265) *
                C1648 +
            ((C3161 * C2266 + C3162 * C2261 + (C893 - C892) * C2267 +
              (C895 - C894) * C50067) *
                 C2263 +
             (C3167 * C2266 + C3168 * C2261 + (C2948 - C2947) * C2267 +
              (C2950 - C2949) * C50067) *
                 C2264 +
             ((C3174 - C3173) * C2266 + (C3176 - C3175) * C2261 +
              (C117 * C3146 - C50222 * C3151) * C2267 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C118 +
             (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50211 * C1648 +
            ((C117 * C446 - C50222 * C456) * C118 +
             (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C281 - C50222 * C291) * C118 +
             (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50211 * C1648 +
            ((C50222 * C872 - C117 * C867) * C118 +
             (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50211 * C1648 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50211 * C50189) *
               C50351 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50211 * C1648 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50222 * C880) * C121 +
             (C117 * C881 - C50222 * C886) * C109) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C2266 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C2261 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
             (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
                C50211 * C1648 +
            ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C2266 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C2261 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
             (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
              C5105 * C1187 - C5102 * C1191) *
                 C2266 +
             (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
              C5105 * C1192 - C5102 * C1199) *
                 C2261 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
                C50211 * C1648 +
            ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
              C5102 * C4504 - C5105 * C4500) *
                 C2266 +
             (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
              C5102 * C4512 - C5105 * C4505) *
                 C2261 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
             (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
                C50211 * C1648 +
            ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
             (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C2266 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C2261 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C2267 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50067) *
                C50211 * C1648 +
            ((C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C2266 +
             (C6016 - C6015 + C6018 - C6017 + C6020 - C6019) * C2261 +
             (C5103 * C869 - C5100 * C876 + C5104 * C1189 - C5101 * C1195 +
              C5105 * C6004 - C5102 * C6005) *
                 C2267 +
             (C5103 * C877 - C5100 * C884 + C5104 * C1196 - C5101 * C1201 +
              C5105 * C6006 - C5102 * C6007) *
                 C50067) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
             (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
                C2264 +
            ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
             (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
                C2265) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C50398 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50399 +
           (((C3597 - C3596) * C2266 + (C3599 - C3598) * C2261 +
             (C2644 - C2643) * C2267 + (C2646 - C2645) * C50067) *
                C2263 +
            ((C3601 - C3600) * C2266 + (C3603 - C3602) * C2261 +
             (C2648 - C2647) * C2267 + (C2650 - C2649) * C50067) *
                C2264 +
            ((C117 * C3587 - C50222 * C3589) * C2266 +
             (C117 * C3590 - C50222 * C3593) * C2261 +
             (C117 * C3588 - C50222 * C3591) * C2267 +
             (C117 * C3592 - C50222 * C3594) * C50067) *
                C2265) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50398 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50399 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C2064) *
              C50351 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50398 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50399 +
           ((C117 * C1187 - C50222 * C1191) * C118 +
            (C117 * C1192 - C50222 * C1199) * C106 +
            (C117 * C1188 - C50222 * C1193) * C119 +
            (C117 * C1194 - C50222 * C1200) * C107 +
            (C117 * C1189 - C50222 * C1195) * C120 +
            (C117 * C1196 - C50222 * C1201) * C108 +
            (C117 * C1190 - C50222 * C1197) * C121 +
            (C117 * C1198 - C50222 * C1202) * C109) *
               C50211 * C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50398 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50399 +
           ((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
             C5102 * C5461 - C5105 * C5458) *
                C2266 +
            (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
             C5102 * C5467 - C5105 * C5462) *
                C2261 +
            (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C2267 +
            (C5489 - C5490 + C5491 - C5492 + C5493 - C5494) * C50067) *
               C50211 * C2064) *
              C50351 +
          (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C50398 +
           ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
             C5102 * C4504 - C5105 * C4500) *
                C2266 +
            (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
             C5102 * C4512 - C5105 * C4505) *
                C2261 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
            (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
               C50211 * C50399 +
           ((C5103 * C1187 - C5100 * C1191 + C5104 * C4500 - C5101 * C4504 +
             C5105 * C6410 - C5102 * C6412) *
                C2266 +
            (C5103 * C1192 - C5100 * C1199 + C5104 * C4505 - C5101 * C4512 +
             C5105 * C6413 - C5102 * C6416) *
                C2261 +
            (C5103 * C1188 - C5100 * C1193 + C5104 * C4501 - C5101 * C4506 +
             C5105 * C6411 - C5102 * C6414) *
                C2267 +
            (C5103 * C1194 - C5100 * C1200 + C5104 * C4507 - C5101 * C4513 +
             C5105 * C6415 - C5102 * C6417) *
                C50067) *
               C50211 * C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50222 * C129 - C117 * C122) * C118 +
                (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50211 * C1648 +
               ((C117 * C446 - C50222 * C456) * C118 +
                (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
                (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
                C733 * C109) *
                   C50211 * C50189) *
                  C50109 * C999 +
              (((C152 - C151) * C118 + (C154 - C153) * C106 +
                (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                C176 * C108 + C177 * C121 + C178 * C109) *
                   C50211 * C1648 +
               ((C488 - C487) * C118 + (C490 - C489) * C106 +
                (C492 - C491) * C119 + (C494 - C493) * C107 +
                (C496 - C495) * C120 + (C498 - C497) * C108 +
                (C734 - C735) * C121 + (C736 - C737) * C109) *
                   C50211 * C50189) *
                  C50109 * C1000 +
              ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
                (C164 - C163) * C120 + (C166 - C165) * C108 +
                (C167 - C168) * C121 + (C169 - C170) * C109) *
                   C50211 * C1648 +
               (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
                (C735 - C734) * C120 + (C737 - C736) * C108 +
                (C117 * C725 - C50222 * C726) * C121 +
                (C117 * C727 - C50222 * C728) * C109) *
                   C50211 * C50189) *
                  C50109 * C1001) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50222 * C129 - C117 * C122) * C118 +
                (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50211 * C1648 +
               ((C117 * C446 - C50222 * C456) * C118 +
                (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
                (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
                C733 * C109) *
                   C50211 * C50189) *
                  C276 +
              (((C117 * C281 - C50222 * C291) * C118 +
                (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
                (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
                C621 * C109) *
                   C50211 * C1648 +
               ((C50222 * C872 - C117 * C867) * C118 +
                (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
                (C890 - C891) * C107 + (C892 - C893) * C120 +
                (C894 - C895) * C108 + (C896 - C897) * C121 +
                (C898 - C899) * C109) *
                   C50211 * C50189) *
                  C277 +
              (((C50222 * C299 - C117 * C285) * C118 +
                (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
                (C336 - C337) * C107 + (C338 - C339) * C120 +
                (C340 - C341) * C108 + (C342 - C343) * C121 +
                (C344 - C345) * C109) *
                   C50211 * C1648 +
               ((C117 * C1534 - C50222 * C1538) * C118 +
                (C117 * C1539 - C50222 * C1546) * C106 +
                (C117 * C1535 - C50222 * C1540) * C119 +
                (C117 * C1541 - C50222 * C1547) * C107 +
                (C117 * C1536 - C50222 * C1542) * C120 +
                (C117 * C1543 - C50222 * C1548) * C108 +
                (C117 * C1537 - C50222 * C1544) * C121 +
                (C117 * C1545 - C50222 * C1549) * C109) *
                   C50211 * C50189) *
                  C278) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C1814 +
          ((C117 * C446 - C50222 * C456) * C118 +
           (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
           (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
           C733 * C109) *
              C50211 * C1815 +
          ((C50222 * C464 - C117 * C450) * C118 +
           (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
           (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
           (C507 - C508) * C121 + (C509 - C510) * C109) *
              C50211 * C1816 +
          ((C117 * C1818 - C50222 * C1822) * C118 +
           (C117 * C1823 - C50222 * C1830) * C106 +
           (C117 * C1819 - C50222 * C1824) * C119 +
           (C117 * C1825 - C50222 * C1831) * C107 +
           (C117 * C1820 - C50222 * C1826) * C120 +
           (C117 * C1827 - C50222 * C1832) * C108 +
           (C117 * C1821 - C50222 * C1828) * C121 +
           (C117 * C1829 - C50222 * C1833) * C109) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C1648 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
             (C894 - C895) * C50067) *
                C2264 +
            (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
             (C2949 - C2950) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C1648 +
           ((C730 * C2266 + C731 * C2261 + C732 * C2267 + C733 * C50067) *
                C2263 +
            ((C893 - C892) * C2266 + (C895 - C894) * C2261 +
             (C897 - C896) * C2267 + (C899 - C898) * C50067) *
                C2264 +
            ((C2948 - C2947) * C2266 + (C2950 - C2949) * C2261 +
             (C117 * C1537 - C50222 * C1544) * C2267 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C1648 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50189) *
              C277 +
          ((C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C1648 +
           (C4110 * C2263 +
            ((C4103 - C4102) * C2266 + (C4105 - C4104) * C2261 +
             (C3174 - C3173) * C2267 + (C3176 - C3175) * C50067) *
                C2264 +
            ((C117 * C4089 - C50222 * C4091) * C2266 +
             (C117 * C4092 - C50222 * C4095) * C2261 +
             (C117 * C4090 - C50222 * C4093) * C2267 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
            C2432 * C50067) *
               C2264 +
           C2480 * C2265) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C2266 +
            (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
            (C489 - C490) * C50067) *
               C2263 +
           ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
            C3162 * C50067) *
               C2264 +
           C4110 * C2265) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C2266 +
            (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
            (C501 - C502) * C50067) *
               C2263 +
           ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
            (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
               C2264 +
           ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
            (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
               C2265) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C2266 +
            (C117 * C1823 - C50222 * C1830) * C2261 +
            (C117 * C1819 - C50222 * C1824) * C2267 +
            (C117 * C1825 - C50222 * C1831) * C50067) *
               C2263 +
           ((C117 * C4500 - C50222 * C4504) * C2266 +
            (C117 * C4505 - C50222 * C4512) * C2261 +
            (C117 * C4501 - C50222 * C4506) * C2267 +
            (C117 * C4507 - C50222 * C4513) * C50067) *
               C2264 +
           ((C117 * C4502 - C50222 * C4508) * C2266 +
            (C117 * C4509 - C50222 * C4514) * C2261 +
            (C117 * C4503 - C50222 * C4510) * C2267 +
            (C117 * C4511 - C50222 * C4515) * C50067) *
               C2265) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C1648 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C1648 +
           ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
            (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
            (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
            (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
               C50211 * C50189) *
              C50109 * C1000 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
            (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
               C50211 * C1648 +
           ((C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C2266 +
            (C5806 - C5805 + C5808 - C5807 + C5810 - C5809) * C2261 +
            (C5103 * C449 - C5100 * C462 + C5104 * C453 - C5101 * C470 +
             C5105 * C1821 - C5102 * C1828) *
                C2267 +
            (C5103 * C463 - C5100 * C479 + C5104 * C471 - C5101 * C483 +
             C5105 * C1829 - C5102 * C1833) *
                C50067) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C1648 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50189) *
              C276 +
          (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C1648 +
           ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
             C5102 * C4504 - C5105 * C4500) *
                C2266 +
            (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
             C5102 * C4512 - C5105 * C4505) *
                C2261 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
            (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
               C50211 * C50189) *
              C277 +
          (((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
             C5102 * C2629 - C5105 * C2626) *
                C2266 +
            (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
             C5102 * C2635 - C5105 * C2630) *
                C2261 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
            (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
               C50211 * C1648 +
           ((C5103 * C1534 - C5100 * C1538 + C5104 * C2626 - C5101 * C2629 +
             C5105 * C4502 - C5102 * C4508) *
                C2266 +
            (C5103 * C1539 - C5100 * C1546 + C5104 * C2630 - C5101 * C2635 +
             C5105 * C4509 - C5102 * C4514) *
                C2261 +
            (C5103 * C1535 - C5100 * C1540 + C5104 * C2627 - C5101 * C2631 +
             C5105 * C4503 - C5102 * C4510) *
                C2267 +
            (C5103 * C1541 - C5100 * C1547 + C5104 * C2632 - C5101 * C2636 +
             C5105 * C4511 - C5102 * C4515) *
                C50067) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
            C5102 * C464 - C5105 * C450) *
               C2266 +
           (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
            C5102 * C480 - C5105 * C465) *
               C2261 +
           (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
           (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
              C50211 * C1814 +
          ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
            C5105 * C1818 - C5102 * C1822) *
               C2266 +
           (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
            C5105 * C1823 - C5102 * C1830) *
               C2261 +
           (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
           (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
              C50211 * C1815 +
          ((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
            C5102 * C5461 - C5105 * C5458) *
               C2266 +
           (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
            C5102 * C5467 - C5105 * C5462) *
               C2261 +
           (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C2267 +
           (C5489 - C5490 + C5491 - C5492 + C5493 - C5494) * C50067) *
              C50211 * C1816 +
          ((C5103 * C1818 - C5100 * C1822 + C5104 * C5458 - C5101 * C5461 +
            C5105 * C7294 - C5102 * C7296) *
               C2266 +
           (C5103 * C1823 - C5100 * C1830 + C5104 * C5462 - C5101 * C5467 +
            C5105 * C7297 - C5102 * C7300) *
               C2261 +
           (C5103 * C1819 - C5100 * C1824 + C5104 * C5459 - C5101 * C5463 +
            C5105 * C7295 - C5102 * C7298) *
               C2267 +
           (C5103 * C1825 - C5100 * C1831 + C5104 * C5464 - C5101 * C5468 +
            C5105 * C7299 - C5102 * C7301) *
               C50067) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
             (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
                C2264 +
            ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
             (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
                C2265) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50398 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
             (C894 - C895) * C50067) *
                C2264 +
            (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
             (C2949 - C2950) * C50067) *
                C2265) *
               C50399 +
           (((C500 - C499) * C2266 + (C502 - C501) * C2261 +
             (C504 - C503) * C2267 + (C506 - C505) * C50067) *
                C2263 +
            ((C2644 - C2643) * C2266 + (C2646 - C2645) * C2261 +
             (C117 * C1189 - C50222 * C1195) * C2267 +
             (C117 * C1196 - C50222 * C1201) * C50067) *
                C2264 +
            ((C2648 - C2647) * C2266 + (C2650 - C2649) * C2261 +
             (C117 * C2628 - C50222 * C2633) * C2267 +
             (C117 * C2634 - C50222 * C2637) * C50067) *
                C2265) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50398 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50399 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50398 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50399 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50222 * C474) * C121 +
            (C117 * C475 - C50222 * C485) * C109) *
               C50211 * C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C50398 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50399 +
           ((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
             C5102 * C5461 - C5105 * C5458) *
                C2266 +
            (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
             C5102 * C5467 - C5105 * C5462) *
                C2261 +
            (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C2267 +
            (C5489 - C5490 + C5491 - C5492 + C5493 - C5494) * C50067) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C50398 +
           ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
            (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
            (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
            (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
               C50211 * C50399 +
           ((C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C2266 +
            (C5490 - C5489 + C5492 - C5491 + C5494 - C5493) * C2261 +
            (C5103 * C452 - C5100 * C468 + C5104 * C1820 - C5101 * C1826 +
             C5105 * C5460 - C5102 * C5465) *
                C2267 +
            (C5103 * C469 - C5100 * C482 + C5104 * C1827 - C5101 * C1832 +
             C5105 * C5466 - C5102 * C5469) *
                C50067) *
               C50211 * C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C1648 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C276 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C1648 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50189) *
              C277 +
          (((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C1648 +
           ((C117 * C1534 - C50222 * C1538) * C118 +
            (C117 * C1539 - C50222 * C1546) * C106 +
            (C117 * C1535 - C50222 * C1540) * C119 +
            (C117 * C1541 - C50222 * C1547) * C107 +
            (C117 * C1536 - C50222 * C1542) * C120 +
            (C117 * C1543 - C50222 * C1548) * C108 +
            (C117 * C1537 - C50222 * C1544) * C121 +
            (C117 * C1545 - C50222 * C1549) * C109) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C1648 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C1648 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C1648 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50222 * C726) * C121 +
            (C117 * C727 - C50222 * C728) * C109) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C1648 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
             (C894 - C895) * C50067) *
                C2264 +
            (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
             (C2949 - C2950) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C1648 +
           ((C730 * C2266 + C731 * C2261 + C732 * C2267 + C733 * C50067) *
                C2263 +
            ((C893 - C892) * C2266 + (C895 - C894) * C2261 +
             (C897 - C896) * C2267 + (C899 - C898) * C50067) *
                C2264 +
            ((C2948 - C2947) * C2266 + (C2950 - C2949) * C2261 +
             (C117 * C1537 - C50222 * C1544) * C2267 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C1648 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50189) *
              C277 +
          ((C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C1648 +
           (C4110 * C2263 +
            ((C4103 - C4102) * C2266 + (C4105 - C4104) * C2261 +
             (C3174 - C3173) * C2267 + (C3176 - C3175) * C50067) *
                C2264 +
            ((C117 * C4089 - C50222 * C4091) * C2266 +
             (C117 * C4092 - C50222 * C4095) * C2261 +
             (C117 * C4090 - C50222 * C4093) * C2267 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C1648 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C2266 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C2261 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C2267 +
            (C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C50067) *
               C50211 * C1648 +
           ((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C2266 +
            (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C2261 +
            (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C2267 +
            (C5805 - C5806 + C5807 - C5808 + C5809 - C5810) * C50067) *
               C50211 * C50189) *
              C50109 * C1000 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C2266 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C2261 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C2267 +
            (C5137 - C5138 + C5139 - C5140 + C5141 - C5142) * C50067) *
               C50211 * C1648 +
           ((C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C2266 +
            (C5806 - C5805 + C5808 - C5807 + C5810 - C5809) * C2261 +
            (C5103 * C449 - C5100 * C462 + C5104 * C453 - C5101 * C470 +
             C5105 * C1821 - C5102 * C1828) *
                C2267 +
            (C5103 * C463 - C5100 * C479 + C5104 * C471 - C5101 * C483 +
             C5105 * C1829 - C5102 * C1833) *
                C50067) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C2266 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C2261 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C2267 +
            (C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C50067) *
               C50211 * C1648 +
           ((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C2266 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C2261 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C2267 +
            (C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C50067) *
               C50211 * C50189) *
              C276 +
          (((C5103 * C281 - C5100 * C291 + C5104 * C867 - C5101 * C872 +
             C5105 * C1187 - C5102 * C1191) *
                C2266 +
            (C5103 * C292 - C5100 * C311 + C5104 * C873 - C5101 * C882 +
             C5105 * C1192 - C5102 * C1199) *
                C2261 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C2267 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50067) *
               C50211 * C1648 +
           ((C5100 * C872 - C5103 * C867 + C5101 * C1191 - C5104 * C1187 +
             C5102 * C4504 - C5105 * C4500) *
                C2266 +
            (C5100 * C882 - C5103 * C873 + C5101 * C1199 - C5104 * C1192 +
             C5102 * C4512 - C5105 * C4505) *
                C2261 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C2267 +
            (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50067) *
               C50211 * C50189) *
              C277 +
          (((C5100 * C299 - C5103 * C285 + C5101 * C1538 - C5104 * C1534 +
             C5102 * C2629 - C5105 * C2626) *
                C2266 +
            (C5100 * C315 - C5103 * C300 + C5101 * C1546 - C5104 * C1539 +
             C5102 * C2635 - C5105 * C2630) *
                C2261 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C2267 +
            (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50067) *
               C50211 * C1648 +
           ((C5103 * C1534 - C5100 * C1538 + C5104 * C2626 - C5101 * C2629 +
             C5105 * C4502 - C5102 * C4508) *
                C2266 +
            (C5103 * C1539 - C5100 * C1546 + C5104 * C2630 - C5101 * C2635 +
             C5105 * C4509 - C5102 * C4514) *
                C2261 +
            (C5103 * C1535 - C5100 * C1540 + C5104 * C2627 - C5101 * C2631 +
             C5105 * C4503 - C5102 * C4510) *
                C2267 +
            (C5103 * C1541 - C5100 * C1547 + C5104 * C2632 - C5101 * C2636 +
             C5105 * C4511 - C5102 * C4515) *
                C50067) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50125 * C50351 +
           ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50125 * C50351 +
           ((C10728 - C10727 + C10730 - C10729) * C7891 +
            (C10732 - C10731 + C10734 - C10733) * C50392 +
            (C10736 - C10735 + C10738 - C10737) * C7892 +
            (C10740 - C10739 + C10742 - C10741) * C50393 +
            (C11087 - C11088 + C11089 - C11090) * C7893 +
            (C11091 - C11092 + C11093 - C11094) * C7888) *
               C50211 * C50125 * C50161) *
              C50395 +
          ((C10577 * C7891 + C10578 * C50392 +
            (C10554 - C10553 + C10556 - C10555) * C7892 +
            (C10558 - C10557 + C10560 - C10559) * C50393 +
            (C10561 - C10562 + C10563 - C10564) * C7893 +
            (C10565 - C10566 + C10567 - C10568) * C7888) *
               C50211 * C50125 * C50351 +
           (C11095 * C7891 + C11096 * C50392 +
            (C11088 - C11087 + C11090 - C11089) * C7892 +
            (C11092 - C11091 + C11094 - C11093) * C50393 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C7893 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C7888) *
               C50211 * C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C7891 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50392 +
             (C10537 - C10538 + C10539 - C10540) * C7892 +
             (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
             C10578 * C7888) *
                C50211 * C50352 +
            ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C7891 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50392 +
             (C10905 - C10906 + C10907 - C10908) * C7892 +
             (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
             C11256 * C7888) *
                C50211 * C50189) *
               C50351 +
           (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                 C7891 +
             (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                 C50392 +
             (C10727 - C10728 + C10729 - C10730) * C7892 +
             (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
             C11096 * C7888) *
                C50211 * C50352 +
            ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                 C7891 +
             (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                 C50392 +
             (C11451 - C11452 + C11453 - C11454) * C7892 +
             (C11455 - C11456 + C11457 - C11458) * C50393 +
             (C11459 - C11460 + C11461 - C11462) * C7893 +
             (C11463 - C11464 + C11465 - C11466) * C7888) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C7891 +
             (C10542 - C10541 + C10544 - C10543) * C50392 +
             (C10546 - C10545 + C10548 - C10547) * C7892 +
             (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
             C10580 * C7888) *
                C50211 * C50352 +
            ((C10906 - C10905 + C10908 - C10907) * C7891 +
             (C10910 - C10909 + C10912 - C10911) * C50392 +
             (C10914 - C10913 + C10916 - C10915) * C7892 +
             (C10918 - C10917 + C10920 - C10919) * C50393 +
             (C11247 - C11248 + C11249 - C11250) * C7893 +
             (C11251 - C11252 + C11253 - C11254) * C7888) *
                C50211 * C50189) *
               C50351 +
           (((C10728 - C10727 + C10730 - C10729) * C7891 +
             (C10732 - C10731 + C10734 - C10733) * C50392 +
             (C10736 - C10735 + C10738 - C10737) * C7892 +
             (C10740 - C10739 + C10742 - C10741) * C50393 +
             (C11087 - C11088 + C11089 - C11090) * C7893 +
             (C11091 - C11092 + C11093 - C11094) * C7888) *
                C50211 * C50352 +
            ((C11452 - C11451 + C11454 - C11453) * C7891 +
             (C11456 - C11455 + C11458 - C11457) * C50392 +
             (C11460 - C11459 + C11462 - C11461) * C7892 +
             (C11464 - C11463 + C11466 - C11465) * C50393 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C7893 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C7888) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50125 * C276 +
           ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 +
            (C10735 - C10736 + C10737 - C10738) * C7893 +
            (C10739 - C10740 + C10741 - C10742) * C7888) *
               C50211 * C50125 * C277 +
           ((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
                C7891 +
            (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
                C50392 +
            (C10743 - C10744 + C10745 - C10746) * C7892 +
            (C10747 - C10748 + C10749 - C10750) * C50393 +
            (C10751 - C10752 + C10753 - C10754) * C7893 +
            (C10755 - C10756 + C10757 - C10758) * C7888) *
               C50211 * C50125 * C278) *
              C279 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50125 * C276 +
           ((C10728 - C10727 + C10730 - C10729) * C7891 +
            (C10732 - C10731 + C10734 - C10733) * C50392 +
            (C10736 - C10735 + C10738 - C10737) * C7892 +
            (C10740 - C10739 + C10742 - C10741) * C50393 +
            (C50365 * C297 - C10534 * C284 + C50286 * C878 - C10535 * C870) *
                C7893 +
            (C50365 * C314 - C10534 * C298 + C50286 * C885 - C10535 * C879) *
                C7888) *
               C50211 * C50125 * C277 +
           ((C10744 - C10743 + C10746 - C10745) * C7891 +
            (C10748 - C10747 + C10750 - C10749) * C50392 +
            (C10752 - C10751 + C10754 - C10753) * C7892 +
            (C10756 - C10755 + C10758 - C10757) * C50393 +
            (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                C7893 +
            (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                C7888) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
               C7891 +
           (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
               C50392 +
           (C10537 - C10538 + C10539 - C10540) * C7892 +
           (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
           C10578 * C7888) *
              C50211 * C50125 * C50109 * C113 +
          ((C10538 - C10537 + C10540 - C10539) * C7891 +
           (C10542 - C10541 + C10544 - C10543) * C50392 +
           (C10546 - C10545 + C10548 - C10547) * C7892 +
           (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
           C10580 * C7888) *
              C50211 * C50125 * C50109 * C114 +
          (C10577 * C7891 + C10578 * C50392 +
           (C10554 - C10553 + C10556 - C10555) * C7892 +
           (C10558 - C10557 + C10560 - C10559) * C50393 +
           (C10561 - C10562 + C10563 - C10564) * C7893 +
           (C10565 - C10566 + C10567 - C10568) * C7888) *
              C50211 * C50125 * C50109 * C115 +
          (C10579 * C7891 + C10580 * C50392 +
           (C10562 - C10561 + C10564 - C10563) * C7892 +
           (C10566 - C10565 + C10568 - C10567) * C50393 +
           (C10534 * C127 - C50365 * C139 + C10535 * C725 - C50286 * C726) *
               C7893 +
           (C10534 * C140 - C50365 * C148 + C10535 * C727 - C50286 * C728) *
               C7888) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C443 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 +
            (C10913 - C10914 + C10915 - C10916) * C7893 +
            (C10917 - C10918 + C10919 - C10920) * C7888) *
               C50211 * C444 +
           ((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C7891 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C50392 +
            (C10921 - C10922 + C10923 - C10924) * C7892 +
            (C10925 - C10926 + C10927 - C10928) * C50393 +
            (C10929 - C10930 + C10931 - C10932) * C7893 +
            (C10933 - C10934 + C10935 - C10936) * C7888) *
               C50211 * C445) *
              C50109 * C279 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C443 +
           ((C10906 - C10905 + C10908 - C10907) * C7891 +
            (C10910 - C10909 + C10912 - C10911) * C50392 +
            (C10914 - C10913 + C10916 - C10915) * C7892 +
            (C10918 - C10917 + C10920 - C10919) * C50393 +
            (C50365 * C462 - C10534 * C449 + C50286 * C470 - C10535 * C453) *
                C7893 +
            (C50365 * C479 - C10534 * C463 + C50286 * C483 - C10535 * C471) *
                C7888) *
               C50211 * C444 +
           ((C10922 - C10921 + C10924 - C10923) * C7891 +
            (C10926 - C10925 + C10928 - C10927) * C50392 +
            (C10930 - C10929 + C10932 - C10931) * C7892 +
            (C10934 - C10933 + C10936 - C10935) * C50393 +
            (C10534 * C453 - C50365 * C470 + C10535 * C1821 - C50286 * C1828) *
                C7893 +
            (C10534 * C471 - C50365 * C483 + C10535 * C1829 - C50286 * C1833) *
                C7888) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50352 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50352 +
           ((C10906 - C10905 + C10908 - C10907) * C7891 +
            (C10910 - C10909 + C10912 - C10911) * C50392 +
            (C10914 - C10913 + C10916 - C10915) * C7892 +
            (C10918 - C10917 + C10920 - C10919) * C50393 +
            (C11247 - C11248 + C11249 - C11250) * C7893 +
            (C11251 - C11252 + C11253 - C11254) * C7888) *
               C50211 * C50189) *
              C50109 * C50395 +
          ((C10577 * C7891 + C10578 * C50392 +
            (C10554 - C10553 + C10556 - C10555) * C7892 +
            (C10558 - C10557 + C10560 - C10559) * C50393 +
            (C10561 - C10562 + C10563 - C10564) * C7893 +
            (C10565 - C10566 + C10567 - C10568) * C7888) *
               C50211 * C50352 +
           (C11255 * C7891 + C11256 * C50392 +
            (C11248 - C11247 + C11250 - C11249) * C7892 +
            (C11252 - C11251 + C11254 - C11253) * C50393 +
            (C10534 * C454 - C50365 * C472 + C10535 * C455 - C50286 * C474) *
                C7893 +
            (C10534 * C473 - C50365 * C484 + C10535 * C475 - C50286 * C485) *
                C7888) *
               C50211 * C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
               C7891 +
           (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
               C50392 +
           (C10537 - C10538 + C10539 - C10540) * C7892 +
           (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
           C10578 * C7888) *
              C50211 * C50125 * C50109 * C113 +
          ((C10538 - C10537 + C10540 - C10539) * C7891 +
           (C10542 - C10541 + C10544 - C10543) * C50392 +
           (C10546 - C10545 + C10548 - C10547) * C7892 +
           (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
           C10580 * C7888) *
              C50211 * C50125 * C50109 * C114 +
          (C10577 * C7891 + C10578 * C50392 +
           (C10554 - C10553 + C10556 - C10555) * C7892 +
           (C10558 - C10557 + C10560 - C10559) * C50393 +
           (C10561 - C10562 + C10563 - C10564) * C7893 +
           (C10565 - C10566 + C10567 - C10568) * C7888) *
              C50211 * C50125 * C50109 * C115 +
          (C10579 * C7891 + C10580 * C50392 +
           (C10562 - C10561 + C10564 - C10563) * C7892 +
           (C10566 - C10565 + C10568 - C10567) * C50393 +
           (C10534 * C127 - C50365 * C139 + C10535 * C725 - C50286 * C726) *
               C7893 +
           (C10534 * C140 - C50365 * C148 + C10535 * C727 - C50286 * C728) *
               C7888) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50125 * C276 +
           ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 +
            (C10735 - C10736 + C10737 - C10738) * C7893 +
            (C10739 - C10740 + C10741 - C10742) * C7888) *
               C50211 * C50125 * C277 +
           ((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
                C7891 +
            (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
                C50392 +
            (C10743 - C10744 + C10745 - C10746) * C7892 +
            (C10747 - C10748 + C10749 - C10750) * C50393 +
            (C10751 - C10752 + C10753 - C10754) * C7893 +
            (C10755 - C10756 + C10757 - C10758) * C7888) *
               C50211 * C50125 * C278) *
              C279 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50125 * C276 +
           ((C10728 - C10727 + C10730 - C10729) * C7891 +
            (C10732 - C10731 + C10734 - C10733) * C50392 +
            (C10736 - C10735 + C10738 - C10737) * C7892 +
            (C10740 - C10739 + C10742 - C10741) * C50393 +
            (C50365 * C297 - C10534 * C284 + C50286 * C878 - C10535 * C870) *
                C7893 +
            (C50365 * C314 - C10534 * C298 + C50286 * C885 - C10535 * C879) *
                C7888) *
               C50211 * C50125 * C277 +
           ((C10744 - C10743 + C10746 - C10745) * C7891 +
            (C10748 - C10747 + C10750 - C10749) * C50392 +
            (C10752 - C10751 + C10754 - C10753) * C7892 +
            (C10756 - C10755 + C10758 - C10757) * C50393 +
            (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                C7893 +
            (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                C7888) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50125 * C50396 +
           ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C50125 * C50397 +
           ((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
                C7891 +
            (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
                C50392 +
            (C10743 - C10744 + C10745 - C10746) * C7892 +
            (C10747 - C10748 + C10749 - C10750) * C50393 +
            (C10751 - C10752 + C10753 - C10754) * C7893 +
            (C10755 - C10756 + C10757 - C10758) * C7888) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50125 * C50396 +
           ((C10728 - C10727 + C10730 - C10729) * C7891 +
            (C10732 - C10731 + C10734 - C10733) * C50392 +
            (C10736 - C10735 + C10738 - C10737) * C7892 +
            (C10740 - C10739 + C10742 - C10741) * C50393 +
            (C11087 - C11088 + C11089 - C11090) * C7893 +
            (C11091 - C11092 + C11093 - C11094) * C7888) *
               C50211 * C50125 * C50397 +
           ((C10744 - C10743 + C10746 - C10745) * C7891 +
            (C10748 - C10747 + C10750 - C10749) * C50392 +
            (C10752 - C10751 + C10754 - C10753) * C7892 +
            (C10756 - C10755 + C10758 - C10757) * C50393 +
            (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                C7893 +
            (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                C7888) *
               C50211 * C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50352 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50189) *
              C50396 +
          (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C50352 +
           ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                C7891 +
            (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                C50392 +
            (C11451 - C11452 + C11453 - C11454) * C7892 +
            (C11455 - C11456 + C11457 - C11458) * C50393 +
            (C11459 - C11460 + C11461 - C11462) * C7893 +
            (C11463 - C11464 + C11465 - C11466) * C7888) *
               C50211 * C50189) *
              C50397 +
          (((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
                C7891 +
            (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
                C50392 +
            (C10743 - C10744 + C10745 - C10746) * C7892 +
            (C10747 - C10748 + C10749 - C10750) * C50393 +
            (C10751 - C10752 + C10753 - C10754) * C7893 +
            (C10755 - C10756 + C10757 - C10758) * C7888) *
               C50211 * C50352 +
           ((C10534 * C1534 - C50365 * C1538 + C10535 * C2626 -
             C50286 * C2629) *
                C7891 +
            (C10534 * C1539 - C50365 * C1546 + C10535 * C2630 -
             C50286 * C2635) *
                C50392 +
            (C10534 * C1535 - C50365 * C1540 + C10535 * C2627 -
             C50286 * C2631) *
                C7892 +
            (C10534 * C1541 - C50365 * C1547 + C10535 * C2632 -
             C50286 * C2636) *
                C50393 +
            (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
             C50286 * C2633) *
                C7893 +
            (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
             C50286 * C2637) *
                C7888) *
               C50211 * C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
               C7891 +
           (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
               C50392 +
           (C10537 - C10538 + C10539 - C10540) * C7892 +
           (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
           C10578 * C7888) *
              C50211 * C50125 * C1068 +
          ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
               C7891 +
           (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
               C50392 +
           (C10727 - C10728 + C10729 - C10730) * C7892 +
           (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
           C11096 * C7888) *
              C50211 * C50125 * C1069 +
          ((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
               C7891 +
           (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
               C50392 +
           (C10743 - C10744 + C10745 - C10746) * C7892 +
           (C10747 - C10748 + C10749 - C10750) * C50393 +
           (C10751 - C10752 + C10753 - C10754) * C7893 +
           (C10755 - C10756 + C10757 - C10758) * C7888) *
              C50211 * C50125 * C1070 +
          ((C10534 * C1073 - C50365 * C1077 + C10535 * C3144 - C50286 * C3147) *
               C7891 +
           (C10534 * C1078 - C50365 * C1085 + C10535 * C3148 - C50286 * C3153) *
               C50392 +
           (C10534 * C1074 - C50365 * C1079 + C10535 * C3145 - C50286 * C3149) *
               C7892 +
           (C10534 * C1080 - C50365 * C1086 + C10535 * C3150 - C50286 * C3154) *
               C50393 +
           (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 - C50286 * C3151) *
               C7893 +
           (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 - C50286 * C3155) *
               C7888) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50125 * C997 +
           ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50125 * C997 +
           ((C10728 - C10727 + C10730 - C10729) * C7891 +
            (C10732 - C10731 + C10734 - C10733) * C50392 +
            (C10736 - C10735 + C10738 - C10737) * C7892 +
            (C10740 - C10739 + C10742 - C10741) * C50393 +
            (C11087 - C11088 + C11089 - C11090) * C7893 +
            (C11091 - C11092 + C11093 - C11094) * C7888) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C10577 * C7891 + C10578 * C50392 +
            (C10554 - C10553 + C10556 - C10555) * C7892 +
            (C10558 - C10557 + C10560 - C10559) * C50393 +
            (C10561 - C10562 + C10563 - C10564) * C7893 +
            (C10565 - C10566 + C10567 - C10568) * C7888) *
               C50211 * C50125 * C997 +
           (C11095 * C7891 + C11096 * C50392 +
            (C11088 - C11087 + C11090 - C11089) * C7892 +
            (C11092 - C11091 + C11094 - C11093) * C50393 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C7893 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C7888) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C443 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C444 +
           ((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C7891 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C50392 +
            (C10921 - C10922 + C10923 - C10924) * C7892 +
            (C10925 - C10926 + C10927 - C10928) * C50393 +
            (C10929 - C10930 + C10931 - C10932) * C7893 +
            (C10933 - C10934 + C10935 - C10936) * C7888) *
               C50211 * C445) *
              C997 +
          (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C443 +
           ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                C7891 +
            (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                C50392 +
            (C11451 - C11452 + C11453 - C11454) * C7892 +
            (C11455 - C11456 + C11457 - C11458) * C50393 +
            (C11459 - C11460 + C11461 - C11462) * C7893 +
            (C11463 - C11464 + C11465 - C11466) * C7888) *
               C50211 * C444 +
           ((C10534 * C1187 - C50365 * C1191 + C10535 * C4500 -
             C50286 * C4504) *
                C7891 +
            (C10534 * C1192 - C50365 * C1199 + C10535 * C4505 -
             C50286 * C4512) *
                C50392 +
            (C10534 * C1188 - C50365 * C1193 + C10535 * C4501 -
             C50286 * C4506) *
                C7892 +
            (C10534 * C1194 - C50365 * C1200 + C10535 * C4507 -
             C50286 * C4513) *
                C50393 +
            (C10534 * C1189 - C50365 * C1195 + C10535 * C6004 -
             C50286 * C6005) *
                C7893 +
            (C10534 * C1196 - C50365 * C1201 + C10535 * C6006 -
             C50286 * C6007) *
                C7888) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C7891 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50392 +
             (C10537 - C10538 + C10539 - C10540) * C7892 +
             (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
             C10578 * C7888) *
                C50211 * C50352 +
            ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C7891 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50392 +
             (C10905 - C10906 + C10907 - C10908) * C7892 +
             (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
             C11256 * C7888) *
                C50211 * C50189) *
               C997 +
           (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                 C7891 +
             (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                 C50392 +
             (C10727 - C10728 + C10729 - C10730) * C7892 +
             (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
             C11096 * C7888) *
                C50211 * C50352 +
            ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                 C7891 +
             (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                 C50392 +
             (C11451 - C11452 + C11453 - C11454) * C7892 +
             (C11455 - C11456 + C11457 - C11458) * C50393 +
             (C11459 - C11460 + C11461 - C11462) * C7893 +
             (C11463 - C11464 + C11465 - C11466) * C7888) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C7891 +
             (C10542 - C10541 + C10544 - C10543) * C50392 +
             (C10546 - C10545 + C10548 - C10547) * C7892 +
             (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
             C10580 * C7888) *
                C50211 * C50352 +
            ((C10906 - C10905 + C10908 - C10907) * C7891 +
             (C10910 - C10909 + C10912 - C10911) * C50392 +
             (C10914 - C10913 + C10916 - C10915) * C7892 +
             (C10918 - C10917 + C10920 - C10919) * C50393 +
             (C11247 - C11248 + C11249 - C11250) * C7893 +
             (C11251 - C11252 + C11253 - C11254) * C7888) *
                C50211 * C50189) *
               C997 +
           (((C10728 - C10727 + C10730 - C10729) * C7891 +
             (C10732 - C10731 + C10734 - C10733) * C50392 +
             (C10736 - C10735 + C10738 - C10737) * C7892 +
             (C10740 - C10739 + C10742 - C10741) * C50393 +
             (C11087 - C11088 + C11089 - C11090) * C7893 +
             (C11091 - C11092 + C11093 - C11094) * C7888) *
                C50211 * C50352 +
            ((C11452 - C11451 + C11454 - C11453) * C7891 +
             (C11456 - C11455 + C11458 - C11457) * C50392 +
             (C11460 - C11459 + C11462 - C11461) * C7892 +
             (C11464 - C11463 + C11466 - C11465) * C50393 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C7893 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C7888) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50125 * C997 +
           ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50125 * C997 +
           ((C10728 - C10727 + C10730 - C10729) * C7891 +
            (C10732 - C10731 + C10734 - C10733) * C50392 +
            (C10736 - C10735 + C10738 - C10737) * C7892 +
            (C10740 - C10739 + C10742 - C10741) * C50393 +
            (C11087 - C11088 + C11089 - C11090) * C7893 +
            (C11091 - C11092 + C11093 - C11094) * C7888) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C10577 * C7891 + C10578 * C50392 +
            (C10554 - C10553 + C10556 - C10555) * C7892 +
            (C10558 - C10557 + C10560 - C10559) * C50393 +
            (C10561 - C10562 + C10563 - C10564) * C7893 +
            (C10565 - C10566 + C10567 - C10568) * C7888) *
               C50211 * C50125 * C997 +
           (C11095 * C7891 + C11096 * C50392 +
            (C11088 - C11087 + C11090 - C11089) * C7892 +
            (C11092 - C11091 + C11094 - C11093) * C50393 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C7893 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C7888) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
               C7891 +
           (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
               C50392 +
           (C10537 - C10538 + C10539 - C10540) * C7892 +
           (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
           C10578 * C7888) *
              C50211 * C50125 * C1068 +
          ((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
               C7891 +
           (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
               C50392 +
           (C10727 - C10728 + C10729 - C10730) * C7892 +
           (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
           C11096 * C7888) *
              C50211 * C50125 * C1069 +
          ((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
               C7891 +
           (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
               C50392 +
           (C10743 - C10744 + C10745 - C10746) * C7892 +
           (C10747 - C10748 + C10749 - C10750) * C50393 +
           (C10751 - C10752 + C10753 - C10754) * C7893 +
           (C10755 - C10756 + C10757 - C10758) * C7888) *
              C50211 * C50125 * C1070 +
          ((C10534 * C1073 - C50365 * C1077 + C10535 * C3144 - C50286 * C3147) *
               C7891 +
           (C10534 * C1078 - C50365 * C1085 + C10535 * C3148 - C50286 * C3153) *
               C50392 +
           (C10534 * C1074 - C50365 * C1079 + C10535 * C3145 - C50286 * C3149) *
               C7892 +
           (C10534 * C1080 - C50365 * C1086 + C10535 * C3150 - C50286 * C3154) *
               C50393 +
           (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 - C50286 * C3151) *
               C7893 +
           (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 - C50286 * C3155) *
               C7888) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C7891 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50392 +
             (C10537 - C10538 + C10539 - C10540) * C7892 +
             (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
             C10578 * C7888) *
                C50211 * C1648 +
            ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C7891 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50392 +
             (C10905 - C10906 + C10907 - C10908) * C7892 +
             (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
             C11256 * C7888) *
                C50211 * C50189) *
               C50351 +
           (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                 C7891 +
             (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                 C50392 +
             (C10727 - C10728 + C10729 - C10730) * C7892 +
             (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
             C11096 * C7888) *
                C50211 * C1648 +
            ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                 C7891 +
             (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                 C50392 +
             (C11451 - C11452 + C11453 - C11454) * C7892 +
             (C11455 - C11456 + C11457 - C11458) * C50393 +
             (C11459 - C11460 + C11461 - C11462) * C7893 +
             (C11463 - C11464 + C11465 - C11466) * C7888) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C7891 +
             (C10542 - C10541 + C10544 - C10543) * C50392 +
             (C10546 - C10545 + C10548 - C10547) * C7892 +
             (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
             C10580 * C7888) *
                C50211 * C1648 +
            ((C10906 - C10905 + C10908 - C10907) * C7891 +
             (C10910 - C10909 + C10912 - C10911) * C50392 +
             (C10914 - C10913 + C10916 - C10915) * C7892 +
             (C10918 - C10917 + C10920 - C10919) * C50393 +
             (C11247 - C11248 + C11249 - C11250) * C7893 +
             (C11251 - C11252 + C11253 - C11254) * C7888) *
                C50211 * C50189) *
               C50351 +
           (((C10728 - C10727 + C10730 - C10729) * C7891 +
             (C10732 - C10731 + C10734 - C10733) * C50392 +
             (C10736 - C10735 + C10738 - C10737) * C7892 +
             (C10740 - C10739 + C10742 - C10741) * C50393 +
             (C11087 - C11088 + C11089 - C11090) * C7893 +
             (C11091 - C11092 + C11093 - C11094) * C7888) *
                C50211 * C1648 +
            ((C11452 - C11451 + C11454 - C11453) * C7891 +
             (C11456 - C11455 + C11458 - C11457) * C50392 +
             (C11460 - C11459 + C11462 - C11461) * C7892 +
             (C11464 - C11463 + C11466 - C11465) * C50393 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C7893 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C7888) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50398 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50399 +
           ((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C7891 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C50392 +
            (C10921 - C10922 + C10923 - C10924) * C7892 +
            (C10925 - C10926 + C10927 - C10928) * C50393 +
            (C10929 - C10930 + C10931 - C10932) * C7893 +
            (C10933 - C10934 + C10935 - C10936) * C7888) *
               C50211 * C2064) *
              C50351 +
          (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C50398 +
           ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                C7891 +
            (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                C50392 +
            (C11451 - C11452 + C11453 - C11454) * C7892 +
            (C11455 - C11456 + C11457 - C11458) * C50393 +
            (C11459 - C11460 + C11461 - C11462) * C7893 +
            (C11463 - C11464 + C11465 - C11466) * C7888) *
               C50211 * C50399 +
           ((C10534 * C1187 - C50365 * C1191 + C10535 * C4500 -
             C50286 * C4504) *
                C7891 +
            (C10534 * C1192 - C50365 * C1199 + C10535 * C4505 -
             C50286 * C4512) *
                C50392 +
            (C10534 * C1188 - C50365 * C1193 + C10535 * C4501 -
             C50286 * C4506) *
                C7892 +
            (C10534 * C1194 - C50365 * C1200 + C10535 * C4507 -
             C50286 * C4513) *
                C50393 +
            (C10534 * C1189 - C50365 * C1195 + C10535 * C6004 -
             C50286 * C6005) *
                C7893 +
            (C10534 * C1196 - C50365 * C1201 + C10535 * C6006 -
             C50286 * C6007) *
                C7888) *
               C50211 * C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C1648 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50189) *
              C276 +
          (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C1648 +
           ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                C7891 +
            (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                C50392 +
            (C11451 - C11452 + C11453 - C11454) * C7892 +
            (C11455 - C11456 + C11457 - C11458) * C50393 +
            (C11459 - C11460 + C11461 - C11462) * C7893 +
            (C11463 - C11464 + C11465 - C11466) * C7888) *
               C50211 * C50189) *
              C277 +
          (((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
                C7891 +
            (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
                C50392 +
            (C10743 - C10744 + C10745 - C10746) * C7892 +
            (C10747 - C10748 + C10749 - C10750) * C50393 +
            (C10751 - C10752 + C10753 - C10754) * C7893 +
            (C10755 - C10756 + C10757 - C10758) * C7888) *
               C50211 * C1648 +
           ((C10534 * C1534 - C50365 * C1538 + C10535 * C2626 -
             C50286 * C2629) *
                C7891 +
            (C10534 * C1539 - C50365 * C1546 + C10535 * C2630 -
             C50286 * C2635) *
                C50392 +
            (C10534 * C1535 - C50365 * C1540 + C10535 * C2627 -
             C50286 * C2631) *
                C7892 +
            (C10534 * C1541 - C50365 * C1547 + C10535 * C2632 -
             C50286 * C2636) *
                C50393 +
            (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
             C50286 * C2633) *
                C7893 +
            (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
             C50286 * C2637) *
                C7888) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C1648 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C1648 +
           ((C10906 - C10905 + C10908 - C10907) * C7891 +
            (C10910 - C10909 + C10912 - C10911) * C50392 +
            (C10914 - C10913 + C10916 - C10915) * C7892 +
            (C10918 - C10917 + C10920 - C10919) * C50393 +
            (C11247 - C11248 + C11249 - C11250) * C7893 +
            (C11251 - C11252 + C11253 - C11254) * C7888) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C10577 * C7891 + C10578 * C50392 +
            (C10554 - C10553 + C10556 - C10555) * C7892 +
            (C10558 - C10557 + C10560 - C10559) * C50393 +
            (C10561 - C10562 + C10563 - C10564) * C7893 +
            (C10565 - C10566 + C10567 - C10568) * C7888) *
               C50211 * C1648 +
           (C11255 * C7891 + C11256 * C50392 +
            (C11248 - C11247 + C11250 - C11249) * C7892 +
            (C11252 - C11251 + C11254 - C11253) * C50393 +
            (C10534 * C454 - C50365 * C472 + C10535 * C455 - C50286 * C474) *
                C7893 +
            (C10534 * C473 - C50365 * C484 + C10535 * C475 - C50286 * C485) *
                C7888) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
               C7891 +
           (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
               C50392 +
           (C10537 - C10538 + C10539 - C10540) * C7892 +
           (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
           C10578 * C7888) *
              C50211 * C1814 +
          ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
               C7891 +
           (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
               C50392 +
           (C10905 - C10906 + C10907 - C10908) * C7892 +
           (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
           C11256 * C7888) *
              C50211 * C1815 +
          ((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
               C7891 +
           (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
               C50392 +
           (C10921 - C10922 + C10923 - C10924) * C7892 +
           (C10925 - C10926 + C10927 - C10928) * C50393 +
           (C10929 - C10930 + C10931 - C10932) * C7893 +
           (C10933 - C10934 + C10935 - C10936) * C7888) *
              C50211 * C1816 +
          ((C10534 * C1818 - C50365 * C1822 + C10535 * C5458 - C50286 * C5461) *
               C7891 +
           (C10534 * C1823 - C50365 * C1830 + C10535 * C5462 - C50286 * C5467) *
               C50392 +
           (C10534 * C1819 - C50365 * C1824 + C10535 * C5459 - C50286 * C5463) *
               C7892 +
           (C10534 * C1825 - C50365 * C1831 + C10535 * C5464 - C50286 * C5468) *
               C50393 +
           (C10534 * C1820 - C50365 * C1826 + C10535 * C5460 - C50286 * C5465) *
               C7893 +
           (C10534 * C1827 - C50365 * C1832 + C10535 * C5466 - C50286 * C5469) *
               C7888) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C50398 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50399 +
           ((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C7891 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C50392 +
            (C10921 - C10922 + C10923 - C10924) * C7892 +
            (C10925 - C10926 + C10927 - C10928) * C50393 +
            (C10929 - C10930 + C10931 - C10932) * C7893 +
            (C10933 - C10934 + C10935 - C10936) * C7888) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C50398 +
           ((C10906 - C10905 + C10908 - C10907) * C7891 +
            (C10910 - C10909 + C10912 - C10911) * C50392 +
            (C10914 - C10913 + C10916 - C10915) * C7892 +
            (C10918 - C10917 + C10920 - C10919) * C50393 +
            (C11247 - C11248 + C11249 - C11250) * C7893 +
            (C11251 - C11252 + C11253 - C11254) * C7888) *
               C50211 * C50399 +
           ((C10922 - C10921 + C10924 - C10923) * C7891 +
            (C10926 - C10925 + C10928 - C10927) * C50392 +
            (C10930 - C10929 + C10932 - C10931) * C7892 +
            (C10934 - C10933 + C10936 - C10935) * C50393 +
            (C10534 * C453 - C50365 * C470 + C10535 * C1821 - C50286 * C1828) *
                C7893 +
            (C10534 * C471 - C50365 * C483 + C10535 * C1829 - C50286 * C1833) *
                C7888) *
               C50211 * C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C1648 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C10538 - C10537 + C10540 - C10539) * C7891 +
            (C10542 - C10541 + C10544 - C10543) * C50392 +
            (C10546 - C10545 + C10548 - C10547) * C7892 +
            (C10550 - C10549 + C10552 - C10551) * C50393 + C10579 * C7893 +
            C10580 * C7888) *
               C50211 * C1648 +
           ((C10906 - C10905 + C10908 - C10907) * C7891 +
            (C10910 - C10909 + C10912 - C10911) * C50392 +
            (C10914 - C10913 + C10916 - C10915) * C7892 +
            (C10918 - C10917 + C10920 - C10919) * C50393 +
            (C11247 - C11248 + C11249 - C11250) * C7893 +
            (C11251 - C11252 + C11253 - C11254) * C7888) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C10577 * C7891 + C10578 * C50392 +
            (C10554 - C10553 + C10556 - C10555) * C7892 +
            (C10558 - C10557 + C10560 - C10559) * C50393 +
            (C10561 - C10562 + C10563 - C10564) * C7893 +
            (C10565 - C10566 + C10567 - C10568) * C7888) *
               C50211 * C1648 +
           (C11255 * C7891 + C11256 * C50392 +
            (C11248 - C11247 + C11250 - C11249) * C7892 +
            (C11252 - C11251 + C11254 - C11253) * C50393 +
            (C10534 * C454 - C50365 * C472 + C10535 * C455 - C50286 * C474) *
                C7893 +
            (C10534 * C473 - C50365 * C484 + C10535 * C475 - C50286 * C485) *
                C7888) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C7891 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50392 +
            (C10537 - C10538 + C10539 - C10540) * C7892 +
            (C10541 - C10542 + C10543 - C10544) * C50393 + C10577 * C7893 +
            C10578 * C7888) *
               C50211 * C1648 +
           ((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C7891 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50392 +
            (C10905 - C10906 + C10907 - C10908) * C7892 +
            (C10909 - C10910 + C10911 - C10912) * C50393 + C11255 * C7893 +
            C11256 * C7888) *
               C50211 * C50189) *
              C276 +
          (((C10534 * C281 - C50365 * C291 + C10535 * C867 - C50286 * C872) *
                C7891 +
            (C10534 * C292 - C50365 * C311 + C10535 * C873 - C50286 * C882) *
                C50392 +
            (C10727 - C10728 + C10729 - C10730) * C7892 +
            (C10731 - C10732 + C10733 - C10734) * C50393 + C11095 * C7893 +
            C11096 * C7888) *
               C50211 * C1648 +
           ((C50365 * C872 - C10534 * C867 + C50286 * C1191 - C10535 * C1187) *
                C7891 +
            (C50365 * C882 - C10534 * C873 + C50286 * C1199 - C10535 * C1192) *
                C50392 +
            (C11451 - C11452 + C11453 - C11454) * C7892 +
            (C11455 - C11456 + C11457 - C11458) * C50393 +
            (C11459 - C11460 + C11461 - C11462) * C7893 +
            (C11463 - C11464 + C11465 - C11466) * C7888) *
               C50211 * C50189) *
              C277 +
          (((C50365 * C299 - C10534 * C285 + C50286 * C1538 - C10535 * C1534) *
                C7891 +
            (C50365 * C315 - C10534 * C300 + C50286 * C1546 - C10535 * C1539) *
                C50392 +
            (C10743 - C10744 + C10745 - C10746) * C7892 +
            (C10747 - C10748 + C10749 - C10750) * C50393 +
            (C10751 - C10752 + C10753 - C10754) * C7893 +
            (C10755 - C10756 + C10757 - C10758) * C7888) *
               C50211 * C1648 +
           ((C10534 * C1534 - C50365 * C1538 + C10535 * C2626 -
             C50286 * C2629) *
                C7891 +
            (C10534 * C1539 - C50365 * C1546 + C10535 * C2630 -
             C50286 * C2635) *
                C50392 +
            (C10534 * C1535 - C50365 * C1540 + C10535 * C2627 -
             C50286 * C2631) *
                C7892 +
            (C10534 * C1541 - C50365 * C1547 + C10535 * C2632 -
             C50286 * C2636) *
                C50393 +
            (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
             C50286 * C2633) *
                C7893 +
            (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
             C50286 * C2637) *
                C7888) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C50351 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C50351 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50161) *
              C50395 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50125 * C50351 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50222 * C614) * C121 +
            (C117 * C615 - C50222 * C616) * C109) *
               C50211 * C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C50351 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C50351 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50125 * C50351 +
           ((C618 * C2266 + C619 * C2261 + C620 * C2267 + C621 * C50067) *
                C2263 +
            (C2455 * C2266 + C2456 * C2261 + (C343 - C342) * C2267 +
             (C345 - C344) * C50067) *
                C2264 +
            ((C2458 - C2457) * C2266 + (C2460 - C2459) * C2261 +
             (C117 * C1076 - C50222 * C1083) * C2267 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C2265) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C118 +
             (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50211 * C50352 +
            ((C117 * C446 - C50222 * C456) * C118 +
             (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C281 - C50222 * C291) * C118 +
             (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50211 * C50352 +
            ((C50222 * C872 - C117 * C867) * C118 +
             (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50211 * C50352 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50211 * C50189) *
               C50351 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50211 * C50352 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50222 * C880) * C121 +
             (C117 * C881 - C50222 * C886) * C109) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C2266 +
              (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
              (C153 - C154) * C50067) *
                 C2263 +
             ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 +
              C2431 * C2267 + C2432 * C50067) *
                 C2264 +
             C2480 * C2265) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C2266 +
              (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
              (C489 - C490) * C50067) *
                 C2263 +
             ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 +
              C3161 * C2267 + C3162 * C50067) *
                 C2264 +
             ((C3163 - C3164) * C2266 + (C3165 - C3166) * C2261 +
              C3167 * C2267 + C3168 * C50067) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 +
              C2439 * C2267 + C2440 * C50067) *
                 C2263 +
             ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 +
              C2441 * C2267 + C2442 * C50067) *
                 C2264 +
             ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 +
              C2465 * C2267 + C2466 * C50067) *
                 C2265) *
                C50352 +
            (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 +
              C3169 * C2267 + C3170 * C50067) *
                 C2263 +
             ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 +
              C3171 * C2267 + C3172 * C50067) *
                 C2264 +
             ((C50222 * C3147 - C117 * C3144) * C2266 +
              (C50222 * C3153 - C117 * C3148) * C2261 +
              (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
              (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                 C2263 +
             (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                 C2264 +
             C2479 * C2265) *
                C50352 +
            (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
              (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                 C2263 +
             (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
              (C894 - C895) * C50067) *
                 C2264 +
             (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
              (C2949 - C2950) * C50067) *
                 C2265) *
                C50189) *
               C50351 +
           (((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                 C2263 +
             (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                 C2264 +
             (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
              (C2459 - C2460) * C50067) *
                 C2265) *
                C50352 +
            ((C3161 * C2266 + C3162 * C2261 + (C893 - C892) * C2267 +
              (C895 - C894) * C50067) *
                 C2263 +
             (C3167 * C2266 + C3168 * C2261 + (C2948 - C2947) * C2267 +
              (C2950 - C2949) * C50067) *
                 C2264 +
             ((C3174 - C3173) * C2266 + (C3176 - C3175) * C2261 +
              (C117 * C3146 - C50222 * C3151) * C2267 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C276 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + (C326 - C327) * C120 + (C328 - C329) * C108 +
            (C330 - C331) * C121 + (C332 - C333) * C109) *
               C50211 * C50125 * C277 +
           ((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50125 * C278) *
              C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C276 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C50222 * C307 - C117 * C289) * C121 +
            (C50222 * C319 - C117 * C308) * C109) *
               C50211 * C50125 * C277 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50222 * C309) * C121 +
            (C117 * C310 - C50222 * C320) * C109) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C50125 * C50109 * C113 +
          ((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
           (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
           C178 * C109) *
              C50211 * C50125 * C50109 * C114 +
          (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
           (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
           (C169 - C170) * C109) *
              C50211 * C50125 * C50109 * C115 +
          (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
           (C168 - C167) * C120 + (C170 - C169) * C108 +
           (C117 * C128 - C50222 * C141) * C121 +
           (C117 * C142 - C50222 * C149) * C109) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C443 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + (C491 - C492) * C120 + (C493 - C494) * C108 +
            (C495 - C496) * C121 + (C497 - C498) * C109) *
               C50211 * C444 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C445) *
              C50109 * C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C443 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C50222 * C472 - C117 * C454) * C121 +
            (C50222 * C484 - C117 * C473) * C109) *
               C50211 * C444 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50222 * C474) * C121 +
            (C117 * C475 - C50222 * C485) * C109) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C50222 * C291 - C117 * C281) * C2266 +
            (C50222 * C311 - C117 * C292) * C2261 + (C323 - C322) * C2267 +
            (C325 - C324) * C50067) *
               C2264 +
           ((C50222 * C299 - C117 * C285) * C2266 +
            (C50222 * C315 - C117 * C300) * C2261 + (C334 - C335) * C2267 +
            (C336 - C337) * C50067) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C2266 + (C154 - C153) * C2261 +
            (C156 - C155) * C2267 + (C158 - C157) * C50067) *
               C2263 +
           ((C322 - C323) * C2266 + (C324 - C325) * C2261 + C618 * C2267 +
            C619 * C50067) *
               C2264 +
           ((C335 - C334) * C2266 + (C337 - C336) * C2261 +
            (C339 - C338) * C2267 + (C341 - C340) * C50067) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
               C2263 +
           ((C327 - C326) * C2266 + (C329 - C328) * C2261 +
            (C331 - C330) * C2267 + (C333 - C332) * C50067) *
               C2264 +
           ((C338 - C339) * C2266 + (C340 - C341) * C2261 +
            (C342 - C343) * C2267 + (C344 - C345) * C50067) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C175 * C2266 + C176 * C2261 + C177 * C2267 + C178 * C50067) *
               C2263 +
           (C620 * C2266 + C621 * C2261 + (C623 - C622) * C2267 +
            (C625 - C624) * C50067) *
               C2264 +
           ((C343 - C342) * C2266 + (C345 - C344) * C2261 +
            (C117 * C290 - C50222 * C309) * C2267 +
            (C117 * C310 - C50222 * C320) * C50067) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C276 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C277 +
           (C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C50222 * C2417 - C117 * C2414) * C2266 +
             (C50222 * C2423 - C117 * C2418) * C2261 + (C2451 - C2452) * C2267 +
             (C2453 - C2454) * C50067) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C276 +
           ((C2431 * C2266 + C2432 * C2261 + (C327 - C326) * C2267 +
             (C329 - C328) * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + (C338 - C339) * C2267 +
             (C340 - C341) * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C277 +
           (C2479 * C2263 +
            (C2465 * C2266 + C2466 * C2261 + (C2458 - C2457) * C2267 +
             (C2460 - C2459) * C50067) *
                C2264 +
            ((C2452 - C2451) * C2266 + (C2454 - C2453) * C2261 +
             (C117 * C2416 - C50222 * C2421) * C2267 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C117 * C867 - C50222 * C872) * C2266 +
             (C117 * C873 - C50222 * C882) * C2261 + (C889 - C888) * C2267 +
             (C891 - C890) * C50067) *
                C2264 +
            ((C117 * C1534 - C50222 * C1538) * C2266 +
             (C117 * C1539 - C50222 * C1546) * C2261 + (C2639 - C2640) * C2267 +
             (C2641 - C2642) * C50067) *
                C2265) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C50222 * C1191 - C117 * C1187) * C2266 +
             (C50222 * C1199 - C117 * C1192) * C2261 + (C2643 - C2644) * C2267 +
             (C2645 - C2646) * C50067) *
                C2264 +
            ((C50222 * C2629 - C117 * C2626) * C2266 +
             (C50222 * C2635 - C117 * C2630) * C2261 + (C2647 - C2648) * C2267 +
             (C2649 - C2650) * C50067) *
                C2265) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C443 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            ((C888 - C889) * C2266 + (C890 - C891) * C2261 +
             (C892 - C893) * C2267 + (C894 - C895) * C50067) *
                C2264 +
            ((C2640 - C2639) * C2266 + (C2642 - C2641) * C2261 +
             (C50222 * C1542 - C117 * C1536) * C2267 +
             (C50222 * C1548 - C117 * C1543) * C50067) *
                C2265) *
               C444 +
           (((C500 - C499) * C2266 + (C502 - C501) * C2261 +
             (C504 - C503) * C2267 + (C506 - C505) * C50067) *
                C2263 +
            ((C2644 - C2643) * C2266 + (C2646 - C2645) * C2261 +
             (C117 * C1189 - C50222 * C1195) * C2267 +
             (C117 * C1196 - C50222 * C1201) * C50067) *
                C2264 +
            ((C2648 - C2647) * C2266 + (C2650 - C2649) * C2261 +
             (C117 * C2628 - C50222 * C2633) * C2267 +
             (C117 * C2634 - C50222 * C2637) * C50067) *
                C2265) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50352 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50352 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50189) *
              C50109 * C50395 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50352 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50222 * C726) * C121 +
            (C117 * C727 - C50222 * C728) * C109) *
               C50211 * C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C117 * C867 - C50222 * C872) * C2266 +
             (C117 * C873 - C50222 * C882) * C2261 + (C889 - C888) * C2267 +
             (C891 - C890) * C50067) *
                C2264 +
            ((C117 * C1534 - C50222 * C1538) * C2266 +
             (C117 * C1539 - C50222 * C1546) * C2261 + (C2639 - C2640) * C2267 +
             (C2641 - C2642) * C50067) *
                C2265) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50352 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            ((C888 - C889) * C2266 + (C890 - C891) * C2261 +
             (C892 - C893) * C2267 + (C894 - C895) * C50067) *
                C2264 +
            ((C2640 - C2639) * C2266 + (C2642 - C2641) * C2261 +
             (C2947 - C2948) * C2267 + (C2949 - C2950) * C50067) *
                C2265) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50352 +
           ((C730 * C2266 + C731 * C2261 + C732 * C2267 + C733 * C50067) *
                C2263 +
            ((C893 - C892) * C2266 + (C895 - C894) * C2261 +
             (C897 - C896) * C2267 + (C899 - C898) * C50067) *
                C2264 +
            ((C2948 - C2947) * C2266 + (C2950 - C2949) * C2261 +
             (C117 * C1537 - C50222 * C1544) * C2267 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C2265) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C50125 * C50109 * C113 +
          ((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
           (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
           C178 * C109) *
              C50211 * C50125 * C50109 * C114 +
          (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
           (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
           (C169 - C170) * C109) *
              C50211 * C50125 * C50109 * C115 +
          (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
           (C168 - C167) * C120 + (C170 - C169) * C108 +
           (C117 * C128 - C50222 * C141) * C121 +
           (C117 * C142 - C50222 * C149) * C109) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C276 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + (C326 - C327) * C120 + (C328 - C329) * C108 +
            (C330 - C331) * C121 + (C332 - C333) * C109) *
               C50211 * C50125 * C277 +
           ((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50125 * C278) *
              C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C276 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C50222 * C307 - C117 * C289) * C121 +
            (C50222 * C319 - C117 * C308) * C109) *
               C50211 * C50125 * C277 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50222 * C309) * C121 +
            (C117 * C310 - C50222 * C320) * C109) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C50222 * C291 - C117 * C281) * C2266 +
            (C50222 * C311 - C117 * C292) * C2261 + (C323 - C322) * C2267 +
            (C325 - C324) * C50067) *
               C2264 +
           ((C50222 * C299 - C117 * C285) * C2266 +
            (C50222 * C315 - C117 * C300) * C2261 + (C334 - C335) * C2267 +
            (C336 - C337) * C50067) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C2266 + (C154 - C153) * C2261 +
            (C156 - C155) * C2267 + (C158 - C157) * C50067) *
               C2263 +
           ((C322 - C323) * C2266 + (C324 - C325) * C2261 + C618 * C2267 +
            C619 * C50067) *
               C2264 +
           ((C335 - C334) * C2266 + (C337 - C336) * C2261 +
            (C339 - C338) * C2267 + (C341 - C340) * C50067) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
               C2263 +
           ((C327 - C326) * C2266 + (C329 - C328) * C2261 +
            (C331 - C330) * C2267 + (C333 - C332) * C50067) *
               C2264 +
           ((C338 - C339) * C2266 + (C340 - C341) * C2261 +
            (C342 - C343) * C2267 + (C344 - C345) * C50067) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C175 * C2266 + C176 * C2261 + C177 * C2267 + C178 * C50067) *
               C2263 +
           (C620 * C2266 + C621 * C2261 + (C623 - C622) * C2267 +
            (C625 - C624) * C50067) *
               C2264 +
           ((C343 - C342) * C2266 + (C345 - C344) * C2261 +
            (C117 * C290 - C50222 * C309) * C2267 +
            (C117 * C310 - C50222 * C320) * C50067) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C276 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C277 +
           (C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C50222 * C2417 - C117 * C2414) * C2266 +
             (C50222 * C2423 - C117 * C2418) * C2261 + (C2451 - C2452) * C2267 +
             (C2453 - C2454) * C50067) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C276 +
           ((C2431 * C2266 + C2432 * C2261 + (C327 - C326) * C2267 +
             (C329 - C328) * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + (C338 - C339) * C2267 +
             (C340 - C341) * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C277 +
           (C2479 * C2263 +
            (C2465 * C2266 + C2466 * C2261 + (C2458 - C2457) * C2267 +
             (C2460 - C2459) * C50067) *
                C2264 +
            ((C2452 - C2451) * C2266 + (C2454 - C2453) * C2261 +
             (C117 * C2416 - C50222 * C2421) * C2267 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C50396 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50397 +
           ((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C50396 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50397 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50222 * C309) * C121 +
            (C117 * C310 - C50222 * C320) * C109) *
               C50211 * C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C50396 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C50125 * C50397 +
           (C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C50396 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50397 +
           (C2479 * C2263 +
            (C2465 * C2266 + C2466 * C2261 + (C2458 - C2457) * C2267 +
             (C2460 - C2459) * C50067) *
                C2264 +
            ((C2452 - C2451) * C2266 + (C2454 - C2453) * C2261 +
             (C117 * C2416 - C50222 * C2421) * C2267 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C2265) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50352 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50396 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50352 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50189) *
              C50397 +
          (((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C50352 +
           ((C117 * C1534 - C50222 * C1538) * C118 +
            (C117 * C1539 - C50222 * C1546) * C106 +
            (C117 * C1535 - C50222 * C1540) * C119 +
            (C117 * C1541 - C50222 * C1547) * C107 +
            (C117 * C1536 - C50222 * C1542) * C120 +
            (C117 * C1543 - C50222 * C1548) * C108 +
            (C117 * C1537 - C50222 * C1544) * C121 +
            (C117 * C1545 - C50222 * C1549) * C109) *
               C50211 * C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C50352 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50189) *
              C50397 +
          ((C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C50352 +
           (C4110 * C2263 +
            ((C4103 - C4102) * C2266 + (C4105 - C4104) * C2261 +
             (C3174 - C3173) * C2267 + (C3176 - C3175) * C50067) *
                C2264 +
            ((C117 * C4089 - C50222 * C4091) * C2266 +
             (C117 * C4092 - C50222 * C4095) * C2261 +
             (C117 * C4090 - C50222 * C4093) * C2267 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C2265) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C50125 * C1068 +
          ((C117 * C281 - C50222 * C291) * C118 +
           (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
           (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
           C621 * C109) *
              C50211 * C50125 * C1069 +
          ((C50222 * C299 - C117 * C285) * C118 +
           (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
           (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
           (C342 - C343) * C121 + (C344 - C345) * C109) *
              C50211 * C50125 * C1070 +
          ((C117 * C1073 - C50222 * C1077) * C118 +
           (C117 * C1078 - C50222 * C1085) * C106 +
           (C117 * C1074 - C50222 * C1079) * C119 +
           (C117 * C1080 - C50222 * C1086) * C107 +
           (C117 * C1075 - C50222 * C1081) * C120 +
           (C117 * C1082 - C50222 * C1087) * C108 +
           (C117 * C1076 - C50222 * C1083) * C121 +
           (C117 * C1084 - C50222 * C1088) * C109) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C997 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C997 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50125 * C997 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50222 * C614) * C121 +
            (C117 * C615 - C50222 * C616) * C109) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C443 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C444 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C445) *
              C997 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C443 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C444 +
           ((C117 * C1187 - C50222 * C1191) * C118 +
            (C117 * C1192 - C50222 * C1199) * C106 +
            (C117 * C1188 - C50222 * C1193) * C119 +
            (C117 * C1194 - C50222 * C1200) * C107 +
            (C117 * C1189 - C50222 * C1195) * C120 +
            (C117 * C1196 - C50222 * C1201) * C108 +
            (C117 * C1190 - C50222 * C1197) * C121 +
            (C117 * C1198 - C50222 * C1202) * C109) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C997 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C997 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50125 * C997 +
           ((C618 * C2266 + C619 * C2261 + C620 * C2267 + C621 * C50067) *
                C2263 +
            (C2455 * C2266 + C2456 * C2261 + (C343 - C342) * C2267 +
             (C345 - C344) * C50067) *
                C2264 +
            ((C2458 - C2457) * C2266 + (C2460 - C2459) * C2261 +
             (C117 * C1076 - C50222 * C1083) * C2267 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
            C2432 * C50067) *
               C2264 +
           C2480 * C2265) *
              C50125 * C1068 +
          (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
            C2440 * C50067) *
               C2263 +
           ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
            C2442 * C50067) *
               C2264 +
           C3441 * C2265) *
              C50125 * C1069 +
          (C2480 * C2263 +
           ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
            C2468 * C50067) *
               C2264 +
           ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
            (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
               C2265) *
              C50125 * C1070 +
          (C3441 * C2263 +
           ((C3434 - C3433) * C2266 + (C3436 - C3435) * C2261 +
            (C2452 - C2451) * C2267 + (C2454 - C2453) * C50067) *
               C2264 +
           ((C117 * C3420 - C50222 * C3422) * C2266 +
            (C117 * C3423 - C50222 * C3426) * C2261 +
            (C117 * C3421 - C50222 * C3424) * C2267 +
            (C117 * C3425 - C50222 * C3427) * C50067) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            ((C3163 - C3164) * C2266 + (C3165 - C3166) * C2261 + C3167 * C2267 +
             C3168 * C50067) *
                C2265) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
             (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
                C2264 +
            ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
             (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
                C2265) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C443 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C50222 * C3147 - C117 * C3144) * C2266 +
             (C50222 * C3153 - C117 * C3148) * C2261 + (C3173 - C3174) * C2267 +
             (C3175 - C3176) * C50067) *
                C2265) *
               C444 +
           (((C3597 - C3596) * C2266 + (C3599 - C3598) * C2261 +
             (C2644 - C2643) * C2267 + (C2646 - C2645) * C50067) *
                C2263 +
            ((C3601 - C3600) * C2266 + (C3603 - C3602) * C2261 +
             (C2648 - C2647) * C2267 + (C2650 - C2649) * C50067) *
                C2264 +
            ((C117 * C3587 - C50222 * C3589) * C2266 +
             (C117 * C3590 - C50222 * C3593) * C2261 +
             (C117 * C3588 - C50222 * C3591) * C2267 +
             (C117 * C3592 - C50222 * C3594) * C50067) *
                C2265) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C118 +
             (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50211 * C50352 +
            ((C117 * C446 - C50222 * C456) * C118 +
             (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50211 * C50189) *
               C997 +
           (((C117 * C281 - C50222 * C291) * C118 +
             (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50211 * C50352 +
            ((C50222 * C872 - C117 * C867) * C118 +
             (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50211 * C50352 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50211 * C50189) *
               C997 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50211 * C50352 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50222 * C880) * C121 +
             (C117 * C881 - C50222 * C886) * C109) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C2266 +
              (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
              (C153 - C154) * C50067) *
                 C2263 +
             ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 +
              C2431 * C2267 + C2432 * C50067) *
                 C2264 +
             C2480 * C2265) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C2266 +
              (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
              (C489 - C490) * C50067) *
                 C2263 +
             ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 +
              C3161 * C2267 + C3162 * C50067) *
                 C2264 +
             ((C3163 - C3164) * C2266 + (C3165 - C3166) * C2261 +
              C3167 * C2267 + C3168 * C50067) *
                 C2265) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 +
              C2439 * C2267 + C2440 * C50067) *
                 C2263 +
             ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 +
              C2441 * C2267 + C2442 * C50067) *
                 C2264 +
             C3441 * C2265) *
                C50352 +
            (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 +
              C3169 * C2267 + C3170 * C50067) *
                 C2263 +
             ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 +
              C3171 * C2267 + C3172 * C50067) *
                 C2264 +
             ((C50222 * C3147 - C117 * C3144) * C2266 +
              (C50222 * C3153 - C117 * C3148) * C2261 +
              (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
              (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                 C2263 +
             (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                 C2264 +
             C2479 * C2265) *
                C50352 +
            (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
              (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                 C2263 +
             (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
              (C894 - C895) * C50067) *
                 C2264 +
             (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
              (C2949 - C2950) * C50067) *
                 C2265) *
                C50189) *
               C997 +
           (((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                 C2263 +
             (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                 C2264 +
             (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
              (C2459 - C2460) * C50067) *
                 C2265) *
                C50352 +
            ((C3161 * C2266 + C3162 * C2261 + (C893 - C892) * C2267 +
              (C895 - C894) * C50067) *
                 C2263 +
             (C3167 * C2266 + C3168 * C2261 + (C2948 - C2947) * C2267 +
              (C2950 - C2949) * C50067) *
                 C2264 +
             ((C3174 - C3173) * C2266 + (C3176 - C3175) * C2261 +
              (C117 * C3146 - C50222 * C3151) * C2267 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50125 * C997 +
           ((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50125 * C997 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C50125 * C997 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50222 * C614) * C121 +
            (C117 * C615 - C50222 * C616) * C109) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C50125 * C1068 +
          ((C117 * C281 - C50222 * C291) * C118 +
           (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
           (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
           C621 * C109) *
              C50211 * C50125 * C1069 +
          ((C50222 * C299 - C117 * C285) * C118 +
           (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
           (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
           (C342 - C343) * C121 + (C344 - C345) * C109) *
              C50211 * C50125 * C1070 +
          ((C117 * C1073 - C50222 * C1077) * C118 +
           (C117 * C1078 - C50222 * C1085) * C106 +
           (C117 * C1074 - C50222 * C1079) * C119 +
           (C117 * C1080 - C50222 * C1086) * C107 +
           (C117 * C1075 - C50222 * C1081) * C120 +
           (C117 * C1082 - C50222 * C1087) * C108 +
           (C117 * C1076 - C50222 * C1083) * C121 +
           (C117 * C1084 - C50222 * C1088) * C109) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50125 * C997 +
           (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            ((C2443 - C2444) * C2266 + (C2445 - C2446) * C2261 + C2465 * C2267 +
             C2466 * C50067) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50125 * C997 +
           ((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                C2263 +
            (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                C2264 +
            (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
             (C2459 - C2460) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C50125 * C997 +
           ((C618 * C2266 + C619 * C2261 + C620 * C2267 + C621 * C50067) *
                C2263 +
            (C2455 * C2266 + C2456 * C2261 + (C343 - C342) * C2267 +
             (C345 - C344) * C50067) *
                C2264 +
            ((C2458 - C2457) * C2266 + (C2460 - C2459) * C2261 +
             (C117 * C1076 - C50222 * C1083) * C2267 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
            C2432 * C50067) *
               C2264 +
           C2480 * C2265) *
              C50125 * C1068 +
          (((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
            C2440 * C50067) *
               C2263 +
           ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
            C2442 * C50067) *
               C2264 +
           C3441 * C2265) *
              C50125 * C1069 +
          (C2480 * C2263 +
           ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
            C2468 * C50067) *
               C2264 +
           ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
            (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
               C2265) *
              C50125 * C1070 +
          (C3441 * C2263 +
           ((C3434 - C3433) * C2266 + (C3436 - C3435) * C2261 +
            (C2452 - C2451) * C2267 + (C2454 - C2453) * C50067) *
               C2264 +
           ((C117 * C3420 - C50222 * C3422) * C2266 +
            (C117 * C3423 - C50222 * C3426) * C2261 +
            (C117 * C3421 - C50222 * C3424) * C2267 +
            (C117 * C3425 - C50222 * C3427) * C50067) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C118 +
             (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50211 * C1648 +
            ((C117 * C446 - C50222 * C456) * C118 +
             (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C281 - C50222 * C291) * C118 +
             (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50211 * C1648 +
            ((C50222 * C872 - C117 * C867) * C118 +
             (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50211 * C1648 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50211 * C50189) *
               C50351 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50211 * C1648 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50222 * C880) * C121 +
             (C117 * C881 - C50222 * C886) * C109) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C2266 +
              (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
              (C153 - C154) * C50067) *
                 C2263 +
             ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 +
              C2431 * C2267 + C2432 * C50067) *
                 C2264 +
             C2480 * C2265) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C2266 +
              (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
              (C489 - C490) * C50067) *
                 C2263 +
             ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 +
              C3161 * C2267 + C3162 * C50067) *
                 C2264 +
             C4110 * C2265) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 +
              C2439 * C2267 + C2440 * C50067) *
                 C2263 +
             ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 +
              C2441 * C2267 + C2442 * C50067) *
                 C2264 +
             C3441 * C2265) *
                C1648 +
            (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 +
              C3169 * C2267 + C3170 * C50067) *
                 C2263 +
             ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 +
              C3171 * C2267 + C3172 * C50067) *
                 C2264 +
             ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
              (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
              (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                 C2263 +
             (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                 C2264 +
             C2479 * C2265) *
                C1648 +
            (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
              (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                 C2263 +
             (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
              (C894 - C895) * C50067) *
                 C2264 +
             (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
              (C2949 - C2950) * C50067) *
                 C2265) *
                C50189) *
               C50351 +
           (((C2431 * C2266 + C2432 * C2261 + C2797 * C2267 + C2798 * C50067) *
                 C2263 +
             (C2437 * C2266 + C2438 * C2261 + C2799 * C2267 + C2800 * C50067) *
                 C2264 +
             (C2467 * C2266 + C2468 * C2261 + (C2457 - C2458) * C2267 +
              (C2459 - C2460) * C50067) *
                 C2265) *
                C1648 +
            ((C3161 * C2266 + C3162 * C2261 + (C893 - C892) * C2267 +
              (C895 - C894) * C50067) *
                 C2263 +
             (C3167 * C2266 + C3168 * C2261 + (C2948 - C2947) * C2267 +
              (C2950 - C2949) * C50067) *
                 C2264 +
             ((C3174 - C3173) * C2266 + (C3176 - C3175) * C2261 +
              (C117 * C3146 - C50222 * C3151) * C2267 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50398 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50399 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C2064) *
              C50351 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C50398 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50399 +
           ((C117 * C1187 - C50222 * C1191) * C118 +
            (C117 * C1192 - C50222 * C1199) * C106 +
            (C117 * C1188 - C50222 * C1193) * C119 +
            (C117 * C1194 - C50222 * C1200) * C107 +
            (C117 * C1189 - C50222 * C1195) * C120 +
            (C117 * C1196 - C50222 * C1201) * C108 +
            (C117 * C1190 - C50222 * C1197) * C121 +
            (C117 * C1198 - C50222 * C1202) * C109) *
               C50211 * C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
             (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
                C2264 +
            ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
             (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
                C2265) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C50398 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50399 +
           (((C3597 - C3596) * C2266 + (C3599 - C3598) * C2261 +
             (C2644 - C2643) * C2267 + (C2646 - C2645) * C50067) *
                C2263 +
            ((C3601 - C3600) * C2266 + (C3603 - C3602) * C2261 +
             (C2648 - C2647) * C2267 + (C2650 - C2649) * C50067) *
                C2264 +
            ((C117 * C3587 - C50222 * C3589) * C2266 +
             (C117 * C3590 - C50222 * C3593) * C2261 +
             (C117 * C3588 - C50222 * C3591) * C2267 +
             (C117 * C3592 - C50222 * C3594) * C50067) *
                C2265) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C1648 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C276 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C1648 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50189) *
              C277 +
          (((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C1648 +
           ((C117 * C1534 - C50222 * C1538) * C118 +
            (C117 * C1539 - C50222 * C1546) * C106 +
            (C117 * C1535 - C50222 * C1540) * C119 +
            (C117 * C1541 - C50222 * C1547) * C107 +
            (C117 * C1536 - C50222 * C1542) * C120 +
            (C117 * C1543 - C50222 * C1548) * C108 +
            (C117 * C1537 - C50222 * C1544) * C121 +
            (C117 * C1545 - C50222 * C1549) * C109) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C1648 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C1648 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C1648 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50222 * C726) * C121 +
            (C117 * C727 - C50222 * C728) * C109) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50222 * C129 - C117 * C122) * C118 +
           (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50211 * C1814 +
          ((C117 * C446 - C50222 * C456) * C118 +
           (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
           (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
           C733 * C109) *
              C50211 * C1815 +
          ((C50222 * C464 - C117 * C450) * C118 +
           (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
           (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
           (C507 - C508) * C121 + (C509 - C510) * C109) *
              C50211 * C1816 +
          ((C117 * C1818 - C50222 * C1822) * C118 +
           (C117 * C1823 - C50222 * C1830) * C106 +
           (C117 * C1819 - C50222 * C1824) * C119 +
           (C117 * C1825 - C50222 * C1831) * C107 +
           (C117 * C1820 - C50222 * C1826) * C120 +
           (C117 * C1827 - C50222 * C1832) * C108 +
           (C117 * C1821 - C50222 * C1828) * C121 +
           (C117 * C1829 - C50222 * C1833) * C109) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C1648 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
             (C894 - C895) * C50067) *
                C2264 +
            (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
             (C2949 - C2950) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C1648 +
           ((C730 * C2266 + C731 * C2261 + C732 * C2267 + C733 * C50067) *
                C2263 +
            ((C893 - C892) * C2266 + (C895 - C894) * C2261 +
             (C897 - C896) * C2267 + (C899 - C898) * C50067) *
                C2264 +
            ((C2948 - C2947) * C2266 + (C2950 - C2949) * C2261 +
             (C117 * C1537 - C50222 * C1544) * C2267 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C1648 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50189) *
              C277 +
          ((C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C1648 +
           (C4110 * C2263 +
            ((C4103 - C4102) * C2266 + (C4105 - C4104) * C2261 +
             (C3174 - C3173) * C2267 + (C3176 - C3175) * C50067) *
                C2264 +
            ((C117 * C4089 - C50222 * C4091) * C2266 +
             (C117 * C4092 - C50222 * C4095) * C2261 +
             (C117 * C4090 - C50222 * C4093) * C2267 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C2266 +
            (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
            (C153 - C154) * C50067) *
               C2263 +
           ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
            C2432 * C50067) *
               C2264 +
           C2480 * C2265) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C2266 +
            (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
            (C489 - C490) * C50067) *
               C2263 +
           ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
            C3162 * C50067) *
               C2264 +
           C4110 * C2265) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C2266 +
            (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
            (C501 - C502) * C50067) *
               C2263 +
           ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
            (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
               C2264 +
           ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
            (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
               C2265) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C2266 +
            (C117 * C1823 - C50222 * C1830) * C2261 +
            (C117 * C1819 - C50222 * C1824) * C2267 +
            (C117 * C1825 - C50222 * C1831) * C50067) *
               C2263 +
           ((C117 * C4500 - C50222 * C4504) * C2266 +
            (C117 * C4505 - C50222 * C4512) * C2261 +
            (C117 * C4501 - C50222 * C4506) * C2267 +
            (C117 * C4507 - C50222 * C4513) * C50067) *
               C2264 +
           ((C117 * C4502 - C50222 * C4508) * C2266 +
            (C117 * C4509 - C50222 * C4514) * C2261 +
            (C117 * C4503 - C50222 * C4510) * C2267 +
            (C117 * C4511 - C50222 * C4515) * C50067) *
               C2265) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C50398 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50399 +
           ((C50222 * C464 - C117 * C450) * C118 +
            (C50222 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C50398 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50399 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50222 * C474) * C121 +
            (C117 * C475 - C50222 * C485) * C109) *
               C50211 * C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C2266 +
             (C50222 * C480 - C117 * C465) * C2261 + (C499 - C500) * C2267 +
             (C501 - C502) * C50067) *
                C2263 +
            ((C3596 - C3597) * C2266 + (C3598 - C3599) * C2261 +
             (C2643 - C2644) * C2267 + (C2645 - C2646) * C50067) *
                C2264 +
            ((C3600 - C3601) * C2266 + (C3602 - C3603) * C2261 +
             (C2647 - C2648) * C2267 + (C2649 - C2650) * C50067) *
                C2265) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C50398 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
             (C894 - C895) * C50067) *
                C2264 +
            (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
             (C2949 - C2950) * C50067) *
                C2265) *
               C50399 +
           (((C500 - C499) * C2266 + (C502 - C501) * C2261 +
             (C504 - C503) * C2267 + (C506 - C505) * C50067) *
                C2263 +
            ((C2644 - C2643) * C2266 + (C2646 - C2645) * C2261 +
             (C117 * C1189 - C50222 * C1195) * C2267 +
             (C117 * C1196 - C50222 * C1201) * C50067) *
                C2264 +
            ((C2648 - C2647) * C2266 + (C2650 - C2649) * C2261 +
             (C117 * C2628 - C50222 * C2633) * C2267 +
             (C117 * C2634 - C50222 * C2637) * C50067) *
                C2265) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C1648 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50211 * C1648 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50211 * C1648 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50222 * C726) * C121 +
            (C117 * C727 - C50222 * C728) * C109) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C118 +
            (C50222 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50211 * C1648 +
           ((C117 * C446 - C50222 * C456) * C118 +
            (C117 * C457 - C50222 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50211 * C50189) *
              C276 +
          (((C117 * C281 - C50222 * C291) * C118 +
            (C117 * C292 - C50222 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50211 * C1648 +
           ((C50222 * C872 - C117 * C867) * C118 +
            (C50222 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50211 * C50189) *
              C277 +
          (((C50222 * C299 - C117 * C285) * C118 +
            (C50222 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50211 * C1648 +
           ((C117 * C1534 - C50222 * C1538) * C118 +
            (C117 * C1539 - C50222 * C1546) * C106 +
            (C117 * C1535 - C50222 * C1540) * C119 +
            (C117 * C1541 - C50222 * C1547) * C107 +
            (C117 * C1536 - C50222 * C1542) * C120 +
            (C117 * C1543 - C50222 * C1548) * C108 +
            (C117 * C1537 - C50222 * C1544) * C121 +
            (C117 * C1545 - C50222 * C1549) * C109) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C2266 + (C154 - C153) * C2261 +
             (C156 - C155) * C2267 + (C158 - C157) * C50067) *
                C2263 +
            (C2439 * C2266 + C2440 * C2261 + C618 * C2267 + C619 * C50067) *
                C2264 +
            C2479 * C2265) *
               C1648 +
           (((C488 - C487) * C2266 + (C490 - C489) * C2261 +
             (C492 - C491) * C2267 + (C494 - C493) * C50067) *
                C2263 +
            (C3169 * C2266 + C3170 * C2261 + (C892 - C893) * C2267 +
             (C894 - C895) * C50067) *
                C2264 +
            (C3171 * C2266 + C3172 * C2261 + (C2947 - C2948) * C2267 +
             (C2949 - C2950) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C2266 + C172 * C2261 + C173 * C2267 + C174 * C50067) *
                C2263 +
            (C2797 * C2266 + C2798 * C2261 + (C331 - C330) * C2267 +
             (C333 - C332) * C50067) *
                C2264 +
            (C2799 * C2266 + C2800 * C2261 + (C342 - C343) * C2267 +
             (C344 - C345) * C50067) *
                C2265) *
               C1648 +
           ((C730 * C2266 + C731 * C2261 + C732 * C2267 + C733 * C50067) *
                C2263 +
            ((C893 - C892) * C2266 + (C895 - C894) * C2261 +
             (C897 - C896) * C2267 + (C899 - C898) * C50067) *
                C2264 +
            ((C2948 - C2947) * C2266 + (C2950 - C2949) * C2261 +
             (C117 * C1537 - C50222 * C1544) * C2267 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C2266 +
             (C50222 * C143 - C117 * C130) * C2261 + (C151 - C152) * C2267 +
             (C153 - C154) * C50067) *
                C2263 +
            ((C2427 - C2428) * C2266 + (C2429 - C2430) * C2261 + C2431 * C2267 +
             C2432 * C50067) *
                C2264 +
            C2480 * C2265) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C2266 +
             (C117 * C457 - C50222 * C476) * C2261 + (C487 - C488) * C2267 +
             (C489 - C490) * C50067) *
                C2263 +
            ((C3157 - C3158) * C2266 + (C3159 - C3160) * C2261 + C3161 * C2267 +
             C3162 * C50067) *
                C2264 +
            C4110 * C2265) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C2266 + (C2430 - C2429) * C2261 + C2439 * C2267 +
             C2440 * C50067) *
                C2263 +
            ((C2434 - C2433) * C2266 + (C2436 - C2435) * C2261 + C2441 * C2267 +
             C2442 * C50067) *
                C2264 +
            C3441 * C2265) *
               C1648 +
           (((C3158 - C3157) * C2266 + (C3160 - C3159) * C2261 + C3169 * C2267 +
             C3170 * C50067) *
                C2263 +
            ((C3164 - C3163) * C2266 + (C3166 - C3165) * C2261 + C3171 * C2267 +
             C3172 * C50067) *
                C2264 +
            ((C4102 - C4103) * C2266 + (C4104 - C4105) * C2261 +
             (C3173 - C3174) * C2267 + (C3175 - C3176) * C50067) *
                C2265) *
               C50189) *
              C277 +
          ((C2480 * C2263 +
            ((C2444 - C2443) * C2266 + (C2446 - C2445) * C2261 + C2467 * C2267 +
             C2468 * C50067) *
                C2264 +
            ((C3433 - C3434) * C2266 + (C3435 - C3436) * C2261 +
             (C2451 - C2452) * C2267 + (C2453 - C2454) * C50067) *
                C2265) *
               C1648 +
           (C4110 * C2263 +
            ((C4103 - C4102) * C2266 + (C4105 - C4104) * C2261 +
             (C3174 - C3173) * C2267 + (C3176 - C3175) * C50067) *
                C2264 +
            ((C117 * C4089 - C50222 * C4091) * C2266 +
             (C117 * C4092 - C50222 * C4095) * C2261 +
             (C117 * C4090 - C50222 * C4093) * C2267 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50125 * C50351 +
           (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            (C3429 * C49175 + C3430 * C50336 + C2465 * C49168 +
             C2466 * C50067) *
                C24098) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50125 * C50351 +
           ((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
             C2798 * C50067) *
                C50400 +
            (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
             C2800 * C50067) *
                C50401 +
            (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
             (C2459 - C2460) * C50067) *
                C24098) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
                C50400 +
            (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 +
             C8338 * C50067) *
                C50401 +
            (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
             (C344 - C345) * C50067) *
                C24098) *
               C50125 * C50351 +
           ((C618 * C49175 + C619 * C50336 + C620 * C49168 + C621 * C50067) *
                C50400 +
            (C2455 * C49175 + C2456 * C50336 + (C343 - C342) * C49168 +
             (C345 - C344) * C50067) *
                C50401 +
            ((C2458 - C2457) * C49175 + (C2460 - C2459) * C50336 +
             (C117 * C1076 - C50222 * C1083) * C49168 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C24098) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C49175 +
              (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
              (C153 - C154) * C50067) *
                 C50400 +
             ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
              C2431 * C49168 + C2432 * C50067) *
                 C50401 +
             C24260 * C24098) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C49175 +
              (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
              (C489 - C490) * C50067) *
                 C50400 +
             ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
              C3161 * C49168 + C3162 * C50067) *
                 C50401 +
             (C4098 * C49175 + C4099 * C50336 + C3167 * C49168 +
              C3168 * C50067) *
                 C24098) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
              C2439 * C49168 + C2440 * C50067) *
                 C50400 +
             ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
              C2441 * C49168 + C2442 * C50067) *
                 C50401 +
             (C3429 * C49175 + C3430 * C50336 + C2465 * C49168 +
              C2466 * C50067) *
                 C24098) *
                C50352 +
            (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
              C3169 * C49168 + C3170 * C50067) *
                 C50400 +
             ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
              C3171 * C49168 + C3172 * C50067) *
                 C50401 +
             ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
              (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                 C24098) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
              (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                 C50400 +
             (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                 C50401 +
             C24261 * C24098) *
                C50352 +
            (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
              (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                 C50400 +
             (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
              C8682 * C50067) *
                 C50401 +
             (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
              (C2949 - C2950) * C50067) *
                 C24098) *
                C50189) *
               C50351 +
           (((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
              C2798 * C50067) *
                 C50400 +
             (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
              C2800 * C50067) *
                 C50401 +
             (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
              (C2459 - C2460) * C50067) *
                 C24098) *
                C50352 +
            ((C3161 * C49175 + C3162 * C50336 + C8485 * C49168 +
              C8486 * C50067) *
                 C50400 +
             (C3167 * C49175 + C3168 * C50336 + (C2948 - C2947) * C49168 +
              (C2950 - C2949) * C50067) *
                 C50401 +
             ((C3174 - C3173) * C49175 + (C3176 - C3175) * C50336 +
              (C117 * C3146 - C50222 * C3151) * C49168 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C24098) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50125 * C276 +
           (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            (C3429 * C49175 + C3430 * C50336 + C2465 * C49168 +
             C2466 * C50067) *
                C24098) *
               C50125 * C277 +
           (C24260 * C50400 +
            (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
             C2468 * C50067) *
                C50401 +
            ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
             (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
                C24098) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50125 * C276 +
           ((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
             C2798 * C50067) *
                C50400 +
            (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
             C2800 * C50067) *
                C50401 +
            (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
             (C2459 - C2460) * C50067) *
                C24098) *
               C50125 * C277 +
           (C24261 * C50400 +
            (C2465 * C49175 + C2466 * C50336 + (C2458 - C2457) * C49168 +
             (C2460 - C2459) * C50067) *
                C50401 +
            ((C2452 - C2451) * C49175 + (C2454 - C2453) * C50336 +
             (C117 * C2416 - C50222 * C2421) * C49168 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C24098) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C49175 +
            (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
            (C153 - C154) * C50067) *
               C50400 +
           ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
            C2431 * C49168 + C2432 * C50067) *
               C50401 +
           (C2461 * C49175 + C2462 * C50336 + C2437 * C49168 + C2438 * C50067) *
               C24098) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C49175 + (C154 - C153) * C50336 +
            (C156 - C155) * C49168 + (C158 - C157) * C50067) *
               C50400 +
           (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
               C50401 +
           (C2441 * C49175 + C2442 * C50336 + C2455 * C49168 + C2456 * C50067) *
               C24098) *
              C50125 * C50109 * C114 +
          ((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
               C50400 +
           (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 + C8338 * C50067) *
               C50401 +
           (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
            (C344 - C345) * C50067) *
               C24098) *
              C50125 * C50109 * C115 +
          ((C175 * C49175 + C176 * C50336 + C177 * C49168 + C178 * C50067) *
               C50400 +
           (C620 * C49175 + C621 * C50336 + (C623 - C622) * C49168 +
            (C625 - C624) * C50067) *
               C50401 +
           ((C343 - C342) * C49175 + (C345 - C344) * C50336 +
            (C117 * C290 - C50222 * C309) * C49168 +
            (C117 * C310 - C50222 * C320) * C50067) *
               C24098) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            (C4098 * C49175 + C4099 * C50336 + C3167 * C49168 +
             C3168 * C50067) *
                C24098) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C49175 +
             (C50222 * C480 - C117 * C465) * C50336 + (C499 - C500) * C49168 +
             (C501 - C502) * C50067) *
                C50400 +
            ((C3596 - C3597) * C49175 + (C3598 - C3599) * C50336 +
             (C2643 - C2644) * C49168 + (C2645 - C2646) * C50067) *
                C50401 +
            ((C3600 - C3601) * C49175 + (C3602 - C3603) * C50336 +
             (C2647 - C2648) * C49168 + (C2649 - C2650) * C50067) *
                C24098) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C443 +
           (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
             (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                C50400 +
            (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
             C8682 * C50067) *
                C50401 +
            (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
             (C2949 - C2950) * C50067) *
                C24098) *
               C444 +
           (((C500 - C499) * C49175 + (C502 - C501) * C50336 +
             (C504 - C503) * C49168 + (C506 - C505) * C50067) *
                C50400 +
            ((C2644 - C2643) * C49175 + (C2646 - C2645) * C50336 +
             (C8188 - C8187) * C49168 + (C8190 - C8189) * C50067) *
                C50401 +
            ((C2648 - C2647) * C49175 + (C2650 - C2649) * C50336 +
             (C117 * C2628 - C50222 * C2633) * C49168 +
             (C117 * C2634 - C50222 * C2637) * C50067) *
                C24098) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            (C4098 * C49175 + C4099 * C50336 + C3167 * C49168 +
             C3168 * C50067) *
                C24098) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50352 +
           (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
             (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                C50400 +
            (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
             C8682 * C50067) *
                C50401 +
            (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
             (C2949 - C2950) * C50067) *
                C24098) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
                C50400 +
            (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 +
             C8338 * C50067) *
                C50401 +
            (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
             (C344 - C345) * C50067) *
                C24098) *
               C50352 +
           ((C730 * C49175 + C731 * C50336 + C732 * C49168 + C733 * C50067) *
                C50400 +
            (C8485 * C49175 + C8486 * C50336 + (C897 - C896) * C49168 +
             (C899 - C898) * C50067) *
                C50401 +
            ((C2948 - C2947) * C49175 + (C2950 - C2949) * C50336 +
             (C117 * C1537 - C50222 * C1544) * C49168 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C24098) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C49175 +
            (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
            (C153 - C154) * C50067) *
               C50400 +
           ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
            C2431 * C49168 + C2432 * C50067) *
               C50401 +
           (C2461 * C49175 + C2462 * C50336 + C2437 * C49168 + C2438 * C50067) *
               C24098) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C49175 + (C154 - C153) * C50336 +
            (C156 - C155) * C49168 + (C158 - C157) * C50067) *
               C50400 +
           (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
               C50401 +
           (C2441 * C49175 + C2442 * C50336 + C2455 * C49168 + C2456 * C50067) *
               C24098) *
              C50125 * C50109 * C114 +
          ((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
               C50400 +
           (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 + C8338 * C50067) *
               C50401 +
           (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
            (C344 - C345) * C50067) *
               C24098) *
              C50125 * C50109 * C115 +
          ((C175 * C49175 + C176 * C50336 + C177 * C49168 + C178 * C50067) *
               C50400 +
           (C620 * C49175 + C621 * C50336 + (C623 - C622) * C49168 +
            (C625 - C624) * C50067) *
               C50401 +
           ((C343 - C342) * C49175 + (C345 - C344) * C50336 +
            (C117 * C290 - C50222 * C309) * C49168 +
            (C117 * C310 - C50222 * C320) * C50067) *
               C24098) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50125 * C276 +
           (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            (C3429 * C49175 + C3430 * C50336 + C2465 * C49168 +
             C2466 * C50067) *
                C24098) *
               C50125 * C277 +
           (C24260 * C50400 +
            (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
             C2468 * C50067) *
                C50401 +
            ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
             (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
                C24098) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50125 * C276 +
           ((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
             C2798 * C50067) *
                C50400 +
            (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
             C2800 * C50067) *
                C50401 +
            (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
             (C2459 - C2460) * C50067) *
                C24098) *
               C50125 * C277 +
           (C24261 * C50400 +
            (C2465 * C49175 + C2466 * C50336 + (C2458 - C2457) * C49168 +
             (C2460 - C2459) * C50067) *
                C50401 +
            ((C2452 - C2451) * C49175 + (C2454 - C2453) * C50336 +
             (C117 * C2416 - C50222 * C2421) * C49168 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C24098) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50125 * C50396 +
           (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            C25144 * C24098) *
               C50125 * C50397 +
           (C24260 * C50400 +
            (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
             C2468 * C50067) *
                C50401 +
            ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
             (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
                C24098) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50125 * C50396 +
           ((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
             C2798 * C50067) *
                C50400 +
            (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
             C2800 * C50067) *
                C50401 +
            (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
             (C2459 - C2460) * C50067) *
                C24098) *
               C50125 * C50397 +
           (C24261 * C50400 +
            (C2465 * C49175 + C2466 * C50336 + (C2458 - C2457) * C49168 +
             (C2460 - C2459) * C50067) *
                C50401 +
            ((C2452 - C2451) * C49175 + (C2454 - C2453) * C50336 +
             (C117 * C2416 - C50222 * C2421) * C49168 +
             (C117 * C2422 - C50222 * C2425) * C50067) *
                C24098) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50222 * C129 - C117 * C122) * C49175 +
                     (C50222 * C143 - C117 * C130) * C50336 +
                     (C151 - C152) * C49168 + (C153 - C154) * C50067) *
                        C50400 +
                    ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
                     C2431 * C49168 + C2432 * C50067) *
                        C50401 +
                    C24260 * C24098) *
                       C50352 +
                   (((C117 * C446 - C50222 * C456) * C49175 +
                     (C117 * C457 - C50222 * C476) * C50336 +
                     (C487 - C488) * C49168 + (C489 - C490) * C50067) *
                        C50400 +
                    ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
                     C3161 * C49168 + C3162 * C50067) *
                        C50401 +
                    C25783 * C24098) *
                       C50189) *
                      C50396 +
                  ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
                     C2439 * C49168 + C2440 * C50067) *
                        C50400 +
                    ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
                     C2441 * C49168 + C2442 * C50067) *
                        C50401 +
                    C25144 * C24098) *
                       C50352 +
                   (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
                     C3169 * C49168 + C3170 * C50067) *
                        C50400 +
                    ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
                     C3171 * C49168 + C3172 * C50067) *
                        C50401 +
                    ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
                     (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                        C24098) *
                       C50189) *
                      C50397 +
                  ((C24260 * C50400 +
                    (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
                     C2468 * C50067) *
                        C50401 +
                    ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
                     (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
                        C24098) *
                       C50352 +
                   (C25783 * C50400 +
                    (C20687 * C49175 + C20688 * C50336 +
                     (C3174 - C3173) * C49168 + (C3176 - C3175) * C50067) *
                        C50401 +
                    ((C20690 - C20689) * C49175 + (C20692 - C20691) * C50336 +
                     (C117 * C4090 - C50222 * C4093) * C49168 +
                     (C117 * C4094 - C50222 * C4096) * C50067) *
                        C24098) *
                       C50189) *
                      C1303) *
                 C50090) /
                (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C49175 +
            (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
            (C153 - C154) * C50067) *
               C50400 +
           ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
            C2431 * C49168 + C2432 * C50067) *
               C50401 +
           C24260 * C24098) *
              C50125 * C1068 +
          (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
            C2439 * C49168 + C2440 * C50067) *
               C50400 +
           ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
            C2441 * C49168 + C2442 * C50067) *
               C50401 +
           C25144 * C24098) *
              C50125 * C1069 +
          (C24260 * C50400 +
           (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
            C2468 * C50067) *
               C50401 +
           ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
            (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
               C24098) *
              C50125 * C1070 +
          (C25144 * C50400 +
           (C20239 * C49175 + C20240 * C50336 + (C2452 - C2451) * C49168 +
            (C2454 - C2453) * C50067) *
               C50401 +
           ((C20242 - C20241) * C49175 + (C20244 - C20243) * C50336 +
            (C117 * C3421 - C50222 * C3424) * C49168 +
            (C117 * C3425 - C50222 * C3427) * C50067) *
               C24098) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50125 * C997 +
           (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            (C3429 * C49175 + C3430 * C50336 + C2465 * C49168 +
             C2466 * C50067) *
                C24098) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50125 * C997 +
           ((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
             C2798 * C50067) *
                C50400 +
            (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
             C2800 * C50067) *
                C50401 +
            (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
             (C2459 - C2460) * C50067) *
                C24098) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
                C50400 +
            (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 +
             C8338 * C50067) *
                C50401 +
            (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
             (C344 - C345) * C50067) *
                C24098) *
               C50125 * C997 +
           ((C618 * C49175 + C619 * C50336 + C620 * C49168 + C621 * C50067) *
                C50400 +
            (C2455 * C49175 + C2456 * C50336 + (C343 - C342) * C49168 +
             (C345 - C344) * C50067) *
                C50401 +
            ((C2458 - C2457) * C49175 + (C2460 - C2459) * C50336 +
             (C117 * C1076 - C50222 * C1083) * C49168 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C24098) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            (C4098 * C49175 + C4099 * C50336 + C3167 * C49168 +
             C3168 * C50067) *
                C24098) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C49175 +
             (C50222 * C480 - C117 * C465) * C50336 + (C499 - C500) * C49168 +
             (C501 - C502) * C50067) *
                C50400 +
            ((C3596 - C3597) * C49175 + (C3598 - C3599) * C50336 +
             (C2643 - C2644) * C49168 + (C2645 - C2646) * C50067) *
                C50401 +
            ((C3600 - C3601) * C49175 + (C3602 - C3603) * C50336 +
             (C2647 - C2648) * C49168 + (C2649 - C2650) * C50067) *
                C24098) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            C25144 * C24098) *
               C443 +
           (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
             C3169 * C49168 + C3170 * C50067) *
                C50400 +
            ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
             C3171 * C49168 + C3172 * C50067) *
                C50401 +
            ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
             (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                C24098) *
               C444 +
           (((C3597 - C3596) * C49175 + (C3599 - C3598) * C50336 +
             (C2644 - C2643) * C49168 + (C2646 - C2645) * C50067) *
                C50400 +
            ((C3601 - C3600) * C49175 + (C3603 - C3602) * C50336 +
             (C2648 - C2647) * C49168 + (C2650 - C2649) * C50067) *
                C50401 +
            ((C20352 - C20351) * C49175 + (C20354 - C20353) * C50336 +
             (C117 * C3588 - C50222 * C3591) * C49168 +
             (C117 * C3592 - C50222 * C3594) * C50067) *
                C24098) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C49175 +
              (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
              (C153 - C154) * C50067) *
                 C50400 +
             ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
              C2431 * C49168 + C2432 * C50067) *
                 C50401 +
             C24260 * C24098) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C49175 +
              (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
              (C489 - C490) * C50067) *
                 C50400 +
             ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
              C3161 * C49168 + C3162 * C50067) *
                 C50401 +
             (C4098 * C49175 + C4099 * C50336 + C3167 * C49168 +
              C3168 * C50067) *
                 C24098) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
              C2439 * C49168 + C2440 * C50067) *
                 C50400 +
             ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
              C2441 * C49168 + C2442 * C50067) *
                 C50401 +
             C25144 * C24098) *
                C50352 +
            (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
              C3169 * C49168 + C3170 * C50067) *
                 C50400 +
             ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
              C3171 * C49168 + C3172 * C50067) *
                 C50401 +
             ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
              (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                 C24098) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
              (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                 C50400 +
             (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                 C50401 +
             C24261 * C24098) *
                C50352 +
            (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
              (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                 C50400 +
             (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
              C8682 * C50067) *
                 C50401 +
             (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
              (C2949 - C2950) * C50067) *
                 C24098) *
                C50189) *
               C997 +
           (((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
              C2798 * C50067) *
                 C50400 +
             (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
              C2800 * C50067) *
                 C50401 +
             (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
              (C2459 - C2460) * C50067) *
                 C24098) *
                C50352 +
            ((C3161 * C49175 + C3162 * C50336 + C8485 * C49168 +
              C8486 * C50067) *
                 C50400 +
             (C3167 * C49175 + C3168 * C50336 + (C2948 - C2947) * C49168 +
              (C2950 - C2949) * C50067) *
                 C50401 +
             ((C3174 - C3173) * C49175 + (C3176 - C3175) * C50336 +
              (C117 * C3146 - C50222 * C3151) * C49168 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C24098) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50125 * C997 +
           (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            (C3429 * C49175 + C3430 * C50336 + C2465 * C49168 +
             C2466 * C50067) *
                C24098) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50125 * C997 +
           ((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
             C2798 * C50067) *
                C50400 +
            (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
             C2800 * C50067) *
                C50401 +
            (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
             (C2459 - C2460) * C50067) *
                C24098) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
                C50400 +
            (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 +
             C8338 * C50067) *
                C50401 +
            (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
             (C344 - C345) * C50067) *
                C24098) *
               C50125 * C997 +
           ((C618 * C49175 + C619 * C50336 + C620 * C49168 + C621 * C50067) *
                C50400 +
            (C2455 * C49175 + C2456 * C50336 + (C343 - C342) * C49168 +
             (C345 - C344) * C50067) *
                C50401 +
            ((C2458 - C2457) * C49175 + (C2460 - C2459) * C50336 +
             (C117 * C1076 - C50222 * C1083) * C49168 +
             (C117 * C1084 - C50222 * C1088) * C50067) *
                C24098) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C49175 +
            (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
            (C153 - C154) * C50067) *
               C50400 +
           ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
            C2431 * C49168 + C2432 * C50067) *
               C50401 +
           C24260 * C24098) *
              C50125 * C1068 +
          (((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
            C2439 * C49168 + C2440 * C50067) *
               C50400 +
           ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
            C2441 * C49168 + C2442 * C50067) *
               C50401 +
           C25144 * C24098) *
              C50125 * C1069 +
          (C24260 * C50400 +
           (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
            C2468 * C50067) *
               C50401 +
           ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
            (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
               C24098) *
              C50125 * C1070 +
          (C25144 * C50400 +
           (C20239 * C49175 + C20240 * C50336 + (C2452 - C2451) * C49168 +
            (C2454 - C2453) * C50067) *
               C50401 +
           ((C20242 - C20241) * C49175 + (C20244 - C20243) * C50336 +
            (C117 * C3421 - C50222 * C3424) * C49168 +
            (C117 * C3425 - C50222 * C3427) * C50067) *
               C24098) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C49175 +
              (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
              (C153 - C154) * C50067) *
                 C50400 +
             ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
              C2431 * C49168 + C2432 * C50067) *
                 C50401 +
             C24260 * C24098) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C49175 +
              (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
              (C489 - C490) * C50067) *
                 C50400 +
             ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
              C3161 * C49168 + C3162 * C50067) *
                 C50401 +
             C25783 * C24098) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
              C2439 * C49168 + C2440 * C50067) *
                 C50400 +
             ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
              C2441 * C49168 + C2442 * C50067) *
                 C50401 +
             C25144 * C24098) *
                C1648 +
            (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
              C3169 * C49168 + C3170 * C50067) *
                 C50400 +
             ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
              C3171 * C49168 + C3172 * C50067) *
                 C50401 +
             ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
              (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                 C24098) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
              (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                 C50400 +
             (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                 C50401 +
             C24261 * C24098) *
                C1648 +
            (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
              (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                 C50400 +
             (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
              C8682 * C50067) *
                 C50401 +
             (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
              (C2949 - C2950) * C50067) *
                 C24098) *
                C50189) *
               C50351 +
           (((C2431 * C49175 + C2432 * C50336 + C2797 * C49168 +
              C2798 * C50067) *
                 C50400 +
             (C2437 * C49175 + C2438 * C50336 + C2799 * C49168 +
              C2800 * C50067) *
                 C50401 +
             (C2467 * C49175 + C2468 * C50336 + (C2457 - C2458) * C49168 +
              (C2459 - C2460) * C50067) *
                 C24098) *
                C1648 +
            ((C3161 * C49175 + C3162 * C50336 + C8485 * C49168 +
              C8486 * C50067) *
                 C50400 +
             (C3167 * C49175 + C3168 * C50336 + (C2948 - C2947) * C49168 +
              (C2950 - C2949) * C50067) *
                 C50401 +
             ((C3174 - C3173) * C49175 + (C3176 - C3175) * C50336 +
              (C117 * C3146 - C50222 * C3151) * C49168 +
              (C117 * C3152 - C50222 * C3155) * C50067) *
                 C24098) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50222 * C129 - C117 * C122) * C49175 +
                     (C50222 * C143 - C117 * C130) * C50336 +
                     (C151 - C152) * C49168 + (C153 - C154) * C50067) *
                        C50400 +
                    ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
                     C2431 * C49168 + C2432 * C50067) *
                        C50401 +
                    C24260 * C24098) *
                       C50398 +
                   (((C117 * C446 - C50222 * C456) * C49175 +
                     (C117 * C457 - C50222 * C476) * C50336 +
                     (C487 - C488) * C49168 + (C489 - C490) * C50067) *
                        C50400 +
                    ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
                     C3161 * C49168 + C3162 * C50067) *
                        C50401 +
                    C25783 * C24098) *
                       C50399 +
                   (((C50222 * C464 - C117 * C450) * C49175 +
                     (C50222 * C480 - C117 * C465) * C50336 +
                     (C499 - C500) * C49168 + (C501 - C502) * C50067) *
                        C50400 +
                    ((C3596 - C3597) * C49175 + (C3598 - C3599) * C50336 +
                     (C2643 - C2644) * C49168 + (C2645 - C2646) * C50067) *
                        C50401 +
                    ((C3600 - C3601) * C49175 + (C3602 - C3603) * C50336 +
                     (C2647 - C2648) * C49168 + (C2649 - C2650) * C50067) *
                        C24098) *
                       C2064) *
                      C50351 +
                  ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
                     C2439 * C49168 + C2440 * C50067) *
                        C50400 +
                    ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
                     C2441 * C49168 + C2442 * C50067) *
                        C50401 +
                    C25144 * C24098) *
                       C50398 +
                   (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
                     C3169 * C49168 + C3170 * C50067) *
                        C50400 +
                    ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
                     C3171 * C49168 + C3172 * C50067) *
                        C50401 +
                    ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
                     (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                        C24098) *
                       C50399 +
                   (((C3597 - C3596) * C49175 + (C3599 - C3598) * C50336 +
                     (C2644 - C2643) * C49168 + (C2646 - C2645) * C50067) *
                        C50400 +
                    ((C3601 - C3600) * C49175 + (C3603 - C3602) * C50336 +
                     (C2648 - C2647) * C49168 + (C2650 - C2649) * C50067) *
                        C50401 +
                    ((C20352 - C20351) * C49175 + (C20354 - C20353) * C50336 +
                     (C117 * C3588 - C50222 * C3591) * C49168 +
                     (C117 * C3592 - C50222 * C3594) * C50067) *
                        C24098) *
                       C2064) *
                      C50161) *
                 C50090) /
                (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            C25783 * C24098) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            C25144 * C24098) *
               C1648 +
           (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
             C3169 * C49168 + C3170 * C50067) *
                C50400 +
            ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
             C3171 * C49168 + C3172 * C50067) *
                C50401 +
            ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
             (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                C24098) *
               C50189) *
              C277 +
          ((C24260 * C50400 +
            (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
             C2468 * C50067) *
                C50401 +
            ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
             (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
                C24098) *
               C1648 +
           (C25783 * C50400 +
            (C20687 * C49175 + C20688 * C50336 + (C3174 - C3173) * C49168 +
             (C3176 - C3175) * C50067) *
                C50401 +
            ((C20690 - C20689) * C49175 + (C20692 - C20691) * C50336 +
             (C117 * C4090 - C50222 * C4093) * C49168 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C24098) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            C25783 * C24098) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C1648 +
           (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
             (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                C50400 +
            (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
             C8682 * C50067) *
                C50401 +
            (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
             (C2949 - C2950) * C50067) *
                C24098) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
                C50400 +
            (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 +
             C8338 * C50067) *
                C50401 +
            (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
             (C344 - C345) * C50067) *
                C24098) *
               C1648 +
           ((C730 * C49175 + C731 * C50336 + C732 * C49168 + C733 * C50067) *
                C50400 +
            (C8485 * C49175 + C8486 * C50336 + (C897 - C896) * C49168 +
             (C899 - C898) * C50067) *
                C50401 +
            ((C2948 - C2947) * C49175 + (C2950 - C2949) * C50336 +
             (C117 * C1537 - C50222 * C1544) * C49168 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C24098) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C49175 +
            (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
            (C153 - C154) * C50067) *
               C50400 +
           ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
            C2431 * C49168 + C2432 * C50067) *
               C50401 +
           C24260 * C24098) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C49175 +
            (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
            (C489 - C490) * C50067) *
               C50400 +
           ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
            C3161 * C49168 + C3162 * C50067) *
               C50401 +
           C25783 * C24098) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C49175 +
            (C50222 * C480 - C117 * C465) * C50336 + (C499 - C500) * C49168 +
            (C501 - C502) * C50067) *
               C50400 +
           ((C3596 - C3597) * C49175 + (C3598 - C3599) * C50336 +
            (C2643 - C2644) * C49168 + (C2645 - C2646) * C50067) *
               C50401 +
           ((C3600 - C3601) * C49175 + (C3602 - C3603) * C50336 +
            (C2647 - C2648) * C49168 + (C2649 - C2650) * C50067) *
               C24098) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C49175 +
            (C117 * C1823 - C50222 * C1830) * C50336 +
            (C117 * C1819 - C50222 * C1824) * C49168 +
            (C117 * C1825 - C50222 * C1831) * C50067) *
               C50400 +
           ((C117 * C4500 - C50222 * C4504) * C49175 +
            (C117 * C4505 - C50222 * C4512) * C50336 +
            (C117 * C4501 - C50222 * C4506) * C49168 +
            (C117 * C4507 - C50222 * C4513) * C50067) *
               C50401 +
           ((C117 * C4502 - C50222 * C4508) * C49175 +
            (C117 * C4509 - C50222 * C4514) * C50336 +
            (C117 * C4503 - C50222 * C4510) * C49168 +
            (C117 * C4511 - C50222 * C4515) * C50067) *
               C24098) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            C25783 * C24098) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C49175 +
             (C50222 * C480 - C117 * C465) * C50336 + (C499 - C500) * C49168 +
             (C501 - C502) * C50067) *
                C50400 +
            ((C3596 - C3597) * C49175 + (C3598 - C3599) * C50336 +
             (C2643 - C2644) * C49168 + (C2645 - C2646) * C50067) *
                C50401 +
            ((C3600 - C3601) * C49175 + (C3602 - C3603) * C50336 +
             (C2647 - C2648) * C49168 + (C2649 - C2650) * C50067) *
                C24098) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C50398 +
           (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
             (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                C50400 +
            (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
             C8682 * C50067) *
                C50401 +
            (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
             (C2949 - C2950) * C50067) *
                C24098) *
               C50399 +
           (((C500 - C499) * C49175 + (C502 - C501) * C50336 +
             (C504 - C503) * C49168 + (C506 - C505) * C50067) *
                C50400 +
            ((C2644 - C2643) * C49175 + (C2646 - C2645) * C50336 +
             (C8188 - C8187) * C49168 + (C8190 - C8189) * C50067) *
                C50401 +
            ((C2648 - C2647) * C49175 + (C2650 - C2649) * C50336 +
             (C117 * C2628 - C50222 * C2633) * C49168 +
             (C117 * C2634 - C50222 * C2637) * C50067) *
                C24098) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            C25783 * C24098) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50336 +
             (C156 - C155) * C49168 + (C158 - C157) * C50067) *
                C50400 +
            (C2439 * C49175 + C2440 * C50336 + C618 * C49168 + C619 * C50067) *
                C50401 +
            C24261 * C24098) *
               C1648 +
           (((C488 - C487) * C49175 + (C490 - C489) * C50336 +
             (C492 - C491) * C49168 + (C494 - C493) * C50067) *
                C50400 +
            (C3169 * C49175 + C3170 * C50336 + C8681 * C49168 +
             C8682 * C50067) *
                C50401 +
            (C3171 * C49175 + C3172 * C50336 + (C2947 - C2948) * C49168 +
             (C2949 - C2950) * C50067) *
                C24098) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C49175 + C172 * C50336 + C173 * C49168 + C174 * C50067) *
                C50400 +
            (C2797 * C49175 + C2798 * C50336 + C8337 * C49168 +
             C8338 * C50067) *
                C50401 +
            (C2799 * C49175 + C2800 * C50336 + (C342 - C343) * C49168 +
             (C344 - C345) * C50067) *
                C24098) *
               C1648 +
           ((C730 * C49175 + C731 * C50336 + C732 * C49168 + C733 * C50067) *
                C50400 +
            (C8485 * C49175 + C8486 * C50336 + (C897 - C896) * C49168 +
             (C899 - C898) * C50067) *
                C50401 +
            ((C2948 - C2947) * C49175 + (C2950 - C2949) * C50336 +
             (C117 * C1537 - C50222 * C1544) * C49168 +
             (C117 * C1545 - C50222 * C1549) * C50067) *
                C24098) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C49175 +
             (C50222 * C143 - C117 * C130) * C50336 + (C151 - C152) * C49168 +
             (C153 - C154) * C50067) *
                C50400 +
            ((C2427 - C2428) * C49175 + (C2429 - C2430) * C50336 +
             C2431 * C49168 + C2432 * C50067) *
                C50401 +
            C24260 * C24098) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C49175 +
             (C117 * C457 - C50222 * C476) * C50336 + (C487 - C488) * C49168 +
             (C489 - C490) * C50067) *
                C50400 +
            ((C3157 - C3158) * C49175 + (C3159 - C3160) * C50336 +
             C3161 * C49168 + C3162 * C50067) *
                C50401 +
            C25783 * C24098) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C49175 + (C2430 - C2429) * C50336 +
             C2439 * C49168 + C2440 * C50067) *
                C50400 +
            ((C2434 - C2433) * C49175 + (C2436 - C2435) * C50336 +
             C2441 * C49168 + C2442 * C50067) *
                C50401 +
            C25144 * C24098) *
               C1648 +
           (((C3158 - C3157) * C49175 + (C3160 - C3159) * C50336 +
             C3169 * C49168 + C3170 * C50067) *
                C50400 +
            ((C3164 - C3163) * C49175 + (C3166 - C3165) * C50336 +
             C3171 * C49168 + C3172 * C50067) *
                C50401 +
            ((C4102 - C4103) * C49175 + (C4104 - C4105) * C50336 +
             (C3173 - C3174) * C49168 + (C3175 - C3176) * C50067) *
                C24098) *
               C50189) *
              C277 +
          ((C24260 * C50400 +
            (C19633 * C49175 + C19634 * C50336 + C2467 * C49168 +
             C2468 * C50067) *
                C50401 +
            ((C3433 - C3434) * C49175 + (C3435 - C3436) * C50336 +
             (C2451 - C2452) * C49168 + (C2453 - C2454) * C50067) *
                C24098) *
               C1648 +
           (C25783 * C50400 +
            (C20687 * C49175 + C20688 * C50336 + (C3174 - C3173) * C49168 +
             (C3176 - C3175) * C50067) *
                C50401 +
            ((C20690 - C20689) * C49175 + (C20692 - C20691) * C50336 +
             (C117 * C4090 - C50222 * C4093) * C49168 +
             (C117 * C4094 - C50222 * C4096) * C50067) *
                C24098) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50125 * C50351 +
           (((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            ((C14798 - C14797 + C14800 - C14799) * C19531 +
             (C14802 - C14801 + C14804 - C14803) * C50062) *
                C24098) *
               C50125 * C50161) *
              C50394 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50125 * C50351 +
           ((C13583 * C19531 + C13584 * C50062) * C50400 +
            (C13589 * C19531 + C13590 * C50062) * C50401 +
            ((C13575 - C13576 + C13577 - C13578) * C19531 +
             (C13579 - C13580 + C13581 - C13582) * C50062) *
                C24098) *
               C50125 * C50161) *
              C50395 +
          (((C10577 * C19531 + C10578 * C50062) * C50400 +
            (C13991 * C19531 + C13992 * C50062) * C50401 +
            ((C10751 - C10752 + C10753 - C10754) * C19531 +
             (C10755 - C10756 + C10757 - C10758) * C50062) *
                C24098) *
               C50125 * C50351 +
           ((C11095 * C19531 + C11096 * C50062) * C50400 +
            ((C10752 - C10751 + C10754 - C10753) * C19531 +
             (C10756 - C10755 + C10758 - C10757) * C50062) *
                C50401 +
            ((C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C24098) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C19531 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C50062) *
                 C50400 +
             ((C13543 - C13544 + C13545 - C13546) * C19531 +
              (C13547 - C13548 + C13549 - C13550) * C50062) *
                 C50401 +
             C30407 * C24098) *
                C50352 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C19531 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C50062) *
                 C50400 +
             ((C14445 - C14446 + C14447 - C14448) * C19531 +
              (C14449 - C14450 + C14451 - C14452) * C50062) *
                 C50401 +
             ((C15654 - C15653 + C15656 - C15655) * C19531 +
              (C15658 - C15657 + C15660 - C15659) * C50062) *
                 C24098) *
                C50189) *
               C50351 +
           ((((C13544 - C13543 + C13546 - C13545) * C19531 +
              (C13548 - C13547 + C13550 - C13549) * C50062) *
                 C50400 +
             ((C13559 - C13560 + C13561 - C13562) * C19531 +
              (C13563 - C13564 + C13565 - C13566) * C50062) *
                 C50401 +
             ((C14798 - C14797 + C14800 - C14799) * C19531 +
              (C14802 - C14801 + C14804 - C14803) * C50062) *
                 C24098) *
                C50352 +
            (((C14446 - C14445 + C14448 - C14447) * C19531 +
              (C14450 - C14449 + C14452 - C14451) * C50062) *
                 C50400 +
             ((C15653 - C15654 + C15655 - C15656) * C19531 +
              (C15657 - C15658 + C15659 - C15660) * C50062) *
                 C50401 +
             ((C50365 * C3147 - C10534 * C3144 + C50286 * C3589 -
               C10535 * C3587) *
                  C19531 +
              (C50365 * C3153 - C10534 * C3148 + C50286 * C3593 -
               C10535 * C3590) *
                  C50062) *
                 C24098) *
                C50189) *
               C50161) *
              C279 +
          (((((C10538 - C10537 + C10540 - C10539) * C19531 +
              (C10542 - C10541 + C10544 - C10543) * C50062) *
                 C50400 +
             (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
                C50352 +
            (((C10906 - C10905 + C10908 - C10907) * C19531 +
              (C10910 - C10909 + C10912 - C10911) * C50062) *
                 C50400 +
             (C14471 * C19531 + C14472 * C50062) * C50401 +
             ((C14461 - C14462 + C14463 - C14464) * C19531 +
              (C14465 - C14466 + C14467 - C14468) * C50062) *
                 C24098) *
                C50189) *
               C50351 +
           (((C13583 * C19531 + C13584 * C50062) * C50400 +
             (C13589 * C19531 + C13590 * C50062) * C50401 +
             ((C13575 - C13576 + C13577 - C13578) * C19531 +
              (C13579 - C13580 + C13581 - C13582) * C50062) *
                 C24098) *
                C50352 +
            ((C14469 * C19531 + C14470 * C50062) * C50400 +
             ((C14462 - C14461 + C14464 - C14463) * C19531 +
              (C14466 - C14465 + C14468 - C14467) * C50062) *
                 C50401 +
             ((C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C24098) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50125 * C276 +
           (((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            ((C14798 - C14797 + C14800 - C14799) * C19531 +
             (C14802 - C14801 + C14804 - C14803) * C50062) *
                C24098) *
               C50125 * C277 +
           (C30407 * C50400 +
            ((C14797 - C14798 + C14799 - C14800) * C19531 +
             (C14801 - C14802 + C14803 - C14804) * C50062) *
                C50401 +
            ((C50365 * C2417 - C10534 * C2414 + C50286 * C4091 -
              C10535 * C4089) *
                 C19531 +
             (C50365 * C2423 - C10534 * C2418 + C50286 * C4095 -
              C10535 * C4092) *
                 C50062) *
                C24098) *
               C50125 * C278) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50125 * C276 +
           ((C13583 * C19531 + C13584 * C50062) * C50400 +
            (C13589 * C19531 + C13590 * C50062) * C50401 +
            ((C13575 - C13576 + C13577 - C13578) * C19531 +
             (C13579 - C13580 + C13581 - C13582) * C50062) *
                C24098) *
               C50125 * C277 +
           (C30404 * C50400 +
            ((C13576 - C13575 + C13578 - C13577) * C19531 +
             (C13580 - C13579 + C13582 - C13581) * C50062) *
                C50401 +
            ((C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C24098) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C19531 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50062) *
               C50400 +
           ((C13543 - C13544 + C13545 - C13546) * C19531 +
            (C13547 - C13548 + C13549 - C13550) * C50062) *
               C50401 +
           ((C13560 - C13559 + C13562 - C13561) * C19531 +
            (C13564 - C13563 + C13566 - C13565) * C50062) *
               C24098) *
              C50125 * C50109 * C113 +
          (((C10538 - C10537 + C10540 - C10539) * C19531 +
            (C10542 - C10541 + C10544 - C10543) * C50062) *
               C50400 +
           (C13585 * C19531 + C13586 * C50062) * C50401 +
           (C13587 * C19531 + C13588 * C50062) * C24098) *
              C50125 * C50109 * C114 +
          ((C10577 * C19531 + C10578 * C50062) * C50400 +
           (C13991 * C19531 + C13992 * C50062) * C50401 +
           ((C10751 - C10752 + C10753 - C10754) * C19531 +
            (C10755 - C10756 + C10757 - C10758) * C50062) *
               C24098) *
              C50125 * C50109 * C115 +
          ((C10579 * C19531 + C10580 * C50062) * C50400 +
           ((C11088 - C11087 + C11090 - C11089) * C19531 +
            (C11092 - C11091 + C11094 - C11093) * C50062) *
               C50401 +
           ((C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                C19531 +
            (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                C50062) *
               C24098) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C443 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            ((C15654 - C15653 + C15656 - C15655) * C19531 +
             (C15658 - C15657 + C15660 - C15659) * C50062) *
                C24098) *
               C444 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C19531 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50062) *
                C50400 +
            ((C14999 - C15000 + C15001 - C15002) * C19531 +
             (C15003 - C15004 + C15005 - C15006) * C50062) *
                C50401 +
            ((C50365 * C2629 - C10534 * C2626 + C50286 * C4508 -
              C10535 * C4502) *
                 C19531 +
             (C50365 * C2635 - C10534 * C2630 + C50286 * C4514 -
              C10535 * C4509) *
                 C50062) *
                C24098) *
               C445) *
              C50109 * C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C443 +
           (((C10906 - C10905 + C10908 - C10907) * C19531 +
             (C10910 - C10909 + C10912 - C10911) * C50062) *
                C50400 +
            (C14471 * C19531 + C14472 * C50062) * C50401 +
            ((C14461 - C14462 + C14463 - C14464) * C19531 +
             (C14465 - C14466 + C14467 - C14468) * C50062) *
                C24098) *
               C444 +
           (((C10922 - C10921 + C10924 - C10923) * C19531 +
             (C10926 - C10925 + C10928 - C10927) * C50062) *
                C50400 +
            ((C13786 - C13785 + C13788 - C13787) * C19531 +
             (C13790 - C13789 + C13792 - C13791) * C50062) *
                C50401 +
            ((C10534 * C2627 - C50365 * C2631 + C10535 * C4503 -
              C50286 * C4510) *
                 C19531 +
             (C10534 * C2632 - C50365 * C2636 + C10535 * C4511 -
              C50286 * C4515) *
                 C50062) *
                C24098) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50352 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            ((C15654 - C15653 + C15656 - C15655) * C19531 +
             (C15658 - C15657 + C15660 - C15659) * C50062) *
                C24098) *
               C50189) *
              C50109 * C50394 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50352 +
           (((C10906 - C10905 + C10908 - C10907) * C19531 +
             (C10910 - C10909 + C10912 - C10911) * C50062) *
                C50400 +
            (C14471 * C19531 + C14472 * C50062) * C50401 +
            ((C14461 - C14462 + C14463 - C14464) * C19531 +
             (C14465 - C14466 + C14467 - C14468) * C50062) *
                C24098) *
               C50189) *
              C50109 * C50395 +
          (((C10577 * C19531 + C10578 * C50062) * C50400 +
            (C13991 * C19531 + C13992 * C50062) * C50401 +
            ((C10751 - C10752 + C10753 - C10754) * C19531 +
             (C10755 - C10756 + C10757 - C10758) * C50062) *
                C24098) *
               C50352 +
           ((C11255 * C19531 + C11256 * C50062) * C50400 +
            ((C11460 - C11459 + C11462 - C11461) * C19531 +
             (C11464 - C11463 + C11466 - C11465) * C50062) *
                C50401 +
            ((C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C24098) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C19531 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50062) *
               C50400 +
           ((C13543 - C13544 + C13545 - C13546) * C19531 +
            (C13547 - C13548 + C13549 - C13550) * C50062) *
               C50401 +
           ((C13560 - C13559 + C13562 - C13561) * C19531 +
            (C13564 - C13563 + C13566 - C13565) * C50062) *
               C24098) *
              C50125 * C50109 * C113 +
          (((C10538 - C10537 + C10540 - C10539) * C19531 +
            (C10542 - C10541 + C10544 - C10543) * C50062) *
               C50400 +
           (C13585 * C19531 + C13586 * C50062) * C50401 +
           (C13587 * C19531 + C13588 * C50062) * C24098) *
              C50125 * C50109 * C114 +
          ((C10577 * C19531 + C10578 * C50062) * C50400 +
           (C13991 * C19531 + C13992 * C50062) * C50401 +
           ((C10751 - C10752 + C10753 - C10754) * C19531 +
            (C10755 - C10756 + C10757 - C10758) * C50062) *
               C24098) *
              C50125 * C50109 * C115 +
          ((C10579 * C19531 + C10580 * C50062) * C50400 +
           ((C11088 - C11087 + C11090 - C11089) * C19531 +
            (C11092 - C11091 + C11094 - C11093) * C50062) *
               C50401 +
           ((C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                C19531 +
            (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                C50062) *
               C24098) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50125 * C276 +
           (((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            ((C14798 - C14797 + C14800 - C14799) * C19531 +
             (C14802 - C14801 + C14804 - C14803) * C50062) *
                C24098) *
               C50125 * C277 +
           (C30407 * C50400 +
            ((C14797 - C14798 + C14799 - C14800) * C19531 +
             (C14801 - C14802 + C14803 - C14804) * C50062) *
                C50401 +
            ((C50365 * C2417 - C10534 * C2414 + C50286 * C4091 -
              C10535 * C4089) *
                 C19531 +
             (C50365 * C2423 - C10534 * C2418 + C50286 * C4095 -
              C10535 * C4092) *
                 C50062) *
                C24098) *
               C50125 * C278) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50125 * C276 +
           ((C13583 * C19531 + C13584 * C50062) * C50400 +
            (C13589 * C19531 + C13590 * C50062) * C50401 +
            ((C13575 - C13576 + C13577 - C13578) * C19531 +
             (C13579 - C13580 + C13581 - C13582) * C50062) *
                C24098) *
               C50125 * C277 +
           (C30404 * C50400 +
            ((C13576 - C13575 + C13578 - C13577) * C19531 +
             (C13580 - C13579 + C13582 - C13581) * C50062) *
                C50401 +
            ((C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C24098) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50125 * C50396 +
           (((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            C31300 * C24098) *
               C50125 * C50397 +
           (C30407 * C50400 +
            ((C14797 - C14798 + C14799 - C14800) * C19531 +
             (C14801 - C14802 + C14803 - C14804) * C50062) *
                C50401 +
            ((C31288 - C31289 + C31290 - C31291) * C19531 +
             (C31292 - C31293 + C31294 - C31295) * C50062) *
                C24098) *
               C50125 * C1303) *
              C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50125 * C50396 +
           ((C13583 * C19531 + C13584 * C50062) * C50400 +
            (C13589 * C19531 + C13590 * C50062) * C50401 +
            ((C13575 - C13576 + C13577 - C13578) * C19531 +
             (C13579 - C13580 + C13581 - C13582) * C50062) *
                C24098) *
               C50125 * C50397 +
           (C30404 * C50400 +
            ((C13576 - C13575 + C13578 - C13577) * C19531 +
             (C13580 - C13579 + C13582 - C13581) * C50062) *
                C50401 +
            ((C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C24098) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50352 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50189) *
              C50396 +
          ((((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            C31300 * C24098) *
               C50352 +
           (((C14446 - C14445 + C14448 - C14447) * C19531 +
             (C14450 - C14449 + C14452 - C14451) * C50062) *
                C50400 +
            ((C15653 - C15654 + C15655 - C15656) * C19531 +
             (C15657 - C15658 + C15659 - C15660) * C50062) *
                C50401 +
            ((C31945 - C31946 + C31947 - C31948) * C19531 +
             (C31949 - C31950 + C31951 - C31952) * C50062) *
                C24098) *
               C50189) *
              C50397 +
          ((C30407 * C50400 +
            ((C14797 - C14798 + C14799 - C14800) * C19531 +
             (C14801 - C14802 + C14803 - C14804) * C50062) *
                C50401 +
            ((C31288 - C31289 + C31290 - C31291) * C19531 +
             (C31292 - C31293 + C31294 - C31295) * C50062) *
                C24098) *
               C50352 +
           (C31957 * C50400 +
            ((C31946 - C31945 + C31948 - C31947) * C19531 +
             (C31950 - C31949 + C31952 - C31951) * C50062) *
                C50401 +
            ((C10534 * C4089 - C50365 * C4091 + C10535 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C10534 * C4092 - C50365 * C4095 + C10535 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C24098) *
               C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C19531 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50062) *
               C50400 +
           ((C13543 - C13544 + C13545 - C13546) * C19531 +
            (C13547 - C13548 + C13549 - C13550) * C50062) *
               C50401 +
           C30407 * C24098) *
              C50125 * C1068 +
          (((C13544 - C13543 + C13546 - C13545) * C19531 +
            (C13548 - C13547 + C13550 - C13549) * C50062) *
               C50400 +
           ((C13559 - C13560 + C13561 - C13562) * C19531 +
            (C13563 - C13564 + C13565 - C13566) * C50062) *
               C50401 +
           C31300 * C24098) *
              C50125 * C1069 +
          (C30407 * C50400 +
           ((C14797 - C14798 + C14799 - C14800) * C19531 +
            (C14801 - C14802 + C14803 - C14804) * C50062) *
               C50401 +
           ((C31288 - C31289 + C31290 - C31291) * C19531 +
            (C31292 - C31293 + C31294 - C31295) * C50062) *
               C24098) *
              C50125 * C1070 +
          (C31300 * C50400 +
           ((C31289 - C31288 + C31291 - C31290) * C19531 +
            (C31293 - C31292 + C31295 - C31294) * C50062) *
               C50401 +
           ((C10534 * C3420 - C50365 * C3422 + C10535 * C20680 -
             C50286 * C20681) *
                C19531 +
            (C10534 * C3423 - C50365 * C3426 + C10535 * C20682 -
             C50286 * C20683) *
                C50062) *
               C24098) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50125 * C997 +
           (((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            ((C14798 - C14797 + C14800 - C14799) * C19531 +
             (C14802 - C14801 + C14804 - C14803) * C50062) *
                C24098) *
               C50125 * C50161) *
              C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50125 * C997 +
           ((C13583 * C19531 + C13584 * C50062) * C50400 +
            (C13589 * C19531 + C13590 * C50062) * C50401 +
            ((C13575 - C13576 + C13577 - C13578) * C19531 +
             (C13579 - C13580 + C13581 - C13582) * C50062) *
                C24098) *
               C50125 * C50161) *
              C1000 +
          (((C10577 * C19531 + C10578 * C50062) * C50400 +
            (C13991 * C19531 + C13992 * C50062) * C50401 +
            ((C10751 - C10752 + C10753 - C10754) * C19531 +
             (C10755 - C10756 + C10757 - C10758) * C50062) *
                C24098) *
               C50125 * C997 +
           ((C11095 * C19531 + C11096 * C50062) * C50400 +
            ((C10752 - C10751 + C10754 - C10753) * C19531 +
             (C10756 - C10755 + C10758 - C10757) * C50062) *
                C50401 +
            ((C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C24098) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C443 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            ((C15654 - C15653 + C15656 - C15655) * C19531 +
             (C15658 - C15657 + C15660 - C15659) * C50062) *
                C24098) *
               C444 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C19531 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50062) *
                C50400 +
            ((C14999 - C15000 + C15001 - C15002) * C19531 +
             (C15003 - C15004 + C15005 - C15006) * C50062) *
                C50401 +
            ((C31447 - C31448 + C31449 - C31450) * C19531 +
             (C31451 - C31452 + C31453 - C31454) * C50062) *
                C24098) *
               C445) *
              C997 +
          ((((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            C31300 * C24098) *
               C443 +
           (((C14446 - C14445 + C14448 - C14447) * C19531 +
             (C14450 - C14449 + C14452 - C14451) * C50062) *
                C50400 +
            ((C15653 - C15654 + C15655 - C15656) * C19531 +
             (C15657 - C15658 + C15659 - C15660) * C50062) *
                C50401 +
            ((C50365 * C3147 - C10534 * C3144 + C50286 * C3589 -
              C10535 * C3587) *
                 C19531 +
             (C50365 * C3153 - C10534 * C3148 + C50286 * C3593 -
              C10535 * C3590) *
                 C50062) *
                C24098) *
               C444 +
           (((C15000 - C14999 + C15002 - C15001) * C19531 +
             (C15004 - C15003 + C15006 - C15005) * C50062) *
                C50400 +
            ((C31448 - C31447 + C31450 - C31449) * C19531 +
             (C31452 - C31451 + C31454 - C31453) * C50062) *
                C50401 +
            ((C10534 * C3587 - C50365 * C3589 + C10535 * C20958 -
              C50286 * C20959) *
                 C19531 +
             (C10534 * C3590 - C50365 * C3593 + C10535 * C20960 -
              C50286 * C20961) *
                 C50062) *
                C24098) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C19531 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C50062) *
                 C50400 +
             ((C13543 - C13544 + C13545 - C13546) * C19531 +
              (C13547 - C13548 + C13549 - C13550) * C50062) *
                 C50401 +
             C30407 * C24098) *
                C50352 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C19531 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C50062) *
                 C50400 +
             ((C14445 - C14446 + C14447 - C14448) * C19531 +
              (C14449 - C14450 + C14451 - C14452) * C50062) *
                 C50401 +
             ((C15654 - C15653 + C15656 - C15655) * C19531 +
              (C15658 - C15657 + C15660 - C15659) * C50062) *
                 C24098) *
                C50189) *
               C997 +
           ((((C13544 - C13543 + C13546 - C13545) * C19531 +
              (C13548 - C13547 + C13550 - C13549) * C50062) *
                 C50400 +
             ((C13559 - C13560 + C13561 - C13562) * C19531 +
              (C13563 - C13564 + C13565 - C13566) * C50062) *
                 C50401 +
             C31300 * C24098) *
                C50352 +
            (((C14446 - C14445 + C14448 - C14447) * C19531 +
              (C14450 - C14449 + C14452 - C14451) * C50062) *
                 C50400 +
             ((C15653 - C15654 + C15655 - C15656) * C19531 +
              (C15657 - C15658 + C15659 - C15660) * C50062) *
                 C50401 +
             ((C50365 * C3147 - C10534 * C3144 + C50286 * C3589 -
               C10535 * C3587) *
                  C19531 +
              (C50365 * C3153 - C10534 * C3148 + C50286 * C3593 -
               C10535 * C3590) *
                  C50062) *
                 C24098) *
                C50189) *
               C50161) *
              C50343 +
          (((((C10538 - C10537 + C10540 - C10539) * C19531 +
              (C10542 - C10541 + C10544 - C10543) * C50062) *
                 C50400 +
             (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
                C50352 +
            (((C10906 - C10905 + C10908 - C10907) * C19531 +
              (C10910 - C10909 + C10912 - C10911) * C50062) *
                 C50400 +
             (C14471 * C19531 + C14472 * C50062) * C50401 +
             ((C14461 - C14462 + C14463 - C14464) * C19531 +
              (C14465 - C14466 + C14467 - C14468) * C50062) *
                 C24098) *
                C50189) *
               C997 +
           (((C13583 * C19531 + C13584 * C50062) * C50400 +
             (C13589 * C19531 + C13590 * C50062) * C50401 +
             ((C13575 - C13576 + C13577 - C13578) * C19531 +
              (C13579 - C13580 + C13581 - C13582) * C50062) *
                 C24098) *
                C50352 +
            ((C14469 * C19531 + C14470 * C50062) * C50400 +
             ((C14462 - C14461 + C14464 - C14463) * C19531 +
              (C14466 - C14465 + C14468 - C14467) * C50062) *
                 C50401 +
             ((C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C24098) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50125 * C997 +
           (((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            ((C14798 - C14797 + C14800 - C14799) * C19531 +
             (C14802 - C14801 + C14804 - C14803) * C50062) *
                C24098) *
               C50125 * C50161) *
              C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50125 * C997 +
           ((C13583 * C19531 + C13584 * C50062) * C50400 +
            (C13589 * C19531 + C13590 * C50062) * C50401 +
            ((C13575 - C13576 + C13577 - C13578) * C19531 +
             (C13579 - C13580 + C13581 - C13582) * C50062) *
                C24098) *
               C50125 * C50161) *
              C1000 +
          (((C10577 * C19531 + C10578 * C50062) * C50400 +
            (C13991 * C19531 + C13992 * C50062) * C50401 +
            ((C10751 - C10752 + C10753 - C10754) * C19531 +
             (C10755 - C10756 + C10757 - C10758) * C50062) *
                C24098) *
               C50125 * C997 +
           ((C11095 * C19531 + C11096 * C50062) * C50400 +
            ((C10752 - C10751 + C10754 - C10753) * C19531 +
             (C10756 - C10755 + C10758 - C10757) * C50062) *
                C50401 +
            ((C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C24098) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C19531 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50062) *
               C50400 +
           ((C13543 - C13544 + C13545 - C13546) * C19531 +
            (C13547 - C13548 + C13549 - C13550) * C50062) *
               C50401 +
           C30407 * C24098) *
              C50125 * C1068 +
          (((C13544 - C13543 + C13546 - C13545) * C19531 +
            (C13548 - C13547 + C13550 - C13549) * C50062) *
               C50400 +
           ((C13559 - C13560 + C13561 - C13562) * C19531 +
            (C13563 - C13564 + C13565 - C13566) * C50062) *
               C50401 +
           C31300 * C24098) *
              C50125 * C1069 +
          (C30407 * C50400 +
           ((C14797 - C14798 + C14799 - C14800) * C19531 +
            (C14801 - C14802 + C14803 - C14804) * C50062) *
               C50401 +
           ((C31288 - C31289 + C31290 - C31291) * C19531 +
            (C31292 - C31293 + C31294 - C31295) * C50062) *
               C24098) *
              C50125 * C1070 +
          (C31300 * C50400 +
           ((C31289 - C31288 + C31291 - C31290) * C19531 +
            (C31293 - C31292 + C31295 - C31294) * C50062) *
               C50401 +
           ((C10534 * C3420 - C50365 * C3422 + C10535 * C20680 -
             C50286 * C20681) *
                C19531 +
            (C10534 * C3423 - C50365 * C3426 + C10535 * C20682 -
             C50286 * C20683) *
                C50062) *
               C24098) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C19531 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C50062) *
                 C50400 +
             ((C13543 - C13544 + C13545 - C13546) * C19531 +
              (C13547 - C13548 + C13549 - C13550) * C50062) *
                 C50401 +
             C30407 * C24098) *
                C1648 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C19531 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C50062) *
                 C50400 +
             ((C14445 - C14446 + C14447 - C14448) * C19531 +
              (C14449 - C14450 + C14451 - C14452) * C50062) *
                 C50401 +
             C31957 * C24098) *
                C50189) *
               C50351 +
           ((((C13544 - C13543 + C13546 - C13545) * C19531 +
              (C13548 - C13547 + C13550 - C13549) * C50062) *
                 C50400 +
             ((C13559 - C13560 + C13561 - C13562) * C19531 +
              (C13563 - C13564 + C13565 - C13566) * C50062) *
                 C50401 +
             C31300 * C24098) *
                C1648 +
            (((C14446 - C14445 + C14448 - C14447) * C19531 +
              (C14450 - C14449 + C14452 - C14451) * C50062) *
                 C50400 +
             ((C15653 - C15654 + C15655 - C15656) * C19531 +
              (C15657 - C15658 + C15659 - C15660) * C50062) *
                 C50401 +
             ((C31945 - C31946 + C31947 - C31948) * C19531 +
              (C31949 - C31950 + C31951 - C31952) * C50062) *
                 C24098) *
                C50189) *
               C50161) *
              C50343 +
          (((((C10538 - C10537 + C10540 - C10539) * C19531 +
              (C10542 - C10541 + C10544 - C10543) * C50062) *
                 C50400 +
             (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
                C1648 +
            (((C10906 - C10905 + C10908 - C10907) * C19531 +
              (C10910 - C10909 + C10912 - C10911) * C50062) *
                 C50400 +
             (C14471 * C19531 + C14472 * C50062) * C50401 +
             ((C14461 - C14462 + C14463 - C14464) * C19531 +
              (C14465 - C14466 + C14467 - C14468) * C50062) *
                 C24098) *
                C50189) *
               C50351 +
           (((C13583 * C19531 + C13584 * C50062) * C50400 +
             (C13589 * C19531 + C13590 * C50062) * C50401 +
             ((C13575 - C13576 + C13577 - C13578) * C19531 +
              (C13579 - C13580 + C13581 - C13582) * C50062) *
                 C24098) *
                C1648 +
            ((C14469 * C19531 + C14470 * C50062) * C50400 +
             ((C14462 - C14461 + C14464 - C14463) * C19531 +
              (C14466 - C14465 + C14468 - C14467) * C50062) *
                 C50401 +
             ((C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C24098) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50398 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50399 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C19531 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50062) *
                C50400 +
            ((C14999 - C15000 + C15001 - C15002) * C19531 +
             (C15003 - C15004 + C15005 - C15006) * C50062) *
                C50401 +
            ((C31447 - C31448 + C31449 - C31450) * C19531 +
             (C31451 - C31452 + C31453 - C31454) * C50062) *
                C24098) *
               C2064) *
              C50351 +
          ((((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            C31300 * C24098) *
               C50398 +
           (((C14446 - C14445 + C14448 - C14447) * C19531 +
             (C14450 - C14449 + C14452 - C14451) * C50062) *
                C50400 +
            ((C15653 - C15654 + C15655 - C15656) * C19531 +
             (C15657 - C15658 + C15659 - C15660) * C50062) *
                C50401 +
            ((C31945 - C31946 + C31947 - C31948) * C19531 +
             (C31949 - C31950 + C31951 - C31952) * C50062) *
                C24098) *
               C50399 +
           (((C15000 - C14999 + C15002 - C15001) * C19531 +
             (C15004 - C15003 + C15006 - C15005) * C50062) *
                C50400 +
            ((C31448 - C31447 + C31450 - C31449) * C19531 +
             (C31452 - C31451 + C31454 - C31453) * C50062) *
                C50401 +
            ((C10534 * C3587 - C50365 * C3589 + C10535 * C20958 -
              C50286 * C20959) *
                 C19531 +
             (C10534 * C3590 - C50365 * C3593 + C10535 * C20960 -
              C50286 * C20961) *
                 C50062) *
                C24098) *
               C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50189) *
              C276 +
          ((((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            C31300 * C24098) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C19531 +
             (C14450 - C14449 + C14452 - C14451) * C50062) *
                C50400 +
            ((C15653 - C15654 + C15655 - C15656) * C19531 +
             (C15657 - C15658 + C15659 - C15660) * C50062) *
                C50401 +
            ((C31945 - C31946 + C31947 - C31948) * C19531 +
             (C31949 - C31950 + C31951 - C31952) * C50062) *
                C24098) *
               C50189) *
              C277 +
          ((C30407 * C50400 +
            ((C14797 - C14798 + C14799 - C14800) * C19531 +
             (C14801 - C14802 + C14803 - C14804) * C50062) *
                C50401 +
            ((C31288 - C31289 + C31290 - C31291) * C19531 +
             (C31292 - C31293 + C31294 - C31295) * C50062) *
                C24098) *
               C1648 +
           (C31957 * C50400 +
            ((C31946 - C31945 + C31948 - C31947) * C19531 +
             (C31950 - C31949 + C31952 - C31951) * C50062) *
                C50401 +
            ((C10534 * C4089 - C50365 * C4091 + C10535 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C10534 * C4092 - C50365 * C4095 + C10535 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C24098) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50189) *
              C50109 * C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C1648 +
           (((C10906 - C10905 + C10908 - C10907) * C19531 +
             (C10910 - C10909 + C10912 - C10911) * C50062) *
                C50400 +
            (C14471 * C19531 + C14472 * C50062) * C50401 +
            ((C14461 - C14462 + C14463 - C14464) * C19531 +
             (C14465 - C14466 + C14467 - C14468) * C50062) *
                C24098) *
               C50189) *
              C50109 * C1000 +
          (((C10577 * C19531 + C10578 * C50062) * C50400 +
            (C13991 * C19531 + C13992 * C50062) * C50401 +
            ((C10751 - C10752 + C10753 - C10754) * C19531 +
             (C10755 - C10756 + C10757 - C10758) * C50062) *
                C24098) *
               C1648 +
           ((C11255 * C19531 + C11256 * C50062) * C50400 +
            ((C11460 - C11459 + C11462 - C11461) * C19531 +
             (C11464 - C11463 + C11466 - C11465) * C50062) *
                C50401 +
            ((C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C24098) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C19531 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50062) *
               C50400 +
           ((C13543 - C13544 + C13545 - C13546) * C19531 +
            (C13547 - C13548 + C13549 - C13550) * C50062) *
               C50401 +
           C30407 * C24098) *
              C1814 +
          (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C19531 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50062) *
               C50400 +
           ((C14445 - C14446 + C14447 - C14448) * C19531 +
            (C14449 - C14450 + C14451 - C14452) * C50062) *
               C50401 +
           C31957 * C24098) *
              C1815 +
          (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C19531 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C50062) *
               C50400 +
           ((C14999 - C15000 + C15001 - C15002) * C19531 +
            (C15003 - C15004 + C15005 - C15006) * C50062) *
               C50401 +
           ((C31447 - C31448 + C31449 - C31450) * C19531 +
            (C31451 - C31452 + C31453 - C31454) * C50062) *
               C24098) *
              C1816 +
          (((C10534 * C1818 - C50365 * C1822 + C10535 * C5458 -
             C50286 * C5461) *
                C19531 +
            (C10534 * C1823 - C50365 * C1830 + C10535 * C5462 -
             C50286 * C5467) *
                C50062) *
               C50400 +
           ((C10534 * C4500 - C50365 * C4504 + C10535 * C6410 -
             C50286 * C6412) *
                C19531 +
            (C10534 * C4505 - C50365 * C4512 + C10535 * C6413 -
             C50286 * C6416) *
                C50062) *
               C50401 +
           ((C10534 * C4502 - C50365 * C4508 + C10535 * C22602 -
             C50286 * C22603) *
                C19531 +
            (C10534 * C4509 - C50365 * C4514 + C10535 * C22604 -
             C50286 * C22605) *
                C50062) *
               C24098) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C50398 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50399 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C19531 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50062) *
                C50400 +
            ((C14999 - C15000 + C15001 - C15002) * C19531 +
             (C15003 - C15004 + C15005 - C15006) * C50062) *
                C50401 +
            ((C31447 - C31448 + C31449 - C31450) * C19531 +
             (C31451 - C31452 + C31453 - C31454) * C50062) *
                C24098) *
               C2064) *
              C50109 * C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C50398 +
           (((C10906 - C10905 + C10908 - C10907) * C19531 +
             (C10910 - C10909 + C10912 - C10911) * C50062) *
                C50400 +
            (C14471 * C19531 + C14472 * C50062) * C50401 +
            ((C14461 - C14462 + C14463 - C14464) * C19531 +
             (C14465 - C14466 + C14467 - C14468) * C50062) *
                C24098) *
               C50399 +
           (((C10922 - C10921 + C10924 - C10923) * C19531 +
             (C10926 - C10925 + C10928 - C10927) * C50062) *
                C50400 +
            ((C13786 - C13785 + C13788 - C13787) * C19531 +
             (C13790 - C13789 + C13792 - C13791) * C50062) *
                C50401 +
            ((C10534 * C2627 - C50365 * C2631 + C10535 * C4503 -
              C50286 * C4510) *
                 C19531 +
             (C10534 * C2632 - C50365 * C2636 + C10535 * C4511 -
              C50286 * C4515) *
                 C50062) *
                C24098) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50189) *
              C50109 * C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C19531 +
             (C10542 - C10541 + C10544 - C10543) * C50062) *
                C50400 +
            (C13585 * C19531 + C13586 * C50062) * C50401 + C30404 * C24098) *
               C1648 +
           (((C10906 - C10905 + C10908 - C10907) * C19531 +
             (C10910 - C10909 + C10912 - C10911) * C50062) *
                C50400 +
            (C14471 * C19531 + C14472 * C50062) * C50401 +
            ((C14461 - C14462 + C14463 - C14464) * C19531 +
             (C14465 - C14466 + C14467 - C14468) * C50062) *
                C24098) *
               C50189) *
              C50109 * C1000 +
          (((C10577 * C19531 + C10578 * C50062) * C50400 +
            (C13991 * C19531 + C13992 * C50062) * C50401 +
            ((C10751 - C10752 + C10753 - C10754) * C19531 +
             (C10755 - C10756 + C10757 - C10758) * C50062) *
                C24098) *
               C1648 +
           ((C11255 * C19531 + C11256 * C50062) * C50400 +
            ((C11460 - C11459 + C11462 - C11461) * C19531 +
             (C11464 - C11463 + C11466 - C11465) * C50062) *
                C50401 +
            ((C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C24098) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C19531 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50062) *
                C50400 +
            ((C13543 - C13544 + C13545 - C13546) * C19531 +
             (C13547 - C13548 + C13549 - C13550) * C50062) *
                C50401 +
            C30407 * C24098) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C19531 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50062) *
                C50400 +
            ((C14445 - C14446 + C14447 - C14448) * C19531 +
             (C14449 - C14450 + C14451 - C14452) * C50062) *
                C50401 +
            C31957 * C24098) *
               C50189) *
              C276 +
          ((((C13544 - C13543 + C13546 - C13545) * C19531 +
             (C13548 - C13547 + C13550 - C13549) * C50062) *
                C50400 +
            ((C13559 - C13560 + C13561 - C13562) * C19531 +
             (C13563 - C13564 + C13565 - C13566) * C50062) *
                C50401 +
            C31300 * C24098) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C19531 +
             (C14450 - C14449 + C14452 - C14451) * C50062) *
                C50400 +
            ((C15653 - C15654 + C15655 - C15656) * C19531 +
             (C15657 - C15658 + C15659 - C15660) * C50062) *
                C50401 +
            ((C31945 - C31946 + C31947 - C31948) * C19531 +
             (C31949 - C31950 + C31951 - C31952) * C50062) *
                C24098) *
               C50189) *
              C277 +
          ((C30407 * C50400 +
            ((C14797 - C14798 + C14799 - C14800) * C19531 +
             (C14801 - C14802 + C14803 - C14804) * C50062) *
                C50401 +
            ((C31288 - C31289 + C31290 - C31291) * C19531 +
             (C31292 - C31293 + C31294 - C31295) * C50062) *
                C24098) *
               C1648 +
           (C31957 * C50400 +
            ((C31946 - C31945 + C31948 - C31947) * C19531 +
             (C31950 - C31949 + C31952 - C31951) * C50062) *
                C50401 +
            ((C10534 * C4089 - C50365 * C4091 + C10535 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C10534 * C4092 - C50365 * C4095 + C10535 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C24098) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C50351 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C50351 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50125 * C50351 +
           ((C618 * C19531 + C619 * C50062) * C19527 +
            (C2455 * C19531 + C2456 * C50062) * C19528 +
            ((C2458 - C2457) * C19531 + (C2460 - C2459) * C50062) * C19529 +
            ((C117 * C2416 - C50222 * C2421) * C19531 +
             (C117 * C2422 - C50222 * C2425) * C50062) *
                C19530) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C50351 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C50351 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50125 * C50351 +
           ((C618 * C16927 + C619 * C16922 + C620 * C16928 + C621 * C16923 +
             (C623 - C622) * C16929 + (C625 - C624) * C16924) *
                C16925 +
            (C2455 * C16927 + C2456 * C16922 + (C343 - C342) * C16928 +
             (C345 - C344) * C16923 + (C117 * C290 - C50222 * C309) * C16929 +
             (C117 * C310 - C50222 * C320) * C16924) *
                C50260) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50125 * C50351 +
           (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50125 * C50351 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                C16925 +
            ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
             (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
             (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
                C16925 +
            ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
                C50260) *
               C50125 * C50351 +
           (((C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C19531 +
             (C5648 - C5647 + C5650 - C5649 + C5652 - C5651) * C50062) *
                C16925 +
            ((C5103 * C287 - C5100 * C303 + C5104 * C1536 - C5101 * C1542 +
              C5105 * C2628 - C5102 * C2633) *
                 C19531 +
             (C5103 * C304 - C5100 * C317 + C5104 * C1543 - C5101 * C1548 +
              C5105 * C2634 - C5102 * C2637) *
                 C50062) *
                C50260) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C19531 +
              (C50222 * C143 - C117 * C130) * C50062) *
                 C19527 +
             ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
             C19639 * C19529 + C19644 * C19530) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C19531 +
              (C117 * C457 - C50222 * C476) * C50062) *
                 C19527 +
             ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
             (C4098 * C19531 + C4099 * C50062) * C19529 +
             ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
             ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
             (C3429 * C19531 + C3430 * C50062) * C19529 +
             ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
                C50352 +
            (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
             ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
             ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
             ((C50222 * C4091 - C117 * C4089) * C19531 +
              (C50222 * C4095 - C117 * C4092) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
             (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
             C19643 * C19530) *
                C50352 +
            (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
             (C3169 * C19531 + C3170 * C50062) * C19528 +
             (C3171 * C19531 + C3172 * C50062) * C19529 +
             ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
                C50189) *
               C50351 +
           (((C2431 * C19531 + C2432 * C50062) * C19527 +
             (C2437 * C19531 + C2438 * C50062) * C19528 +
             (C2467 * C19531 + C2468 * C50062) * C19529 +
             ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
                C50352 +
            ((C3161 * C19531 + C3162 * C50062) * C19527 +
             (C3167 * C19531 + C3168 * C50062) * C19528 +
             ((C3174 - C3173) * C19531 + (C3176 - C3175) * C50062) * C19529 +
             ((C117 * C4090 - C50222 * C4093) * C19531 +
              (C117 * C4094 - C50222 * C4096) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C16927 +
              (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
              (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                 C16925 +
             ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
              C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
              C2798 * C16924) *
                 C50260) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C16927 +
              (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
              (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                 C16925 +
             ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
              C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
              C8486 * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
              C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                 C16925 +
             ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
              C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
              C2456 * C16924) *
                 C50260) *
                C50352 +
            (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
              C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
              C8682 * C16924) *
                 C16925 +
             ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
              C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
              (C2949 - C2950) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
              (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
              C176 * C16924) *
                 C16925 +
             (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
              C620 * C16929 + C621 * C16924) *
                 C50260) *
                C50352 +
            (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
              (C492 - C491) * C16928 + (C494 - C493) * C16923 +
              (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                 C16925 +
             (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
              C8682 * C16923 + (C896 - C897) * C16929 +
              (C898 - C899) * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           (((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
              C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                 C16925 +
             (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
              C2800 * C16923 + (C342 - C343) * C16929 +
              (C344 - C345) * C16924) *
                 C50260) *
                C50352 +
            ((C3161 * C16927 + C3162 * C16922 + C8485 * C16928 +
              C8486 * C16923 + (C897 - C896) * C16929 +
              (C899 - C898) * C16924) *
                 C16925 +
             (C3167 * C16927 + C3168 * C16922 + (C2948 - C2947) * C16928 +
              (C2950 - C2949) * C16923 +
              (C117 * C1537 - C50222 * C1544) * C16929 +
              (C117 * C1545 - C50222 * C1549) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
               C5102 * C464 - C5105 * C450) *
                  C19531 +
              (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
               C5102 * C480 - C5105 * C465) *
                  C50062) *
                 C16925 +
             ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
              (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                 C50260) *
                C50352 +
            (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
               C5105 * C1818 - C5102 * C1822) *
                  C19531 +
              (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
               C5105 * C1823 - C5102 * C1830) *
                  C50062) *
                 C16925 +
             ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
              (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
              (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                 C16925 +
             ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
              (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                 C50260) *
                C50352 +
            (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
              (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                 C16925 +
             ((C5100 * C1538 - C5103 * C1534 + C5101 * C2629 - C5104 * C2626 +
               C5102 * C4508 - C5105 * C4502) *
                  C19531 +
              (C5100 * C1546 - C5103 * C1539 + C5101 * C2635 - C5104 * C2630 +
               C5102 * C4514 - C5105 * C4509) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
              (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                 C16925 +
             ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
              (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                 C50260) *
                C50352 +
            (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
              (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                 C16925 +
             ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
              (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
              (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                 C16925 +
             ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
              (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                 C50260) *
                C50352 +
            (((C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C19531 +
              (C6016 - C6015 + C6018 - C6017 + C6020 - C6019) * C50062) *
                 C16925 +
             ((C5103 * C1535 - C5100 * C1540 + C5104 * C2627 - C5101 * C2631 +
               C5105 * C4503 - C5102 * C4510) *
                  C19531 +
              (C5103 * C1541 - C5100 * C1547 + C5104 * C2632 - C5101 * C2636 +
               C5105 * C4511 - C5102 * C4515) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50222 * C129 - C117 * C122) * C16927 +
                (C50222 * C143 - C117 * C130) * C16922 +
                (C151 - C152) * C16928 + (C153 - C154) * C16923 +
                C171 * C16929 + C172 * C16924) *
                   C16925 +
               ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
                C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
                C2798 * C16924) *
                   C50260) *
                  C50125 * C50109 * C113 +
              (((C152 - C151) * C16927 + (C154 - C153) * C16922 +
                (C156 - C155) * C16928 + (C158 - C157) * C16923 +
                C175 * C16929 + C176 * C16924) *
                   C16925 +
               (C2439 * C16927 + C2440 * C16922 + C618 * C16928 +
                C619 * C16923 + C620 * C16929 + C621 * C16924) *
                   C50260) *
                  C50125 * C50109 * C114 +
              ((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
                (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                   C16925 +
               (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 +
                C8338 * C16923 + (C622 - C623) * C16929 +
                (C624 - C625) * C16924) *
                   C50260) *
                  C50125 * C50109 * C115 +
              ((C175 * C16927 + C176 * C16922 + C177 * C16928 + C178 * C16923 +
                (C168 - C167) * C16929 + (C170 - C169) * C16924) *
                   C16925 +
               (C620 * C16927 + C621 * C16922 + (C623 - C622) * C16928 +
                (C625 - C624) * C16923 +
                (C117 * C613 - C50222 * C614) * C16929 +
                (C117 * C615 - C50222 * C616) * C16924) *
                   C50260) *
                  C50125 * C50109 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50222 * C129 - C117 * C122) * C16927 +
                 (C50222 * C143 - C117 * C130) * C16922 +
                 (C151 - C152) * C16928 + (C153 - C154) * C16923 +
                 C171 * C16929 + C172 * C16924) *
                    C16925 +
                ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
                 C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
                 C2798 * C16924) *
                    C50260) *
                   C50125 * C276 +
               (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
                 C2439 * C16928 + C2440 * C16923 + C618 * C16929 +
                 C619 * C16924) *
                    C16925 +
                ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
                 C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
                 C2456 * C16924) *
                    C50260) *
                   C50125 * C277 +
               ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 +
                 C2438 * C16923 + C2799 * C16929 + C2800 * C16924) *
                    C16925 +
                ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
                 C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
                 (C2459 - C2460) * C16924) *
                    C50260) *
                   C50125 * C278) *
                  C279 +
              ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
                 (C156 - C155) * C16928 + (C158 - C157) * C16923 +
                 C175 * C16929 + C176 * C16924) *
                    C16925 +
                (C2439 * C16927 + C2440 * C16922 + C618 * C16928 +
                 C619 * C16923 + C620 * C16929 + C621 * C16924) *
                    C50260) *
                   C50125 * C276 +
               ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
                 C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                    C16925 +
                (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
                 C2800 * C16923 + (C342 - C343) * C16929 +
                 (C344 - C345) * C16924) *
                    C50260) *
                   C50125 * C277 +
               ((C2441 * C16927 + C2442 * C16922 + C2455 * C16928 +
                 C2456 * C16923 + (C343 - C342) * C16929 +
                 (C345 - C344) * C16924) *
                    C16925 +
                (C2465 * C16927 + C2466 * C16922 + (C2458 - C2457) * C16928 +
                 (C2460 - C2459) * C16923 +
                 (C117 * C1076 - C50222 * C1083) * C16929 +
                 (C117 * C1084 - C50222 * C1088) * C16924) *
                    C50260) *
                   C50125 * C278) *
                  C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C443 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C444 +
           (((C500 - C499) * C16927 + (C502 - C501) * C16922 +
             (C504 - C503) * C16928 + (C506 - C505) * C16923 +
             (C508 - C507) * C16929 + (C510 - C509) * C16924) *
                C16925 +
            ((C2644 - C2643) * C16927 + (C2646 - C2645) * C16922 +
             (C8188 - C8187) * C16928 + (C8190 - C8189) * C16923 +
             (C117 * C1190 - C50222 * C1197) * C16929 +
             (C117 * C1198 - C50222 * C1202) * C16924) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           (C2461 * C19531 + C2462 * C50062) * C19529 +
           ((C2444 - C2443) * C19531 + (C2446 - C2445) * C50062) * C19530) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
           (C2439 * C19531 + C2440 * C50062) * C19528 +
           (C2441 * C19531 + C2442 * C50062) * C19529 +
           (C2465 * C19531 + C2466 * C50062) * C19530) *
              C50125 * C50109 * C114 +
          ((C171 * C19531 + C172 * C50062) * C19527 +
           (C2797 * C19531 + C2798 * C50062) * C19528 +
           (C2799 * C19531 + C2800 * C50062) * C19529 +
           ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
              C50125 * C50109 * C115 +
          ((C175 * C19531 + C176 * C50062) * C19527 +
           (C620 * C19531 + C621 * C50062) * C19528 +
           ((C343 - C342) * C19531 + (C345 - C344) * C50062) * C19529 +
           ((C117 * C1076 - C50222 * C1083) * C19531 +
            (C117 * C1084 - C50222 * C1088) * C50062) *
               C19530) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C276 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C277 +
           (C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C50222 * C3422 - C117 * C3420) * C19531 +
             (C50222 * C3426 - C117 * C3423) * C50062) *
                C19530) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C276 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C277 +
           (C19642 * C19527 + C19643 * C19528 +
            ((C2452 - C2451) * C19531 + (C2454 - C2453) * C50062) * C19529 +
            ((C117 * C3421 - C50222 * C3424) * C19531 +
             (C117 * C3425 - C50222 * C3427) * C50062) *
                C19530) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            (C4098 * C19531 + C4099 * C50062) * C19529 +
            ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C50222 * C3589 - C117 * C3587) * C19531 +
             (C50222 * C3593 - C117 * C3590) * C50062) *
                C19530) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C443 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C444 +
           (((C500 - C499) * C19531 + (C502 - C501) * C50062) * C19527 +
            ((C2644 - C2643) * C19531 + (C2646 - C2645) * C50062) * C19528 +
            ((C2648 - C2647) * C19531 + (C2650 - C2649) * C50062) * C19529 +
            ((C117 * C3588 - C50222 * C3591) * C19531 +
             (C117 * C3592 - C50222 * C3594) * C50062) *
                C19530) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C19531 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C50062) *
               C16925 +
           ((C5100 * C291 - C5103 * C281 + C5101 * C872 - C5104 * C867 +
             C5102 * C1191 - C5105 * C1187) *
                C19531 +
            (C5100 * C311 - C5103 * C292 + C5101 * C882 - C5104 * C873 +
             C5102 * C1199 - C5105 * C1192) *
                C50062) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
               C16925 +
           ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
               C16925 +
           ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
            (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C19531 +
            (C5138 - C5137 + C5140 - C5139 + C5142 - C5141) * C50062) *
               C16925 +
           ((C5103 * C284 - C5100 * C297 + C5104 * C870 - C5101 * C878 +
             C5105 * C1190 - C5102 * C1197) *
                C19531 +
            (C5103 * C298 - C5100 * C314 + C5104 * C879 - C5101 * C885 +
             C5105 * C1198 - C5102 * C1202) *
                C50062) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
             (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
                C16925 +
            ((C5100 * C1077 - C5103 * C1073 + C5101 * C3147 - C5104 * C3144 +
              C5102 * C3589 - C5105 * C3587) *
                 C19531 +
             (C5100 * C1085 - C5103 * C1078 + C5101 * C3153 - C5104 * C3148 +
              C5102 * C3593 - C5105 * C3590) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                C16925 +
            ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
             (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C19531 +
             (C5308 - C5307 + C5310 - C5309 + C5312 - C5311) * C50062) *
                C16925 +
            ((C5103 * C1074 - C5100 * C1079 + C5104 * C3145 - C5101 * C3149 +
              C5105 * C3588 - C5102 * C3591) *
                 C19531 +
             (C5103 * C1080 - C5100 * C1086 + C5104 * C3150 - C5101 * C3154 +
              C5105 * C3592 - C5102 * C3594) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C443 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C5103 * C867 - C5100 * C872 + C5104 * C1187 - C5101 * C1191 +
              C5105 * C4500 - C5102 * C4504) *
                 C19531 +
             (C5103 * C873 - C5100 * C882 + C5104 * C1192 - C5101 * C1199 +
              C5105 * C4505 - C5102 * C4512) *
                 C50062) *
                C50260) *
               C444 +
           (((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
              C5102 * C5461 - C5105 * C5458) *
                 C19531 +
             (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
              C5102 * C5467 - C5105 * C5462) *
                 C50062) *
                C16925 +
            ((C5100 * C1191 - C5103 * C1187 + C5101 * C4504 - C5104 * C4500 +
              C5102 * C6412 - C5105 * C6410) *
                 C19531 +
             (C5100 * C1199 - C5103 * C1192 + C5101 * C4512 - C5104 * C4505 +
              C5102 * C6416 - C5105 * C6413) *
                 C50062) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C443 +
           (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                C16925 +
            ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                C50260) *
               C444 +
           (((C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C19531 +
             (C5490 - C5489 + C5492 - C5491 + C5494 - C5493) * C50062) *
                C16925 +
            ((C5103 * C1188 - C5100 * C1193 + C5104 * C4501 - C5101 * C4506 +
              C5105 * C6411 - C5102 * C6414) *
                 C19531 +
             (C5103 * C1194 - C5100 * C1200 + C5104 * C4507 - C5101 * C4513 +
              C5105 * C6415 - C5102 * C6417) *
                 C50062) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            (C4098 * C19531 + C4099 * C50062) * C19529 +
            ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50352 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50352 +
           ((C730 * C19531 + C731 * C50062) * C19527 +
            (C8485 * C19531 + C8486 * C50062) * C19528 +
            ((C2948 - C2947) * C19531 + (C2950 - C2949) * C50062) * C19529 +
            ((C117 * C3146 - C50222 * C3151) * C19531 +
             (C117 * C3152 - C50222 * C3155) * C50062) *
                C19530) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50352 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50352 +
           ((C730 * C16927 + C731 * C16922 + C732 * C16928 + C733 * C16923 +
             (C735 - C734) * C16929 + (C737 - C736) * C16924) *
                C16925 +
            (C8485 * C16927 + C8486 * C16922 + (C897 - C896) * C16928 +
             (C899 - C898) * C16923 + (C117 * C871 - C50222 * C880) * C16929 +
             (C117 * C881 - C50222 * C886) * C16924) *
                C50260) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50352 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C5103 * C867 - C5100 * C872 + C5104 * C1187 - C5101 * C1191 +
              C5105 * C4500 - C5102 * C4504) *
                 C19531 +
             (C5103 * C873 - C5100 * C882 + C5104 * C1192 - C5101 * C1199 +
              C5105 * C4505 - C5102 * C4512) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50352 +
           (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                C16925 +
            ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
             (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
                C16925 +
            ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
                C50260) *
               C50352 +
           (((C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C19531 +
             (C5806 - C5805 + C5808 - C5807 + C5810 - C5809) * C50062) *
                C16925 +
            ((C5103 * C869 - C5100 * C876 + C5104 * C1189 - C5101 * C1195 +
              C5105 * C6004 - C5102 * C6005) *
                 C19531 +
             (C5103 * C877 - C5100 * C884 + C5104 * C1196 - C5101 * C1201 +
              C5105 * C6006 - C5102 * C6007) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C276 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C277 +
           ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C276 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C277 +
           ((C2441 * C16927 + C2442 * C16922 + C2455 * C16928 + C2456 * C16923 +
             (C343 - C342) * C16929 + (C345 - C344) * C16924) *
                C16925 +
            (C2465 * C16927 + C2466 * C16922 + (C2458 - C2457) * C16928 +
             (C2460 - C2459) * C16923 +
             (C117 * C1076 - C50222 * C1083) * C16929 +
             (C117 * C1084 - C50222 * C1088) * C16924) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C16927 + (C154 - C153) * C16922 +
            (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
            C176 * C16924) *
               C16925 +
           (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
            C620 * C16929 + C621 * C16924) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
            (C164 - C163) * C16929 + (C166 - C165) * C16924) *
               C16925 +
           (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
            (C622 - C623) * C16929 + (C624 - C625) * C16924) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C175 * C16927 + C176 * C16922 + C177 * C16928 + C178 * C16923 +
            (C168 - C167) * C16929 + (C170 - C169) * C16924) *
               C16925 +
           (C620 * C16927 + C621 * C16922 + (C623 - C622) * C16928 +
            (C625 - C624) * C16923 + (C117 * C613 - C50222 * C614) * C16929 +
            (C117 * C615 - C50222 * C616) * C16924) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           (C2461 * C19531 + C2462 * C50062) * C19529 +
           ((C2444 - C2443) * C19531 + (C2446 - C2445) * C50062) * C19530) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
           (C2439 * C19531 + C2440 * C50062) * C19528 +
           (C2441 * C19531 + C2442 * C50062) * C19529 +
           (C2465 * C19531 + C2466 * C50062) * C19530) *
              C50125 * C50109 * C114 +
          ((C171 * C19531 + C172 * C50062) * C19527 +
           (C2797 * C19531 + C2798 * C50062) * C19528 +
           (C2799 * C19531 + C2800 * C50062) * C19529 +
           ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
              C50125 * C50109 * C115 +
          ((C175 * C19531 + C176 * C50062) * C19527 +
           (C620 * C19531 + C621 * C50062) * C19528 +
           ((C343 - C342) * C19531 + (C345 - C344) * C50062) * C19529 +
           ((C117 * C1076 - C50222 * C1083) * C19531 +
            (C117 * C1084 - C50222 * C1088) * C50062) *
               C19530) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C276 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C277 +
           (C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C50222 * C3422 - C117 * C3420) * C19531 +
             (C50222 * C3426 - C117 * C3423) * C50062) *
                C19530) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C276 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C277 +
           (C19642 * C19527 + C19643 * C19528 +
            ((C2452 - C2451) * C19531 + (C2454 - C2453) * C50062) * C19529 +
            ((C117 * C3421 - C50222 * C3424) * C19531 +
             (C117 * C3425 - C50222 * C3427) * C50062) *
                C19530) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C19531 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C50062) *
               C16925 +
           ((C5100 * C291 - C5103 * C281 + C5101 * C872 - C5104 * C867 +
             C5102 * C1191 - C5105 * C1187) *
                C19531 +
            (C5100 * C311 - C5103 * C292 + C5101 * C882 - C5104 * C873 +
             C5102 * C1199 - C5105 * C1192) *
                C50062) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
            (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
               C16925 +
           ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
            (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
               C16925 +
           ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
            (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C19531 +
            (C5138 - C5137 + C5140 - C5139 + C5142 - C5141) * C50062) *
               C16925 +
           ((C5103 * C284 - C5100 * C297 + C5104 * C870 - C5101 * C878 +
             C5105 * C1190 - C5102 * C1197) *
                C19531 +
            (C5103 * C298 - C5100 * C314 + C5104 * C879 - C5101 * C885 +
             C5105 * C1198 - C5102 * C1202) *
                C50062) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
             (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
                C16925 +
            ((C5100 * C1077 - C5103 * C1073 + C5101 * C3147 - C5104 * C3144 +
              C5102 * C3589 - C5105 * C3587) *
                 C19531 +
             (C5100 * C1085 - C5103 * C1078 + C5101 * C3153 - C5104 * C3148 +
              C5102 * C3593 - C5105 * C3590) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                C16925 +
            ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
             (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C19531 +
             (C5308 - C5307 + C5310 - C5309 + C5312 - C5311) * C50062) *
                C16925 +
            ((C5103 * C1074 - C5100 * C1079 + C5104 * C3145 - C5101 * C3149 +
              C5105 * C3588 - C5102 * C3591) *
                 C19531 +
             (C5103 * C1080 - C5100 * C1086 + C5104 * C3150 - C5101 * C3154 +
              C5105 * C3592 - C5102 * C3594) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C50396 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C50125 * C50397 +
           (C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C50396 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50397 +
           (C19642 * C19527 + C19643 * C19528 +
            ((C2452 - C2451) * C19531 + (C2454 - C2453) * C50062) * C19529 +
            ((C117 * C3421 - C50222 * C3424) * C19531 +
             (C117 * C3425 - C50222 * C3427) * C50062) *
                C19530) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C50396 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50397 +
           ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C50396 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50397 +
           ((C2441 * C16927 + C2442 * C16922 + C2455 * C16928 + C2456 * C16923 +
             (C343 - C342) * C16929 + (C345 - C344) * C16924) *
                C16925 +
            (C2465 * C16927 + C2466 * C16922 + (C2458 - C2457) * C16928 +
             (C2460 - C2459) * C16923 +
             (C117 * C1076 - C50222 * C1083) * C16929 +
             (C117 * C1084 - C50222 * C1088) * C16924) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50125 * C50396 +
           (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50125 * C50397 +
           (((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
             (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
                C16925 +
            ((C22445 - C22446 + C22447 - C22448 + C22449 - C22450) * C19531 +
             (C22451 - C22452 + C22453 - C22454 + C22455 - C22456) * C50062) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50125 * C50396 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                C16925 +
            ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
             (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                C50260) *
               C50125 * C50397 +
           (((C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C19531 +
             (C5308 - C5307 + C5310 - C5309 + C5312 - C5311) * C50062) *
                C16925 +
            ((C5103 * C1074 - C5100 * C1079 + C5104 * C3145 - C5101 * C3149 +
              C5105 * C3588 - C5102 * C3591) *
                 C19531 +
             (C5103 * C1080 - C5100 * C1086 + C5104 * C3150 - C5101 * C3154 +
              C5105 * C3592 - C5102 * C3594) *
                 C50062) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C50352 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50189) *
              C50397 +
          ((C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C50352 +
           (C20693 * C19527 + C20696 * C19528 +
            ((C20690 - C20689) * C19531 + (C20692 - C20691) * C50062) * C19529 +
            ((C117 * C20680 - C50222 * C20681) * C19531 +
             (C117 * C20682 - C50222 * C20683) * C50062) *
                C19530) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50352 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50189) *
              C50397 +
          (((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50352 +
           ((C4098 * C16927 + C4099 * C16922 + C3167 * C16928 + C3168 * C16923 +
             (C2948 - C2947) * C16929 + (C2950 - C2949) * C16924) *
                C16925 +
            ((C4103 - C4102) * C16927 + (C4105 - C4104) * C16922 +
             (C3174 - C3173) * C16928 + (C3176 - C3175) * C16923 +
             (C117 * C3146 - C50222 * C3151) * C16929 +
             (C117 * C3152 - C50222 * C3155) * C16924) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50352 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50189) *
              C50396 +
          ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50352 +
           (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
             (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                C16925 +
            ((C23105 - C23106 + C23107 - C23108 + C23109 - C23110) * C19531 +
             (C23111 - C23112 + C23113 - C23114 + C23115 - C23116) * C50062) *
                C50260) *
               C50189) *
              C50397 +
          ((((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
             (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
                C16925 +
            ((C22445 - C22446 + C22447 - C22448 + C22449 - C22450) * C19531 +
             (C22451 - C22452 + C22453 - C22454 + C22455 - C22456) * C50062) *
                C50260) *
               C50352 +
           (((C23106 - C23105 + C23108 - C23107 + C23110 - C23109) * C19531 +
             (C23112 - C23111 + C23114 - C23113 + C23116 - C23115) * C50062) *
                C16925 +
            ((C5103 * C3144 - C5100 * C3147 + C5104 * C3587 - C5101 * C3589 +
              C5105 * C20958 - C5102 * C20959) *
                 C19531 +
             (C5103 * C3148 - C5100 * C3153 + C5104 * C3590 - C5101 * C3593 +
              C5105 * C20960 - C5102 * C20961) *
                 C50062) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50222 * C129 - C117 * C122) * C16927 +
                 (C50222 * C143 - C117 * C130) * C16922 +
                 (C151 - C152) * C16928 + (C153 - C154) * C16923 +
                 C171 * C16929 + C172 * C16924) *
                    C16925 +
                ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
                 C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
                 C2798 * C16924) *
                    C50260) *
                   C50125 * C997 +
               (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
                 C2439 * C16928 + C2440 * C16923 + C618 * C16929 +
                 C619 * C16924) *
                    C16925 +
                ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
                 C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
                 C2456 * C16924) *
                    C50260) *
                   C50125 * C50161) *
                  C999 +
              ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
                 (C156 - C155) * C16928 + (C158 - C157) * C16923 +
                 C175 * C16929 + C176 * C16924) *
                    C16925 +
                (C2439 * C16927 + C2440 * C16922 + C618 * C16928 +
                 C619 * C16923 + C620 * C16929 + C621 * C16924) *
                    C50260) *
                   C50125 * C997 +
               ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
                 C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                    C16925 +
                (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
                 C2800 * C16923 + (C342 - C343) * C16929 +
                 (C344 - C345) * C16924) *
                    C50260) *
                   C50125 * C50161) *
                  C1000 +
              (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
                 (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                    C16925 +
                (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 +
                 C8338 * C16923 + (C622 - C623) * C16929 +
                 (C624 - C625) * C16924) *
                    C50260) *
                   C50125 * C997 +
               ((C618 * C16927 + C619 * C16922 + C620 * C16928 + C621 * C16923 +
                 (C623 - C622) * C16929 + (C625 - C624) * C16924) *
                    C16925 +
                (C2455 * C16927 + C2456 * C16922 + (C343 - C342) * C16928 +
                 (C345 - C344) * C16923 +
                 (C117 * C290 - C50222 * C309) * C16929 +
                 (C117 * C310 - C50222 * C320) * C16924) *
                    C50260) *
                   C50125 * C50161) *
                  C1001) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50222 * C129 - C117 * C122) * C16927 +
                (C50222 * C143 - C117 * C130) * C16922 +
                (C151 - C152) * C16928 + (C153 - C154) * C16923 +
                C171 * C16929 + C172 * C16924) *
                   C16925 +
               ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
                C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
                C2798 * C16924) *
                   C50260) *
                  C50125 * C1068 +
              (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
                C2439 * C16928 + C2440 * C16923 + C618 * C16929 +
                C619 * C16924) *
                   C16925 +
               ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
                C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
                C2456 * C16924) *
                   C50260) *
                  C50125 * C1069 +
              ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 +
                C2438 * C16923 + C2799 * C16929 + C2800 * C16924) *
                   C16925 +
               ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
                C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
                (C2459 - C2460) * C16924) *
                   C50260) *
                  C50125 * C1070 +
              ((C3429 * C16927 + C3430 * C16922 + C2465 * C16928 +
                C2466 * C16923 + (C2458 - C2457) * C16929 +
                (C2460 - C2459) * C16924) *
                   C16925 +
               ((C3434 - C3433) * C16927 + (C3436 - C3435) * C16922 +
                (C2452 - C2451) * C16928 + (C2454 - C2453) * C16923 +
                (C117 * C2416 - C50222 * C2421) * C16929 +
                (C117 * C2422 - C50222 * C2425) * C16924) *
                   C50260) *
                  C50125 * C1071) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C443 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C444 +
           (((C3597 - C3596) * C16927 + (C3599 - C3598) * C16922 +
             (C2644 - C2643) * C16928 + (C2646 - C2645) * C16923 +
             (C8188 - C8187) * C16929 + (C8190 - C8189) * C16924) *
                C16925 +
            ((C3601 - C3600) * C16927 + (C3603 - C3602) * C16922 +
             (C2648 - C2647) * C16928 + (C2650 - C2649) * C16923 +
             (C117 * C2628 - C50222 * C2633) * C16929 +
             (C117 * C2634 - C50222 * C2637) * C16924) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C997 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C997 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50125 * C997 +
           ((C618 * C19531 + C619 * C50062) * C19527 +
            (C2455 * C19531 + C2456 * C50062) * C19528 +
            ((C2458 - C2457) * C19531 + (C2460 - C2459) * C50062) * C19529 +
            ((C117 * C2416 - C50222 * C2421) * C19531 +
             (C117 * C2422 - C50222 * C2425) * C50062) *
                C19530) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           C19639 * C19529 + C19644 * C19530) *
              C50125 * C1068 +
          (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
           ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
           C20245 * C19529 + C20248 * C19530) *
              C50125 * C1069 +
          (C19639 * C19527 + C19644 * C19528 +
           ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
           ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) * C19530) *
              C50125 * C1070 +
          (C20245 * C19527 + C20248 * C19528 +
           ((C20242 - C20241) * C19531 + (C20244 - C20243) * C50062) * C19529 +
           ((C117 * C20232 - C50222 * C20233) * C19531 +
            (C117 * C20234 - C50222 * C20235) * C50062) *
               C19530) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            (C4098 * C19531 + C4099 * C50062) * C19529 +
            ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) *
                C19530) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C443 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C50222 * C4091 - C117 * C4089) * C19531 +
             (C50222 * C4095 - C117 * C4092) * C50062) *
                C19530) *
               C444 +
           (((C3597 - C3596) * C19531 + (C3599 - C3598) * C50062) * C19527 +
            ((C3601 - C3600) * C19531 + (C3603 - C3602) * C50062) * C19528 +
            ((C20352 - C20351) * C19531 + (C20354 - C20353) * C50062) * C19529 +
            ((C117 * C20346 - C50222 * C20347) * C19531 +
             (C117 * C20348 - C50222 * C20349) * C50062) *
                C19530) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                C16925 +
            ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
             (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          ((((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
             (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
                C16925 +
            ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C19531 +
             (C5648 - C5647 + C5650 - C5649 + C5652 - C5651) * C50062) *
                C16925 +
            ((C5103 * C287 - C5100 * C303 + C5104 * C1536 - C5101 * C1542 +
              C5105 * C2628 - C5102 * C2633) *
                 C19531 +
             (C5103 * C304 - C5100 * C317 + C5104 * C1543 - C5101 * C1548 +
              C5105 * C2634 - C5102 * C2637) *
                 C50062) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C19531 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C50062) *
               C16925 +
           ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
            (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
               C50260) *
              C50125 * C1068 +
          (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
            (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
               C16925 +
           ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
            (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
               C50260) *
              C50125 * C1069 +
          (((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
            (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
               C16925 +
           ((C22445 - C22446 + C22447 - C22448 + C22449 - C22450) * C19531 +
            (C22451 - C22452 + C22453 - C22454 + C22455 - C22456) * C50062) *
               C50260) *
              C50125 * C1070 +
          (((C22446 - C22445 + C22448 - C22447 + C22450 - C22449) * C19531 +
            (C22452 - C22451 + C22454 - C22453 + C22456 - C22455) * C50062) *
               C16925 +
           ((C5103 * C2414 - C5100 * C2417 + C5104 * C4089 - C5101 * C4091 +
             C5105 * C20346 - C5102 * C20347) *
                C19531 +
            (C5103 * C2418 - C5100 * C2423 + C5104 * C4092 - C5101 * C4095 +
             C5105 * C20348 - C5102 * C20349) *
                C50062) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C443 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C444 +
           (((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
              C5102 * C5461 - C5105 * C5458) *
                 C19531 +
             (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
              C5102 * C5467 - C5105 * C5462) *
                 C50062) *
                C16925 +
            ((C22607 - C22608 + C22609 - C22610 + C22611 - C22612) * C19531 +
             (C22613 - C22614 + C22615 - C22616 + C22617 - C22618) * C50062) *
                C50260) *
               C445) *
              C997 +
          ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C443 +
           (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
             (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                C16925 +
            ((C5100 * C1538 - C5103 * C1534 + C5101 * C2629 - C5104 * C2626 +
              C5102 * C4508 - C5105 * C4502) *
                 C19531 +
             (C5100 * C1546 - C5103 * C1539 + C5101 * C2635 - C5104 * C2630 +
              C5102 * C4514 - C5105 * C4509) *
                 C50062) *
                C50260) *
               C444 +
           (((C22608 - C22607 + C22610 - C22609 + C22612 - C22611) * C19531 +
             (C22614 - C22613 + C22616 - C22615 + C22618 - C22617) * C50062) *
                C16925 +
            ((C5103 * C2626 - C5100 * C2629 + C5104 * C4502 - C5101 * C4508 +
              C5105 * C22602 - C5102 * C22603) *
                 C19531 +
             (C5103 * C2630 - C5100 * C2635 + C5104 * C4509 - C5101 * C4514 +
              C5105 * C22604 - C5102 * C22605) *
                 C50062) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C19531 +
              (C50222 * C143 - C117 * C130) * C50062) *
                 C19527 +
             ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
             C19639 * C19529 + C19644 * C19530) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C19531 +
              (C117 * C457 - C50222 * C476) * C50062) *
                 C19527 +
             ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
             (C4098 * C19531 + C4099 * C50062) * C19529 +
             ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
             ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
             C20245 * C19529 + C20248 * C19530) *
                C50352 +
            (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
             ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
             ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
             ((C50222 * C4091 - C117 * C4089) * C19531 +
              (C50222 * C4095 - C117 * C4092) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
             (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
             C19643 * C19530) *
                C50352 +
            (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
             (C3169 * C19531 + C3170 * C50062) * C19528 +
             (C3171 * C19531 + C3172 * C50062) * C19529 +
             ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
                C50189) *
               C997 +
           (((C2431 * C19531 + C2432 * C50062) * C19527 +
             (C2437 * C19531 + C2438 * C50062) * C19528 +
             (C2467 * C19531 + C2468 * C50062) * C19529 +
             ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
                C50352 +
            ((C3161 * C19531 + C3162 * C50062) * C19527 +
             (C3167 * C19531 + C3168 * C50062) * C19528 +
             ((C3174 - C3173) * C19531 + (C3176 - C3175) * C50062) * C19529 +
             ((C117 * C4090 - C50222 * C4093) * C19531 +
              (C117 * C4094 - C50222 * C4096) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C16927 +
              (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
              (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                 C16925 +
             ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
              C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
              C2798 * C16924) *
                 C50260) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C16927 +
              (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
              (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                 C16925 +
             ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
              C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
              C8486 * C16924) *
                 C50260) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
              C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                 C16925 +
             ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
              C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
              C2456 * C16924) *
                 C50260) *
                C50352 +
            (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
              C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
              C8682 * C16924) *
                 C16925 +
             ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
              C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
              (C2949 - C2950) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
              (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
              C176 * C16924) *
                 C16925 +
             (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
              C620 * C16929 + C621 * C16924) *
                 C50260) *
                C50352 +
            (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
              (C492 - C491) * C16928 + (C494 - C493) * C16923 +
              (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                 C16925 +
             (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
              C8682 * C16923 + (C896 - C897) * C16929 +
              (C898 - C899) * C16924) *
                 C50260) *
                C50189) *
               C997 +
           (((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
              C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                 C16925 +
             (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
              C2800 * C16923 + (C342 - C343) * C16929 +
              (C344 - C345) * C16924) *
                 C50260) *
                C50352 +
            ((C3161 * C16927 + C3162 * C16922 + C8485 * C16928 +
              C8486 * C16923 + (C897 - C896) * C16929 +
              (C899 - C898) * C16924) *
                 C16925 +
             (C3167 * C16927 + C3168 * C16922 + (C2948 - C2947) * C16928 +
              (C2950 - C2949) * C16923 +
              (C117 * C1537 - C50222 * C1544) * C16929 +
              (C117 * C1545 - C50222 * C1549) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
               C5102 * C464 - C5105 * C450) *
                  C19531 +
              (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
               C5102 * C480 - C5105 * C465) *
                  C50062) *
                 C16925 +
             ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
              (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                 C50260) *
                C50352 +
            (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
               C5105 * C1818 - C5102 * C1822) *
                  C19531 +
              (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
               C5105 * C1823 - C5102 * C1830) *
                  C50062) *
                 C16925 +
             ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
              (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                 C50260) *
                C50189) *
               C997 +
           ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
              (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                 C16925 +
             ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
              (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                 C50260) *
                C50352 +
            (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
              (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                 C16925 +
             ((C5100 * C1538 - C5103 * C1534 + C5101 * C2629 - C5104 * C2626 +
               C5102 * C4508 - C5105 * C4502) *
                  C19531 +
              (C5100 * C1546 - C5103 * C1539 + C5101 * C2635 - C5104 * C2630 +
               C5102 * C4514 - C5105 * C4509) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
              (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                 C16925 +
             ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
              (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                 C50260) *
                C50352 +
            (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
              (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                 C16925 +
             ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
              (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                 C50260) *
                C50189) *
               C997 +
           ((((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
              (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                 C16925 +
             ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
              (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                 C50260) *
                C50352 +
            (((C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C19531 +
              (C6016 - C6015 + C6018 - C6017 + C6020 - C6019) * C50062) *
                 C16925 +
             ((C5103 * C1535 - C5100 * C1540 + C5104 * C2627 - C5101 * C2631 +
               C5105 * C4503 - C5102 * C4510) *
                  C19531 +
              (C5103 * C1541 - C5100 * C1547 + C5104 * C2632 - C5101 * C2636 +
               C5105 * C4511 - C5102 * C4515) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C50125 * C1068 +
          (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
            C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
               C16925 +
           ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
            C2441 * C16928 + C2442 * C16923 + C2455 * C16929 + C2456 * C16924) *
               C50260) *
              C50125 * C1069 +
          ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
            C2799 * C16929 + C2800 * C16924) *
               C16925 +
           ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
            C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
            (C2459 - C2460) * C16924) *
               C50260) *
              C50125 * C1070 +
          ((C3429 * C16927 + C3430 * C16922 + C2465 * C16928 + C2466 * C16923 +
            (C2458 - C2457) * C16929 + (C2460 - C2459) * C16924) *
               C16925 +
           ((C3434 - C3433) * C16927 + (C3436 - C3435) * C16922 +
            (C2452 - C2451) * C16928 + (C2454 - C2453) * C16923 +
            (C117 * C2416 - C50222 * C2421) * C16929 +
            (C117 * C2422 - C50222 * C2425) * C16924) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C997 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C997 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50125 * C997 +
           ((C618 * C16927 + C619 * C16922 + C620 * C16928 + C621 * C16923 +
             (C623 - C622) * C16929 + (C625 - C624) * C16924) *
                C16925 +
            (C2455 * C16927 + C2456 * C16922 + (C343 - C342) * C16928 +
             (C345 - C344) * C16923 + (C117 * C290 - C50222 * C309) * C16929 +
             (C117 * C310 - C50222 * C320) * C16924) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C997 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C997 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50125 * C997 +
           ((C618 * C19531 + C619 * C50062) * C19527 +
            (C2455 * C19531 + C2456 * C50062) * C19528 +
            ((C2458 - C2457) * C19531 + (C2460 - C2459) * C50062) * C19529 +
            ((C117 * C2416 - C50222 * C2421) * C19531 +
             (C117 * C2422 - C50222 * C2425) * C50062) *
                C19530) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           C19639 * C19529 + C19644 * C19530) *
              C50125 * C1068 +
          (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
           ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
           C20245 * C19529 + C20248 * C19530) *
              C50125 * C1069 +
          (C19639 * C19527 + C19644 * C19528 +
           ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
           ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) * C19530) *
              C50125 * C1070 +
          (C20245 * C19527 + C20248 * C19528 +
           ((C20242 - C20241) * C19531 + (C20244 - C20243) * C50062) * C19529 +
           ((C117 * C20232 - C50222 * C20233) * C19531 +
            (C117 * C20234 - C50222 * C20235) * C50062) *
               C19530) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
             (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                C16925 +
            ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
             (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          ((((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
             (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
                C16925 +
            ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C19531 +
             (C5648 - C5647 + C5650 - C5649 + C5652 - C5651) * C50062) *
                C16925 +
            ((C5103 * C287 - C5100 * C303 + C5104 * C1536 - C5101 * C1542 +
              C5105 * C2628 - C5102 * C2633) *
                 C19531 +
             (C5103 * C304 - C5100 * C317 + C5104 * C1543 - C5101 * C1548 +
              C5105 * C2634 - C5102 * C2637) *
                 C50062) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C19531 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C50062) *
               C16925 +
           ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
            (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
               C50260) *
              C50125 * C1068 +
          (((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
            (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
               C16925 +
           ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
            (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
               C50260) *
              C50125 * C1069 +
          (((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
            (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
               C16925 +
           ((C22445 - C22446 + C22447 - C22448 + C22449 - C22450) * C19531 +
            (C22451 - C22452 + C22453 - C22454 + C22455 - C22456) * C50062) *
               C50260) *
              C50125 * C1070 +
          (((C22446 - C22445 + C22448 - C22447 + C22450 - C22449) * C19531 +
            (C22452 - C22451 + C22454 - C22453 + C22456 - C22455) * C50062) *
               C16925 +
           ((C5103 * C2414 - C5100 * C2417 + C5104 * C4089 - C5101 * C4091 +
             C5105 * C20346 - C5102 * C20347) *
                C19531 +
            (C5103 * C2418 - C5100 * C2423 + C5104 * C4092 - C5101 * C4095 +
             C5105 * C20348 - C5102 * C20349) *
                C50062) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C19531 +
              (C50222 * C143 - C117 * C130) * C50062) *
                 C19527 +
             ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
             C19639 * C19529 + C19644 * C19530) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C19531 +
              (C117 * C457 - C50222 * C476) * C50062) *
                 C19527 +
             ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
             C20693 * C19529 + C20696 * C19530) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
             ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
             C20245 * C19529 + C20248 * C19530) *
                C1648 +
            (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
             ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
             ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
             ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
             (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
             C19643 * C19530) *
                C1648 +
            (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
             (C3169 * C19531 + C3170 * C50062) * C19528 +
             (C3171 * C19531 + C3172 * C50062) * C19529 +
             ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
                C50189) *
               C50351 +
           (((C2431 * C19531 + C2432 * C50062) * C19527 +
             (C2437 * C19531 + C2438 * C50062) * C19528 +
             (C2467 * C19531 + C2468 * C50062) * C19529 +
             ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
                C1648 +
            ((C3161 * C19531 + C3162 * C50062) * C19527 +
             (C3167 * C19531 + C3168 * C50062) * C19528 +
             ((C3174 - C3173) * C19531 + (C3176 - C3175) * C50062) * C19529 +
             ((C117 * C4090 - C50222 * C4093) * C19531 +
              (C117 * C4094 - C50222 * C4096) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C16927 +
              (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
              (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                 C16925 +
             ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
              C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
              C2798 * C16924) *
                 C50260) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C16927 +
              (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
              (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                 C16925 +
             ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
              C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
              C8486 * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
              C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                 C16925 +
             ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
              C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
              C2456 * C16924) *
                 C50260) *
                C1648 +
            (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
              C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
              C8682 * C16924) *
                 C16925 +
             ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
              C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
              (C2949 - C2950) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
              (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
              C176 * C16924) *
                 C16925 +
             (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
              C620 * C16929 + C621 * C16924) *
                 C50260) *
                C1648 +
            (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
              (C492 - C491) * C16928 + (C494 - C493) * C16923 +
              (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                 C16925 +
             (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
              C8682 * C16923 + (C896 - C897) * C16929 +
              (C898 - C899) * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           (((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
              C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                 C16925 +
             (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
              C2800 * C16923 + (C342 - C343) * C16929 +
              (C344 - C345) * C16924) *
                 C50260) *
                C1648 +
            ((C3161 * C16927 + C3162 * C16922 + C8485 * C16928 +
              C8486 * C16923 + (C897 - C896) * C16929 +
              (C899 - C898) * C16924) *
                 C16925 +
             (C3167 * C16927 + C3168 * C16922 + (C2948 - C2947) * C16928 +
              (C2950 - C2949) * C16923 +
              (C117 * C1537 - C50222 * C1544) * C16929 +
              (C117 * C1545 - C50222 * C1549) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
               C5102 * C464 - C5105 * C450) *
                  C19531 +
              (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
               C5102 * C480 - C5105 * C465) *
                  C50062) *
                 C16925 +
             ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
              (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                 C50260) *
                C1648 +
            (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
               C5105 * C1818 - C5102 * C1822) *
                  C19531 +
              (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
               C5105 * C1823 - C5102 * C1830) *
                  C50062) *
                 C16925 +
             ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
              (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
              (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                 C16925 +
             ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
              (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                 C50260) *
                C1648 +
            (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
              (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                 C16925 +
             ((C23105 - C23106 + C23107 - C23108 + C23109 - C23110) * C19531 +
              (C23111 - C23112 + C23113 - C23114 + C23115 - C23116) * C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
              (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                 C16925 +
             ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
              (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                 C50260) *
                C1648 +
            (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
              (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                 C16925 +
             ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
              (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C19531 +
              (C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C50062) *
                 C16925 +
             ((C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C19531 +
              (C5307 - C5308 + C5309 - C5310 + C5311 - C5312) * C50062) *
                 C50260) *
                C1648 +
            (((C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C19531 +
              (C6016 - C6015 + C6018 - C6017 + C6020 - C6019) * C50062) *
                 C16925 +
             ((C5103 * C1535 - C5100 * C1540 + C5104 * C2627 - C5101 * C2631 +
               C5105 * C4503 - C5102 * C4510) *
                  C19531 +
              (C5103 * C1541 - C5100 * C1547 + C5104 * C2632 - C5101 * C2636 +
               C5105 * C4511 - C5102 * C4515) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) *
                C19530) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C50398 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50399 +
           (((C3597 - C3596) * C19531 + (C3599 - C3598) * C50062) * C19527 +
            ((C3601 - C3600) * C19531 + (C3603 - C3602) * C50062) * C19528 +
            ((C20352 - C20351) * C19531 + (C20354 - C20353) * C50062) * C19529 +
            ((C117 * C20346 - C50222 * C20347) * C19531 +
             (C117 * C20348 - C50222 * C20349) * C50062) *
                C19530) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50398 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50399 +
           (((C3597 - C3596) * C16927 + (C3599 - C3598) * C16922 +
             (C2644 - C2643) * C16928 + (C2646 - C2645) * C16923 +
             (C8188 - C8187) * C16929 + (C8190 - C8189) * C16924) *
                C16925 +
            ((C3601 - C3600) * C16927 + (C3603 - C3602) * C16922 +
             (C2648 - C2647) * C16928 + (C2650 - C2649) * C16923 +
             (C117 * C2628 - C50222 * C2633) * C16929 +
             (C117 * C2634 - C50222 * C2637) * C16924) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50398 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50399 +
           (((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
              C5102 * C5461 - C5105 * C5458) *
                 C19531 +
             (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
              C5102 * C5467 - C5105 * C5462) *
                 C50062) *
                C16925 +
            ((C22607 - C22608 + C22609 - C22610 + C22611 - C22612) * C19531 +
             (C22613 - C22614 + C22615 - C22616 + C22617 - C22618) * C50062) *
                C50260) *
               C2064) *
              C50351 +
          ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C50398 +
           (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
             (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                C16925 +
            ((C23105 - C23106 + C23107 - C23108 + C23109 - C23110) * C19531 +
             (C23111 - C23112 + C23113 - C23114 + C23115 - C23116) * C50062) *
                C50260) *
               C50399 +
           (((C22608 - C22607 + C22610 - C22609 + C22612 - C22611) * C19531 +
             (C22614 - C22613 + C22616 - C22615 + C22618 - C22617) * C50062) *
                C16925 +
            ((C5103 * C2626 - C5100 * C2629 + C5104 * C4502 - C5101 * C4508 +
              C5105 * C22602 - C5102 * C22603) *
                 C19531 +
             (C5103 * C2630 - C5100 * C2635 + C5104 * C4509 - C5101 * C4514 +
              C5105 * C22604 - C5102 * C22605) *
                 C50062) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50222 * C129 - C117 * C122) * C16927 +
                 (C50222 * C143 - C117 * C130) * C16922 +
                 (C151 - C152) * C16928 + (C153 - C154) * C16923 +
                 C171 * C16929 + C172 * C16924) *
                    C16925 +
                ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
                 C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
                 C2798 * C16924) *
                    C50260) *
                   C1648 +
               (((C117 * C446 - C50222 * C456) * C16927 +
                 (C117 * C457 - C50222 * C476) * C16922 +
                 (C487 - C488) * C16928 + (C489 - C490) * C16923 +
                 C730 * C16929 + C731 * C16924) *
                    C16925 +
                ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
                 C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
                 C8486 * C16924) *
                    C50260) *
                   C50189) *
                  C50109 * C999 +
              ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
                 (C156 - C155) * C16928 + (C158 - C157) * C16923 +
                 C175 * C16929 + C176 * C16924) *
                    C16925 +
                (C2439 * C16927 + C2440 * C16922 + C618 * C16928 +
                 C619 * C16923 + C620 * C16929 + C621 * C16924) *
                    C50260) *
                   C1648 +
               (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
                 (C492 - C491) * C16928 + (C494 - C493) * C16923 +
                 (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                    C16925 +
                (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
                 C8682 * C16923 + (C896 - C897) * C16929 +
                 (C898 - C899) * C16924) *
                    C50260) *
                   C50189) *
                  C50109 * C1000 +
              (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
                 (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                    C16925 +
                (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 +
                 C8338 * C16923 + (C622 - C623) * C16929 +
                 (C624 - C625) * C16924) *
                    C50260) *
                   C1648 +
               ((C730 * C16927 + C731 * C16922 + C732 * C16928 + C733 * C16923 +
                 (C735 - C734) * C16929 + (C737 - C736) * C16924) *
                    C16925 +
                (C8485 * C16927 + C8486 * C16922 + (C897 - C896) * C16928 +
                 (C899 - C898) * C16923 +
                 (C117 * C871 - C50222 * C880) * C16929 +
                 (C117 * C881 - C50222 * C886) * C16924) *
                    C50260) *
                   C50189) *
                  C50109 * C1001) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50222 * C129 - C117 * C122) * C16927 +
                 (C50222 * C143 - C117 * C130) * C16922 +
                 (C151 - C152) * C16928 + (C153 - C154) * C16923 +
                 C171 * C16929 + C172 * C16924) *
                    C16925 +
                ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
                 C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
                 C2798 * C16924) *
                    C50260) *
                   C1648 +
               (((C117 * C446 - C50222 * C456) * C16927 +
                 (C117 * C457 - C50222 * C476) * C16922 +
                 (C487 - C488) * C16928 + (C489 - C490) * C16923 +
                 C730 * C16929 + C731 * C16924) *
                    C16925 +
                ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
                 C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
                 C8486 * C16924) *
                    C50260) *
                   C50189) *
                  C276 +
              ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
                 C2439 * C16928 + C2440 * C16923 + C618 * C16929 +
                 C619 * C16924) *
                    C16925 +
                ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
                 C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
                 C2456 * C16924) *
                    C50260) *
                   C1648 +
               (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
                 C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
                 C8682 * C16924) *
                    C16925 +
                ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
                 C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
                 (C2949 - C2950) * C16924) *
                    C50260) *
                   C50189) *
                  C277 +
              (((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 +
                 C2438 * C16923 + C2799 * C16929 + C2800 * C16924) *
                    C16925 +
                ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
                 C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
                 (C2459 - C2460) * C16924) *
                    C50260) *
                   C1648 +
               ((C4098 * C16927 + C4099 * C16922 + C3167 * C16928 +
                 C3168 * C16923 + (C2948 - C2947) * C16929 +
                 (C2950 - C2949) * C16924) *
                    C16925 +
                ((C4103 - C4102) * C16927 + (C4105 - C4104) * C16922 +
                 (C3174 - C3173) * C16928 + (C3176 - C3175) * C16923 +
                 (C117 * C3146 - C50222 * C3151) * C16929 +
                 (C117 * C3152 - C50222 * C3155) * C16924) *
                    C50260) *
                   C50189) *
                  C278) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C16927 +
            (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
            (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
               C16925 +
           ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
            C3161 * C16928 + C3162 * C16923 + C8485 * C16929 + C8486 * C16924) *
               C50260) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C16927 +
            (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
            (C501 - C502) * C16923 + (C503 - C504) * C16929 +
            (C505 - C506) * C16924) *
               C16925 +
           ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
            (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
            (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
               C50260) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C16927 +
            (C117 * C1823 - C50222 * C1830) * C16922 +
            (C117 * C1819 - C50222 * C1824) * C16928 +
            (C117 * C1825 - C50222 * C1831) * C16923 +
            (C117 * C1820 - C50222 * C1826) * C16929 +
            (C117 * C1827 - C50222 * C1832) * C16924) *
               C16925 +
           ((C117 * C4500 - C50222 * C4504) * C16927 +
            (C117 * C4505 - C50222 * C4512) * C16922 +
            (C117 * C4501 - C50222 * C4506) * C16928 +
            (C117 * C4507 - C50222 * C4513) * C16923 +
            (C117 * C6004 - C50222 * C6005) * C16929 +
            (C117 * C6006 - C50222 * C6007) * C16924) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C1648 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C1648 +
           ((C730 * C19531 + C731 * C50062) * C19527 +
            (C8485 * C19531 + C8486 * C50062) * C19528 +
            ((C2948 - C2947) * C19531 + (C2950 - C2949) * C50062) * C19529 +
            ((C117 * C3146 - C50222 * C3151) * C19531 +
             (C117 * C3152 - C50222 * C3155) * C50062) *
                C19530) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C1648 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50189) *
              C277 +
          ((C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C1648 +
           (C20693 * C19527 + C20696 * C19528 +
            ((C20690 - C20689) * C19531 + (C20692 - C20691) * C50062) * C19529 +
            ((C117 * C20680 - C50222 * C20681) * C19531 +
             (C117 * C20682 - C50222 * C20683) * C50062) *
                C19530) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           C19639 * C19529 + C19644 * C19530) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C19531 +
            (C117 * C457 - C50222 * C476) * C50062) *
               C19527 +
           ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
           C20693 * C19529 + C20696 * C19530) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C19531 +
            (C50222 * C480 - C117 * C465) * C50062) *
               C19527 +
           ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
           ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
           ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) * C19530) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C19531 +
            (C117 * C1823 - C50222 * C1830) * C50062) *
               C19527 +
           ((C117 * C4500 - C50222 * C4504) * C19531 +
            (C117 * C4505 - C50222 * C4512) * C50062) *
               C19528 +
           ((C117 * C4502 - C50222 * C4508) * C19531 +
            (C117 * C4509 - C50222 * C4514) * C50062) *
               C19529 +
           ((C117 * C20958 - C50222 * C20959) * C19531 +
            (C117 * C20960 - C50222 * C20961) * C50062) *
               C19530) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C1648 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C1648 +
           (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                C16925 +
            ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          ((((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
             (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
                C16925 +
            ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
                C50260) *
               C1648 +
           (((C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C19531 +
             (C5806 - C5805 + C5808 - C5807 + C5810 - C5809) * C50062) *
                C16925 +
            ((C5103 * C869 - C5100 * C876 + C5104 * C1189 - C5101 * C1195 +
              C5105 * C6004 - C5102 * C6005) *
                 C19531 +
             (C5103 * C877 - C5100 * C884 + C5104 * C1196 - C5101 * C1201 +
              C5105 * C6006 - C5102 * C6007) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C1648 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50189) *
              C276 +
          ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C1648 +
           (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
             (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                C16925 +
            ((C23105 - C23106 + C23107 - C23108 + C23109 - C23110) * C19531 +
             (C23111 - C23112 + C23113 - C23114 + C23115 - C23116) * C50062) *
                C50260) *
               C50189) *
              C277 +
          ((((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
             (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
                C16925 +
            ((C22445 - C22446 + C22447 - C22448 + C22449 - C22450) * C19531 +
             (C22451 - C22452 + C22453 - C22454 + C22455 - C22456) * C50062) *
                C50260) *
               C1648 +
           (((C23106 - C23105 + C23108 - C23107 + C23110 - C23109) * C19531 +
             (C23112 - C23111 + C23114 - C23113 + C23116 - C23115) * C50062) *
                C16925 +
            ((C5103 * C3144 - C5100 * C3147 + C5104 * C3587 - C5101 * C3589 +
              C5105 * C20958 - C5102 * C20959) *
                 C19531 +
             (C5103 * C3148 - C5100 * C3153 + C5104 * C3590 - C5101 * C3593 +
              C5105 * C20960 - C5102 * C20961) *
                 C50062) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
             C5102 * C464 - C5105 * C450) *
                C19531 +
            (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
             C5102 * C480 - C5105 * C465) *
                C50062) *
               C16925 +
           ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
            (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
               C50260) *
              C1814 +
          (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
             C5105 * C1818 - C5102 * C1822) *
                C19531 +
            (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
             C5105 * C1823 - C5102 * C1830) *
                C50062) *
               C16925 +
           ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
            (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
               C50260) *
              C1815 +
          (((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
             C5102 * C5461 - C5105 * C5458) *
                C19531 +
            (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
             C5102 * C5467 - C5105 * C5462) *
                C50062) *
               C16925 +
           ((C22607 - C22608 + C22609 - C22610 + C22611 - C22612) * C19531 +
            (C22613 - C22614 + C22615 - C22616 + C22617 - C22618) * C50062) *
               C50260) *
              C1816 +
          (((C5103 * C1818 - C5100 * C1822 + C5104 * C5458 - C5101 * C5461 +
             C5105 * C7294 - C5102 * C7296) *
                C19531 +
            (C5103 * C1823 - C5100 * C1830 + C5104 * C5462 - C5101 * C5467 +
             C5105 * C7297 - C5102 * C7300) *
                C50062) *
               C16925 +
           ((C5103 * C4500 - C5100 * C4504 + C5104 * C6410 - C5101 * C6412 +
             C5105 * C23506 - C5102 * C23507) *
                C19531 +
            (C5103 * C4505 - C5100 * C4512 + C5104 * C6413 - C5101 * C6416 +
             C5105 * C23508 - C5102 * C23509) *
                C50062) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) *
                C19530) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50398 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50399 +
           (((C500 - C499) * C19531 + (C502 - C501) * C50062) * C19527 +
            ((C2644 - C2643) * C19531 + (C2646 - C2645) * C50062) * C19528 +
            ((C2648 - C2647) * C19531 + (C2650 - C2649) * C50062) * C19529 +
            ((C117 * C3588 - C50222 * C3591) * C19531 +
             (C117 * C3592 - C50222 * C3594) * C50062) *
                C19530) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50398 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50399 +
           (((C500 - C499) * C16927 + (C502 - C501) * C16922 +
             (C504 - C503) * C16928 + (C506 - C505) * C16923 +
             (C508 - C507) * C16929 + (C510 - C509) * C16924) *
                C16925 +
            ((C2644 - C2643) * C16927 + (C2646 - C2645) * C16922 +
             (C8188 - C8187) * C16928 + (C8190 - C8189) * C16923 +
             (C117 * C1190 - C50222 * C1197) * C16929 +
             (C117 * C1198 - C50222 * C1202) * C16924) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C50398 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50399 +
           (((C5100 * C464 - C5103 * C450 + C5101 * C1822 - C5104 * C1818 +
              C5102 * C5461 - C5105 * C5458) *
                 C19531 +
             (C5100 * C480 - C5103 * C465 + C5101 * C1830 - C5104 * C1823 +
              C5102 * C5467 - C5105 * C5462) *
                 C50062) *
                C16925 +
            ((C22607 - C22608 + C22609 - C22610 + C22611 - C22612) * C19531 +
             (C22613 - C22614 + C22615 - C22616 + C22617 - C22618) * C50062) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C50398 +
           (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                C16925 +
            ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                C50260) *
               C50399 +
           (((C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C19531 +
             (C5490 - C5489 + C5492 - C5491 + C5494 - C5493) * C50062) *
                C16925 +
            ((C5103 * C1188 - C5100 * C1193 + C5104 * C4501 - C5101 * C4506 +
              C5105 * C6411 - C5102 * C6414) *
                 C19531 +
             (C5103 * C1194 - C5100 * C1200 + C5104 * C4507 - C5101 * C4513 +
              C5105 * C6415 - C5102 * C6417) *
                 C50062) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C1648 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50189) *
              C277 +
          (((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C1648 +
           ((C4098 * C16927 + C4099 * C16922 + C3167 * C16928 + C3168 * C16923 +
             (C2948 - C2947) * C16929 + (C2950 - C2949) * C16924) *
                C16925 +
            ((C4103 - C4102) * C16927 + (C4105 - C4104) * C16922 +
             (C3174 - C3173) * C16928 + (C3176 - C3175) * C16923 +
             (C117 * C3146 - C50222 * C3151) * C16929 +
             (C117 * C3152 - C50222 * C3155) * C16924) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C1648 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C1648 +
           ((C730 * C16927 + C731 * C16922 + C732 * C16928 + C733 * C16923 +
             (C735 - C734) * C16929 + (C737 - C736) * C16924) *
                C16925 +
            (C8485 * C16927 + C8486 * C16922 + (C897 - C896) * C16928 +
             (C899 - C898) * C16923 + (C117 * C871 - C50222 * C880) * C16929 +
             (C117 * C881 - C50222 * C886) * C16924) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C1648 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C1648 +
           ((C730 * C19531 + C731 * C50062) * C19527 +
            (C8485 * C19531 + C8486 * C50062) * C19528 +
            ((C2948 - C2947) * C19531 + (C2950 - C2949) * C50062) * C19529 +
            ((C117 * C3146 - C50222 * C3151) * C19531 +
             (C117 * C3152 - C50222 * C3155) * C50062) *
                C19530) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C1648 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50189) *
              C277 +
          ((C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C1648 +
           (C20693 * C19527 + C20696 * C19528 +
            ((C20690 - C20689) * C19531 + (C20692 - C20691) * C50062) * C19529 +
            ((C117 * C20680 - C50222 * C20681) * C19531 +
             (C117 * C20682 - C50222 * C20683) * C50062) *
                C19530) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C1648 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C19531 +
             (C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C50062) *
                C16925 +
            ((C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C19531 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C50062) *
                C50260) *
               C1648 +
           (((C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C19531 +
             (C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C50062) *
                C16925 +
            ((C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C19531 +
             (C6015 - C6016 + C6017 - C6018 + C6019 - C6020) * C50062) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          ((((C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C19531 +
             (C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C50062) *
                C16925 +
            ((C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C19531 +
             (C5647 - C5648 + C5649 - C5650 + C5651 - C5652) * C50062) *
                C50260) *
               C1648 +
           (((C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C19531 +
             (C5806 - C5805 + C5808 - C5807 + C5810 - C5809) * C50062) *
                C16925 +
            ((C5103 * C869 - C5100 * C876 + C5104 * C1189 - C5101 * C1195 +
              C5105 * C6004 - C5102 * C6005) *
                 C19531 +
             (C5103 * C877 - C5100 * C884 + C5104 * C1196 - C5101 * C1201 +
              C5105 * C6006 - C5102 * C6007) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5100 * C129 - C5103 * C122 + C5101 * C456 - C5104 * C446 +
              C5102 * C464 - C5105 * C450) *
                 C19531 +
             (C5100 * C143 - C5103 * C130 + C5101 * C476 - C5104 * C457 +
              C5102 * C480 - C5105 * C465) *
                 C50062) *
                C16925 +
            ((C21533 - C21534 + C21535 - C21536 + C21537 - C21538) * C19531 +
             (C21539 - C21540 + C21541 - C21542 + C21543 - C21544) * C50062) *
                C50260) *
               C1648 +
           (((C5103 * C446 - C5100 * C456 + C5104 * C450 - C5101 * C464 +
              C5105 * C1818 - C5102 * C1822) *
                 C19531 +
             (C5103 * C457 - C5100 * C476 + C5104 * C465 - C5101 * C480 +
              C5105 * C1823 - C5102 * C1830) *
                 C50062) *
                C16925 +
            ((C22189 - C22190 + C22191 - C22192 + C22193 - C22194) * C19531 +
             (C22195 - C22196 + C22197 - C22198 + C22199 - C22200) * C50062) *
                C50260) *
               C50189) *
              C276 +
          ((((C21534 - C21533 + C21536 - C21535 + C21538 - C21537) * C19531 +
             (C21540 - C21539 + C21542 - C21541 + C21544 - C21543) * C50062) *
                C16925 +
            ((C21545 - C21546 + C21547 - C21548 + C21549 - C21550) * C19531 +
             (C21551 - C21552 + C21553 - C21554 + C21555 - C21556) * C50062) *
                C50260) *
               C1648 +
           (((C22190 - C22189 + C22192 - C22191 + C22194 - C22193) * C19531 +
             (C22196 - C22195 + C22198 - C22197 + C22200 - C22199) * C50062) *
                C16925 +
            ((C23105 - C23106 + C23107 - C23108 + C23109 - C23110) * C19531 +
             (C23111 - C23112 + C23113 - C23114 + C23115 - C23116) * C50062) *
                C50260) *
               C50189) *
              C277 +
          ((((C21546 - C21545 + C21548 - C21547 + C21550 - C21549) * C19531 +
             (C21552 - C21551 + C21554 - C21553 + C21556 - C21555) * C50062) *
                C16925 +
            ((C22445 - C22446 + C22447 - C22448 + C22449 - C22450) * C19531 +
             (C22451 - C22452 + C22453 - C22454 + C22455 - C22456) * C50062) *
                C50260) *
               C1648 +
           (((C23106 - C23105 + C23108 - C23107 + C23110 - C23109) * C19531 +
             (C23112 - C23111 + C23114 - C23113 + C23116 - C23115) * C50062) *
                C16925 +
            ((C5103 * C3144 - C5100 * C3147 + C5104 * C3587 - C5101 * C3589 +
              C5105 * C20958 - C5102 * C20959) *
                 C19531 +
             (C5103 * C3148 - C5100 * C3153 + C5104 * C3590 - C5101 * C3593 +
              C5105 * C20960 - C5102 * C20961) *
                 C50062) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50125 * C50351 +
           (((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50125 * C50351 +
           ((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
             C13992 * C50067) *
                C16925 +
            (C13589 * C49175 + C13590 * C50336 +
             (C10751 - C10752 + C10753 - C10754) * C49168 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          (((C10577 * C49175 + C10578 * C50336 +
             (C10554 - C10553 + C10556 - C10555) * C49168 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C16925 +
            (C13991 * C49175 + C13992 * C50336 +
             (C11087 - C11088 + C11089 - C11090) * C49168 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50125 * C50351 +
           ((C11095 * C49175 + C11096 * C50336 +
             (C11088 - C11087 + C11090 - C11089) * C49168 +
             (C11092 - C11091 + C11094 - C11093) * C50067) *
                C16925 +
            ((C10752 - C10751 + C10754 - C10753) * C49175 +
             (C10756 - C10755 + C10758 - C10757) * C50336 +
             (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                 C49168 +
             (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C49175 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C50336 +
              (C10537 - C10538 + C10539 - C10540) * C49168 +
              (C10541 - C10542 + C10543 - C10544) * C50067) *
                 C16925 +
             ((C13543 - C13544 + C13545 - C13546) * C49175 +
              (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
              C13584 * C50067) *
                 C50260) *
                C50352 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C49175 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C50336 +
              (C10905 - C10906 + C10907 - C10908) * C49168 +
              (C10909 - C10910 + C10911 - C10912) * C50067) *
                 C16925 +
             ((C14445 - C14446 + C14447 - C14448) * C49175 +
              (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
              C14470 * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C13544 - C13543 + C13546 - C13545) * C49175 +
              (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
              C13586 * C50067) *
                 C16925 +
             ((C13559 - C13560 + C13561 - C13562) * C49175 +
              (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
              C13588 * C50067) *
                 C50260) *
                C50352 +
            (((C14446 - C14445 + C14448 - C14447) * C49175 +
              (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
              C14472 * C50067) *
                 C16925 +
             ((C15653 - C15654 + C15655 - C15656) * C49175 +
              (C15657 - C15658 + C15659 - C15660) * C50336 +
              (C14461 - C14462 + C14463 - C14464) * C49168 +
              (C14465 - C14466 + C14467 - C14468) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C10538 - C10537 + C10540 - C10539) * C49175 +
              (C10542 - C10541 + C10544 - C10543) * C50336 +
              (C10546 - C10545 + C10548 - C10547) * C49168 +
              (C10550 - C10549 + C10552 - C10551) * C50067) *
                 C16925 +
             (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
              C11096 * C50067) *
                 C50260) *
                C50352 +
            (((C10906 - C10905 + C10908 - C10907) * C49175 +
              (C10910 - C10909 + C10912 - C10911) * C50336 +
              (C10914 - C10913 + C10916 - C10915) * C49168 +
              (C10918 - C10917 + C10920 - C10919) * C50067) *
                 C16925 +
             (C14471 * C49175 + C14472 * C50336 +
              (C11459 - C11460 + C11461 - C11462) * C49168 +
              (C11463 - C11464 + C11465 - C11466) * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           (((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
              C13992 * C50067) *
                 C16925 +
             (C13589 * C49175 + C13590 * C50336 +
              (C10751 - C10752 + C10753 - C10754) * C49168 +
              (C10755 - C10756 + C10757 - C10758) * C50067) *
                 C50260) *
                C50352 +
            ((C14469 * C49175 + C14470 * C50336 +
              (C11460 - C11459 + C11462 - C11461) * C49168 +
              (C11464 - C11463 + C11466 - C11465) * C50067) *
                 C16925 +
             ((C14462 - C14461 + C14464 - C14463) * C49175 +
              (C14466 - C14465 + C14468 - C14467) * C50336 +
              (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
               C50286 * C2633) *
                  C49168 +
              (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50125 * C276 +
           (((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50125 * C277 +
           (((C13560 - C13559 + C13562 - C13561) * C49175 +
             (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
             C13590 * C50067) *
                C16925 +
            ((C14797 - C14798 + C14799 - C14800) * C49175 +
             (C14801 - C14802 + C14803 - C14804) * C50336 +
             (C13575 - C13576 + C13577 - C13578) * C49168 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50125 * C276 +
           ((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
             C13992 * C50067) *
                C16925 +
            (C13589 * C49175 + C13590 * C50336 +
             (C10751 - C10752 + C10753 - C10754) * C49168 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C277 +
           ((C13587 * C49175 + C13588 * C50336 +
             (C10752 - C10751 + C10754 - C10753) * C49168 +
             (C10756 - C10755 + C10758 - C10757) * C50067) *
                C16925 +
            ((C13576 - C13575 + C13578 - C13577) * C49175 +
             (C13580 - C13579 + C13582 - C13581) * C50336 +
             (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C49168 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C49175 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50336 +
            (C10537 - C10538 + C10539 - C10540) * C49168 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C16925 +
           ((C13543 - C13544 + C13545 - C13546) * C49175 +
            (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
            C13584 * C50067) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C10538 - C10537 + C10540 - C10539) * C49175 +
            (C10542 - C10541 + C10544 - C10543) * C50336 +
            (C10546 - C10545 + C10548 - C10547) * C49168 +
            (C10550 - C10549 + C10552 - C10551) * C50067) *
               C16925 +
           (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
            C11096 * C50067) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C10577 * C49175 + C10578 * C50336 +
            (C10554 - C10553 + C10556 - C10555) * C49168 +
            (C10558 - C10557 + C10560 - C10559) * C50067) *
               C16925 +
           (C13991 * C49175 + C13992 * C50336 +
            (C11087 - C11088 + C11089 - C11090) * C49168 +
            (C11091 - C11092 + C11093 - C11094) * C50067) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C10579 * C49175 + C10580 * C50336 +
            (C10562 - C10561 + C10564 - C10563) * C49168 +
            (C10566 - C10565 + C10568 - C10567) * C50067) *
               C16925 +
           ((C11088 - C11087 + C11090 - C11089) * C49175 +
            (C11092 - C11091 + C11094 - C11093) * C50336 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C49168 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C50067) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C443 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C444 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C49175 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50336 +
             (C10921 - C10922 + C10923 - C10924) * C49168 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C16925 +
            ((C14999 - C15000 + C15001 - C15002) * C49175 +
             (C15003 - C15004 + C15005 - C15006) * C50336 +
             (C13785 - C13786 + C13787 - C13788) * C49168 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C443 +
           (((C10906 - C10905 + C10908 - C10907) * C49175 +
             (C10910 - C10909 + C10912 - C10911) * C50336 +
             (C10914 - C10913 + C10916 - C10915) * C49168 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C16925 +
            (C14471 * C49175 + C14472 * C50336 +
             (C11459 - C11460 + C11461 - C11462) * C49168 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C444 +
           (((C10922 - C10921 + C10924 - C10923) * C49175 +
             (C10926 - C10925 + C10928 - C10927) * C50336 +
             (C10930 - C10929 + C10932 - C10931) * C49168 +
             (C10934 - C10933 + C10936 - C10935) * C50067) *
                C16925 +
            ((C13786 - C13785 + C13788 - C13787) * C49175 +
             (C13790 - C13789 + C13792 - C13791) * C50336 +
             (C10534 * C1189 - C50365 * C1195 + C10535 * C6004 -
              C50286 * C6005) *
                 C49168 +
             (C10534 * C1196 - C50365 * C1201 + C10535 * C6006 -
              C50286 * C6007) *
                 C50067) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50352 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50352 +
           (((C10906 - C10905 + C10908 - C10907) * C49175 +
             (C10910 - C10909 + C10912 - C10911) * C50336 +
             (C10914 - C10913 + C10916 - C10915) * C49168 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C16925 +
            (C14471 * C49175 + C14472 * C50336 +
             (C11459 - C11460 + C11461 - C11462) * C49168 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          (((C10577 * C49175 + C10578 * C50336 +
             (C10554 - C10553 + C10556 - C10555) * C49168 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C16925 +
            (C13991 * C49175 + C13992 * C50336 +
             (C11087 - C11088 + C11089 - C11090) * C49168 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50352 +
           ((C11255 * C49175 + C11256 * C50336 +
             (C11248 - C11247 + C11250 - C11249) * C49168 +
             (C11252 - C11251 + C11254 - C11253) * C50067) *
                C16925 +
            ((C11460 - C11459 + C11462 - C11461) * C49175 +
             (C11464 - C11463 + C11466 - C11465) * C50336 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C49168 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C49175 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50336 +
            (C10537 - C10538 + C10539 - C10540) * C49168 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C16925 +
           ((C13543 - C13544 + C13545 - C13546) * C49175 +
            (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
            C13584 * C50067) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C10538 - C10537 + C10540 - C10539) * C49175 +
            (C10542 - C10541 + C10544 - C10543) * C50336 +
            (C10546 - C10545 + C10548 - C10547) * C49168 +
            (C10550 - C10549 + C10552 - C10551) * C50067) *
               C16925 +
           (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
            C11096 * C50067) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C10577 * C49175 + C10578 * C50336 +
            (C10554 - C10553 + C10556 - C10555) * C49168 +
            (C10558 - C10557 + C10560 - C10559) * C50067) *
               C16925 +
           (C13991 * C49175 + C13992 * C50336 +
            (C11087 - C11088 + C11089 - C11090) * C49168 +
            (C11091 - C11092 + C11093 - C11094) * C50067) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C10579 * C49175 + C10580 * C50336 +
            (C10562 - C10561 + C10564 - C10563) * C49168 +
            (C10566 - C10565 + C10568 - C10567) * C50067) *
               C16925 +
           ((C11088 - C11087 + C11090 - C11089) * C49175 +
            (C11092 - C11091 + C11094 - C11093) * C50336 +
            (C10534 * C289 - C50365 * C307 + C10535 * C871 - C50286 * C880) *
                C49168 +
            (C10534 * C308 - C50365 * C319 + C10535 * C881 - C50286 * C886) *
                C50067) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50125 * C276 +
           (((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50125 * C277 +
           (((C13560 - C13559 + C13562 - C13561) * C49175 +
             (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
             C13590 * C50067) *
                C16925 +
            ((C14797 - C14798 + C14799 - C14800) * C49175 +
             (C14801 - C14802 + C14803 - C14804) * C50336 +
             (C13575 - C13576 + C13577 - C13578) * C49168 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50125 * C276 +
           ((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
             C13992 * C50067) *
                C16925 +
            (C13589 * C49175 + C13590 * C50336 +
             (C10751 - C10752 + C10753 - C10754) * C49168 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C277 +
           ((C13587 * C49175 + C13588 * C50336 +
             (C10752 - C10751 + C10754 - C10753) * C49168 +
             (C10756 - C10755 + C10758 - C10757) * C50067) *
                C16925 +
            ((C13576 - C13575 + C13578 - C13577) * C49175 +
             (C13580 - C13579 + C13582 - C13581) * C50336 +
             (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C49168 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50125 * C50396 +
           (((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50397 +
           (((C13560 - C13559 + C13562 - C13561) * C49175 +
             (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
             C13590 * C50067) *
                C16925 +
            ((C14797 - C14798 + C14799 - C14800) * C49175 +
             (C14801 - C14802 + C14803 - C14804) * C50336 +
             (C13575 - C13576 + C13577 - C13578) * C49168 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50125 * C50396 +
           ((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
             C13992 * C50067) *
                C16925 +
            (C13589 * C49175 + C13590 * C50336 +
             (C10751 - C10752 + C10753 - C10754) * C49168 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50397 +
           ((C13587 * C49175 + C13588 * C50336 +
             (C10752 - C10751 + C10754 - C10753) * C49168 +
             (C10756 - C10755 + C10758 - C10757) * C50067) *
                C16925 +
            ((C13576 - C13575 + C13578 - C13577) * C49175 +
             (C13580 - C13579 + C13582 - C13581) * C50336 +
             (C10534 * C1075 - C50365 * C1081 + C10535 * C3146 -
              C50286 * C3151) *
                 C49168 +
             (C10534 * C1082 - C50365 * C1087 + C10535 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50352 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50396 +
          ((((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50352 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
             C14472 * C50067) *
                C16925 +
            ((C15653 - C15654 + C15655 - C15656) * C49175 +
             (C15657 - C15658 + C15659 - C15660) * C50336 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50189) *
              C50397 +
          ((((C13560 - C13559 + C13562 - C13561) * C49175 +
             (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
             C13590 * C50067) *
                C16925 +
            ((C14797 - C14798 + C14799 - C14800) * C49175 +
             (C14801 - C14802 + C14803 - C14804) * C50336 +
             (C13575 - C13576 + C13577 - C13578) * C49168 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C50352 +
           (((C15654 - C15653 + C15656 - C15655) * C49175 +
             (C15658 - C15657 + C15660 - C15659) * C50336 +
             (C14462 - C14461 + C14464 - C14463) * C49168 +
             (C14466 - C14465 + C14468 - C14467) * C50067) *
                C16925 +
            ((C10534 * C3144 - C50365 * C3147 + C10535 * C3587 -
              C50286 * C3589) *
                 C49175 +
             (C10534 * C3148 - C50365 * C3153 + C10535 * C3590 -
              C50286 * C3593) *
                 C50336 +
             (C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
              C50286 * C3591) *
                 C49168 +
             (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C49175 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50336 +
            (C10537 - C10538 + C10539 - C10540) * C49168 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C16925 +
           ((C13543 - C13544 + C13545 - C13546) * C49175 +
            (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
            C13584 * C50067) *
               C50260) *
              C50125 * C1068 +
          (((C13544 - C13543 + C13546 - C13545) * C49175 +
            (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
            C13586 * C50067) *
               C16925 +
           ((C13559 - C13560 + C13561 - C13562) * C49175 +
            (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
            C13588 * C50067) *
               C50260) *
              C50125 * C1069 +
          (((C13560 - C13559 + C13562 - C13561) * C49175 +
            (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
            C13590 * C50067) *
               C16925 +
           ((C14797 - C14798 + C14799 - C14800) * C49175 +
            (C14801 - C14802 + C14803 - C14804) * C50336 +
            (C13575 - C13576 + C13577 - C13578) * C49168 +
            (C13579 - C13580 + C13581 - C13582) * C50067) *
               C50260) *
              C50125 * C1070 +
          (((C14798 - C14797 + C14800 - C14799) * C49175 +
            (C14802 - C14801 + C14804 - C14803) * C50336 +
            (C13576 - C13575 + C13578 - C13577) * C49168 +
            (C13580 - C13579 + C13582 - C13581) * C50067) *
               C16925 +
           ((C10534 * C2414 - C50365 * C2417 + C10535 * C4089 -
             C50286 * C4091) *
                C49175 +
            (C10534 * C2418 - C50365 * C2423 + C10535 * C4092 -
             C50286 * C4095) *
                C50336 +
            (C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
             C50286 * C4093) *
                C49168 +
            (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
             C50286 * C4096) *
                C50067) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50125 * C997 +
           (((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50125 * C997 +
           ((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
             C13992 * C50067) *
                C16925 +
            (C13589 * C49175 + C13590 * C50336 +
             (C10751 - C10752 + C10753 - C10754) * C49168 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C10577 * C49175 + C10578 * C50336 +
             (C10554 - C10553 + C10556 - C10555) * C49168 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C16925 +
            (C13991 * C49175 + C13992 * C50336 +
             (C11087 - C11088 + C11089 - C11090) * C49168 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50125 * C997 +
           ((C11095 * C49175 + C11096 * C50336 +
             (C11088 - C11087 + C11090 - C11089) * C49168 +
             (C11092 - C11091 + C11094 - C11093) * C50067) *
                C16925 +
            ((C10752 - C10751 + C10754 - C10753) * C49175 +
             (C10756 - C10755 + C10758 - C10757) * C50336 +
             (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                 C49168 +
             (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C443 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C444 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C49175 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50336 +
             (C10921 - C10922 + C10923 - C10924) * C49168 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C16925 +
            ((C14999 - C15000 + C15001 - C15002) * C49175 +
             (C15003 - C15004 + C15005 - C15006) * C50336 +
             (C13785 - C13786 + C13787 - C13788) * C49168 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C445) *
              C997 +
          ((((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C443 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
             C14472 * C50067) *
                C16925 +
            ((C15653 - C15654 + C15655 - C15656) * C49175 +
             (C15657 - C15658 + C15659 - C15660) * C50336 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C444 +
           (((C15000 - C14999 + C15002 - C15001) * C49175 +
             (C15004 - C15003 + C15006 - C15005) * C50336 +
             (C13786 - C13785 + C13788 - C13787) * C49168 +
             (C13790 - C13789 + C13792 - C13791) * C50067) *
                C16925 +
            ((C10534 * C2626 - C50365 * C2629 + C10535 * C4502 -
              C50286 * C4508) *
                 C49175 +
             (C10534 * C2630 - C50365 * C2635 + C10535 * C4509 -
              C50286 * C4514) *
                 C50336 +
             (C10534 * C2627 - C50365 * C2631 + C10535 * C4503 -
              C50286 * C4510) *
                 C49168 +
             (C10534 * C2632 - C50365 * C2636 + C10535 * C4511 -
              C50286 * C4515) *
                 C50067) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C49175 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C50336 +
              (C10537 - C10538 + C10539 - C10540) * C49168 +
              (C10541 - C10542 + C10543 - C10544) * C50067) *
                 C16925 +
             ((C13543 - C13544 + C13545 - C13546) * C49175 +
              (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
              C13584 * C50067) *
                 C50260) *
                C50352 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C49175 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C50336 +
              (C10905 - C10906 + C10907 - C10908) * C49168 +
              (C10909 - C10910 + C10911 - C10912) * C50067) *
                 C16925 +
             ((C14445 - C14446 + C14447 - C14448) * C49175 +
              (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
              C14470 * C50067) *
                 C50260) *
                C50189) *
               C997 +
           ((((C13544 - C13543 + C13546 - C13545) * C49175 +
              (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
              C13586 * C50067) *
                 C16925 +
             ((C13559 - C13560 + C13561 - C13562) * C49175 +
              (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
              C13588 * C50067) *
                 C50260) *
                C50352 +
            (((C14446 - C14445 + C14448 - C14447) * C49175 +
              (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
              C14472 * C50067) *
                 C16925 +
             ((C15653 - C15654 + C15655 - C15656) * C49175 +
              (C15657 - C15658 + C15659 - C15660) * C50336 +
              (C14461 - C14462 + C14463 - C14464) * C49168 +
              (C14465 - C14466 + C14467 - C14468) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C10538 - C10537 + C10540 - C10539) * C49175 +
              (C10542 - C10541 + C10544 - C10543) * C50336 +
              (C10546 - C10545 + C10548 - C10547) * C49168 +
              (C10550 - C10549 + C10552 - C10551) * C50067) *
                 C16925 +
             (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
              C11096 * C50067) *
                 C50260) *
                C50352 +
            (((C10906 - C10905 + C10908 - C10907) * C49175 +
              (C10910 - C10909 + C10912 - C10911) * C50336 +
              (C10914 - C10913 + C10916 - C10915) * C49168 +
              (C10918 - C10917 + C10920 - C10919) * C50067) *
                 C16925 +
             (C14471 * C49175 + C14472 * C50336 +
              (C11459 - C11460 + C11461 - C11462) * C49168 +
              (C11463 - C11464 + C11465 - C11466) * C50067) *
                 C50260) *
                C50189) *
               C997 +
           (((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
              C13992 * C50067) *
                 C16925 +
             (C13589 * C49175 + C13590 * C50336 +
              (C10751 - C10752 + C10753 - C10754) * C49168 +
              (C10755 - C10756 + C10757 - C10758) * C50067) *
                 C50260) *
                C50352 +
            ((C14469 * C49175 + C14470 * C50336 +
              (C11460 - C11459 + C11462 - C11461) * C49168 +
              (C11464 - C11463 + C11466 - C11465) * C50067) *
                 C16925 +
             ((C14462 - C14461 + C14464 - C14463) * C49175 +
              (C14466 - C14465 + C14468 - C14467) * C50336 +
              (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
               C50286 * C2633) *
                  C49168 +
              (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50125 * C997 +
           (((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50125 * C997 +
           ((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
             C13992 * C50067) *
                C16925 +
            (C13589 * C49175 + C13590 * C50336 +
             (C10751 - C10752 + C10753 - C10754) * C49168 +
             (C10755 - C10756 + C10757 - C10758) * C50067) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C10577 * C49175 + C10578 * C50336 +
             (C10554 - C10553 + C10556 - C10555) * C49168 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C16925 +
            (C13991 * C49175 + C13992 * C50336 +
             (C11087 - C11088 + C11089 - C11090) * C49168 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C50125 * C997 +
           ((C11095 * C49175 + C11096 * C50336 +
             (C11088 - C11087 + C11090 - C11089) * C49168 +
             (C11092 - C11091 + C11094 - C11093) * C50067) *
                C16925 +
            ((C10752 - C10751 + C10754 - C10753) * C49175 +
             (C10756 - C10755 + C10758 - C10757) * C50336 +
             (C10534 * C288 - C50365 * C305 + C10535 * C1537 - C50286 * C1544) *
                 C49168 +
             (C10534 * C306 - C50365 * C318 + C10535 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C49175 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50336 +
            (C10537 - C10538 + C10539 - C10540) * C49168 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C16925 +
           ((C13543 - C13544 + C13545 - C13546) * C49175 +
            (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
            C13584 * C50067) *
               C50260) *
              C50125 * C1068 +
          (((C13544 - C13543 + C13546 - C13545) * C49175 +
            (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
            C13586 * C50067) *
               C16925 +
           ((C13559 - C13560 + C13561 - C13562) * C49175 +
            (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
            C13588 * C50067) *
               C50260) *
              C50125 * C1069 +
          (((C13560 - C13559 + C13562 - C13561) * C49175 +
            (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
            C13590 * C50067) *
               C16925 +
           ((C14797 - C14798 + C14799 - C14800) * C49175 +
            (C14801 - C14802 + C14803 - C14804) * C50336 +
            (C13575 - C13576 + C13577 - C13578) * C49168 +
            (C13579 - C13580 + C13581 - C13582) * C50067) *
               C50260) *
              C50125 * C1070 +
          (((C14798 - C14797 + C14800 - C14799) * C49175 +
            (C14802 - C14801 + C14804 - C14803) * C50336 +
            (C13576 - C13575 + C13578 - C13577) * C49168 +
            (C13580 - C13579 + C13582 - C13581) * C50067) *
               C16925 +
           ((C10534 * C2414 - C50365 * C2417 + C10535 * C4089 -
             C50286 * C4091) *
                C49175 +
            (C10534 * C2418 - C50365 * C2423 + C10535 * C4092 -
             C50286 * C4095) *
                C50336 +
            (C10534 * C2415 - C50365 * C2419 + C10535 * C4090 -
             C50286 * C4093) *
                C49168 +
            (C10534 * C2420 - C50365 * C2424 + C10535 * C4094 -
             C50286 * C4096) *
                C50067) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                  C49175 +
              (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                  C50336 +
              (C10537 - C10538 + C10539 - C10540) * C49168 +
              (C10541 - C10542 + C10543 - C10544) * C50067) *
                 C16925 +
             ((C13543 - C13544 + C13545 - C13546) * C49175 +
              (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
              C13584 * C50067) *
                 C50260) *
                C1648 +
            (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                  C49175 +
              (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                  C50336 +
              (C10905 - C10906 + C10907 - C10908) * C49168 +
              (C10909 - C10910 + C10911 - C10912) * C50067) *
                 C16925 +
             ((C14445 - C14446 + C14447 - C14448) * C49175 +
              (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
              C14470 * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C13544 - C13543 + C13546 - C13545) * C49175 +
              (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
              C13586 * C50067) *
                 C16925 +
             ((C13559 - C13560 + C13561 - C13562) * C49175 +
              (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
              C13588 * C50067) *
                 C50260) *
                C1648 +
            (((C14446 - C14445 + C14448 - C14447) * C49175 +
              (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
              C14472 * C50067) *
                 C16925 +
             ((C15653 - C15654 + C15655 - C15656) * C49175 +
              (C15657 - C15658 + C15659 - C15660) * C50336 +
              (C14461 - C14462 + C14463 - C14464) * C49168 +
              (C14465 - C14466 + C14467 - C14468) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C10538 - C10537 + C10540 - C10539) * C49175 +
              (C10542 - C10541 + C10544 - C10543) * C50336 +
              (C10546 - C10545 + C10548 - C10547) * C49168 +
              (C10550 - C10549 + C10552 - C10551) * C50067) *
                 C16925 +
             (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
              C11096 * C50067) *
                 C50260) *
                C1648 +
            (((C10906 - C10905 + C10908 - C10907) * C49175 +
              (C10910 - C10909 + C10912 - C10911) * C50336 +
              (C10914 - C10913 + C10916 - C10915) * C49168 +
              (C10918 - C10917 + C10920 - C10919) * C50067) *
                 C16925 +
             (C14471 * C49175 + C14472 * C50336 +
              (C11459 - C11460 + C11461 - C11462) * C49168 +
              (C11463 - C11464 + C11465 - C11466) * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           (((C13583 * C49175 + C13584 * C50336 + C13991 * C49168 +
              C13992 * C50067) *
                 C16925 +
             (C13589 * C49175 + C13590 * C50336 +
              (C10751 - C10752 + C10753 - C10754) * C49168 +
              (C10755 - C10756 + C10757 - C10758) * C50067) *
                 C50260) *
                C1648 +
            ((C14469 * C49175 + C14470 * C50336 +
              (C11460 - C11459 + C11462 - C11461) * C49168 +
              (C11464 - C11463 + C11466 - C11465) * C50067) *
                 C16925 +
             ((C14462 - C14461 + C14464 - C14463) * C49175 +
              (C14466 - C14465 + C14468 - C14467) * C50336 +
              (C10534 * C1536 - C50365 * C1542 + C10535 * C2628 -
               C50286 * C2633) *
                  C49168 +
              (C10534 * C1543 - C50365 * C1548 + C10535 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50398 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50399 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C49175 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50336 +
             (C10921 - C10922 + C10923 - C10924) * C49168 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C16925 +
            ((C14999 - C15000 + C15001 - C15002) * C49175 +
             (C15003 - C15004 + C15005 - C15006) * C50336 +
             (C13785 - C13786 + C13787 - C13788) * C49168 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C2064) *
              C50351 +
          ((((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C50398 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
             C14472 * C50067) *
                C16925 +
            ((C15653 - C15654 + C15655 - C15656) * C49175 +
             (C15657 - C15658 + C15659 - C15660) * C50336 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50399 +
           (((C15000 - C14999 + C15002 - C15001) * C49175 +
             (C15004 - C15003 + C15006 - C15005) * C50336 +
             (C13786 - C13785 + C13788 - C13787) * C49168 +
             (C13790 - C13789 + C13792 - C13791) * C50067) *
                C16925 +
            ((C10534 * C2626 - C50365 * C2629 + C10535 * C4502 -
              C50286 * C4508) *
                 C49175 +
             (C10534 * C2630 - C50365 * C2635 + C10535 * C4509 -
              C50286 * C4514) *
                 C50336 +
             (C10534 * C2627 - C50365 * C2631 + C10535 * C4503 -
              C50286 * C4510) *
                 C49168 +
             (C10534 * C2632 - C50365 * C2636 + C10535 * C4511 -
              C50286 * C4515) *
                 C50067) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C276 +
          ((((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
             C14472 * C50067) *
                C16925 +
            ((C15653 - C15654 + C15655 - C15656) * C49175 +
             (C15657 - C15658 + C15659 - C15660) * C50336 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50189) *
              C277 +
          ((((C13560 - C13559 + C13562 - C13561) * C49175 +
             (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
             C13590 * C50067) *
                C16925 +
            ((C14797 - C14798 + C14799 - C14800) * C49175 +
             (C14801 - C14802 + C14803 - C14804) * C50336 +
             (C13575 - C13576 + C13577 - C13578) * C49168 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C1648 +
           (((C15654 - C15653 + C15656 - C15655) * C49175 +
             (C15658 - C15657 + C15660 - C15659) * C50336 +
             (C14462 - C14461 + C14464 - C14463) * C49168 +
             (C14466 - C14465 + C14468 - C14467) * C50067) *
                C16925 +
            ((C10534 * C3144 - C50365 * C3147 + C10535 * C3587 -
              C50286 * C3589) *
                 C49175 +
             (C10534 * C3148 - C50365 * C3153 + C10535 * C3590 -
              C50286 * C3593) *
                 C50336 +
             (C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
              C50286 * C3591) *
                 C49168 +
             (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C1648 +
           (((C10906 - C10905 + C10908 - C10907) * C49175 +
             (C10910 - C10909 + C10912 - C10911) * C50336 +
             (C10914 - C10913 + C10916 - C10915) * C49168 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C16925 +
            (C14471 * C49175 + C14472 * C50336 +
             (C11459 - C11460 + C11461 - C11462) * C49168 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C10577 * C49175 + C10578 * C50336 +
             (C10554 - C10553 + C10556 - C10555) * C49168 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C16925 +
            (C13991 * C49175 + C13992 * C50336 +
             (C11087 - C11088 + C11089 - C11090) * C49168 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C1648 +
           ((C11255 * C49175 + C11256 * C50336 +
             (C11248 - C11247 + C11250 - C11249) * C49168 +
             (C11252 - C11251 + C11254 - C11253) * C50067) *
                C16925 +
            ((C11460 - C11459 + C11462 - C11461) * C49175 +
             (C11464 - C11463 + C11466 - C11465) * C50336 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C49168 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                C49175 +
            (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                C50336 +
            (C10537 - C10538 + C10539 - C10540) * C49168 +
            (C10541 - C10542 + C10543 - C10544) * C50067) *
               C16925 +
           ((C13543 - C13544 + C13545 - C13546) * C49175 +
            (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
            C13584 * C50067) *
               C50260) *
              C1814 +
          (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                C49175 +
            (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                C50336 +
            (C10905 - C10906 + C10907 - C10908) * C49168 +
            (C10909 - C10910 + C10911 - C10912) * C50067) *
               C16925 +
           ((C14445 - C14446 + C14447 - C14448) * C49175 +
            (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
            C14470 * C50067) *
               C50260) *
              C1815 +
          (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                C49175 +
            (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                C50336 +
            (C10921 - C10922 + C10923 - C10924) * C49168 +
            (C10925 - C10926 + C10927 - C10928) * C50067) *
               C16925 +
           ((C14999 - C15000 + C15001 - C15002) * C49175 +
            (C15003 - C15004 + C15005 - C15006) * C50336 +
            (C13785 - C13786 + C13787 - C13788) * C49168 +
            (C13789 - C13790 + C13791 - C13792) * C50067) *
               C50260) *
              C1816 +
          (((C10534 * C1818 - C50365 * C1822 + C10535 * C5458 -
             C50286 * C5461) *
                C49175 +
            (C10534 * C1823 - C50365 * C1830 + C10535 * C5462 -
             C50286 * C5467) *
                C50336 +
            (C10534 * C1819 - C50365 * C1824 + C10535 * C5459 -
             C50286 * C5463) *
                C49168 +
            (C10534 * C1825 - C50365 * C1831 + C10535 * C5464 -
             C50286 * C5468) *
                C50067) *
               C16925 +
           ((C10534 * C4500 - C50365 * C4504 + C10535 * C6410 -
             C50286 * C6412) *
                C49175 +
            (C10534 * C4505 - C50365 * C4512 + C10535 * C6413 -
             C50286 * C6416) *
                C50336 +
            (C10534 * C4501 - C50365 * C4506 + C10535 * C6411 -
             C50286 * C6414) *
                C49168 +
            (C10534 * C4507 - C50365 * C4513 + C10535 * C6415 -
             C50286 * C6417) *
                C50067) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C50398 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50399 +
           (((C50365 * C464 - C10534 * C450 + C50286 * C1822 - C10535 * C1818) *
                 C49175 +
             (C50365 * C480 - C10534 * C465 + C50286 * C1830 - C10535 * C1823) *
                 C50336 +
             (C10921 - C10922 + C10923 - C10924) * C49168 +
             (C10925 - C10926 + C10927 - C10928) * C50067) *
                C16925 +
            ((C14999 - C15000 + C15001 - C15002) * C49175 +
             (C15003 - C15004 + C15005 - C15006) * C50336 +
             (C13785 - C13786 + C13787 - C13788) * C49168 +
             (C13789 - C13790 + C13791 - C13792) * C50067) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C50398 +
           (((C10906 - C10905 + C10908 - C10907) * C49175 +
             (C10910 - C10909 + C10912 - C10911) * C50336 +
             (C10914 - C10913 + C10916 - C10915) * C49168 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C16925 +
            (C14471 * C49175 + C14472 * C50336 +
             (C11459 - C11460 + C11461 - C11462) * C49168 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50399 +
           (((C10922 - C10921 + C10924 - C10923) * C49175 +
             (C10926 - C10925 + C10928 - C10927) * C50336 +
             (C10930 - C10929 + C10932 - C10931) * C49168 +
             (C10934 - C10933 + C10936 - C10935) * C50067) *
                C16925 +
            ((C13786 - C13785 + C13788 - C13787) * C49175 +
             (C13790 - C13789 + C13792 - C13791) * C50336 +
             (C10534 * C1189 - C50365 * C1195 + C10535 * C6004 -
              C50286 * C6005) *
                 C49168 +
             (C10534 * C1196 - C50365 * C1201 + C10535 * C6006 -
              C50286 * C6007) *
                 C50067) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C10538 - C10537 + C10540 - C10539) * C49175 +
             (C10542 - C10541 + C10544 - C10543) * C50336 +
             (C10546 - C10545 + C10548 - C10547) * C49168 +
             (C10550 - C10549 + C10552 - C10551) * C50067) *
                C16925 +
            (C13585 * C49175 + C13586 * C50336 + C11095 * C49168 +
             C11096 * C50067) *
                C50260) *
               C1648 +
           (((C10906 - C10905 + C10908 - C10907) * C49175 +
             (C10910 - C10909 + C10912 - C10911) * C50336 +
             (C10914 - C10913 + C10916 - C10915) * C49168 +
             (C10918 - C10917 + C10920 - C10919) * C50067) *
                C16925 +
            (C14471 * C49175 + C14472 * C50336 +
             (C11459 - C11460 + C11461 - C11462) * C49168 +
             (C11463 - C11464 + C11465 - C11466) * C50067) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C10577 * C49175 + C10578 * C50336 +
             (C10554 - C10553 + C10556 - C10555) * C49168 +
             (C10558 - C10557 + C10560 - C10559) * C50067) *
                C16925 +
            (C13991 * C49175 + C13992 * C50336 +
             (C11087 - C11088 + C11089 - C11090) * C49168 +
             (C11091 - C11092 + C11093 - C11094) * C50067) *
                C50260) *
               C1648 +
           ((C11255 * C49175 + C11256 * C50336 +
             (C11248 - C11247 + C11250 - C11249) * C49168 +
             (C11252 - C11251 + C11254 - C11253) * C50067) *
                C16925 +
            ((C11460 - C11459 + C11462 - C11461) * C49175 +
             (C11464 - C11463 + C11466 - C11465) * C50336 +
             (C10534 * C870 - C50365 * C878 + C10535 * C1190 - C50286 * C1197) *
                 C49168 +
             (C10534 * C879 - C50365 * C885 + C10535 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50365 * C129 - C10534 * C122 + C50286 * C456 - C10535 * C446) *
                 C49175 +
             (C50365 * C143 - C10534 * C130 + C50286 * C476 - C10535 * C457) *
                 C50336 +
             (C10537 - C10538 + C10539 - C10540) * C49168 +
             (C10541 - C10542 + C10543 - C10544) * C50067) *
                C16925 +
            ((C13543 - C13544 + C13545 - C13546) * C49175 +
             (C13547 - C13548 + C13549 - C13550) * C50336 + C13583 * C49168 +
             C13584 * C50067) *
                C50260) *
               C1648 +
           (((C10534 * C446 - C50365 * C456 + C10535 * C450 - C50286 * C464) *
                 C49175 +
             (C10534 * C457 - C50365 * C476 + C10535 * C465 - C50286 * C480) *
                 C50336 +
             (C10905 - C10906 + C10907 - C10908) * C49168 +
             (C10909 - C10910 + C10911 - C10912) * C50067) *
                C16925 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50336 + C14469 * C49168 +
             C14470 * C50067) *
                C50260) *
               C50189) *
              C276 +
          ((((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50336 + C13585 * C49168 +
             C13586 * C50067) *
                C16925 +
            ((C13559 - C13560 + C13561 - C13562) * C49175 +
             (C13563 - C13564 + C13565 - C13566) * C50336 + C13587 * C49168 +
             C13588 * C50067) *
                C50260) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50336 + C14471 * C49168 +
             C14472 * C50067) *
                C16925 +
            ((C15653 - C15654 + C15655 - C15656) * C49175 +
             (C15657 - C15658 + C15659 - C15660) * C50336 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C50067) *
                C50260) *
               C50189) *
              C277 +
          ((((C13560 - C13559 + C13562 - C13561) * C49175 +
             (C13564 - C13563 + C13566 - C13565) * C50336 + C13589 * C49168 +
             C13590 * C50067) *
                C16925 +
            ((C14797 - C14798 + C14799 - C14800) * C49175 +
             (C14801 - C14802 + C14803 - C14804) * C50336 +
             (C13575 - C13576 + C13577 - C13578) * C49168 +
             (C13579 - C13580 + C13581 - C13582) * C50067) *
                C50260) *
               C1648 +
           (((C15654 - C15653 + C15656 - C15655) * C49175 +
             (C15658 - C15657 + C15660 - C15659) * C50336 +
             (C14462 - C14461 + C14464 - C14463) * C49168 +
             (C14466 - C14465 + C14468 - C14467) * C50067) *
                C16925 +
            ((C10534 * C3144 - C50365 * C3147 + C10535 * C3587 -
              C50286 * C3589) *
                 C49175 +
             (C10534 * C3148 - C50365 * C3153 + C10535 * C3590 -
              C50286 * C3593) *
                 C50336 +
             (C10534 * C3145 - C50365 * C3149 + C10535 * C3588 -
              C50286 * C3591) *
                 C49168 +
             (C10534 * C3150 - C50365 * C3154 + C10535 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C50351 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C50351 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50125 * C50351 +
           ((C618 * C16927 + C619 * C16922 + C620 * C16928 + C621 * C16923 +
             (C623 - C622) * C16929 + (C625 - C624) * C16924) *
                C16925 +
            (C2455 * C16927 + C2456 * C16922 + (C343 - C342) * C16928 +
             (C345 - C344) * C16923 + (C117 * C290 - C50222 * C309) * C16929 +
             (C117 * C310 - C50222 * C320) * C16924) *
                C50260) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C50351 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C50161) *
              C50394 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C50351 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50161) *
              C50395 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50125 * C50351 +
           ((C618 * C19531 + C619 * C50062) * C19527 +
            (C2455 * C19531 + C2456 * C50062) * C19528 +
            ((C2458 - C2457) * C19531 + (C2460 - C2459) * C50062) * C19529 +
            ((C117 * C2416 - C50222 * C2421) * C19531 +
             (C117 * C2422 - C50222 * C2425) * C50062) *
                C19530) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C16927 +
              (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
              (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                 C16925 +
             ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
              C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
              C2798 * C16924) *
                 C50260) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C16927 +
              (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
              (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                 C16925 +
             ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
              C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
              C8486 * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
              C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                 C16925 +
             ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
              C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
              C2456 * C16924) *
                 C50260) *
                C50352 +
            (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
              C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
              C8682 * C16924) *
                 C16925 +
             ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
              C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
              (C2949 - C2950) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
              (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
              C176 * C16924) *
                 C16925 +
             (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
              C620 * C16929 + C621 * C16924) *
                 C50260) *
                C50352 +
            (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
              (C492 - C491) * C16928 + (C494 - C493) * C16923 +
              (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                 C16925 +
             (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
              C8682 * C16923 + (C896 - C897) * C16929 +
              (C898 - C899) * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           (((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
              C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                 C16925 +
             (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
              C2800 * C16923 + (C342 - C343) * C16929 +
              (C344 - C345) * C16924) *
                 C50260) *
                C50352 +
            ((C3161 * C16927 + C3162 * C16922 + C8485 * C16928 +
              C8486 * C16923 + (C897 - C896) * C16929 +
              (C899 - C898) * C16924) *
                 C16925 +
             (C3167 * C16927 + C3168 * C16922 + (C2948 - C2947) * C16928 +
              (C2950 - C2949) * C16923 +
              (C117 * C1537 - C50222 * C1544) * C16929 +
              (C117 * C1545 - C50222 * C1549) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C19531 +
              (C50222 * C143 - C117 * C130) * C50062) *
                 C19527 +
             ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
             C19639 * C19529 + C19644 * C19530) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C19531 +
              (C117 * C457 - C50222 * C476) * C50062) *
                 C19527 +
             ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
             (C4098 * C19531 + C4099 * C50062) * C19529 +
             ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
             ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
             (C3429 * C19531 + C3430 * C50062) * C19529 +
             ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
                C50352 +
            (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
             ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
             ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
             ((C50222 * C4091 - C117 * C4089) * C19531 +
              (C50222 * C4095 - C117 * C4092) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C279 +
          (((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
             (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
             C19643 * C19530) *
                C50352 +
            (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
             (C3169 * C19531 + C3170 * C50062) * C19528 +
             (C3171 * C19531 + C3172 * C50062) * C19529 +
             ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
                C50189) *
               C50351 +
           (((C2431 * C19531 + C2432 * C50062) * C19527 +
             (C2437 * C19531 + C2438 * C50062) * C19528 +
             (C2467 * C19531 + C2468 * C50062) * C19529 +
             ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
                C50352 +
            ((C3161 * C19531 + C3162 * C50062) * C19527 +
             (C3167 * C19531 + C3168 * C50062) * C19528 +
             ((C3174 - C3173) * C19531 + (C3176 - C3175) * C50062) * C19529 +
             ((C117 * C4090 - C50222 * C4093) * C19531 +
              (C117 * C4094 - C50222 * C4096) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C276 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C277 +
           ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C276 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C277 +
           ((C2441 * C16927 + C2442 * C16922 + C2455 * C16928 + C2456 * C16923 +
             (C343 - C342) * C16929 + (C345 - C344) * C16924) *
                C16925 +
            (C2465 * C16927 + C2466 * C16922 + (C2458 - C2457) * C16928 +
             (C2460 - C2459) * C16923 +
             (C117 * C1076 - C50222 * C1083) * C16929 +
             (C117 * C1084 - C50222 * C1088) * C16924) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C16927 + (C154 - C153) * C16922 +
            (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
            C176 * C16924) *
               C16925 +
           (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
            C620 * C16929 + C621 * C16924) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
            (C164 - C163) * C16929 + (C166 - C165) * C16924) *
               C16925 +
           (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
            (C622 - C623) * C16929 + (C624 - C625) * C16924) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C175 * C16927 + C176 * C16922 + C177 * C16928 + C178 * C16923 +
            (C168 - C167) * C16929 + (C170 - C169) * C16924) *
               C16925 +
           (C620 * C16927 + C621 * C16922 + (C623 - C622) * C16928 +
            (C625 - C624) * C16923 + (C117 * C613 - C50222 * C614) * C16929 +
            (C117 * C615 - C50222 * C616) * C16924) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C443 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C444 +
           (((C500 - C499) * C16927 + (C502 - C501) * C16922 +
             (C504 - C503) * C16928 + (C506 - C505) * C16923 +
             (C508 - C507) * C16929 + (C510 - C509) * C16924) *
                C16925 +
            ((C2644 - C2643) * C16927 + (C2646 - C2645) * C16922 +
             (C8188 - C8187) * C16928 + (C8190 - C8189) * C16923 +
             (C117 * C1190 - C50222 * C1197) * C16929 +
             (C117 * C1198 - C50222 * C1202) * C16924) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           (C2461 * C19531 + C2462 * C50062) * C19529 +
           ((C2444 - C2443) * C19531 + (C2446 - C2445) * C50062) * C19530) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
           (C2439 * C19531 + C2440 * C50062) * C19528 +
           (C2441 * C19531 + C2442 * C50062) * C19529 +
           (C2465 * C19531 + C2466 * C50062) * C19530) *
              C50125 * C50109 * C114 +
          ((C171 * C19531 + C172 * C50062) * C19527 +
           (C2797 * C19531 + C2798 * C50062) * C19528 +
           (C2799 * C19531 + C2800 * C50062) * C19529 +
           ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
              C50125 * C50109 * C115 +
          ((C175 * C19531 + C176 * C50062) * C19527 +
           (C620 * C19531 + C621 * C50062) * C19528 +
           ((C343 - C342) * C19531 + (C345 - C344) * C50062) * C19529 +
           ((C117 * C1076 - C50222 * C1083) * C19531 +
            (C117 * C1084 - C50222 * C1088) * C50062) *
               C19530) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C276 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C277 +
           (C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C50222 * C3422 - C117 * C3420) * C19531 +
             (C50222 * C3426 - C117 * C3423) * C50062) *
                C19530) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C276 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C277 +
           (C19642 * C19527 + C19643 * C19528 +
            ((C2452 - C2451) * C19531 + (C2454 - C2453) * C50062) * C19529 +
            ((C117 * C3421 - C50222 * C3424) * C19531 +
             (C117 * C3425 - C50222 * C3427) * C50062) *
                C19530) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            (C4098 * C19531 + C4099 * C50062) * C19529 +
            ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C50222 * C3589 - C117 * C3587) * C19531 +
             (C50222 * C3593 - C117 * C3590) * C50062) *
                C19530) *
               C445) *
              C50109 * C279 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C443 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C444 +
           (((C500 - C499) * C19531 + (C502 - C501) * C50062) * C19527 +
            ((C2644 - C2643) * C19531 + (C2646 - C2645) * C50062) * C19528 +
            ((C2648 - C2647) * C19531 + (C2650 - C2649) * C50062) * C19529 +
            ((C117 * C3588 - C50222 * C3591) * C19531 +
             (C117 * C3592 - C50222 * C3594) * C50062) *
                C19530) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50352 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50352 +
           ((C730 * C16927 + C731 * C16922 + C732 * C16928 + C733 * C16923 +
             (C735 - C734) * C16929 + (C737 - C736) * C16924) *
                C16925 +
            (C8485 * C16927 + C8486 * C16922 + (C897 - C896) * C16928 +
             (C899 - C898) * C16923 + (C117 * C871 - C50222 * C880) * C16929 +
             (C117 * C881 - C50222 * C886) * C16924) *
                C50260) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            (C4098 * C19531 + C4099 * C50062) * C19529 +
            ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
               C50189) *
              C50109 * C50394 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50352 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50189) *
              C50109 * C50395 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50352 +
           ((C730 * C19531 + C731 * C50062) * C19527 +
            (C8485 * C19531 + C8486 * C50062) * C19528 +
            ((C2948 - C2947) * C19531 + (C2950 - C2949) * C50062) * C19529 +
            ((C117 * C3146 - C50222 * C3151) * C19531 +
             (C117 * C3152 - C50222 * C3155) * C50062) *
                C19530) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C16927 + (C154 - C153) * C16922 +
            (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
            C176 * C16924) *
               C16925 +
           (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
            C620 * C16929 + C621 * C16924) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
            (C164 - C163) * C16929 + (C166 - C165) * C16924) *
               C16925 +
           (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
            (C622 - C623) * C16929 + (C624 - C625) * C16924) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C175 * C16927 + C176 * C16922 + C177 * C16928 + C178 * C16923 +
            (C168 - C167) * C16929 + (C170 - C169) * C16924) *
               C16925 +
           (C620 * C16927 + C621 * C16922 + (C623 - C622) * C16928 +
            (C625 - C624) * C16923 + (C117 * C613 - C50222 * C614) * C16929 +
            (C117 * C615 - C50222 * C616) * C16924) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C276 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C277 +
           ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C276 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C277 +
           ((C2441 * C16927 + C2442 * C16922 + C2455 * C16928 + C2456 * C16923 +
             (C343 - C342) * C16929 + (C345 - C344) * C16924) *
                C16925 +
            (C2465 * C16927 + C2466 * C16922 + (C2458 - C2457) * C16928 +
             (C2460 - C2459) * C16923 +
             (C117 * C1076 - C50222 * C1083) * C16929 +
             (C117 * C1084 - C50222 * C1088) * C16924) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           (C2461 * C19531 + C2462 * C50062) * C19529 +
           ((C2444 - C2443) * C19531 + (C2446 - C2445) * C50062) * C19530) *
              C50125 * C50109 * C113 +
          (((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
           (C2439 * C19531 + C2440 * C50062) * C19528 +
           (C2441 * C19531 + C2442 * C50062) * C19529 +
           (C2465 * C19531 + C2466 * C50062) * C19530) *
              C50125 * C50109 * C114 +
          ((C171 * C19531 + C172 * C50062) * C19527 +
           (C2797 * C19531 + C2798 * C50062) * C19528 +
           (C2799 * C19531 + C2800 * C50062) * C19529 +
           ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
              C50125 * C50109 * C115 +
          ((C175 * C19531 + C176 * C50062) * C19527 +
           (C620 * C19531 + C621 * C50062) * C19528 +
           ((C343 - C342) * C19531 + (C345 - C344) * C50062) * C19529 +
           ((C117 * C1076 - C50222 * C1083) * C19531 +
            (C117 * C1084 - C50222 * C1088) * C50062) *
               C19530) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C276 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C277 +
           (C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C50222 * C3422 - C117 * C3420) * C19531 +
             (C50222 * C3426 - C117 * C3423) * C50062) *
                C19530) *
               C50125 * C278) *
              C279 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C276 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C277 +
           (C19642 * C19527 + C19643 * C19528 +
            ((C2452 - C2451) * C19531 + (C2454 - C2453) * C50062) * C19529 +
            ((C117 * C3421 - C50222 * C3424) * C19531 +
             (C117 * C3425 - C50222 * C3427) * C50062) *
                C19530) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C50396 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50397 +
           ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C50396 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50397 +
           ((C2441 * C16927 + C2442 * C16922 + C2455 * C16928 + C2456 * C16923 +
             (C343 - C342) * C16929 + (C345 - C344) * C16924) *
                C16925 +
            (C2465 * C16927 + C2466 * C16922 + (C2458 - C2457) * C16928 +
             (C2460 - C2459) * C16923 +
             (C117 * C1076 - C50222 * C1083) * C16929 +
             (C117 * C1084 - C50222 * C1088) * C16924) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C50396 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C50125 * C50397 +
           (C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C50125 * C1303) *
              C50343 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C50396 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50397 +
           (C19642 * C19527 + C19643 * C19528 +
            ((C2452 - C2451) * C19531 + (C2454 - C2453) * C50062) * C19529 +
            ((C117 * C3421 - C50222 * C3424) * C19531 +
             (C117 * C3425 - C50222 * C3427) * C50062) *
                C19530) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50352 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50189) *
              C50397 +
          (((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C50352 +
           ((C4098 * C16927 + C4099 * C16922 + C3167 * C16928 + C3168 * C16923 +
             (C2948 - C2947) * C16929 + (C2950 - C2949) * C16924) *
                C16925 +
            ((C4103 - C4102) * C16927 + (C4105 - C4104) * C16922 +
             (C3174 - C3173) * C16928 + (C3176 - C3175) * C16923 +
             (C117 * C3146 - C50222 * C3151) * C16929 +
             (C117 * C3152 - C50222 * C3155) * C16924) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50352 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C50396 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C50352 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50189) *
              C50397 +
          ((C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C50352 +
           (C20693 * C19527 + C20696 * C19528 +
            ((C20690 - C20689) * C19531 + (C20692 - C20691) * C50062) * C19529 +
            ((C117 * C20680 - C50222 * C20681) * C19531 +
             (C117 * C20682 - C50222 * C20683) * C50062) *
                C19530) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C50125 * C1068 +
          (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
            C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
               C16925 +
           ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
            C2441 * C16928 + C2442 * C16923 + C2455 * C16929 + C2456 * C16924) *
               C50260) *
              C50125 * C1069 +
          ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
            C2799 * C16929 + C2800 * C16924) *
               C16925 +
           ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
            C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
            (C2459 - C2460) * C16924) *
               C50260) *
              C50125 * C1070 +
          ((C3429 * C16927 + C3430 * C16922 + C2465 * C16928 + C2466 * C16923 +
            (C2458 - C2457) * C16929 + (C2460 - C2459) * C16924) *
               C16925 +
           ((C3434 - C3433) * C16927 + (C3436 - C3435) * C16922 +
            (C2452 - C2451) * C16928 + (C2454 - C2453) * C16923 +
            (C117 * C2416 - C50222 * C2421) * C16929 +
            (C117 * C2422 - C50222 * C2425) * C16924) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C997 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C997 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50125 * C997 +
           ((C618 * C16927 + C619 * C16922 + C620 * C16928 + C621 * C16923 +
             (C623 - C622) * C16929 + (C625 - C624) * C16924) *
                C16925 +
            (C2455 * C16927 + C2456 * C16922 + (C343 - C342) * C16928 +
             (C345 - C344) * C16923 + (C117 * C290 - C50222 * C309) * C16929 +
             (C117 * C310 - C50222 * C320) * C16924) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C443 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C444 +
           (((C3597 - C3596) * C16927 + (C3599 - C3598) * C16922 +
             (C2644 - C2643) * C16928 + (C2646 - C2645) * C16923 +
             (C8188 - C8187) * C16929 + (C8190 - C8189) * C16924) *
                C16925 +
            ((C3601 - C3600) * C16927 + (C3603 - C3602) * C16922 +
             (C2648 - C2647) * C16928 + (C2650 - C2649) * C16923 +
             (C117 * C2628 - C50222 * C2633) * C16929 +
             (C117 * C2634 - C50222 * C2637) * C16924) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C997 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C997 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50125 * C997 +
           ((C618 * C19531 + C619 * C50062) * C19527 +
            (C2455 * C19531 + C2456 * C50062) * C19528 +
            ((C2458 - C2457) * C19531 + (C2460 - C2459) * C50062) * C19529 +
            ((C117 * C2416 - C50222 * C2421) * C19531 +
             (C117 * C2422 - C50222 * C2425) * C50062) *
                C19530) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           C19639 * C19529 + C19644 * C19530) *
              C50125 * C1068 +
          (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
           ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
           C20245 * C19529 + C20248 * C19530) *
              C50125 * C1069 +
          (C19639 * C19527 + C19644 * C19528 +
           ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
           ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) * C19530) *
              C50125 * C1070 +
          (C20245 * C19527 + C20248 * C19528 +
           ((C20242 - C20241) * C19531 + (C20244 - C20243) * C50062) * C19529 +
           ((C117 * C20232 - C50222 * C20233) * C19531 +
            (C117 * C20234 - C50222 * C20235) * C50062) *
               C19530) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C443 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            (C4098 * C19531 + C4099 * C50062) * C19529 +
            ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
               C444 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) *
                C19530) *
               C445) *
              C997 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C443 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C50222 * C4091 - C117 * C4089) * C19531 +
             (C50222 * C4095 - C117 * C4092) * C50062) *
                C19530) *
               C444 +
           (((C3597 - C3596) * C19531 + (C3599 - C3598) * C50062) * C19527 +
            ((C3601 - C3600) * C19531 + (C3603 - C3602) * C50062) * C19528 +
            ((C20352 - C20351) * C19531 + (C20354 - C20353) * C50062) * C19529 +
            ((C117 * C20346 - C50222 * C20347) * C19531 +
             (C117 * C20348 - C50222 * C20349) * C50062) *
                C19530) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C16927 +
              (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
              (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                 C16925 +
             ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
              C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
              C2798 * C16924) *
                 C50260) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C16927 +
              (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
              (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                 C16925 +
             ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
              C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
              C8486 * C16924) *
                 C50260) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
              C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                 C16925 +
             ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
              C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
              C2456 * C16924) *
                 C50260) *
                C50352 +
            (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
              C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
              C8682 * C16924) *
                 C16925 +
             ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
              C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
              (C2949 - C2950) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
              (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
              C176 * C16924) *
                 C16925 +
             (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
              C620 * C16929 + C621 * C16924) *
                 C50260) *
                C50352 +
            (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
              (C492 - C491) * C16928 + (C494 - C493) * C16923 +
              (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                 C16925 +
             (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
              C8682 * C16923 + (C896 - C897) * C16929 +
              (C898 - C899) * C16924) *
                 C50260) *
                C50189) *
               C997 +
           (((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
              C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                 C16925 +
             (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
              C2800 * C16923 + (C342 - C343) * C16929 +
              (C344 - C345) * C16924) *
                 C50260) *
                C50352 +
            ((C3161 * C16927 + C3162 * C16922 + C8485 * C16928 +
              C8486 * C16923 + (C897 - C896) * C16929 +
              (C899 - C898) * C16924) *
                 C16925 +
             (C3167 * C16927 + C3168 * C16922 + (C2948 - C2947) * C16928 +
              (C2950 - C2949) * C16923 +
              (C117 * C1537 - C50222 * C1544) * C16929 +
              (C117 * C1545 - C50222 * C1549) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C19531 +
              (C50222 * C143 - C117 * C130) * C50062) *
                 C19527 +
             ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
             C19639 * C19529 + C19644 * C19530) *
                C50352 +
            (((C117 * C446 - C50222 * C456) * C19531 +
              (C117 * C457 - C50222 * C476) * C50062) *
                 C19527 +
             ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
             (C4098 * C19531 + C4099 * C50062) * C19529 +
             ((C4103 - C4102) * C19531 + (C4105 - C4104) * C50062) * C19530) *
                C50189) *
               C997 +
           ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
             ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
             C20245 * C19529 + C20248 * C19530) *
                C50352 +
            (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
             ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
             ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
             ((C50222 * C4091 - C117 * C4089) * C19531 +
              (C50222 * C4095 - C117 * C4092) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
             (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
             C19643 * C19530) *
                C50352 +
            (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
             (C3169 * C19531 + C3170 * C50062) * C19528 +
             (C3171 * C19531 + C3172 * C50062) * C19529 +
             ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
                C50189) *
               C997 +
           (((C2431 * C19531 + C2432 * C50062) * C19527 +
             (C2437 * C19531 + C2438 * C50062) * C19528 +
             (C2467 * C19531 + C2468 * C50062) * C19529 +
             ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
                C50352 +
            ((C3161 * C19531 + C3162 * C50062) * C19527 +
             (C3167 * C19531 + C3168 * C50062) * C19528 +
             ((C3174 - C3173) * C19531 + (C3176 - C3175) * C50062) * C19529 +
             ((C117 * C4090 - C50222 * C4093) * C19531 +
              (C117 * C4094 - C50222 * C4096) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50125 * C997 +
           (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50125 * C997 +
           ((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 + C2798 * C16923 +
             C8337 * C16929 + C8338 * C16924) *
                C16925 +
            (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 + C2800 * C16923 +
             (C342 - C343) * C16929 + (C344 - C345) * C16924) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C50125 * C997 +
           ((C618 * C16927 + C619 * C16922 + C620 * C16928 + C621 * C16923 +
             (C623 - C622) * C16929 + (C625 - C624) * C16924) *
                C16925 +
            (C2455 * C16927 + C2456 * C16922 + (C343 - C342) * C16928 +
             (C345 - C344) * C16923 + (C117 * C290 - C50222 * C309) * C16929 +
             (C117 * C310 - C50222 * C320) * C16924) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C50125 * C1068 +
          (((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
            C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
               C16925 +
           ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
            C2441 * C16928 + C2442 * C16923 + C2455 * C16929 + C2456 * C16924) *
               C50260) *
              C50125 * C1069 +
          ((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
            C2799 * C16929 + C2800 * C16924) *
               C16925 +
           ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
            C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
            (C2459 - C2460) * C16924) *
               C50260) *
              C50125 * C1070 +
          ((C3429 * C16927 + C3430 * C16922 + C2465 * C16928 + C2466 * C16923 +
            (C2458 - C2457) * C16929 + (C2460 - C2459) * C16924) *
               C16925 +
           ((C3434 - C3433) * C16927 + (C3436 - C3435) * C16922 +
            (C2452 - C2451) * C16928 + (C2454 - C2453) * C16923 +
            (C117 * C2416 - C50222 * C2421) * C16929 +
            (C117 * C2422 - C50222 * C2425) * C16924) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50125 * C997 +
           (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            (C3429 * C19531 + C3430 * C50062) * C19529 +
            ((C3434 - C3433) * C19531 + (C3436 - C3435) * C50062) * C19530) *
               C50125 * C50161) *
              C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50125 * C997 +
           ((C2431 * C19531 + C2432 * C50062) * C19527 +
            (C2437 * C19531 + C2438 * C50062) * C19528 +
            (C2467 * C19531 + C2468 * C50062) * C19529 +
            ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
               C50125 * C50161) *
              C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C50125 * C997 +
           ((C618 * C19531 + C619 * C50062) * C19527 +
            (C2455 * C19531 + C2456 * C50062) * C19528 +
            ((C2458 - C2457) * C19531 + (C2460 - C2459) * C50062) * C19529 +
            ((C117 * C2416 - C50222 * C2421) * C19531 +
             (C117 * C2422 - C50222 * C2425) * C50062) *
                C19530) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           C19639 * C19529 + C19644 * C19530) *
              C50125 * C1068 +
          (((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
           ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
           C20245 * C19529 + C20248 * C19530) *
              C50125 * C1069 +
          (C19639 * C19527 + C19644 * C19528 +
           ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
           ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) * C19530) *
              C50125 * C1070 +
          (C20245 * C19527 + C20248 * C19528 +
           ((C20242 - C20241) * C19531 + (C20244 - C20243) * C50062) * C19529 +
           ((C117 * C20232 - C50222 * C20233) * C19531 +
            (C117 * C20234 - C50222 * C20235) * C50062) *
               C19530) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C16927 +
              (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
              (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                 C16925 +
             ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
              C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
              C2798 * C16924) *
                 C50260) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C16927 +
              (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
              (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                 C16925 +
             ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
              C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
              C8486 * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
              C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                 C16925 +
             ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
              C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
              C2456 * C16924) *
                 C50260) *
                C1648 +
            (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
              C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
              C8682 * C16924) *
                 C16925 +
             ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
              C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
              (C2949 - C2950) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
              (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
              C176 * C16924) *
                 C16925 +
             (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
              C620 * C16929 + C621 * C16924) *
                 C50260) *
                C1648 +
            (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
              (C492 - C491) * C16928 + (C494 - C493) * C16923 +
              (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                 C16925 +
             (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 +
              C8682 * C16923 + (C896 - C897) * C16929 +
              (C898 - C899) * C16924) *
                 C50260) *
                C50189) *
               C50351 +
           (((C2431 * C16927 + C2432 * C16922 + C2797 * C16928 +
              C2798 * C16923 + C8337 * C16929 + C8338 * C16924) *
                 C16925 +
             (C2437 * C16927 + C2438 * C16922 + C2799 * C16928 +
              C2800 * C16923 + (C342 - C343) * C16929 +
              (C344 - C345) * C16924) *
                 C50260) *
                C1648 +
            ((C3161 * C16927 + C3162 * C16922 + C8485 * C16928 +
              C8486 * C16923 + (C897 - C896) * C16929 +
              (C899 - C898) * C16924) *
                 C16925 +
             (C3167 * C16927 + C3168 * C16922 + (C2948 - C2947) * C16928 +
              (C2950 - C2949) * C16923 +
              (C117 * C1537 - C50222 * C1544) * C16929 +
              (C117 * C1545 - C50222 * C1549) * C16924) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50222 * C129 - C117 * C122) * C19531 +
              (C50222 * C143 - C117 * C130) * C50062) *
                 C19527 +
             ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
             C19639 * C19529 + C19644 * C19530) *
                C1648 +
            (((C117 * C446 - C50222 * C456) * C19531 +
              (C117 * C457 - C50222 * C476) * C50062) *
                 C19527 +
             ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
             C20693 * C19529 + C20696 * C19530) *
                C50189) *
               C50351 +
           ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
             ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
             C20245 * C19529 + C20248 * C19530) *
                C1648 +
            (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
             ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
             ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
             ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50343 +
          (((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
             (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
             C19643 * C19530) *
                C1648 +
            (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
             (C3169 * C19531 + C3170 * C50062) * C19528 +
             (C3171 * C19531 + C3172 * C50062) * C19529 +
             ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
                C50189) *
               C50351 +
           (((C2431 * C19531 + C2432 * C50062) * C19527 +
             (C2437 * C19531 + C2438 * C50062) * C19528 +
             (C2467 * C19531 + C2468 * C50062) * C19529 +
             ((C2451 - C2452) * C19531 + (C2453 - C2454) * C50062) * C19530) *
                C1648 +
            ((C3161 * C19531 + C3162 * C50062) * C19527 +
             (C3167 * C19531 + C3168 * C50062) * C19528 +
             ((C3174 - C3173) * C19531 + (C3176 - C3175) * C50062) * C19529 +
             ((C117 * C4090 - C50222 * C4093) * C19531 +
              (C117 * C4094 - C50222 * C4096) * C50062) *
                 C19530) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C50398 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50399 +
           (((C3597 - C3596) * C16927 + (C3599 - C3598) * C16922 +
             (C2644 - C2643) * C16928 + (C2646 - C2645) * C16923 +
             (C8188 - C8187) * C16929 + (C8190 - C8189) * C16924) *
                C16925 +
            ((C3601 - C3600) * C16927 + (C3603 - C3602) * C16922 +
             (C2648 - C2647) * C16928 + (C2650 - C2649) * C16923 +
             (C117 * C2628 - C50222 * C2633) * C16929 +
             (C117 * C2634 - C50222 * C2637) * C16924) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) *
                C19530) *
               C2064) *
              C50351 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C50398 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50399 +
           (((C3597 - C3596) * C19531 + (C3599 - C3598) * C50062) * C19527 +
            ((C3601 - C3600) * C19531 + (C3603 - C3602) * C50062) * C19528 +
            ((C20352 - C20351) * C19531 + (C20354 - C20353) * C50062) * C19529 +
            ((C117 * C20346 - C50222 * C20347) * C19531 +
             (C117 * C20348 - C50222 * C20349) * C50062) *
                C19530) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C1648 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50189) *
              C277 +
          (((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C1648 +
           ((C4098 * C16927 + C4099 * C16922 + C3167 * C16928 + C3168 * C16923 +
             (C2948 - C2947) * C16929 + (C2950 - C2949) * C16924) *
                C16925 +
            ((C4103 - C4102) * C16927 + (C4105 - C4104) * C16922 +
             (C3174 - C3173) * C16928 + (C3176 - C3175) * C16923 +
             (C117 * C3146 - C50222 * C3151) * C16929 +
             (C117 * C3152 - C50222 * C3155) * C16924) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C1648 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C1648 +
           ((C730 * C16927 + C731 * C16922 + C732 * C16928 + C733 * C16923 +
             (C735 - C734) * C16929 + (C737 - C736) * C16924) *
                C16925 +
            (C8485 * C16927 + C8486 * C16922 + (C897 - C896) * C16928 +
             (C899 - C898) * C16923 + (C117 * C871 - C50222 * C880) * C16929 +
             (C117 * C881 - C50222 * C886) * C16924) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C16927 +
            (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
            (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
               C16925 +
           ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
            C2431 * C16928 + C2432 * C16923 + C2797 * C16929 + C2798 * C16924) *
               C50260) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C16927 +
            (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
            (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
               C16925 +
           ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
            C3161 * C16928 + C3162 * C16923 + C8485 * C16929 + C8486 * C16924) *
               C50260) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C16927 +
            (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
            (C501 - C502) * C16923 + (C503 - C504) * C16929 +
            (C505 - C506) * C16924) *
               C16925 +
           ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
            (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
            (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
               C50260) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C16927 +
            (C117 * C1823 - C50222 * C1830) * C16922 +
            (C117 * C1819 - C50222 * C1824) * C16928 +
            (C117 * C1825 - C50222 * C1831) * C16923 +
            (C117 * C1820 - C50222 * C1826) * C16929 +
            (C117 * C1827 - C50222 * C1832) * C16924) *
               C16925 +
           ((C117 * C4500 - C50222 * C4504) * C16927 +
            (C117 * C4505 - C50222 * C4512) * C16922 +
            (C117 * C4501 - C50222 * C4506) * C16928 +
            (C117 * C4507 - C50222 * C4513) * C16923 +
            (C117 * C6004 - C50222 * C6005) * C16929 +
            (C117 * C6006 - C50222 * C6007) * C16924) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C1648 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C1648 +
           ((C730 * C19531 + C731 * C50062) * C19527 +
            (C8485 * C19531 + C8486 * C50062) * C19528 +
            ((C2948 - C2947) * C19531 + (C2950 - C2949) * C50062) * C19529 +
            ((C117 * C3146 - C50222 * C3151) * C19531 +
             (C117 * C3152 - C50222 * C3155) * C50062) *
                C19530) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C1648 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50189) *
              C277 +
          ((C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C1648 +
           (C20693 * C19527 + C20696 * C19528 +
            ((C20690 - C20689) * C19531 + (C20692 - C20691) * C50062) * C19529 +
            ((C117 * C20680 - C50222 * C20681) * C19531 +
             (C117 * C20682 - C50222 * C20683) * C50062) *
                C19530) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50222 * C129 - C117 * C122) * C19531 +
            (C50222 * C143 - C117 * C130) * C50062) *
               C19527 +
           ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
           C19639 * C19529 + C19644 * C19530) *
              C1814 +
          (((C117 * C446 - C50222 * C456) * C19531 +
            (C117 * C457 - C50222 * C476) * C50062) *
               C19527 +
           ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
           C20693 * C19529 + C20696 * C19530) *
              C1815 +
          (((C50222 * C464 - C117 * C450) * C19531 +
            (C50222 * C480 - C117 * C465) * C50062) *
               C19527 +
           ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
           ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
           ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) * C19530) *
              C1816 +
          (((C117 * C1818 - C50222 * C1822) * C19531 +
            (C117 * C1823 - C50222 * C1830) * C50062) *
               C19527 +
           ((C117 * C4500 - C50222 * C4504) * C19531 +
            (C117 * C4505 - C50222 * C4512) * C50062) *
               C19528 +
           ((C117 * C4502 - C50222 * C4508) * C19531 +
            (C117 * C4509 - C50222 * C4514) * C50062) *
               C19529 +
           ((C117 * C20958 - C50222 * C20959) * C19531 +
            (C117 * C20960 - C50222 * C20961) * C50062) *
               C19530) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C16927 +
             (C50222 * C480 - C117 * C465) * C16922 + (C499 - C500) * C16928 +
             (C501 - C502) * C16923 + (C503 - C504) * C16929 +
             (C505 - C506) * C16924) *
                C16925 +
            ((C3596 - C3597) * C16927 + (C3598 - C3599) * C16922 +
             (C2643 - C2644) * C16928 + (C2645 - C2646) * C16923 +
             (C8187 - C8188) * C16929 + (C8189 - C8190) * C16924) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C50398 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50399 +
           (((C500 - C499) * C16927 + (C502 - C501) * C16922 +
             (C504 - C503) * C16928 + (C506 - C505) * C16923 +
             (C508 - C507) * C16929 + (C510 - C509) * C16924) *
                C16925 +
            ((C2644 - C2643) * C16927 + (C2646 - C2645) * C16922 +
             (C8188 - C8187) * C16928 + (C8190 - C8189) * C16923 +
             (C117 * C1190 - C50222 * C1197) * C16929 +
             (C117 * C1198 - C50222 * C1202) * C16924) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C50398 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50399 +
           (((C50222 * C464 - C117 * C450) * C19531 +
             (C50222 * C480 - C117 * C465) * C50062) *
                C19527 +
            ((C3596 - C3597) * C19531 + (C3598 - C3599) * C50062) * C19528 +
            ((C3600 - C3601) * C19531 + (C3602 - C3603) * C50062) * C19529 +
            ((C20351 - C20352) * C19531 + (C20353 - C20354) * C50062) *
                C19530) *
               C2064) *
              C50109 * C50343 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C50398 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50399 +
           (((C500 - C499) * C19531 + (C502 - C501) * C50062) * C19527 +
            ((C2644 - C2643) * C19531 + (C2646 - C2645) * C50062) * C19528 +
            ((C2648 - C2647) * C19531 + (C2650 - C2649) * C50062) * C19529 +
            ((C117 * C3588 - C50222 * C3591) * C19531 +
             (C117 * C3592 - C50222 * C3594) * C50062) *
                C19530) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C16927 + (C154 - C153) * C16922 +
             (C156 - C155) * C16928 + (C158 - C157) * C16923 + C175 * C16929 +
             C176 * C16924) *
                C16925 +
            (C2439 * C16927 + C2440 * C16922 + C618 * C16928 + C619 * C16923 +
             C620 * C16929 + C621 * C16924) *
                C50260) *
               C1648 +
           (((C488 - C487) * C16927 + (C490 - C489) * C16922 +
             (C492 - C491) * C16928 + (C494 - C493) * C16923 +
             (C496 - C495) * C16929 + (C498 - C497) * C16924) *
                C16925 +
            (C3169 * C16927 + C3170 * C16922 + C8681 * C16928 + C8682 * C16923 +
             (C896 - C897) * C16929 + (C898 - C899) * C16924) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C16927 + C172 * C16922 + C173 * C16928 + C174 * C16923 +
             (C164 - C163) * C16929 + (C166 - C165) * C16924) *
                C16925 +
            (C2797 * C16927 + C2798 * C16922 + C8337 * C16928 + C8338 * C16923 +
             (C622 - C623) * C16929 + (C624 - C625) * C16924) *
                C50260) *
               C1648 +
           ((C730 * C16927 + C731 * C16922 + C732 * C16928 + C733 * C16923 +
             (C735 - C734) * C16929 + (C737 - C736) * C16924) *
                C16925 +
            (C8485 * C16927 + C8486 * C16922 + (C897 - C896) * C16928 +
             (C899 - C898) * C16923 + (C117 * C871 - C50222 * C880) * C16929 +
             (C117 * C881 - C50222 * C886) * C16924) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C16927 +
             (C50222 * C143 - C117 * C130) * C16922 + (C151 - C152) * C16928 +
             (C153 - C154) * C16923 + C171 * C16929 + C172 * C16924) *
                C16925 +
            ((C2427 - C2428) * C16927 + (C2429 - C2430) * C16922 +
             C2431 * C16928 + C2432 * C16923 + C2797 * C16929 +
             C2798 * C16924) *
                C50260) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C16927 +
             (C117 * C457 - C50222 * C476) * C16922 + (C487 - C488) * C16928 +
             (C489 - C490) * C16923 + C730 * C16929 + C731 * C16924) *
                C16925 +
            ((C3157 - C3158) * C16927 + (C3159 - C3160) * C16922 +
             C3161 * C16928 + C3162 * C16923 + C8485 * C16929 +
             C8486 * C16924) *
                C50260) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C16927 + (C2430 - C2429) * C16922 +
             C2439 * C16928 + C2440 * C16923 + C618 * C16929 + C619 * C16924) *
                C16925 +
            ((C2434 - C2433) * C16927 + (C2436 - C2435) * C16922 +
             C2441 * C16928 + C2442 * C16923 + C2455 * C16929 +
             C2456 * C16924) *
                C50260) *
               C1648 +
           (((C3158 - C3157) * C16927 + (C3160 - C3159) * C16922 +
             C3169 * C16928 + C3170 * C16923 + C8681 * C16929 +
             C8682 * C16924) *
                C16925 +
            ((C3164 - C3163) * C16927 + (C3166 - C3165) * C16922 +
             C3171 * C16928 + C3172 * C16923 + (C2947 - C2948) * C16929 +
             (C2949 - C2950) * C16924) *
                C50260) *
               C50189) *
              C277 +
          (((C2461 * C16927 + C2462 * C16922 + C2437 * C16928 + C2438 * C16923 +
             C2799 * C16929 + C2800 * C16924) *
                C16925 +
            ((C2444 - C2443) * C16927 + (C2446 - C2445) * C16922 +
             C2467 * C16928 + C2468 * C16923 + (C2457 - C2458) * C16929 +
             (C2459 - C2460) * C16924) *
                C50260) *
               C1648 +
           ((C4098 * C16927 + C4099 * C16922 + C3167 * C16928 + C3168 * C16923 +
             (C2948 - C2947) * C16929 + (C2950 - C2949) * C16924) *
                C16925 +
            ((C4103 - C4102) * C16927 + (C4105 - C4104) * C16922 +
             (C3174 - C3173) * C16928 + (C3176 - C3175) * C16923 +
             (C117 * C3146 - C50222 * C3151) * C16929 +
             (C117 * C3152 - C50222 * C3155) * C16924) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C50109 * C999 +
          ((((C152 - C151) * C19531 + (C154 - C153) * C50062) * C19527 +
            (C2439 * C19531 + C2440 * C50062) * C19528 + C19642 * C19529 +
            C19643 * C19530) *
               C1648 +
           (((C488 - C487) * C19531 + (C490 - C489) * C50062) * C19527 +
            (C3169 * C19531 + C3170 * C50062) * C19528 +
            (C3171 * C19531 + C3172 * C50062) * C19529 +
            ((C3173 - C3174) * C19531 + (C3175 - C3176) * C50062) * C19530) *
               C50189) *
              C50109 * C1000 +
          (((C171 * C19531 + C172 * C50062) * C19527 +
            (C2797 * C19531 + C2798 * C50062) * C19528 +
            (C2799 * C19531 + C2800 * C50062) * C19529 +
            ((C2457 - C2458) * C19531 + (C2459 - C2460) * C50062) * C19530) *
               C1648 +
           ((C730 * C19531 + C731 * C50062) * C19527 +
            (C8485 * C19531 + C8486 * C50062) * C19528 +
            ((C2948 - C2947) * C19531 + (C2950 - C2949) * C50062) * C19529 +
            ((C117 * C3146 - C50222 * C3151) * C19531 +
             (C117 * C3152 - C50222 * C3155) * C50062) *
                C19530) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50222 * C129 - C117 * C122) * C19531 +
             (C50222 * C143 - C117 * C130) * C50062) *
                C19527 +
            ((C2427 - C2428) * C19531 + (C2429 - C2430) * C50062) * C19528 +
            C19639 * C19529 + C19644 * C19530) *
               C1648 +
           (((C117 * C446 - C50222 * C456) * C19531 +
             (C117 * C457 - C50222 * C476) * C50062) *
                C19527 +
            ((C3157 - C3158) * C19531 + (C3159 - C3160) * C50062) * C19528 +
            C20693 * C19529 + C20696 * C19530) *
               C50189) *
              C276 +
          ((((C2428 - C2427) * C19531 + (C2430 - C2429) * C50062) * C19527 +
            ((C2434 - C2433) * C19531 + (C2436 - C2435) * C50062) * C19528 +
            C20245 * C19529 + C20248 * C19530) *
               C1648 +
           (((C3158 - C3157) * C19531 + (C3160 - C3159) * C50062) * C19527 +
            ((C3164 - C3163) * C19531 + (C3166 - C3165) * C50062) * C19528 +
            ((C4102 - C4103) * C19531 + (C4104 - C4105) * C50062) * C19529 +
            ((C20689 - C20690) * C19531 + (C20691 - C20692) * C50062) *
                C19530) *
               C50189) *
              C277 +
          ((C19639 * C19527 + C19644 * C19528 +
            ((C3433 - C3434) * C19531 + (C3435 - C3436) * C50062) * C19529 +
            ((C20241 - C20242) * C19531 + (C20243 - C20244) * C50062) *
                C19530) *
               C1648 +
           (C20693 * C19527 + C20696 * C19528 +
            ((C20690 - C20689) * C19531 + (C20692 - C20691) * C50062) * C19529 +
            ((C117 * C20680 - C50222 * C20681) * C19531 +
             (C117 * C20682 - C50222 * C20683) * C50062) *
                C19530) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50125 * C50351 +
           (((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50125 * C50351 +
           ((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
             C40889 * C50067) *
                C50364 +
            (C40486 * C49175 + C40487 * C50336 +
             (C33150 - C33151 + C33152 - C33153) * C49168 +
             (C33154 - C33155 + C33156 - C33157) * C50067) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          (((C32976 * C49175 + C32977 * C50336 +
             (C32953 - C32952 + C32955 - C32954) * C49168 +
             (C32957 - C32956 + C32959 - C32958) * C50067) *
                C50364 +
            (C40888 * C49175 + C40889 * C50336 +
             (C33486 - C33487 + C33488 - C33489) * C49168 +
             (C33490 - C33491 + C33492 - C33493) * C50067) *
                C50260) *
               C50125 * C50351 +
           ((C33494 * C49175 + C33495 * C50336 +
             (C33487 - C33486 + C33489 - C33488) * C49168 +
             (C33491 - C33490 + C33493 - C33492) * C50067) *
                C50364 +
            ((C33151 - C33150 + C33153 - C33152) * C49175 +
             (C33155 - C33154 + C33157 - C33156) * C50336 +
             (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                 C49168 +
             (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C49175 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50336 +
              (C32936 - C32937 + C32938 - C32939) * C49168 +
              (C32940 - C32941 + C32942 - C32943) * C50067) *
                 C50364 +
             ((C35862 - C35863 + C35864 - C35865) * C49175 +
              (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
              C40483 * C50067) *
                 C50260) *
                C50352 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C49175 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50336 +
              (C33304 - C33305 + C33306 - C33307) * C49168 +
              (C33308 - C33309 + C33310 - C33311) * C50067) *
                 C50364 +
             ((C36544 - C36545 + C36546 - C36547) * C49175 +
              (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
              C41351 * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C35863 - C35862 + C35865 - C35864) * C49175 +
              (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
              C40485 * C50067) *
                 C50364 +
             ((C35871 - C35870 + C35873 - C35872) * C49175 +
              (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
              C35903 * C50067) *
                 C50260) *
                C50352 +
            (((C36545 - C36544 + C36547 - C36546) * C49175 +
              (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
              C41353 * C50067) *
                 C50364 +
             ((C36553 - C36552 + C36555 - C36554) * C49175 +
              (C36557 - C36556 + C36559 - C36558) * C50336 +
              (C36560 - C36561 + C36562 - C36563) * C49168 +
              (C36564 - C36565 + C36566 - C36567) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C32937 - C32936 + C32939 - C32938) * C49175 +
              (C32941 - C32940 + C32943 - C32942) * C50336 +
              (C32945 - C32944 + C32947 - C32946) * C49168 +
              (C32949 - C32948 + C32951 - C32950) * C50067) *
                 C50364 +
             (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
              C33495 * C50067) *
                 C50260) *
                C50352 +
            (((C33305 - C33304 + C33307 - C33306) * C49175 +
              (C33309 - C33308 + C33311 - C33310) * C50336 +
              (C33313 - C33312 + C33315 - C33314) * C49168 +
              (C33317 - C33316 + C33319 - C33318) * C50067) *
                 C50364 +
             (C41352 * C49175 + C41353 * C50336 +
              (C33858 - C33859 + C33860 - C33861) * C49168 +
              (C33862 - C33863 + C33864 - C33865) * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           (((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
              C40889 * C50067) *
                 C50364 +
             (C40486 * C49175 + C40487 * C50336 +
              (C33150 - C33151 + C33152 - C33153) * C49168 +
              (C33154 - C33155 + C33156 - C33157) * C50067) *
                 C50260) *
                C50352 +
            ((C41350 * C49175 + C41351 * C50336 +
              (C33859 - C33858 + C33861 - C33860) * C49168 +
              (C33863 - C33862 + C33865 - C33864) * C50067) *
                 C50364 +
             ((C36561 - C36560 + C36563 - C36562) * C49175 +
              (C36565 - C36564 + C36567 - C36566) * C50336 +
              (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
               C50286 * C2633) *
                  C49168 +
              (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50125 * C276 +
           (((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50125 * C277 +
           ((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
             C40487 * C50067) *
                C50364 +
            ((C35879 - C35878 + C35881 - C35880) * C49175 +
             (C35883 - C35882 + C35885 - C35884) * C50336 +
             (C35890 - C35891 + C35892 - C35893) * C49168 +
             (C35894 - C35895 + C35896 - C35897) * C50067) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50125 * C276 +
           ((C40482 * C49175 + C40483 * C50336 +
             (C33135 - C33134 + C33137 - C33136) * C49168 +
             (C33139 - C33138 + C33141 - C33140) * C50067) *
                C50364 +
            (C40486 * C49175 + C40487 * C50336 +
             (C33150 - C33151 + C33152 - C33153) * C49168 +
             (C33154 - C33155 + C33156 - C33157) * C50067) *
                C50260) *
               C50125 * C277 +
           ((C35902 * C49175 + C35903 * C50336 +
             (C33151 - C33150 + C33153 - C33152) * C49168 +
             (C33155 - C33154 + C33157 - C33156) * C50067) *
                C50364 +
            ((C35891 - C35890 + C35893 - C35892) * C49175 +
             (C35895 - C35894 + C35897 - C35896) * C50336 +
             (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C49168 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C49175 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50336 +
            (C32936 - C32937 + C32938 - C32939) * C49168 +
            (C32940 - C32941 + C32942 - C32943) * C50067) *
               C50364 +
           ((C35862 - C35863 + C35864 - C35865) * C49175 +
            (C35866 - C35867 + C35868 - C35869) * C50336 +
            (C33127 - C33126 + C33129 - C33128) * C49168 +
            (C33131 - C33130 + C33133 - C33132) * C50067) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C49175 +
            (C32941 - C32940 + C32943 - C32942) * C50336 +
            (C32945 - C32944 + C32947 - C32946) * C49168 +
            (C32949 - C32948 + C32951 - C32950) * C50067) *
               C50364 +
           ((C33126 - C33127 + C33128 - C33129) * C49175 +
            (C33130 - C33131 + C33132 - C33133) * C50336 + C33494 * C49168 +
            C33495 * C50067) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C32976 * C49175 + C32977 * C50336 +
            (C32953 - C32952 + C32955 - C32954) * C49168 +
            (C32957 - C32956 + C32959 - C32958) * C50067) *
               C50364 +
           ((C33135 - C33134 + C33137 - C33136) * C49175 +
            (C33139 - C33138 + C33141 - C33140) * C50336 +
            (C33486 - C33487 + C33488 - C33489) * C49168 +
            (C33490 - C33491 + C33492 - C33493) * C50067) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C32978 * C49175 + C32979 * C50336 +
            (C32961 - C32960 + C32963 - C32962) * C49168 +
            (C32965 - C32964 + C32967 - C32966) * C50067) *
               C50364 +
           ((C33487 - C33486 + C33489 - C33488) * C49175 +
            (C33491 - C33490 + C33493 - C33492) * C50336 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C49168 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C50067) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C443 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 +
             (C33851 - C33850 + C33853 - C33852) * C49168 +
             (C33855 - C33854 + C33857 - C33856) * C50067) *
                C50260) *
               C444 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C49175 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50336 +
             (C33320 - C33321 + C33322 - C33323) * C49168 +
             (C33324 - C33325 + C33326 - C33327) * C50067) *
                C50364 +
            ((C36975 - C36976 + C36977 - C36978) * C49175 +
             (C36979 - C36980 + C36981 - C36982) * C50336 +
             (C40682 - C40683 + C40684 - C40685) * C49168 +
             (C40686 - C40687 + C40688 - C40689) * C50067) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C443 +
           (((C33305 - C33304 + C33307 - C33306) * C49175 +
             (C33309 - C33308 + C33311 - C33310) * C50336 +
             (C33313 - C33312 + C33315 - C33314) * C49168 +
             (C33317 - C33316 + C33319 - C33318) * C50067) *
                C50364 +
            ((C33850 - C33851 + C33852 - C33853) * C49175 +
             (C33854 - C33855 + C33856 - C33857) * C50336 +
             (C33858 - C33859 + C33860 - C33861) * C49168 +
             (C33862 - C33863 + C33864 - C33865) * C50067) *
                C50260) *
               C444 +
           (((C33321 - C33320 + C33323 - C33322) * C49175 +
             (C33325 - C33324 + C33327 - C33326) * C50336 +
             (C33329 - C33328 + C33331 - C33330) * C49168 +
             (C33333 - C33332 + C33335 - C33334) * C50067) *
                C50364 +
            ((C40683 - C40682 + C40685 - C40684) * C49175 +
             (C40687 - C40686 + C40689 - C40688) * C50336 +
             (C32933 * C1189 - C32931 * C1195 + C32934 * C6004 -
              C50286 * C6005) *
                 C49168 +
             (C32933 * C1196 - C32931 * C1201 + C32934 * C6006 -
              C50286 * C6007) *
                 C50067) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50352 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 +
             (C33851 - C33850 + C33853 - C33852) * C49168 +
             (C33855 - C33854 + C33857 - C33856) * C50067) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50352 +
           (((C33305 - C33304 + C33307 - C33306) * C49175 +
             (C33309 - C33308 + C33311 - C33310) * C50336 +
             (C33313 - C33312 + C33315 - C33314) * C49168 +
             (C33317 - C33316 + C33319 - C33318) * C50067) *
                C50364 +
            ((C33850 - C33851 + C33852 - C33853) * C49175 +
             (C33854 - C33855 + C33856 - C33857) * C50336 +
             (C33858 - C33859 + C33860 - C33861) * C49168 +
             (C33862 - C33863 + C33864 - C33865) * C50067) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          (((C32976 * C49175 + C32977 * C50336 +
             (C32953 - C32952 + C32955 - C32954) * C49168 +
             (C32957 - C32956 + C32959 - C32958) * C50067) *
                C50364 +
            (C40888 * C49175 + C40889 * C50336 +
             (C33486 - C33487 + C33488 - C33489) * C49168 +
             (C33490 - C33491 + C33492 - C33493) * C50067) *
                C50260) *
               C50352 +
           ((C33654 * C49175 + C33655 * C50336 +
             (C33647 - C33646 + C33649 - C33648) * C49168 +
             (C33651 - C33650 + C33653 - C33652) * C50067) *
                C50364 +
            ((C33859 - C33858 + C33861 - C33860) * C49175 +
             (C33863 - C33862 + C33865 - C33864) * C50336 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C49168 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C49175 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50336 +
            (C32936 - C32937 + C32938 - C32939) * C49168 +
            (C32940 - C32941 + C32942 - C32943) * C50067) *
               C50364 +
           ((C35862 - C35863 + C35864 - C35865) * C49175 +
            (C35866 - C35867 + C35868 - C35869) * C50336 +
            (C33127 - C33126 + C33129 - C33128) * C49168 +
            (C33131 - C33130 + C33133 - C33132) * C50067) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C49175 +
            (C32941 - C32940 + C32943 - C32942) * C50336 +
            (C32945 - C32944 + C32947 - C32946) * C49168 +
            (C32949 - C32948 + C32951 - C32950) * C50067) *
               C50364 +
           ((C33126 - C33127 + C33128 - C33129) * C49175 +
            (C33130 - C33131 + C33132 - C33133) * C50336 + C33494 * C49168 +
            C33495 * C50067) *
               C50260) *
              C50125 * C50109 * C114 +
          ((C32976 * C49175 + C32977 * C50336 +
            (C32953 - C32952 + C32955 - C32954) * C49168 +
            (C32957 - C32956 + C32959 - C32958) * C50067) *
               C50364 +
           ((C33135 - C33134 + C33137 - C33136) * C49175 +
            (C33139 - C33138 + C33141 - C33140) * C50336 +
            (C33486 - C33487 + C33488 - C33489) * C49168 +
            (C33490 - C33491 + C33492 - C33493) * C50067) *
               C50260) *
              C50125 * C50109 * C115 +
          ((C32978 * C49175 + C32979 * C50336 +
            (C32961 - C32960 + C32963 - C32962) * C49168 +
            (C32965 - C32964 + C32967 - C32966) * C50067) *
               C50364 +
           ((C33487 - C33486 + C33489 - C33488) * C49175 +
            (C33491 - C33490 + C33493 - C33492) * C50336 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C49168 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C50067) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50125 * C276 +
           (((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50125 * C277 +
           ((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
             C40487 * C50067) *
                C50364 +
            ((C35879 - C35878 + C35881 - C35880) * C49175 +
             (C35883 - C35882 + C35885 - C35884) * C50336 +
             (C35890 - C35891 + C35892 - C35893) * C49168 +
             (C35894 - C35895 + C35896 - C35897) * C50067) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50125 * C276 +
           ((C40482 * C49175 + C40483 * C50336 +
             (C33135 - C33134 + C33137 - C33136) * C49168 +
             (C33139 - C33138 + C33141 - C33140) * C50067) *
                C50364 +
            (C40486 * C49175 + C40487 * C50336 +
             (C33150 - C33151 + C33152 - C33153) * C49168 +
             (C33154 - C33155 + C33156 - C33157) * C50067) *
                C50260) *
               C50125 * C277 +
           ((C35902 * C49175 + C35903 * C50336 +
             (C33151 - C33150 + C33153 - C33152) * C49168 +
             (C33155 - C33154 + C33157 - C33156) * C50067) *
                C50364 +
            ((C35891 - C35890 + C35893 - C35892) * C49175 +
             (C35895 - C35894 + C35897 - C35896) * C50336 +
             (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C49168 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50125 * C50396 +
           (((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50125 * C50397 +
           ((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
             C40487 * C50067) *
                C50364 +
            ((C35879 - C35878 + C35881 - C35880) * C49175 +
             (C35883 - C35882 + C35885 - C35884) * C50336 +
             (C35890 - C35891 + C35892 - C35893) * C49168 +
             (C35894 - C35895 + C35896 - C35897) * C50067) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50125 * C50396 +
           ((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
             C40889 * C50067) *
                C50364 +
            (C40486 * C49175 + C40487 * C50336 +
             (C33150 - C33151 + C33152 - C33153) * C49168 +
             (C33154 - C33155 + C33156 - C33157) * C50067) *
                C50260) *
               C50125 * C50397 +
           ((C35902 * C49175 + C35903 * C50336 +
             (C33151 - C33150 + C33153 - C33152) * C49168 +
             (C33155 - C33154 + C33157 - C33156) * C50067) *
                C50364 +
            ((C35891 - C35890 + C35893 - C35892) * C49175 +
             (C35895 - C35894 + C35897 - C35896) * C50336 +
             (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C49168 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50067) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50352 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50189) *
              C50396 +
          ((((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50352 +
           (((C36545 - C36544 + C36547 - C36546) * C49175 +
             (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
             C41353 * C50067) *
                C50364 +
            ((C36553 - C36552 + C36555 - C36554) * C49175 +
             (C36557 - C36556 + C36559 - C36558) * C50336 +
             (C36560 - C36561 + C36562 - C36563) * C49168 +
             (C36564 - C36565 + C36566 - C36567) * C50067) *
                C50260) *
               C50189) *
              C50397 +
          (((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
             C40487 * C50067) *
                C50364 +
            ((C35879 - C35878 + C35881 - C35880) * C49175 +
             (C35883 - C35882 + C35885 - C35884) * C50336 +
             (C35890 - C35891 + C35892 - C35893) * C49168 +
             (C35894 - C35895 + C35896 - C35897) * C50067) *
                C50260) *
               C50352 +
           ((C37489 * C49175 + C37490 * C50336 +
             (C36561 - C36560 + C36563 - C36562) * C49168 +
             (C36565 - C36564 + C36567 - C36566) * C50067) *
                C50364 +
            ((C37482 - C37481 + C37484 - C37483) * C49175 +
             (C37486 - C37485 + C37488 - C37487) * C50336 +
             (C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
              C50286 * C3591) *
                 C49168 +
             (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C49175 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50336 +
            (C32936 - C32937 + C32938 - C32939) * C49168 +
            (C32940 - C32941 + C32942 - C32943) * C50067) *
               C50364 +
           ((C35862 - C35863 + C35864 - C35865) * C49175 +
            (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
            C40483 * C50067) *
               C50260) *
              C50125 * C1068 +
          (((C35863 - C35862 + C35865 - C35864) * C49175 +
            (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
            C40485 * C50067) *
               C50364 +
           ((C35871 - C35870 + C35873 - C35872) * C49175 +
            (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
            C35903 * C50067) *
               C50260) *
              C50125 * C1069 +
          ((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
            C40487 * C50067) *
               C50364 +
           ((C35879 - C35878 + C35881 - C35880) * C49175 +
            (C35883 - C35882 + C35885 - C35884) * C50336 +
            (C35890 - C35891 + C35892 - C35893) * C49168 +
            (C35894 - C35895 + C35896 - C35897) * C50067) *
               C50260) *
              C50125 * C1070 +
          ((C36824 * C49175 + C36825 * C50336 +
            (C35891 - C35890 + C35893 - C35892) * C49168 +
            (C35895 - C35894 + C35897 - C35896) * C50067) *
               C50364 +
           ((C36817 - C36816 + C36819 - C36818) * C49175 +
            (C36821 - C36820 + C36823 - C36822) * C50336 +
            (C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
             C50286 * C4093) *
                C49168 +
            (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
             C50286 * C4096) *
                C50067) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50125 * C997 +
           (((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50125 * C997 +
           ((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
             C40889 * C50067) *
                C50364 +
            (C40486 * C49175 + C40487 * C50336 +
             (C33150 - C33151 + C33152 - C33153) * C49168 +
             (C33154 - C33155 + C33156 - C33157) * C50067) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C32976 * C49175 + C32977 * C50336 +
             (C32953 - C32952 + C32955 - C32954) * C49168 +
             (C32957 - C32956 + C32959 - C32958) * C50067) *
                C50364 +
            (C40888 * C49175 + C40889 * C50336 +
             (C33486 - C33487 + C33488 - C33489) * C49168 +
             (C33490 - C33491 + C33492 - C33493) * C50067) *
                C50260) *
               C50125 * C997 +
           ((C33494 * C49175 + C33495 * C50336 +
             (C33487 - C33486 + C33489 - C33488) * C49168 +
             (C33491 - C33490 + C33493 - C33492) * C50067) *
                C50364 +
            ((C33151 - C33150 + C33153 - C33152) * C49175 +
             (C33155 - C33154 + C33157 - C33156) * C50336 +
             (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                 C49168 +
             (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C443 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C444 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C49175 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50336 +
             (C33320 - C33321 + C33322 - C33323) * C49168 +
             (C33324 - C33325 + C33326 - C33327) * C50067) *
                C50364 +
            ((C36975 - C36976 + C36977 - C36978) * C49175 +
             (C36979 - C36980 + C36981 - C36982) * C50336 +
             (C40682 - C40683 + C40684 - C40685) * C49168 +
             (C40686 - C40687 + C40688 - C40689) * C50067) *
                C50260) *
               C445) *
              C997 +
          ((((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C443 +
           (((C36545 - C36544 + C36547 - C36546) * C49175 +
             (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
             C41353 * C50067) *
                C50364 +
            ((C36553 - C36552 + C36555 - C36554) * C49175 +
             (C36557 - C36556 + C36559 - C36558) * C50336 +
             (C36560 - C36561 + C36562 - C36563) * C49168 +
             (C36564 - C36565 + C36566 - C36567) * C50067) *
                C50260) *
               C444 +
           (((C36976 - C36975 + C36978 - C36977) * C49175 +
             (C36980 - C36979 + C36982 - C36981) * C50336 +
             (C40683 - C40682 + C40685 - C40684) * C49168 +
             (C40687 - C40686 + C40689 - C40688) * C50067) *
                C50364 +
            ((C36984 - C36983 + C36986 - C36985) * C49175 +
             (C36988 - C36987 + C36990 - C36989) * C50336 +
             (C32933 * C2627 - C32931 * C2631 + C32934 * C4503 -
              C50286 * C4510) *
                 C49168 +
             (C32933 * C2632 - C32931 * C2636 + C32934 * C4511 -
              C50286 * C4515) *
                 C50067) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C49175 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50336 +
              (C32936 - C32937 + C32938 - C32939) * C49168 +
              (C32940 - C32941 + C32942 - C32943) * C50067) *
                 C50364 +
             ((C35862 - C35863 + C35864 - C35865) * C49175 +
              (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
              C40483 * C50067) *
                 C50260) *
                C50352 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C49175 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50336 +
              (C33304 - C33305 + C33306 - C33307) * C49168 +
              (C33308 - C33309 + C33310 - C33311) * C50067) *
                 C50364 +
             ((C36544 - C36545 + C36546 - C36547) * C49175 +
              (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
              C41351 * C50067) *
                 C50260) *
                C50189) *
               C997 +
           ((((C35863 - C35862 + C35865 - C35864) * C49175 +
              (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
              C40485 * C50067) *
                 C50364 +
             ((C35871 - C35870 + C35873 - C35872) * C49175 +
              (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
              C35903 * C50067) *
                 C50260) *
                C50352 +
            (((C36545 - C36544 + C36547 - C36546) * C49175 +
              (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
              C41353 * C50067) *
                 C50364 +
             ((C36553 - C36552 + C36555 - C36554) * C49175 +
              (C36557 - C36556 + C36559 - C36558) * C50336 +
              (C36560 - C36561 + C36562 - C36563) * C49168 +
              (C36564 - C36565 + C36566 - C36567) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C32937 - C32936 + C32939 - C32938) * C49175 +
              (C32941 - C32940 + C32943 - C32942) * C50336 +
              (C32945 - C32944 + C32947 - C32946) * C49168 +
              (C32949 - C32948 + C32951 - C32950) * C50067) *
                 C50364 +
             (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
              C33495 * C50067) *
                 C50260) *
                C50352 +
            (((C33305 - C33304 + C33307 - C33306) * C49175 +
              (C33309 - C33308 + C33311 - C33310) * C50336 +
              (C33313 - C33312 + C33315 - C33314) * C49168 +
              (C33317 - C33316 + C33319 - C33318) * C50067) *
                 C50364 +
             (C41352 * C49175 + C41353 * C50336 +
              (C33858 - C33859 + C33860 - C33861) * C49168 +
              (C33862 - C33863 + C33864 - C33865) * C50067) *
                 C50260) *
                C50189) *
               C997 +
           (((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
              C40889 * C50067) *
                 C50364 +
             (C40486 * C49175 + C40487 * C50336 +
              (C33150 - C33151 + C33152 - C33153) * C49168 +
              (C33154 - C33155 + C33156 - C33157) * C50067) *
                 C50260) *
                C50352 +
            ((C41350 * C49175 + C41351 * C50336 +
              (C33859 - C33858 + C33861 - C33860) * C49168 +
              (C33863 - C33862 + C33865 - C33864) * C50067) *
                 C50364 +
             ((C36561 - C36560 + C36563 - C36562) * C49175 +
              (C36565 - C36564 + C36567 - C36566) * C50336 +
              (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
               C50286 * C2633) *
                  C49168 +
              (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50125 * C997 +
           (((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50125 * C997 +
           ((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
             C40889 * C50067) *
                C50364 +
            (C40486 * C49175 + C40487 * C50336 +
             (C33150 - C33151 + C33152 - C33153) * C49168 +
             (C33154 - C33155 + C33156 - C33157) * C50067) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          (((C32976 * C49175 + C32977 * C50336 +
             (C32953 - C32952 + C32955 - C32954) * C49168 +
             (C32957 - C32956 + C32959 - C32958) * C50067) *
                C50364 +
            (C40888 * C49175 + C40889 * C50336 +
             (C33486 - C33487 + C33488 - C33489) * C49168 +
             (C33490 - C33491 + C33492 - C33493) * C50067) *
                C50260) *
               C50125 * C997 +
           ((C33494 * C49175 + C33495 * C50336 +
             (C33487 - C33486 + C33489 - C33488) * C49168 +
             (C33491 - C33490 + C33493 - C33492) * C50067) *
                C50364 +
            ((C33151 - C33150 + C33153 - C33152) * C49175 +
             (C33155 - C33154 + C33157 - C33156) * C50336 +
             (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                 C49168 +
             (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                 C50067) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C49175 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50336 +
            (C32936 - C32937 + C32938 - C32939) * C49168 +
            (C32940 - C32941 + C32942 - C32943) * C50067) *
               C50364 +
           ((C35862 - C35863 + C35864 - C35865) * C49175 +
            (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
            C40483 * C50067) *
               C50260) *
              C50125 * C1068 +
          (((C35863 - C35862 + C35865 - C35864) * C49175 +
            (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
            C40485 * C50067) *
               C50364 +
           ((C35871 - C35870 + C35873 - C35872) * C49175 +
            (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
            C35903 * C50067) *
               C50260) *
              C50125 * C1069 +
          ((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
            C40487 * C50067) *
               C50364 +
           ((C35879 - C35878 + C35881 - C35880) * C49175 +
            (C35883 - C35882 + C35885 - C35884) * C50336 +
            (C35890 - C35891 + C35892 - C35893) * C49168 +
            (C35894 - C35895 + C35896 - C35897) * C50067) *
               C50260) *
              C50125 * C1070 +
          ((C36824 * C49175 + C36825 * C50336 +
            (C35891 - C35890 + C35893 - C35892) * C49168 +
            (C35895 - C35894 + C35897 - C35896) * C50067) *
               C50364 +
           ((C36817 - C36816 + C36819 - C36818) * C49175 +
            (C36821 - C36820 + C36823 - C36822) * C50336 +
            (C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
             C50286 * C4093) *
                C49168 +
            (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
             C50286 * C4096) *
                C50067) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C49175 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50336 +
              (C32936 - C32937 + C32938 - C32939) * C49168 +
              (C32940 - C32941 + C32942 - C32943) * C50067) *
                 C50364 +
             ((C35862 - C35863 + C35864 - C35865) * C49175 +
              (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
              C40483 * C50067) *
                 C50260) *
                C1648 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C49175 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50336 +
              (C33304 - C33305 + C33306 - C33307) * C49168 +
              (C33308 - C33309 + C33310 - C33311) * C50067) *
                 C50364 +
             ((C36544 - C36545 + C36546 - C36547) * C49175 +
              (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
              C41351 * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C35863 - C35862 + C35865 - C35864) * C49175 +
              (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
              C40485 * C50067) *
                 C50364 +
             ((C35871 - C35870 + C35873 - C35872) * C49175 +
              (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
              C35903 * C50067) *
                 C50260) *
                C1648 +
            (((C36545 - C36544 + C36547 - C36546) * C49175 +
              (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
              C41353 * C50067) *
                 C50364 +
             ((C36553 - C36552 + C36555 - C36554) * C49175 +
              (C36557 - C36556 + C36559 - C36558) * C50336 +
              (C36560 - C36561 + C36562 - C36563) * C49168 +
              (C36564 - C36565 + C36566 - C36567) * C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C32937 - C32936 + C32939 - C32938) * C49175 +
              (C32941 - C32940 + C32943 - C32942) * C50336 +
              (C32945 - C32944 + C32947 - C32946) * C49168 +
              (C32949 - C32948 + C32951 - C32950) * C50067) *
                 C50364 +
             (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
              C33495 * C50067) *
                 C50260) *
                C1648 +
            (((C33305 - C33304 + C33307 - C33306) * C49175 +
              (C33309 - C33308 + C33311 - C33310) * C50336 +
              (C33313 - C33312 + C33315 - C33314) * C49168 +
              (C33317 - C33316 + C33319 - C33318) * C50067) *
                 C50364 +
             (C41352 * C49175 + C41353 * C50336 +
              (C33858 - C33859 + C33860 - C33861) * C49168 +
              (C33862 - C33863 + C33864 - C33865) * C50067) *
                 C50260) *
                C50189) *
               C50351 +
           (((C40482 * C49175 + C40483 * C50336 + C40888 * C49168 +
              C40889 * C50067) *
                 C50364 +
             (C40486 * C49175 + C40487 * C50336 +
              (C33150 - C33151 + C33152 - C33153) * C49168 +
              (C33154 - C33155 + C33156 - C33157) * C50067) *
                 C50260) *
                C1648 +
            ((C41350 * C49175 + C41351 * C50336 +
              (C33859 - C33858 + C33861 - C33860) * C49168 +
              (C33863 - C33862 + C33865 - C33864) * C50067) *
                 C50364 +
             ((C36561 - C36560 + C36563 - C36562) * C49175 +
              (C36565 - C36564 + C36567 - C36566) * C50336 +
              (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
               C50286 * C2633) *
                  C49168 +
              (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
               C50286 * C2637) *
                  C50067) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50398 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50399 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C49175 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50336 +
             (C33320 - C33321 + C33322 - C33323) * C49168 +
             (C33324 - C33325 + C33326 - C33327) * C50067) *
                C50364 +
            ((C36975 - C36976 + C36977 - C36978) * C49175 +
             (C36979 - C36980 + C36981 - C36982) * C50336 +
             (C40682 - C40683 + C40684 - C40685) * C49168 +
             (C40686 - C40687 + C40688 - C40689) * C50067) *
                C50260) *
               C2064) *
              C50351 +
          ((((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C50398 +
           (((C36545 - C36544 + C36547 - C36546) * C49175 +
             (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
             C41353 * C50067) *
                C50364 +
            ((C36553 - C36552 + C36555 - C36554) * C49175 +
             (C36557 - C36556 + C36559 - C36558) * C50336 +
             (C36560 - C36561 + C36562 - C36563) * C49168 +
             (C36564 - C36565 + C36566 - C36567) * C50067) *
                C50260) *
               C50399 +
           (((C36976 - C36975 + C36978 - C36977) * C49175 +
             (C36980 - C36979 + C36982 - C36981) * C50336 +
             (C40683 - C40682 + C40685 - C40684) * C49168 +
             (C40687 - C40686 + C40689 - C40688) * C50067) *
                C50364 +
            ((C36984 - C36983 + C36986 - C36985) * C49175 +
             (C36988 - C36987 + C36990 - C36989) * C50336 +
             (C32933 * C2627 - C32931 * C2631 + C32934 * C4503 -
              C50286 * C4510) *
                 C49168 +
             (C32933 * C2632 - C32931 * C2636 + C32934 * C4511 -
              C50286 * C4515) *
                 C50067) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50189) *
              C276 +
          ((((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C1648 +
           (((C36545 - C36544 + C36547 - C36546) * C49175 +
             (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
             C41353 * C50067) *
                C50364 +
            ((C36553 - C36552 + C36555 - C36554) * C49175 +
             (C36557 - C36556 + C36559 - C36558) * C50336 +
             (C36560 - C36561 + C36562 - C36563) * C49168 +
             (C36564 - C36565 + C36566 - C36567) * C50067) *
                C50260) *
               C50189) *
              C277 +
          (((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
             C40487 * C50067) *
                C50364 +
            ((C35879 - C35878 + C35881 - C35880) * C49175 +
             (C35883 - C35882 + C35885 - C35884) * C50336 +
             (C35890 - C35891 + C35892 - C35893) * C49168 +
             (C35894 - C35895 + C35896 - C35897) * C50067) *
                C50260) *
               C1648 +
           ((C37489 * C49175 + C37490 * C50336 +
             (C36561 - C36560 + C36563 - C36562) * C49168 +
             (C36565 - C36564 + C36567 - C36566) * C50067) *
                C50364 +
            ((C37482 - C37481 + C37484 - C37483) * C49175 +
             (C37486 - C37485 + C37488 - C37487) * C50336 +
             (C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
              C50286 * C3591) *
                 C49168 +
             (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C1648 +
           (((C33305 - C33304 + C33307 - C33306) * C49175 +
             (C33309 - C33308 + C33311 - C33310) * C50336 +
             (C33313 - C33312 + C33315 - C33314) * C49168 +
             (C33317 - C33316 + C33319 - C33318) * C50067) *
                C50364 +
            (C41352 * C49175 + C41353 * C50336 +
             (C33858 - C33859 + C33860 - C33861) * C49168 +
             (C33862 - C33863 + C33864 - C33865) * C50067) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C32976 * C49175 + C32977 * C50336 +
             (C32953 - C32952 + C32955 - C32954) * C49168 +
             (C32957 - C32956 + C32959 - C32958) * C50067) *
                C50364 +
            (C40888 * C49175 + C40889 * C50336 +
             (C33486 - C33487 + C33488 - C33489) * C49168 +
             (C33490 - C33491 + C33492 - C33493) * C50067) *
                C50260) *
               C1648 +
           ((C33654 * C49175 + C33655 * C50336 +
             (C33647 - C33646 + C33649 - C33648) * C49168 +
             (C33651 - C33650 + C33653 - C33652) * C50067) *
                C50364 +
            ((C33859 - C33858 + C33861 - C33860) * C49175 +
             (C33863 - C33862 + C33865 - C33864) * C50336 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C49168 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C49175 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50336 +
            (C32936 - C32937 + C32938 - C32939) * C49168 +
            (C32940 - C32941 + C32942 - C32943) * C50067) *
               C50364 +
           ((C35862 - C35863 + C35864 - C35865) * C49175 +
            (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
            C40483 * C50067) *
               C50260) *
              C1814 +
          (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C49175 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C50336 +
            (C33304 - C33305 + C33306 - C33307) * C49168 +
            (C33308 - C33309 + C33310 - C33311) * C50067) *
               C50364 +
           ((C36544 - C36545 + C36546 - C36547) * C49175 +
            (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
            C41351 * C50067) *
               C50260) *
              C1815 +
          (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C49175 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C50336 +
            (C33320 - C33321 + C33322 - C33323) * C49168 +
            (C33324 - C33325 + C33326 - C33327) * C50067) *
               C50364 +
           ((C36975 - C36976 + C36977 - C36978) * C49175 +
            (C36979 - C36980 + C36981 - C36982) * C50336 +
            (C40682 - C40683 + C40684 - C40685) * C49168 +
            (C40686 - C40687 + C40688 - C40689) * C50067) *
               C50260) *
              C1816 +
          (((C32933 * C1818 - C32931 * C1822 + C32934 * C5458 -
             C50286 * C5461) *
                C49175 +
            (C32933 * C1823 - C32931 * C1830 + C32934 * C5462 -
             C50286 * C5467) *
                C50336 +
            (C32933 * C1819 - C32931 * C1824 + C32934 * C5459 -
             C50286 * C5463) *
                C49168 +
            (C32933 * C1825 - C32931 * C1831 + C32934 * C5464 -
             C50286 * C5468) *
                C50067) *
               C50364 +
           ((C32933 * C4500 - C32931 * C4504 + C32934 * C6410 -
             C50286 * C6412) *
                C49175 +
            (C32933 * C4505 - C32931 * C4512 + C32934 * C6413 -
             C50286 * C6416) *
                C50336 +
            (C32933 * C4501 - C32931 * C4506 + C32934 * C6411 -
             C50286 * C6414) *
                C49168 +
            (C32933 * C4507 - C32931 * C4513 + C32934 * C6415 -
             C50286 * C6417) *
                C50067) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C50398 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50399 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C49175 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50336 +
             (C33320 - C33321 + C33322 - C33323) * C49168 +
             (C33324 - C33325 + C33326 - C33327) * C50067) *
                C50364 +
            ((C36975 - C36976 + C36977 - C36978) * C49175 +
             (C36979 - C36980 + C36981 - C36982) * C50336 +
             (C40682 - C40683 + C40684 - C40685) * C49168 +
             (C40686 - C40687 + C40688 - C40689) * C50067) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C50398 +
           (((C33305 - C33304 + C33307 - C33306) * C49175 +
             (C33309 - C33308 + C33311 - C33310) * C50336 +
             (C33313 - C33312 + C33315 - C33314) * C49168 +
             (C33317 - C33316 + C33319 - C33318) * C50067) *
                C50364 +
            (C41352 * C49175 + C41353 * C50336 +
             (C33858 - C33859 + C33860 - C33861) * C49168 +
             (C33862 - C33863 + C33864 - C33865) * C50067) *
                C50260) *
               C50399 +
           (((C33321 - C33320 + C33323 - C33322) * C49175 +
             (C33325 - C33324 + C33327 - C33326) * C50336 +
             (C33329 - C33328 + C33331 - C33330) * C49168 +
             (C33333 - C33332 + C33335 - C33334) * C50067) *
                C50364 +
            ((C40683 - C40682 + C40685 - C40684) * C49175 +
             (C40687 - C40686 + C40689 - C40688) * C50336 +
             (C32933 * C1189 - C32931 * C1195 + C32934 * C6004 -
              C50286 * C6005) *
                 C49168 +
             (C32933 * C1196 - C32931 * C1201 + C32934 * C6006 -
              C50286 * C6007) *
                 C50067) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C49175 +
             (C32941 - C32940 + C32943 - C32942) * C50336 +
             (C32945 - C32944 + C32947 - C32946) * C49168 +
             (C32949 - C32948 + C32951 - C32950) * C50067) *
                C50364 +
            (C40484 * C49175 + C40485 * C50336 + C33494 * C49168 +
             C33495 * C50067) *
                C50260) *
               C1648 +
           (((C33305 - C33304 + C33307 - C33306) * C49175 +
             (C33309 - C33308 + C33311 - C33310) * C50336 +
             (C33313 - C33312 + C33315 - C33314) * C49168 +
             (C33317 - C33316 + C33319 - C33318) * C50067) *
                C50364 +
            (C41352 * C49175 + C41353 * C50336 +
             (C33858 - C33859 + C33860 - C33861) * C49168 +
             (C33862 - C33863 + C33864 - C33865) * C50067) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          (((C32976 * C49175 + C32977 * C50336 +
             (C32953 - C32952 + C32955 - C32954) * C49168 +
             (C32957 - C32956 + C32959 - C32958) * C50067) *
                C50364 +
            (C40888 * C49175 + C40889 * C50336 +
             (C33486 - C33487 + C33488 - C33489) * C49168 +
             (C33490 - C33491 + C33492 - C33493) * C50067) *
                C50260) *
               C1648 +
           ((C33654 * C49175 + C33655 * C50336 +
             (C33647 - C33646 + C33649 - C33648) * C49168 +
             (C33651 - C33650 + C33653 - C33652) * C50067) *
                C50364 +
            ((C33859 - C33858 + C33861 - C33860) * C49175 +
             (C33863 - C33862 + C33865 - C33864) * C50336 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C49168 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C50067) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C49175 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50336 +
             (C32936 - C32937 + C32938 - C32939) * C49168 +
             (C32940 - C32941 + C32942 - C32943) * C50067) *
                C50364 +
            ((C35862 - C35863 + C35864 - C35865) * C49175 +
             (C35866 - C35867 + C35868 - C35869) * C50336 + C40482 * C49168 +
             C40483 * C50067) *
                C50260) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C49175 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50336 +
             (C33304 - C33305 + C33306 - C33307) * C49168 +
             (C33308 - C33309 + C33310 - C33311) * C50067) *
                C50364 +
            ((C36544 - C36545 + C36546 - C36547) * C49175 +
             (C36548 - C36549 + C36550 - C36551) * C50336 + C41350 * C49168 +
             C41351 * C50067) *
                C50260) *
               C50189) *
              C276 +
          ((((C35863 - C35862 + C35865 - C35864) * C49175 +
             (C35867 - C35866 + C35869 - C35868) * C50336 + C40484 * C49168 +
             C40485 * C50067) *
                C50364 +
            ((C35871 - C35870 + C35873 - C35872) * C49175 +
             (C35875 - C35874 + C35877 - C35876) * C50336 + C35902 * C49168 +
             C35903 * C50067) *
                C50260) *
               C1648 +
           (((C36545 - C36544 + C36547 - C36546) * C49175 +
             (C36549 - C36548 + C36551 - C36550) * C50336 + C41352 * C49168 +
             C41353 * C50067) *
                C50364 +
            ((C36553 - C36552 + C36555 - C36554) * C49175 +
             (C36557 - C36556 + C36559 - C36558) * C50336 +
             (C36560 - C36561 + C36562 - C36563) * C49168 +
             (C36564 - C36565 + C36566 - C36567) * C50067) *
                C50260) *
               C50189) *
              C277 +
          (((C35904 * C49175 + C35905 * C50336 + C40486 * C49168 +
             C40487 * C50067) *
                C50364 +
            ((C35879 - C35878 + C35881 - C35880) * C49175 +
             (C35883 - C35882 + C35885 - C35884) * C50336 +
             (C35890 - C35891 + C35892 - C35893) * C49168 +
             (C35894 - C35895 + C35896 - C35897) * C50067) *
                C50260) *
               C1648 +
           ((C37489 * C49175 + C37490 * C50336 +
             (C36561 - C36560 + C36563 - C36562) * C49168 +
             (C36565 - C36564 + C36567 - C36566) * C50067) *
                C50364 +
            ((C37482 - C37481 + C37484 - C37483) * C49175 +
             (C37486 - C37485 + C37488 - C37487) * C50336 +
             (C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
              C50286 * C3591) *
                 C49168 +
             (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
              C50286 * C3594) *
                 C50067) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50125 * C50351 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50125 * C50351 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                C50364 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
                C50364 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
                C50260) *
               C50125 * C50351 +
           (((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C19531 +
             (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50062) *
                C50364 +
            ((C43782 * C287 - C50402 * C303 + C43783 * C1536 - C50403 * C1542 +
              C43784 * C2628 - C43781 * C2633) *
                 C19531 +
             (C43782 * C304 - C50402 * C317 + C43783 * C1543 - C50403 * C1548 +
              C43784 * C2634 - C43781 * C2637) *
                 C50062) *
                C50260) *
               C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
               C43781 * C464 - C43784 * C450) *
                  C19531 +
              (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
               C43781 * C480 - C43784 * C465) *
                  C50062) *
                 C50364 +
             ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
              (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                 C50260) *
                C50352 +
            (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
               C43784 * C1818 - C43781 * C1822) *
                  C19531 +
              (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
               C43784 * C1823 - C43781 * C1830) *
                  C50062) *
                 C50364 +
             ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
              (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
              (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                 C50364 +
             ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
              (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                 C50260) *
                C50352 +
            (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
              (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                 C50364 +
             ((C50402 * C1538 - C43782 * C1534 + C50403 * C2629 -
               C43783 * C2626 + C43781 * C4508 - C43784 * C4502) *
                  C19531 +
              (C50402 * C1546 - C43782 * C1539 + C50403 * C2635 -
               C43783 * C2630 + C43781 * C4514 - C43784 * C4509) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C279 +
          (((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
              (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                 C50364 +
             ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
              (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                 C50260) *
                C50352 +
            (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
              (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                 C50364 +
             ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
              (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
              (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                 C50364 +
             ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
              (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                 C50260) *
                C50352 +
            (((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C19531 +
              (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50062) *
                 C50364 +
             ((C43782 * C1535 - C50402 * C1540 + C43783 * C2627 -
               C50403 * C2631 + C43784 * C4503 - C43781 * C4510) *
                  C19531 +
              (C43782 * C1541 - C50402 * C1547 + C43783 * C2632 -
               C50403 * C2636 + C43784 * C4511 - C43781 * C4515) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
             (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
                C50364 +
            ((C50402 * C1077 - C43782 * C1073 + C50403 * C3147 -
              C43783 * C3144 + C43781 * C3589 - C43784 * C3587) *
                 C19531 +
             (C50402 * C1085 - C43782 * C1078 + C50403 * C3153 -
              C43783 * C3148 + C43781 * C3593 - C43784 * C3590) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                C50364 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C19531 +
             (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50062) *
                C50364 +
            ((C43782 * C1074 - C50402 * C1079 + C43783 * C3145 -
              C50403 * C3149 + C43784 * C3588 - C43781 * C3591) *
                 C19531 +
             (C43782 * C1080 - C50402 * C1086 + C43783 * C3150 -
              C50403 * C3154 + C43784 * C3592 - C43781 * C3594) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C19531 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50062) *
               C50364 +
           ((C50402 * C291 - C43782 * C281 + C50403 * C872 - C43783 * C867 +
             C43781 * C1191 - C43784 * C1187) *
                C19531 +
            (C50402 * C311 - C43782 * C292 + C50403 * C882 - C43783 * C873 +
             C43781 * C1199 - C43784 * C1192) *
                C50062) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
               C50364 +
           ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
               C50364 +
           ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C19531 +
            (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50062) *
               C50364 +
           ((C43782 * C284 - C50402 * C297 + C43783 * C870 - C50403 * C878 +
             C43784 * C1190 - C43781 * C1197) *
                C19531 +
            (C43782 * C298 - C50402 * C314 + C43783 * C879 - C50403 * C885 +
             C43784 * C1198 - C43781 * C1202) *
                C50062) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C443 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C43782 * C867 - C50402 * C872 + C43783 * C1187 - C50403 * C1191 +
              C43784 * C4500 - C43781 * C4504) *
                 C19531 +
             (C43782 * C873 - C50402 * C882 + C43783 * C1192 - C50403 * C1199 +
              C43784 * C4505 - C43781 * C4512) *
                 C50062) *
                C50260) *
               C444 +
           (((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
              C43781 * C5461 - C43784 * C5458) *
                 C19531 +
             (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
              C43781 * C5467 - C43784 * C5462) *
                 C50062) *
                C50364 +
            ((C50402 * C1191 - C43782 * C1187 + C50403 * C4504 -
              C43783 * C4500 + C43781 * C6412 - C43784 * C6410) *
                 C19531 +
             (C50402 * C1199 - C43782 * C1192 + C50403 * C4512 -
              C43783 * C4505 + C43781 * C6416 - C43784 * C6413) *
                 C50062) *
                C50260) *
               C445) *
              C50109 * C279 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C443 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                C50364 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                C50260) *
               C444 +
           (((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C19531 +
             (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50062) *
                C50364 +
            ((C43782 * C1188 - C50402 * C1193 + C43783 * C4501 -
              C50403 * C4506 + C43784 * C6411 - C43781 * C6414) *
                 C19531 +
             (C43782 * C1194 - C50402 * C1200 + C43783 * C4507 -
              C50403 * C4513 + C43784 * C6415 - C43781 * C6417) *
                 C50062) *
                C50260) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50352 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C43782 * C867 - C50402 * C872 + C43783 * C1187 - C50403 * C1191 +
              C43784 * C4500 - C43781 * C4504) *
                 C19531 +
             (C43782 * C873 - C50402 * C882 + C43783 * C1192 - C50403 * C1199 +
              C43784 * C4505 - C43781 * C4512) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50352 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                C50364 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
                C50364 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
                C50260) *
               C50352 +
           (((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C19531 +
             (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50062) *
                C50364 +
            ((C43782 * C869 - C50402 * C876 + C43783 * C1189 - C50403 * C1195 +
              C43784 * C6004 - C43781 * C6005) *
                 C19531 +
             (C43782 * C877 - C50402 * C884 + C43783 * C1196 - C50403 * C1201 +
              C43784 * C6006 - C43781 * C6007) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C19531 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50062) *
               C50364 +
           ((C50402 * C291 - C43782 * C281 + C50403 * C872 - C43783 * C867 +
             C43781 * C1191 - C43784 * C1187) *
                C19531 +
            (C50402 * C311 - C43782 * C292 + C50403 * C882 - C43783 * C873 +
             C43781 * C1199 - C43784 * C1192) *
                C50062) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
               C50364 +
           ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
               C50364 +
           ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C19531 +
            (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50062) *
               C50364 +
           ((C43782 * C284 - C50402 * C297 + C43783 * C870 - C50403 * C878 +
             C43784 * C1190 - C43781 * C1197) *
                C19531 +
            (C43782 * C298 - C50402 * C314 + C43783 * C879 - C50403 * C885 +
             C43784 * C1198 - C43781 * C1202) *
                C50062) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
             (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
                C50364 +
            ((C50402 * C1077 - C43782 * C1073 + C50403 * C3147 -
              C43783 * C3144 + C43781 * C3589 - C43784 * C3587) *
                 C19531 +
             (C50402 * C1085 - C43782 * C1078 + C50403 * C3153 -
              C43783 * C3148 + C43781 * C3593 - C43784 * C3590) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C279 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50125 * C276 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                C50364 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                C50260) *
               C50125 * C277 +
           (((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C19531 +
             (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50062) *
                C50364 +
            ((C43782 * C1074 - C50402 * C1079 + C43783 * C3145 -
              C50403 * C3149 + C43784 * C3588 - C43781 * C3591) *
                 C19531 +
             (C43782 * C1080 - C50402 * C1086 + C43783 * C3150 -
              C50403 * C3154 + C43784 * C3592 - C43781 * C3594) *
                 C50062) *
                C50260) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50125 * C50396 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50125 * C50397 +
           (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
             (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
                C50364 +
            ((C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C19531 +
             (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50062) *
                C50260) *
               C50125 * C1303) *
              C50343 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50125 * C50396 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                C50364 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                C50260) *
               C50125 * C50397 +
           (((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C19531 +
             (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50062) *
                C50364 +
            ((C43782 * C1074 - C50402 * C1079 + C43783 * C3145 -
              C50403 * C3149 + C43784 * C3588 - C43781 * C3591) *
                 C19531 +
             (C43782 * C1080 - C50402 * C1086 + C43783 * C3150 -
              C50403 * C3154 + C43784 * C3592 - C43781 * C3594) *
                 C50062) *
                C50260) *
               C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50352 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50189) *
              C50396 +
          ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50352 +
           (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                C50364 +
            ((C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C19531 +
             (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50062) *
                C50260) *
               C50189) *
              C50397 +
          ((((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
             (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
                C50364 +
            ((C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C19531 +
             (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50062) *
                C50260) *
               C50352 +
           (((C48249 - C48248 + C48251 - C48250 + C48253 - C48252) * C19531 +
             (C48255 - C48254 + C48257 - C48256 + C48259 - C48258) * C50062) *
                C50364 +
            ((C43782 * C3144 - C50402 * C3147 + C43783 * C3587 -
              C50403 * C3589 + C43784 * C20958 - C43781 * C20959) *
                 C19531 +
             (C43782 * C3148 - C50402 * C3153 + C43783 * C3590 -
              C50403 * C3593 + C43784 * C20960 - C43781 * C20961) *
                 C50062) *
                C50260) *
               C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C19531 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50062) *
               C50364 +
           ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
               C50260) *
              C50125 * C1068 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
               C50364 +
           ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
               C50260) *
              C50125 * C1069 +
          (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
               C50364 +
           ((C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C19531 +
            (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50062) *
               C50260) *
              C50125 * C1070 +
          (((C47593 - C47592 + C47595 - C47594 + C47597 - C47596) * C19531 +
            (C47599 - C47598 + C47601 - C47600 + C47603 - C47602) * C50062) *
               C50364 +
           ((C43782 * C2414 - C50402 * C2417 + C43783 * C4089 - C50403 * C4091 +
             C43784 * C20346 - C43781 * C20347) *
                C19531 +
            (C43782 * C2418 - C50402 * C2423 + C43783 * C4092 - C50403 * C4095 +
             C43784 * C20348 - C43781 * C20349) *
                C50062) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                C50364 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
                C50364 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C19531 +
             (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50062) *
                C50364 +
            ((C43782 * C287 - C50402 * C303 + C43783 * C1536 - C50403 * C1542 +
              C43784 * C2628 - C43781 * C2633) *
                 C19531 +
             (C43782 * C304 - C50402 * C317 + C43783 * C1543 - C50403 * C1548 +
              C43784 * C2634 - C43781 * C2637) *
                 C50062) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C443 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C444 +
           (((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
              C43781 * C5461 - C43784 * C5458) *
                 C19531 +
             (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
              C43781 * C5467 - C43784 * C5462) *
                 C50062) *
                C50364 +
            ((C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C19531 +
             (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50062) *
                C50260) *
               C445) *
              C997 +
          ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C443 +
           (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                C50364 +
            ((C50402 * C1538 - C43782 * C1534 + C50403 * C2629 -
              C43783 * C2626 + C43781 * C4508 - C43784 * C4502) *
                 C19531 +
             (C50402 * C1546 - C43782 * C1539 + C50403 * C2635 -
              C43783 * C2630 + C43781 * C4514 - C43784 * C4509) *
                 C50062) *
                C50260) *
               C444 +
           (((C47751 - C47750 + C47753 - C47752 + C47755 - C47754) * C19531 +
             (C47757 - C47756 + C47759 - C47758 + C47761 - C47760) * C50062) *
                C50364 +
            ((C43782 * C2626 - C50402 * C2629 + C43783 * C4502 -
              C50403 * C4508 + C43784 * C22602 - C43781 * C22603) *
                 C19531 +
             (C43782 * C2630 - C50402 * C2635 + C43783 * C4509 -
              C50403 * C4514 + C43784 * C22604 - C43781 * C22605) *
                 C50062) *
                C50260) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
               C43781 * C464 - C43784 * C450) *
                  C19531 +
              (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
               C43781 * C480 - C43784 * C465) *
                  C50062) *
                 C50364 +
             ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
              (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                 C50260) *
                C50352 +
            (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
               C43784 * C1818 - C43781 * C1822) *
                  C19531 +
              (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
               C43784 * C1823 - C43781 * C1830) *
                  C50062) *
                 C50364 +
             ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
              (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                 C50260) *
                C50189) *
               C997 +
           ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
              (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                 C50364 +
             ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
              (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                 C50260) *
                C50352 +
            (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
              (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                 C50364 +
             ((C50402 * C1538 - C43782 * C1534 + C50403 * C2629 -
               C43783 * C2626 + C43781 * C4508 - C43784 * C4502) *
                  C19531 +
              (C50402 * C1546 - C43782 * C1539 + C50403 * C2635 -
               C43783 * C2630 + C43781 * C4514 - C43784 * C4509) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
              (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                 C50364 +
             ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
              (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                 C50260) *
                C50352 +
            (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
              (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                 C50364 +
             ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
              (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                 C50260) *
                C50189) *
               C997 +
           ((((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
              (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                 C50364 +
             ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
              (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                 C50260) *
                C50352 +
            (((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C19531 +
              (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50062) *
                 C50364 +
             ((C43782 * C1535 - C50402 * C1540 + C43783 * C2627 -
               C50403 * C2631 + C43784 * C4503 - C43781 * C4510) *
                  C19531 +
              (C43782 * C1541 - C50402 * C1547 + C43783 * C2632 -
               C50403 * C2636 + C43784 * C4511 - C43781 * C4515) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50125 * C50161) *
              C999 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                C50364 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                C50260) *
               C50125 * C50161) *
              C1000 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
                C50364 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
                C50260) *
               C50125 * C997 +
           (((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C19531 +
             (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50062) *
                C50364 +
            ((C43782 * C287 - C50402 * C303 + C43783 * C1536 - C50403 * C1542 +
              C43784 * C2628 - C43781 * C2633) *
                 C19531 +
             (C43782 * C304 - C50402 * C317 + C43783 * C1543 - C50403 * C1548 +
              C43784 * C2634 - C43781 * C2637) *
                 C50062) *
                C50260) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C19531 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50062) *
               C50364 +
           ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
               C50260) *
              C50125 * C1068 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
               C50364 +
           ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
               C50260) *
              C50125 * C1069 +
          (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
               C50364 +
           ((C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C19531 +
            (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50062) *
               C50260) *
              C50125 * C1070 +
          (((C47593 - C47592 + C47595 - C47594 + C47597 - C47596) * C19531 +
            (C47599 - C47598 + C47601 - C47600 + C47603 - C47602) * C50062) *
               C50364 +
           ((C43782 * C2414 - C50402 * C2417 + C43783 * C4089 - C50403 * C4091 +
             C43784 * C20346 - C43781 * C20347) *
                C19531 +
            (C43782 * C2418 - C50402 * C2423 + C43783 * C4092 - C50403 * C4095 +
             C43784 * C20348 - C43781 * C20349) *
                C50062) *
               C50260) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
               C43781 * C464 - C43784 * C450) *
                  C19531 +
              (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
               C43781 * C480 - C43784 * C465) *
                  C50062) *
                 C50364 +
             ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
              (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                 C50260) *
                C1648 +
            (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
               C43784 * C1818 - C43781 * C1822) *
                  C19531 +
              (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
               C43784 * C1823 - C43781 * C1830) *
                  C50062) *
                 C50364 +
             ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
              (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
              (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                 C50364 +
             ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
              (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                 C50260) *
                C1648 +
            (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
              (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                 C50364 +
             ((C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C19531 +
              (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
              (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                 C50364 +
             ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
              (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                 C50260) *
                C1648 +
            (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
              (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                 C50364 +
             ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
              (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C19531 +
              (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50062) *
                 C50364 +
             ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C19531 +
              (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50062) *
                 C50260) *
                C1648 +
            (((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C19531 +
              (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50062) *
                 C50364 +
             ((C43782 * C1535 - C50402 * C1540 + C43783 * C2627 -
               C50403 * C2631 + C43784 * C4503 - C43781 * C4510) *
                  C19531 +
              (C43782 * C1541 - C50402 * C1547 + C43783 * C2632 -
               C50403 * C2636 + C43784 * C4511 - C43781 * C4515) *
                  C50062) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50398 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50399 +
           (((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
              C43781 * C5461 - C43784 * C5458) *
                 C19531 +
             (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
              C43781 * C5467 - C43784 * C5462) *
                 C50062) *
                C50364 +
            ((C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C19531 +
             (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50062) *
                C50260) *
               C2064) *
              C50351 +
          ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C50398 +
           (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                C50364 +
            ((C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C19531 +
             (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50062) *
                C50260) *
               C50399 +
           (((C47751 - C47750 + C47753 - C47752 + C47755 - C47754) * C19531 +
             (C47757 - C47756 + C47759 - C47758 + C47761 - C47760) * C50062) *
                C50364 +
            ((C43782 * C2626 - C50402 * C2629 + C43783 * C4502 -
              C50403 * C4508 + C43784 * C22602 - C43781 * C22603) *
                 C19531 +
             (C43782 * C2630 - C50402 * C2635 + C43783 * C4509 -
              C50403 * C4514 + C43784 * C22604 - C43781 * C22605) *
                 C50062) *
                C50260) *
               C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C1648 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50189) *
              C276 +
          ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C1648 +
           (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                C50364 +
            ((C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C19531 +
             (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50062) *
                C50260) *
               C50189) *
              C277 +
          ((((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
             (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
                C50364 +
            ((C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C19531 +
             (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50062) *
                C50260) *
               C1648 +
           (((C48249 - C48248 + C48251 - C48250 + C48253 - C48252) * C19531 +
             (C48255 - C48254 + C48257 - C48256 + C48259 - C48258) * C50062) *
                C50364 +
            ((C43782 * C3144 - C50402 * C3147 + C43783 * C3587 -
              C50403 * C3589 + C43784 * C20958 - C43781 * C20959) *
                 C19531 +
             (C43782 * C3148 - C50402 * C3153 + C43783 * C3590 -
              C50403 * C3593 + C43784 * C20960 - C43781 * C20961) *
                 C50062) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C1648 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C1648 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                C50364 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
                C50364 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
                C50260) *
               C1648 +
           (((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C19531 +
             (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50062) *
                C50364 +
            ((C43782 * C869 - C50402 * C876 + C43783 * C1189 - C50403 * C1195 +
              C43784 * C6004 - C43781 * C6005) *
                 C19531 +
             (C43782 * C877 - C50402 * C884 + C43783 * C1196 - C50403 * C1201 +
              C43784 * C6006 - C43781 * C6007) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C19531 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50062) *
               C50364 +
           ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
               C50260) *
              C1814 +
          (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C19531 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50062) *
               C50364 +
           ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
               C50260) *
              C1815 +
          (((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
             C43781 * C5461 - C43784 * C5458) *
                C19531 +
            (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
             C43781 * C5467 - C43784 * C5462) *
                C50062) *
               C50364 +
           ((C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C19531 +
            (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50062) *
               C50260) *
              C1816 +
          (((C43782 * C1818 - C50402 * C1822 + C43783 * C5458 - C50403 * C5461 +
             C43784 * C7294 - C43781 * C7296) *
                C19531 +
            (C43782 * C1823 - C50402 * C1830 + C43783 * C5462 - C50403 * C5467 +
             C43784 * C7297 - C43781 * C7300) *
                C50062) *
               C50364 +
           ((C43782 * C4500 - C50402 * C4504 + C43783 * C6410 - C50403 * C6412 +
             C43784 * C23506 - C43781 * C23507) *
                C19531 +
            (C43782 * C4505 - C50402 * C4512 + C43783 * C6413 - C50403 * C6416 +
             C43784 * C23508 - C43781 * C23509) *
                C50062) *
               C50260) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C50398 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50399 +
           (((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
              C43781 * C5461 - C43784 * C5458) *
                 C19531 +
             (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
              C43781 * C5467 - C43784 * C5462) *
                 C50062) *
                C50364 +
            ((C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C19531 +
             (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50062) *
                C50260) *
               C2064) *
              C50109 * C50343 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C50398 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                C50364 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                C50260) *
               C50399 +
           (((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C19531 +
             (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50062) *
                C50364 +
            ((C43782 * C1188 - C50402 * C1193 + C43783 * C4501 -
              C50403 * C4506 + C43784 * C6411 - C43781 * C6414) *
                 C19531 +
             (C43782 * C1194 - C50402 * C1200 + C43783 * C4507 -
              C50403 * C4513 + C43784 * C6415 - C43781 * C6417) *
                 C50062) *
                C50260) *
               C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C1648 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50189) *
              C50109 * C999 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C19531 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50062) *
                C50364 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C19531 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50062) *
                C50260) *
               C1648 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C19531 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50062) *
                C50364 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C19531 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50062) *
                C50260) *
               C50189) *
              C50109 * C1000 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C19531 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50062) *
                C50364 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C19531 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50062) *
                C50260) *
               C1648 +
           (((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C19531 +
             (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50062) *
                C50364 +
            ((C43782 * C869 - C50402 * C876 + C43783 * C1189 - C50403 * C1195 +
              C43784 * C6004 - C43781 * C6005) *
                 C19531 +
             (C43782 * C877 - C50402 * C884 + C43783 * C1196 - C50403 * C1201 +
              C43784 * C6006 - C43781 * C6007) *
                 C50062) *
                C50260) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C19531 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50062) *
                C50364 +
            ((C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C19531 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50062) *
                C50260) *
               C1648 +
           (((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C19531 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50062) *
                C50364 +
            ((C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C19531 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50062) *
                C50260) *
               C50189) *
              C276 +
          ((((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C19531 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50062) *
                C50364 +
            ((C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C19531 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50062) *
                C50260) *
               C1648 +
           (((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C19531 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50062) *
                C50364 +
            ((C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C19531 +
             (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50062) *
                C50260) *
               C50189) *
              C277 +
          ((((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C19531 +
             (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50062) *
                C50364 +
            ((C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C19531 +
             (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50062) *
                C50260) *
               C1648 +
           (((C48249 - C48248 + C48251 - C48250 + C48253 - C48252) * C19531 +
             (C48255 - C48254 + C48257 - C48256 + C48259 - C48258) * C50062) *
                C50364 +
            ((C43782 * C3144 - C50402 * C3147 + C43783 * C3587 -
              C50403 * C3589 + C43784 * C20958 - C43781 * C20959) *
                 C19531 +
             (C43782 * C3148 - C50402 * C3153 + C43783 * C3590 -
              C50403 * C3593 + C43784 * C20960 - C43781 * C20961) *
                 C50062) *
                C50260) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C50351 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C50161) *
              C50394 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C50351 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50161) *
              C50395 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50125 * C50351 +
           ((C33494 * C19531 + C33495 * C50062) * C2263 +
            ((C33151 - C33150 + C33153 - C33152) * C19531 +
             (C33155 - C33154 + C33157 - C33156) * C50062) *
                C2264 +
            ((C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C2265) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C50351 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C50351 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50161) *
              C50395 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50125 * C50351 +
           (C33494 * C16927 + C33495 * C16922 +
            (C33487 - C33486 + C33489 - C33488) * C16928 +
            (C33491 - C33490 + C33493 - C33492) * C16923 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C16929 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C16924) *
               C50211 * C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50125 * C50351 +
           ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50125 * C50351 +
           ((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
             C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
             C38442 * C4501) *
                C19531 +
            (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
             C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
             C38442 * C4507) *
                C50062) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
             C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
                C19531 +
            (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
             C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
                C50062) *
               C50211 * C50125 * C50351 +
           ((C38439 * C283 - C38435 * C295 + C38440 * C869 - C38436 * C876 +
             C38441 * C1189 - C38437 * C1195 + C38442 * C6004 -
             C38438 * C6005) *
                C19531 +
            (C38439 * C296 - C38435 * C313 + C38440 * C877 - C38436 * C884 +
             C38441 * C1196 - C38437 * C1201 + C38442 * C6006 -
             C38438 * C6007) *
                C50062) *
               C50211 * C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C19531 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50062) *
                 C2263 +
             ((C35862 - C35863 + C35864 - C35865) * C19531 +
              (C35866 - C35867 + C35868 - C35869) * C50062) *
                 C2264 +
             C35911 * C2265) *
                C50352 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C19531 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50062) *
                 C2263 +
             ((C36544 - C36545 + C36546 - C36547) * C19531 +
              (C36548 - C36549 + C36550 - C36551) * C50062) *
                 C2264 +
             ((C36552 - C36553 + C36554 - C36555) * C19531 +
              (C36556 - C36557 + C36558 - C36559) * C50062) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C35863 - C35862 + C35865 - C35864) * C19531 +
              (C35867 - C35866 + C35869 - C35868) * C50062) *
                 C2263 +
             ((C35871 - C35870 + C35873 - C35872) * C19531 +
              (C35875 - C35874 + C35877 - C35876) * C50062) *
                 C2264 +
             ((C35878 - C35879 + C35880 - C35881) * C19531 +
              (C35882 - C35883 + C35884 - C35885) * C50062) *
                 C2265) *
                C50352 +
            (((C36545 - C36544 + C36547 - C36546) * C19531 +
              (C36549 - C36548 + C36551 - C36550) * C50062) *
                 C2263 +
             ((C36553 - C36552 + C36555 - C36554) * C19531 +
              (C36557 - C36556 + C36559 - C36558) * C50062) *
                 C2264 +
             ((C32931 * C3147 - C32933 * C3144 + C50286 * C3589 -
               C32934 * C3587) *
                  C19531 +
              (C32931 * C3153 - C32933 * C3148 + C50286 * C3593 -
               C32934 * C3590) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C279 +
          (((((C32937 - C32936 + C32939 - C32938) * C19531 +
              (C32941 - C32940 + C32943 - C32942) * C50062) *
                 C2263 +
             ((C33126 - C33127 + C33128 - C33129) * C19531 +
              (C33130 - C33131 + C33132 - C33133) * C50062) *
                 C2264 +
             C35910 * C2265) *
                C50352 +
            (((C33305 - C33304 + C33307 - C33306) * C19531 +
              (C33309 - C33308 + C33311 - C33310) * C50062) *
                 C2263 +
             ((C33850 - C33851 + C33852 - C33853) * C19531 +
              (C33854 - C33855 + C33856 - C33857) * C50062) *
                 C2264 +
             ((C36560 - C36561 + C36562 - C36563) * C19531 +
              (C36564 - C36565 + C36566 - C36567) * C50062) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C33127 - C33126 + C33129 - C33128) * C19531 +
              (C33131 - C33130 + C33133 - C33132) * C50062) *
                 C2263 +
             ((C33142 - C33143 + C33144 - C33145) * C19531 +
              (C33146 - C33147 + C33148 - C33149) * C50062) *
                 C2264 +
             ((C35890 - C35891 + C35892 - C35893) * C19531 +
              (C35894 - C35895 + C35896 - C35897) * C50062) *
                 C2265) *
                C50352 +
            (((C33851 - C33850 + C33853 - C33852) * C19531 +
              (C33855 - C33854 + C33857 - C33856) * C50062) *
                 C2263 +
             ((C36561 - C36560 + C36563 - C36562) * C19531 +
              (C36565 - C36564 + C36567 - C36566) * C50062) *
                 C2264 +
             ((C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C16927 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C16922 +
             (C32936 - C32937 + C32938 - C32939) * C16928 +
             (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
             C32977 * C16924) *
                C50211 * C50352 +
            ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C16927 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C16922 +
             (C33304 - C33305 + C33306 - C33307) * C16928 +
             (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
             C33655 * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                 C16927 +
             (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                 C16922 +
             (C33126 - C33127 + C33128 - C33129) * C16928 +
             (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
             C33495 * C16924) *
                C50211 * C50352 +
            ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                 C16927 +
             (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                 C16922 +
             (C33850 - C33851 + C33852 - C33853) * C16928 +
             (C33854 - C33855 + C33856 - C33857) * C16923 +
             (C33858 - C33859 + C33860 - C33861) * C16929 +
             (C33862 - C33863 + C33864 - C33865) * C16924) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C16927 +
             (C32941 - C32940 + C32943 - C32942) * C16922 +
             (C32945 - C32944 + C32947 - C32946) * C16928 +
             (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
             C32979 * C16924) *
                C50211 * C50352 +
            ((C33305 - C33304 + C33307 - C33306) * C16927 +
             (C33309 - C33308 + C33311 - C33310) * C16922 +
             (C33313 - C33312 + C33315 - C33314) * C16928 +
             (C33317 - C33316 + C33319 - C33318) * C16923 +
             (C33646 - C33647 + C33648 - C33649) * C16929 +
             (C33650 - C33651 + C33652 - C33653) * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C33127 - C33126 + C33129 - C33128) * C16927 +
             (C33131 - C33130 + C33133 - C33132) * C16922 +
             (C33135 - C33134 + C33137 - C33136) * C16928 +
             (C33139 - C33138 + C33141 - C33140) * C16923 +
             (C33486 - C33487 + C33488 - C33489) * C16929 +
             (C33490 - C33491 + C33492 - C33493) * C16924) *
                C50211 * C50352 +
            ((C33851 - C33850 + C33853 - C33852) * C16927 +
             (C33855 - C33854 + C33857 - C33856) * C16922 +
             (C33859 - C33858 + C33861 - C33860) * C16928 +
             (C33863 - C33862 + C33865 - C33864) * C16923 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C16929 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C16924) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
              C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                 C19531 +
             (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
              C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                 C50062) *
                C50211 * C50352 +
            ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
              C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
              C38438 * C5461) *
                 C19531 +
             (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
              C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
              C38438 * C5467) *
                 C50062) *
                C50211 * C50189) *
               C50351 +
           (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
              C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
              C38438 * C4504) *
                 C19531 +
             (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
              C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
              C38438 * C4512) *
                 C50062) *
                C50211 * C50352 +
            ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
              C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
              C38442 * C6410) *
                 C19531 +
             (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
              C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
              C38442 * C6413) *
                 C50062) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
              C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                 C19531 +
             (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
              C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                 C50062) *
                C50211 * C50352 +
            ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
              C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
              C38442 * C5459) *
                 C19531 +
             (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
              C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
              C38442 * C5464) *
                 C50062) *
                C50211 * C50189) *
               C50351 +
           (((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
              C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
              C38442 * C4501) *
                 C19531 +
             (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
              C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
              C38442 * C4507) *
                 C50062) *
                C50211 * C50352 +
            ((C38439 * C868 - C38435 * C874 + C38440 * C1188 - C38436 * C1193 +
              C38441 * C4501 - C38437 * C4506 + C38442 * C6411 -
              C38438 * C6414) *
                 C19531 +
             (C38439 * C875 - C38435 * C883 + C38440 * C1194 - C38436 * C1200 +
              C38441 * C4507 - C38437 * C4513 + C38442 * C6415 -
              C38438 * C6417) *
                 C50062) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                   C16927 +
               (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                   C16922 +
               (C32936 - C32937 + C32938 - C32939) * C16928 +
               (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
               C32977 * C16924) *
                  C50211 * C50125 * C50109 * C113 +
              ((C32937 - C32936 + C32939 - C32938) * C16927 +
               (C32941 - C32940 + C32943 - C32942) * C16922 +
               (C32945 - C32944 + C32947 - C32946) * C16928 +
               (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
               C32979 * C16924) *
                  C50211 * C50125 * C50109 * C114 +
              (C32976 * C16927 + C32977 * C16922 +
               (C32953 - C32952 + C32955 - C32954) * C16928 +
               (C32957 - C32956 + C32959 - C32958) * C16923 +
               (C32960 - C32961 + C32962 - C32963) * C16929 +
               (C32964 - C32965 + C32966 - C32967) * C16924) *
                  C50211 * C50125 * C50109 * C115 +
              (C32978 * C16927 + C32979 * C16922 +
               (C32961 - C32960 + C32963 - C32962) * C16928 +
               (C32965 - C32964 + C32967 - C32966) * C16923 +
               (C32933 * C127 - C32931 * C139 + C32934 * C725 - C50286 * C726) *
                   C16929 +
               (C32933 * C140 - C32931 * C148 + C32934 * C727 - C50286 * C728) *
                   C16924) *
                  C50211 * C50125 * C50109 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C32931 * C129 - C32933 * C122 + C50286 * C456 -
                 C32934 * C446) *
                    C16927 +
                (C32931 * C143 - C32933 * C130 + C50286 * C476 -
                 C32934 * C457) *
                    C16922 +
                (C32936 - C32937 + C32938 - C32939) * C16928 +
                (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
                C32977 * C16924) *
                   C50211 * C50125 * C276 +
               ((C32933 * C281 - C32931 * C291 + C32934 * C867 -
                 C50286 * C872) *
                    C16927 +
                (C32933 * C292 - C32931 * C311 + C32934 * C873 -
                 C50286 * C882) *
                    C16922 +
                (C33126 - C33127 + C33128 - C33129) * C16928 +
                (C33130 - C33131 + C33132 - C33133) * C16923 +
                (C33134 - C33135 + C33136 - C33137) * C16929 +
                (C33138 - C33139 + C33140 - C33141) * C16924) *
                   C50211 * C50125 * C277 +
               ((C32931 * C299 - C32933 * C285 + C50286 * C1538 -
                 C32934 * C1534) *
                    C16927 +
                (C32931 * C315 - C32933 * C300 + C50286 * C1546 -
                 C32934 * C1539) *
                    C16922 +
                (C33142 - C33143 + C33144 - C33145) * C16928 +
                (C33146 - C33147 + C33148 - C33149) * C16923 +
                (C33150 - C33151 + C33152 - C33153) * C16929 +
                (C33154 - C33155 + C33156 - C33157) * C16924) *
                   C50211 * C50125 * C278) *
                  C279 +
              (((C32937 - C32936 + C32939 - C32938) * C16927 +
                (C32941 - C32940 + C32943 - C32942) * C16922 +
                (C32945 - C32944 + C32947 - C32946) * C16928 +
                (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
                C32979 * C16924) *
                   C50211 * C50125 * C276 +
               ((C33127 - C33126 + C33129 - C33128) * C16927 +
                (C33131 - C33130 + C33133 - C33132) * C16922 +
                (C33135 - C33134 + C33137 - C33136) * C16928 +
                (C33139 - C33138 + C33141 - C33140) * C16923 +
                (C32931 * C297 - C32933 * C284 + C50286 * C878 -
                 C32934 * C870) *
                    C16929 +
                (C32931 * C314 - C32933 * C298 + C50286 * C885 -
                 C32934 * C879) *
                    C16924) *
                   C50211 * C50125 * C277 +
               ((C33143 - C33142 + C33145 - C33144) * C16927 +
                (C33147 - C33146 + C33149 - C33148) * C16922 +
                (C33151 - C33150 + C33153 - C33152) * C16928 +
                (C33155 - C33154 + C33157 - C33156) * C16923 +
                (C32933 * C288 - C32931 * C305 + C32934 * C1537 -
                 C50286 * C1544) *
                    C16929 +
                (C32933 * C306 - C32931 * C318 + C32934 * C1545 -
                 C50286 * C1549) *
                    C16924) *
                   C50211 * C50125 * C278) *
                  C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C443 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 +
            (C33312 - C33313 + C33314 - C33315) * C16929 +
            (C33316 - C33317 + C33318 - C33319) * C16924) *
               C50211 * C444 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C445) *
              C50109 * C279 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C443 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C32931 * C462 - C32933 * C449 + C50286 * C470 - C32934 * C453) *
                C16929 +
            (C32931 * C479 - C32933 * C463 + C50286 * C483 - C32934 * C471) *
                C16924) *
               C50211 * C444 +
           ((C33321 - C33320 + C33323 - C33322) * C16927 +
            (C33325 - C33324 + C33327 - C33326) * C16922 +
            (C33329 - C33328 + C33331 - C33330) * C16928 +
            (C33333 - C33332 + C33335 - C33334) * C16923 +
            (C32933 * C453 - C32931 * C470 + C32934 * C1821 - C50286 * C1828) *
                C16929 +
            (C32933 * C471 - C32931 * C483 + C32934 * C1829 - C50286 * C1833) *
                C16924) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C32931 * C291 - C32933 * C281 + C50286 * C872 - C32934 * C867) *
                C19531 +
            (C32931 * C311 - C32933 * C292 + C50286 * C882 - C32934 * C873) *
                C50062) *
               C2264 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C19531 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C50062) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C19531 +
            (C32941 - C32940 + C32943 - C32942) * C50062) *
               C2263 +
           ((C33126 - C33127 + C33128 - C33129) * C19531 +
            (C33130 - C33131 + C33132 - C33133) * C50062) *
               C2264 +
           ((C33143 - C33142 + C33145 - C33144) * C19531 +
            (C33147 - C33146 + C33149 - C33148) * C50062) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C32976 * C19531 + C32977 * C50062) * C2263 +
           ((C33135 - C33134 + C33137 - C33136) * C19531 +
            (C33139 - C33138 + C33141 - C33140) * C50062) *
               C2264 +
           ((C33150 - C33151 + C33152 - C33153) * C19531 +
            (C33154 - C33155 + C33156 - C33157) * C50062) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C32978 * C19531 + C32979 * C50062) * C2263 +
           ((C33487 - C33486 + C33489 - C33488) * C19531 +
            (C33491 - C33490 + C33493 - C33492) * C50062) *
               C2264 +
           ((C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C19531 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C50062) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C276 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C32931 * C2417 - C32933 * C2414 + C50286 * C4091 -
              C32934 * C4089) *
                 C19531 +
             (C32931 * C2423 - C32933 * C2418 + C50286 * C4095 -
              C32934 * C4092) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C276 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35910 * C2263 +
            ((C35891 - C35890 + C35893 - C35892) * C19531 +
             (C35895 - C35894 + C35897 - C35896) * C50062) *
                C2264 +
            ((C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C443 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C32933 * C867 - C32931 * C872 + C32934 * C1187 - C50286 * C1191) *
                 C19531 +
             (C32933 * C873 - C32931 * C882 + C32934 * C1192 - C50286 * C1199) *
                 C50062) *
                C2264 +
            ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
              C50286 * C2629) *
                 C19531 +
             (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
              C50286 * C2635) *
                 C50062) *
                C2265) *
               C444 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C32931 * C1191 - C32933 * C1187 + C50286 * C4504 -
              C32934 * C4500) *
                 C19531 +
             (C32931 * C1199 - C32933 * C1192 + C50286 * C4512 -
              C32934 * C4505) *
                 C50062) *
                C2264 +
            ((C32931 * C2629 - C32933 * C2626 + C50286 * C4508 -
              C32934 * C4502) *
                 C19531 +
             (C32931 * C2635 - C32933 * C2630 + C50286 * C4514 -
              C32934 * C4509) *
                 C50062) *
                C2265) *
               C445) *
              C50109 * C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C443 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C32931 * C1540 - C32933 * C1535 + C50286 * C2631 -
              C32934 * C2627) *
                 C19531 +
             (C32931 * C1547 - C32933 * C1541 + C50286 * C2636 -
              C32934 * C2632) *
                 C50062) *
                C2265) *
               C444 +
           (((C33321 - C33320 + C33323 - C33322) * C19531 +
             (C33325 - C33324 + C33327 - C33326) * C50062) *
                C2263 +
            ((C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
              C50286 * C4506) *
                 C19531 +
             (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
              C50286 * C4513) *
                 C50062) *
                C2264 +
            ((C32933 * C2627 - C32931 * C2631 + C32934 * C4503 -
              C50286 * C4510) *
                 C19531 +
             (C32933 * C2632 - C32931 * C2636 + C32934 * C4511 -
              C50286 * C4515) *
                 C50062) *
                C2265) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
            C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
               C19531 +
           (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
            C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
               C50062) *
              C50211 * C50125 * C50109 * C113 +
          ((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
            C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
               C19531 +
           (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
            C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
               C50062) *
              C50211 * C50125 * C50109 * C114 +
          ((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
            C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
               C19531 +
           (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
            C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
               C50062) *
              C50211 * C50125 * C50109 * C115 +
          ((C38439 * C125 - C38435 * C135 + C38440 * C449 - C38436 * C462 +
            C38441 * C453 - C38437 * C470 + C38442 * C1821 - C38438 * C1828) *
               C19531 +
           (C38439 * C136 - C38435 * C146 + C38440 * C463 - C38436 * C479 +
            C38441 * C471 - C38437 * C483 + C38442 * C1829 - C38438 * C1833) *
               C50062) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50125 * C276 +
           ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50125 * C277 +
           ((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
             C38437 * C2629 - C38441 * C2626 + C38438 * C4508 -
             C38442 * C4502) *
                C19531 +
            (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
             C38437 * C2635 - C38441 * C2630 + C38438 * C4514 -
             C38442 * C4509) *
                C50062) *
               C50211 * C50125 * C278) *
              C279 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50125 * C276 +
           ((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
             C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
             C38442 * C4501) *
                C19531 +
            (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
             C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
             C38442 * C4507) *
                C50062) *
               C50211 * C50125 * C277 +
           ((C38439 * C286 - C38435 * C301 + C38440 * C1535 - C38436 * C1540 +
             C38441 * C2627 - C38437 * C2631 + C38442 * C4503 -
             C38438 * C4510) *
                C19531 +
            (C38439 * C302 - C38435 * C316 + C38440 * C1541 - C38436 * C1547 +
             C38441 * C2632 - C38437 * C2636 + C38442 * C4511 -
             C38438 * C4515) *
                C50062) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C443 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C444 +
           ((C38435 * C464 - C38439 * C450 + C38436 * C1822 - C38440 * C1818 +
             C38437 * C5461 - C38441 * C5458 + C38438 * C7296 -
             C38442 * C7294) *
                C19531 +
            (C38435 * C480 - C38439 * C465 + C38436 * C1830 - C38440 * C1823 +
             C38437 * C5467 - C38441 * C5462 + C38438 * C7300 -
             C38442 * C7297) *
                C50062) *
               C50211 * C445) *
              C50109 * C279 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C443 +
           ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
             C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
             C38442 * C5459) *
                C19531 +
            (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
             C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
             C38442 * C5464) *
                C50062) *
               C50211 * C444 +
           ((C38439 * C451 - C38435 * C466 + C38440 * C1819 - C38436 * C1824 +
             C38441 * C5459 - C38437 * C5463 + C38442 * C7295 -
             C38438 * C7298) *
                C19531 +
            (C38439 * C467 - C38435 * C481 + C38440 * C1825 - C38436 * C1831 +
             C38441 * C5464 - C38437 * C5468 + C38442 * C7299 -
             C38438 * C7301) *
                C50062) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50352 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C32933 * C867 - C32931 * C872 + C32934 * C1187 - C50286 * C1191) *
                 C19531 +
             (C32933 * C873 - C32931 * C882 + C32934 * C1192 - C50286 * C1199) *
                 C50062) *
                C2264 +
            ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
              C50286 * C2629) *
                 C19531 +
             (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
              C50286 * C2635) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C50394 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50352 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C32931 * C1540 - C32933 * C1535 + C50286 * C2631 -
              C32934 * C2627) *
                 C19531 +
             (C32931 * C1547 - C32933 * C1541 + C50286 * C2636 -
              C32934 * C2632) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C50395 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50352 +
           ((C33654 * C19531 + C33655 * C50062) * C2263 +
            ((C33859 - C33858 + C33861 - C33860) * C19531 +
             (C33863 - C33862 + C33865 - C33864) * C50062) *
                C2264 +
            ((C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50352 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50352 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50189) *
              C50109 * C50395 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50352 +
           (C33654 * C16927 + C33655 * C16922 +
            (C33647 - C33646 + C33649 - C33648) * C16928 +
            (C33651 - C33650 + C33653 - C33652) * C16923 +
            (C32933 * C454 - C32931 * C472 + C32934 * C455 - C50286 * C474) *
                C16929 +
            (C32933 * C473 - C32931 * C484 + C32934 * C475 - C50286 * C485) *
                C16924) *
               C50211 * C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50352 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50352 +
           ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
             C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
             C38442 * C5459) *
                C19531 +
            (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
             C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
             C38442 * C5464) *
                C50062) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
             C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
                C19531 +
            (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
             C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
                C50062) *
               C50211 * C50352 +
           ((C38439 * C448 - C38435 * C460 + C38440 * C452 - C38436 * C468 +
             C38441 * C1820 - C38437 * C1826 + C38442 * C5460 -
             C38438 * C5465) *
                C19531 +
            (C38439 * C461 - C38435 * C478 + C38440 * C469 - C38436 * C482 +
             C38441 * C1827 - C38437 * C1832 + C38442 * C5466 -
             C38438 * C5469) *
                C50062) *
               C50211 * C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C276 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 +
            (C33134 - C33135 + C33136 - C33137) * C16929 +
            (C33138 - C33139 + C33140 - C33141) * C16924) *
               C50211 * C50125 * C277 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50125 * C278) *
              C279 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C276 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C32931 * C297 - C32933 * C284 + C50286 * C878 - C32934 * C870) *
                C16929 +
            (C32931 * C314 - C32933 * C298 + C50286 * C885 - C32934 * C879) *
                C16924) *
               C50211 * C50125 * C277 +
           ((C33143 - C33142 + C33145 - C33144) * C16927 +
            (C33147 - C33146 + C33149 - C33148) * C16922 +
            (C33151 - C33150 + C33153 - C33152) * C16928 +
            (C33155 - C33154 + C33157 - C33156) * C16923 +
            (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C16929 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C16924) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C50125 * C50109 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C16927 +
           (C32941 - C32940 + C32943 - C32942) * C16922 +
           (C32945 - C32944 + C32947 - C32946) * C16928 +
           (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
           C32979 * C16924) *
              C50211 * C50125 * C50109 * C114 +
          (C32976 * C16927 + C32977 * C16922 +
           (C32953 - C32952 + C32955 - C32954) * C16928 +
           (C32957 - C32956 + C32959 - C32958) * C16923 +
           (C32960 - C32961 + C32962 - C32963) * C16929 +
           (C32964 - C32965 + C32966 - C32967) * C16924) *
              C50211 * C50125 * C50109 * C115 +
          (C32978 * C16927 + C32979 * C16922 +
           (C32961 - C32960 + C32963 - C32962) * C16928 +
           (C32965 - C32964 + C32967 - C32966) * C16923 +
           (C32933 * C127 - C32931 * C139 + C32934 * C725 - C50286 * C726) *
               C16929 +
           (C32933 * C140 - C32931 * C148 + C32934 * C727 - C50286 * C728) *
               C16924) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C32931 * C291 - C32933 * C281 + C50286 * C872 - C32934 * C867) *
                C19531 +
            (C32931 * C311 - C32933 * C292 + C50286 * C882 - C32934 * C873) *
                C50062) *
               C2264 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C19531 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C50062) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C19531 +
            (C32941 - C32940 + C32943 - C32942) * C50062) *
               C2263 +
           ((C33126 - C33127 + C33128 - C33129) * C19531 +
            (C33130 - C33131 + C33132 - C33133) * C50062) *
               C2264 +
           ((C33143 - C33142 + C33145 - C33144) * C19531 +
            (C33147 - C33146 + C33149 - C33148) * C50062) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C32976 * C19531 + C32977 * C50062) * C2263 +
           ((C33135 - C33134 + C33137 - C33136) * C19531 +
            (C33139 - C33138 + C33141 - C33140) * C50062) *
               C2264 +
           ((C33150 - C33151 + C33152 - C33153) * C19531 +
            (C33154 - C33155 + C33156 - C33157) * C50062) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C32978 * C19531 + C32979 * C50062) * C2263 +
           ((C33487 - C33486 + C33489 - C33488) * C19531 +
            (C33491 - C33490 + C33493 - C33492) * C50062) *
               C2264 +
           ((C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C19531 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C50062) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C276 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C32931 * C2417 - C32933 * C2414 + C50286 * C4091 -
              C32934 * C4089) *
                 C19531 +
             (C32931 * C2423 - C32933 * C2418 + C50286 * C4095 -
              C32934 * C4092) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C276 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35910 * C2263 +
            ((C35891 - C35890 + C35893 - C35892) * C19531 +
             (C35895 - C35894 + C35897 - C35896) * C50062) *
                C2264 +
            ((C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
            C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
               C19531 +
           (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
            C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
               C50062) *
              C50211 * C50125 * C50109 * C113 +
          ((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
            C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
               C19531 +
           (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
            C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
               C50062) *
              C50211 * C50125 * C50109 * C114 +
          ((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
            C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
               C19531 +
           (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
            C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
               C50062) *
              C50211 * C50125 * C50109 * C115 +
          ((C38439 * C125 - C38435 * C135 + C38440 * C449 - C38436 * C462 +
            C38441 * C453 - C38437 * C470 + C38442 * C1821 - C38438 * C1828) *
               C19531 +
           (C38439 * C136 - C38435 * C146 + C38440 * C463 - C38436 * C479 +
            C38441 * C471 - C38437 * C483 + C38442 * C1829 - C38438 * C1833) *
               C50062) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50125 * C276 +
           ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50125 * C277 +
           ((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
             C38437 * C2629 - C38441 * C2626 + C38438 * C4508 -
             C38442 * C4502) *
                C19531 +
            (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
             C38437 * C2635 - C38441 * C2630 + C38438 * C4514 -
             C38442 * C4509) *
                C50062) *
               C50211 * C50125 * C278) *
              C279 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50125 * C276 +
           ((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
             C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
             C38442 * C4501) *
                C19531 +
            (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
             C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
             C38442 * C4507) *
                C50062) *
               C50211 * C50125 * C277 +
           ((C38439 * C286 - C38435 * C301 + C38440 * C1535 - C38436 * C1540 +
             C38441 * C2627 - C38437 * C2631 + C38442 * C4503 -
             C38438 * C4510) *
                C19531 +
            (C38439 * C302 - C38435 * C316 + C38440 * C1541 - C38436 * C1547 +
             C38441 * C2632 - C38437 * C2636 + C38442 * C4511 -
             C38438 * C4515) *
                C50062) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C50396 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C50125 * C50397 +
           (C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C50125 * C1303) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C50396 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50397 +
           (C35910 * C2263 +
            ((C35891 - C35890 + C35893 - C35892) * C19531 +
             (C35895 - C35894 + C35897 - C35896) * C50062) *
                C2264 +
            ((C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C2265) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C50396 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50397 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C50396 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50397 +
           ((C33143 - C33142 + C33145 - C33144) * C16927 +
            (C33147 - C33146 + C33149 - C33148) * C16922 +
            (C33151 - C33150 + C33153 - C33152) * C16928 +
            (C33155 - C33154 + C33157 - C33156) * C16923 +
            (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C16929 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C16924) *
               C50211 * C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50125 * C50396 +
           ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50125 * C50397 +
           ((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
             C38437 * C2629 - C38441 * C2626 + C38438 * C4508 -
             C38442 * C4502) *
                C19531 +
            (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
             C38437 * C2635 - C38441 * C2630 + C38438 * C4514 -
             C38442 * C4509) *
                C50062) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50125 * C50396 +
           ((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
             C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
             C38442 * C4501) *
                C19531 +
            (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
             C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
             C38442 * C4507) *
                C50062) *
               C50211 * C50125 * C50397 +
           ((C38439 * C286 - C38435 * C301 + C38440 * C1535 - C38436 * C1540 +
             C38441 * C2627 - C38437 * C2631 + C38442 * C4503 -
             C38438 * C4510) *
                C19531 +
            (C38439 * C302 - C38435 * C316 + C38440 * C1541 - C38436 * C1547 +
             C38441 * C2632 - C38437 * C2636 + C38442 * C4511 -
             C38438 * C4515) *
                C50062) *
               C50211 * C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50352 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C50396 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C50352 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50189) *
              C50397 +
          ((C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C50352 +
           (C37493 * C2263 +
            ((C37482 - C37481 + C37484 - C37483) * C19531 +
             (C37486 - C37485 + C37488 - C37487) * C50062) *
                C2264 +
            ((C32933 * C4089 - C32931 * C4091 + C32934 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C32933 * C4092 - C32931 * C4095 + C32934 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C2265) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50352 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50396 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50352 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50189) *
              C50397 +
          (((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50352 +
           ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
             C50286 * C2629) *
                C16927 +
            (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
             C50286 * C2635) *
                C16922 +
            (C32933 * C1535 - C32931 * C1540 + C32934 * C2627 -
             C50286 * C2631) *
                C16928 +
            (C32933 * C1541 - C32931 * C1547 + C32934 * C2632 -
             C50286 * C2636) *
                C16923 +
            (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
             C50286 * C2633) *
                C16929 +
            (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
             C50286 * C2637) *
                C16924) *
               C50211 * C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50352 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50189) *
              C50396 +
          (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50352 +
           ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
             C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
             C38442 * C6410) *
                C19531 +
            (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
             C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
             C38442 * C6413) *
                C50062) *
               C50211 * C50189) *
              C50397 +
          (((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
             C38437 * C2629 - C38441 * C2626 + C38438 * C4508 -
             C38442 * C4502) *
                C19531 +
            (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
             C38437 * C2635 - C38441 * C2630 + C38438 * C4514 -
             C38442 * C4509) *
                C50062) *
               C50211 * C50352 +
           ((C38439 * C1534 - C38435 * C1538 + C38440 * C2626 - C38436 * C2629 +
             C38441 * C4502 - C38437 * C4508 + C38442 * C22602 -
             C38438 * C22603) *
                C19531 +
            (C38439 * C1539 - C38435 * C1546 + C38440 * C2630 - C38436 * C2635 +
             C38441 * C4509 - C38437 * C4514 + C38442 * C22604 -
             C38438 * C22605) *
                C50062) *
               C50211 * C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C32931 * C129 - C32933 * C122 + C50286 * C456 -
                 C32934 * C446) *
                    C16927 +
                (C32931 * C143 - C32933 * C130 + C50286 * C476 -
                 C32934 * C457) *
                    C16922 +
                (C32936 - C32937 + C32938 - C32939) * C16928 +
                (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
                C32977 * C16924) *
                   C50211 * C50125 * C997 +
               ((C32933 * C281 - C32931 * C291 + C32934 * C867 -
                 C50286 * C872) *
                    C16927 +
                (C32933 * C292 - C32931 * C311 + C32934 * C873 -
                 C50286 * C882) *
                    C16922 +
                (C33126 - C33127 + C33128 - C33129) * C16928 +
                (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
                C33495 * C16924) *
                   C50211 * C50125 * C50161) *
                  C999 +
              (((C32937 - C32936 + C32939 - C32938) * C16927 +
                (C32941 - C32940 + C32943 - C32942) * C16922 +
                (C32945 - C32944 + C32947 - C32946) * C16928 +
                (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
                C32979 * C16924) *
                   C50211 * C50125 * C997 +
               ((C33127 - C33126 + C33129 - C33128) * C16927 +
                (C33131 - C33130 + C33133 - C33132) * C16922 +
                (C33135 - C33134 + C33137 - C33136) * C16928 +
                (C33139 - C33138 + C33141 - C33140) * C16923 +
                (C33486 - C33487 + C33488 - C33489) * C16929 +
                (C33490 - C33491 + C33492 - C33493) * C16924) *
                   C50211 * C50125 * C50161) *
                  C1000 +
              ((C32976 * C16927 + C32977 * C16922 +
                (C32953 - C32952 + C32955 - C32954) * C16928 +
                (C32957 - C32956 + C32959 - C32958) * C16923 +
                (C32960 - C32961 + C32962 - C32963) * C16929 +
                (C32964 - C32965 + C32966 - C32967) * C16924) *
                   C50211 * C50125 * C997 +
               (C33494 * C16927 + C33495 * C16922 +
                (C33487 - C33486 + C33489 - C33488) * C16928 +
                (C33491 - C33490 + C33493 - C33492) * C16923 +
                (C32933 * C289 - C32931 * C307 + C32934 * C871 -
                 C50286 * C880) *
                    C16929 +
                (C32933 * C308 - C32931 * C319 + C32934 * C881 -
                 C50286 * C886) *
                    C16924) *
                   C50211 * C50125 * C50161) *
                  C1001) +
         0.5 * std::pow(Pi, 2.5) *
             (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                   C16927 +
               (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                   C16922 +
               (C32936 - C32937 + C32938 - C32939) * C16928 +
               (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
               C32977 * C16924) *
                  C50211 * C50125 * C1068 +
              ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                   C16927 +
               (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                   C16922 +
               (C33126 - C33127 + C33128 - C33129) * C16928 +
               (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
               C33495 * C16924) *
                  C50211 * C50125 * C1069 +
              ((C32931 * C299 - C32933 * C285 + C50286 * C1538 -
                C32934 * C1534) *
                   C16927 +
               (C32931 * C315 - C32933 * C300 + C50286 * C1546 -
                C32934 * C1539) *
                   C16922 +
               (C33142 - C33143 + C33144 - C33145) * C16928 +
               (C33146 - C33147 + C33148 - C33149) * C16923 +
               (C33150 - C33151 + C33152 - C33153) * C16929 +
               (C33154 - C33155 + C33156 - C33157) * C16924) *
                  C50211 * C50125 * C1070 +
              ((C32933 * C1073 - C32931 * C1077 + C32934 * C3144 -
                C50286 * C3147) *
                   C16927 +
               (C32933 * C1078 - C32931 * C1085 + C32934 * C3148 -
                C50286 * C3153) *
                   C16922 +
               (C32933 * C1074 - C32931 * C1079 + C32934 * C3145 -
                C50286 * C3149) *
                   C16928 +
               (C32933 * C1080 - C32931 * C1086 + C32934 * C3150 -
                C50286 * C3154) *
                   C16923 +
               (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
                C50286 * C3151) *
                   C16929 +
               (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
                C50286 * C3155) *
                   C16924) *
                  C50211 * C50125 * C1071) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C443 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C444 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C445) *
              C997 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C443 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C444 +
           ((C32933 * C1187 - C32931 * C1191 + C32934 * C4500 -
             C50286 * C4504) *
                C16927 +
            (C32933 * C1192 - C32931 * C1199 + C32934 * C4505 -
             C50286 * C4512) *
                C16922 +
            (C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
             C50286 * C4506) *
                C16928 +
            (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
             C50286 * C4513) *
                C16923 +
            (C32933 * C1189 - C32931 * C1195 + C32934 * C6004 -
             C50286 * C6005) *
                C16929 +
            (C32933 * C1196 - C32931 * C1201 + C32934 * C6006 -
             C50286 * C6007) *
                C16924) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C997 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C997 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50125 * C997 +
           ((C33494 * C19531 + C33495 * C50062) * C2263 +
            ((C33151 - C33150 + C33153 - C33152) * C19531 +
             (C33155 - C33154 + C33157 - C33156) * C50062) *
                C2264 +
            ((C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C35862 - C35863 + C35864 - C35865) * C19531 +
            (C35866 - C35867 + C35868 - C35869) * C50062) *
               C2264 +
           C35911 * C2265) *
              C50125 * C1068 +
          (((C35863 - C35862 + C35865 - C35864) * C19531 +
            (C35867 - C35866 + C35869 - C35868) * C50062) *
               C2263 +
           ((C35871 - C35870 + C35873 - C35872) * C19531 +
            (C35875 - C35874 + C35877 - C35876) * C50062) *
               C2264 +
           C36828 * C2265) *
              C50125 * C1069 +
          (C35911 * C2263 +
           ((C35879 - C35878 + C35881 - C35880) * C19531 +
            (C35883 - C35882 + C35885 - C35884) * C50062) *
               C2264 +
           ((C36816 - C36817 + C36818 - C36819) * C19531 +
            (C36820 - C36821 + C36822 - C36823) * C50062) *
               C2265) *
              C50125 * C1070 +
          (C36828 * C2263 +
           ((C36817 - C36816 + C36819 - C36818) * C19531 +
            (C36821 - C36820 + C36823 - C36822) * C50062) *
               C2264 +
           ((C32933 * C3420 - C32931 * C3422 + C32934 * C20680 -
             C50286 * C20681) *
                C19531 +
            (C32933 * C3423 - C32931 * C3426 + C32934 * C20682 -
             C50286 * C20683) *
                C50062) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C443 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            ((C36552 - C36553 + C36554 - C36555) * C19531 +
             (C36556 - C36557 + C36558 - C36559) * C50062) *
                C2265) *
               C444 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C36975 - C36976 + C36977 - C36978) * C19531 +
             (C36979 - C36980 + C36981 - C36982) * C50062) *
                C2264 +
            ((C36983 - C36984 + C36985 - C36986) * C19531 +
             (C36987 - C36988 + C36989 - C36990) * C50062) *
                C2265) *
               C445) *
              C997 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C443 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C32931 * C3147 - C32933 * C3144 + C50286 * C3589 -
              C32934 * C3587) *
                 C19531 +
             (C32931 * C3153 - C32933 * C3148 + C50286 * C3593 -
              C32934 * C3590) *
                 C50062) *
                C2265) *
               C444 +
           (((C36976 - C36975 + C36978 - C36977) * C19531 +
             (C36980 - C36979 + C36982 - C36981) * C50062) *
                C2263 +
            ((C36984 - C36983 + C36986 - C36985) * C19531 +
             (C36988 - C36987 + C36990 - C36989) * C50062) *
                C2264 +
            ((C32933 * C3587 - C32931 * C3589 + C32934 * C20958 -
              C50286 * C20959) *
                 C19531 +
             (C32933 * C3590 - C32931 * C3593 + C32934 * C20960 -
              C50286 * C20961) *
                 C50062) *
                C2265) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50125 * C997 +
           ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50125 * C997 +
           ((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
             C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
             C38442 * C4501) *
                C19531 +
            (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
             C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
             C38442 * C4507) *
                C50062) *
               C50211 * C50125 * C50161) *
              C1000 +
          (((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
             C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
                C19531 +
            (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
             C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
                C50062) *
               C50211 * C50125 * C997 +
           ((C38439 * C283 - C38435 * C295 + C38440 * C869 - C38436 * C876 +
             C38441 * C1189 - C38437 * C1195 + C38442 * C6004 -
             C38438 * C6005) *
                C19531 +
            (C38439 * C296 - C38435 * C313 + C38440 * C877 - C38436 * C884 +
             C38441 * C1196 - C38437 * C1201 + C38442 * C6006 -
             C38438 * C6007) *
                C50062) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
            C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
               C19531 +
           (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
            C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
               C50062) *
              C50211 * C50125 * C1068 +
          ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
            C38441 * C1187 - C38437 * C1191 + C38442 * C4500 - C38438 * C4504) *
               C19531 +
           (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
            C38441 * C1192 - C38437 * C1199 + C38442 * C4505 - C38438 * C4512) *
               C50062) *
              C50211 * C50125 * C1069 +
          ((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
            C38437 * C2629 - C38441 * C2626 + C38438 * C4508 - C38442 * C4502) *
               C19531 +
           (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
            C38437 * C2635 - C38441 * C2630 + C38438 * C4514 - C38442 * C4509) *
               C50062) *
              C50211 * C50125 * C1070 +
          ((C38439 * C1073 - C38435 * C1077 + C38440 * C3144 - C38436 * C3147 +
            C38441 * C3587 - C38437 * C3589 + C38442 * C20958 -
            C38438 * C20959) *
               C19531 +
           (C38439 * C1078 - C38435 * C1085 + C38440 * C3148 - C38436 * C3153 +
            C38441 * C3590 - C38437 * C3593 + C38442 * C20960 -
            C38438 * C20961) *
               C50062) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C443 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C444 +
           ((C38435 * C464 - C38439 * C450 + C38436 * C1822 - C38440 * C1818 +
             C38437 * C5461 - C38441 * C5458 + C38438 * C7296 -
             C38442 * C7294) *
                C19531 +
            (C38435 * C480 - C38439 * C465 + C38436 * C1830 - C38440 * C1823 +
             C38437 * C5467 - C38441 * C5462 + C38438 * C7300 -
             C38442 * C7297) *
                C50062) *
               C50211 * C445) *
              C997 +
          (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C443 +
           ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
             C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
             C38442 * C6410) *
                C19531 +
            (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
             C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
             C38442 * C6413) *
                C50062) *
               C50211 * C444 +
           ((C38439 * C1187 - C38435 * C1191 + C38440 * C4500 - C38436 * C4504 +
             C38441 * C6410 - C38437 * C6412 + C38442 * C23506 -
             C38438 * C23507) *
                C19531 +
            (C38439 * C1192 - C38435 * C1199 + C38440 * C4505 - C38436 * C4512 +
             C38441 * C6413 - C38437 * C6416 + C38442 * C23508 -
             C38438 * C23509) *
                C50062) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C19531 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50062) *
                 C2263 +
             ((C35862 - C35863 + C35864 - C35865) * C19531 +
              (C35866 - C35867 + C35868 - C35869) * C50062) *
                 C2264 +
             C35911 * C2265) *
                C50352 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C19531 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50062) *
                 C2263 +
             ((C36544 - C36545 + C36546 - C36547) * C19531 +
              (C36548 - C36549 + C36550 - C36551) * C50062) *
                 C2264 +
             ((C36552 - C36553 + C36554 - C36555) * C19531 +
              (C36556 - C36557 + C36558 - C36559) * C50062) *
                 C2265) *
                C50189) *
               C997 +
           ((((C35863 - C35862 + C35865 - C35864) * C19531 +
              (C35867 - C35866 + C35869 - C35868) * C50062) *
                 C2263 +
             ((C35871 - C35870 + C35873 - C35872) * C19531 +
              (C35875 - C35874 + C35877 - C35876) * C50062) *
                 C2264 +
             C36828 * C2265) *
                C50352 +
            (((C36545 - C36544 + C36547 - C36546) * C19531 +
              (C36549 - C36548 + C36551 - C36550) * C50062) *
                 C2263 +
             ((C36553 - C36552 + C36555 - C36554) * C19531 +
              (C36557 - C36556 + C36559 - C36558) * C50062) *
                 C2264 +
             ((C32931 * C3147 - C32933 * C3144 + C50286 * C3589 -
               C32934 * C3587) *
                  C19531 +
              (C32931 * C3153 - C32933 * C3148 + C50286 * C3593 -
               C32934 * C3590) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C32937 - C32936 + C32939 - C32938) * C19531 +
              (C32941 - C32940 + C32943 - C32942) * C50062) *
                 C2263 +
             ((C33126 - C33127 + C33128 - C33129) * C19531 +
              (C33130 - C33131 + C33132 - C33133) * C50062) *
                 C2264 +
             C35910 * C2265) *
                C50352 +
            (((C33305 - C33304 + C33307 - C33306) * C19531 +
              (C33309 - C33308 + C33311 - C33310) * C50062) *
                 C2263 +
             ((C33850 - C33851 + C33852 - C33853) * C19531 +
              (C33854 - C33855 + C33856 - C33857) * C50062) *
                 C2264 +
             ((C36560 - C36561 + C36562 - C36563) * C19531 +
              (C36564 - C36565 + C36566 - C36567) * C50062) *
                 C2265) *
                C50189) *
               C997 +
           ((((C33127 - C33126 + C33129 - C33128) * C19531 +
              (C33131 - C33130 + C33133 - C33132) * C50062) *
                 C2263 +
             ((C33142 - C33143 + C33144 - C33145) * C19531 +
              (C33146 - C33147 + C33148 - C33149) * C50062) *
                 C2264 +
             ((C35890 - C35891 + C35892 - C35893) * C19531 +
              (C35894 - C35895 + C35896 - C35897) * C50062) *
                 C2265) *
                C50352 +
            (((C33851 - C33850 + C33853 - C33852) * C19531 +
              (C33855 - C33854 + C33857 - C33856) * C50062) *
                 C2263 +
             ((C36561 - C36560 + C36563 - C36562) * C19531 +
              (C36565 - C36564 + C36567 - C36566) * C50062) *
                 C2264 +
             ((C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C16927 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C16922 +
             (C32936 - C32937 + C32938 - C32939) * C16928 +
             (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
             C32977 * C16924) *
                C50211 * C50352 +
            ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C16927 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C16922 +
             (C33304 - C33305 + C33306 - C33307) * C16928 +
             (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
             C33655 * C16924) *
                C50211 * C50189) *
               C997 +
           (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                 C16927 +
             (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                 C16922 +
             (C33126 - C33127 + C33128 - C33129) * C16928 +
             (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
             C33495 * C16924) *
                C50211 * C50352 +
            ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                 C16927 +
             (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                 C16922 +
             (C33850 - C33851 + C33852 - C33853) * C16928 +
             (C33854 - C33855 + C33856 - C33857) * C16923 +
             (C33858 - C33859 + C33860 - C33861) * C16929 +
             (C33862 - C33863 + C33864 - C33865) * C16924) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C16927 +
             (C32941 - C32940 + C32943 - C32942) * C16922 +
             (C32945 - C32944 + C32947 - C32946) * C16928 +
             (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
             C32979 * C16924) *
                C50211 * C50352 +
            ((C33305 - C33304 + C33307 - C33306) * C16927 +
             (C33309 - C33308 + C33311 - C33310) * C16922 +
             (C33313 - C33312 + C33315 - C33314) * C16928 +
             (C33317 - C33316 + C33319 - C33318) * C16923 +
             (C33646 - C33647 + C33648 - C33649) * C16929 +
             (C33650 - C33651 + C33652 - C33653) * C16924) *
                C50211 * C50189) *
               C997 +
           (((C33127 - C33126 + C33129 - C33128) * C16927 +
             (C33131 - C33130 + C33133 - C33132) * C16922 +
             (C33135 - C33134 + C33137 - C33136) * C16928 +
             (C33139 - C33138 + C33141 - C33140) * C16923 +
             (C33486 - C33487 + C33488 - C33489) * C16929 +
             (C33490 - C33491 + C33492 - C33493) * C16924) *
                C50211 * C50352 +
            ((C33851 - C33850 + C33853 - C33852) * C16927 +
             (C33855 - C33854 + C33857 - C33856) * C16922 +
             (C33859 - C33858 + C33861 - C33860) * C16928 +
             (C33863 - C33862 + C33865 - C33864) * C16923 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C16929 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C16924) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
              C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                 C19531 +
             (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
              C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                 C50062) *
                C50211 * C50352 +
            ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
              C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
              C38438 * C5461) *
                 C19531 +
             (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
              C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
              C38438 * C5467) *
                 C50062) *
                C50211 * C50189) *
               C997 +
           (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
              C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
              C38438 * C4504) *
                 C19531 +
             (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
              C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
              C38438 * C4512) *
                 C50062) *
                C50211 * C50352 +
            ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
              C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
              C38442 * C6410) *
                 C19531 +
             (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
              C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
              C38442 * C6413) *
                 C50062) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
              C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                 C19531 +
             (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
              C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                 C50062) *
                C50211 * C50352 +
            ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
              C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
              C38442 * C5459) *
                 C19531 +
             (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
              C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
              C38442 * C5464) *
                 C50062) *
                C50211 * C50189) *
               C997 +
           (((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
              C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
              C38442 * C4501) *
                 C19531 +
             (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
              C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
              C38442 * C4507) *
                 C50062) *
                C50211 * C50352 +
            ((C38439 * C868 - C38435 * C874 + C38440 * C1188 - C38436 * C1193 +
              C38441 * C4501 - C38437 * C4506 + C38442 * C6411 -
              C38438 * C6414) *
                 C19531 +
             (C38439 * C875 - C38435 * C883 + C38440 * C1194 - C38436 * C1200 +
              C38441 * C4507 - C38437 * C4513 + C38442 * C6415 -
              C38438 * C6417) *
                 C50062) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C50125 * C1068 +
          ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
               C16927 +
           (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
               C16922 +
           (C33126 - C33127 + C33128 - C33129) * C16928 +
           (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
           C33495 * C16924) *
              C50211 * C50125 * C1069 +
          ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
               C16927 +
           (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
               C16922 +
           (C33142 - C33143 + C33144 - C33145) * C16928 +
           (C33146 - C33147 + C33148 - C33149) * C16923 +
           (C33150 - C33151 + C33152 - C33153) * C16929 +
           (C33154 - C33155 + C33156 - C33157) * C16924) *
              C50211 * C50125 * C1070 +
          ((C32933 * C1073 - C32931 * C1077 + C32934 * C3144 - C50286 * C3147) *
               C16927 +
           (C32933 * C1078 - C32931 * C1085 + C32934 * C3148 - C50286 * C3153) *
               C16922 +
           (C32933 * C1074 - C32931 * C1079 + C32934 * C3145 - C50286 * C3149) *
               C16928 +
           (C32933 * C1080 - C32931 * C1086 + C32934 * C3150 - C50286 * C3154) *
               C16923 +
           (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 - C50286 * C3151) *
               C16929 +
           (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 - C50286 * C3155) *
               C16924) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C997 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C997 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50125 * C997 +
           (C33494 * C16927 + C33495 * C16922 +
            (C33487 - C33486 + C33489 - C33488) * C16928 +
            (C33491 - C33490 + C33493 - C33492) * C16923 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C16929 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C16924) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C997 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C997 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50125 * C997 +
           ((C33494 * C19531 + C33495 * C50062) * C2263 +
            ((C33151 - C33150 + C33153 - C33152) * C19531 +
             (C33155 - C33154 + C33157 - C33156) * C50062) *
                C2264 +
            ((C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C35862 - C35863 + C35864 - C35865) * C19531 +
            (C35866 - C35867 + C35868 - C35869) * C50062) *
               C2264 +
           C35911 * C2265) *
              C50125 * C1068 +
          (((C35863 - C35862 + C35865 - C35864) * C19531 +
            (C35867 - C35866 + C35869 - C35868) * C50062) *
               C2263 +
           ((C35871 - C35870 + C35873 - C35872) * C19531 +
            (C35875 - C35874 + C35877 - C35876) * C50062) *
               C2264 +
           C36828 * C2265) *
              C50125 * C1069 +
          (C35911 * C2263 +
           ((C35879 - C35878 + C35881 - C35880) * C19531 +
            (C35883 - C35882 + C35885 - C35884) * C50062) *
               C2264 +
           ((C36816 - C36817 + C36818 - C36819) * C19531 +
            (C36820 - C36821 + C36822 - C36823) * C50062) *
               C2265) *
              C50125 * C1070 +
          (C36828 * C2263 +
           ((C36817 - C36816 + C36819 - C36818) * C19531 +
            (C36821 - C36820 + C36823 - C36822) * C50062) *
               C2264 +
           ((C32933 * C3420 - C32931 * C3422 + C32934 * C20680 -
             C50286 * C20681) *
                C19531 +
            (C32933 * C3423 - C32931 * C3426 + C32934 * C20682 -
             C50286 * C20683) *
                C50062) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50125 * C997 +
           ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50125 * C997 +
           ((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
             C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
             C38442 * C4501) *
                C19531 +
            (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
             C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
             C38442 * C4507) *
                C50062) *
               C50211 * C50125 * C50161) *
              C1000 +
          (((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
             C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
                C19531 +
            (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
             C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
                C50062) *
               C50211 * C50125 * C997 +
           ((C38439 * C283 - C38435 * C295 + C38440 * C869 - C38436 * C876 +
             C38441 * C1189 - C38437 * C1195 + C38442 * C6004 -
             C38438 * C6005) *
                C19531 +
            (C38439 * C296 - C38435 * C313 + C38440 * C877 - C38436 * C884 +
             C38441 * C1196 - C38437 * C1201 + C38442 * C6006 -
             C38438 * C6007) *
                C50062) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
            C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
               C19531 +
           (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
            C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
               C50062) *
              C50211 * C50125 * C1068 +
          ((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
            C38441 * C1187 - C38437 * C1191 + C38442 * C4500 - C38438 * C4504) *
               C19531 +
           (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
            C38441 * C1192 - C38437 * C1199 + C38442 * C4505 - C38438 * C4512) *
               C50062) *
              C50211 * C50125 * C1069 +
          ((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
            C38437 * C2629 - C38441 * C2626 + C38438 * C4508 - C38442 * C4502) *
               C19531 +
           (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
            C38437 * C2635 - C38441 * C2630 + C38438 * C4514 - C38442 * C4509) *
               C50062) *
              C50211 * C50125 * C1070 +
          ((C38439 * C1073 - C38435 * C1077 + C38440 * C3144 - C38436 * C3147 +
            C38441 * C3587 - C38437 * C3589 + C38442 * C20958 -
            C38438 * C20959) *
               C19531 +
           (C38439 * C1078 - C38435 * C1085 + C38440 * C3148 - C38436 * C3153 +
            C38441 * C3590 - C38437 * C3593 + C38442 * C20960 -
            C38438 * C20961) *
               C50062) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C19531 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50062) *
                 C2263 +
             ((C35862 - C35863 + C35864 - C35865) * C19531 +
              (C35866 - C35867 + C35868 - C35869) * C50062) *
                 C2264 +
             C35911 * C2265) *
                C1648 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C19531 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50062) *
                 C2263 +
             ((C36544 - C36545 + C36546 - C36547) * C19531 +
              (C36548 - C36549 + C36550 - C36551) * C50062) *
                 C2264 +
             C37493 * C2265) *
                C50189) *
               C50351 +
           ((((C35863 - C35862 + C35865 - C35864) * C19531 +
              (C35867 - C35866 + C35869 - C35868) * C50062) *
                 C2263 +
             ((C35871 - C35870 + C35873 - C35872) * C19531 +
              (C35875 - C35874 + C35877 - C35876) * C50062) *
                 C2264 +
             C36828 * C2265) *
                C1648 +
            (((C36545 - C36544 + C36547 - C36546) * C19531 +
              (C36549 - C36548 + C36551 - C36550) * C50062) *
                 C2263 +
             ((C36553 - C36552 + C36555 - C36554) * C19531 +
              (C36557 - C36556 + C36559 - C36558) * C50062) *
                 C2264 +
             ((C37481 - C37482 + C37483 - C37484) * C19531 +
              (C37485 - C37486 + C37487 - C37488) * C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C32937 - C32936 + C32939 - C32938) * C19531 +
              (C32941 - C32940 + C32943 - C32942) * C50062) *
                 C2263 +
             ((C33126 - C33127 + C33128 - C33129) * C19531 +
              (C33130 - C33131 + C33132 - C33133) * C50062) *
                 C2264 +
             C35910 * C2265) *
                C1648 +
            (((C33305 - C33304 + C33307 - C33306) * C19531 +
              (C33309 - C33308 + C33311 - C33310) * C50062) *
                 C2263 +
             ((C33850 - C33851 + C33852 - C33853) * C19531 +
              (C33854 - C33855 + C33856 - C33857) * C50062) *
                 C2264 +
             ((C36560 - C36561 + C36562 - C36563) * C19531 +
              (C36564 - C36565 + C36566 - C36567) * C50062) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C33127 - C33126 + C33129 - C33128) * C19531 +
              (C33131 - C33130 + C33133 - C33132) * C50062) *
                 C2263 +
             ((C33142 - C33143 + C33144 - C33145) * C19531 +
              (C33146 - C33147 + C33148 - C33149) * C50062) *
                 C2264 +
             ((C35890 - C35891 + C35892 - C35893) * C19531 +
              (C35894 - C35895 + C35896 - C35897) * C50062) *
                 C2265) *
                C1648 +
            (((C33851 - C33850 + C33853 - C33852) * C19531 +
              (C33855 - C33854 + C33857 - C33856) * C50062) *
                 C2263 +
             ((C36561 - C36560 + C36563 - C36562) * C19531 +
              (C36565 - C36564 + C36567 - C36566) * C50062) *
                 C2264 +
             ((C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C16927 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C16922 +
             (C32936 - C32937 + C32938 - C32939) * C16928 +
             (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
             C32977 * C16924) *
                C50211 * C1648 +
            ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C16927 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C16922 +
             (C33304 - C33305 + C33306 - C33307) * C16928 +
             (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
             C33655 * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                 C16927 +
             (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                 C16922 +
             (C33126 - C33127 + C33128 - C33129) * C16928 +
             (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
             C33495 * C16924) *
                C50211 * C1648 +
            ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                 C16927 +
             (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                 C16922 +
             (C33850 - C33851 + C33852 - C33853) * C16928 +
             (C33854 - C33855 + C33856 - C33857) * C16923 +
             (C33858 - C33859 + C33860 - C33861) * C16929 +
             (C33862 - C33863 + C33864 - C33865) * C16924) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C16927 +
             (C32941 - C32940 + C32943 - C32942) * C16922 +
             (C32945 - C32944 + C32947 - C32946) * C16928 +
             (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
             C32979 * C16924) *
                C50211 * C1648 +
            ((C33305 - C33304 + C33307 - C33306) * C16927 +
             (C33309 - C33308 + C33311 - C33310) * C16922 +
             (C33313 - C33312 + C33315 - C33314) * C16928 +
             (C33317 - C33316 + C33319 - C33318) * C16923 +
             (C33646 - C33647 + C33648 - C33649) * C16929 +
             (C33650 - C33651 + C33652 - C33653) * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C33127 - C33126 + C33129 - C33128) * C16927 +
             (C33131 - C33130 + C33133 - C33132) * C16922 +
             (C33135 - C33134 + C33137 - C33136) * C16928 +
             (C33139 - C33138 + C33141 - C33140) * C16923 +
             (C33486 - C33487 + C33488 - C33489) * C16929 +
             (C33490 - C33491 + C33492 - C33493) * C16924) *
                C50211 * C1648 +
            ((C33851 - C33850 + C33853 - C33852) * C16927 +
             (C33855 - C33854 + C33857 - C33856) * C16922 +
             (C33859 - C33858 + C33861 - C33860) * C16928 +
             (C33863 - C33862 + C33865 - C33864) * C16923 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C16929 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C16924) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
              C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                 C19531 +
             (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
              C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                 C50062) *
                C50211 * C1648 +
            ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
              C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
              C38438 * C5461) *
                 C19531 +
             (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
              C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
              C38438 * C5467) *
                 C50062) *
                C50211 * C50189) *
               C50351 +
           (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
              C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
              C38438 * C4504) *
                 C19531 +
             (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
              C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
              C38438 * C4512) *
                 C50062) *
                C50211 * C1648 +
            ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
              C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
              C38442 * C6410) *
                 C19531 +
             (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
              C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
              C38442 * C6413) *
                 C50062) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
              C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                 C19531 +
             (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
              C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                 C50062) *
                C50211 * C1648 +
            ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
              C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
              C38442 * C5459) *
                 C19531 +
             (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
              C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
              C38442 * C5464) *
                 C50062) *
                C50211 * C50189) *
               C50351 +
           (((C38435 * C293 - C38439 * C282 + C38436 * C874 - C38440 * C868 +
              C38437 * C1193 - C38441 * C1188 + C38438 * C4506 -
              C38442 * C4501) *
                 C19531 +
             (C38435 * C312 - C38439 * C294 + C38436 * C883 - C38440 * C875 +
              C38437 * C1200 - C38441 * C1194 + C38438 * C4513 -
              C38442 * C4507) *
                 C50062) *
                C50211 * C1648 +
            ((C38439 * C868 - C38435 * C874 + C38440 * C1188 - C38436 * C1193 +
              C38441 * C4501 - C38437 * C4506 + C38442 * C6411 -
              C38438 * C6414) *
                 C19531 +
             (C38439 * C875 - C38435 * C883 + C38440 * C1194 - C38436 * C1200 +
              C38441 * C4507 - C38437 * C4513 + C38442 * C6415 -
              C38438 * C6417) *
                 C50062) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50398 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50399 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C36975 - C36976 + C36977 - C36978) * C19531 +
             (C36979 - C36980 + C36981 - C36982) * C50062) *
                C2264 +
            ((C36983 - C36984 + C36985 - C36986) * C19531 +
             (C36987 - C36988 + C36989 - C36990) * C50062) *
                C2265) *
               C2064) *
              C50351 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C50398 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50399 +
           (((C36976 - C36975 + C36978 - C36977) * C19531 +
             (C36980 - C36979 + C36982 - C36981) * C50062) *
                C2263 +
            ((C36984 - C36983 + C36986 - C36985) * C19531 +
             (C36988 - C36987 + C36990 - C36989) * C50062) *
                C2264 +
            ((C32933 * C3587 - C32931 * C3589 + C32934 * C20958 -
              C50286 * C20959) *
                 C19531 +
             (C32933 * C3590 - C32931 * C3593 + C32934 * C20960 -
              C50286 * C20961) *
                 C50062) *
                C2265) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50398 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50399 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C2064) *
              C50351 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50398 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50399 +
           ((C32933 * C1187 - C32931 * C1191 + C32934 * C4500 -
             C50286 * C4504) *
                C16927 +
            (C32933 * C1192 - C32931 * C1199 + C32934 * C4505 -
             C50286 * C4512) *
                C16922 +
            (C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
             C50286 * C4506) *
                C16928 +
            (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
             C50286 * C4513) *
                C16923 +
            (C32933 * C1189 - C32931 * C1195 + C32934 * C6004 -
             C50286 * C6005) *
                C16929 +
            (C32933 * C1196 - C32931 * C1201 + C32934 * C6006 -
             C50286 * C6007) *
                C16924) *
               C50211 * C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50398 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50399 +
           ((C38435 * C464 - C38439 * C450 + C38436 * C1822 - C38440 * C1818 +
             C38437 * C5461 - C38441 * C5458 + C38438 * C7296 -
             C38442 * C7294) *
                C19531 +
            (C38435 * C480 - C38439 * C465 + C38436 * C1830 - C38440 * C1823 +
             C38437 * C5467 - C38441 * C5462 + C38438 * C7300 -
             C38442 * C7297) *
                C50062) *
               C50211 * C2064) *
              C50351 +
          (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C50398 +
           ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
             C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
             C38442 * C6410) *
                C19531 +
            (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
             C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
             C38442 * C6413) *
                C50062) *
               C50211 * C50399 +
           ((C38439 * C1187 - C38435 * C1191 + C38440 * C4500 - C38436 * C4504 +
             C38441 * C6410 - C38437 * C6412 + C38442 * C23506 -
             C38438 * C23507) *
                C19531 +
            (C38439 * C1192 - C38435 * C1199 + C38440 * C4505 - C38436 * C4512 +
             C38441 * C6413 - C38437 * C6416 + C38442 * C23508 -
             C38438 * C23509) *
                C50062) *
               C50211 * C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C32931 * C129 - C32933 * C122 + C50286 * C456 -
                 C32934 * C446) *
                    C16927 +
                (C32931 * C143 - C32933 * C130 + C50286 * C476 -
                 C32934 * C457) *
                    C16922 +
                (C32936 - C32937 + C32938 - C32939) * C16928 +
                (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
                C32977 * C16924) *
                   C50211 * C1648 +
               ((C32933 * C446 - C32931 * C456 + C32934 * C450 -
                 C50286 * C464) *
                    C16927 +
                (C32933 * C457 - C32931 * C476 + C32934 * C465 -
                 C50286 * C480) *
                    C16922 +
                (C33304 - C33305 + C33306 - C33307) * C16928 +
                (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
                C33655 * C16924) *
                   C50211 * C50189) *
                  C50109 * C999 +
              (((C32937 - C32936 + C32939 - C32938) * C16927 +
                (C32941 - C32940 + C32943 - C32942) * C16922 +
                (C32945 - C32944 + C32947 - C32946) * C16928 +
                (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
                C32979 * C16924) *
                   C50211 * C1648 +
               ((C33305 - C33304 + C33307 - C33306) * C16927 +
                (C33309 - C33308 + C33311 - C33310) * C16922 +
                (C33313 - C33312 + C33315 - C33314) * C16928 +
                (C33317 - C33316 + C33319 - C33318) * C16923 +
                (C33646 - C33647 + C33648 - C33649) * C16929 +
                (C33650 - C33651 + C33652 - C33653) * C16924) *
                   C50211 * C50189) *
                  C50109 * C1000 +
              ((C32976 * C16927 + C32977 * C16922 +
                (C32953 - C32952 + C32955 - C32954) * C16928 +
                (C32957 - C32956 + C32959 - C32958) * C16923 +
                (C32960 - C32961 + C32962 - C32963) * C16929 +
                (C32964 - C32965 + C32966 - C32967) * C16924) *
                   C50211 * C1648 +
               (C33654 * C16927 + C33655 * C16922 +
                (C33647 - C33646 + C33649 - C33648) * C16928 +
                (C33651 - C33650 + C33653 - C33652) * C16923 +
                (C32933 * C454 - C32931 * C472 + C32934 * C455 -
                 C50286 * C474) *
                    C16929 +
                (C32933 * C473 - C32931 * C484 + C32934 * C475 -
                 C50286 * C485) *
                    C16924) *
                   C50211 * C50189) *
                  C50109 * C1001) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C32931 * C129 - C32933 * C122 + C50286 * C456 -
                 C32934 * C446) *
                    C16927 +
                (C32931 * C143 - C32933 * C130 + C50286 * C476 -
                 C32934 * C457) *
                    C16922 +
                (C32936 - C32937 + C32938 - C32939) * C16928 +
                (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
                C32977 * C16924) *
                   C50211 * C1648 +
               ((C32933 * C446 - C32931 * C456 + C32934 * C450 -
                 C50286 * C464) *
                    C16927 +
                (C32933 * C457 - C32931 * C476 + C32934 * C465 -
                 C50286 * C480) *
                    C16922 +
                (C33304 - C33305 + C33306 - C33307) * C16928 +
                (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
                C33655 * C16924) *
                   C50211 * C50189) *
                  C276 +
              (((C32933 * C281 - C32931 * C291 + C32934 * C867 -
                 C50286 * C872) *
                    C16927 +
                (C32933 * C292 - C32931 * C311 + C32934 * C873 -
                 C50286 * C882) *
                    C16922 +
                (C33126 - C33127 + C33128 - C33129) * C16928 +
                (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
                C33495 * C16924) *
                   C50211 * C1648 +
               ((C32931 * C872 - C32933 * C867 + C50286 * C1191 -
                 C32934 * C1187) *
                    C16927 +
                (C32931 * C882 - C32933 * C873 + C50286 * C1199 -
                 C32934 * C1192) *
                    C16922 +
                (C33850 - C33851 + C33852 - C33853) * C16928 +
                (C33854 - C33855 + C33856 - C33857) * C16923 +
                (C33858 - C33859 + C33860 - C33861) * C16929 +
                (C33862 - C33863 + C33864 - C33865) * C16924) *
                   C50211 * C50189) *
                  C277 +
              (((C32931 * C299 - C32933 * C285 + C50286 * C1538 -
                 C32934 * C1534) *
                    C16927 +
                (C32931 * C315 - C32933 * C300 + C50286 * C1546 -
                 C32934 * C1539) *
                    C16922 +
                (C33142 - C33143 + C33144 - C33145) * C16928 +
                (C33146 - C33147 + C33148 - C33149) * C16923 +
                (C33150 - C33151 + C33152 - C33153) * C16929 +
                (C33154 - C33155 + C33156 - C33157) * C16924) *
                   C50211 * C1648 +
               ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
                 C50286 * C2629) *
                    C16927 +
                (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
                 C50286 * C2635) *
                    C16922 +
                (C32933 * C1535 - C32931 * C1540 + C32934 * C2627 -
                 C50286 * C2631) *
                    C16928 +
                (C32933 * C1541 - C32931 * C1547 + C32934 * C2632 -
                 C50286 * C2636) *
                    C16923 +
                (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
                 C50286 * C2633) *
                    C16929 +
                (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
                 C50286 * C2637) *
                    C16924) *
                   C50211 * C50189) *
                  C278) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C1814 +
          ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
               C16927 +
           (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
               C16922 +
           (C33304 - C33305 + C33306 - C33307) * C16928 +
           (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
           C33655 * C16924) *
              C50211 * C1815 +
          ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
               C16927 +
           (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
               C16922 +
           (C33320 - C33321 + C33322 - C33323) * C16928 +
           (C33324 - C33325 + C33326 - C33327) * C16923 +
           (C33328 - C33329 + C33330 - C33331) * C16929 +
           (C33332 - C33333 + C33334 - C33335) * C16924) *
              C50211 * C1816 +
          ((C32933 * C1818 - C32931 * C1822 + C32934 * C5458 - C50286 * C5461) *
               C16927 +
           (C32933 * C1823 - C32931 * C1830 + C32934 * C5462 - C50286 * C5467) *
               C16922 +
           (C32933 * C1819 - C32931 * C1824 + C32934 * C5459 - C50286 * C5463) *
               C16928 +
           (C32933 * C1825 - C32931 * C1831 + C32934 * C5464 - C50286 * C5468) *
               C16923 +
           (C32933 * C1820 - C32931 * C1826 + C32934 * C5460 - C50286 * C5465) *
               C16929 +
           (C32933 * C1827 - C32931 * C1832 + C32934 * C5466 - C50286 * C5469) *
               C16924) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C1648 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C36560 - C36561 + C36562 - C36563) * C19531 +
             (C36564 - C36565 + C36566 - C36567) * C50062) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C1648 +
           ((C33654 * C19531 + C33655 * C50062) * C2263 +
            ((C33859 - C33858 + C33861 - C33860) * C19531 +
             (C33863 - C33862 + C33865 - C33864) * C50062) *
                C2264 +
            ((C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C276 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C1648 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50189) *
              C277 +
          ((C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C1648 +
           (C37493 * C2263 +
            ((C37482 - C37481 + C37484 - C37483) * C19531 +
             (C37486 - C37485 + C37488 - C37487) * C50062) *
                C2264 +
            ((C32933 * C4089 - C32931 * C4091 + C32934 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C32933 * C4092 - C32931 * C4095 + C32934 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C35862 - C35863 + C35864 - C35865) * C19531 +
            (C35866 - C35867 + C35868 - C35869) * C50062) *
               C2264 +
           C35911 * C2265) *
              C1814 +
          (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C19531 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C50062) *
               C2263 +
           ((C36544 - C36545 + C36546 - C36547) * C19531 +
            (C36548 - C36549 + C36550 - C36551) * C50062) *
               C2264 +
           C37493 * C2265) *
              C1815 +
          (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C19531 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C50062) *
               C2263 +
           ((C36975 - C36976 + C36977 - C36978) * C19531 +
            (C36979 - C36980 + C36981 - C36982) * C50062) *
               C2264 +
           ((C36983 - C36984 + C36985 - C36986) * C19531 +
            (C36987 - C36988 + C36989 - C36990) * C50062) *
               C2265) *
              C1816 +
          (((C32933 * C1818 - C32931 * C1822 + C32934 * C5458 -
             C50286 * C5461) *
                C19531 +
            (C32933 * C1823 - C32931 * C1830 + C32934 * C5462 -
             C50286 * C5467) *
                C50062) *
               C2263 +
           ((C32933 * C4500 - C32931 * C4504 + C32934 * C6410 -
             C50286 * C6412) *
                C19531 +
            (C32933 * C4505 - C32931 * C4512 + C32934 * C6413 -
             C50286 * C6416) *
                C50062) *
               C2264 +
           ((C32933 * C4502 - C32931 * C4508 + C32934 * C22602 -
             C50286 * C22603) *
                C19531 +
            (C32933 * C4509 - C32931 * C4514 + C32934 * C22604 -
             C50286 * C22605) *
                C50062) *
               C2265) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C1648 +
           ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
             C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
             C38442 * C5459) *
                C19531 +
            (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
             C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
             C38442 * C5464) *
                C50062) *
               C50211 * C50189) *
              C50109 * C1000 +
          (((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
             C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
                C19531 +
            (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
             C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C448 - C38435 * C460 + C38440 * C452 - C38436 * C468 +
             C38441 * C1820 - C38437 * C1826 + C38442 * C5460 -
             C38438 * C5465) *
                C19531 +
            (C38439 * C461 - C38435 * C478 + C38440 * C469 - C38436 * C482 +
             C38441 * C1827 - C38437 * C1832 + C38442 * C5466 -
             C38438 * C5469) *
                C50062) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50189) *
              C276 +
          (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C1648 +
           ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
             C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
             C38442 * C6410) *
                C19531 +
            (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
             C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
             C38442 * C6413) *
                C50062) *
               C50211 * C50189) *
              C277 +
          (((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
             C38437 * C2629 - C38441 * C2626 + C38438 * C4508 -
             C38442 * C4502) *
                C19531 +
            (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
             C38437 * C2635 - C38441 * C2630 + C38438 * C4514 -
             C38442 * C4509) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C1534 - C38435 * C1538 + C38440 * C2626 - C38436 * C2629 +
             C38441 * C4502 - C38437 * C4508 + C38442 * C22602 -
             C38438 * C22603) *
                C19531 +
            (C38439 * C1539 - C38435 * C1546 + C38440 * C2630 - C38436 * C2635 +
             C38441 * C4509 - C38437 * C4514 + C38442 * C22604 -
             C38438 * C22605) *
                C50062) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
            C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
               C19531 +
           (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
            C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
               C50062) *
              C50211 * C1814 +
          ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
            C38441 * C1818 - C38437 * C1822 + C38442 * C5458 - C38438 * C5461) *
               C19531 +
           (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
            C38441 * C1823 - C38437 * C1830 + C38442 * C5462 - C38438 * C5467) *
               C50062) *
              C50211 * C1815 +
          ((C38435 * C464 - C38439 * C450 + C38436 * C1822 - C38440 * C1818 +
            C38437 * C5461 - C38441 * C5458 + C38438 * C7296 - C38442 * C7294) *
               C19531 +
           (C38435 * C480 - C38439 * C465 + C38436 * C1830 - C38440 * C1823 +
            C38437 * C5467 - C38441 * C5462 + C38438 * C7300 - C38442 * C7297) *
               C50062) *
              C50211 * C1816 +
          ((C38439 * C1818 - C38435 * C1822 + C38440 * C5458 - C38436 * C5461 +
            C38441 * C7294 - C38437 * C7296 + C38442 * C39815 -
            C38438 * C39816) *
               C19531 +
           (C38439 * C1823 - C38435 * C1830 + C38440 * C5462 - C38436 * C5467 +
            C38441 * C7297 - C38437 * C7300 + C38442 * C39817 -
            C38438 * C39818) *
               C50062) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50398 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50399 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C36975 - C36976 + C36977 - C36978) * C19531 +
             (C36979 - C36980 + C36981 - C36982) * C50062) *
                C2264 +
            ((C36983 - C36984 + C36985 - C36986) * C19531 +
             (C36987 - C36988 + C36989 - C36990) * C50062) *
                C2265) *
               C2064) *
              C50109 * C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50398 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C36560 - C36561 + C36562 - C36563) * C19531 +
             (C36564 - C36565 + C36566 - C36567) * C50062) *
                C2265) *
               C50399 +
           (((C33321 - C33320 + C33323 - C33322) * C19531 +
             (C33325 - C33324 + C33327 - C33326) * C50062) *
                C2263 +
            ((C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
              C50286 * C4506) *
                 C19531 +
             (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
              C50286 * C4513) *
                 C50062) *
                C2264 +
            ((C32933 * C2627 - C32931 * C2631 + C32934 * C4503 -
              C50286 * C4510) *
                 C19531 +
             (C32933 * C2632 - C32931 * C2636 + C32934 * C4511 -
              C50286 * C4515) *
                 C50062) *
                C2265) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50398 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50399 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50398 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50399 +
           ((C33321 - C33320 + C33323 - C33322) * C16927 +
            (C33325 - C33324 + C33327 - C33326) * C16922 +
            (C33329 - C33328 + C33331 - C33330) * C16928 +
            (C33333 - C33332 + C33335 - C33334) * C16923 +
            (C32933 * C453 - C32931 * C470 + C32934 * C1821 - C50286 * C1828) *
                C16929 +
            (C32933 * C471 - C32931 * C483 + C32934 * C1829 - C50286 * C1833) *
                C16924) *
               C50211 * C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C50398 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50399 +
           ((C38435 * C464 - C38439 * C450 + C38436 * C1822 - C38440 * C1818 +
             C38437 * C5461 - C38441 * C5458 + C38438 * C7296 -
             C38442 * C7294) *
                C19531 +
            (C38435 * C480 - C38439 * C465 + C38436 * C1830 - C38440 * C1823 +
             C38437 * C5467 - C38441 * C5462 + C38438 * C7300 -
             C38442 * C7297) *
                C50062) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C50398 +
           ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
             C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
             C38442 * C5459) *
                C19531 +
            (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
             C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
             C38442 * C5464) *
                C50062) *
               C50211 * C50399 +
           ((C38439 * C451 - C38435 * C466 + C38440 * C1819 - C38436 * C1824 +
             C38441 * C5459 - C38437 * C5463 + C38442 * C7295 -
             C38438 * C7298) *
                C19531 +
            (C38439 * C467 - C38435 * C481 + C38440 * C1825 - C38436 * C1831 +
             C38441 * C5464 - C38437 * C5468 + C38442 * C7299 -
             C38438 * C7301) *
                C50062) *
               C50211 * C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C1648 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C276 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C1648 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50189) *
              C277 +
          (((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C1648 +
           ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
             C50286 * C2629) *
                C16927 +
            (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
             C50286 * C2635) *
                C16922 +
            (C32933 * C1535 - C32931 * C1540 + C32934 * C2627 -
             C50286 * C2631) *
                C16928 +
            (C32933 * C1541 - C32931 * C1547 + C32934 * C2632 -
             C50286 * C2636) *
                C16923 +
            (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
             C50286 * C2633) *
                C16929 +
            (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
             C50286 * C2637) *
                C16924) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C1648 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C1648 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C1648 +
           (C33654 * C16927 + C33655 * C16922 +
            (C33647 - C33646 + C33649 - C33648) * C16928 +
            (C33651 - C33650 + C33653 - C33652) * C16923 +
            (C32933 * C454 - C32931 * C472 + C32934 * C455 - C50286 * C474) *
                C16929 +
            (C32933 * C473 - C32931 * C484 + C32934 * C475 - C50286 * C485) *
                C16924) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C1648 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C36560 - C36561 + C36562 - C36563) * C19531 +
             (C36564 - C36565 + C36566 - C36567) * C50062) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C1648 +
           ((C33654 * C19531 + C33655 * C50062) * C2263 +
            ((C33859 - C33858 + C33861 - C33860) * C19531 +
             (C33863 - C33862 + C33865 - C33864) * C50062) *
                C2264 +
            ((C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C276 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C1648 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50189) *
              C277 +
          ((C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C1648 +
           (C37493 * C2263 +
            ((C37482 - C37481 + C37484 - C37483) * C19531 +
             (C37486 - C37485 + C37488 - C37487) * C50062) *
                C2264 +
            ((C32933 * C4089 - C32931 * C4091 + C32934 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C32933 * C4092 - C32931 * C4095 + C32934 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C38439 * C123 - C38435 * C131 + C38440 * C447 - C38436 * C458 +
             C38441 * C451 - C38437 * C466 + C38442 * C1819 - C38438 * C1824) *
                C19531 +
            (C38439 * C132 - C38435 * C144 + C38440 * C459 - C38436 * C477 +
             C38441 * C467 - C38437 * C481 + C38442 * C1825 - C38438 * C1831) *
                C50062) *
               C50211 * C1648 +
           ((C38435 * C458 - C38439 * C447 + C38436 * C466 - C38440 * C451 +
             C38437 * C1824 - C38441 * C1819 + C38438 * C5463 -
             C38442 * C5459) *
                C19531 +
            (C38435 * C477 - C38439 * C459 + C38436 * C481 - C38440 * C467 +
             C38437 * C1831 - C38441 * C1825 + C38438 * C5468 -
             C38442 * C5464) *
                C50062) *
               C50211 * C50189) *
              C50109 * C1000 +
          (((C38435 * C133 - C38439 * C124 + C38436 * C460 - C38440 * C448 +
             C38437 * C468 - C38441 * C452 + C38438 * C1826 - C38442 * C1820) *
                C19531 +
            (C38435 * C145 - C38439 * C134 + C38436 * C478 - C38440 * C461 +
             C38437 * C482 - C38441 * C469 + C38438 * C1832 - C38442 * C1827) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C448 - C38435 * C460 + C38440 * C452 - C38436 * C468 +
             C38441 * C1820 - C38437 * C1826 + C38442 * C5460 -
             C38438 * C5465) *
                C19531 +
            (C38439 * C461 - C38435 * C478 + C38440 * C469 - C38436 * C482 +
             C38441 * C1827 - C38437 * C1832 + C38442 * C5466 -
             C38438 * C5469) *
                C50062) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C129 - C38439 * C122 + C38436 * C456 - C38440 * C446 +
             C38437 * C464 - C38441 * C450 + C38438 * C1822 - C38442 * C1818) *
                C19531 +
            (C38435 * C143 - C38439 * C130 + C38436 * C476 - C38440 * C457 +
             C38437 * C480 - C38441 * C465 + C38438 * C1830 - C38442 * C1823) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C446 - C38435 * C456 + C38440 * C450 - C38436 * C464 +
             C38441 * C1818 - C38437 * C1822 + C38442 * C5458 -
             C38438 * C5461) *
                C19531 +
            (C38439 * C457 - C38435 * C476 + C38440 * C465 - C38436 * C480 +
             C38441 * C1823 - C38437 * C1830 + C38442 * C5462 -
             C38438 * C5467) *
                C50062) *
               C50211 * C50189) *
              C276 +
          (((C38439 * C281 - C38435 * C291 + C38440 * C867 - C38436 * C872 +
             C38441 * C1187 - C38437 * C1191 + C38442 * C4500 -
             C38438 * C4504) *
                C19531 +
            (C38439 * C292 - C38435 * C311 + C38440 * C873 - C38436 * C882 +
             C38441 * C1192 - C38437 * C1199 + C38442 * C4505 -
             C38438 * C4512) *
                C50062) *
               C50211 * C1648 +
           ((C38435 * C872 - C38439 * C867 + C38436 * C1191 - C38440 * C1187 +
             C38437 * C4504 - C38441 * C4500 + C38438 * C6412 -
             C38442 * C6410) *
                C19531 +
            (C38435 * C882 - C38439 * C873 + C38436 * C1199 - C38440 * C1192 +
             C38437 * C4512 - C38441 * C4505 + C38438 * C6416 -
             C38442 * C6413) *
                C50062) *
               C50211 * C50189) *
              C277 +
          (((C38435 * C299 - C38439 * C285 + C38436 * C1538 - C38440 * C1534 +
             C38437 * C2629 - C38441 * C2626 + C38438 * C4508 -
             C38442 * C4502) *
                C19531 +
            (C38435 * C315 - C38439 * C300 + C38436 * C1546 - C38440 * C1539 +
             C38437 * C2635 - C38441 * C2630 + C38438 * C4514 -
             C38442 * C4509) *
                C50062) *
               C50211 * C1648 +
           ((C38439 * C1534 - C38435 * C1538 + C38440 * C2626 - C38436 * C2629 +
             C38441 * C4502 - C38437 * C4508 + C38442 * C22602 -
             C38438 * C22603) *
                C19531 +
            (C38439 * C1539 - C38435 * C1546 + C38440 * C2630 - C38436 * C2635 +
             C38441 * C4509 - C38437 * C4514 + C38442 * C22604 -
             C38438 * C22605) *
                C50062) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50125 * C50351 +
           ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50125 * C50351 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
            (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
               C50211 * C50125 * C50351 +
           ((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C49175 +
            (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50336 +
            (C43782 * C284 - C50402 * C297 + C43783 * C870 - C50403 * C878 +
             C43784 * C1190 - C43781 * C1197) *
                C49168 +
            (C43782 * C298 - C50402 * C314 + C43783 * C879 - C50403 * C885 +
             C43784 * C1198 - C43781 * C1202) *
                C50067) *
               C50211 * C50125 * C50161) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C49175 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50336 +
             (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
                C50211 * C50352 +
            ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C49175 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50336 +
             (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
              C43784 * C1187 - C43781 * C1191) *
                 C49175 +
             (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
              C43784 * C1192 - C43781 * C1199) *
                 C50336 +
             (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
                C50211 * C50352 +
            ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
              C43781 * C4504 - C43784 * C4500) *
                 C49175 +
             (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
              C43781 * C4512 - C43784 * C4505) *
                 C50336 +
             (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
             (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
                C50211 * C50352 +
            ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
             (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
             (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
                C50211 * C50352 +
            ((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C49175 +
             (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50336 +
             (C43782 * C869 - C50402 * C876 + C43783 * C1189 - C50403 * C1195 +
              C43784 * C6004 - C43781 * C6005) *
                 C49168 +
             (C43782 * C877 - C50402 * C884 + C43783 * C1196 - C50403 * C1201 +
              C43784 * C6006 - C43781 * C6007) *
                 C50067) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50125 * C276 +
           ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50125 * C277 +
           ((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
             C43781 * C2629 - C43784 * C2626) *
                C49175 +
            (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
             C43781 * C2635 - C43784 * C2630) *
                C50336 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
               C50211 * C50125 * C278) *
              C279 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50125 * C276 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
            (C50402 * C295 - C43782 * C283 + C50403 * C876 - C43783 * C869 +
             C43781 * C1195 - C43784 * C1189) *
                C49168 +
            (C50402 * C313 - C43782 * C296 + C50403 * C884 - C43783 * C877 +
             C43781 * C1201 - C43784 * C1196) *
                C50067) *
               C50211 * C50125 * C277 +
           ((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C49175 +
            (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50336 +
            (C43782 * C287 - C50402 * C303 + C43783 * C1536 - C50403 * C1542 +
             C43784 * C2628 - C43781 * C2633) *
                C49168 +
            (C43782 * C304 - C50402 * C317 + C43783 * C1543 - C50403 * C1548 +
             C43784 * C2634 - C43781 * C2637) *
                C50067) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
            C43781 * C464 - C43784 * C450) *
               C49175 +
           (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
            C43781 * C480 - C43784 * C465) *
               C50336 +
           (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
           (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
              C50211 * C50125 * C50109 * C113 +
          ((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
           (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
           (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
           (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
              C50211 * C50125 * C50109 * C114 +
          ((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
           (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
           (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
           (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
              C50211 * C50125 * C50109 * C115 +
          ((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C49175 +
           (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50336 +
           (C43782 * C126 - C50402 * C137 + C43783 * C454 - C50403 * C472 +
            C43784 * C455 - C43781 * C474) *
               C49168 +
           (C43782 * C138 - C50402 * C147 + C43783 * C473 - C50403 * C484 +
            C43784 * C475 - C43781 * C485) *
               C50067) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C443 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C444 +
           ((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
             C43781 * C5461 - C43784 * C5458) *
                C49175 +
            (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
             C43781 * C5467 - C43784 * C5462) *
                C50336 +
            (C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C49168 +
            (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50067) *
               C50211 * C445) *
              C50109 * C279 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C443 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
            (C50402 * C460 - C43782 * C448 + C50403 * C468 - C43783 * C452 +
             C43781 * C1826 - C43784 * C1820) *
                C49168 +
            (C50402 * C478 - C43782 * C461 + C50403 * C482 - C43783 * C469 +
             C43781 * C1832 - C43784 * C1827) *
                C50067) *
               C50211 * C444 +
           ((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C49175 +
            (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50336 +
            (C43782 * C452 - C50402 * C468 + C43783 * C1820 - C50403 * C1826 +
             C43784 * C5460 - C43781 * C5465) *
                C49168 +
            (C43782 * C469 - C50402 * C482 + C43783 * C1827 - C50403 * C1832 +
             C43784 * C5466 - C43781 * C5469) *
                C50067) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50352 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50352 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
            (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
            (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
            (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
               C50211 * C50352 +
           ((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C49175 +
            (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50336 +
            (C43782 * C449 - C50402 * C462 + C43783 * C453 - C50403 * C470 +
             C43784 * C1821 - C43781 * C1828) *
                C49168 +
            (C43782 * C463 - C50402 * C479 + C43783 * C471 - C50403 * C483 +
             C43784 * C1829 - C43781 * C1833) *
                C50067) *
               C50211 * C50189) *
              C50109 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
            C43781 * C464 - C43784 * C450) *
               C49175 +
           (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
            C43781 * C480 - C43784 * C465) *
               C50336 +
           (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
           (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
              C50211 * C50125 * C50109 * C113 +
          ((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
           (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
           (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
           (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
              C50211 * C50125 * C50109 * C114 +
          ((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
           (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
           (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
           (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
              C50211 * C50125 * C50109 * C115 +
          ((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C49175 +
           (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50336 +
           (C43782 * C126 - C50402 * C137 + C43783 * C454 - C50403 * C472 +
            C43784 * C455 - C43781 * C474) *
               C49168 +
           (C43782 * C138 - C50402 * C147 + C43783 * C473 - C50403 * C484 +
            C43784 * C475 - C43781 * C485) *
               C50067) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50125 * C276 +
           ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50125 * C277 +
           ((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
             C43781 * C2629 - C43784 * C2626) *
                C49175 +
            (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
             C43781 * C2635 - C43784 * C2630) *
                C50336 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
               C50211 * C50125 * C278) *
              C279 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50125 * C276 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
            (C50402 * C295 - C43782 * C283 + C50403 * C876 - C43783 * C869 +
             C43781 * C1195 - C43784 * C1189) *
                C49168 +
            (C50402 * C313 - C43782 * C296 + C50403 * C884 - C43783 * C877 +
             C43781 * C1201 - C43784 * C1196) *
                C50067) *
               C50211 * C50125 * C277 +
           ((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C49175 +
            (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50336 +
            (C43782 * C287 - C50402 * C303 + C43783 * C1536 - C50403 * C1542 +
             C43784 * C2628 - C43781 * C2633) *
                C49168 +
            (C43782 * C304 - C50402 * C317 + C43783 * C1543 - C50403 * C1548 +
             C43784 * C2634 - C43781 * C2637) *
                C50067) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50125 * C50396 +
           ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50125 * C50397 +
           ((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
             C43781 * C2629 - C43784 * C2626) *
                C49175 +
            (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
             C43781 * C2635 - C43784 * C2630) *
                C50336 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50125 * C50396 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
               C50211 * C50125 * C50397 +
           ((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C49175 +
            (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50336 +
            (C43782 * C287 - C50402 * C303 + C43783 * C1536 - C50403 * C1542 +
             C43784 * C2628 - C43781 * C2633) *
                C49168 +
            (C43782 * C304 - C50402 * C317 + C43783 * C1543 - C50403 * C1548 +
             C43784 * C2634 - C43781 * C2637) *
                C50067) *
               C50211 * C50125 * C1303) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50352 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50189) *
              C50396 +
          (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50352 +
           ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
             C43781 * C4504 - C43784 * C4500) *
                C49175 +
            (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
             C43781 * C4512 - C43784 * C4505) *
                C50336 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
               C50211 * C50189) *
              C50397 +
          (((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
             C43781 * C2629 - C43784 * C2626) *
                C49175 +
            (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
             C43781 * C2635 - C43784 * C2630) *
                C50336 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
               C50211 * C50352 +
           ((C43782 * C1534 - C50402 * C1538 + C43783 * C2626 - C50403 * C2629 +
             C43784 * C4502 - C43781 * C4508) *
                C49175 +
            (C43782 * C1539 - C50402 * C1546 + C43783 * C2630 - C50403 * C2635 +
             C43784 * C4509 - C43781 * C4514) *
                C50336 +
            (C43782 * C1535 - C50402 * C1540 + C43783 * C2627 - C50403 * C2631 +
             C43784 * C4503 - C43781 * C4510) *
                C49168 +
            (C43782 * C1541 - C50402 * C1547 + C43783 * C2632 - C50403 * C2636 +
             C43784 * C4511 - C43781 * C4515) *
                C50067) *
               C50211 * C50189) *
              C1303) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
            C43781 * C464 - C43784 * C450) *
               C49175 +
           (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
            C43781 * C480 - C43784 * C465) *
               C50336 +
           (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
           (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
              C50211 * C50125 * C1068 +
          ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
            C43784 * C1187 - C43781 * C1191) *
               C49175 +
           (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
            C43784 * C1192 - C43781 * C1199) *
               C50336 +
           (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
           (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
              C50211 * C50125 * C1069 +
          ((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
            C43781 * C2629 - C43784 * C2626) *
               C49175 +
           (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
            C43781 * C2635 - C43784 * C2630) *
               C50336 +
           (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
           (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
              C50211 * C50125 * C1070 +
          ((C43782 * C1073 - C50402 * C1077 + C43783 * C3144 - C50403 * C3147 +
            C43784 * C3587 - C43781 * C3589) *
               C49175 +
           (C43782 * C1078 - C50402 * C1085 + C43783 * C3148 - C50403 * C3153 +
            C43784 * C3590 - C43781 * C3593) *
               C50336 +
           (C43782 * C1074 - C50402 * C1079 + C43783 * C3145 - C50403 * C3149 +
            C43784 * C3588 - C43781 * C3591) *
               C49168 +
           (C43782 * C1080 - C50402 * C1086 + C43783 * C3150 - C50403 * C3154 +
            C43784 * C3592 - C43781 * C3594) *
               C50067) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50125 * C997 +
           ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50125 * C997 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
               C50211 * C50125 * C50161) *
              C1000 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
            (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
               C50211 * C50125 * C997 +
           ((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C49175 +
            (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50336 +
            (C43782 * C284 - C50402 * C297 + C43783 * C870 - C50403 * C878 +
             C43784 * C1190 - C43781 * C1197) *
                C49168 +
            (C43782 * C298 - C50402 * C314 + C43783 * C879 - C50403 * C885 +
             C43784 * C1198 - C43781 * C1202) *
                C50067) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C443 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C444 +
           ((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
             C43781 * C5461 - C43784 * C5458) *
                C49175 +
            (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
             C43781 * C5467 - C43784 * C5462) *
                C50336 +
            (C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C49168 +
            (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50067) *
               C50211 * C445) *
              C997 +
          (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C443 +
           ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
             C43781 * C4504 - C43784 * C4500) *
                C49175 +
            (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
             C43781 * C4512 - C43784 * C4505) *
                C50336 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
               C50211 * C444 +
           ((C43782 * C1187 - C50402 * C1191 + C43783 * C4500 - C50403 * C4504 +
             C43784 * C6410 - C43781 * C6412) *
                C49175 +
            (C43782 * C1192 - C50402 * C1199 + C43783 * C4505 - C50403 * C4512 +
             C43784 * C6413 - C43781 * C6416) *
                C50336 +
            (C43782 * C1188 - C50402 * C1193 + C43783 * C4501 - C50403 * C4506 +
             C43784 * C6411 - C43781 * C6414) *
                C49168 +
            (C43782 * C1194 - C50402 * C1200 + C43783 * C4507 - C50403 * C4513 +
             C43784 * C6415 - C43781 * C6417) *
                C50067) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C49175 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50336 +
             (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
                C50211 * C50352 +
            ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C49175 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50336 +
             (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
                C50211 * C50189) *
               C997 +
           (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
              C43784 * C1187 - C43781 * C1191) *
                 C49175 +
             (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
              C43784 * C1192 - C43781 * C1199) *
                 C50336 +
             (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
                C50211 * C50352 +
            ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
              C43781 * C4504 - C43784 * C4500) *
                 C49175 +
             (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
              C43781 * C4512 - C43784 * C4505) *
                 C50336 +
             (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
             (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
                C50211 * C50352 +
            ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
             (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
                C50211 * C50189) *
               C997 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
             (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
                C50211 * C50352 +
            ((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C49175 +
             (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50336 +
             (C43782 * C869 - C50402 * C876 + C43783 * C1189 - C50403 * C1195 +
              C43784 * C6004 - C43781 * C6005) *
                 C49168 +
             (C43782 * C877 - C50402 * C884 + C43783 * C1196 - C50403 * C1201 +
              C43784 * C6006 - C43781 * C6007) *
                 C50067) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50125 * C997 +
           ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50125 * C997 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
               C50211 * C50125 * C50161) *
              C1000 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
            (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
               C50211 * C50125 * C997 +
           ((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C49175 +
            (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50336 +
            (C43782 * C284 - C50402 * C297 + C43783 * C870 - C50403 * C878 +
             C43784 * C1190 - C43781 * C1197) *
                C49168 +
            (C43782 * C298 - C50402 * C314 + C43783 * C879 - C50403 * C885 +
             C43784 * C1198 - C43781 * C1202) *
                C50067) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
            C43781 * C464 - C43784 * C450) *
               C49175 +
           (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
            C43781 * C480 - C43784 * C465) *
               C50336 +
           (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
           (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
              C50211 * C50125 * C1068 +
          ((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
            C43784 * C1187 - C43781 * C1191) *
               C49175 +
           (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
            C43784 * C1192 - C43781 * C1199) *
               C50336 +
           (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
           (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
              C50211 * C50125 * C1069 +
          ((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
            C43781 * C2629 - C43784 * C2626) *
               C49175 +
           (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
            C43781 * C2635 - C43784 * C2630) *
               C50336 +
           (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
           (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
              C50211 * C50125 * C1070 +
          ((C43782 * C1073 - C50402 * C1077 + C43783 * C3144 - C50403 * C3147 +
            C43784 * C3587 - C43781 * C3589) *
               C49175 +
           (C43782 * C1078 - C50402 * C1085 + C43783 * C3148 - C50403 * C3153 +
            C43784 * C3590 - C43781 * C3593) *
               C50336 +
           (C43782 * C1074 - C50402 * C1079 + C43783 * C3145 - C50403 * C3149 +
            C43784 * C3588 - C43781 * C3591) *
               C49168 +
           (C43782 * C1080 - C50402 * C1086 + C43783 * C3150 - C50403 * C3154 +
            C43784 * C3592 - C43781 * C3594) *
               C50067) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
              C43781 * C464 - C43784 * C450) *
                 C49175 +
             (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
              C43781 * C480 - C43784 * C465) *
                 C50336 +
             (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
                C50211 * C1648 +
            ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
              C43784 * C1818 - C43781 * C1822) *
                 C49175 +
             (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
              C43784 * C1823 - C43781 * C1830) *
                 C50336 +
             (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
              C43784 * C1187 - C43781 * C1191) *
                 C49175 +
             (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
              C43784 * C1192 - C43781 * C1199) *
                 C50336 +
             (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
                C50211 * C1648 +
            ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
              C43781 * C4504 - C43784 * C4500) *
                 C49175 +
             (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
              C43781 * C4512 - C43784 * C4505) *
                 C50336 +
             (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
             (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
                C50211 * C1648 +
            ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
             (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
                C50211 * C50189) *
               C50351 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C49175 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50336 +
             (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C49168 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50067) *
                C50211 * C1648 +
            ((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C49175 +
             (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50336 +
             (C43782 * C869 - C50402 * C876 + C43783 * C1189 - C50403 * C1195 +
              C43784 * C6004 - C43781 * C6005) *
                 C49168 +
             (C43782 * C877 - C50402 * C884 + C43783 * C1196 - C50403 * C1201 +
              C43784 * C6006 - C43781 * C6007) *
                 C50067) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50398 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50399 +
           ((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
             C43781 * C5461 - C43784 * C5458) *
                C49175 +
            (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
             C43781 * C5467 - C43784 * C5462) *
                C50336 +
            (C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C49168 +
            (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50067) *
               C50211 * C2064) *
              C50351 +
          (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C50398 +
           ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
             C43781 * C4504 - C43784 * C4500) *
                C49175 +
            (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
             C43781 * C4512 - C43784 * C4505) *
                C50336 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
               C50211 * C50399 +
           ((C43782 * C1187 - C50402 * C1191 + C43783 * C4500 - C50403 * C4504 +
             C43784 * C6410 - C43781 * C6412) *
                C49175 +
            (C43782 * C1192 - C50402 * C1199 + C43783 * C4505 - C50403 * C4512 +
             C43784 * C6413 - C43781 * C6416) *
                C50336 +
            (C43782 * C1188 - C50402 * C1193 + C43783 * C4501 - C50403 * C4506 +
             C43784 * C6411 - C43781 * C6414) *
                C49168 +
            (C43782 * C1194 - C50402 * C1200 + C43783 * C4507 - C50403 * C4513 +
             C43784 * C6415 - C43781 * C6417) *
                C50067) *
               C50211 * C2064) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C1648 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50189) *
              C276 +
          (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C1648 +
           ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
             C43781 * C4504 - C43784 * C4500) *
                C49175 +
            (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
             C43781 * C4512 - C43784 * C4505) *
                C50336 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
               C50211 * C50189) *
              C277 +
          (((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
             C43781 * C2629 - C43784 * C2626) *
                C49175 +
            (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
             C43781 * C2635 - C43784 * C2630) *
                C50336 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
               C50211 * C1648 +
           ((C43782 * C1534 - C50402 * C1538 + C43783 * C2626 - C50403 * C2629 +
             C43784 * C4502 - C43781 * C4508) *
                C49175 +
            (C43782 * C1539 - C50402 * C1546 + C43783 * C2630 - C50403 * C2635 +
             C43784 * C4509 - C43781 * C4514) *
                C50336 +
            (C43782 * C1535 - C50402 * C1540 + C43783 * C2627 - C50403 * C2631 +
             C43784 * C4503 - C43781 * C4510) *
                C49168 +
            (C43782 * C1541 - C50402 * C1547 + C43783 * C2632 - C50403 * C2636 +
             C43784 * C4511 - C43781 * C4515) *
                C50067) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C1648 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C1648 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
            (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
            (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
               C50211 * C50189) *
              C50109 * C1000 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
            (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
               C50211 * C1648 +
           ((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C49175 +
            (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50336 +
            (C43782 * C449 - C50402 * C462 + C43783 * C453 - C50403 * C470 +
             C43784 * C1821 - C43781 * C1828) *
                C49168 +
            (C43782 * C463 - C50402 * C479 + C43783 * C471 - C50403 * C483 +
             C43784 * C1829 - C43781 * C1833) *
                C50067) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
            C43781 * C464 - C43784 * C450) *
               C49175 +
           (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
            C43781 * C480 - C43784 * C465) *
               C50336 +
           (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
           (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
              C50211 * C1814 +
          ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
            C43784 * C1818 - C43781 * C1822) *
               C49175 +
           (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
            C43784 * C1823 - C43781 * C1830) *
               C50336 +
           (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
           (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
              C50211 * C1815 +
          ((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
            C43781 * C5461 - C43784 * C5458) *
               C49175 +
           (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
            C43781 * C5467 - C43784 * C5462) *
               C50336 +
           (C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C49168 +
           (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50067) *
              C50211 * C1816 +
          ((C43782 * C1818 - C50402 * C1822 + C43783 * C5458 - C50403 * C5461 +
            C43784 * C7294 - C43781 * C7296) *
               C49175 +
           (C43782 * C1823 - C50402 * C1830 + C43783 * C5462 - C50403 * C5467 +
            C43784 * C7297 - C43781 * C7300) *
               C50336 +
           (C43782 * C1819 - C50402 * C1824 + C43783 * C5459 - C50403 * C5463 +
            C43784 * C7295 - C43781 * C7298) *
               C49168 +
           (C43782 * C1825 - C50402 * C1831 + C43783 * C5464 - C50403 * C5468 +
            C43784 * C7299 - C43781 * C7301) *
               C50067) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C50398 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50399 +
           ((C50402 * C464 - C43782 * C450 + C50403 * C1822 - C43783 * C1818 +
             C43781 * C5461 - C43784 * C5458) *
                C49175 +
            (C50402 * C480 - C43782 * C465 + C50403 * C1830 - C43783 * C1823 +
             C43781 * C5467 - C43784 * C5462) *
                C50336 +
            (C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C49168 +
            (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50067) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C50398 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
            (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
            (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
               C50211 * C50399 +
           ((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C49175 +
            (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50336 +
            (C43782 * C452 - C50402 * C468 + C43783 * C1820 - C50403 * C1826 +
             C43784 * C5460 - C43781 * C5465) *
                C49168 +
            (C43782 * C469 - C50402 * C482 + C43783 * C1827 - C50403 * C1832 +
             C43784 * C5466 - C43781 * C5469) *
                C50067) *
               C50211 * C2064) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C1648 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C49175 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50336 +
            (C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C49168 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50067) *
               C50211 * C1648 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C49175 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50336 +
            (C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C49168 +
            (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50067) *
               C50211 * C50189) *
              C50109 * C1000 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C49175 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50336 +
            (C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C49168 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50067) *
               C50211 * C1648 +
           ((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C49175 +
            (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50336 +
            (C43782 * C449 - C50402 * C462 + C43783 * C453 - C50403 * C470 +
             C43784 * C1821 - C43781 * C1828) *
                C49168 +
            (C43782 * C463 - C50402 * C479 + C43783 * C471 - C50403 * C483 +
             C43784 * C1829 - C43781 * C1833) *
                C50067) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50402 * C129 - C43782 * C122 + C50403 * C456 - C43783 * C446 +
             C43781 * C464 - C43784 * C450) *
                C49175 +
            (C50402 * C143 - C43782 * C130 + C50403 * C476 - C43783 * C457 +
             C43781 * C480 - C43784 * C465) *
                C50336 +
            (C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C49168 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50067) *
               C50211 * C1648 +
           ((C43782 * C446 - C50402 * C456 + C43783 * C450 - C50403 * C464 +
             C43784 * C1818 - C43781 * C1822) *
                C49175 +
            (C43782 * C457 - C50402 * C476 + C43783 * C465 - C50403 * C480 +
             C43784 * C1823 - C43781 * C1830) *
                C50336 +
            (C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C49168 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50067) *
               C50211 * C50189) *
              C276 +
          (((C43782 * C281 - C50402 * C291 + C43783 * C867 - C50403 * C872 +
             C43784 * C1187 - C43781 * C1191) *
                C49175 +
            (C43782 * C292 - C50402 * C311 + C43783 * C873 - C50403 * C882 +
             C43784 * C1192 - C43781 * C1199) *
                C50336 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C49168 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50067) *
               C50211 * C1648 +
           ((C50402 * C872 - C43782 * C867 + C50403 * C1191 - C43783 * C1187 +
             C43781 * C4504 - C43784 * C4500) *
                C49175 +
            (C50402 * C882 - C43782 * C873 + C50403 * C1199 - C43783 * C1192 +
             C43781 * C4512 - C43784 * C4505) *
                C50336 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C49168 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50067) *
               C50211 * C50189) *
              C277 +
          (((C50402 * C299 - C43782 * C285 + C50403 * C1538 - C43783 * C1534 +
             C43781 * C2629 - C43784 * C2626) *
                C49175 +
            (C50402 * C315 - C43782 * C300 + C50403 * C1546 - C43783 * C1539 +
             C43781 * C2635 - C43784 * C2630) *
                C50336 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C49168 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50067) *
               C50211 * C1648 +
           ((C43782 * C1534 - C50402 * C1538 + C43783 * C2626 - C50403 * C2629 +
             C43784 * C4502 - C43781 * C4508) *
                C49175 +
            (C43782 * C1539 - C50402 * C1546 + C43783 * C2630 - C50403 * C2635 +
             C43784 * C4509 - C43781 * C4514) *
                C50336 +
            (C43782 * C1535 - C50402 * C1540 + C43783 * C2627 - C50403 * C2631 +
             C43784 * C4503 - C43781 * C4510) *
                C49168 +
            (C43782 * C1541 - C50402 * C1547 + C43783 * C2632 - C50403 * C2636 +
             C43784 * C4511 - C43781 * C4515) *
                C50067) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C50351 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C50351 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50161) *
              C50395 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50125 * C50351 +
           (C33494 * C16927 + C33495 * C16922 +
            (C33487 - C33486 + C33489 - C33488) * C16928 +
            (C33491 - C33490 + C33493 - C33492) * C16923 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C16929 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C16924) *
               C50211 * C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C50351 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C50161) *
              C50394 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C50351 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50161) *
              C50395 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50125 * C50351 +
           ((C33494 * C19531 + C33495 * C50062) * C2263 +
            ((C33151 - C33150 + C33153 - C33152) * C19531 +
             (C33155 - C33154 + C33157 - C33156) * C50062) *
                C2264 +
            ((C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C2265) *
               C50125 * C50161) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C16927 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C16922 +
             (C32936 - C32937 + C32938 - C32939) * C16928 +
             (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
             C32977 * C16924) *
                C50211 * C50352 +
            ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C16927 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C16922 +
             (C33304 - C33305 + C33306 - C33307) * C16928 +
             (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
             C33655 * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                 C16927 +
             (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                 C16922 +
             (C33126 - C33127 + C33128 - C33129) * C16928 +
             (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
             C33495 * C16924) *
                C50211 * C50352 +
            ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                 C16927 +
             (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                 C16922 +
             (C33850 - C33851 + C33852 - C33853) * C16928 +
             (C33854 - C33855 + C33856 - C33857) * C16923 +
             (C33858 - C33859 + C33860 - C33861) * C16929 +
             (C33862 - C33863 + C33864 - C33865) * C16924) *
                C50211 * C50189) *
               C50161) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C16927 +
             (C32941 - C32940 + C32943 - C32942) * C16922 +
             (C32945 - C32944 + C32947 - C32946) * C16928 +
             (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
             C32979 * C16924) *
                C50211 * C50352 +
            ((C33305 - C33304 + C33307 - C33306) * C16927 +
             (C33309 - C33308 + C33311 - C33310) * C16922 +
             (C33313 - C33312 + C33315 - C33314) * C16928 +
             (C33317 - C33316 + C33319 - C33318) * C16923 +
             (C33646 - C33647 + C33648 - C33649) * C16929 +
             (C33650 - C33651 + C33652 - C33653) * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C33127 - C33126 + C33129 - C33128) * C16927 +
             (C33131 - C33130 + C33133 - C33132) * C16922 +
             (C33135 - C33134 + C33137 - C33136) * C16928 +
             (C33139 - C33138 + C33141 - C33140) * C16923 +
             (C33486 - C33487 + C33488 - C33489) * C16929 +
             (C33490 - C33491 + C33492 - C33493) * C16924) *
                C50211 * C50352 +
            ((C33851 - C33850 + C33853 - C33852) * C16927 +
             (C33855 - C33854 + C33857 - C33856) * C16922 +
             (C33859 - C33858 + C33861 - C33860) * C16928 +
             (C33863 - C33862 + C33865 - C33864) * C16923 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C16929 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C16924) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C19531 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50062) *
                 C2263 +
             ((C35862 - C35863 + C35864 - C35865) * C19531 +
              (C35866 - C35867 + C35868 - C35869) * C50062) *
                 C2264 +
             C35911 * C2265) *
                C50352 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C19531 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50062) *
                 C2263 +
             ((C36544 - C36545 + C36546 - C36547) * C19531 +
              (C36548 - C36549 + C36550 - C36551) * C50062) *
                 C2264 +
             ((C36552 - C36553 + C36554 - C36555) * C19531 +
              (C36556 - C36557 + C36558 - C36559) * C50062) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C35863 - C35862 + C35865 - C35864) * C19531 +
              (C35867 - C35866 + C35869 - C35868) * C50062) *
                 C2263 +
             ((C35871 - C35870 + C35873 - C35872) * C19531 +
              (C35875 - C35874 + C35877 - C35876) * C50062) *
                 C2264 +
             ((C35878 - C35879 + C35880 - C35881) * C19531 +
              (C35882 - C35883 + C35884 - C35885) * C50062) *
                 C2265) *
                C50352 +
            (((C36545 - C36544 + C36547 - C36546) * C19531 +
              (C36549 - C36548 + C36551 - C36550) * C50062) *
                 C2263 +
             ((C36553 - C36552 + C36555 - C36554) * C19531 +
              (C36557 - C36556 + C36559 - C36558) * C50062) *
                 C2264 +
             ((C32931 * C3147 - C32933 * C3144 + C50286 * C3589 -
               C32934 * C3587) *
                  C19531 +
              (C32931 * C3153 - C32933 * C3148 + C50286 * C3593 -
               C32934 * C3590) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C279 +
          (((((C32937 - C32936 + C32939 - C32938) * C19531 +
              (C32941 - C32940 + C32943 - C32942) * C50062) *
                 C2263 +
             ((C33126 - C33127 + C33128 - C33129) * C19531 +
              (C33130 - C33131 + C33132 - C33133) * C50062) *
                 C2264 +
             C35910 * C2265) *
                C50352 +
            (((C33305 - C33304 + C33307 - C33306) * C19531 +
              (C33309 - C33308 + C33311 - C33310) * C50062) *
                 C2263 +
             ((C33850 - C33851 + C33852 - C33853) * C19531 +
              (C33854 - C33855 + C33856 - C33857) * C50062) *
                 C2264 +
             ((C36560 - C36561 + C36562 - C36563) * C19531 +
              (C36564 - C36565 + C36566 - C36567) * C50062) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C33127 - C33126 + C33129 - C33128) * C19531 +
              (C33131 - C33130 + C33133 - C33132) * C50062) *
                 C2263 +
             ((C33142 - C33143 + C33144 - C33145) * C19531 +
              (C33146 - C33147 + C33148 - C33149) * C50062) *
                 C2264 +
             ((C35890 - C35891 + C35892 - C35893) * C19531 +
              (C35894 - C35895 + C35896 - C35897) * C50062) *
                 C2265) *
                C50352 +
            (((C33851 - C33850 + C33853 - C33852) * C19531 +
              (C33855 - C33854 + C33857 - C33856) * C50062) *
                 C2263 +
             ((C36561 - C36560 + C36563 - C36562) * C19531 +
              (C36565 - C36564 + C36567 - C36566) * C50062) *
                 C2264 +
             ((C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C276 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 +
            (C33134 - C33135 + C33136 - C33137) * C16929 +
            (C33138 - C33139 + C33140 - C33141) * C16924) *
               C50211 * C50125 * C277 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50125 * C278) *
              C279 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C276 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C32931 * C297 - C32933 * C284 + C50286 * C878 - C32934 * C870) *
                C16929 +
            (C32931 * C314 - C32933 * C298 + C50286 * C885 - C32934 * C879) *
                C16924) *
               C50211 * C50125 * C277 +
           ((C33143 - C33142 + C33145 - C33144) * C16927 +
            (C33147 - C33146 + C33149 - C33148) * C16922 +
            (C33151 - C33150 + C33153 - C33152) * C16928 +
            (C33155 - C33154 + C33157 - C33156) * C16923 +
            (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C16929 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C16924) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C50125 * C50109 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C16927 +
           (C32941 - C32940 + C32943 - C32942) * C16922 +
           (C32945 - C32944 + C32947 - C32946) * C16928 +
           (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
           C32979 * C16924) *
              C50211 * C50125 * C50109 * C114 +
          (C32976 * C16927 + C32977 * C16922 +
           (C32953 - C32952 + C32955 - C32954) * C16928 +
           (C32957 - C32956 + C32959 - C32958) * C16923 +
           (C32960 - C32961 + C32962 - C32963) * C16929 +
           (C32964 - C32965 + C32966 - C32967) * C16924) *
              C50211 * C50125 * C50109 * C115 +
          (C32978 * C16927 + C32979 * C16922 +
           (C32961 - C32960 + C32963 - C32962) * C16928 +
           (C32965 - C32964 + C32967 - C32966) * C16923 +
           (C32933 * C127 - C32931 * C139 + C32934 * C725 - C50286 * C726) *
               C16929 +
           (C32933 * C140 - C32931 * C148 + C32934 * C727 - C50286 * C728) *
               C16924) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C443 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 +
            (C33312 - C33313 + C33314 - C33315) * C16929 +
            (C33316 - C33317 + C33318 - C33319) * C16924) *
               C50211 * C444 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C445) *
              C50109 * C279 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C443 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C32931 * C462 - C32933 * C449 + C50286 * C470 - C32934 * C453) *
                C16929 +
            (C32931 * C479 - C32933 * C463 + C50286 * C483 - C32934 * C471) *
                C16924) *
               C50211 * C444 +
           ((C33321 - C33320 + C33323 - C33322) * C16927 +
            (C33325 - C33324 + C33327 - C33326) * C16922 +
            (C33329 - C33328 + C33331 - C33330) * C16928 +
            (C33333 - C33332 + C33335 - C33334) * C16923 +
            (C32933 * C453 - C32931 * C470 + C32934 * C1821 - C50286 * C1828) *
                C16929 +
            (C32933 * C471 - C32931 * C483 + C32934 * C1829 - C50286 * C1833) *
                C16924) *
               C50211 * C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C32931 * C291 - C32933 * C281 + C50286 * C872 - C32934 * C867) *
                C19531 +
            (C32931 * C311 - C32933 * C292 + C50286 * C882 - C32934 * C873) *
                C50062) *
               C2264 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C19531 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C50062) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C19531 +
            (C32941 - C32940 + C32943 - C32942) * C50062) *
               C2263 +
           ((C33126 - C33127 + C33128 - C33129) * C19531 +
            (C33130 - C33131 + C33132 - C33133) * C50062) *
               C2264 +
           ((C33143 - C33142 + C33145 - C33144) * C19531 +
            (C33147 - C33146 + C33149 - C33148) * C50062) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C32976 * C19531 + C32977 * C50062) * C2263 +
           ((C33135 - C33134 + C33137 - C33136) * C19531 +
            (C33139 - C33138 + C33141 - C33140) * C50062) *
               C2264 +
           ((C33150 - C33151 + C33152 - C33153) * C19531 +
            (C33154 - C33155 + C33156 - C33157) * C50062) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C32978 * C19531 + C32979 * C50062) * C2263 +
           ((C33487 - C33486 + C33489 - C33488) * C19531 +
            (C33491 - C33490 + C33493 - C33492) * C50062) *
               C2264 +
           ((C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C19531 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C50062) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C276 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C32931 * C2417 - C32933 * C2414 + C50286 * C4091 -
              C32934 * C4089) *
                 C19531 +
             (C32931 * C2423 - C32933 * C2418 + C50286 * C4095 -
              C32934 * C4092) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C276 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35910 * C2263 +
            ((C35891 - C35890 + C35893 - C35892) * C19531 +
             (C35895 - C35894 + C35897 - C35896) * C50062) *
                C2264 +
            ((C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C443 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C32933 * C867 - C32931 * C872 + C32934 * C1187 - C50286 * C1191) *
                 C19531 +
             (C32933 * C873 - C32931 * C882 + C32934 * C1192 - C50286 * C1199) *
                 C50062) *
                C2264 +
            ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
              C50286 * C2629) *
                 C19531 +
             (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
              C50286 * C2635) *
                 C50062) *
                C2265) *
               C444 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C32931 * C1191 - C32933 * C1187 + C50286 * C4504 -
              C32934 * C4500) *
                 C19531 +
             (C32931 * C1199 - C32933 * C1192 + C50286 * C4512 -
              C32934 * C4505) *
                 C50062) *
                C2264 +
            ((C32931 * C2629 - C32933 * C2626 + C50286 * C4508 -
              C32934 * C4502) *
                 C19531 +
             (C32931 * C2635 - C32933 * C2630 + C50286 * C4514 -
              C32934 * C4509) *
                 C50062) *
                C2265) *
               C445) *
              C50109 * C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C443 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C32931 * C1540 - C32933 * C1535 + C50286 * C2631 -
              C32934 * C2627) *
                 C19531 +
             (C32931 * C1547 - C32933 * C1541 + C50286 * C2636 -
              C32934 * C2632) *
                 C50062) *
                C2265) *
               C444 +
           (((C33321 - C33320 + C33323 - C33322) * C19531 +
             (C33325 - C33324 + C33327 - C33326) * C50062) *
                C2263 +
            ((C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
              C50286 * C4506) *
                 C19531 +
             (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
              C50286 * C4513) *
                 C50062) *
                C2264 +
            ((C32933 * C2627 - C32931 * C2631 + C32934 * C4503 -
              C50286 * C4510) *
                 C19531 +
             (C32933 * C2632 - C32931 * C2636 + C32934 * C4511 -
              C50286 * C4515) *
                 C50062) *
                C2265) *
               C445) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50352 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50352 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50189) *
              C50109 * C50395 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50352 +
           (C33654 * C16927 + C33655 * C16922 +
            (C33647 - C33646 + C33649 - C33648) * C16928 +
            (C33651 - C33650 + C33653 - C33652) * C16923 +
            (C32933 * C454 - C32931 * C472 + C32934 * C455 - C50286 * C474) *
                C16929 +
            (C32933 * C473 - C32931 * C484 + C32934 * C475 - C50286 * C485) *
                C16924) *
               C50211 * C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50352 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C32933 * C867 - C32931 * C872 + C32934 * C1187 - C50286 * C1191) *
                 C19531 +
             (C32933 * C873 - C32931 * C882 + C32934 * C1192 - C50286 * C1199) *
                 C50062) *
                C2264 +
            ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
              C50286 * C2629) *
                 C19531 +
             (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
              C50286 * C2635) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C50394 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50352 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C32931 * C1540 - C32933 * C1535 + C50286 * C2631 -
              C32934 * C2627) *
                 C19531 +
             (C32931 * C1547 - C32933 * C1541 + C50286 * C2636 -
              C32934 * C2632) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C50395 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50352 +
           ((C33654 * C19531 + C33655 * C50062) * C2263 +
            ((C33859 - C33858 + C33861 - C33860) * C19531 +
             (C33863 - C33862 + C33865 - C33864) * C50062) *
                C2264 +
            ((C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C50125 * C50109 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C16927 +
           (C32941 - C32940 + C32943 - C32942) * C16922 +
           (C32945 - C32944 + C32947 - C32946) * C16928 +
           (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
           C32979 * C16924) *
              C50211 * C50125 * C50109 * C114 +
          (C32976 * C16927 + C32977 * C16922 +
           (C32953 - C32952 + C32955 - C32954) * C16928 +
           (C32957 - C32956 + C32959 - C32958) * C16923 +
           (C32960 - C32961 + C32962 - C32963) * C16929 +
           (C32964 - C32965 + C32966 - C32967) * C16924) *
              C50211 * C50125 * C50109 * C115 +
          (C32978 * C16927 + C32979 * C16922 +
           (C32961 - C32960 + C32963 - C32962) * C16928 +
           (C32965 - C32964 + C32967 - C32966) * C16923 +
           (C32933 * C127 - C32931 * C139 + C32934 * C725 - C50286 * C726) *
               C16929 +
           (C32933 * C140 - C32931 * C148 + C32934 * C727 - C50286 * C728) *
               C16924) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C276 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 +
            (C33134 - C33135 + C33136 - C33137) * C16929 +
            (C33138 - C33139 + C33140 - C33141) * C16924) *
               C50211 * C50125 * C277 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50125 * C278) *
              C279 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C276 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C32931 * C297 - C32933 * C284 + C50286 * C878 - C32934 * C870) *
                C16929 +
            (C32931 * C314 - C32933 * C298 + C50286 * C885 - C32934 * C879) *
                C16924) *
               C50211 * C50125 * C277 +
           ((C33143 - C33142 + C33145 - C33144) * C16927 +
            (C33147 - C33146 + C33149 - C33148) * C16922 +
            (C33151 - C33150 + C33153 - C33152) * C16928 +
            (C33155 - C33154 + C33157 - C33156) * C16923 +
            (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C16929 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C16924) *
               C50211 * C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C32931 * C291 - C32933 * C281 + C50286 * C872 - C32934 * C867) *
                C19531 +
            (C32931 * C311 - C32933 * C292 + C50286 * C882 - C32934 * C873) *
                C50062) *
               C2264 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C19531 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C50062) *
               C2265) *
              C50125 * C50109 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C19531 +
            (C32941 - C32940 + C32943 - C32942) * C50062) *
               C2263 +
           ((C33126 - C33127 + C33128 - C33129) * C19531 +
            (C33130 - C33131 + C33132 - C33133) * C50062) *
               C2264 +
           ((C33143 - C33142 + C33145 - C33144) * C19531 +
            (C33147 - C33146 + C33149 - C33148) * C50062) *
               C2265) *
              C50125 * C50109 * C114 +
          ((C32976 * C19531 + C32977 * C50062) * C2263 +
           ((C33135 - C33134 + C33137 - C33136) * C19531 +
            (C33139 - C33138 + C33141 - C33140) * C50062) *
               C2264 +
           ((C33150 - C33151 + C33152 - C33153) * C19531 +
            (C33154 - C33155 + C33156 - C33157) * C50062) *
               C2265) *
              C50125 * C50109 * C115 +
          ((C32978 * C19531 + C32979 * C50062) * C2263 +
           ((C33487 - C33486 + C33489 - C33488) * C19531 +
            (C33491 - C33490 + C33493 - C33492) * C50062) *
               C2264 +
           ((C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C19531 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C50062) *
               C2265) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C276 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C32931 * C2417 - C32933 * C2414 + C50286 * C4091 -
              C32934 * C4089) *
                 C19531 +
             (C32931 * C2423 - C32933 * C2418 + C50286 * C4095 -
              C32934 * C4092) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C279 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C276 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C277 +
           (C35910 * C2263 +
            ((C35891 - C35890 + C35893 - C35892) * C19531 +
             (C35895 - C35894 + C35897 - C35896) * C50062) *
                C2264 +
            ((C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C2265) *
               C50125 * C278) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C50396 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50397 +
           ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50125 * C1303) *
              C50343 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C50396 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50397 +
           ((C33143 - C33142 + C33145 - C33144) * C16927 +
            (C33147 - C33146 + C33149 - C33148) * C16922 +
            (C33151 - C33150 + C33153 - C33152) * C16928 +
            (C33155 - C33154 + C33157 - C33156) * C16923 +
            (C32933 * C288 - C32931 * C305 + C32934 * C1537 - C50286 * C1544) *
                C16929 +
            (C32933 * C306 - C32931 * C318 + C32934 * C1545 - C50286 * C1549) *
                C16924) *
               C50211 * C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C50396 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C50125 * C50397 +
           (C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C50125 * C1303) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C50396 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50397 +
           (C35910 * C2263 +
            ((C35891 - C35890 + C35893 - C35892) * C19531 +
             (C35895 - C35894 + C35897 - C35896) * C50062) *
                C2264 +
            ((C32933 * C2415 - C32931 * C2419 + C32934 * C4090 -
              C50286 * C4093) *
                 C19531 +
             (C32933 * C2420 - C32931 * C2424 + C32934 * C4094 -
              C50286 * C4096) *
                 C50062) *
                C2265) *
               C50125 * C1303) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50352 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50396 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50352 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50189) *
              C50397 +
          (((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C50352 +
           ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
             C50286 * C2629) *
                C16927 +
            (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
             C50286 * C2635) *
                C16922 +
            (C32933 * C1535 - C32931 * C1540 + C32934 * C2627 -
             C50286 * C2631) *
                C16928 +
            (C32933 * C1541 - C32931 * C1547 + C32934 * C2632 -
             C50286 * C2636) *
                C16923 +
            (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
             C50286 * C2633) *
                C16929 +
            (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
             C50286 * C2637) *
                C16924) *
               C50211 * C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50352 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C50396 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C50352 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50189) *
              C50397 +
          ((C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C50352 +
           (C37493 * C2263 +
            ((C37482 - C37481 + C37484 - C37483) * C19531 +
             (C37486 - C37485 + C37488 - C37487) * C50062) *
                C2264 +
            ((C32933 * C4089 - C32931 * C4091 + C32934 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C32933 * C4092 - C32931 * C4095 + C32934 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C2265) *
               C50189) *
              C1303) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C50125 * C1068 +
          ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
               C16927 +
           (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
               C16922 +
           (C33126 - C33127 + C33128 - C33129) * C16928 +
           (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
           C33495 * C16924) *
              C50211 * C50125 * C1069 +
          ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
               C16927 +
           (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
               C16922 +
           (C33142 - C33143 + C33144 - C33145) * C16928 +
           (C33146 - C33147 + C33148 - C33149) * C16923 +
           (C33150 - C33151 + C33152 - C33153) * C16929 +
           (C33154 - C33155 + C33156 - C33157) * C16924) *
              C50211 * C50125 * C1070 +
          ((C32933 * C1073 - C32931 * C1077 + C32934 * C3144 - C50286 * C3147) *
               C16927 +
           (C32933 * C1078 - C32931 * C1085 + C32934 * C3148 - C50286 * C3153) *
               C16922 +
           (C32933 * C1074 - C32931 * C1079 + C32934 * C3145 - C50286 * C3149) *
               C16928 +
           (C32933 * C1080 - C32931 * C1086 + C32934 * C3150 - C50286 * C3154) *
               C16923 +
           (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 - C50286 * C3151) *
               C16929 +
           (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 - C50286 * C3155) *
               C16924) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C997 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C997 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50125 * C997 +
           (C33494 * C16927 + C33495 * C16922 +
            (C33487 - C33486 + C33489 - C33488) * C16928 +
            (C33491 - C33490 + C33493 - C33492) * C16923 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C16929 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C16924) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C443 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C444 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C445) *
              C997 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C443 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C444 +
           ((C32933 * C1187 - C32931 * C1191 + C32934 * C4500 -
             C50286 * C4504) *
                C16927 +
            (C32933 * C1192 - C32931 * C1199 + C32934 * C4505 -
             C50286 * C4512) *
                C16922 +
            (C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
             C50286 * C4506) *
                C16928 +
            (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
             C50286 * C4513) *
                C16923 +
            (C32933 * C1189 - C32931 * C1195 + C32934 * C6004 -
             C50286 * C6005) *
                C16929 +
            (C32933 * C1196 - C32931 * C1201 + C32934 * C6006 -
             C50286 * C6007) *
                C16924) *
               C50211 * C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C997 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C997 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50125 * C997 +
           ((C33494 * C19531 + C33495 * C50062) * C2263 +
            ((C33151 - C33150 + C33153 - C33152) * C19531 +
             (C33155 - C33154 + C33157 - C33156) * C50062) *
                C2264 +
            ((C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C35862 - C35863 + C35864 - C35865) * C19531 +
            (C35866 - C35867 + C35868 - C35869) * C50062) *
               C2264 +
           C35911 * C2265) *
              C50125 * C1068 +
          (((C35863 - C35862 + C35865 - C35864) * C19531 +
            (C35867 - C35866 + C35869 - C35868) * C50062) *
               C2263 +
           ((C35871 - C35870 + C35873 - C35872) * C19531 +
            (C35875 - C35874 + C35877 - C35876) * C50062) *
               C2264 +
           C36828 * C2265) *
              C50125 * C1069 +
          (C35911 * C2263 +
           ((C35879 - C35878 + C35881 - C35880) * C19531 +
            (C35883 - C35882 + C35885 - C35884) * C50062) *
               C2264 +
           ((C36816 - C36817 + C36818 - C36819) * C19531 +
            (C36820 - C36821 + C36822 - C36823) * C50062) *
               C2265) *
              C50125 * C1070 +
          (C36828 * C2263 +
           ((C36817 - C36816 + C36819 - C36818) * C19531 +
            (C36821 - C36820 + C36823 - C36822) * C50062) *
               C2264 +
           ((C32933 * C3420 - C32931 * C3422 + C32934 * C20680 -
             C50286 * C20681) *
                C19531 +
            (C32933 * C3423 - C32931 * C3426 + C32934 * C20682 -
             C50286 * C20683) *
                C50062) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C443 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            ((C36552 - C36553 + C36554 - C36555) * C19531 +
             (C36556 - C36557 + C36558 - C36559) * C50062) *
                C2265) *
               C444 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C36975 - C36976 + C36977 - C36978) * C19531 +
             (C36979 - C36980 + C36981 - C36982) * C50062) *
                C2264 +
            ((C36983 - C36984 + C36985 - C36986) * C19531 +
             (C36987 - C36988 + C36989 - C36990) * C50062) *
                C2265) *
               C445) *
              C997 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C443 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C32931 * C3147 - C32933 * C3144 + C50286 * C3589 -
              C32934 * C3587) *
                 C19531 +
             (C32931 * C3153 - C32933 * C3148 + C50286 * C3593 -
              C32934 * C3590) *
                 C50062) *
                C2265) *
               C444 +
           (((C36976 - C36975 + C36978 - C36977) * C19531 +
             (C36980 - C36979 + C36982 - C36981) * C50062) *
                C2263 +
            ((C36984 - C36983 + C36986 - C36985) * C19531 +
             (C36988 - C36987 + C36990 - C36989) * C50062) *
                C2264 +
            ((C32933 * C3587 - C32931 * C3589 + C32934 * C20958 -
              C50286 * C20959) *
                 C19531 +
             (C32933 * C3590 - C32931 * C3593 + C32934 * C20960 -
              C50286 * C20961) *
                 C50062) *
                C2265) *
               C445) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C16927 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C16922 +
             (C32936 - C32937 + C32938 - C32939) * C16928 +
             (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
             C32977 * C16924) *
                C50211 * C50352 +
            ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C16927 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C16922 +
             (C33304 - C33305 + C33306 - C33307) * C16928 +
             (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
             C33655 * C16924) *
                C50211 * C50189) *
               C997 +
           (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                 C16927 +
             (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                 C16922 +
             (C33126 - C33127 + C33128 - C33129) * C16928 +
             (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
             C33495 * C16924) *
                C50211 * C50352 +
            ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                 C16927 +
             (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                 C16922 +
             (C33850 - C33851 + C33852 - C33853) * C16928 +
             (C33854 - C33855 + C33856 - C33857) * C16923 +
             (C33858 - C33859 + C33860 - C33861) * C16929 +
             (C33862 - C33863 + C33864 - C33865) * C16924) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C16927 +
             (C32941 - C32940 + C32943 - C32942) * C16922 +
             (C32945 - C32944 + C32947 - C32946) * C16928 +
             (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
             C32979 * C16924) *
                C50211 * C50352 +
            ((C33305 - C33304 + C33307 - C33306) * C16927 +
             (C33309 - C33308 + C33311 - C33310) * C16922 +
             (C33313 - C33312 + C33315 - C33314) * C16928 +
             (C33317 - C33316 + C33319 - C33318) * C16923 +
             (C33646 - C33647 + C33648 - C33649) * C16929 +
             (C33650 - C33651 + C33652 - C33653) * C16924) *
                C50211 * C50189) *
               C997 +
           (((C33127 - C33126 + C33129 - C33128) * C16927 +
             (C33131 - C33130 + C33133 - C33132) * C16922 +
             (C33135 - C33134 + C33137 - C33136) * C16928 +
             (C33139 - C33138 + C33141 - C33140) * C16923 +
             (C33486 - C33487 + C33488 - C33489) * C16929 +
             (C33490 - C33491 + C33492 - C33493) * C16924) *
                C50211 * C50352 +
            ((C33851 - C33850 + C33853 - C33852) * C16927 +
             (C33855 - C33854 + C33857 - C33856) * C16922 +
             (C33859 - C33858 + C33861 - C33860) * C16928 +
             (C33863 - C33862 + C33865 - C33864) * C16923 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C16929 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C16924) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C19531 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50062) *
                 C2263 +
             ((C35862 - C35863 + C35864 - C35865) * C19531 +
              (C35866 - C35867 + C35868 - C35869) * C50062) *
                 C2264 +
             C35911 * C2265) *
                C50352 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C19531 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50062) *
                 C2263 +
             ((C36544 - C36545 + C36546 - C36547) * C19531 +
              (C36548 - C36549 + C36550 - C36551) * C50062) *
                 C2264 +
             ((C36552 - C36553 + C36554 - C36555) * C19531 +
              (C36556 - C36557 + C36558 - C36559) * C50062) *
                 C2265) *
                C50189) *
               C997 +
           ((((C35863 - C35862 + C35865 - C35864) * C19531 +
              (C35867 - C35866 + C35869 - C35868) * C50062) *
                 C2263 +
             ((C35871 - C35870 + C35873 - C35872) * C19531 +
              (C35875 - C35874 + C35877 - C35876) * C50062) *
                 C2264 +
             C36828 * C2265) *
                C50352 +
            (((C36545 - C36544 + C36547 - C36546) * C19531 +
              (C36549 - C36548 + C36551 - C36550) * C50062) *
                 C2263 +
             ((C36553 - C36552 + C36555 - C36554) * C19531 +
              (C36557 - C36556 + C36559 - C36558) * C50062) *
                 C2264 +
             ((C32931 * C3147 - C32933 * C3144 + C50286 * C3589 -
               C32934 * C3587) *
                  C19531 +
              (C32931 * C3153 - C32933 * C3148 + C50286 * C3593 -
               C32934 * C3590) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C32937 - C32936 + C32939 - C32938) * C19531 +
              (C32941 - C32940 + C32943 - C32942) * C50062) *
                 C2263 +
             ((C33126 - C33127 + C33128 - C33129) * C19531 +
              (C33130 - C33131 + C33132 - C33133) * C50062) *
                 C2264 +
             C35910 * C2265) *
                C50352 +
            (((C33305 - C33304 + C33307 - C33306) * C19531 +
              (C33309 - C33308 + C33311 - C33310) * C50062) *
                 C2263 +
             ((C33850 - C33851 + C33852 - C33853) * C19531 +
              (C33854 - C33855 + C33856 - C33857) * C50062) *
                 C2264 +
             ((C36560 - C36561 + C36562 - C36563) * C19531 +
              (C36564 - C36565 + C36566 - C36567) * C50062) *
                 C2265) *
                C50189) *
               C997 +
           ((((C33127 - C33126 + C33129 - C33128) * C19531 +
              (C33131 - C33130 + C33133 - C33132) * C50062) *
                 C2263 +
             ((C33142 - C33143 + C33144 - C33145) * C19531 +
              (C33146 - C33147 + C33148 - C33149) * C50062) *
                 C2264 +
             ((C35890 - C35891 + C35892 - C35893) * C19531 +
              (C35894 - C35895 + C35896 - C35897) * C50062) *
                 C2265) *
                C50352 +
            (((C33851 - C33850 + C33853 - C33852) * C19531 +
              (C33855 - C33854 + C33857 - C33856) * C50062) *
                 C2263 +
             ((C36561 - C36560 + C36563 - C36562) * C19531 +
              (C36565 - C36564 + C36567 - C36566) * C50062) *
                 C2264 +
             ((C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50125 * C997 +
           ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50125 * C50161) *
              C999 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50125 * C997 +
           ((C33127 - C33126 + C33129 - C33128) * C16927 +
            (C33131 - C33130 + C33133 - C33132) * C16922 +
            (C33135 - C33134 + C33137 - C33136) * C16928 +
            (C33139 - C33138 + C33141 - C33140) * C16923 +
            (C33486 - C33487 + C33488 - C33489) * C16929 +
            (C33490 - C33491 + C33492 - C33493) * C16924) *
               C50211 * C50125 * C50161) *
              C1000 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C50125 * C997 +
           (C33494 * C16927 + C33495 * C16922 +
            (C33487 - C33486 + C33489 - C33488) * C16928 +
            (C33491 - C33490 + C33493 - C33492) * C16923 +
            (C32933 * C289 - C32931 * C307 + C32934 * C871 - C50286 * C880) *
                C16929 +
            (C32933 * C308 - C32931 * C319 + C32934 * C881 - C50286 * C886) *
                C16924) *
               C50211 * C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C50125 * C1068 +
          ((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
               C16927 +
           (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
               C16922 +
           (C33126 - C33127 + C33128 - C33129) * C16928 +
           (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
           C33495 * C16924) *
              C50211 * C50125 * C1069 +
          ((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
               C16927 +
           (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
               C16922 +
           (C33142 - C33143 + C33144 - C33145) * C16928 +
           (C33146 - C33147 + C33148 - C33149) * C16923 +
           (C33150 - C33151 + C33152 - C33153) * C16929 +
           (C33154 - C33155 + C33156 - C33157) * C16924) *
              C50211 * C50125 * C1070 +
          ((C32933 * C1073 - C32931 * C1077 + C32934 * C3144 - C50286 * C3147) *
               C16927 +
           (C32933 * C1078 - C32931 * C1085 + C32934 * C3148 - C50286 * C3153) *
               C16922 +
           (C32933 * C1074 - C32931 * C1079 + C32934 * C3145 - C50286 * C3149) *
               C16928 +
           (C32933 * C1080 - C32931 * C1086 + C32934 * C3150 - C50286 * C3154) *
               C16923 +
           (C32933 * C1075 - C32931 * C1081 + C32934 * C3146 - C50286 * C3151) *
               C16929 +
           (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 - C50286 * C3155) *
               C16924) *
              C50211 * C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50125 * C997 +
           (((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            ((C35878 - C35879 + C35880 - C35881) * C19531 +
             (C35882 - C35883 + C35884 - C35885) * C50062) *
                C2265) *
               C50125 * C50161) *
              C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50125 * C997 +
           (((C33127 - C33126 + C33129 - C33128) * C19531 +
             (C33131 - C33130 + C33133 - C33132) * C50062) *
                C2263 +
            ((C33142 - C33143 + C33144 - C33145) * C19531 +
             (C33146 - C33147 + C33148 - C33149) * C50062) *
                C2264 +
            ((C35890 - C35891 + C35892 - C35893) * C19531 +
             (C35894 - C35895 + C35896 - C35897) * C50062) *
                C2265) *
               C50125 * C50161) *
              C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C50125 * C997 +
           ((C33494 * C19531 + C33495 * C50062) * C2263 +
            ((C33151 - C33150 + C33153 - C33152) * C19531 +
             (C33155 - C33154 + C33157 - C33156) * C50062) *
                C2264 +
            ((C32933 * C1075 - C32931 * C1081 + C32934 * C3146 -
              C50286 * C3151) *
                 C19531 +
             (C32933 * C1082 - C32931 * C1087 + C32934 * C3152 -
              C50286 * C3155) *
                 C50062) *
                C2265) *
               C50125 * C50161) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C35862 - C35863 + C35864 - C35865) * C19531 +
            (C35866 - C35867 + C35868 - C35869) * C50062) *
               C2264 +
           C35911 * C2265) *
              C50125 * C1068 +
          (((C35863 - C35862 + C35865 - C35864) * C19531 +
            (C35867 - C35866 + C35869 - C35868) * C50062) *
               C2263 +
           ((C35871 - C35870 + C35873 - C35872) * C19531 +
            (C35875 - C35874 + C35877 - C35876) * C50062) *
               C2264 +
           C36828 * C2265) *
              C50125 * C1069 +
          (C35911 * C2263 +
           ((C35879 - C35878 + C35881 - C35880) * C19531 +
            (C35883 - C35882 + C35885 - C35884) * C50062) *
               C2264 +
           ((C36816 - C36817 + C36818 - C36819) * C19531 +
            (C36820 - C36821 + C36822 - C36823) * C50062) *
               C2265) *
              C50125 * C1070 +
          (C36828 * C2263 +
           ((C36817 - C36816 + C36819 - C36818) * C19531 +
            (C36821 - C36820 + C36823 - C36822) * C50062) *
               C2264 +
           ((C32933 * C3420 - C32931 * C3422 + C32934 * C20680 -
             C50286 * C20681) *
                C19531 +
            (C32933 * C3423 - C32931 * C3426 + C32934 * C20682 -
             C50286 * C20683) *
                C50062) *
               C2265) *
              C50125 * C1071) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C16927 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C16922 +
             (C32936 - C32937 + C32938 - C32939) * C16928 +
             (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
             C32977 * C16924) *
                C50211 * C1648 +
            ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C16927 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C16922 +
             (C33304 - C33305 + C33306 - C33307) * C16928 +
             (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
             C33655 * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                 C16927 +
             (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                 C16922 +
             (C33126 - C33127 + C33128 - C33129) * C16928 +
             (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
             C33495 * C16924) *
                C50211 * C1648 +
            ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                 C16927 +
             (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                 C16922 +
             (C33850 - C33851 + C33852 - C33853) * C16928 +
             (C33854 - C33855 + C33856 - C33857) * C16923 +
             (C33858 - C33859 + C33860 - C33861) * C16929 +
             (C33862 - C33863 + C33864 - C33865) * C16924) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C16927 +
             (C32941 - C32940 + C32943 - C32942) * C16922 +
             (C32945 - C32944 + C32947 - C32946) * C16928 +
             (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
             C32979 * C16924) *
                C50211 * C1648 +
            ((C33305 - C33304 + C33307 - C33306) * C16927 +
             (C33309 - C33308 + C33311 - C33310) * C16922 +
             (C33313 - C33312 + C33315 - C33314) * C16928 +
             (C33317 - C33316 + C33319 - C33318) * C16923 +
             (C33646 - C33647 + C33648 - C33649) * C16929 +
             (C33650 - C33651 + C33652 - C33653) * C16924) *
                C50211 * C50189) *
               C50351 +
           (((C33127 - C33126 + C33129 - C33128) * C16927 +
             (C33131 - C33130 + C33133 - C33132) * C16922 +
             (C33135 - C33134 + C33137 - C33136) * C16928 +
             (C33139 - C33138 + C33141 - C33140) * C16923 +
             (C33486 - C33487 + C33488 - C33489) * C16929 +
             (C33490 - C33491 + C33492 - C33493) * C16924) *
                C50211 * C1648 +
            ((C33851 - C33850 + C33853 - C33852) * C16927 +
             (C33855 - C33854 + C33857 - C33856) * C16922 +
             (C33859 - C33858 + C33861 - C33860) * C16928 +
             (C33863 - C33862 + C33865 - C33864) * C16923 +
             (C32933 * C870 - C32931 * C878 + C32934 * C1190 - C50286 * C1197) *
                 C16929 +
             (C32933 * C879 - C32931 * C885 + C32934 * C1198 - C50286 * C1202) *
                 C16924) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                  C19531 +
              (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                  C50062) *
                 C2263 +
             ((C35862 - C35863 + C35864 - C35865) * C19531 +
              (C35866 - C35867 + C35868 - C35869) * C50062) *
                 C2264 +
             C35911 * C2265) *
                C1648 +
            (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                  C19531 +
              (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                  C50062) *
                 C2263 +
             ((C36544 - C36545 + C36546 - C36547) * C19531 +
              (C36548 - C36549 + C36550 - C36551) * C50062) *
                 C2264 +
             C37493 * C2265) *
                C50189) *
               C50351 +
           ((((C35863 - C35862 + C35865 - C35864) * C19531 +
              (C35867 - C35866 + C35869 - C35868) * C50062) *
                 C2263 +
             ((C35871 - C35870 + C35873 - C35872) * C19531 +
              (C35875 - C35874 + C35877 - C35876) * C50062) *
                 C2264 +
             C36828 * C2265) *
                C1648 +
            (((C36545 - C36544 + C36547 - C36546) * C19531 +
              (C36549 - C36548 + C36551 - C36550) * C50062) *
                 C2263 +
             ((C36553 - C36552 + C36555 - C36554) * C19531 +
              (C36557 - C36556 + C36559 - C36558) * C50062) *
                 C2264 +
             ((C37481 - C37482 + C37483 - C37484) * C19531 +
              (C37485 - C37486 + C37487 - C37488) * C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50343 +
          (((((C32937 - C32936 + C32939 - C32938) * C19531 +
              (C32941 - C32940 + C32943 - C32942) * C50062) *
                 C2263 +
             ((C33126 - C33127 + C33128 - C33129) * C19531 +
              (C33130 - C33131 + C33132 - C33133) * C50062) *
                 C2264 +
             C35910 * C2265) *
                C1648 +
            (((C33305 - C33304 + C33307 - C33306) * C19531 +
              (C33309 - C33308 + C33311 - C33310) * C50062) *
                 C2263 +
             ((C33850 - C33851 + C33852 - C33853) * C19531 +
              (C33854 - C33855 + C33856 - C33857) * C50062) *
                 C2264 +
             ((C36560 - C36561 + C36562 - C36563) * C19531 +
              (C36564 - C36565 + C36566 - C36567) * C50062) *
                 C2265) *
                C50189) *
               C50351 +
           ((((C33127 - C33126 + C33129 - C33128) * C19531 +
              (C33131 - C33130 + C33133 - C33132) * C50062) *
                 C2263 +
             ((C33142 - C33143 + C33144 - C33145) * C19531 +
              (C33146 - C33147 + C33148 - C33149) * C50062) *
                 C2264 +
             ((C35890 - C35891 + C35892 - C35893) * C19531 +
              (C35894 - C35895 + C35896 - C35897) * C50062) *
                 C2265) *
                C1648 +
            (((C33851 - C33850 + C33853 - C33852) * C19531 +
              (C33855 - C33854 + C33857 - C33856) * C50062) *
                 C2263 +
             ((C36561 - C36560 + C36563 - C36562) * C19531 +
              (C36565 - C36564 + C36567 - C36566) * C50062) *
                 C2264 +
             ((C32933 * C3145 - C32931 * C3149 + C32934 * C3588 -
               C50286 * C3591) *
                  C19531 +
              (C32933 * C3150 - C32931 * C3154 + C32934 * C3592 -
               C50286 * C3594) *
                  C50062) *
                 C2265) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50398 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50399 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C2064) *
              C50351 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C50398 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50399 +
           ((C32933 * C1187 - C32931 * C1191 + C32934 * C4500 -
             C50286 * C4504) *
                C16927 +
            (C32933 * C1192 - C32931 * C1199 + C32934 * C4505 -
             C50286 * C4512) *
                C16922 +
            (C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
             C50286 * C4506) *
                C16928 +
            (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
             C50286 * C4513) *
                C16923 +
            (C32933 * C1189 - C32931 * C1195 + C32934 * C6004 -
             C50286 * C6005) *
                C16929 +
            (C32933 * C1196 - C32931 * C1201 + C32934 * C6006 -
             C50286 * C6007) *
                C16924) *
               C50211 * C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50398 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50399 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C36975 - C36976 + C36977 - C36978) * C19531 +
             (C36979 - C36980 + C36981 - C36982) * C50062) *
                C2264 +
            ((C36983 - C36984 + C36985 - C36986) * C19531 +
             (C36987 - C36988 + C36989 - C36990) * C50062) *
                C2265) *
               C2064) *
              C50351 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C50398 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50399 +
           (((C36976 - C36975 + C36978 - C36977) * C19531 +
             (C36980 - C36979 + C36982 - C36981) * C50062) *
                C2263 +
            ((C36984 - C36983 + C36986 - C36985) * C19531 +
             (C36988 - C36987 + C36990 - C36989) * C50062) *
                C2264 +
            ((C32933 * C3587 - C32931 * C3589 + C32934 * C20958 -
              C50286 * C20959) *
                 C19531 +
             (C32933 * C3590 - C32931 * C3593 + C32934 * C20960 -
              C50286 * C20961) *
                 C50062) *
                C2265) *
               C2064) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C1648 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C276 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C1648 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50189) *
              C277 +
          (((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C1648 +
           ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
             C50286 * C2629) *
                C16927 +
            (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
             C50286 * C2635) *
                C16922 +
            (C32933 * C1535 - C32931 * C1540 + C32934 * C2627 -
             C50286 * C2631) *
                C16928 +
            (C32933 * C1541 - C32931 * C1547 + C32934 * C2632 -
             C50286 * C2636) *
                C16923 +
            (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
             C50286 * C2633) *
                C16929 +
            (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
             C50286 * C2637) *
                C16924) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C1648 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C1648 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C1648 +
           (C33654 * C16927 + C33655 * C16922 +
            (C33647 - C33646 + C33649 - C33648) * C16928 +
            (C33651 - C33650 + C33653 - C33652) * C16923 +
            (C32933 * C454 - C32931 * C472 + C32934 * C455 - C50286 * C474) *
                C16929 +
            (C32933 * C473 - C32931 * C484 + C32934 * C475 - C50286 * C485) *
                C16924) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
               C16927 +
           (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
               C16922 +
           (C32936 - C32937 + C32938 - C32939) * C16928 +
           (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
           C32977 * C16924) *
              C50211 * C1814 +
          ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
               C16927 +
           (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
               C16922 +
           (C33304 - C33305 + C33306 - C33307) * C16928 +
           (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
           C33655 * C16924) *
              C50211 * C1815 +
          ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
               C16927 +
           (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
               C16922 +
           (C33320 - C33321 + C33322 - C33323) * C16928 +
           (C33324 - C33325 + C33326 - C33327) * C16923 +
           (C33328 - C33329 + C33330 - C33331) * C16929 +
           (C33332 - C33333 + C33334 - C33335) * C16924) *
              C50211 * C1816 +
          ((C32933 * C1818 - C32931 * C1822 + C32934 * C5458 - C50286 * C5461) *
               C16927 +
           (C32933 * C1823 - C32931 * C1830 + C32934 * C5462 - C50286 * C5467) *
               C16922 +
           (C32933 * C1819 - C32931 * C1824 + C32934 * C5459 - C50286 * C5463) *
               C16928 +
           (C32933 * C1825 - C32931 * C1831 + C32934 * C5464 - C50286 * C5468) *
               C16923 +
           (C32933 * C1820 - C32931 * C1826 + C32934 * C5460 - C50286 * C5465) *
               C16929 +
           (C32933 * C1827 - C32931 * C1832 + C32934 * C5466 - C50286 * C5469) *
               C16924) *
              C50211 * C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C1648 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C36560 - C36561 + C36562 - C36563) * C19531 +
             (C36564 - C36565 + C36566 - C36567) * C50062) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C1648 +
           ((C33654 * C19531 + C33655 * C50062) * C2263 +
            ((C33859 - C33858 + C33861 - C33860) * C19531 +
             (C33863 - C33862 + C33865 - C33864) * C50062) *
                C2264 +
            ((C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C276 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C1648 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50189) *
              C277 +
          ((C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C1648 +
           (C37493 * C2263 +
            ((C37482 - C37481 + C37484 - C37483) * C19531 +
             (C37486 - C37485 + C37488 - C37487) * C50062) *
                C2264 +
            ((C32933 * C4089 - C32931 * C4091 + C32934 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C32933 * C4092 - C32931 * C4095 + C32934 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C19531 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C50062) *
               C2263 +
           ((C35862 - C35863 + C35864 - C35865) * C19531 +
            (C35866 - C35867 + C35868 - C35869) * C50062) *
               C2264 +
           C35911 * C2265) *
              C1814 +
          (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C19531 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C50062) *
               C2263 +
           ((C36544 - C36545 + C36546 - C36547) * C19531 +
            (C36548 - C36549 + C36550 - C36551) * C50062) *
               C2264 +
           C37493 * C2265) *
              C1815 +
          (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C19531 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C50062) *
               C2263 +
           ((C36975 - C36976 + C36977 - C36978) * C19531 +
            (C36979 - C36980 + C36981 - C36982) * C50062) *
               C2264 +
           ((C36983 - C36984 + C36985 - C36986) * C19531 +
            (C36987 - C36988 + C36989 - C36990) * C50062) *
               C2265) *
              C1816 +
          (((C32933 * C1818 - C32931 * C1822 + C32934 * C5458 -
             C50286 * C5461) *
                C19531 +
            (C32933 * C1823 - C32931 * C1830 + C32934 * C5462 -
             C50286 * C5467) *
                C50062) *
               C2263 +
           ((C32933 * C4500 - C32931 * C4504 + C32934 * C6410 -
             C50286 * C6412) *
                C19531 +
            (C32933 * C4505 - C32931 * C4512 + C32934 * C6413 -
             C50286 * C6416) *
                C50062) *
               C2264 +
           ((C32933 * C4502 - C32931 * C4508 + C32934 * C22602 -
             C50286 * C22603) *
                C19531 +
            (C32933 * C4509 - C32931 * C4514 + C32934 * C22604 -
             C50286 * C22605) *
                C50062) *
               C2265) *
              C1817) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C50398 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50399 +
           ((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                C16927 +
            (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                C16922 +
            (C33320 - C33321 + C33322 - C33323) * C16928 +
            (C33324 - C33325 + C33326 - C33327) * C16923 +
            (C33328 - C33329 + C33330 - C33331) * C16929 +
            (C33332 - C33333 + C33334 - C33335) * C16924) *
               C50211 * C2064) *
              C50109 * C50343 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C50398 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50399 +
           ((C33321 - C33320 + C33323 - C33322) * C16927 +
            (C33325 - C33324 + C33327 - C33326) * C16922 +
            (C33329 - C33328 + C33331 - C33330) * C16928 +
            (C33333 - C33332 + C33335 - C33334) * C16923 +
            (C32933 * C453 - C32931 * C470 + C32934 * C1821 - C50286 * C1828) *
                C16929 +
            (C32933 * C471 - C32931 * C483 + C32934 * C1829 - C50286 * C1833) *
                C16924) *
               C50211 * C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C50398 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50399 +
           (((C32931 * C464 - C32933 * C450 + C50286 * C1822 - C32934 * C1818) *
                 C19531 +
             (C32931 * C480 - C32933 * C465 + C50286 * C1830 - C32934 * C1823) *
                 C50062) *
                C2263 +
            ((C36975 - C36976 + C36977 - C36978) * C19531 +
             (C36979 - C36980 + C36981 - C36982) * C50062) *
                C2264 +
            ((C36983 - C36984 + C36985 - C36986) * C19531 +
             (C36987 - C36988 + C36989 - C36990) * C50062) *
                C2265) *
               C2064) *
              C50109 * C50343 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C50398 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C36560 - C36561 + C36562 - C36563) * C19531 +
             (C36564 - C36565 + C36566 - C36567) * C50062) *
                C2265) *
               C50399 +
           (((C33321 - C33320 + C33323 - C33322) * C19531 +
             (C33325 - C33324 + C33327 - C33326) * C50062) *
                C2263 +
            ((C32933 * C1188 - C32931 * C1193 + C32934 * C4501 -
              C50286 * C4506) *
                 C19531 +
             (C32933 * C1194 - C32931 * C1200 + C32934 * C4507 -
              C50286 * C4513) *
                 C50062) *
                C2264 +
            ((C32933 * C2627 - C32931 * C2631 + C32934 * C4503 -
              C50286 * C4510) *
                 C19531 +
             (C32933 * C2632 - C32931 * C2636 + C32934 * C4511 -
              C50286 * C4515) *
                 C50062) *
                C2265) *
               C2064) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C1648 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C50109 * C999 +
          (((C32937 - C32936 + C32939 - C32938) * C16927 +
            (C32941 - C32940 + C32943 - C32942) * C16922 +
            (C32945 - C32944 + C32947 - C32946) * C16928 +
            (C32949 - C32948 + C32951 - C32950) * C16923 + C32978 * C16929 +
            C32979 * C16924) *
               C50211 * C1648 +
           ((C33305 - C33304 + C33307 - C33306) * C16927 +
            (C33309 - C33308 + C33311 - C33310) * C16922 +
            (C33313 - C33312 + C33315 - C33314) * C16928 +
            (C33317 - C33316 + C33319 - C33318) * C16923 +
            (C33646 - C33647 + C33648 - C33649) * C16929 +
            (C33650 - C33651 + C33652 - C33653) * C16924) *
               C50211 * C50189) *
              C50109 * C1000 +
          ((C32976 * C16927 + C32977 * C16922 +
            (C32953 - C32952 + C32955 - C32954) * C16928 +
            (C32957 - C32956 + C32959 - C32958) * C16923 +
            (C32960 - C32961 + C32962 - C32963) * C16929 +
            (C32964 - C32965 + C32966 - C32967) * C16924) *
               C50211 * C1648 +
           (C33654 * C16927 + C33655 * C16922 +
            (C33647 - C33646 + C33649 - C33648) * C16928 +
            (C33651 - C33650 + C33653 - C33652) * C16923 +
            (C32933 * C454 - C32931 * C472 + C32934 * C455 - C50286 * C474) *
                C16929 +
            (C32933 * C473 - C32931 * C484 + C32934 * C475 - C50286 * C485) *
                C16924) *
               C50211 * C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                C16927 +
            (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                C16922 +
            (C32936 - C32937 + C32938 - C32939) * C16928 +
            (C32940 - C32941 + C32942 - C32943) * C16923 + C32976 * C16929 +
            C32977 * C16924) *
               C50211 * C1648 +
           ((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                C16927 +
            (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                C16922 +
            (C33304 - C33305 + C33306 - C33307) * C16928 +
            (C33308 - C33309 + C33310 - C33311) * C16923 + C33654 * C16929 +
            C33655 * C16924) *
               C50211 * C50189) *
              C276 +
          (((C32933 * C281 - C32931 * C291 + C32934 * C867 - C50286 * C872) *
                C16927 +
            (C32933 * C292 - C32931 * C311 + C32934 * C873 - C50286 * C882) *
                C16922 +
            (C33126 - C33127 + C33128 - C33129) * C16928 +
            (C33130 - C33131 + C33132 - C33133) * C16923 + C33494 * C16929 +
            C33495 * C16924) *
               C50211 * C1648 +
           ((C32931 * C872 - C32933 * C867 + C50286 * C1191 - C32934 * C1187) *
                C16927 +
            (C32931 * C882 - C32933 * C873 + C50286 * C1199 - C32934 * C1192) *
                C16922 +
            (C33850 - C33851 + C33852 - C33853) * C16928 +
            (C33854 - C33855 + C33856 - C33857) * C16923 +
            (C33858 - C33859 + C33860 - C33861) * C16929 +
            (C33862 - C33863 + C33864 - C33865) * C16924) *
               C50211 * C50189) *
              C277 +
          (((C32931 * C299 - C32933 * C285 + C50286 * C1538 - C32934 * C1534) *
                C16927 +
            (C32931 * C315 - C32933 * C300 + C50286 * C1546 - C32934 * C1539) *
                C16922 +
            (C33142 - C33143 + C33144 - C33145) * C16928 +
            (C33146 - C33147 + C33148 - C33149) * C16923 +
            (C33150 - C33151 + C33152 - C33153) * C16929 +
            (C33154 - C33155 + C33156 - C33157) * C16924) *
               C50211 * C1648 +
           ((C32933 * C1534 - C32931 * C1538 + C32934 * C2626 -
             C50286 * C2629) *
                C16927 +
            (C32933 * C1539 - C32931 * C1546 + C32934 * C2630 -
             C50286 * C2635) *
                C16922 +
            (C32933 * C1535 - C32931 * C1540 + C32934 * C2627 -
             C50286 * C2631) *
                C16928 +
            (C32933 * C1541 - C32931 * C1547 + C32934 * C2632 -
             C50286 * C2636) *
                C16923 +
            (C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
             C50286 * C2633) *
                C16929 +
            (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
             C50286 * C2637) *
                C16924) *
               C50211 * C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C50109 * C999 +
          ((((C32937 - C32936 + C32939 - C32938) * C19531 +
             (C32941 - C32940 + C32943 - C32942) * C50062) *
                C2263 +
            ((C33126 - C33127 + C33128 - C33129) * C19531 +
             (C33130 - C33131 + C33132 - C33133) * C50062) *
                C2264 +
            C35910 * C2265) *
               C1648 +
           (((C33305 - C33304 + C33307 - C33306) * C19531 +
             (C33309 - C33308 + C33311 - C33310) * C50062) *
                C2263 +
            ((C33850 - C33851 + C33852 - C33853) * C19531 +
             (C33854 - C33855 + C33856 - C33857) * C50062) *
                C2264 +
            ((C36560 - C36561 + C36562 - C36563) * C19531 +
             (C36564 - C36565 + C36566 - C36567) * C50062) *
                C2265) *
               C50189) *
              C50109 * C1000 +
          (((C32976 * C19531 + C32977 * C50062) * C2263 +
            ((C33135 - C33134 + C33137 - C33136) * C19531 +
             (C33139 - C33138 + C33141 - C33140) * C50062) *
                C2264 +
            ((C33150 - C33151 + C33152 - C33153) * C19531 +
             (C33154 - C33155 + C33156 - C33157) * C50062) *
                C2265) *
               C1648 +
           ((C33654 * C19531 + C33655 * C50062) * C2263 +
            ((C33859 - C33858 + C33861 - C33860) * C19531 +
             (C33863 - C33862 + C33865 - C33864) * C50062) *
                C2264 +
            ((C32933 * C1536 - C32931 * C1542 + C32934 * C2628 -
              C50286 * C2633) *
                 C19531 +
             (C32933 * C1543 - C32931 * C1548 + C32934 * C2634 -
              C50286 * C2637) *
                 C50062) *
                C2265) *
               C50189) *
              C50109 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C129 - C32933 * C122 + C50286 * C456 - C32934 * C446) *
                 C19531 +
             (C32931 * C143 - C32933 * C130 + C50286 * C476 - C32934 * C457) *
                 C50062) *
                C2263 +
            ((C35862 - C35863 + C35864 - C35865) * C19531 +
             (C35866 - C35867 + C35868 - C35869) * C50062) *
                C2264 +
            C35911 * C2265) *
               C1648 +
           (((C32933 * C446 - C32931 * C456 + C32934 * C450 - C50286 * C464) *
                 C19531 +
             (C32933 * C457 - C32931 * C476 + C32934 * C465 - C50286 * C480) *
                 C50062) *
                C2263 +
            ((C36544 - C36545 + C36546 - C36547) * C19531 +
             (C36548 - C36549 + C36550 - C36551) * C50062) *
                C2264 +
            C37493 * C2265) *
               C50189) *
              C276 +
          ((((C35863 - C35862 + C35865 - C35864) * C19531 +
             (C35867 - C35866 + C35869 - C35868) * C50062) *
                C2263 +
            ((C35871 - C35870 + C35873 - C35872) * C19531 +
             (C35875 - C35874 + C35877 - C35876) * C50062) *
                C2264 +
            C36828 * C2265) *
               C1648 +
           (((C36545 - C36544 + C36547 - C36546) * C19531 +
             (C36549 - C36548 + C36551 - C36550) * C50062) *
                C2263 +
            ((C36553 - C36552 + C36555 - C36554) * C19531 +
             (C36557 - C36556 + C36559 - C36558) * C50062) *
                C2264 +
            ((C37481 - C37482 + C37483 - C37484) * C19531 +
             (C37485 - C37486 + C37487 - C37488) * C50062) *
                C2265) *
               C50189) *
              C277 +
          ((C35911 * C2263 +
            ((C35879 - C35878 + C35881 - C35880) * C19531 +
             (C35883 - C35882 + C35885 - C35884) * C50062) *
                C2264 +
            ((C36816 - C36817 + C36818 - C36819) * C19531 +
             (C36820 - C36821 + C36822 - C36823) * C50062) *
                C2265) *
               C1648 +
           (C37493 * C2263 +
            ((C37482 - C37481 + C37484 - C37483) * C19531 +
             (C37486 - C37485 + C37488 - C37487) * C50062) *
                C2264 +
            ((C32933 * C4089 - C32931 * C4091 + C32934 * C20346 -
              C50286 * C20347) *
                 C19531 +
             (C32933 * C4092 - C32931 * C4095 + C32934 * C20348 -
              C50286 * C20349) *
                 C50062) *
                C2265) *
               C50189) *
              C278) *
         C50090) /
            (p * q * std::sqrt(p + q));
}
