/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AB_yx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_12_21(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49150 = 0 * ae;
    const double C49149 = ae * be;
    const double C49148 = 0 * be;
    const double C49147 = ae + be;
    const double C49146 = 0 * be;
    const double C49145 = xA - xB;
    const double C49195 = 0 * be;
    const double C49194 = yA - yB;
    const double C49234 = 0 * ae;
    const double C49230 = 0 * be;
    const double C49272 = xP - xQ;
    const double C49271 = yP - yQ;
    const double C49270 = p + q;
    const double C49269 = p * q;
    const double C49277 = bs[3];
    const double C49287 = bs[4];
    const double C49296 = bs[5];
    const double C49310 = bs[6];
    const double C49332 = bs[7];
    const double C49441 = zP - zQ;
    const double C49604 = bs[2];
    const double C122 = bs[0];
    const double C49992 = ce + de;
    const double C49991 = ce * de;
    const double C49990 = xC - xD;
    const double C50014 = yC - yD;
    const double C50030 = zC - zD;
    const double C50127 = zA - zB;
    const double C49155 = C49150 / C49147;
    const double C49152 = 2 * C49147;
    const double C49151 = std::pow(C49147, 2);
    const double C49154 = C49149 * C49145;
    const double C49153 = C49145 * C49148;
    const double C49966 = C49145 * be;
    const double C49965 = C49145 * ae;
    const double C49964 = std::pow(C49145, 2);
    const double C49196 = C49149 * C49194;
    const double C49231 = C49194 * C49195;
    const double C50116 = std::pow(C49194, 2);
    const double C50166 = C49194 * be;
    const double C50165 = C49194 * ae;
    const double C49239 = C49234 / C49147;
    const double C49297 = std::pow(C49272, 2);
    const double C49357 = C49272 * be;
    const double C49279 = C49271 * ae;
    const double C49278 = C49271 * C49272;
    const double C49467 = std::pow(C49271, 2);
    const double C49273 = 2 * C49269;
    const double C49451 = std::pow(C49441, 2);
    const double C49994 = 2 * C49992;
    const double C50004 = std::pow(C49992, 2);
    const double C49996 = C49990 * de;
    const double C49995 = C49990 * ce;
    const double C49993 = std::pow(C49990, 2);
    const double C50015 = std::pow(C50014, 2);
    const double C50067 = C50014 * de;
    const double C50066 = C50014 * ce;
    const double C50031 = std::pow(C50030, 2);
    const double C50095 = C50030 * de;
    const double C50094 = C50030 * ce;
    const double C50128 = std::pow(C50127, 2);
    const double C50192 = C50127 * be;
    const double C50191 = C50127 * ae;
    const double C49974 = std::pow(C49152, -1);
    const double C50272 = std::pow(C49152, -2);
    const double C49156 = 2 * C49151;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (xP - xQ) * ae * be) /
                        C49151;
    const double C50250 = 4 * C49151;
    const double C49157 = C49153 / C49147;
    const double C49967 = C49964 * C49149;
    const double C49236 = C49231 / C49147;
    const double C50117 = C50116 * C49149;
    const double C49360 = C49287 * C49357;
    const double C49364 = C49277 * C49357;
    const double C49371 = C49296 * C49357;
    const double C49383 = C49310 * C49357;
    const double C49404 = C49332 * C49357;
    const double C49282 = C49277 * C49279;
    const double C49289 = C49287 * C49279;
    const double C49299 = C49296 * C49279;
    const double C49314 = C49310 * C49279;
    const double C49338 = C49332 * C49279;
    const double C49281 = C49278 * ae;
    const double C49274 = C49273 / C49270;
    const double C129 = (-(bs[1] * C49357 * C49273) / C49270) / C49147;
    const double C133 = (-(bs[1] * C49279 * C49273) / C49270) / C49147;
    const double C123 = -(C49272 * bs[1] * C49273) / C49270;
    const double C253 = -(C49271 * bs[1] * C49273) / C49270;
    const double C394 = -(C49441 * bs[1] * C49273) / C49270;
    const double C50005 = std::pow(C49994, -1);
    const double C50259 = std::pow(C49994, -2);
    const double C50009 = 2 * C50004;
    const double C50257 = 4 * C50004;
    const double C49997 = C49993 * C49991;
    const double C50016 = C50015 * C49991;
    const double C50032 = C50031 * C49991;
    const double C50129 = C50128 * C49149;
    const double C49162 = C49148 / C49156;
    const double C49160 = C49146 / C49156;
    const double C49233 = C49195 / C49156;
    const double C49237 = C49230 / C49156;
    const double C49159 = 0 - C49157;
    const double C49968 = C49967 / C49147;
    const double C49240 = 0 - C49236;
    const double C50118 = C50117 / C49147;
    const double C49283 = C49281 * be;
    const double C49276 = -C49274;
    const double C49286 = std::pow(C49274, 4);
    const double C49309 = std::pow(C49274, 6);
    const double C144 =
        (be * std::pow(C49274, 2) * bs[2] * C49271 * ae +
         C49272 * std::pow(-C49274, 3) * bs[3] * C49271 * C49272 * ae * be) /
        C49151;
    const double C49603 = std::pow(C49274, 2);
    const double C130 =
        (C49272 * std::pow(C49274, 2) * bs[2] * C49357) / C49147 -
        (be * bs[1] * C49273) / (C49270 * C49147);
    const double C49998 = C49997 / C49992;
    const double C50017 = C50016 / C49992;
    const double C50033 = C50032 / C49992;
    const double C50130 = C50129 / C49147;
    const double C49164 = C49159 * ae;
    const double C49969 = -C49968;
    const double C49243 = C49240 * ae;
    const double C50119 = -C50118;
    const double C49288 = C49287 * C49283;
    const double C49298 = C49296 * C49283;
    const double C49312 = C49310 * C49283;
    const double C49336 = C49332 * C49283;
    const double C49280 = std::pow(C49276, 3);
    const double C49295 = std::pow(C49276, 5);
    const double C49331 = std::pow(C49276, 7);
    const double C49291 = C49286 * C49289;
    const double C49361 = C49287 * C49286;
    const double C49362 = C49286 * C49360;
    const double C49317 = C49309 * C49314;
    const double C49385 = C49309 * C49383;
    const double C49405 = C49310 * C49309;
    const double C49605 = C49604 * C49603;
    const double C134 = (C49272 * C49603 * C49604 * C49279) / C49147;
    const double C263 = (C49271 * C49603 * C49604 * C49357) / C49147;
    const double C267 = (C49271 * C49603 * C49604 * C49279) / C49147 -
                        (ae * bs[1] * C49273) / (C49270 * C49147);
    const double C404 = (C49441 * C49603 * C49604 * C49357) / C49147;
    const double C408 = (C49441 * C49603 * C49604 * C49279) / C49147;
    const double C49999 = -C49998;
    const double C50018 = -C50017;
    const double C50034 = -C50033;
    const double C50131 = -C50130;
    const double C49167 = C49164 / C49147;
    const double C49970 = std::exp(C49969);
    const double C49245 = C49243 / C49147;
    const double C50120 = std::exp(C50119);
    const double C49290 = C49286 * C49288;
    const double C49316 = C49309 * C49312;
    const double C49284 = C49280 * C49282;
    const double C49358 = C49277 * C49280;
    const double C49365 = C49280 * C49364;
    const double C283 = (ae * std::pow(C49274, 2) * bs[2] * C49272 * be +
                         C49271 * C49280 * C49277 * C49283) /
                        C49151;
    const double C424 = ((zP - zQ) * C49280 * C49277 * C49283) / C49151;
    const double C49301 = C49295 * C49299;
    const double C49300 = C49295 * C49298;
    const double C49374 = C49295 * C49371;
    const double C49384 = C49296 * C49295;
    const double C49341 = C49331 * C49338;
    const double C49340 = C49331 * C49336;
    const double C49407 = C49331 * C49404;
    const double C49294 = be * C49291;
    const double C49293 = C49272 * C49291;
    const double C49715 = C49271 * C49291;
    const double C49373 = C49272 * C49361;
    const double C49372 = C49361 * be;
    const double C49613 = C49361 * C49297;
    const double C49718 = C49361 * C49467;
    const double C49753 = C49271 * C49361;
    const double C49752 = C49361 * ae;
    const double C49942 = C49361 * C49451;
    const double C49956 = C49441 * C49361;
    const double C49367 = C49272 * C49362;
    const double C49465 = ae * C49362;
    const double C49464 = C49271 * C49362;
    const double C49319 = C49317 * C49297;
    const double C49330 = be * C49317;
    const double C49329 = C49272 * C49317;
    const double C49821 = C49271 * C49317;
    const double C49861 = C49317 * C49451;
    const double C49389 = C49272 * C49385;
    const double C49498 = C49385 * C49467;
    const double C49556 = ae * C49385;
    const double C49555 = C49271 * C49385;
    const double C49575 = C49385 * C49451;
    const double C49584 = C49441 * C49385;
    const double C49410 = C49405 * C49297;
    const double C49409 = C49272 * C49405;
    const double C49408 = C49405 * be;
    const double C49825 = C49405 * C49467;
    const double C124 = C49605 * C49297 - (bs[1] * C49273) / C49270;
    const double C254 = C49271 * C49272 * C49605;
    const double C257 = C49605 * C49467 - (bs[1] * C49273) / C49270;
    const double C395 = C49441 * C49272 * C49605;
    const double C398 = C49605 * C49451 - (bs[1] * C49273) / C49270;
    const double C775 = C49441 * C49271 * C49605;
    const double C50000 = std::exp(C49999);
    const double C50019 = std::exp(C50018);
    const double C50035 = std::exp(C50034);
    const double C50132 = std::exp(C50131);
    const double C49169 = C49167 - C49160;
    const double C19641 = C49970 * C263;
    const double C21759 = C49970 * C404;
    const double C49158 = C49154 * C49970;
    const double C49971 = C49970 * C49965;
    const double C49975 = C49974 * C49970;
    const double C50247 = C49970 * C49966;
    const double C50244 = C49970 / C49152;
    const double C16808 = C50272 * C49970;
    const double C49247 = C49245 - C49237;
    const double C49197 = C49196 * C50120;
    const double C121 = -(2 * C49149 * (yA - yB) * C50120) / C49147;
    const double C50167 = C50120 * C50165;
    const double C50170 = C49974 * C50120;
    const double C50276 = C50120 * C50166;
    const double C50271 = C50120 / C49152;
    const double C2161 = C50272 * C50120;
    const double C428 =
        (C49280 * C49277 * C49283 + C49290 * std::pow(zP - zQ, 2)) / C49151;
    const double C49318 = C49272 * C49316;
    const double C49497 = C49271 * C49316;
    const double C49523 = C49316 * C49451;
    const double C49530 = C49441 * C49316;
    const double C145 = (C49280 * C49277 * C49283 + be * C49272 * C49284 +
                         C49272 * (be * C49284 + C49272 * std::pow(C49274, 4) *
                                                     bs[4] * C49283)) /
                        C49151;
    const double C146 =
        (2 * (be * C49284 + C49272 * C49290) +
         be * (C49284 + C49291 * std::pow(C49272, 2)) +
         C49272 * (C49290 + be * C49272 * C49291 +
                   C49272 * (be * C49291 +
                             C49272 * std::pow(C49276, 5) * bs[5] * C49283))) /
        C49151;
    const double C284 = (ae * (C49272 * C49280 * C49277 * C49272 * be +
                               bs[2] * std::pow(C49274, 2) * be) +
                         C49271 * (be * C49284 + C49272 * C49290)) /
                        C49151;
    const double C425 = ((zP - zQ) * (be * C49284 + C49272 * C49290)) / C49151;
    const double C135 = (C49603 * C49604 * C49279 + C49284 * C49297) / C49147;
    const double C136 =
        (2 * C49272 * C49284 + C49272 * (C49284 + C49291 * C49297)) / C49147;
    const double C268 =
        (C49271 * C49272 * C49284 + C49272 * C49605 * ae) / C49147;
    const double C275 =
        (C49603 * C49604 * C49279 + C49271 * (C49271 * C49284 + C49605 * ae) +
         C49271 * C49605 * ae) /
        C49147;
    const double C409 = (C49441 * C49272 * C49284) / C49147;
    const double C410 = (C49441 * (C49284 + C49291 * C49297)) / C49147;
    const double C416 = (C49603 * C49604 * C49279 + C49284 * C49451) / C49147;
    const double C784 = (C49441 * (C49271 * C49284 + C49605 * ae)) / C49147;
    const double C1722 =
        (2 * C49441 * C49284 + C49441 * (C49284 + C49291 * C49451)) / C49147;
    const double C49368 = C49358 * be;
    const double C49612 = C49272 * C49358;
    const double C49717 = C49271 * C49358;
    const double C49716 = C49358 * ae;
    const double C269 = (C49271 * (C49284 + C49291 * C49297) +
                         (C49605 + C49358 * C49297) * ae) /
                        C49147;
    const double C977 =
        (2 * (C49271 * C49284 + C49605 * ae) +
         C49271 * (C49284 + C49271 * (C49271 * C49291 + C49358 * ae) +
                   C49271 * C49358 * ae) +
         (C49605 + C49358 * C49467) * ae) /
        C49147;
    const double C1091 = (C49271 * C49284 + C49605 * ae +
                          (C49271 * C49291 + C49358 * ae) * C49451) /
                         C49147;
    const double C1438 =
        (C49441 * (C49284 + C49271 * (C49271 * C49291 + C49358 * ae) +
                   C49271 * C49358 * ae)) /
        C49147;
    const double C125 =
        2 * C49272 * C49605 + C49272 * (C49605 + C49358 * C49297);
    const double C255 = C49271 * (C49605 + C49358 * C49297);
    const double C396 = C49441 * (C49605 + C49358 * C49297);
    const double C969 =
        2 * C49271 * C49605 + C49271 * (C49605 + C49358 * C49467);
    const double C1430 = C49441 * (C49605 + C49358 * C49467);
    const double C1714 =
        2 * C49441 * C49605 + C49441 * (C49605 + C49358 * C49451);
    const double C5318 =
        3 * (C49605 + C49358 * C49451) +
        C49441 * (2 * C49441 * C49358 + C49441 * (C49358 + C49361 * C49451));
    const double C287 = (C49280 * C49277 * C49283 + ae * C49271 * C49365 +
                         C49271 * (ae * C49365 + C49271 * C49290)) /
                        C49151;
    const double C790 =
        (ae * C49441 * C49365 + C49271 * C49441 * C49290) / C49151;
    const double C131 =
        (C49603 * C49604 * C49357 + C49272 * (C49272 * C49365 + C49605 * be) +
         C49272 * C49605 * be) /
        C49147;
    const double C264 = (C49271 * (C49272 * C49365 + C49605 * be)) / C49147;
    const double C271 = (C49603 * C49604 * C49357 + C49365 * C49467) / C49147;
    const double C405 = (C49441 * (C49272 * C49365 + C49605 * be)) / C49147;
    const double C412 = (C49603 * C49604 * C49357 + C49365 * C49451) / C49147;
    const double C780 = (C49441 * C49271 * C49365) / C49147;
    const double C973 =
        (2 * C49271 * C49365 + C49271 * (C49365 + C49362 * C49467)) / C49147;
    const double C1434 = (C49441 * (C49365 + C49362 * C49467)) / C49147;
    const double C1718 =
        (2 * C49441 * C49365 + C49441 * (C49365 + C49362 * C49451)) / C49147;
    const double C19643 = C49970 * C283;
    const double C21761 = C49970 * C424;
    const double C49303 = C49301 * C49297;
    const double C49308 = be * C49301;
    const double C49307 = C49272 * C49301;
    const double C49751 = C49271 * C49301;
    const double C49813 = C49301 * C49451;
    const double C49860 = C49441 * C49301;
    const double C5323 =
        (3 * (C49284 + C49291 * C49451) +
         C49441 * (2 * C49441 * C49291 + C49441 * (C49291 + C49301 * C49451))) /
        C49147;
    const double C49302 = C49272 * C49300;
    const double C49466 = C49271 * C49300;
    const double C49489 = C49441 * C49300;
    const double C981 = (2 * (ae * C49365 + C49271 * C49290) +
                         ae * (C49365 + C49362 * std::pow(C49271, 2)) +
                         C49271 * (C49290 + ae * C49271 * C49362 +
                                   C49271 * (ae * C49362 + C49271 * C49300))) /
                        C49151;
    const double C1095 = (ae * (C49365 + C49362 * C49451) +
                          C49271 * (C49290 + C49300 * C49451)) /
                         C49151;
    const double C1442 =
        (C49441 * C49290 + ae * C49441 * C49271 * C49362 +
         C49271 * (ae * C49441 * C49362 + C49271 * C49441 * C49300)) /
        C49151;
    const double C1726 =
        (2 * C49441 * C49290 + C49441 * (C49290 + C49300 * C49451)) / C49151;
    const double C49376 = C49272 * C49374;
    const double C49469 = C49374 * C49467;
    const double C49496 = ae * C49374;
    const double C49495 = C49271 * C49374;
    const double C49529 = C49441 * C49374;
    const double C49807 = C49374 * C49451;
    const double C5321 =
        (3 * (C49365 + C49362 * C49451) +
         C49441 * (2 * C49441 * C49362 + C49441 * (C49362 + C49374 * C49451))) /
        C49147;
    const double C49388 = C49384 * C49297;
    const double C49387 = C49272 * C49384;
    const double C49386 = C49384 * be;
    const double C49754 = C49384 * C49467;
    const double C49823 = C49271 * C49384;
    const double C49822 = C49384 * ae;
    const double C49957 = C49384 * C49451;
    const double C49343 = C49341 * C49297;
    const double C49342 = C49272 * C49340;
    const double C49557 = C49271 * C49340;
    const double C49576 = C49340 * C49451;
    const double C49585 = C49441 * C49340;
    const double C49411 = C49272 * C49407;
    const double C49559 = C49407 * C49467;
    const double C417 = (C49272 * C49284 + C49293 * C49451) / C49147;
    const double C49375 = C49373 * be;
    const double C49617 = 2 * C49373;
    const double C49724 = C49271 * C49373;
    const double C49723 = C49373 * ae;
    const double C49614 = C49358 + C49613;
    const double C49720 = C49358 + C49718;
    const double C49758 = 2 * C49753;
    const double C49756 = C49753 * ae;
    const double C49943 = C49358 + C49942;
    const double C49958 = 2 * C49956;
    const double C2540 =
        (C49290 + C49300 * C49451 + ae * (C49464 + C49271 * C49374 * C49451) +
         C49271 * (ae * (C49362 + C49374 * C49451) +
                   C49271 * (C49300 + C49316 * C49451))) /
        C49151;
    const double C1087 = (C49271 * C49365 + C49464 * C49451) / C49147;
    const double C49321 = C49301 + C49319;
    const double C49337 = 2 * C49329;
    const double C49335 = be * C49329;
    const double C49765 = C49271 * C49329;
    const double C49816 = C49329 * C49451;
    const double C49863 = C49301 + C49861;
    const double C49502 = C49374 + C49498;
    const double C49563 = 2 * C49555;
    const double C49561 = ae * C49555;
    const double C49583 = C49441 * C49555;
    const double C49850 = C49555 * C49451;
    const double C49577 = C49374 + C49575;
    const double C49587 = ae * C49584;
    const double C49413 = C49384 + C49410;
    const double C49412 = C49409 * be;
    const double C49768 = C49409 * C49467;
    const double C49829 = C49384 + C49825;
    const double C50001 = C50000 * C49995;
    const double C50006 = C50005 * C50000;
    const double C50254 = C50000 * C49996;
    const double C50251 = C50000 / C49994;
    const double C897 = C50259 * C50000;
    const double C50068 = C50019 * C50066;
    const double C50071 = C50005 * C50019;
    const double C50263 = C50019 * C50067;
    const double C50258 = C50019 / C49994;
    const double C250 = C50259 * C50019;
    const double C50096 = C50035 * C50094;
    const double C50099 = C50005 * C50035;
    const double C50267 = C50035 * C50095;
    const double C50260 = C50035 / C49994;
    const double C393 = C50259 * C50035;
    const double C50193 = C50132 * C50191;
    const double C50196 = C49974 * C50132;
    const double C50280 = C50132 * C50192;
    const double C50273 = C50132 / C49152;
    const double C5025 = C50272 * C50132;
    const double C49163 = C49158 / C49151;
    const double C49161 = 2 * C49158;
    const double C50248 = C49971 / C49156;
    const double C50246 = C49971 / C49147;
    const double C50245 = C49971 * C49966;
    const double C16807 = (2 * C49974 * C49971) / C49147;
    const double C50249 = C49975 * C49966;
    const double C108 = C49975 / C50250;
    const double C7812 = C49975 / C49152;
    const double C50285 = C50247 / C49147;
    const double C16806 = (C49970 * std::pow(C49965, 2)) / C49151 + C50244;
    const double C49235 = C49197 / C49151;
    const double C49232 = 2 * C49197;
    const double C2166 =
        ((0 * ae) / C49147 - C49197 / C49151) / C49152 + (0 * ae) / C49147;
    const double C7818 =
        ((C50120 - (C49194 * 2 * C49197) / C49147) * ae) / C49147 -
        C49195 / C49156;
    const double C7819 = (0 * ae) / C49147 - C49197 / C49151;
    const double C16814 =
        (-C49195 / C49147) / C49152 -
        ((C50120 - (C49194 * 2 * C49197) / C49147) * be) / C49147;
    const double C16815 = (-(2 * C49197) / C49147) / C49152 - (0 * be) / C49147;
    const double C50278 = C50167 / C49156;
    const double C50277 = C50167 * C50166;
    const double C50274 = C50167 / C49147;
    const double C2160 = (2 * C49974 * C50167) / C49147;
    const double C2165 =
        (((C50120 - (C49194 * 2 * C49197) / C49147) * ae) / C49147 -
         C49195 / C49156) /
            C49152 +
        ((C49194 * ((0 * ae) / C49147 - C49197 / C49151) + C50170) * ae) /
            C49147;
    const double C50279 = C50170 * C50166;
    const double C19536 = C50170 / C50250;
    const double C24226 = C50170 / C49152;
    const double C50296 = C50276 / C49147;
    const double C2159 = (C50120 * std::pow(C50165, 2)) / C49151 + C50271;
    const double C21765 = C49970 * C428;
    const double C49524 = C49300 + C49523;
    const double C49532 = C49271 * C49530;
    const double C49594 = 2 * C49530;
    const double C2332 = C49975 * C284;
    const double C19660 = C49970 * C284;
    const double C24385 = C49975 * C284;
    const double C5337 = C49975 * C425;
    const double C21780 = C49970 * C425;
    const double C27439 = C49975 * C425;
    const double C49369 = C49367 + C49368;
    const double C276 =
        (C49272 * C49284 + C49271 * (C49271 * C49293 + C49612 * ae) +
         C49271 * C49612 * ae) /
        C49147;
    const double C785 = (C49441 * (C49271 * C49293 + C49612 * ae)) / C49147;
    const double C258 = C49272 * C49605 + C49612 * C49467;
    const double C399 = C49272 * C49605 + C49612 * C49451;
    const double C776 = C49441 * C49271 * C49612;
    const double C970 =
        2 * C49271 * C49612 + C49271 * (C49612 + C49373 * C49467);
    const double C1431 = C49441 * (C49612 + C49373 * C49467);
    const double C1715 =
        2 * C49441 * C49612 + C49441 * (C49612 + C49373 * C49451);
    const double C1083 = C49271 * C49605 + C49717 * C49451;
    const double C4423 =
        2 * C49441 * C49717 + C49441 * (C49717 + C49753 * C49451);
    const double C49719 = C49715 + C49716;
    const double C19647 = C49970 * C287;
    const double C20120 = C49970 * C790;
    const double C2328 = C49975 * C264;
    const double C19658 = C49970 * C264;
    const double C24381 = C49975 * C264;
    const double C19645 = C49970 * C271;
    const double C5333 = C49975 * C405;
    const double C21778 = C49970 * C405;
    const double C27435 = C49975 * C405;
    const double C21763 = C49970 * C412;
    const double C20118 = C49970 * C780;
    const double C19649 = C49970 * C973;
    const double C20122 = C49970 * C1434;
    const double C21770 = C49970 * C1718;
    const double C49305 = C49291 + C49303;
    const double C49320 = C49308 + C49318;
    const double C49313 = 2 * C49307;
    const double C49311 = be * C49307;
    const double C49722 = C49271 * C49307;
    const double C978 =
        (2 * (C49271 * C49293 + C49612 * ae) +
         C49271 * (C49293 + C49271 * (C49271 * C49307 + C49373 * ae) +
                   C49271 * C49373 * ae) +
         (C49612 + C49373 * C49467) * ae) /
        C49147;
    const double C1092 = (C49271 * C49293 + C49612 * ae +
                          (C49271 * C49307 + C49373 * ae) * C49451) /
                         C49147;
    const double C1439 =
        (C49441 * (C49293 + C49271 * (C49271 * C49307 + C49373 * ae) +
                   C49271 * C49373 * ae)) /
        C49147;
    const double C1723 =
        (2 * C49441 * C49293 + C49441 * (C49293 + C49307 * C49451)) / C49147;
    const double C5324 =
        (3 * (C49293 + C49307 * C49451) +
         C49441 * (2 * C49441 * C49307 + C49441 * (C49307 + C49329 * C49451))) /
        C49147;
    const double C49755 = C49751 + C49752;
    const double C49814 = C49291 + C49813;
    const double C49862 = 2 * C49860;
    const double C49304 = C49294 + C49302;
    const double C49468 = C49465 + C49466;
    const double C19651 = C49970 * C981;
    const double C20421 = C49970 * C1095;
    const double C20124 = C49970 * C1442;
    const double C21772 = C49970 * C1726;
    const double C49377 = C49376 + C49372;
    const double C49470 = C49362 + C49469;
    const double C49500 = C49496 + C49497;
    const double C49501 = 2 * C49495;
    const double C49499 = ae * C49495;
    const double C4427 =
        (2 * C49441 * C49464 + C49441 * (C49464 + C49495 * C49451)) / C49147;
    const double C6302 =
        (3 * (C49464 + C49495 * C49451) +
         C49441 * (2 * C49441 * C49495 + C49441 * (C49495 + C49555 * C49451))) /
        C49147;
    const double C49531 = ae * C49529;
    const double C49856 = 2 * C49529;
    const double C49808 = C49362 + C49807;
    const double C23630 = C49970 * C5321;
    const double C49391 = C49361 + C49388;
    const double C49390 = C49387 * be;
    const double C49406 = 2 * C49387;
    const double C49725 = C49387 * C49467;
    const double C49767 = C49271 * C49387;
    const double C49766 = C49387 * ae;
    const double C49945 = C49387 * C49451;
    const double C5319 =
        3 * (C49612 + C49373 * C49451) +
        C49441 * (2 * C49441 * C49373 + C49441 * (C49373 + C49387 * C49451));
    const double C49392 = C49389 + C49386;
    const double C49757 = C49361 + C49754;
    const double C49830 = 2 * C49823;
    const double C49828 = C49823 * ae;
    const double C49953 = C49823 * C49451;
    const double C6300 =
        3 * (C49717 + C49753 * C49451) +
        C49441 * (2 * C49441 * C49753 + C49441 * (C49753 + C49823 * C49451));
    const double C49827 = C49821 + C49822;
    const double C49959 = C49361 + C49957;
    const double C49345 = C49317 + C49343;
    const double C49344 = C49330 + C49342;
    const double C49562 = C49556 + C49557;
    const double C49578 = C49316 + C49576;
    const double C49588 = C49271 * C49585;
    const double C49414 = C49411 + C49408;
    const double C49564 = C49385 + C49559;
    const double C1084 = C49271 * C49612 + C49724 * C49451;
    const double C126 = 3 * (C49605 + C49358 * C49297) +
                        C49272 * (2 * C49612 + C49272 * C49614);
    const double C256 = C49271 * (2 * C49612 + C49272 * C49614);
    const double C259 = C49605 + C49358 * C49297 + C49614 * C49467;
    const double C397 = C49441 * (2 * C49612 + C49272 * C49614);
    const double C400 = C49605 + C49358 * C49297 + C49614 * C49451;
    const double C777 = C49441 * C49271 * C49614;
    const double C2313 = 3 * (C49605 + C49358 * C49467) +
                         C49271 * (2 * C49717 + C49271 * C49720);
    const double C2531 = C49605 + C49358 * C49467 + C49720 * C49451;
    const double C3045 = C49441 * (2 * C49717 + C49271 * C49720);
    const double C7201 =
        4 * (2 * C49441 * C49358 + C49441 * C49943) +
        C49441 * (3 * C49943 + C49441 * (2 * C49441 * C49361 +
                                         C49441 * (C49361 + C49384 * C49451)));
    const double C20425 = C49970 * C2540;
    const double C20419 = C49970 * C1087;
    const double C49323 = C49272 * C49321;
    const double C49333 = 3 * C49321;
    const double C49328 = be * C49321;
    const double C49730 = C49271 * C49321;
    const double C49339 = C49316 + C49335;
    const double C49817 = C49307 + C49816;
    const double C49864 = C49441 * C49863;
    const double C49505 = C49271 * C49502;
    const double C49558 = 3 * C49502;
    const double C49554 = ae * C49502;
    const double C49565 = C49316 + C49561;
    const double C49586 = ae * C49583;
    const double C49851 = C49495 + C49850;
    const double C49579 = ae * C49577;
    const double C49857 = C49441 * C49577;
    const double C49416 = C49272 * C49413;
    const double C49415 = C49413 * be;
    const double C49733 = C49413 * C49467;
    const double C49771 = C49387 + C49768;
    const double C49832 = C49271 * C49829;
    const double C50255 = C50001 / C50009;
    const double C50253 = C50001 / C49992;
    const double C50252 = C50001 * C49996;
    const double C896 = (2 * C50005 * C50001) / C49992;
    const double C50256 = C50006 * C49996;
    const double C116 = C50006 / C50257;
    const double C536 = C50006 / C49994;
    const double C50288 = C50254 / C49992;
    const double C895 = (C50000 * std::pow(C49995, 2)) / C50004 + C50251;
    const double C50265 = C50068 / C50009;
    const double C50264 = C50068 * C50067;
    const double C50261 = C50068 / C49992;
    const double C249 = (2 * C50005 * C50068) / C49992;
    const double C50266 = C50071 * C50067;
    const double C967 = C50071 / C50257;
    const double C1199 = C50071 / C49994;
    const double C50290 = C50263 / C49992;
    const double C248 = (C50019 * std::pow(C50066, 2)) / C50004 + C50258;
    const double C50269 = C50096 / C50009;
    const double C50268 = C50096 * C50095;
    const double C50262 = C50096 / C49992;
    const double C392 = (2 * C50005 * C50096) / C49992;
    const double C50270 = C50099 * C50095;
    const double C1713 = C50099 / C50257;
    const double C1960 = C50099 / C49994;
    const double C50293 = C50267 / C49992;
    const double C391 = (C50035 * std::pow(C50094, 2)) / C50004 + C50260;
    const double C50282 = C50193 / C49156;
    const double C50281 = C50193 * C50192;
    const double C50275 = C50193 / C49147;
    const double C5024 = (2 * C49974 * C50193) / C49147;
    const double C50283 = C50196 * C50192;
    const double C38557 = C50196 / C50250;
    const double C43894 = C50196 / C49152;
    const double C50299 = C50280 / C49147;
    const double C5023 = (C50132 * std::pow(C50191, 2)) / C49151 + C50273;
    const double C49166 = C49155 - C49163;
    const double C49165 = C49145 * C49161;
    const double C2163 = (-C49161 / C49147) / C49152 - (0 * be) / C49147;
    const double C19537 = -C49161 / C49147;
    const double C24408 = C50246 * C284;
    const double C24404 = C50246 * C264;
    const double C24400 = C50246 * C981;
    const double C24396 = C50246 * C973;
    const double C24391 = C50246 * C287;
    const double C24387 = C50246 * C271;
    const double C24383 = C50246 * C283;
    const double C24379 = C50246 * C263;
    const double C25100 = C50246 * C1442;
    const double C25096 = C50246 * C1434;
    const double C25092 = C50246 * C790;
    const double C25088 = C50246 * C780;
    const double C25535 = C50246 * C2540;
    const double C25527 = C50246 * C1095;
    const double C25523 = C50246 * C1087;
    const double C27454 = C50246 * C425;
    const double C27450 = C50246 * C405;
    const double C27446 = C50246 * C428;
    const double C27442 = C50246 * C412;
    const double C27437 = C50246 * C424;
    const double C27433 = C50246 * C404;
    const double C29871 = C50246 * C1726;
    const double C29867 = C50246 * C1718;
    const double C45981 = C50246 * C5321;
    const double C50284 = C50245 / C49151;
    const double C16971 = C16807 * C284;
    const double C16965 = C16807 * C264;
    const double C33559 = C16807 * C425;
    const double C33553 = C16807 * C405;
    const double C50286 = C50249 / C49147;
    const double C2157 = -C50285;
    const double C16994 = C16806 * C284;
    const double C16988 = C16806 * C264;
    const double C16982 = C16806 * C287;
    const double C16976 = C16806 * C271;
    const double C16969 = C16806 * C283;
    const double C16963 = C16806 * C263;
    const double C17662 = C16806 * C790;
    const double C17656 = C16806 * C780;
    const double C17929 = C16806 * C981;
    const double C17923 = C16806 * C973;
    const double C18087 = C16806 * C1095;
    const double C18081 = C16806 * C1087;
    const double C18585 = C16806 * C1442;
    const double C18579 = C16806 * C1434;
    const double C33582 = C16806 * C425;
    const double C33576 = C16806 * C405;
    const double C33570 = C16806 * C428;
    const double C33564 = C16806 * C412;
    const double C33557 = C16806 * C424;
    const double C33551 = C16806 * C404;
    const double C35369 = C16806 * C1726;
    const double C35363 = C16806 * C1718;
    const double C49242 = C49239 - C49235;
    const double C49238 = C49194 * C49232;
    const double C50297 = C50277 / C49151;
    const double C2164 =
        (((0 - (C49194 * C49195) / C49147) * ae) / C49147 - (0 * be) / C49156) /
            C49152 +
        ((C49194 * (((C50120 - (C49194 * 2 * C49197) / C49147) * ae) / C49147 -
                    C49195 / C49156) +
          C50274) *
         ae) /
            C49147 +
        (0 * ae) / C49147 - C49197 / C49151;
    const double C50298 = C50279 / C49147;
    const double C16809 = -C50296;
    const double C4435 =
        (ae * (2 * C49441 * C49362 + C49441 * (C49362 + C49374 * C49451)) +
         C49271 * (2 * C49489 + C49441 * C49524)) /
        C49151;
    const double C4437 =
        (2 * C49489 + C49441 * C49524 +
         ae * (2 * C49441 * C49495 +
               C49441 * (C49495 + C49271 * C49385 * C49451)) +
         C49271 *
             (ae * (2 * C49529 + C49441 * (C49374 + C49385 * C49451)) +
              C49271 * (2 * C49530 + C49441 * (C49316 + C49340 * C49451)))) /
        C49151;
    const double C5327 = (3 * (C49290 + C49300 * C49451) +
                          C49441 * (2 * C49489 + C49441 * C49524)) /
                         C49151;
    const double C6306 =
        (ae * (3 * (C49362 + C49374 * C49451) +
               C49441 * (2 * C49529 + C49441 * (C49374 + C49385 * C49451))) +
         C49271 *
             (3 * C49524 +
              C49441 * (2 * C49530 + C49441 * (C49316 + C49340 * C49451)))) /
        C49151;
    const double C7207 =
        (4 * (2 * C49489 + C49441 * C49524) +
         C49441 *
             (3 * C49524 +
              C49441 * (2 * C49530 + C49441 * (C49316 + C49340 * C49451)))) /
        C49151;
    const double C132 =
        (2 * (C49272 * C49365 + C49605 * be) +
         C49272 * (C49365 + C49272 * C49369 + C49272 * C49358 * be) +
         (C49605 + C49358 * C49297) * be) /
        C49147;
    const double C265 =
        (C49271 * (C49365 + C49272 * C49369 + C49612 * be)) / C49147;
    const double C272 =
        (C49272 * C49365 + C49605 * be + C49369 * C49467) / C49147;
    const double C406 =
        (C49441 * (C49365 + C49272 * C49369 + C49612 * be)) / C49147;
    const double C413 =
        (C49272 * C49365 + C49605 * be + C49369 * C49451) / C49147;
    const double C781 = (C49441 * C49271 * C49369) / C49147;
    const double C2318 =
        (3 * (C49284 + C49271 * C49719 + C49717 * ae) +
         C49271 * (2 * C49719 +
                   C49271 * (C49291 + C49271 * (C49271 * C49301 + C49361 * ae) +
                             C49271 * C49361 * ae) +
                   C49720 * ae) +
         (2 * C49717 + C49271 * C49720) * ae) /
        C49147;
    const double C2536 = (C49284 + C49271 * C49719 + C49717 * ae +
                          (C49291 + C49271 * (C49271 * C49301 + C49361 * ae) +
                           C49271 * C49361 * ae) *
                              C49451) /
                         C49147;
    const double C3050 =
        (C49441 * (2 * C49719 +
                   C49271 * (C49291 + C49271 * (C49271 * C49301 + C49361 * ae) +
                             C49271 * C49361 * ae) +
                   C49720 * ae)) /
        C49147;
    const double C138 = (3 * (C49284 + C49291 * C49297) +
                         C49272 * (2 * C49293 + C49272 * C49305)) /
                        C49147;
    const double C270 = (C49271 * (2 * C49293 + C49272 * C49305) +
                         (2 * C49612 + C49272 * C49614) * ae) /
                        C49147;
    const double C277 =
        (C49284 + C49291 * C49297 + C49271 * (C49271 * C49305 + C49614 * ae) +
         C49271 * C49614 * ae) /
        C49147;
    const double C411 = (C49441 * (2 * C49293 + C49272 * C49305)) / C49147;
    const double C418 = (C49284 + C49291 * C49297 + C49305 * C49451) / C49147;
    const double C786 = (C49441 * (C49271 * C49305 + C49614 * ae)) / C49147;
    const double C1724 =
        (2 * C49441 * C49305 + C49441 * (C49305 + C49321 * C49451)) / C49147;
    const double C49322 = C49272 * C49320;
    const double C49327 = 2 * C49320;
    const double C49474 = C49271 * C49320;
    const double C49491 = C49441 * C49320;
    const double C49315 = C49300 + C49311;
    const double C49726 = C49722 + C49723;
    const double C49759 = C49271 * C49755;
    const double C49820 = 2 * C49755;
    const double C4429 =
        (2 * C49441 * C49719 + C49441 * (C49719 + C49755 * C49451)) / C49147;
    const double C6304 =
        (3 * (C49719 + C49755 * C49451) +
         C49441 *
             (2 * C49441 * C49755 +
              C49441 * (C49755 + (C49271 * C49317 + C49384 * ae) * C49451))) /
        C49147;
    const double C7205 =
        (4 * (2 * C49441 * C49291 + C49441 * C49814) +
         C49441 *
             (3 * C49814 + C49441 * (2 * C49441 * C49301 +
                                     C49441 * (C49301 + C49317 * C49451)))) /
        C49147;
    const double C147 =
        (3 * (C49290 + be * C49293 + C49272 * C49304) +
         be * (2 * C49293 + C49272 * C49305) +
         C49272 *
             (2 * C49304 + be * C49305 +
              C49272 * (C49300 + be * C49272 * C49301 +
                        C49272 * (be * C49301 + C49272 * std::pow(C49274, 6) *
                                                    bs[6] * C49283)))) /
        C49151;
    const double C285 =
        (ae * (C49280 * C49277 * C49357 +
               C49272 * (C49272 * C49286 * C49287 * C49357 + C49358 * be) +
               C49272 * C49358 * be) +
         C49271 * (C49290 + be * C49293 + C49272 * C49304)) /
        C49151;
    const double C288 = (be * C49284 + C49272 * C49290 + ae * C49271 * C49369 +
                         C49271 * (ae * C49369 + C49271 * C49304)) /
                        C49151;
    const double C426 =
        ((zP - zQ) * (C49290 + be * C49293 + C49272 * C49304)) / C49151;
    const double C429 =
        (be * C49284 + C49272 * C49290 + C49304 * std::pow(zP - zQ, 2)) /
        C49151;
    const double C791 =
        (ae * C49441 * C49369 + C49271 * C49441 * C49304) / C49151;
    const double C1727 =
        (2 * C49441 * C49304 + C49441 * (C49304 + C49320 * C49451)) / C49151;
    const double C49378 = C49272 * C49377;
    const double C49382 = 2 * C49377;
    const double C49473 = ae * C49377;
    const double C49472 = C49271 * C49377;
    const double C982 = (2 * (ae * C49369 + C49271 * C49304) +
                         ae * (C49369 + C49377 * std::pow(C49271, 2)) +
                         C49271 * (C49304 + ae * C49271 * C49377 +
                                   C49271 * (ae * C49377 + C49271 * C49320))) /
                        C49151;
    const double C1096 = (ae * (C49369 + C49377 * C49451) +
                          C49271 * (C49304 + C49320 * C49451)) /
                         C49151;
    const double C1443 =
        (C49441 * C49304 + ae * C49441 * C49271 * C49377 +
         C49271 * (ae * C49441 * C49377 + C49271 * C49441 * C49320)) /
        C49151;
    const double C974 =
        (2 * C49271 * C49369 + C49271 * (C49369 + C49377 * C49467)) / C49147;
    const double C1435 = (C49441 * (C49369 + C49377 * C49467)) / C49147;
    const double C1719 =
        (2 * C49441 * C49369 + C49441 * (C49369 + C49377 * C49451)) / C49147;
    const double C2322 =
        (3 * (C49290 + ae * C49464 + C49271 * C49468) +
         ae * (2 * C49464 + C49271 * C49470) +
         C49271 * (2 * C49468 + ae * C49470 +
                   C49271 * (C49300 + ae * C49271 * C49374 +
                             C49271 * (ae * C49374 + C49271 * C49316)))) /
        C49151;
    const double C3054 =
        (2 * (ae * C49441 * C49362 + C49271 * C49489) + ae * C49441 * C49470 +
         C49271 *
             (C49489 + ae * C49441 * C49271 * C49374 +
              C49271 * (ae * C49441 * C49374 + C49271 * C49441 * C49316))) /
        C49151;
    const double C3507 =
        (2 * (ae * (C49362 + C49374 * C49451) + C49271 * C49524) +
         ae * (C49470 + C49502 * C49451) +
         C49271 * (C49524 + ae * (C49495 + C49271 * C49385 * C49451) +
                   C49271 * (ae * (C49374 + C49385 * C49451) +
                             C49271 * (C49316 + C49340 * C49451)))) /
        C49151;
    const double C2316 = (3 * (C49365 + C49362 * C49467) +
                          C49271 * (2 * C49464 + C49271 * C49470)) /
                         C49147;
    const double C2534 = (C49365 + C49362 * C49467 + C49470 * C49451) / C49147;
    const double C3048 = (C49441 * (2 * C49464 + C49271 * C49470)) / C49147;
    const double C4431 =
        (2 * C49441 * C49470 + C49441 * (C49470 + C49502 * C49451)) / C49147;
    const double C49504 = C49271 * C49500;
    const double C49553 = 2 * C49500;
    const double C49503 = C49300 + C49499;
    const double C21774 = C49970 * C4427;
    const double C28685 = C50246 * C4427;
    const double C22725 = C49970 * C6302;
    const double C49533 = C49531 + C49532;
    const double C7203 =
        (4 * (2 * C49441 * C49362 + C49441 * C49808) +
         C49441 * (3 * C49808 + C49441 * (2 * C49529 + C49441 * C49577))) /
        C49147;
    const double C49393 = C49391 * be;
    const double C49618 = C49272 * C49391;
    const double C49622 = 3 * C49391;
    const double C49732 = C49271 * C49391;
    const double C49731 = C49391 * ae;
    const double C979 =
        (2 * (C49271 * C49305 + C49614 * ae) +
         C49271 * (C49305 + C49271 * (C49271 * C49321 + C49391 * ae) +
                   C49271 * C49391 * ae) +
         (C49614 + C49391 * C49467) * ae) /
        C49147;
    const double C1093 = (C49271 * C49305 + C49614 * ae +
                          (C49271 * C49321 + C49391 * ae) * C49451) /
                         C49147;
    const double C1440 =
        (C49441 * (C49305 + C49271 * (C49271 * C49321 + C49391 * ae) +
                   C49271 * C49391 * ae)) /
        C49147;
    const double C971 =
        2 * C49271 * C49614 + C49271 * (C49614 + C49391 * C49467);
    const double C1432 = C49441 * (C49614 + C49391 * C49467);
    const double C1716 =
        2 * C49441 * C49614 + C49441 * (C49614 + C49391 * C49451);
    const double C5320 =
        3 * (C49614 + C49391 * C49451) +
        C49441 * (2 * C49441 * C49391 + C49441 * (C49391 + C49413 * C49451));
    const double C49727 = C49373 + C49725;
    const double C49772 = 2 * C49767;
    const double C49770 = C49767 * ae;
    const double C4424 =
        2 * C49441 * C49724 + C49441 * (C49724 + C49767 * C49451);
    const double C6301 =
        3 * (C49724 + C49767 * C49451) +
        C49441 * (2 * C49441 * C49767 +
                  C49441 * (C49767 + C49271 * C49409 * C49451));
    const double C49769 = C49765 + C49766;
    const double C49946 = C49373 + C49945;
    const double C49394 = C49272 * C49392;
    const double C49403 = 2 * C49392;
    const double C49475 = C49392 * C49467;
    const double C49510 = ae * C49392;
    const double C49509 = C49271 * C49392;
    const double C49535 = C49441 * C49392;
    const double C49810 = C49392 * C49451;
    const double C5322 =
        (3 * (C49369 + C49377 * C49451) +
         C49441 * (2 * C49441 * C49377 + C49441 * (C49377 + C49392 * C49451))) /
        C49147;
    const double C49760 = C49271 * C49757;
    const double C49826 = 3 * C49757;
    const double C49824 = C49757 * ae;
    const double C4425 =
        2 * C49441 * C49720 + C49441 * (C49720 + C49757 * C49451);
    const double C22716 =
        3 * (C49720 + C49757 * C49451) +
        C49441 * (2 * C49441 * C49757 + C49441 * (C49757 + C49829 * C49451));
    const double C49954 = C49753 + C49953;
    const double C49831 = C49271 * C49827;
    const double C49853 = C49827 * C49451;
    const double C49960 = C49441 * C49959;
    const double C49347 = C49272 * C49345;
    const double C5326 =
        (3 * (C49305 + C49321 * C49451) +
         C49441 * (2 * C49441 * C49321 + C49441 * (C49321 + C49345 * C49451))) /
        C49147;
    const double C49346 = C49272 * C49344;
    const double C49511 = C49271 * C49344;
    const double C49526 = C49344 * C49451;
    const double C49536 = C49441 * C49344;
    const double C49566 = C49271 * C49562;
    const double C49580 = C49271 * C49578;
    const double C49595 = C49441 * C49578;
    const double C49590 = C49587 + C49588;
    const double C49417 = C49272 * C49414;
    const double C49512 = C49414 * C49467;
    const double C49567 = C49271 * C49564;
    const double C22717 =
        (3 * (C49470 + C49502 * C49451) +
         C49441 * (2 * C49441 * C49502 + C49441 * (C49502 + C49564 * C49451))) /
        C49147;
    const double C49325 = C49313 + C49323;
    const double C7206 =
        (4 * (2 * C49441 * C49307 + C49441 * C49817) +
         C49441 * (3 * C49817 +
                   C49441 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49451)))) /
        C49147;
    const double C49865 = C49862 + C49864;
    const double C49507 = C49501 + C49505;
    const double C49589 = C49530 + C49586;
    const double C23622 =
        (4 * (2 * C49441 * C49495 + C49441 * C49851) +
         C49441 * (3 * C49851 +
                   C49441 * (2 * C49583 +
                             C49441 * (C49555 + C49271 * C49407 * C49451)))) /
        C49147;
    const double C49858 = C49856 + C49857;
    const double C49418 = C49406 + C49416;
    const double C49735 = C49391 + C49733;
    const double C49774 = C49271 * C49771;
    const double C49834 = C49830 + C49832;
    const double C50287 = C50252 / C50004;
    const double C50289 = C50256 / C49992;
    const double C251 = -C50288;
    const double C50291 = C50264 / C50004;
    const double C50292 = C50266 / C49992;
    const double C893 = -C50290;
    const double C50294 = C50268 / C50004;
    const double C50295 = C50270 / C49992;
    const double C1544 = -C50293;
    const double C50300 = C50281 / C49151;
    const double C50301 = C50283 / C49147;
    const double C33256 = -C50299;
    const double C24413 = C49166 * C259;
    const double C24409 = C49166 * C269;
    const double C24405 = C49166 * C255;
    const double C24401 = C49166 * C978;
    const double C24397 = C49166 * C970;
    const double C24394 = C49166 * C276;
    const double C24390 = C49166 * C258;
    const double C24386 = C49166 * C268;
    const double C24382 = C49166 * C254;
    const double C24734 = C49166 * C256;
    const double C25106 = C49166 * C777;
    const double C25101 = C49166 * C1439;
    const double C25097 = C49166 * C1431;
    const double C25093 = C49166 * C785;
    const double C25089 = C49166 * C776;
    const double C25530 = C49166 * C1092;
    const double C25526 = C49166 * C1084;
    const double C27460 = C49166 * C400;
    const double C27455 = C49166 * C410;
    const double C27451 = C49166 * C396;
    const double C27447 = C49166 * C417;
    const double C27443 = C49166 * C399;
    const double C27440 = C49166 * C409;
    const double C27436 = C49166 * C395;
    const double C27872 = C49166 * C397;
    const double C29874 = C49166 * C1723;
    const double C29870 = C49166 * C1715;
    const double C45988 = C49166 * C5324;
    const double C45984 = C49166 * C5319;
    const double C120 =
        (C49166 / C49152 - (0 * be) / C49147) / C49152 + (0 * ae) / C49147;
    const double C7817 = C49166 / C49152 - (0 * be) / C49147;
    const double C16813 = C49166 / C49152 + (0 * ae) / C49147;
    const double C49168 = C49165 / C49147;
    const double C2360 = C2163 * C259;
    const double C2356 = C2163 * C269;
    const double C2352 = C2163 * C255;
    const double C2348 = C2163 * C978;
    const double C2344 = C2163 * C970;
    const double C2341 = C2163 * C276;
    const double C2337 = C2163 * C258;
    const double C2333 = C2163 * C268;
    const double C2329 = C2163 * C254;
    const double C2693 = C2163 * C256;
    const double C3077 = C2163 * C777;
    const double C3072 = C2163 * C1439;
    const double C3068 = C2163 * C1431;
    const double C3064 = C2163 * C785;
    const double C3060 = C2163 * C776;
    const double C3517 = C2163 * C1092;
    const double C3513 = C2163 * C1084;
    const double C5365 = C2163 * C400;
    const double C5361 = C2163 * C410;
    const double C5357 = C2163 * C396;
    const double C5353 = C2163 * C1723;
    const double C5349 = C2163 * C1715;
    const double C5346 = C2163 * C417;
    const double C5342 = C2163 * C399;
    const double C5338 = C2163 * C409;
    const double C5334 = C2163 * C395;
    const double C5692 = C2163 * C397;
    const double C7221 = C2163 * C5324;
    const double C7217 = C2163 * C5319;
    const double C19667 = C19537 * C978;
    const double C19665 = C19537 * C970;
    const double C19663 = C19537 * C276;
    const double C19661 = C19537 * C258;
    const double C19659 = C19537 * C268;
    const double C19657 = C19537 * C254;
    const double C19653 = C19537 * C2313;
    const double C19652 = C19537 * C977;
    const double C19650 = C19537 * C969;
    const double C19648 = C19537 * C275;
    const double C19646 = C19537 * C257;
    const double C19644 = C19537 * C267;
    const double C19642 = C19537 * C253;
    const double C19882 = C19537 * C259;
    const double C19880 = C19537 * C269;
    const double C19878 = C19537 * C255;
    const double C20136 = C19537 * C1439;
    const double C20134 = C19537 * C1431;
    const double C20132 = C19537 * C785;
    const double C20130 = C19537 * C776;
    const double C20125 = C19537 * C3045;
    const double C20123 = C19537 * C1438;
    const double C20121 = C19537 * C1430;
    const double C20119 = C19537 * C784;
    const double C20117 = C19537 * C775;
    const double C20424 = C19537 * C2531;
    const double C20422 = C19537 * C1091;
    const double C20420 = C19537 * C1083;
    const double C21607 = C19537 * C1092;
    const double C21605 = C19537 * C1084;
    const double C21790 = C19537 * C1723;
    const double C21788 = C19537 * C1715;
    const double C21783 = C19537 * C417;
    const double C21781 = C19537 * C399;
    const double C21779 = C19537 * C409;
    const double C21777 = C19537 * C395;
    const double C21773 = C19537 * C4423;
    const double C21771 = C19537 * C1722;
    const double C21769 = C19537 * C1714;
    const double C21766 = C19537 * C416;
    const double C21764 = C19537 * C398;
    const double C21762 = C19537 * C408;
    const double C21760 = C19537 * C394;
    const double C21960 = C19537 * C777;
    const double C22118 = C19537 * C400;
    const double C22116 = C19537 * C410;
    const double C22114 = C19537 * C396;
    const double C22726 = C19537 * C6300;
    const double C23633 = C19537 * C5323;
    const double C23631 = C19537 * C5318;
    const double C38766 = C19537 * C5324;
    const double C38764 = C19537 * C5319;
    const double C39970 = C19537 * C7201;
    const double C50302 = C50244 - C50284;
    const double C50303 = C50248 - C50286;
    const double C2355 = C2157 * C284;
    const double C2351 = C2157 * C264;
    const double C2347 = C2157 * C981;
    const double C2343 = C2157 * C973;
    const double C2338 = C2157 * C287;
    const double C2334 = C2157 * C271;
    const double C2330 = C2157 * C283;
    const double C2326 = C2157 * C263;
    const double C3071 = C2157 * C1442;
    const double C3067 = C2157 * C1434;
    const double C3063 = C2157 * C790;
    const double C3059 = C2157 * C780;
    const double C3522 = C2157 * C2540;
    const double C3514 = C2157 * C1095;
    const double C3510 = C2157 * C1087;
    const double C5360 = C2157 * C425;
    const double C5356 = C2157 * C405;
    const double C5352 = C2157 * C1726;
    const double C5348 = C2157 * C1718;
    const double C5343 = C2157 * C428;
    const double C5339 = C2157 * C412;
    const double C5335 = C2157 * C424;
    const double C5331 = C2157 * C404;
    const double C6313 = C2157 * C4427;
    const double C7214 = C2157 * C5321;
    const double C19541 =
        (C49242 / C49152 - (0 * be) / C49147) / C49152 + (0 * ae) / C49147;
    const double C24231 = C49242 / C49152 - (0 * be) / C49147;
    const double C49241 = C49238 / C49147;
    const double C50310 = C50271 - C50297;
    const double C50311 = C50278 - C50298;
    const double C6317 = C2157 * C4435;
    const double C21776 = C49970 * C4435;
    const double C28689 = C50246 * C4435;
    const double C22735 = C49970 * C4437;
    const double C7218 = C2157 * C5327;
    const double C23632 = C49970 * C5327;
    const double C45985 = C50246 * C5327;
    const double C22727 = C49970 * C6306;
    const double C39971 = C49970 * C7207;
    const double C2353 = C49975 * C265;
    const double C2690 = C2157 * C265;
    const double C7971 = C7812 * C265;
    const double C16990 = C16807 * C265;
    const double C16967 = C16808 * C265;
    const double C17303 = C16806 * C265;
    const double C19877 = C49970 * C265;
    const double C24406 = C49975 * C265;
    const double C24731 = C50246 * C265;
    const double C2359 = C2157 * C272;
    const double C2336 = C49975 * C272;
    const double C16999 = C16806 * C272;
    const double C16978 = C16807 * C272;
    const double C19662 = C49970 * C272;
    const double C24412 = C50246 * C272;
    const double C24389 = C49975 * C272;
    const double C5358 = C49975 * C406;
    const double C5689 = C2157 * C406;
    const double C10867 = C7812 * C406;
    const double C22113 = C49970 * C406;
    const double C27452 = C49975 * C406;
    const double C27869 = C50246 * C406;
    const double C33578 = C16807 * C406;
    const double C33555 = C16808 * C406;
    const double C33891 = C16806 * C406;
    const double C5364 = C2157 * C413;
    const double C5341 = C49975 * C413;
    const double C21782 = C49970 * C413;
    const double C27457 = C50246 * C413;
    const double C27444 = C49975 * C413;
    const double C33587 = C16806 * C413;
    const double C33566 = C16807 * C413;
    const double C3074 = C2157 * C781;
    const double C3061 = C49975 * C781;
    const double C17667 = C16806 * C781;
    const double C17658 = C16807 * C781;
    const double C20129 = C49970 * C781;
    const double C25103 = C50246 * C781;
    const double C25090 = C49975 * C781;
    const double C19655 = C19537 * C2318;
    const double C20426 = C19537 * C2536;
    const double C20127 = C19537 * C3050;
    const double C2697 = C2163 * C270;
    const double C24738 = C49166 * C270;
    const double C2364 = C2163 * C277;
    const double C19884 = C19537 * C277;
    const double C24417 = C49166 * C277;
    const double C5696 = C2163 * C411;
    const double C27876 = C49166 * C411;
    const double C5369 = C2163 * C418;
    const double C22120 = C19537 * C418;
    const double C27464 = C49166 * C418;
    const double C3081 = C2163 * C786;
    const double C21962 = C19537 * C786;
    const double C25110 = C49166 * C786;
    const double C5378 = C2163 * C1724;
    const double C38974 = C19537 * C1724;
    const double C44203 = C49166 * C1724;
    const double C49334 = C49327 + C49328;
    const double C49324 = C49315 + C49322;
    const double C2537 = (C49293 + C49271 * C49726 + C49724 * ae +
                          (C49307 + C49271 * (C49271 * C49329 + C49387 * ae) +
                           C49271 * C49387 * ae) *
                              C49451) /
                         C49147;
    const double C49761 = C49291 + C49759;
    const double C21775 = C19537 * C4429;
    const double C22728 = C19537 * C6304;
    const double C39972 = C19537 * C7205;
    const double C2357 = C49975 * C285;
    const double C2694 = C2157 * C285;
    const double C7977 = C7812 * C285;
    const double C16996 = C16807 * C285;
    const double C16973 = C16808 * C285;
    const double C17309 = C16806 * C285;
    const double C19879 = C49970 * C285;
    const double C24410 = C49975 * C285;
    const double C24735 = C50246 * C285;
    const double C2363 = C2157 * C288;
    const double C2340 = C49975 * C288;
    const double C17005 = C16806 * C288;
    const double C16984 = C16807 * C288;
    const double C19664 = C49970 * C288;
    const double C24416 = C50246 * C288;
    const double C24393 = C49975 * C288;
    const double C5362 = C49975 * C426;
    const double C5693 = C2157 * C426;
    const double C10873 = C7812 * C426;
    const double C22115 = C49970 * C426;
    const double C27456 = C49975 * C426;
    const double C27873 = C50246 * C426;
    const double C33584 = C16807 * C426;
    const double C33561 = C16808 * C426;
    const double C33897 = C16806 * C426;
    const double C5368 = C2157 * C429;
    const double C5345 = C49975 * C429;
    const double C21784 = C49970 * C429;
    const double C27461 = C50246 * C429;
    const double C27448 = C49975 * C429;
    const double C33593 = C16806 * C429;
    const double C33572 = C16807 * C429;
    const double C3078 = C2157 * C791;
    const double C3065 = C49975 * C791;
    const double C17673 = C16806 * C791;
    const double C17664 = C16807 * C791;
    const double C20131 = C49970 * C791;
    const double C25107 = C50246 * C791;
    const double C25094 = C49975 * C791;
    const double C5375 = C2157 * C1727;
    const double C5354 = C49975 * C1727;
    const double C21789 = C49970 * C1727;
    const double C29873 = C49975 * C1727;
    const double C35371 = C16807 * C1727;
    const double C44200 = C50246 * C1727;
    const double C49379 = C49362 + C49378;
    const double C49476 = C49473 + C49474;
    const double C2541 =
        (C49304 + C49320 * C49451 + ae * (C49472 + C49271 * C49392 * C49451) +
         C49271 * (ae * (C49377 + C49392 * C49451) +
                   C49271 * (C49320 + C49344 * C49451))) /
        C49151;
    const double C1088 = (C49271 * C49369 + C49472 * C49451) / C49147;
    const double C2370 = C2157 * C982;
    const double C2349 = C49975 * C982;
    const double C17931 = C16807 * C982;
    const double C19668 = C49970 * C982;
    const double C24423 = C50246 * C982;
    const double C24402 = C49975 * C982;
    const double C3516 = C49975 * C1096;
    const double C5907 = C2157 * C1096;
    const double C18089 = C16807 * C1096;
    const double C21608 = C49970 * C1096;
    const double C25529 = C49975 * C1096;
    const double C27469 = C50246 * C1096;
    const double C3086 = C2157 * C1443;
    const double C3073 = C49975 * C1443;
    const double C18587 = C16807 * C1443;
    const double C20135 = C49970 * C1443;
    const double C25115 = C50246 * C1443;
    const double C25102 = C49975 * C1443;
    const double C2366 = C2157 * C974;
    const double C2345 = C49975 * C974;
    const double C17925 = C16807 * C974;
    const double C19666 = C49970 * C974;
    const double C24419 = C50246 * C974;
    const double C24398 = C49975 * C974;
    const double C3082 = C2157 * C1435;
    const double C3069 = C49975 * C1435;
    const double C18581 = C16807 * C1435;
    const double C20133 = C49970 * C1435;
    const double C25111 = C50246 * C1435;
    const double C25098 = C49975 * C1435;
    const double C5371 = C2157 * C1719;
    const double C5350 = C49975 * C1719;
    const double C21787 = C49970 * C1719;
    const double C29869 = C49975 * C1719;
    const double C35365 = C16807 * C1719;
    const double C44196 = C50246 * C1719;
    const double C3350 = C2157 * C2322;
    const double C19656 = C49970 * C2322;
    const double C25371 = C50246 * C2322;
    const double C4028 = C2157 * C3054;
    const double C20128 = C49970 * C3054;
    const double C26033 = C50246 * C3054;
    const double C20429 = C49970 * C3507;
    const double C3346 = C2157 * C2316;
    const double C19654 = C49970 * C2316;
    const double C25367 = C50246 * C2316;
    const double C3518 = C2157 * C2534;
    const double C20423 = C49970 * C2534;
    const double C25531 = C50246 * C2534;
    const double C4024 = C2157 * C3048;
    const double C20126 = C49970 * C3048;
    const double C26029 = C50246 * C3048;
    const double C22733 = C49970 * C4431;
    const double C49560 = C49553 + C49554;
    const double C49506 = C49503 + C49504;
    const double C39969 = C49970 * C7203;
    const double C49619 = C49617 + C49618;
    const double C1085 = C49271 * C49614 + C49732 * C49451;
    const double C5898 =
        2 * C49441 * C49732 + C49441 * (C49732 + C49271 * C49413 * C49451);
    const double C49734 = C49730 + C49731;
    const double C2373 = C2163 * C979;
    const double C19888 = C19537 * C979;
    const double C24426 = C49166 * C979;
    const double C5910 = C2163 * C1093;
    const double C21966 = C19537 * C1093;
    const double C27472 = C49166 * C1093;
    const double C3089 = C2163 * C1440;
    const double C25118 = C49166 * C1440;
    const double C31062 = C19537 * C1440;
    const double C2369 = C2163 * C971;
    const double C19886 = C19537 * C971;
    const double C24422 = C49166 * C971;
    const double C3085 = C2163 * C1432;
    const double C25114 = C49166 * C1432;
    const double C31060 = C19537 * C1432;
    const double C5374 = C2163 * C1716;
    const double C38972 = C19537 * C1716;
    const double C44199 = C49166 * C1716;
    const double C2319 =
        (3 * (C49293 + C49271 * C49726 + C49724 * ae) +
         C49271 * (2 * C49726 +
                   C49271 * (C49307 + C49271 * (C49271 * C49329 + C49387 * ae) +
                             C49271 * C49387 * ae) +
                   C49727 * ae) +
         (2 * C49724 + C49271 * C49727) * ae) /
        C49147;
    const double C3051 =
        (C49441 * (2 * C49726 +
                   C49271 * (C49307 + C49271 * (C49271 * C49329 + C49387 * ae) +
                             C49271 * C49387 * ae) +
                   C49727 * ae)) /
        C49147;
    const double C2314 = 3 * (C49612 + C49373 * C49467) +
                         C49271 * (2 * C49724 + C49271 * C49727);
    const double C2532 = C49612 + C49373 * C49467 + C49727 * C49451;
    const double C3046 = C49441 * (2 * C49724 + C49271 * C49727);
    const double C4426 =
        2 * C49441 * C49727 + C49441 * (C49727 + C49771 * C49451);
    const double C6316 = C2163 * C4424;
    const double C21792 = C19537 * C4424;
    const double C28688 = C49166 * C4424;
    const double C49773 = C49271 * C49769;
    const double C4430 =
        (2 * C49441 * C49726 + C49441 * (C49726 + C49769 * C49451)) / C49147;
    const double C6305 =
        (3 * (C49726 + C49769 * C49451) +
         C49441 * (2 * C49441 * C49769 +
                   C49441 * (C49769 + (C49271 * C49272 * C49341 + C49409 * ae) *
                                          C49451))) /
        C49147;
    const double C7202 =
        4 * (2 * C49441 * C49373 + C49441 * C49946) +
        C49441 * (3 * C49946 + C49441 * (2 * C49441 * C49387 +
                                         C49441 * (C49387 + C49409 * C49451)));
    const double C49395 = C49374 + C49394;
    const double C49477 = C49377 + C49475;
    const double C49515 = 2 * C49509;
    const double C49513 = ae * C49509;
    const double C4428 =
        (2 * C49441 * C49472 + C49441 * (C49472 + C49509 * C49451)) / C49147;
    const double C6303 =
        (3 * (C49472 + C49509 * C49451) +
         C49441 * (2 * C49441 * C49509 +
                   C49441 * (C49509 + C49271 * C49414 * C49451))) /
        C49147;
    const double C49537 = ae * C49535;
    const double C49811 = C49377 + C49810;
    const double C7216 = C49975 * C5322;
    const double C38763 = C49970 * C5322;
    const double C45983 = C49975 * C5322;
    const double C49762 = C49758 + C49760;
    const double C22734 = C19537 * C4425;
    const double C23621 =
        4 * (2 * C49441 * C49753 + C49441 * C49954) +
        C49441 * (3 * C49954 +
                  C49441 * (2 * C49441 * C49823 +
                            C49441 * (C49823 + C49271 * C49405 * C49451)));
    const double C49833 = C49301 + C49831;
    const double C49854 = C49755 + C49853;
    const double C49961 = C49958 + C49960;
    const double C49349 = C49337 + C49347;
    const double C49348 = C49339 + C49346;
    const double C49514 = C49510 + C49511;
    const double C49527 = C49320 + C49526;
    const double C49538 = C49271 * C49536;
    const double C49568 = C49565 + C49566;
    const double C49581 = C49579 + C49580;
    const double C49596 = C49594 + C49595;
    const double C49591 = C49271 * C49590;
    const double C49419 = C49385 + C49417;
    const double C49516 = C49392 + C49512;
    const double C49569 = C49563 + C49567;
    const double C140 = (4 * (2 * C49293 + C49272 * C49305) +
                         C49272 * (3 * C49305 + C49272 * C49325)) /
                        C49147;
    const double C419 =
        (2 * C49293 + C49272 * C49305 + C49325 * C49451) / C49147;
    const double C421 = (C49441 * (3 * C49305 + C49272 * C49325)) / C49147;
    const double C39962 =
        (5 * (3 * C49814 + C49441 * C49865) +
         C49441 * (4 * C49865 +
                   C49441 * (3 * C49863 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49451))))) /
        C49147;
    const double C4017 =
        (3 * (C49489 + ae * C49441 * C49495 + C49271 * C49533) +
         ae * C49441 * C49507 +
         C49271 * (2 * C49533 + ae * C49441 * C49502 +
                   C49271 * (C49530 + ae * C49441 * C49271 * C49385 +
                             C49271 * (ae * C49441 * C49385 +
                                       C49271 * C49441 * C49340)))) /
        C49151;
    const double C3335 = (4 * (2 * C49464 + C49271 * C49470) +
                          C49271 * (3 * C49470 + C49271 * C49507)) /
                         C49147;
    const double C3503 =
        (2 * C49464 + C49271 * C49470 + C49507 * C49451) / C49147;
    const double C4013 = (C49441 * (3 * C49470 + C49271 * C49507)) / C49147;
    const double C39961 =
        (5 * (3 * C49808 + C49441 * C49858) +
         C49441 * (4 * C49858 +
                   C49441 * (3 * C49577 +
                             C49441 * (2 * C49584 +
                                       C49441 * (C49385 + C49407 * C49451))))) /
        C49147;
    const double C49420 = C49418 * be;
    const double C49623 = C49272 * C49418;
    const double C2315 = 3 * (C49614 + C49391 * C49467) +
                         C49271 * (2 * C49732 + C49271 * C49735);
    const double C2533 = C49614 + C49391 * C49467 + C49735 * C49451;
    const double C3047 = C49441 * (2 * C49732 + C49271 * C49735);
    const double C49776 = C49772 + C49774;
    const double C49836 = C49271 * C49834;
    const double C50304 = C50251 - C50287;
    const double C50305 = C50255 - C50289;
    const double C50306 = C50258 - C50291;
    const double C50307 = C50265 - C50292;
    const double C50308 = C50260 - C50294;
    const double C50309 = C50269 - C50295;
    const double C50312 = C50273 - C50300;
    const double C50313 = C50282 - C50301;
    const double C8001 = C7817 * C270;
    const double C7995 = C7817 * C256;
    const double C7989 = C7817 * C277;
    const double C7983 = C7817 * C259;
    const double C7978 = C7817 * C269;
    const double C7972 = C7817 * C255;
    const double C8669 = C7817 * C786;
    const double C8663 = C7817 * C777;
    const double C8938 = C7817 * C979;
    const double C8932 = C7817 * C971;
    const double C9096 = C7817 * C1093;
    const double C9594 = C7817 * C1440;
    const double C9588 = C7817 * C1432;
    const double C10897 = C7817 * C411;
    const double C10891 = C7817 * C397;
    const double C10885 = C7817 * C418;
    const double C10879 = C7817 * C400;
    const double C10874 = C7817 * C410;
    const double C10868 = C7817 * C396;
    const double C12686 = C7817 * C1724;
    const double C12680 = C7817 * C1716;
    const double C16997 = C16813 * C270;
    const double C16991 = C16813 * C256;
    const double C16985 = C16813 * C277;
    const double C16979 = C16813 * C259;
    const double C16974 = C16813 * C269;
    const double C16968 = C16813 * C255;
    const double C17665 = C16813 * C786;
    const double C17659 = C16813 * C777;
    const double C17934 = C16813 * C979;
    const double C17928 = C16813 * C971;
    const double C18092 = C16813 * C1093;
    const double C18590 = C16813 * C1440;
    const double C18584 = C16813 * C1432;
    const double C33585 = C16813 * C411;
    const double C33579 = C16813 * C397;
    const double C33573 = C16813 * C418;
    const double C33567 = C16813 * C400;
    const double C33562 = C16813 * C410;
    const double C33556 = C16813 * C396;
    const double C35374 = C16813 * C1724;
    const double C35368 = C16813 * C1716;
    const double C49170 = C49970 - C49168;
    const double C19676 = C19651 - C19652;
    const double C20310 = C19652 - C19651;
    const double C19675 = C19649 - C19650;
    const double C20309 = C19650 - C19649;
    const double C19674 = C19647 - C19648;
    const double C19673 = C19645 - C19646;
    const double C20762 = C20123 - C20124;
    const double C23229 = C20124 - C20123;
    const double C20761 = C20121 - C20122;
    const double C23228 = C20122 - C20121;
    const double C22318 = C20119 - C20120;
    const double C22316 = C20120 - C20119;
    const double C22317 = C20117 - C20118;
    const double C22315 = C20118 - C20117;
    const double C21768 = C20421 - C20422;
    const double C22320 = C20422 - C20421;
    const double C21767 = C20419 - C20420;
    const double C22319 = C20420 - C20419;
    const double C22723 = C21774 - C21773;
    const double C22721 = C21773 - C21774;
    const double C23627 = C21771 - C21772;
    const double C38758 = C21772 - C21771;
    const double C23626 = C21769 - C21770;
    const double C38757 = C21770 - C21769;
    const double C21796 = C21765 - C21766;
    const double C21795 = C21763 - C21764;
    const double C39967 = C23631 - C23630;
    const double C8009 = C50302 * C288;
    const double C8003 = C50302 * C272;
    const double C7998 = C50302 * C284;
    const double C7992 = C50302 * C264;
    const double C7986 = C50302 * C287;
    const double C7980 = C50302 * C271;
    const double C7973 = C50302 * C283;
    const double C7967 = C50302 * C263;
    const double C8313 = C50302 * C285;
    const double C8307 = C50302 * C265;
    const double C8677 = C50302 * C791;
    const double C8671 = C50302 * C781;
    const double C8666 = C50302 * C790;
    const double C8660 = C50302 * C780;
    const double C8933 = C50302 * C981;
    const double C8927 = C50302 * C973;
    const double C9091 = C50302 * C1095;
    const double C9085 = C50302 * C1087;
    const double C9589 = C50302 * C1442;
    const double C9583 = C50302 * C1434;
    const double C10905 = C50302 * C429;
    const double C10899 = C50302 * C413;
    const double C10894 = C50302 * C425;
    const double C10888 = C50302 * C405;
    const double C10882 = C50302 * C428;
    const double C10876 = C50302 * C412;
    const double C10869 = C50302 * C424;
    const double C10863 = C50302 * C404;
    const double C11209 = C50302 * C426;
    const double C11203 = C50302 * C406;
    const double C12681 = C50302 * C1726;
    const double C12675 = C50302 * C1718;
    const double C105 = (C50302 * C49965) / C49147 + (C50246 - C50285) / C49152;
    const double C8000 = C50303 * C285;
    const double C7994 = C50303 * C265;
    const double C7988 = C50303 * C288;
    const double C7982 = C50303 * C272;
    const double C7975 = C50303 * C284;
    const double C7969 = C50303 * C264;
    const double C8668 = C50303 * C791;
    const double C8662 = C50303 * C781;
    const double C8935 = C50303 * C982;
    const double C8929 = C50303 * C974;
    const double C9093 = C50303 * C1096;
    const double C9591 = C50303 * C1443;
    const double C9585 = C50303 * C1435;
    const double C10896 = C50303 * C426;
    const double C10890 = C50303 * C406;
    const double C10884 = C50303 * C429;
    const double C10878 = C50303 * C413;
    const double C10871 = C50303 * C425;
    const double C10865 = C50303 * C405;
    const double C12683 = C50303 * C1727;
    const double C12677 = C50303 * C1719;
    const double C106 =
        (C50303 * C49965) / C49147 + (2 * C49975 + C50302) / C49152;
    const double C107 = (C49965 * C49975) / C49156 + C50303 / C49152;
    const double C49244 = C50120 - C49241;
    const double C19533 =
        (C50310 * C50165) / C49147 + (C50274 - C50296) / C49152;
    const double C19534 =
        (C50311 * C50165) / C49147 + (2 * C50170 + C50310) / C49152;
    const double C19535 = (C50165 * C50170) / C49156 + C50311 / C49152;
    const double C39968 = C23633 - C23632;
    const double C2375 = C2336 - C2337;
    const double C19677 = C19661 - C19662;
    const double C24428 = C24389 - C24390;
    const double C5380 = C5341 - C5342;
    const double C21799 = C21781 - C21782;
    const double C44189 = C27444 - C27443;
    const double C14350 = C3060 - C3061;
    const double C14346 = C3061 - C3060;
    const double C22323 = C20129 - C20130;
    const double C22321 = C20130 - C20129;
    const double C28140 = C25089 - C25090;
    const double C28136 = C25090 - C25089;
    const double C22732 = C20426 - C20425;
    const double C23231 = C20425 - C20426;
    const double C148 =
        (4 * (2 * C49304 + be * C49305 + C49272 * C49324) +
         be * (3 * C49305 + C49272 * C49325) +
         C49272 * (3 * C49324 + be * C49325 +
                   C49272 * (2 * C49320 + be * C49321 +
                             C49272 * (C49316 + be * C49272 * C49317 +
                                       C49272 * (be * C49317 +
                                                 C49272 * std::pow(C49276, 7) *
                                                     bs[7] * C49283))))) /
        C49151;
    const double C286 =
        (ae * (2 * (C49272 * C49362 + C49358 * be) +
               C49272 *
                   (C49362 +
                    C49272 * (C49272 * C49295 * C49296 * C49357 + C49361 * be) +
                    C49272 * C49361 * be) +
               (C49358 + C49361 * C49297) * be) +
         C49271 * (2 * C49304 + be * C49305 + C49272 * C49324)) /
        C49151;
    const double C427 =
        ((zP - zQ) * (2 * C49304 + be * C49305 + C49272 * C49324)) / C49151;
    const double C430 = (C49290 + be * C49293 + C49272 * C49304 +
                         C49324 * std::pow(zP - zQ, 2)) /
                        C49151;
    const double C3525 = C2163 * C2537;
    const double C21612 = C19537 * C2537;
    const double C25538 = C49166 * C2537;
    const double C49763 = C49761 + C49756;
    const double C22724 = C21776 - C21775;
    const double C22722 = C21775 - C21776;
    const double C2377 = C2340 - C2341;
    const double C19678 = C19663 - C19664;
    const double C24430 = C24393 - C24394;
    const double C5382 = C5345 - C5346;
    const double C21800 = C21783 - C21784;
    const double C44191 = C27448 - C27447;
    const double C14352 = C3064 - C3065;
    const double C14348 = C3065 - C3064;
    const double C22324 = C20131 - C20132;
    const double C22322 = C20132 - C20131;
    const double C28142 = C25093 - C25094;
    const double C28138 = C25094 - C25093;
    const double C7213 = C5353 - C5354;
    const double C38762 = C21790 - C21789;
    const double C45980 = C29874 - C29873;
    const double C49380 = C49379 + C49375;
    const double C3524 = C49975 * C2541;
    const double C21611 = C49970 * C2541;
    const double C25537 = C49975 * C2541;
    const double C3512 = C49975 * C1088;
    const double C5903 = C2157 * C1088;
    const double C9087 = C50303 * C1088;
    const double C18083 = C16807 * C1088;
    const double C21606 = C49970 * C1088;
    const double C25525 = C49975 * C1088;
    const double C27465 = C50246 * C1088;
    const double C3345 = C2348 - C2349;
    const double C19680 = C19667 - C19668;
    const double C25366 = C24401 - C24402;
    const double C6312 = C3517 - C3516;
    const double C14890 = C3516 - C3517;
    const double C21786 = C21607 - C21608;
    const double C22326 = C21608 - C21607;
    const double C28684 = C25529 - C25530;
    const double C28680 = C25530 - C25529;
    const double C4023 = C3072 - C3073;
    const double C15542 = C3073 - C3072;
    const double C30766 = C20136 - C20135;
    const double C31404 = C20135 - C20136;
    const double C26028 = C25101 - C25102;
    const double C29346 = C25102 - C25101;
    const double C3343 = C2344 - C2345;
    const double C19679 = C19665 - C19666;
    const double C25364 = C24397 - C24398;
    const double C4021 = C3068 - C3069;
    const double C15540 = C3069 - C3068;
    const double C30765 = C20134 - C20133;
    const double C31403 = C20133 - C20134;
    const double C26026 = C25097 - C25098;
    const double C29344 = C25098 - C25097;
    const double C7211 = C5349 - C5350;
    const double C38761 = C21788 - C21787;
    const double C45978 = C29870 - C29869;
    const double C20312 = C19655 - C19656;
    const double C20764 = C20127 - C20128;
    const double C32282 = C20128 - C20127;
    const double C20311 = C19653 - C19654;
    const double C22731 = C20424 - C20423;
    const double C23230 = C20423 - C20424;
    const double C20763 = C20125 - C20126;
    const double C32281 = C20126 - C20125;
    const double C3339 =
        (4 * (2 * C49468 + ae * C49470 + C49271 * C49506) +
         ae * (3 * C49470 + C49271 * C49507) +
         C49271 *
             (3 * C49506 + ae * C49507 +
              C49271 * (2 * C49500 + ae * C49502 +
                        C49271 * (C49316 + ae * C49271 * C49385 +
                                  C49271 * (ae * C49385 + C49271 * C49340))))) /
        C49151;
    const double C278 =
        (2 * C49293 + C49272 * C49305 +
         C49271 * (C49271 * C49325 + C49619 * ae) + C49271 * C49619 * ae) /
        C49147;
    const double C280 = (C49271 * (3 * C49305 + C49272 * C49325) +
                         (3 * C49614 + C49272 * C49619) * ae) /
                        C49147;
    const double C787 = (C49441 * (C49271 * C49325 + C49619 * ae)) / C49147;
    const double C127 = 4 * (2 * C49612 + C49272 * C49614) +
                        C49272 * (3 * C49614 + C49272 * C49619);
    const double C260 = 2 * C49612 + C49272 * C49614 + C49619 * C49467;
    const double C261 = C49271 * (3 * C49614 + C49272 * C49619);
    const double C401 = 2 * C49612 + C49272 * C49614 + C49619 * C49451;
    const double C402 = C49441 * (3 * C49614 + C49272 * C49619);
    const double C778 = C49441 * C49271 * C49619;
    const double C972 =
        2 * C49271 * C49619 + C49271 * (C49619 + C49418 * C49467);
    const double C1086 = C49271 * C49619 + C49271 * C49418 * C49451;
    const double C1433 = C49441 * (C49619 + C49418 * C49467);
    const double C1717 =
        2 * C49441 * C49619 + C49441 * (C49619 + C49418 * C49451);
    const double C5906 = C2163 * C1085;
    const double C9090 = C7817 * C1085;
    const double C18086 = C16813 * C1085;
    const double C21964 = C19537 * C1085;
    const double C27468 = C49166 * C1085;
    const double C2321 =
        (3 * (C49305 + C49271 * C49734 + C49732 * ae) +
         C49271 * (2 * C49734 +
                   C49271 * (C49321 + C49271 * (C49271 * C49345 + C49413 * ae) +
                             C49271 * C49413 * ae) +
                   C49735 * ae) +
         (2 * C49732 + C49271 * C49735) * ae) /
        C49147;
    const double C2539 = (C49305 + C49271 * C49734 + C49732 * ae +
                          (C49321 + C49271 * (C49271 * C49345 + C49413 * ae) +
                           C49271 * C49413 * ae) *
                              C49451) /
                         C49147;
    const double C3053 =
        (C49441 * (2 * C49734 +
                   C49271 * (C49321 + C49271 * (C49271 * C49345 + C49413 * ae) +
                             C49271 * C49413 * ae) +
                   C49735 * ae)) /
        C49147;
    const double C5900 =
        (2 * C49441 * C49734 +
         C49441 * (C49734 + (C49271 * C49345 + C49413 * ae) * C49451)) /
        C49147;
    const double C3353 = C2163 * C2319;
    const double C19672 = C19537 * C2319;
    const double C25374 = C49166 * C2319;
    const double C4031 = C2163 * C3051;
    const double C20140 = C19537 * C3051;
    const double C26036 = C49166 * C3051;
    const double C3349 = C2163 * C2314;
    const double C19670 = C19537 * C2314;
    const double C25370 = C49166 * C2314;
    const double C3521 = C2163 * C2532;
    const double C21610 = C19537 * C2532;
    const double C25534 = C49166 * C2532;
    const double C4027 = C2163 * C3046;
    const double C20138 = C19537 * C3046;
    const double C26032 = C49166 * C3046;
    const double C49775 = C49307 + C49773;
    const double C6320 = C2163 * C4430;
    const double C21794 = C19537 * C4430;
    const double C28692 = C49166 * C4430;
    const double C49396 = C49395 + C49390;
    const double C2323 =
        (3 * (C49304 + ae * C49472 + C49271 * C49476) +
         ae * (2 * C49472 + C49271 * C49477) +
         C49271 * (2 * C49476 + ae * C49477 +
                   C49271 * (C49320 + ae * C49271 * C49392 +
                             C49271 * (ae * C49392 + C49271 * C49344)))) /
        C49151;
    const double C3055 =
        (2 * (ae * C49441 * C49377 + C49271 * C49491) + ae * C49441 * C49477 +
         C49271 *
             (C49491 + ae * C49441 * C49271 * C49392 +
              C49271 * (ae * C49441 * C49392 + C49271 * C49441 * C49344))) /
        C49151;
    const double C2317 = (3 * (C49369 + C49377 * C49467) +
                          C49271 * (2 * C49472 + C49271 * C49477)) /
                         C49147;
    const double C2535 = (C49369 + C49377 * C49467 + C49477 * C49451) / C49147;
    const double C3049 = (C49441 * (2 * C49472 + C49271 * C49477)) / C49147;
    const double C49517 = C49320 + C49513;
    const double C6315 = C49975 * C4428;
    const double C21791 = C49970 * C4428;
    const double C28687 = C49975 * C4428;
    const double C7204 =
        (4 * (2 * C49441 * C49377 + C49441 * C49811) +
         C49441 *
             (3 * C49811 +
              C49441 * (2 * C49535 + C49441 * (C49392 + C49414 * C49451)))) /
        C49147;
    const double C3333 = 4 * (2 * C49717 + C49271 * C49720) +
                         C49271 * (3 * C49720 + C49271 * C49762);
    const double C3501 = 2 * C49717 + C49271 * C49720 + C49762 * C49451;
    const double C4011 = C49441 * (3 * C49720 + C49271 * C49762);
    const double C21030 =
        2 * C49441 * C49762 + C49441 * (C49762 + C49834 * C49451);
    const double C49835 = C49833 + C49828;
    const double C23623 =
        (4 * (2 * C49441 * C49755 + C49441 * C49854) +
         C49441 * (3 * C49854 + C49441 * (2 * C49441 * C49827 +
                                          C49441 * (C49827 + (C49271 * C49341 +
                                                              C49405 * ae) *
                                                                 C49451)))) /
        C49147;
    const double C39960 =
        5 * (3 * C49943 + C49441 * C49961) +
        C49441 * (4 * C49961 +
                  C49441 * (3 * C49959 +
                            C49441 * (2 * C49441 * C49384 +
                                      C49441 * (C49384 + C49405 * C49451))));
    const double C49351 = C49272 * C49349;
    const double C980 =
        (2 * (C49271 * C49325 + C49619 * ae) +
         C49271 * (C49325 + C49271 * (C49271 * C49349 + C49418 * ae) +
                   C49271 * C49418 * ae) +
         (C49619 + C49418 * C49467) * ae) /
        C49147;
    const double C1094 = (C49271 * C49325 + C49619 * ae +
                          (C49271 * C49349 + C49418 * ae) * C49451) /
                         C49147;
    const double C1441 =
        (C49441 * (C49325 + C49271 * (C49271 * C49349 + C49418 * ae) +
                   C49271 * C49418 * ae)) /
        C49147;
    const double C1725 =
        (2 * C49441 * C49325 + C49441 * (C49325 + C49349 * C49451)) / C49147;
    const double C49350 = C49272 * C49348;
    const double C49481 = C49271 * C49348;
    const double C49493 = C49441 * C49348;
    const double C1728 =
        (2 * C49441 * C49324 + C49441 * (C49324 + C49348 * C49451)) / C49151;
    const double C49518 = C49271 * C49514;
    const double C4436 =
        (ae * (2 * C49441 * C49377 + C49441 * (C49377 + C49392 * C49451)) +
         C49271 * (2 * C49491 + C49441 * C49527)) /
        C49151;
    const double C4438 =
        (2 * C49491 + C49441 * C49527 +
         ae * (2 * C49441 * C49509 +
               C49441 * (C49509 + C49271 * C49414 * C49451)) +
         C49271 * (ae * (2 * C49535 + C49441 * (C49392 + C49414 * C49451)) +
                   C49271 * (2 * C49536 +
                             C49441 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49451)))) /
        C49151;
    const double C5328 = (3 * (C49304 + C49320 * C49451) +
                          C49441 * (2 * C49491 + C49441 * C49527)) /
                         C49151;
    const double C6307 =
        (ae * (3 * (C49377 + C49392 * C49451) +
               C49441 * (2 * C49535 + C49441 * (C49392 + C49414 * C49451))) +
         C49271 * (3 * C49527 +
                   C49441 * (2 * C49536 +
                             C49441 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49451)))) /
        C49151;
    const double C7208 =
        (4 * (2 * C49491 + C49441 * C49527) +
         C49441 * (3 * C49527 +
                   C49441 * (2 * C49536 +
                             C49441 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49451)))) /
        C49151;
    const double C49539 = C49537 + C49538;
    const double C49570 = C49271 * C49568;
    const double C21033 =
        (2 * (ae * (2 * C49529 + C49441 * C49577) + C49271 * C49596) +
         ae * (2 * C49441 * C49502 + C49441 * (C49502 + C49564 * C49451)) +
         C49271 *
             (C49596 +
              ae * (2 * C49583 + C49441 * (C49555 + C49271 * C49407 * C49451)) +
              C49271 *
                  (ae * (2 * C49584 + C49441 * (C49385 + C49407 * C49451)) +
                   C49271 * (2 * C49585 +
                             C49441 * (C49340 + std::pow(C49274, 8) * bs[8] *
                                                    C49283 * C49451))))) /
        C49151;
    const double C22719 =
        (3 * C49524 + C49441 * C49596 +
         ae * (3 * (C49495 + C49555 * C49451) +
               C49441 * (2 * C49583 +
                         C49441 * (C49555 + C49271 * C49407 * C49451))) +
         C49271 * (ae * (3 * C49577 +
                         C49441 * (2 * C49584 +
                                   C49441 * (C49385 + C49407 * C49451))) +
                   C49271 * (3 * C49578 +
                             C49441 * (2 * C49585 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49451))))) /
        C49151;
    const double C23624 =
        (ae * (4 * (2 * C49529 + C49441 * C49577) +
               C49441 * (3 * C49577 +
                         C49441 * (2 * C49584 +
                                   C49441 * (C49385 + C49407 * C49451)))) +
         C49271 * (4 * C49596 +
                   C49441 * (3 * C49578 +
                             C49441 * (2 * C49585 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49451))))) /
        C49151;
    const double C39963 =
        (5 * (3 * C49524 + C49441 * C49596) +
         C49441 * (4 * C49596 +
                   C49441 * (3 * C49578 +
                             C49441 * (2 * C49585 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49451))))) /
        C49151;
    const double C49592 = C49589 + C49591;
    const double C49421 = C49419 + C49412;
    const double C49519 = C49271 * C49516;
    const double C3508 =
        (2 * (ae * (C49377 + C49392 * C49451) + C49271 * C49527) +
         ae * (C49477 + C49516 * C49451) +
         C49271 * (C49527 + ae * (C49509 + C49271 * C49414 * C49451) +
                   C49271 * (ae * (C49392 + C49414 * C49451) +
                             C49271 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49451)))) /
        C49151;
    const double C4432 =
        (2 * C49441 * C49477 + C49441 * (C49477 + C49516 * C49451)) / C49147;
    const double C49571 = C49271 * C49569;
    const double C20417 =
        (3 * (C49524 + ae * (C49495 + C49555 * C49451) + C49271 * C49581) +
         ae * (C49507 + C49569 * C49451) +
         C49271 * (2 * C49581 + ae * (C49502 + C49564 * C49451) +
                   C49271 * (C49578 + ae * (C49555 + C49271 * C49407 * C49451) +
                             C49271 * (ae * (C49385 + C49407 * C49451) +
                                       C49271 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49451))))) /
        C49151;
    const double C21031 =
        (2 * C49441 * C49507 + C49441 * (C49507 + C49569 * C49451)) / C49147;
    const double C5704 = C2163 * C419;
    const double C10910 = C7817 * C419;
    const double C33598 = C16813 * C419;
    const double C44513 = C49166 * C419;
    const double C11214 = C7817 * C421;
    const double C33902 = C16813 * C421;
    const double C20767 = C49970 * C4017;
    const double C20313 = C49970 * C3335;
    const double C20427 = C49970 * C3503;
    const double C20765 = C49970 * C4013;
    const double C49624 = C49622 + C49623;
    const double C3334 = 4 * (2 * C49724 + C49271 * C49727) +
                         C49271 * (3 * C49727 + C49271 * C49776);
    const double C3502 = 2 * C49724 + C49271 * C49727 + C49776 * C49451;
    const double C4012 = C49441 * (3 * C49727 + C49271 * C49776);
    const double C49838 = C49826 + C49836;
    const double C113 = (C50304 * C49995) / C49992 + (C50253 - C50288) / C49994;
    const double C114 =
        (C50305 * C49995) / C49992 + (2 * C50006 + C50304) / C49994;
    const double C115 = (C49995 * C50006) / C50009 + C50305 / C49994;
    const double C964 = (C50306 * C50066) / C49992 + (C50261 - C50290) / C49994;
    const double C965 =
        (C50307 * C50066) / C49992 + (2 * C50071 + C50306) / C49994;
    const double C966 = (C50066 * C50071) / C50009 + C50307 / C49994;
    const double C1710 =
        (C50308 * C50094) / C49992 + (C50262 - C50293) / C49994;
    const double C1711 =
        (C50309 * C50094) / C49992 + (2 * C50099 + C50308) / C49994;
    const double C1712 = (C50094 * C50099) / C50009 + C50309 / C49994;
    const double C38554 =
        (C50312 * C50191) / C49147 + (C50275 - C50299) / C49152;
    const double C38555 =
        (C50313 * C50191) / C49147 + (2 * C50196 + C50312) / C49152;
    const double C38556 = (C50191 * C50196) / C49156 + C50313 / C49152;
    const double C49171 = C49170 * ae;
    const double C2162 = (-C49148 / C49147) / C49152 - (C49170 * be) / C49147;
    const double C21798 = C21768 * C50170;
    const double C46873 = C21768 * C50170;
    const double C22730 = C22320 * C16809;
    const double C39368 = C22320 * C50120;
    const double C47761 = C22320 * C50274;
    const double C21797 = C21767 * C16815;
    const double C46872 = C21767 * C7819;
    const double C22729 = C22319 * C16814;
    const double C39367 = C22319 * C121;
    const double C47760 = C22319 * C7818;
    const double C23628 = C22721 * C16815;
    const double C39369 = C22721 * C121;
    const double C48645 = C22721 * C7819;
    const double C23635 = C23627 * C16809;
    const double C39966 = C23627 * C50120;
    const double C48644 = C23627 * C50274;
    const double C38769 = C38758 * C50120;
    const double C23634 = C23626 * C16814;
    const double C39965 = C23626 * C121;
    const double C48643 = C23626 * C7818;
    const double C38768 = C38757 * C121;
    const double C21804 = C21796 * C16809;
    const double C38756 = C21796 * C50120;
    const double C46871 = C21796 * C50274;
    const double C21803 = C21795 * C16814;
    const double C38755 = C21795 * C121;
    const double C46870 = C21795 * C7818;
    const double C39974 = C39967 * C121;
    const double C49246 = C49244 * ae;
    const double C39975 = C39968 * C50120;
    const double C21805 = C21799 * C16814;
    const double C38759 = C21799 * C121;
    const double C46874 = C21799 * C7818;
    const double C22739 = C22732 * C50170;
    const double C47763 = C22732 * C50170;
    const double C2696 = C49975 * C286;
    const double C8002 = C7812 * C286;
    const double C8315 = C50303 * C286;
    const double C16998 = C16808 * C286;
    const double C17311 = C16807 * C286;
    const double C24737 = C49975 * C286;
    const double C5695 = C49975 * C427;
    const double C10898 = C7812 * C427;
    const double C11211 = C50303 * C427;
    const double C27875 = C49975 * C427;
    const double C33586 = C16808 * C427;
    const double C33899 = C16807 * C427;
    const double C5370 = C49975 * C430;
    const double C5701 = C2157 * C430;
    const double C10907 = C50303 * C430;
    const double C10886 = C7812 * C430;
    const double C22119 = C49970 * C430;
    const double C27463 = C49975 * C430;
    const double C33595 = C16807 * C430;
    const double C33574 = C16808 * C430;
    const double C44510 = C50246 * C430;
    const double C3337 =
        (4 * (2 * C49719 + C49271 * C49763 + C49720 * ae) +
         C49271 *
             (3 * C49763 +
              C49271 *
                  (2 * C49755 +
                   C49271 * (C49301 + C49271 * (C49271 * C49317 + C49384 * ae) +
                             C49271 * C49384 * ae) +
                   C49757 * ae) +
              C49762 * ae) +
         (3 * C49720 + C49271 * C49762) * ae) /
        C49147;
    const double C3505 =
        (2 * C49719 + C49271 * C49763 + C49720 * ae +
         (2 * C49755 +
          C49271 * (C49301 + C49271 * (C49271 * C49317 + C49384 * ae) +
                    C49271 * C49384 * ae) +
          C49757 * ae) *
             C49451) /
        C49147;
    const double C4015 =
        (C49441 *
         (3 * C49763 +
          C49271 *
              (2 * C49755 +
               C49271 * (C49301 + C49271 * (C49271 * C49317 + C49384 * ae) +
                         C49271 * C49384 * ae) +
               C49757 * ae) +
          C49762 * ae)) /
        C49147;
    const double C4433 =
        (2 * C49441 * C49763 +
         C49441 * (C49763 + (C49301 + C49271 * (C49271 * C49317 + C49384 * ae) +
                             C49271 * C49384 * ae) *
                                C49451)) /
        C49147;
    const double C23629 = C22722 * C50170;
    const double C39370 = C22722 * C50120;
    const double C48646 = C22722 * C50170;
    const double C21806 = C21800 * C16809;
    const double C38760 = C21800 * C50120;
    const double C46875 = C21800 * C50274;
    const double C38772 = C38762 * C50120;
    const double C289 =
        (C49290 + be * C49293 + C49272 * C49304 + ae * C49271 * C49380 +
         C49271 * (ae * C49380 + C49271 * C49324)) /
        C49151;
    const double C792 =
        (ae * C49441 * C49380 + C49271 * C49441 * C49324) / C49151;
    const double C137 = (3 * (C49365 + C49272 * C49369 + C49612 * be) +
                         C49272 * (2 * C49369 + C49272 * C49380 + C49614 * be) +
                         (2 * C49612 + C49272 * C49614) * be) /
                        C49147;
    const double C266 =
        (C49271 * (2 * C49369 + C49272 * C49380 + C49614 * be)) / C49147;
    const double C273 =
        (C49365 + C49272 * C49369 + C49612 * be + C49380 * C49467) / C49147;
    const double C407 =
        (C49441 * (2 * C49369 + C49272 * C49380 + C49614 * be)) / C49147;
    const double C414 =
        (C49365 + C49272 * C49369 + C49612 * be + C49380 * C49451) / C49147;
    const double C782 = (C49441 * C49271 * C49380) / C49147;
    const double C6310 = C3513 - C3512;
    const double C14888 = C3512 - C3513;
    const double C21785 = C21605 - C21606;
    const double C22325 = C21606 - C21605;
    const double C28682 = C25525 - C25526;
    const double C28678 = C25526 - C25525;
    const double C21802 = C21786 * C50170;
    const double C46877 = C21786 * C50170;
    const double C38771 = C38761 * C121;
    const double C22738 = C22731 * C16815;
    const double C47762 = C22731 * C7819;
    const double C20315 = C49970 * C3339;
    const double C2705 = C2163 * C278;
    const double C8014 = C7817 * C278;
    const double C17010 = C16813 * C278;
    const double C24746 = C49166 * C278;
    const double C8318 = C7817 * C280;
    const double C17314 = C16813 * C280;
    const double C8682 = C7817 * C787;
    const double C13892 = C2163 * C787;
    const double C17678 = C16813 * C787;
    const double C27674 = C49166 * C787;
    const double C2701 = C2163 * C260;
    const double C8008 = C7817 * C260;
    const double C17004 = C16813 * C260;
    const double C24742 = C49166 * C260;
    const double C8312 = C7817 * C261;
    const double C17308 = C16813 * C261;
    const double C5700 = C2163 * C401;
    const double C10904 = C7817 * C401;
    const double C33592 = C16813 * C401;
    const double C44509 = C49166 * C401;
    const double C11208 = C7817 * C402;
    const double C33896 = C16813 * C402;
    const double C8676 = C7817 * C778;
    const double C13888 = C2163 * C778;
    const double C17672 = C16813 * C778;
    const double C27670 = C49166 * C778;
    const double C49777 = C49775 + C49770;
    const double C49397 = C49272 * C49396;
    const double C49402 = 3 * C49396;
    const double C49480 = ae * C49396;
    const double C49479 = C49271 * C49396;
    const double C983 = (2 * (ae * C49380 + C49271 * C49324) +
                         ae * (C49380 + C49396 * std::pow(C49271, 2)) +
                         C49271 * (C49324 + ae * C49271 * C49396 +
                                   C49271 * (ae * C49396 + C49271 * C49348))) /
                        C49151;
    const double C1097 = (ae * (C49380 + C49396 * C49451) +
                          C49271 * (C49324 + C49348 * C49451)) /
                         C49151;
    const double C1444 =
        (C49441 * C49324 + ae * C49441 * C49271 * C49396 +
         C49271 * (ae * C49441 * C49396 + C49271 * C49441 * C49348)) /
        C49151;
    const double C975 =
        (2 * C49271 * C49380 + C49271 * (C49380 + C49396 * C49467)) / C49147;
    const double C1436 = (C49441 * (C49380 + C49396 * C49467)) / C49147;
    const double C1720 =
        (2 * C49441 * C49380 + C49441 * (C49380 + C49396 * C49451)) / C49147;
    const double C3352 = C49975 * C2323;
    const double C19671 = C49970 * C2323;
    const double C25373 = C49975 * C2323;
    const double C4030 = C49975 * C3055;
    const double C20139 = C49970 * C3055;
    const double C26035 = C49975 * C3055;
    const double C3348 = C49975 * C2317;
    const double C19669 = C49970 * C2317;
    const double C25369 = C49975 * C2317;
    const double C3520 = C49975 * C2535;
    const double C21609 = C49970 * C2535;
    const double C25533 = C49975 * C2535;
    const double C4026 = C49975 * C3049;
    const double C20137 = C49970 * C3049;
    const double C26031 = C49975 * C3049;
    const double C20314 = C19537 * C3333;
    const double C20428 = C19537 * C3501;
    const double C20766 = C19537 * C4011;
    const double C49837 = C49271 * C49835;
    const double C22718 =
        (3 * (C49763 + C49835 * C49451) +
         C49441 *
             (2 * C49441 * C49835 +
              C49441 *
                  (C49835 + (C49317 + C49271 * (C49271 * C49341 + C49405 * ae) +
                             C49271 * C49405 * ae) *
                                C49451))) /
        C49147;
    const double C49353 = C49333 + C49351;
    const double C49352 = C49334 + C49350;
    const double C5329 =
        (3 * (C49324 + C49348 * C49451) +
         C49441 * (2 * C49493 +
                   C49441 * (C49348 + (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49451))) /
        C49151;
    const double C5377 = C49975 * C1728;
    const double C12685 = C7812 * C1728;
    const double C35373 = C16808 * C1728;
    const double C38973 = C49970 * C1728;
    const double C44202 = C49975 * C1728;
    const double C49520 = C49517 + C49518;
    const double C6319 = C49975 * C4436;
    const double C21793 = C49970 * C4436;
    const double C28691 = C49975 * C4436;
    const double C7220 = C49975 * C5328;
    const double C38765 = C49970 * C5328;
    const double C45987 = C49975 * C5328;
    const double C49572 = C49560 + C49570;
    const double C49422 = C49272 * C49421;
    const double C49482 = C49421 * C49467;
    const double C5901 =
        (ae * (2 * C49441 * C49396 + C49441 * (C49396 + C49421 * C49451)) +
         C49271 * (2 * C49493 +
                   C49441 * (C49348 + (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49451))) /
        C49151;
    const double C5325 =
        (3 * (C49380 + C49396 * C49451) +
         C49441 * (2 * C49441 * C49396 + C49441 * (C49396 + C49421 * C49451))) /
        C49147;
    const double C49521 = C49515 + C49519;
    const double C49573 = C49558 + C49571;
    const double C128 = 5 * (3 * C49614 + C49272 * C49619) +
                        C49272 * (4 * C49619 + C49272 * C49624);
    const double C262 = 3 * C49614 + C49272 * C49619 + C49624 * C49467;
    const double C403 = 3 * C49614 + C49272 * C49619 + C49624 * C49451;
    const double C537 = C49271 * (4 * C49619 + C49272 * C49624);
    const double C641 = C49441 * (4 * C49619 + C49272 * C49624);
    const double C779 = C49441 * C49271 * C49624;
    const double C20304 = 5 * (3 * C49720 + C49271 * C49762) +
                          C49271 * (4 * C49762 + C49271 * C49838);
    const double C20414 = 3 * C49720 + C49271 * C49762 + C49838 * C49451;
    const double C20756 = C49441 * (4 * C49762 + C49271 * C49838);
    const double C49172 = C49171 / C49147;
    const double C2371 = C2162 * C978;
    const double C2367 = C2162 * C970;
    const double C2362 = C2162 * C276;
    const double C2358 = C2162 * C258;
    const double C2354 = C2162 * C268;
    const double C2350 = C2162 * C254;
    const double C2346 = C2162 * C977;
    const double C2342 = C2162 * C969;
    const double C2339 = C2162 * C275;
    const double C2335 = C2162 * C257;
    const double C2331 = C2162 * C267;
    const double C2327 = C2162 * C253;
    const double C2703 = C2162 * C277;
    const double C2699 = C2162 * C259;
    const double C2695 = C2162 * C269;
    const double C2691 = C2162 * C255;
    const double C3087 = C2162 * C1439;
    const double C3083 = C2162 * C1431;
    const double C3079 = C2162 * C785;
    const double C3075 = C2162 * C776;
    const double C3070 = C2162 * C1438;
    const double C3066 = C2162 * C1430;
    const double C3062 = C2162 * C784;
    const double C3058 = C2162 * C775;
    const double C3351 = C2162 * C2318;
    const double C3347 = C2162 * C2313;
    const double C3523 = C2162 * C2536;
    const double C3519 = C2162 * C2531;
    const double C3515 = C2162 * C1091;
    const double C3511 = C2162 * C1083;
    const double C4029 = C2162 * C3050;
    const double C4025 = C2162 * C3045;
    const double C5376 = C2162 * C1723;
    const double C5372 = C2162 * C1715;
    const double C5367 = C2162 * C417;
    const double C5363 = C2162 * C399;
    const double C5359 = C2162 * C409;
    const double C5355 = C2162 * C395;
    const double C5351 = C2162 * C1722;
    const double C5347 = C2162 * C1714;
    const double C5344 = C2162 * C416;
    const double C5340 = C2162 * C398;
    const double C5336 = C2162 * C408;
    const double C5332 = C2162 * C394;
    const double C5702 = C2162 * C418;
    const double C5698 = C2162 * C400;
    const double C5694 = C2162 * C410;
    const double C5690 = C2162 * C396;
    const double C5908 = C2162 * C1092;
    const double C5904 = C2162 * C1084;
    const double C6318 = C2162 * C4429;
    const double C6314 = C2162 * C4423;
    const double C7219 = C2162 * C5323;
    const double C7215 = C2162 * C5318;
    const double C13890 = C2162 * C786;
    const double C13886 = C2162 * C777;
    const double C22737 = C22729 + C22730;
    const double C39371 = C39367 + C39368;
    const double C47764 = C47760 + C47761;
    const double C23636 = C23634 + C23635;
    const double C39973 = C39965 + C39966;
    const double C48647 = C48643 + C48644;
    const double C38773 = C38768 + C38769;
    const double C21807 = C21803 + C21804;
    const double C38767 = C38755 + C38756;
    const double C46878 = C46870 + C46871;
    const double C49248 = C49246 / C49147;
    const double C39976 = C39974 + C39975;
    const double C5386 = C5369 - C5370;
    const double C44195 = C27464 - C27463;
    const double C20316 = C19537 * C3337;
    const double C20430 = C19537 * C3505;
    const double C20768 = C19537 * C4015;
    const double C22736 = C19537 * C4433;
    const double C39372 = C39369 + C39370;
    const double C21808 = C21805 + C21806;
    const double C38770 = C38759 + C38760;
    const double C46879 = C46874 + C46875;
    const double C2365 = C49975 * C289;
    const double C2702 = C2157 * C289;
    const double C8011 = C50303 * C289;
    const double C7990 = C7812 * C289;
    const double C17007 = C16807 * C289;
    const double C16986 = C16808 * C289;
    const double C19883 = C49970 * C289;
    const double C24418 = C49975 * C289;
    const double C24743 = C50246 * C289;
    const double C3080 = C49975 * C792;
    const double C8679 = C50303 * C792;
    const double C8670 = C7812 * C792;
    const double C13889 = C2157 * C792;
    const double C17675 = C16807 * C792;
    const double C17666 = C16808 * C792;
    const double C21961 = C49970 * C792;
    const double C25109 = C49975 * C792;
    const double C27671 = C50246 * C792;
    const double C2692 = C49975 * C266;
    const double C7996 = C7812 * C266;
    const double C8309 = C50303 * C266;
    const double C16992 = C16808 * C266;
    const double C17305 = C16807 * C266;
    const double C24733 = C49975 * C266;
    const double C2361 = C49975 * C273;
    const double C2698 = C2157 * C273;
    const double C8005 = C50303 * C273;
    const double C7984 = C7812 * C273;
    const double C17001 = C16807 * C273;
    const double C16980 = C16808 * C273;
    const double C19881 = C49970 * C273;
    const double C24414 = C49975 * C273;
    const double C24739 = C50246 * C273;
    const double C5691 = C49975 * C407;
    const double C10892 = C7812 * C407;
    const double C11205 = C50303 * C407;
    const double C27871 = C49975 * C407;
    const double C33580 = C16808 * C407;
    const double C33893 = C16807 * C407;
    const double C5366 = C49975 * C414;
    const double C5697 = C2157 * C414;
    const double C10901 = C50303 * C414;
    const double C10880 = C7812 * C414;
    const double C22117 = C49970 * C414;
    const double C27459 = C49975 * C414;
    const double C33589 = C16807 * C414;
    const double C33568 = C16808 * C414;
    const double C44506 = C50246 * C414;
    const double C3076 = C49975 * C782;
    const double C8673 = C50303 * C782;
    const double C8664 = C7812 * C782;
    const double C13885 = C2157 * C782;
    const double C17669 = C16807 * C782;
    const double C17660 = C16808 * C782;
    const double C21959 = C49970 * C782;
    const double C25105 = C49975 * C782;
    const double C27667 = C50246 * C782;
    const double C21801 = C21785 * C16815;
    const double C46876 = C21785 * C7819;
    const double C38774 = C38771 + C38772;
    const double C3338 =
        (4 * (2 * C49726 + C49271 * C49777 + C49727 * ae) +
         C49271 * (3 * C49777 +
                   C49271 * (2 * C49769 +
                             C49271 * (C49329 +
                                       C49271 * (C49271 * C49272 * C49341 +
                                                 C49409 * ae) +
                                       C49271 * C49409 * ae) +
                             C49771 * ae) +
                   C49776 * ae) +
         (3 * C49727 + C49271 * C49776) * ae) /
        C49147;
    const double C3506 =
        (2 * C49726 + C49271 * C49777 + C49727 * ae +
         (2 * C49769 +
          C49271 * (C49329 + C49271 * (C49271 * C49272 * C49341 + C49409 * ae) +
                    C49271 * C49409 * ae) +
          C49771 * ae) *
             C49451) /
        C49147;
    const double C4016 =
        (C49441 * (3 * C49777 +
                   C49271 * (2 * C49769 +
                             C49271 * (C49329 +
                                       C49271 * (C49271 * C49272 * C49341 +
                                                 C49409 * ae) +
                                       C49271 * C49409 * ae) +
                             C49771 * ae) +
                   C49776 * ae)) /
        C49147;
    const double C4434 =
        (2 * C49441 * C49777 +
         C49441 * (C49777 +
                   (C49329 + C49271 * (C49271 * C49272 * C49341 + C49409 * ae) +
                    C49271 * C49409 * ae) *
                       C49451)) /
        C49147;
    const double C49398 = C49382 + C49397;
    const double C49483 = C49480 + C49481;
    const double C2542 =
        (C49324 + C49348 * C49451 + ae * (C49479 + C49271 * C49421 * C49451) +
         C49271 * (ae * (C49396 + C49421 * C49451) +
                   C49271 * (C49348 + (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49451))) /
        C49151;
    const double C1089 = (C49271 * C49380 + C49479 * C49451) / C49147;
    const double C5899 =
        (2 * C49441 * C49479 + C49441 * (C49479 + C49271 * C49421 * C49451)) /
        C49147;
    const double C2372 = C49975 * C983;
    const double C8937 = C7812 * C983;
    const double C17933 = C16808 * C983;
    const double C19887 = C49970 * C983;
    const double C24425 = C49975 * C983;
    const double C5909 = C49975 * C1097;
    const double C9095 = C7812 * C1097;
    const double C18091 = C16808 * C1097;
    const double C21965 = C49970 * C1097;
    const double C27471 = C49975 * C1097;
    const double C3088 = C49975 * C1444;
    const double C9593 = C7812 * C1444;
    const double C18589 = C16808 * C1444;
    const double C25117 = C49975 * C1444;
    const double C31061 = C49970 * C1444;
    const double C2368 = C49975 * C975;
    const double C8931 = C7812 * C975;
    const double C17927 = C16808 * C975;
    const double C19885 = C49970 * C975;
    const double C24421 = C49975 * C975;
    const double C3084 = C49975 * C1436;
    const double C9587 = C7812 * C1436;
    const double C18583 = C16808 * C1436;
    const double C25113 = C49975 * C1436;
    const double C31059 = C49970 * C1436;
    const double C5373 = C49975 * C1720;
    const double C12679 = C7812 * C1720;
    const double C35367 = C16808 * C1720;
    const double C38971 = C49970 * C1720;
    const double C44198 = C49975 * C1720;
    const double C49839 = C49820 + C49837;
    const double C142 = (5 * (3 * C49305 + C49272 * C49325) +
                         C49272 * (4 * C49325 + C49272 * C49353)) /
                        C49147;
    const double C282 =
        (3 * C49305 + C49272 * C49325 +
         C49271 * (C49271 * C49353 + C49624 * ae) + C49271 * C49624 * ae) /
        C49147;
    const double C423 =
        (3 * C49305 + C49272 * C49325 + C49353 * C49451) / C49147;
    const double C539 = (C49271 * (4 * C49325 + C49272 * C49353) +
                         (4 * C49619 + C49272 * C49624) * ae) /
                        C49147;
    const double C643 = (C49441 * (4 * C49325 + C49272 * C49353)) / C49147;
    const double C789 = (C49441 * (C49271 * C49353 + C49624 * ae)) / C49147;
    const double C149 =
        (5 * (3 * C49324 + be * C49325 + C49272 * C49352) +
         be * (4 * C49325 + C49272 * C49353) +
         C49272 *
             (4 * C49352 + be * C49353 +
              C49272 *
                  (3 * C49348 + be * C49349 +
                   C49272 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C431 = (2 * C49304 + be * C49305 + C49272 * C49324 +
                         C49352 * std::pow(zP - zQ, 2)) /
                        C49151;
    const double C432 =
        ((zP - zQ) * (3 * C49324 + be * C49325 + C49272 * C49352)) / C49151;
    const double C433 =
        (3 * C49324 + be * C49325 + C49272 * C49352 +
         (3 * C49348 + be * C49349 +
          C49272 *
              (2 * C49344 + be * C49345 +
               C49272 * (C49340 + be * C49272 * C49341 +
                         C49272 * (be * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(zP - zQ, 2)) /
        C49151;
    const double C644 =
        ((zP - zQ) *
         (4 * C49352 + be * C49353 +
          C49272 * (3 * C49348 + be * C49349 +
                    C49272 * (2 * C49344 + be * C49345 +
                              C49272 * (C49340 + be * C49272 * C49341 +
                                        C49272 * (be * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49151;
    const double C1729 =
        (2 * C49441 * C49352 +
         C49441 * (C49352 + (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                C49451)) /
        C49151;
    const double C49423 = C49403 + C49422;
    const double C49484 = C49396 + C49482;
    const double C3340 =
        (4 * (2 * C49476 + ae * C49477 + C49271 * C49520) +
         ae * (3 * C49477 + C49271 * C49521) +
         C49271 *
             (3 * C49520 + ae * C49521 +
              C49271 *
                  (2 * C49514 + ae * C49516 +
                   C49271 * (C49344 + ae * C49271 * C49414 +
                             C49271 * (ae * C49414 +
                                       C49271 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C4018 =
        (3 * (C49491 + ae * C49441 * C49509 + C49271 * C49539) +
         ae * C49441 * C49521 +
         C49271 * (2 * C49539 + ae * C49441 * C49516 +
                   C49271 * (C49536 + ae * C49441 * C49271 * C49414 +
                             C49271 * (ae * C49441 * C49414 +
                                       C49271 * C49441 *
                                           (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C3336 = (4 * (2 * C49472 + C49271 * C49477) +
                          C49271 * (3 * C49477 + C49271 * C49521)) /
                         C49147;
    const double C3504 =
        (2 * C49472 + C49271 * C49477 + C49521 * C49451) / C49147;
    const double C4014 = (C49441 * (3 * C49477 + C49271 * C49521)) / C49147;
    const double C20307 =
        (5 * (3 * C49506 + ae * C49507 + C49271 * C49572) +
         ae * (4 * C49507 + C49271 * C49573) +
         C49271 *
             (4 * C49572 + ae * C49573 +
              C49271 *
                  (3 * C49568 + ae * C49569 +
                   C49271 * (2 * C49562 + ae * C49564 +
                             C49271 * (C49340 + ae * C49271 * C49407 +
                                       C49271 * (ae * C49407 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C20759 =
        (4 * (2 * C49533 + ae * C49441 * C49502 + C49271 * C49592) +
         ae * C49441 * C49573 +
         C49271 * (3 * C49592 + ae * C49441 * C49569 +
                   C49271 * (2 * C49590 + ae * C49441 * C49564 +
                             C49271 * (C49585 + ae * C49441 * C49271 * C49407 +
                                       C49271 * (ae * C49441 * C49407 +
                                                 C49271 * C49441 *
                                                     std::pow(C49274, 8) *
                                                     bs[8] * C49283))))) /
        C49151;
    const double C20305 = (5 * (3 * C49470 + C49271 * C49507) +
                           C49271 * (4 * C49507 + C49271 * C49573)) /
                          C49147;
    const double C20415 =
        (3 * C49470 + C49271 * C49507 + C49573 * C49451) / C49147;
    const double C20757 = (C49441 * (4 * C49507 + C49271 * C49573)) / C49147;
    const double C49173 = C49172 - C49162;
    const double C2380 = C2362 - C2363;
    const double C2378 = C2358 - C2359;
    const double C3344 = C2346 - C2347;
    const double C3342 = C2342 - C2343;
    const double C2376 = C2338 - C2339;
    const double C2374 = C2334 - C2335;
    const double C14359 = C3078 - C3079;
    const double C14355 = C3079 - C3078;
    const double C14357 = C3074 - C3075;
    const double C14353 = C3075 - C3074;
    const double C4022 = C3070 - C3071;
    const double C15541 = C3071 - C3070;
    const double C4020 = C3066 - C3067;
    const double C15539 = C3067 - C3066;
    const double C14351 = C3062 - C3063;
    const double C14347 = C3063 - C3062;
    const double C14349 = C3058 - C3059;
    const double C14345 = C3059 - C3058;
    const double C6311 = C3515 - C3514;
    const double C14889 = C3514 - C3515;
    const double C6309 = C3511 - C3510;
    const double C14887 = C3510 - C3511;
    const double C5385 = C5367 - C5368;
    const double C5383 = C5363 - C5364;
    const double C7212 = C5351 - C5352;
    const double C7210 = C5347 - C5348;
    const double C5381 = C5343 - C5344;
    const double C5379 = C5339 - C5340;
    const double C22740 = C22737 + C22738;
    const double C47765 = C47764 + C47762;
    const double C23637 = C23636 + C23628;
    const double C48648 = C48647 + C48645;
    const double C21809 = C21807 + C21797;
    const double C46880 = C46878 + C46872;
    const double C49249 = C49248 - C49233;
    const double C2381 = C2364 - C2365;
    const double C24434 = C24417 - C24418;
    const double C14360 = C3080 - C3081;
    const double C14356 = C3081 - C3080;
    const double C28150 = C25109 - C25110;
    const double C28146 = C25110 - C25109;
    const double C2379 = C2360 - C2361;
    const double C24432 = C24413 - C24414;
    const double C5384 = C5365 - C5366;
    const double C44193 = C27460 - C27459;
    const double C14358 = C3076 - C3077;
    const double C14354 = C3077 - C3076;
    const double C28148 = C25105 - C25106;
    const double C28144 = C25106 - C25105;
    const double C21810 = C21808 + C21801;
    const double C46881 = C46879 + C46876;
    const double C49399 = C49398 + C49393;
    const double C5905 = C49975 * C1089;
    const double C9089 = C7812 * C1089;
    const double C18085 = C16808 * C1089;
    const double C21963 = C49970 * C1089;
    const double C27467 = C49975 * C1089;
    const double C49840 = C49839 + C49824;
    const double C5703 = C49975 * C431;
    const double C10909 = C7812 * C431;
    const double C33597 = C16808 * C431;
    const double C44512 = C49975 * C431;
    const double C11213 = C7812 * C432;
    const double C33901 = C16808 * C432;
    const double C49424 = C49423 + C49415;
    const double C2324 =
        (3 * (C49324 + ae * C49479 + C49271 * C49483) +
         ae * (2 * C49479 + C49271 * C49484) +
         C49271 *
             (2 * C49483 + ae * C49484 +
              C49271 *
                  (C49348 + ae * C49271 * C49421 +
                   C49271 * (ae * C49421 +
                             C49271 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C3056 =
        (2 * (ae * C49441 * C49396 + C49271 * C49493) + ae * C49441 * C49484 +
         C49271 * (C49493 + ae * C49441 * C49271 * C49421 +
                   C49271 * (ae * C49441 * C49421 +
                             C49271 * C49441 *
                                 (C49340 + be * C49272 * C49341 +
                                  C49272 * (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C2320 = (3 * (C49380 + C49396 * C49467) +
                          C49271 * (2 * C49479 + C49271 * C49484)) /
                         C49147;
    const double C2538 = (C49380 + C49396 * C49467 + C49484 * C49451) / C49147;
    const double C3052 = (C49441 * (2 * C49479 + C49271 * C49484)) / C49147;
    const double C24424 = C49173 * C978;
    const double C24420 = C49173 * C970;
    const double C24415 = C49173 * C276;
    const double C24411 = C49173 * C258;
    const double C24407 = C49173 * C268;
    const double C24403 = C49173 * C254;
    const double C24399 = C49173 * C977;
    const double C24395 = C49173 * C969;
    const double C24392 = C49173 * C275;
    const double C24388 = C49173 * C257;
    const double C24384 = C49173 * C267;
    const double C24380 = C49173 * C253;
    const double C24744 = C49173 * C277;
    const double C24740 = C49173 * C259;
    const double C24736 = C49173 * C269;
    const double C24732 = C49173 * C255;
    const double C25116 = C49173 * C1439;
    const double C25112 = C49173 * C1431;
    const double C25108 = C49173 * C785;
    const double C25104 = C49173 * C776;
    const double C25099 = C49173 * C1438;
    const double C25095 = C49173 * C1430;
    const double C25091 = C49173 * C784;
    const double C25087 = C49173 * C775;
    const double C25372 = C49173 * C2318;
    const double C25368 = C49173 * C2313;
    const double C25536 = C49173 * C2536;
    const double C25532 = C49173 * C2531;
    const double C25528 = C49173 * C1091;
    const double C25524 = C49173 * C1083;
    const double C26034 = C49173 * C3050;
    const double C26030 = C49173 * C3045;
    const double C27470 = C49173 * C1092;
    const double C27466 = C49173 * C1084;
    const double C27462 = C49173 * C417;
    const double C27458 = C49173 * C399;
    const double C27453 = C49173 * C409;
    const double C27449 = C49173 * C395;
    const double C27445 = C49173 * C416;
    const double C27441 = C49173 * C398;
    const double C27438 = C49173 * C408;
    const double C27434 = C49173 * C394;
    const double C27672 = C49173 * C786;
    const double C27668 = C49173 * C777;
    const double C27874 = C49173 * C410;
    const double C27870 = C49173 * C396;
    const double C28690 = C49173 * C4429;
    const double C28686 = C49173 * C4423;
    const double C29872 = C49173 * C1722;
    const double C29868 = C49173 * C1714;
    const double C44201 = C49173 * C1723;
    const double C44197 = C49173 * C1715;
    const double C44511 = C49173 * C418;
    const double C44507 = C49173 * C400;
    const double C45986 = C49173 * C5323;
    const double C45982 = C49173 * C5318;
    const double C117 =
        ((((0 - (C49145 * C49146) / C49147) * ae) / C49147 - (0 * be) / C49156 +
          C49148 / C49147) /
             C49152 -
         ((C49145 * C49169 + 0) * be) / C49147) /
            C49152 +
        ((C49145 * (C49169 / C49152 -
                    ((C49145 * C49173 + C50246) * be) / C49147 + C49166) +
          C50302) *
         ae) /
            C49147 +
        C49173 / C49152 - ((C49145 * C49166 + C49975) * be) / C49147;
    const double C118 =
        (C49169 / C49152 - ((C49145 * C49173 + C50246) * be) / C49147 +
         C49166) /
            C49152 +
        ((C49145 *
              (C49173 / C49152 - ((C49145 * C49166 + C49975) * be) / C49147) +
          C50303) *
         ae) /
            C49147 +
        2 * (C49166 / C49152 - (0 * be) / C49147);
    const double C119 =
        (C49173 / C49152 - ((C49145 * C49166 + C49975) * be) / C49147) /
            C49152 +
        ((C49145 * (C49166 / C49152 - (0 * be) / C49147) + C7812) * ae) /
            C49147;
    const double C7815 =
        C49169 / C49152 - ((C49145 * C49173 + C50246) * be) / C49147 + C49166;
    const double C7816 =
        C49173 / C49152 - ((C49145 * C49166 + C49975) * be) / C49147;
    const double C16811 =
        C49169 / C49152 + ((C49145 * C49173 + C50246) * ae) / C49147 + C49166;
    const double C16812 =
        C49173 / C49152 + ((C49145 * C49166 + C49975) * ae) / C49147;
    const double C3355 = C3344 + C3345;
    const double C3354 = C3342 + C3343;
    const double C2383 = C2376 + C2377;
    const double C2382 = C2374 + C2375;
    const double C4033 = C4022 + C4023;
    const double C15544 = C15541 + C15542;
    const double C4032 = C4020 + C4021;
    const double C15543 = C15539 + C15540;
    const double C14364 = C14351 + C14352;
    const double C14362 = C14347 + C14348;
    const double C14363 = C14349 + C14350;
    const double C14361 = C14345 + C14346;
    const double C6322 = C6311 + C6312;
    const double C14892 = C14889 + C14890;
    const double C6321 = C6309 + C6310;
    const double C14891 = C14887 + C14888;
    const double C5390 = C5385 + C5386;
    const double C7223 = C7212 + C7213;
    const double C7222 = C7210 + C7211;
    const double C5388 = C5381 + C5382;
    const double C5387 = C5379 + C5380;
    const double C22741 = C22740 + C22739;
    const double C47766 = C47765 + C47763;
    const double C23638 = C23637 + C23629;
    const double C48649 = C48648 + C48646;
    const double C21811 = C21809 + C21798;
    const double C46882 = C46880 + C46873;
    const double C19538 =
        ((((0 - (C49194 * C49230) / C49147) * ae) / C49147 - (0 * be) / C49156 +
          C49195 / C49147) /
             C49152 -
         ((C49194 * C49247 + 0) * be) / C49147) /
            C49152 +
        ((C49194 * (C49247 / C49152 -
                    ((C49194 * C49249 + C50274) * be) / C49147 + C49242) +
          C50310) *
         ae) /
            C49147 +
        C49249 / C49152 - ((C49194 * C49242 + C50170) * be) / C49147;
    const double C19539 =
        (C49247 / C49152 - ((C49194 * C49249 + C50274) * be) / C49147 +
         C49242) /
            C49152 +
        ((C49194 *
              (C49249 / C49152 - ((C49194 * C49242 + C50170) * be) / C49147) +
          C50311) *
         ae) /
            C49147 +
        2 * (C49242 / C49152 - (0 * be) / C49147);
    const double C19540 =
        (C49249 / C49152 - ((C49194 * C49242 + C50170) * be) / C49147) /
            C49152 +
        ((C49194 * (C49242 / C49152 - (0 * be) / C49147) + C24226) * ae) /
            C49147;
    const double C24229 =
        C49247 / C49152 - ((C49194 * C49249 + C50274) * be) / C49147 + C49242;
    const double C24230 =
        C49249 / C49152 - ((C49194 * C49242 + C50170) * be) / C49147;
    const double C2385 = C2380 + C2381;
    const double C14368 = C14359 + C14360;
    const double C14366 = C14355 + C14356;
    const double C2384 = C2378 + C2379;
    const double C5389 = C5383 + C5384;
    const double C14367 = C14357 + C14358;
    const double C14365 = C14353 + C14354;
    const double C21812 = C21810 + C21802;
    const double C46883 = C46881 + C46877;
    const double C290 =
        (2 * C49304 + be * C49305 + C49272 * C49324 + ae * C49271 * C49399 +
         C49271 * (ae * C49399 + C49271 * C49352)) /
        C49151;
    const double C291 =
        (ae * (3 * C49380 + C49272 * C49399 +
               (2 * C49373 + C49272 * C49391) * be) +
         C49271 * (3 * C49324 + be * C49325 + C49272 * C49352)) /
        C49151;
    const double C793 =
        (ae * C49441 * C49399 + C49271 * C49441 * C49352) / C49151;
    const double C139 = (4 * (2 * C49369 + C49272 * C49380 + C49614 * be) +
                         C49272 * (3 * C49380 + C49272 * C49399 + C49619 * be) +
                         (3 * C49614 + C49272 * C49619) * be) /
                        C49147;
    const double C274 =
        (2 * C49369 + C49272 * C49380 + C49614 * be + C49399 * C49467) / C49147;
    const double C279 =
        (C49271 * (3 * C49380 + C49272 * C49399 + C49619 * be)) / C49147;
    const double C415 =
        (2 * C49369 + C49272 * C49380 + C49614 * be + C49399 * C49451) / C49147;
    const double C420 =
        (C49441 * (3 * C49380 + C49272 * C49399 + C49619 * be)) / C49147;
    const double C783 = (C49441 * C49271 * C49399) / C49147;
    const double C20306 =
        (5 * (3 * C49763 + C49271 * C49840 + C49762 * ae) +
         C49271 * (4 * C49840 +
                   C49271 * (3 * C49835 +
                             C49271 * (2 * C49827 +
                                       C49271 * (C49317 +
                                                 C49271 * (C49271 * C49341 +
                                                           C49405 * ae) +
                                                 C49271 * C49405 * ae) +
                                       C49829 * ae) +
                             C49834 * ae) +
                   C49838 * ae) +
         (4 * C49762 + C49271 * C49838) * ae) /
        C49147;
    const double C20416 =
        (3 * C49763 + C49271 * C49840 + C49762 * ae +
         (3 * C49835 +
          C49271 *
              (2 * C49827 +
               C49271 * (C49317 + C49271 * (C49271 * C49341 + C49405 * ae) +
                         C49271 * C49405 * ae) +
               C49829 * ae) +
          C49834 * ae) *
             C49451) /
        C49147;
    const double C20758 =
        (C49441 *
         (4 * C49840 +
          C49271 *
              (3 * C49835 +
               C49271 * (2 * C49827 +
                         C49271 * (C49317 +
                                   C49271 * (C49271 * C49341 + C49405 * ae) +
                                   C49271 * C49405 * ae) +
                         C49829 * ae) +
               C49834 * ae) +
          C49838 * ae)) /
        C49147;
    const double C21032 =
        (2 * C49441 * C49840 +
         C49441 *
             (C49840 +
              (2 * C49827 +
               C49271 * (C49317 + C49271 * (C49271 * C49341 + C49405 * ae) +
                         C49271 * C49405 * ae) +
               C49829 * ae) *
                  C49451)) /
        C49147;
    const double C49425 = C49272 * C49424;
    const double C984 =
        (2 * (ae * C49399 + C49271 * C49352) +
         ae * (C49399 + C49424 * std::pow(C49271, 2)) +
         C49271 *
             (C49352 + ae * C49271 * C49424 +
              C49271 *
                  (ae * C49424 +
                   C49271 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C1098 =
        (ae * (C49399 + C49424 * C49451) +
         C49271 * (C49352 + (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                C49451)) /
        C49151;
    const double C1445 =
        (C49441 * C49352 + ae * C49441 * C49271 * C49424 +
         C49271 * (ae * C49441 * C49424 +
                   C49271 * C49441 *
                       (2 * C49344 + be * C49345 +
                        C49272 * (C49340 + be * C49272 * C49341 +
                                  C49272 * (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C976 =
        (2 * C49271 * C49399 + C49271 * (C49399 + C49424 * C49467)) / C49147;
    const double C1090 = (C49271 * C49399 + C49271 * C49424 * C49451) / C49147;
    const double C1437 = (C49441 * (C49399 + C49424 * C49467)) / C49147;
    const double C1721 =
        (2 * C49441 * C49399 + C49441 * (C49399 + C49424 * C49451)) / C49147;
    const double C24433 = C24415 - C24416;
    const double C24431 = C24411 - C24412;
    const double C25365 = C24399 - C24400;
    const double C25363 = C24395 - C24396;
    const double C24429 = C24391 - C24392;
    const double C24427 = C24387 - C24388;
    const double C28149 = C25107 - C25108;
    const double C28145 = C25108 - C25107;
    const double C28147 = C25103 - C25104;
    const double C28143 = C25104 - C25103;
    const double C26027 = C25099 - C25100;
    const double C29345 = C25100 - C25099;
    const double C26025 = C25095 - C25096;
    const double C29343 = C25096 - C25095;
    const double C28141 = C25091 - C25092;
    const double C28137 = C25092 - C25091;
    const double C28139 = C25087 - C25088;
    const double C28135 = C25088 - C25087;
    const double C28683 = C25527 - C25528;
    const double C28679 = C25528 - C25527;
    const double C28681 = C25523 - C25524;
    const double C28677 = C25524 - C25523;
    const double C44194 = C27462 - C27461;
    const double C44192 = C27458 - C27457;
    const double C44190 = C27446 - C27445;
    const double C44188 = C27442 - C27441;
    const double C45979 = C29872 - C29871;
    const double C45977 = C29868 - C29867;
    const double C8010 = C7815 * C276;
    const double C8004 = C7815 * C258;
    const double C7997 = C7815 * C268;
    const double C7991 = C7815 * C254;
    const double C7985 = C7815 * C275;
    const double C7979 = C7815 * C257;
    const double C7974 = C7815 * C267;
    const double C7968 = C7815 * C253;
    const double C8314 = C7815 * C269;
    const double C8308 = C7815 * C255;
    const double C8678 = C7815 * C785;
    const double C8672 = C7815 * C776;
    const double C8665 = C7815 * C784;
    const double C8659 = C7815 * C775;
    const double C8934 = C7815 * C977;
    const double C8928 = C7815 * C969;
    const double C9092 = C7815 * C1091;
    const double C9086 = C7815 * C1083;
    const double C9590 = C7815 * C1438;
    const double C9584 = C7815 * C1430;
    const double C10906 = C7815 * C417;
    const double C10900 = C7815 * C399;
    const double C10893 = C7815 * C409;
    const double C10887 = C7815 * C395;
    const double C10881 = C7815 * C416;
    const double C10875 = C7815 * C398;
    const double C10870 = C7815 * C408;
    const double C10864 = C7815 * C394;
    const double C11210 = C7815 * C410;
    const double C11204 = C7815 * C396;
    const double C12682 = C7815 * C1722;
    const double C12676 = C7815 * C1714;
    const double C8012 = C7816 * C277;
    const double C8006 = C7816 * C259;
    const double C7999 = C7816 * C269;
    const double C7993 = C7816 * C255;
    const double C7987 = C7816 * C276;
    const double C7981 = C7816 * C258;
    const double C7976 = C7816 * C268;
    const double C7970 = C7816 * C254;
    const double C8316 = C7816 * C270;
    const double C8310 = C7816 * C256;
    const double C8680 = C7816 * C786;
    const double C8674 = C7816 * C777;
    const double C8667 = C7816 * C785;
    const double C8661 = C7816 * C776;
    const double C8936 = C7816 * C978;
    const double C8930 = C7816 * C970;
    const double C9094 = C7816 * C1092;
    const double C9088 = C7816 * C1084;
    const double C9592 = C7816 * C1439;
    const double C9586 = C7816 * C1431;
    const double C10908 = C7816 * C418;
    const double C10902 = C7816 * C400;
    const double C10895 = C7816 * C410;
    const double C10889 = C7816 * C396;
    const double C10883 = C7816 * C417;
    const double C10877 = C7816 * C399;
    const double C10872 = C7816 * C409;
    const double C10866 = C7816 * C395;
    const double C11212 = C7816 * C411;
    const double C11206 = C7816 * C397;
    const double C12684 = C7816 * C1723;
    const double C12678 = C7816 * C1715;
    const double C17006 = C16811 * C276;
    const double C17000 = C16811 * C258;
    const double C16993 = C16811 * C268;
    const double C16987 = C16811 * C254;
    const double C16981 = C16811 * C275;
    const double C16975 = C16811 * C257;
    const double C16970 = C16811 * C267;
    const double C16964 = C16811 * C253;
    const double C17310 = C16811 * C269;
    const double C17304 = C16811 * C255;
    const double C17674 = C16811 * C785;
    const double C17668 = C16811 * C776;
    const double C17661 = C16811 * C784;
    const double C17655 = C16811 * C775;
    const double C17930 = C16811 * C977;
    const double C17924 = C16811 * C969;
    const double C18088 = C16811 * C1091;
    const double C18082 = C16811 * C1083;
    const double C18586 = C16811 * C1438;
    const double C18580 = C16811 * C1430;
    const double C33594 = C16811 * C417;
    const double C33588 = C16811 * C399;
    const double C33581 = C16811 * C409;
    const double C33575 = C16811 * C395;
    const double C33569 = C16811 * C416;
    const double C33563 = C16811 * C398;
    const double C33558 = C16811 * C408;
    const double C33552 = C16811 * C394;
    const double C33898 = C16811 * C410;
    const double C33892 = C16811 * C396;
    const double C35370 = C16811 * C1722;
    const double C35364 = C16811 * C1714;
    const double C17008 = C16812 * C277;
    const double C17002 = C16812 * C259;
    const double C16995 = C16812 * C269;
    const double C16989 = C16812 * C255;
    const double C16983 = C16812 * C276;
    const double C16977 = C16812 * C258;
    const double C16972 = C16812 * C268;
    const double C16966 = C16812 * C254;
    const double C17312 = C16812 * C270;
    const double C17306 = C16812 * C256;
    const double C17676 = C16812 * C786;
    const double C17670 = C16812 * C777;
    const double C17663 = C16812 * C785;
    const double C17657 = C16812 * C776;
    const double C17932 = C16812 * C978;
    const double C17926 = C16812 * C970;
    const double C18090 = C16812 * C1092;
    const double C18084 = C16812 * C1084;
    const double C18588 = C16812 * C1439;
    const double C18582 = C16812 * C1431;
    const double C33596 = C16812 * C418;
    const double C33590 = C16812 * C400;
    const double C33583 = C16812 * C410;
    const double C33577 = C16812 * C396;
    const double C33571 = C16812 * C417;
    const double C33565 = C16812 * C399;
    const double C33560 = C16812 * C409;
    const double C33554 = C16812 * C395;
    const double C33900 = C16812 * C411;
    const double C33894 = C16812 * C397;
    const double C35372 = C16812 * C1723;
    const double C35366 = C16812 * C1715;
    const double C6324 = C6322 * C50120;
    const double C6323 = C6321 * C121;
    const double C5394 = C5390 * C50120;
    const double C7225 = C7223 * C50120;
    const double C7224 = C7222 * C121;
    const double C5392 = C5388 * C50120;
    const double C5391 = C5387 * C121;
    const double C5393 = C5389 * C121;
    const double C2704 = C49975 * C290;
    const double C8013 = C7812 * C290;
    const double C17009 = C16808 * C290;
    const double C24745 = C49975 * C290;
    const double C8317 = C7812 * C291;
    const double C17313 = C16808 * C291;
    const double C8681 = C7812 * C793;
    const double C13891 = C49975 * C793;
    const double C17677 = C16808 * C793;
    const double C27673 = C49975 * C793;
    const double C2700 = C49975 * C274;
    const double C8007 = C7812 * C274;
    const double C17003 = C16808 * C274;
    const double C24741 = C49975 * C274;
    const double C8311 = C7812 * C279;
    const double C17307 = C16808 * C279;
    const double C5699 = C49975 * C415;
    const double C10903 = C7812 * C415;
    const double C33591 = C16808 * C415;
    const double C44508 = C49975 * C415;
    const double C11207 = C7812 * C420;
    const double C33895 = C16808 * C420;
    const double C8675 = C7812 * C783;
    const double C13887 = C49975 * C783;
    const double C17671 = C16808 * C783;
    const double C27669 = C49975 * C783;
    const double C49426 = C49402 + C49425;
    const double C24438 = C24433 + C24434;
    const double C24437 = C24431 + C24432;
    const double C25376 = C25365 + C25366;
    const double C25375 = C25363 + C25364;
    const double C24436 = C24429 + C24430;
    const double C24435 = C24427 + C24428;
    const double C28158 = C28149 + C28150;
    const double C28156 = C28145 + C28146;
    const double C28157 = C28147 + C28148;
    const double C28155 = C28143 + C28144;
    const double C26038 = C26027 + C26028;
    const double C29348 = C29345 + C29346;
    const double C26037 = C26025 + C26026;
    const double C29347 = C29343 + C29344;
    const double C28154 = C28141 + C28142;
    const double C28152 = C28137 + C28138;
    const double C28153 = C28139 + C28140;
    const double C28151 = C28135 + C28136;
    const double C28696 = C28683 + C28684;
    const double C28694 = C28679 + C28680;
    const double C28695 = C28681 + C28682;
    const double C28693 = C28677 + C28678;
    const double C44207 = C44194 + C44195;
    const double C44206 = C44192 + C44193;
    const double C44205 = C44190 + C44191;
    const double C44204 = C44188 + C44189;
    const double C45990 = C45979 + C45980;
    const double C45989 = C45977 + C45978;
    const double C6325 = C6323 + C6324;
    const double C7226 = C7224 + C7225;
    const double C5395 = C5391 + C5392;
    const double C5396 = C5393 + C5394;
    const double C49427 = C49426 + C49420;
    const double C45099 = C28694 * C50120;
    const double C45098 = C28693 * C121;
    const double C44211 = C44207 * C50120;
    const double C44210 = C44206 * C121;
    const double C44209 = C44205 * C50120;
    const double C44208 = C44204 * C121;
    const double C45992 = C45990 * C50120;
    const double C45991 = C45989 * C121;
    const double C292 =
        (3 * C49324 + be * C49325 + C49272 * C49352 + ae * C49271 * C49427 +
         C49271 *
             (ae * C49427 +
              C49271 *
                  (3 * C49348 + be * C49349 +
                   C49272 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C540 =
        (ae * (4 * C49399 + C49272 * C49427 +
               (3 * C49391 + C49272 * C49418) * be) +
         C49271 *
             (4 * C49352 + be * C49353 +
              C49272 *
                  (3 * C49348 + be * C49349 +
                   C49272 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C794 =
        (ae * C49441 * C49427 +
         C49271 * C49441 *
             (3 * C49348 + be * C49349 +
              C49272 * (2 * C49344 + be * C49345 +
                        C49272 * (C49340 + be * C49272 * C49341 +
                                  C49272 * (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C141 = (5 * (3 * C49380 + C49272 * C49399 + C49619 * be) +
                         C49272 * (4 * C49399 + C49272 * C49427 + C49624 * be) +
                         (4 * C49619 + C49272 * C49624) * be) /
                        C49147;
    const double C281 =
        (3 * C49380 + C49272 * C49399 + C49619 * be + C49427 * C49467) / C49147;
    const double C422 =
        (3 * C49380 + C49272 * C49399 + C49619 * be + C49427 * C49451) / C49147;
    const double C538 =
        (C49271 * (4 * C49399 + C49272 * C49427 + C49624 * be)) / C49147;
    const double C642 =
        (C49441 * (4 * C49399 + C49272 * C49427 + C49624 * be)) / C49147;
    const double C788 = (C49441 * C49271 * C49427) / C49147;
    const double C45100 = C45098 + C45099;
    const double C44213 = C44210 + C44211;
    const double C44212 = C44208 + C44209;
    const double C45993 = C45991 + C45992;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50035 * C50261 +
                  ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50035 * C50071) *
                     C50304 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50035 * C50261 +
                  ((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                   (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                   (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                   (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                      C50132 * C50035 * C50071) *
                     C50305 +
                 (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C7818 +
                   (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50274 +
                   (C8307 - C8308 + C8309 - C8310 + C8311 - C8312) * C7819 +
                   (C8313 - C8314 + C8315 - C8316 + C8317 - C8318) * C50170) *
                      C50132 * C50035 * C50261 +
                  ((C8308 - C8307 + C8310 - C8309 + C8312 - C8311) * C7818 +
                   (C8314 - C8313 + C8316 - C8315 + C8318 - C8317) * C50274 +
                   (C7815 * C259 - C50302 * C273 + C7816 * C260 -
                    C50303 * C274 + C7817 * C262 - C7812 * C281) *
                       C7819 +
                   (C7815 * C277 - C50302 * C289 + C7816 * C278 -
                    C50303 * C290 + C7817 * C282 - C7812 * C292) *
                       C50170) *
                      C50132 * C50035 * C50071) *
                     C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C50262 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50099) *
                      C50261 +
                  (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                    (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                    (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                    (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                       C50132 * C50262 +
                   ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                    (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                    (C50302 * C1434 - C7815 * C1430 + C50303 * C1435 -
                     C7816 * C1431 + C7812 * C1436 - C7817 * C1432) *
                        C7819 +
                    (C50302 * C1442 - C7815 * C1438 + C50303 * C1443 -
                     C7816 * C1439 + C7812 * C1444 - C7817 * C1440) *
                        C50170) *
                       C50132 * C50099) *
                      C50071) *
                     C251 +
                 ((((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                     C50303 * C131 + C7817 * C125 - C7812 * C132) *
                        C7818 +
                    (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                     C50303 * C145 + C7817 * C136 - C7812 * C146) *
                        C50274 +
                    (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                    (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                       C50132 * C50262 +
                   ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C7818 +
                    (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50274 +
                    (C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C7819 +
                    (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50170) *
                       C50132 * C50099) *
                      C50261 +
                  (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                    (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                    (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                    (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                       C50132 * C50262 +
                   ((C8672 - C8671 + C8674 - C8673 + C8676 - C8675) * C7818 +
                    (C8678 - C8677 + C8680 - C8679 + C8682 - C8681) * C50274 +
                    (C7815 * C1431 - C50302 * C1435 + C7816 * C1432 -
                     C50303 * C1436 + C7817 * C1433 - C7812 * C1437) *
                        C7819 +
                    (C7815 * C1439 - C50302 * C1443 + C7816 * C1440 -
                     C50303 * C1444 + C7817 * C1441 - C7812 * C1445) *
                        C50170) *
                       C50132 * C50099) *
                      C50071) *
                     C50006)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50035 * C248 +
                  ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50035 * C249 +
                  ((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                   (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                   (C50302 * C973 - C7815 * C969 + C50303 * C974 -
                    C7816 * C970 + C7812 * C975 - C7817 * C971) *
                       C7819 +
                   (C50302 * C981 - C7815 * C977 + C50303 * C982 -
                    C7816 * C978 + C7812 * C983 - C7817 * C979) *
                       C50170) *
                      C50132 * C50035 * C250) *
                     C251 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50035 * C248 +
                  ((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                   (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                   (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                   (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                      C50132 * C50035 * C249 +
                  ((C8004 - C8003 + C8006 - C8005 + C8008 - C8007) * C7818 +
                   (C8010 - C8009 + C8012 - C8011 + C8014 - C8013) * C50274 +
                   (C7815 * C970 - C50302 * C974 + C7816 * C971 -
                    C50303 * C975 + C7817 * C972 - C7812 * C976) *
                       C7819 +
                   (C7815 * C978 - C50302 * C982 + C7816 * C979 -
                    C50303 * C983 + C7817 * C980 - C7812 * C984) *
                       C50170) *
                      C50132 * C50035 * C250) *
                     C50006)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
                   C7812 * C131 - C7817 * C124) *
                      C7818 +
                  (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
                   C7812 * C145 - C7817 * C135) *
                      C50274 +
                  (C50302 * C263 - C7815 * C253 + C50303 * C264 - C7816 * C254 +
                   C7812 * C265 - C7817 * C255) *
                      C7819 +
                  (C50302 * C283 - C7815 * C267 + C50303 * C284 - C7816 * C268 +
                   C7812 * C285 - C7817 * C269) *
                      C50170) *
                     C50132 * C50035 * C50019 * C113 +
                 ((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
                   C7817 * C125 - C7812 * C132) *
                      C7818 +
                  (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
                   C7817 * C136 - C7812 * C146) *
                      C50274 +
                  (C7815 * C254 - C50302 * C264 + C7816 * C255 - C50303 * C265 +
                   C7817 * C256 - C7812 * C266) *
                      C7819 +
                  (C7815 * C268 - C50302 * C284 + C7816 * C269 - C50303 * C285 +
                   C7817 * C270 - C7812 * C286) *
                      C50170) *
                     C50132 * C50035 * C50019 * C114 +
                 ((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
                   C7812 * C137 - C7817 * C126) *
                      C7818 +
                  (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
                   C7812 * C147 - C7817 * C138) *
                      C50274 +
                  (C50302 * C265 - C7815 * C255 + C50303 * C266 - C7816 * C256 +
                   C7812 * C279 - C7817 * C261) *
                      C7819 +
                  (C50302 * C285 - C7815 * C269 + C50303 * C286 - C7816 * C270 +
                   C7812 * C291 - C7817 * C280) *
                      C50170) *
                     C50132 * C50035 * C50019 * C115 +
                 ((C7815 * C125 - C50302 * C132 + C7816 * C126 - C50303 * C137 +
                   C7817 * C127 - C7812 * C139) *
                      C7818 +
                  (C7815 * C136 - C50302 * C146 + C7816 * C138 - C50303 * C147 +
                   C7817 * C140 - C7812 * C148) *
                      C50274 +
                  (C7815 * C256 - C50302 * C266 + C7816 * C261 - C50303 * C279 +
                   C7817 * C537 - C7812 * C538) *
                      C7819 +
                  (C7815 * C270 - C50302 * C286 + C7816 * C280 - C50303 * C291 +
                   C7817 * C539 - C7812 * C540) *
                      C50170) *
                     C50132 * C50035 * C50019 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C391 +
                  ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                    C50303 * C405 + C7817 * C396 - C7812 * C406) *
                       C7818 +
                   (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                    C50303 * C425 + C7817 * C410 - C7812 * C426) *
                       C50274 +
                   (C7815 * C775 - C50302 * C780 + C7816 * C776 -
                    C50303 * C781 + C7817 * C777 - C7812 * C782) *
                       C7819 +
                   (C7815 * C784 - C50302 * C790 + C7816 * C785 -
                    C50303 * C791 + C7817 * C786 - C7812 * C792) *
                       C50170) *
                      C50132 * C392 +
                  ((C50302 * C412 - C7815 * C398 + C50303 * C413 -
                    C7816 * C399 + C7812 * C414 - C7817 * C400) *
                       C7818 +
                   (C50302 * C428 - C7815 * C416 + C50303 * C429 -
                    C7816 * C417 + C7812 * C430 - C7817 * C418) *
                       C50274 +
                   (C50302 * C1087 - C7815 * C1083 + C50303 * C1088 -
                    C7816 * C1084 + C7812 * C1089 - C7817 * C1085) *
                       C7819 +
                   (C50302 * C1095 - C7815 * C1091 + C50303 * C1096 -
                    C7816 * C1092 + C7812 * C1097 - C7817 * C1093) *
                       C50170) *
                      C50132 * C393) *
                     C50019 * C251 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C391 +
                  ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                    C7816 * C396 + C7812 * C407 - C7817 * C397) *
                       C7818 +
                   (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                    C7816 * C410 + C7812 * C427 - C7817 * C411) *
                       C50274 +
                   (C50302 * C781 - C7815 * C776 + C50303 * C782 -
                    C7816 * C777 + C7812 * C783 - C7817 * C778) *
                       C7819 +
                   (C50302 * C791 - C7815 * C785 + C50303 * C792 -
                    C7816 * C786 + C7812 * C793 - C7817 * C787) *
                       C50170) *
                      C50132 * C392 +
                  ((C7815 * C399 - C50302 * C413 + C7816 * C400 -
                    C50303 * C414 + C7817 * C401 - C7812 * C415) *
                       C7818 +
                   (C7815 * C417 - C50302 * C429 + C7816 * C418 -
                    C50303 * C430 + C7817 * C419 - C7812 * C431) *
                       C50274 +
                   (C7815 * C1084 - C50302 * C1088 + C7816 * C1085 -
                    C50303 * C1089 + C7817 * C1086 - C7812 * C1090) *
                       C7819 +
                   (C7815 * C1092 - C50302 * C1096 + C7816 * C1093 -
                    C50303 * C1097 + C7817 * C1094 - C7812 * C1098) *
                       C50170) *
                      C50132 * C393) *
                     C50019 * C50006)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50262 +
                  ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                    C50303 * C405 + C7817 * C396 - C7812 * C406) *
                       C7818 +
                   (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                    C50303 * C425 + C7817 * C410 - C7812 * C426) *
                       C50274 +
                   (C7815 * C775 - C50302 * C780 + C7816 * C776 -
                    C50303 * C781 + C7817 * C777 - C7812 * C782) *
                       C7819 +
                   (C7815 * C784 - C50302 * C790 + C7816 * C785 -
                    C50303 * C791 + C7817 * C786 - C7812 * C792) *
                       C50170) *
                      C50132 * C50099) *
                     C50019 * C50304 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50262 +
                  ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                    C7816 * C396 + C7812 * C407 - C7817 * C397) *
                       C7818 +
                   (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                    C7816 * C410 + C7812 * C427 - C7817 * C411) *
                       C50274 +
                   (C50302 * C781 - C7815 * C776 + C50303 * C782 -
                    C7816 * C777 + C7812 * C783 - C7817 * C778) *
                       C7819 +
                   (C50302 * C791 - C7815 * C785 + C50303 * C792 -
                    C7816 * C786 + C7812 * C793 - C7817 * C787) *
                       C50170) *
                      C50132 * C50099) *
                     C50019 * C50305 +
                 (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C7818 +
                   (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50274 +
                   (C8307 - C8308 + C8309 - C8310 + C8311 - C8312) * C7819 +
                   (C8313 - C8314 + C8315 - C8316 + C8317 - C8318) * C50170) *
                      C50132 * C50262 +
                  ((C7815 * C396 - C50302 * C406 + C7816 * C397 -
                    C50303 * C407 + C7817 * C402 - C7812 * C420) *
                       C7818 +
                   (C7815 * C410 - C50302 * C426 + C7816 * C411 -
                    C50303 * C427 + C7817 * C421 - C7812 * C432) *
                       C50274 +
                   (C7815 * C777 - C50302 * C782 + C7816 * C778 -
                    C50303 * C783 + C7817 * C779 - C7812 * C788) *
                       C7819 +
                   (C7815 * C786 - C50302 * C792 + C7816 * C787 -
                    C50303 * C793 + C7817 * C789 - C7812 * C794) *
                       C50170) *
                      C50132 * C50099) *
                     C50019 * C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
                   C7812 * C131 - C7817 * C124) *
                      C7818 +
                  (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
                   C7812 * C145 - C7817 * C135) *
                      C50274 +
                  (C50302 * C263 - C7815 * C253 + C50303 * C264 - C7816 * C254 +
                   C7812 * C265 - C7817 * C255) *
                      C7819 +
                  (C50302 * C283 - C7815 * C267 + C50303 * C284 - C7816 * C268 +
                   C7812 * C285 - C7817 * C269) *
                      C50170) *
                     C50132 * C50035 * C50019 * C113 +
                 ((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
                   C7817 * C125 - C7812 * C132) *
                      C7818 +
                  (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
                   C7817 * C136 - C7812 * C146) *
                      C50274 +
                  (C7815 * C254 - C50302 * C264 + C7816 * C255 - C50303 * C265 +
                   C7817 * C256 - C7812 * C266) *
                      C7819 +
                  (C7815 * C268 - C50302 * C284 + C7816 * C269 - C50303 * C285 +
                   C7817 * C270 - C7812 * C286) *
                      C50170) *
                     C50132 * C50035 * C50019 * C114 +
                 ((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
                   C7812 * C137 - C7817 * C126) *
                      C7818 +
                  (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
                   C7812 * C147 - C7817 * C138) *
                      C50274 +
                  (C50302 * C265 - C7815 * C255 + C50303 * C266 - C7816 * C256 +
                   C7812 * C279 - C7817 * C261) *
                      C7819 +
                  (C50302 * C285 - C7815 * C269 + C50303 * C286 - C7816 * C270 +
                   C7812 * C291 - C7817 * C280) *
                      C50170) *
                     C50132 * C50035 * C50019 * C115 +
                 ((C7815 * C125 - C50302 * C132 + C7816 * C126 - C50303 * C137 +
                   C7817 * C127 - C7812 * C139) *
                      C7818 +
                  (C7815 * C136 - C50302 * C146 + C7816 * C138 - C50303 * C147 +
                   C7817 * C140 - C7812 * C148) *
                      C50274 +
                  (C7815 * C256 - C50302 * C266 + C7816 * C261 - C50303 * C279 +
                   C7817 * C537 - C7812 * C538) *
                      C7819 +
                  (C7815 * C270 - C50302 * C286 + C7816 * C280 - C50303 * C291 +
                   C7817 * C539 - C7812 * C540) *
                      C50170) *
                     C50132 * C50035 * C50019 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50035 * C248 +
                  ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50035 * C249 +
                  ((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                   (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                   (C50302 * C973 - C7815 * C969 + C50303 * C974 -
                    C7816 * C970 + C7812 * C975 - C7817 * C971) *
                       C7819 +
                   (C50302 * C981 - C7815 * C977 + C50303 * C982 -
                    C7816 * C978 + C7812 * C983 - C7817 * C979) *
                       C50170) *
                      C50132 * C50035 * C250) *
                     C251 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50035 * C248 +
                  ((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                   (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                   (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                   (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                      C50132 * C50035 * C249 +
                  ((C8004 - C8003 + C8006 - C8005 + C8008 - C8007) * C7818 +
                   (C8010 - C8009 + C8012 - C8011 + C8014 - C8013) * C50274 +
                   (C7815 * C970 - C50302 * C974 + C7816 * C971 -
                    C50303 * C975 + C7817 * C972 - C7812 * C976) *
                       C7819 +
                   (C7815 * C978 - C50302 * C982 + C7816 * C979 -
                    C50303 * C983 + C7817 * C980 - C7812 * C984) *
                       C50170) *
                      C50132 * C50035 * C250) *
                     C50006)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50035 * C50306 +
                  ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50035 * C50307 +
                  ((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                   (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                   (C8927 - C8928 + C8929 - C8930 + C8931 - C8932) * C7819 +
                   (C8933 - C8934 + C8935 - C8936 + C8937 - C8938) * C50170) *
                      C50132 * C50035 * C1199) *
                     C50253 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50035 * C50306 +
                  ((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                   (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                   (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                   (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                      C50132 * C50035 * C50307 +
                  ((C8004 - C8003 + C8006 - C8005 + C8008 - C8007) * C7818 +
                   (C8010 - C8009 + C8012 - C8011 + C8014 - C8013) * C50274 +
                   (C7815 * C970 - C50302 * C974 + C7816 * C971 -
                    C50303 * C975 + C7817 * C972 - C7812 * C976) *
                       C7819 +
                   (C7815 * C978 - C50302 * C982 + C7816 * C979 -
                    C50303 * C983 + C7817 * C980 - C7812 * C984) *
                       C50170) *
                      C50132 * C50035 * C1199) *
                     C50006)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50262 +
                  ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                    C50303 * C405 + C7817 * C396 - C7812 * C406) *
                       C7818 +
                   (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                    C50303 * C425 + C7817 * C410 - C7812 * C426) *
                       C50274 +
                   (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                   (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                      C50132 * C50099) *
                     C50306 +
                 (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50262 +
                  ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                   (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                   (C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C7819 +
                   (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50170) *
                      C50132 * C50099) *
                     C50307 +
                 (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                   (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                   (C8927 - C8928 + C8929 - C8930 + C8931 - C8932) * C7819 +
                   (C8933 - C8934 + C8935 - C8936 + C8937 - C8938) * C50170) *
                      C50132 * C50262 +
                  ((C9584 - C9583 + C9586 - C9585 + C9588 - C9587) * C7818 +
                   (C9590 - C9589 + C9592 - C9591 + C9594 - C9593) * C50274 +
                   (C7815 * C3045 - C50302 * C3048 + C7816 * C3046 -
                    C50303 * C3049 + C7817 * C3047 - C7812 * C3052) *
                       C7819 +
                   (C7815 * C3050 - C50302 * C3054 + C7816 * C3051 -
                    C50303 * C3055 + C7817 * C3053 - C7812 * C3056) *
                       C50170) *
                      C50132 * C50099) *
                     C1199) *
                C50000) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
                   C7812 * C131 - C7817 * C124) *
                      C7818 +
                  (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
                   C7812 * C145 - C7817 * C135) *
                      C50274 +
                  (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                  (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                     C50132 * C50035 * C964 +
                 ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                  (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                  (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                  (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                     C50132 * C50035 * C965 +
                 ((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                  (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                  (C8927 - C8928 + C8929 - C8930 + C8931 - C8932) * C7819 +
                  (C8933 - C8934 + C8935 - C8936 + C8937 - C8938) * C50170) *
                     C50132 * C50035 * C966 +
                 ((C8928 - C8927 + C8930 - C8929 + C8932 - C8931) * C7818 +
                  (C8934 - C8933 + C8936 - C8935 + C8938 - C8937) * C50274 +
                  (C7815 * C2313 - C50302 * C2316 + C7816 * C2314 -
                   C50303 * C2317 + C7817 * C2315 - C7812 * C2320) *
                      C7819 +
                  (C7815 * C2318 - C50302 * C2322 + C7816 * C2319 -
                   C50303 * C2323 + C7817 * C2321 - C7812 * C2324) *
                      C50170) *
                     C50132 * C50035 * C967) *
                C50000) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50035 * C893 +
                  ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50035 * C50071) *
                     C895 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50035 * C893 +
                  ((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                   (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                   (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                   (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                      C50132 * C50035 * C50071) *
                     C896 +
                 (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C7818 +
                   (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50274 +
                   (C8307 - C8308 + C8309 - C8310 + C8311 - C8312) * C7819 +
                   (C8313 - C8314 + C8315 - C8316 + C8317 - C8318) * C50170) *
                      C50132 * C50035 * C893 +
                  ((C8308 - C8307 + C8310 - C8309 + C8312 - C8311) * C7818 +
                   (C8314 - C8313 + C8316 - C8315 + C8318 - C8317) * C50274 +
                   (C7815 * C259 - C50302 * C273 + C7816 * C260 -
                    C50303 * C274 + C7817 * C262 - C7812 * C281) *
                       C7819 +
                   (C7815 * C277 - C50302 * C289 + C7816 * C278 -
                    C50303 * C290 + C7817 * C282 - C7812 * C292) *
                       C50170) *
                      C50132 * C50035 * C50071) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C391 +
                  ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                    C50303 * C405 + C7817 * C396 - C7812 * C406) *
                       C7818 +
                   (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                    C50303 * C425 + C7817 * C410 - C7812 * C426) *
                       C50274 +
                   (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                   (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                      C50132 * C392 +
                  ((C50302 * C412 - C7815 * C398 + C50303 * C413 -
                    C7816 * C399 + C7812 * C414 - C7817 * C400) *
                       C7818 +
                   (C50302 * C428 - C7815 * C416 + C50303 * C429 -
                    C7816 * C417 + C7812 * C430 - C7817 * C418) *
                       C50274 +
                   (C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C7819 +
                   (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50170) *
                      C50132 * C393) *
                     C893 +
                 (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C391 +
                  ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                   (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                   (C50302 * C1434 - C7815 * C1430 + C50303 * C1435 -
                    C7816 * C1431 + C7812 * C1436 - C7817 * C1432) *
                       C7819 +
                   (C50302 * C1442 - C7815 * C1438 + C50303 * C1443 -
                    C7816 * C1439 + C7812 * C1444 - C7817 * C1440) *
                       C50170) *
                      C50132 * C392 +
                  ((C9086 - C9085 + C9088 - C9087 + C9090 - C9089) * C7818 +
                   (C9092 - C9091 + C9094 - C9093 + C9096 - C9095) * C50274 +
                   (C7815 * C2531 - C50302 * C2534 + C7816 * C2532 -
                    C50303 * C2535 + C7817 * C2533 - C7812 * C2538) *
                       C7819 +
                   (C7815 * C2536 - C50302 * C2540 + C7816 * C2537 -
                    C50303 * C2541 + C7817 * C2539 - C7812 * C2542) *
                       C50170) *
                      C50132 * C393) *
                     C50071) *
                C50000) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C50262 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50099) *
                      C893 +
                  (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                    (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                    (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                    (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                       C50132 * C50262 +
                   ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                    (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                    (C50302 * C1434 - C7815 * C1430 + C50303 * C1435 -
                     C7816 * C1431 + C7812 * C1436 - C7817 * C1432) *
                        C7819 +
                    (C50302 * C1442 - C7815 * C1438 + C50303 * C1443 -
                     C7816 * C1439 + C7812 * C1444 - C7817 * C1440) *
                        C50170) *
                       C50132 * C50099) *
                      C50071) *
                     C50253 +
                 ((((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                     C50303 * C131 + C7817 * C125 - C7812 * C132) *
                        C7818 +
                    (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                     C50303 * C145 + C7817 * C136 - C7812 * C146) *
                        C50274 +
                    (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                    (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                       C50132 * C50262 +
                   ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C7818 +
                    (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50274 +
                    (C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C7819 +
                    (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50170) *
                       C50132 * C50099) *
                      C893 +
                  (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                    (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                    (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                    (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                       C50132 * C50262 +
                   ((C8672 - C8671 + C8674 - C8673 + C8676 - C8675) * C7818 +
                    (C8678 - C8677 + C8680 - C8679 + C8682 - C8681) * C50274 +
                    (C7815 * C1431 - C50302 * C1435 + C7816 * C1432 -
                     C50303 * C1436 + C7817 * C1433 - C7812 * C1437) *
                        C7819 +
                    (C7815 * C1439 - C50302 * C1443 + C7816 * C1440 -
                     C50303 * C1444 + C7817 * C1441 - C7812 * C1445) *
                        C50170) *
                       C50132 * C50099) *
                      C50071) *
                     C50006)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C50035 * C893 +
                  ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                   (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                   (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                   (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                      C50132 * C50035 * C50071) *
                     C895 +
                 (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                    C50303 * C131 + C7817 * C125 - C7812 * C132) *
                       C7818 +
                   (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                    C50303 * C145 + C7817 * C136 - C7812 * C146) *
                       C50274 +
                   (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                   (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                      C50132 * C50035 * C893 +
                  ((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                   (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                   (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                   (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                      C50132 * C50035 * C50071) *
                     C896 +
                 (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C7818 +
                   (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50274 +
                   (C8307 - C8308 + C8309 - C8310 + C8311 - C8312) * C7819 +
                   (C8313 - C8314 + C8315 - C8316 + C8317 - C8318) * C50170) *
                      C50132 * C50035 * C893 +
                  ((C8308 - C8307 + C8310 - C8309 + C8312 - C8311) * C7818 +
                   (C8314 - C8313 + C8316 - C8315 + C8318 - C8317) * C50274 +
                   (C7815 * C259 - C50302 * C273 + C7816 * C260 -
                    C50303 * C274 + C7817 * C262 - C7812 * C281) *
                       C7819 +
                   (C7815 * C277 - C50302 * C289 + C7816 * C278 -
                    C50303 * C290 + C7817 * C282 - C7812 * C292) *
                       C50170) *
                      C50132 * C50035 * C50071) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
                   C7812 * C131 - C7817 * C124) *
                      C7818 +
                  (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
                   C7812 * C145 - C7817 * C135) *
                      C50274 +
                  (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                  (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                     C50132 * C50035 * C964 +
                 ((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                  (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                  (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                  (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                     C50132 * C50035 * C965 +
                 ((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                  (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                  (C8927 - C8928 + C8929 - C8930 + C8931 - C8932) * C7819 +
                  (C8933 - C8934 + C8935 - C8936 + C8937 - C8938) * C50170) *
                     C50132 * C50035 * C966 +
                 ((C8928 - C8927 + C8930 - C8929 + C8932 - C8931) * C7818 +
                  (C8934 - C8933 + C8936 - C8935 + C8938 - C8937) * C50274 +
                  (C7815 * C2313 - C50302 * C2316 + C7816 * C2314 -
                   C50303 * C2317 + C7817 * C2315 - C7812 * C2320) *
                      C7819 +
                  (C7815 * C2318 - C50302 * C2322 + C7816 * C2319 -
                   C50303 * C2323 + C7817 * C2321 - C7812 * C2324) *
                      C50170) *
                     C50132 * C50035 * C967) *
                C50000) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C7818 +
                     (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50274 +
                     (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                     (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                        C50132 * C1544 +
                    ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                      C50303 * C405 + C7817 * C396 - C7812 * C406) *
                         C7818 +
                     (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                      C50303 * C425 + C7817 * C410 - C7812 * C426) *
                         C50274 +
                     (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                     (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                        C50132 * C50099) *
                       C50261 +
                   (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                     (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                     (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                     (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                        C50132 * C1544 +
                    ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                     (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                     (C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C7819 +
                     (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50170) *
                        C50132 * C50099) *
                       C50071) *
                      C50253 +
                  ((((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                      C50303 * C131 + C7817 * C125 - C7812 * C132) *
                         C7818 +
                     (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                      C50303 * C145 + C7817 * C136 - C7812 * C146) *
                         C50274 +
                     (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                     (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                        C50132 * C1544 +
                    ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                      C7816 * C396 + C7812 * C407 - C7817 * C397) *
                         C7818 +
                     (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                      C7816 * C410 + C7812 * C427 - C7817 * C411) *
                         C50274 +
                     (C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C7819 +
                     (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50170) *
                        C50132 * C50099) *
                       C50261 +
                   (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C7818 +
                     (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50274 +
                     (C8003 - C8004 + C8005 - C8006 + C8007 - C8008) * C7819 +
                     (C8009 - C8010 + C8011 - C8012 + C8013 - C8014) * C50170) *
                        C50132 * C1544 +
                    ((C8672 - C8671 + C8674 - C8673 + C8676 - C8675) * C7818 +
                     (C8678 - C8677 + C8680 - C8679 + C8682 - C8681) * C50274 +
                     (C7815 * C1431 - C50302 * C1435 + C7816 * C1432 -
                      C50303 * C1436 + C7817 * C1433 - C7812 * C1437) *
                         C7819 +
                     (C7815 * C1439 - C50302 * C1443 + C7816 * C1440 -
                      C50303 * C1444 + C7817 * C1441 - C7812 * C1445) *
                         C50170) *
                        C50132 * C50099) *
                       C50071) *
                      C50006)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C50308 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50309 +
                   ((C50302 * C412 - C7815 * C398 + C50303 * C413 -
                     C7816 * C399 + C7812 * C414 - C7817 * C400) *
                        C7818 +
                    (C50302 * C428 - C7815 * C416 + C50303 * C429 -
                     C7816 * C417 + C7812 * C430 - C7817 * C418) *
                        C50274 +
                    (C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C7819 +
                    (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50170) *
                       C50132 * C1960) *
                      C50261 +
                  (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                    (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                    (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                    (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                       C50132 * C50308 +
                   ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                    (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                    (C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C7819 +
                    (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50170) *
                       C50132 * C50309 +
                   ((C9086 - C9085 + C9088 - C9087 + C9090 - C9089) * C7818 +
                    (C9092 - C9091 + C9094 - C9093 + C9096 - C9095) * C50274 +
                    (C7815 * C2531 - C50302 * C2534 + C7816 * C2532 -
                     C50303 * C2535 + C7817 * C2533 - C7812 * C2538) *
                        C7819 +
                    (C7815 * C2536 - C50302 * C2540 + C7816 * C2537 -
                     C50303 * C2541 + C7817 * C2539 - C7812 * C2542) *
                        C50170) *
                       C50132 * C1960) *
                      C50071) *
                 C50000) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C1544 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50099) *
                      C248 +
                  (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                    (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                    (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                    (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                       C50132 * C1544 +
                   ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                    (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                    (C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C7819 +
                    (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50170) *
                       C50132 * C50099) *
                      C249 +
                  (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                    (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                    (C8927 - C8928 + C8929 - C8930 + C8931 - C8932) * C7819 +
                    (C8933 - C8934 + C8935 - C8936 + C8937 - C8938) * C50170) *
                       C50132 * C1544 +
                   ((C9584 - C9583 + C9586 - C9585 + C9588 - C9587) * C7818 +
                    (C9590 - C9589 + C9592 - C9591 + C9594 - C9593) * C50274 +
                    (C7815 * C3045 - C50302 * C3048 + C7816 * C3046 -
                     C50303 * C3049 + C7817 * C3047 - C7812 * C3052) *
                        C7819 +
                    (C7815 * C3050 - C50302 * C3054 + C7816 * C3051 -
                     C50303 * C3055 + C7817 * C3053 - C7812 * C3056) *
                        C50170) *
                       C50132 * C50099) *
                      C250) *
                 C50000) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C1544 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50099) *
                      C50019 * C895 +
                  (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                     C50303 * C131 + C7817 * C125 - C7812 * C132) *
                        C7818 +
                    (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                     C50303 * C145 + C7817 * C136 - C7812 * C146) *
                        C50274 +
                    (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                    (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                       C50132 * C1544 +
                   ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C7818 +
                    (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50274 +
                    (C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C7819 +
                    (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50170) *
                       C50132 * C50099) *
                      C50019 * C896 +
                  (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C7818 +
                    (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50274 +
                    (C8307 - C8308 + C8309 - C8310 + C8311 - C8312) * C7819 +
                    (C8313 - C8314 + C8315 - C8316 + C8317 - C8318) * C50170) *
                       C50132 * C1544 +
                   ((C7815 * C396 - C50302 * C406 + C7816 * C397 -
                     C50303 * C407 + C7817 * C402 - C7812 * C420) *
                        C7818 +
                    (C7815 * C410 - C50302 * C426 + C7816 * C411 -
                     C50303 * C427 + C7817 * C421 - C7812 * C432) *
                        C50274 +
                    (C7815 * C777 - C50302 * C782 + C7816 * C778 -
                     C50303 * C783 + C7817 * C779 - C7812 * C788) *
                        C7819 +
                    (C7815 * C786 - C50302 * C792 + C7816 * C787 -
                     C50303 * C793 + C7817 * C789 - C7812 * C794) *
                        C50170) *
                       C50132 * C50099) *
                      C50019 * C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C7818 +
                   (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50274 +
                   (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                   (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                      C50132 * C1710 +
                  ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                    C50303 * C405 + C7817 * C396 - C7812 * C406) *
                       C7818 +
                   (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                    C50303 * C425 + C7817 * C410 - C7812 * C426) *
                       C50274 +
                   (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                   (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                      C50132 * C1711 +
                  ((C50302 * C412 - C7815 * C398 + C50303 * C413 -
                    C7816 * C399 + C7812 * C414 - C7817 * C400) *
                       C7818 +
                   (C50302 * C428 - C7815 * C416 + C50303 * C429 -
                    C7816 * C417 + C7812 * C430 - C7817 * C418) *
                       C50274 +
                   (C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C7819 +
                   (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50170) *
                      C50132 * C1712 +
                  ((C7815 * C1714 - C50302 * C1718 + C7816 * C1715 -
                    C50303 * C1719 + C7817 * C1716 - C7812 * C1720) *
                       C7818 +
                   (C7815 * C1722 - C50302 * C1726 + C7816 * C1723 -
                    C50303 * C1727 + C7817 * C1724 - C7812 * C1728) *
                       C50274 +
                   (C7815 * C4423 - C50302 * C4427 + C7816 * C4424 -
                    C50303 * C4428 + C7817 * C5898 - C7812 * C5899) *
                       C7819 +
                   (C7815 * C4429 - C50302 * C4435 + C7816 * C4430 -
                    C50303 * C4436 + C7817 * C5900 - C7812 * C5901) *
                       C50170) *
                      C50132 * C1713) *
                 C50019 * C50000) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C50308 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50309 +
                   ((C50302 * C412 - C7815 * C398 + C50303 * C413 -
                     C7816 * C399 + C7812 * C414 - C7817 * C400) *
                        C7818 +
                    (C50302 * C428 - C7815 * C416 + C50303 * C429 -
                     C7816 * C417 + C7812 * C430 - C7817 * C418) *
                        C50274 +
                    (C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C7819 +
                    (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50170) *
                       C50132 * C1960) *
                      C50019 * C50253 +
                  (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                     C50303 * C131 + C7817 * C125 - C7812 * C132) *
                        C7818 +
                    (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                     C50303 * C145 + C7817 * C136 - C7812 * C146) *
                        C50274 +
                    (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                    (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                       C50132 * C50308 +
                   ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C7818 +
                    (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50274 +
                    (C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C7819 +
                    (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50170) *
                       C50132 * C50309 +
                   ((C7815 * C399 - C50302 * C413 + C7816 * C400 -
                     C50303 * C414 + C7817 * C401 - C7812 * C415) *
                        C7818 +
                    (C7815 * C417 - C50302 * C429 + C7816 * C418 -
                     C50303 * C430 + C7817 * C419 - C7812 * C431) *
                        C50274 +
                    (C7815 * C1084 - C50302 * C1088 + C7816 * C1085 -
                     C50303 * C1089 + C7817 * C1086 - C7812 * C1090) *
                        C7819 +
                    (C7815 * C1092 - C50302 * C1096 + C7816 * C1093 -
                     C50303 * C1097 + C7817 * C1094 - C7812 * C1098) *
                        C50170) *
                       C50132 * C1960) *
                      C50019 * C50006)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C1544 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50099) *
                      C50019 * C895 +
                  (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                     C50303 * C131 + C7817 * C125 - C7812 * C132) *
                        C7818 +
                    (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                     C50303 * C145 + C7817 * C136 - C7812 * C146) *
                        C50274 +
                    (C7991 - C7992 + C7993 - C7994 + C7995 - C7996) * C7819 +
                    (C7997 - C7998 + C7999 - C8000 + C8001 - C8002) * C50170) *
                       C50132 * C1544 +
                   ((C50302 * C405 - C7815 * C395 + C50303 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C7818 +
                    (C50302 * C425 - C7815 * C409 + C50303 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50274 +
                    (C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C7819 +
                    (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50170) *
                       C50132 * C50099) *
                      C50019 * C896 +
                  (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C7818 +
                    (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50274 +
                    (C8307 - C8308 + C8309 - C8310 + C8311 - C8312) * C7819 +
                    (C8313 - C8314 + C8315 - C8316 + C8317 - C8318) * C50170) *
                       C50132 * C1544 +
                   ((C7815 * C396 - C50302 * C406 + C7816 * C397 -
                     C50303 * C407 + C7817 * C402 - C7812 * C420) *
                        C7818 +
                    (C7815 * C410 - C50302 * C426 + C7816 * C411 -
                     C50303 * C427 + C7817 * C421 - C7812 * C432) *
                        C50274 +
                    (C7815 * C777 - C50302 * C782 + C7816 * C778 -
                     C50303 * C783 + C7817 * C779 - C7812 * C788) *
                        C7819 +
                    (C7815 * C786 - C50302 * C792 + C7816 * C787 -
                     C50303 * C793 + C7817 * C789 - C7812 * C794) *
                        C50170) *
                       C50132 * C50099) *
                      C50019 * C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C7818 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50274 +
                    (C7967 - C7968 + C7969 - C7970 + C7971 - C7972) * C7819 +
                    (C7973 - C7974 + C7975 - C7976 + C7977 - C7978) * C50170) *
                       C50132 * C1544 +
                   ((C7815 * C394 - C50302 * C404 + C7816 * C395 -
                     C50303 * C405 + C7817 * C396 - C7812 * C406) *
                        C7818 +
                    (C7815 * C408 - C50302 * C424 + C7816 * C409 -
                     C50303 * C425 + C7817 * C410 - C7812 * C426) *
                        C50274 +
                    (C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C7819 +
                    (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50170) *
                       C50132 * C50099) *
                      C248 +
                  (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C7818 +
                    (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50274 +
                    (C7979 - C7980 + C7981 - C7982 + C7983 - C7984) * C7819 +
                    (C7985 - C7986 + C7987 - C7988 + C7989 - C7990) * C50170) *
                       C50132 * C1544 +
                   ((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C7818 +
                    (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50274 +
                    (C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C7819 +
                    (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50170) *
                       C50132 * C50099) *
                      C249 +
                  (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C7818 +
                    (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50274 +
                    (C8927 - C8928 + C8929 - C8930 + C8931 - C8932) * C7819 +
                    (C8933 - C8934 + C8935 - C8936 + C8937 - C8938) * C50170) *
                       C50132 * C1544 +
                   ((C9584 - C9583 + C9586 - C9585 + C9588 - C9587) * C7818 +
                    (C9590 - C9589 + C9592 - C9591 + C9594 - C9593) * C50274 +
                    (C7815 * C3045 - C50302 * C3048 + C7816 * C3046 -
                     C50303 * C3049 + C7817 * C3047 - C7812 * C3052) *
                        C7819 +
                    (C7815 * C3050 - C50302 * C3054 + C7816 * C3051 -
                     C50303 * C3055 + C7817 * C3053 - C7812 * C3056) *
                        C50170) *
                       C50132 * C50099) *
                      C250) *
                 C50000) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 +
             (C3059 - C3058 + C3061 - C3060) * C7819 +
             (C3063 - C3062 + C3065 - C3064) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            ((C3058 - C3059 + C3060 - C3061) * C7818 +
             (C3062 - C3063 + C3064 - C3065) * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 +
             (C3075 - C3074 + C3077 - C3076) * C7819 +
             (C3079 - C3078 + C3081 - C3080) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C2351 - C2350 + C2353 - C2352) * C7818 +
             (C2355 - C2354 + C2357 - C2356) * C50274 +
             (C2359 - C2358 + C2361 - C2360) * C7819 +
             (C2363 - C2362 + C2365 - C2364) * C50170) *
                C50275 +
            ((C3074 - C3075 + C3076 - C3077) * C7818 +
             (C3078 - C3079 + C3080 - C3081) * C50274 +
             (C3082 - C3083 + C3084 - C3085) * C7819 +
             (C3086 - C3087 + C3088 - C3089) * C50170) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C7818 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50274 +
             (C2690 - C2691 + C2692 - C2693) * C7819 +
             (C2694 - C2695 + C2696 - C2697) * C50170) *
                C50275 +
            ((C5689 - C5690 + C5691 - C5692) * C7818 +
             (C5693 - C5694 + C5695 - C5696) * C50274 +
             (C13885 - C13886 + C13887 - C13888) * C7819 +
             (C13889 - C13890 + C13891 - C13892) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C2691 - C2690 + C2693 - C2692) * C7818 +
             (C2695 - C2694 + C2697 - C2696) * C50274 +
             (C2699 - C2698 + C2701 - C2700) * C7819 +
             (C2703 - C2702 + C2705 - C2704) * C50170) *
                C50275 +
            ((C13886 - C13885 + C13888 - C13887) * C7818 +
             (C13890 - C13889 + C13892 - C13891) * C50274 +
             (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                 C7819 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                  C7818 +
              (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                  C50274 +
              (C2326 - C2327 + C2328 - C2329) * C7819 +
              (C2330 - C2331 + C2332 - C2333) * C50170) *
                 C50275 +
             ((C5331 - C5332 + C5333 - C5334) * C7818 +
              (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
              C14362 * C50170) *
                 C50196) *
                C50262 +
            (((C5332 - C5331 + C5334 - C5333) * C7818 +
              (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
              C14364 * C50170) *
                 C50275 +
             ((C5340 - C5339 + C5342 - C5341) * C7818 +
              (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
              C6322 * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C2327 - C2326 + C2329 - C2328) * C7818 +
              (C2331 - C2330 + C2333 - C2332) * C50274 +
              (C2335 - C2334 + C2337 - C2336) * C7819 +
              (C2339 - C2338 + C2341 - C2340) * C50170) *
                 C50275 +
             (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
              C4033 * C50170) *
                 C50196) *
                C50262 +
            ((C14361 * C7818 + C14362 * C50274 +
              (C3067 - C3066 + C3069 - C3068) * C7819 +
              (C3071 - C3070 + C3073 - C3072) * C50170) *
                 C50275 +
             ((C3510 - C3511 + C3512 - C3513) * C7818 +
              (C3514 - C3515 + C3516 - C3517) * C50274 +
              (C3518 - C3519 + C3520 - C3521) * C7819 +
              (C3522 - C3523 + C3524 - C3525) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                  C7818 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                  C50274 +
              (C2350 - C2351 + C2352 - C2353) * C7819 +
              (C2354 - C2355 + C2356 - C2357) * C50170) *
                 C50275 +
             ((C5355 - C5356 + C5357 - C5358) * C7818 +
              (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
              C14366 * C50170) *
                 C50196) *
                C50262 +
            (((C5356 - C5355 + C5358 - C5357) * C7818 +
              (C5360 - C5359 + C5362 - C5361) * C50274 + C14367 * C7819 +
              C14368 * C50170) *
                 C50275 +
             ((C5364 - C5363 + C5366 - C5365) * C7818 +
              (C5368 - C5367 + C5370 - C5369) * C50274 +
              (C5903 - C5904 + C5905 - C5906) * C7819 +
              (C5907 - C5908 + C5909 - C5910) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C2351 - C2350 + C2353 - C2352) * C7818 +
              (C2355 - C2354 + C2357 - C2356) * C50274 +
              (C2359 - C2358 + C2361 - C2360) * C7819 +
              (C2363 - C2362 + C2365 - C2364) * C50170) *
                 C50275 +
             (C14367 * C7818 + C14368 * C50274 +
              (C3082 - C3083 + C3084 - C3085) * C7819 +
              (C3086 - C3087 + C3088 - C3089) * C50170) *
                 C50196) *
                C50262 +
            ((C14365 * C7818 + C14366 * C50274 +
              (C3083 - C3082 + C3085 - C3084) * C7819 +
              (C3087 - C3086 + C3089 - C3088) * C50170) *
                 C50275 +
             ((C5904 - C5903 + C5906 - C5905) * C7818 +
              (C5908 - C5907 + C5910 - C5909) * C50274 +
              (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                  C7819 +
              (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 +
             (C3059 - C3058 + C3061 - C3060) * C7819 +
             (C3063 - C3062 + C3065 - C3064) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            ((C3058 - C3059 + C3060 - C3061) * C7818 +
             (C3062 - C3063 + C3064 - C3065) * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50035 * C249 +
           ((C2382 * C7818 + C2383 * C50274 +
             (C2343 - C2342 + C2345 - C2344) * C7819 +
             (C2347 - C2346 + C2349 - C2348) * C50170) *
                C50275 +
            ((C3067 - C3066 + C3069 - C3068) * C7818 +
             (C3071 - C3070 + C3073 - C3072) * C50274 +
             (C4024 - C4025 + C4026 - C4027) * C7819 +
             (C4028 - C4029 + C4030 - C4031) * C50170) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 +
             (C3075 - C3074 + C3077 - C3076) * C7819 +
             (C3079 - C3078 + C3081 - C3080) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C2351 - C2350 + C2353 - C2352) * C7818 +
             (C2355 - C2354 + C2357 - C2356) * C50274 +
             (C2359 - C2358 + C2361 - C2360) * C7819 +
             (C2363 - C2362 + C2365 - C2364) * C50170) *
                C50275 +
            ((C3074 - C3075 + C3076 - C3077) * C7818 +
             (C3078 - C3079 + C3080 - C3081) * C50274 +
             (C3082 - C3083 + C3084 - C3085) * C7819 +
             (C3086 - C3087 + C3088 - C3089) * C50170) *
                C50196) *
               C50035 * C249 +
           ((C2384 * C7818 + C2385 * C50274 +
             (C2367 - C2366 + C2369 - C2368) * C7819 +
             (C2371 - C2370 + C2373 - C2372) * C50170) *
                C50275 +
            ((C3083 - C3082 + C3085 - C3084) * C7818 +
             (C3087 - C3086 + C3089 - C3088) * C50274 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C7819 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C7818 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50274 +
            (C2326 - C2327 + C2328 - C2329) * C7819 +
            (C2330 - C2331 + C2332 - C2333) * C50170) *
               C50275 +
           ((C5331 - C5332 + C5333 - C5334) * C7818 +
            (C5335 - C5336 + C5337 - C5338) * C50274 +
            (C3059 - C3058 + C3061 - C3060) * C7819 +
            (C3063 - C3062 + C3065 - C3064) * C50170) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C7818 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C50274 +
            (C2350 - C2351 + C2352 - C2353) * C7819 +
            (C2354 - C2355 + C2356 - C2357) * C50170) *
               C50275 +
           ((C5355 - C5356 + C5357 - C5358) * C7818 +
            (C5359 - C5360 + C5361 - C5362) * C50274 +
            (C3075 - C3074 + C3077 - C3076) * C7819 +
            (C3079 - C3078 + C3081 - C3080) * C50170) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C7818 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C50274 +
            (C2690 - C2691 + C2692 - C2693) * C7819 +
            (C2694 - C2695 + C2696 - C2697) * C50170) *
               C50275 +
           ((C5689 - C5690 + C5691 - C5692) * C7818 +
            (C5693 - C5694 + C5695 - C5696) * C50274 +
            (C2157 * C782 - C2162 * C777 + C49975 * C783 - C2163 * C778) *
                C7819 +
            (C2157 * C792 - C2162 * C786 + C49975 * C793 - C2163 * C787) *
                C50170) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
                C7818 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
                C50274 +
            (C2162 * C256 - C2157 * C266 + C2163 * C261 - C49975 * C279) *
                C7819 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C49975 * C291) *
                C50170) *
               C50275 +
           ((C2162 * C397 - C2157 * C407 + C2163 * C402 - C49975 * C420) *
                C7818 +
            (C2162 * C411 - C2157 * C427 + C2163 * C421 - C49975 * C432) *
                C50274 +
            (C2162 * C778 - C2157 * C783 + C2163 * C779 - C49975 * C788) *
                C7819 +
            (C2162 * C787 - C2157 * C793 + C2163 * C789 - C49975 * C794) *
                C50170) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 +
             (C3059 - C3058 + C3061 - C3060) * C7819 +
             (C3063 - C3062 + C3065 - C3064) * C50170) *
                C50196) *
               C391 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 +
             (C3058 - C3059 + C3060 - C3061) * C7819 +
             (C3062 - C3063 + C3064 - C3065) * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C392 +
           ((C5387 * C7818 + C5388 * C50274 +
             (C3510 - C3511 + C3512 - C3513) * C7819 +
             (C3514 - C3515 + C3516 - C3517) * C50170) *
                C50275 +
            ((C5348 - C5347 + C5350 - C5349) * C7818 +
             (C5352 - C5351 + C5354 - C5353) * C50274 +
             (C6313 - C6314 + C6315 - C6316) * C7819 +
             (C6317 - C6318 + C6319 - C6320) * C50170) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 +
             (C3075 - C3074 + C3077 - C3076) * C7819 +
             (C3079 - C3078 + C3081 - C3080) * C50170) *
                C50196) *
               C391 +
           (((C5356 - C5355 + C5358 - C5357) * C7818 +
             (C5360 - C5359 + C5362 - C5361) * C50274 +
             (C3074 - C3075 + C3076 - C3077) * C7819 +
             (C3078 - C3079 + C3080 - C3081) * C50170) *
                C50275 +
            ((C5364 - C5363 + C5366 - C5365) * C7818 +
             (C5368 - C5367 + C5370 - C5369) * C50274 +
             (C5903 - C5904 + C5905 - C5906) * C7819 +
             (C5907 - C5908 + C5909 - C5910) * C50170) *
                C50196) *
               C392 +
           ((C5389 * C7818 + C5390 * C50274 +
             (C5904 - C5903 + C5906 - C5905) * C7819 +
             (C5908 - C5907 + C5910 - C5909) * C50170) *
                C50275 +
            ((C5372 - C5371 + C5374 - C5373) * C7818 +
             (C5376 - C5375 + C5378 - C5377) * C50274 +
             (C2162 * C4424 - C2157 * C4428 + C2163 * C5898 - C49975 * C5899) *
                 C7819 +
             (C2162 * C4430 - C2157 * C4436 + C2163 * C5900 - C49975 * C5901) *
                 C50170) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 +
             (C3059 - C3058 + C3061 - C3060) * C7819 +
             (C3063 - C3062 + C3065 - C3064) * C50170) *
                C50196) *
               C50262 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 +
             (C3058 - C3059 + C3060 - C3061) * C7819 +
             (C3062 - C3063 + C3064 - C3065) * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 +
             (C3075 - C3074 + C3077 - C3076) * C7819 +
             (C3079 - C3078 + C3081 - C3080) * C50170) *
                C50196) *
               C50262 +
           (((C5356 - C5355 + C5358 - C5357) * C7818 +
             (C5360 - C5359 + C5362 - C5361) * C50274 +
             (C3074 - C3075 + C3076 - C3077) * C7819 +
             (C3078 - C3079 + C3080 - C3081) * C50170) *
                C50275 +
            ((C5364 - C5363 + C5366 - C5365) * C7818 +
             (C5368 - C5367 + C5370 - C5369) * C50274 +
             (C5903 - C5904 + C5905 - C5906) * C7819 +
             (C5907 - C5908 + C5909 - C5910) * C50170) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C7818 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50274 +
             (C2690 - C2691 + C2692 - C2693) * C7819 +
             (C2694 - C2695 + C2696 - C2697) * C50170) *
                C50275 +
            ((C5689 - C5690 + C5691 - C5692) * C7818 +
             (C5693 - C5694 + C5695 - C5696) * C50274 +
             (C13885 - C13886 + C13887 - C13888) * C7819 +
             (C13889 - C13890 + C13891 - C13892) * C50170) *
                C50196) *
               C50262 +
           (((C5690 - C5689 + C5692 - C5691) * C7818 +
             (C5694 - C5693 + C5696 - C5695) * C50274 +
             (C13886 - C13885 + C13888 - C13887) * C7819 +
             (C13890 - C13889 + C13892 - C13891) * C50170) *
                C50275 +
            ((C5698 - C5697 + C5700 - C5699) * C7818 +
             (C5702 - C5701 + C5704 - C5703) * C50274 +
             (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C49975 * C1090) *
                 C7819 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C7818 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50274 +
            (C2326 - C2327 + C2328 - C2329) * C7819 +
            (C2330 - C2331 + C2332 - C2333) * C50170) *
               C50275 +
           ((C5331 - C5332 + C5333 - C5334) * C7818 +
            (C5335 - C5336 + C5337 - C5338) * C50274 +
            (C3059 - C3058 + C3061 - C3060) * C7819 +
            (C3063 - C3062 + C3065 - C3064) * C50170) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C7818 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C50274 +
            (C2350 - C2351 + C2352 - C2353) * C7819 +
            (C2354 - C2355 + C2356 - C2357) * C50170) *
               C50275 +
           ((C5355 - C5356 + C5357 - C5358) * C7818 +
            (C5359 - C5360 + C5361 - C5362) * C50274 +
            (C3075 - C3074 + C3077 - C3076) * C7819 +
            (C3079 - C3078 + C3081 - C3080) * C50170) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C7818 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C50274 +
            (C2690 - C2691 + C2692 - C2693) * C7819 +
            (C2694 - C2695 + C2696 - C2697) * C50170) *
               C50275 +
           ((C5689 - C5690 + C5691 - C5692) * C7818 +
            (C5693 - C5694 + C5695 - C5696) * C50274 +
            (C2157 * C782 - C2162 * C777 + C49975 * C783 - C2163 * C778) *
                C7819 +
            (C2157 * C792 - C2162 * C786 + C49975 * C793 - C2163 * C787) *
                C50170) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
                C7818 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
                C50274 +
            (C2162 * C256 - C2157 * C266 + C2163 * C261 - C49975 * C279) *
                C7819 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C49975 * C291) *
                C50170) *
               C50275 +
           ((C2162 * C397 - C2157 * C407 + C2163 * C402 - C49975 * C420) *
                C7818 +
            (C2162 * C411 - C2157 * C427 + C2163 * C421 - C49975 * C432) *
                C50274 +
            (C2162 * C778 - C2157 * C783 + C2163 * C779 - C49975 * C788) *
                C7819 +
            (C2162 * C787 - C2157 * C793 + C2163 * C789 - C49975 * C794) *
                C50170) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 +
             (C3059 - C3058 + C3061 - C3060) * C7819 +
             (C3063 - C3062 + C3065 - C3064) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            ((C3058 - C3059 + C3060 - C3061) * C7818 +
             (C3062 - C3063 + C3064 - C3065) * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50035 * C249 +
           ((C2382 * C7818 + C2383 * C50274 +
             (C2343 - C2342 + C2345 - C2344) * C7819 +
             (C2347 - C2346 + C2349 - C2348) * C50170) *
                C50275 +
            ((C3067 - C3066 + C3069 - C3068) * C7818 +
             (C3071 - C3070 + C3073 - C3072) * C50274 +
             (C4024 - C4025 + C4026 - C4027) * C7819 +
             (C4028 - C4029 + C4030 - C4031) * C50170) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 +
             (C3075 - C3074 + C3077 - C3076) * C7819 +
             (C3079 - C3078 + C3081 - C3080) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C2351 - C2350 + C2353 - C2352) * C7818 +
             (C2355 - C2354 + C2357 - C2356) * C50274 +
             (C2359 - C2358 + C2361 - C2360) * C7819 +
             (C2363 - C2362 + C2365 - C2364) * C50170) *
                C50275 +
            ((C3074 - C3075 + C3076 - C3077) * C7818 +
             (C3078 - C3079 + C3080 - C3081) * C50274 +
             (C3082 - C3083 + C3084 - C3085) * C7819 +
             (C3086 - C3087 + C3088 - C3089) * C50170) *
                C50196) *
               C50035 * C249 +
           ((C2384 * C7818 + C2385 * C50274 +
             (C2367 - C2366 + C2369 - C2368) * C7819 +
             (C2371 - C2370 + C2373 - C2372) * C50170) *
                C50275 +
            ((C3083 - C3082 + C3085 - C3084) * C7818 +
             (C3087 - C3086 + C3089 - C3088) * C50274 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C7819 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C50035 * C50306 +
           (((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50035 * C50307 +
           ((C2382 * C7818 + C2383 * C50274 +
             (C2343 - C2342 + C2345 - C2344) * C7819 +
             (C2347 - C2346 + C2349 - C2348) * C50170) *
                C50275 +
            ((C3067 - C3066 + C3069 - C3068) * C7818 +
             (C3071 - C3070 + C3073 - C3072) * C50274 +
             (C4024 - C4025 + C4026 - C4027) * C7819 +
             (C4028 - C4029 + C4030 - C4031) * C50170) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
             C14366 * C50170) *
                C50196) *
               C50035 * C50306 +
           (((C2351 - C2350 + C2353 - C2352) * C7818 +
             (C2355 - C2354 + C2357 - C2356) * C50274 +
             (C2359 - C2358 + C2361 - C2360) * C7819 +
             (C2363 - C2362 + C2365 - C2364) * C50170) *
                C50275 +
            (C14367 * C7818 + C14368 * C50274 +
             (C3082 - C3083 + C3084 - C3085) * C7819 +
             (C3086 - C3087 + C3088 - C3089) * C50170) *
                C50196) *
               C50035 * C50307 +
           ((C2384 * C7818 + C2385 * C50274 +
             (C2367 - C2366 + C2369 - C2368) * C7819 +
             (C2371 - C2370 + C2373 - C2372) * C50170) *
                C50275 +
            ((C3083 - C3082 + C3085 - C3084) * C7818 +
             (C3087 - C3086 + C3089 - C3088) * C50274 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C7819 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C50262 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50099) *
              C50306 +
          ((((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50262 +
           ((C14361 * C7818 + C14362 * C50274 + C15543 * C7819 +
             C15544 * C50170) *
                C50275 +
            (C14891 * C7818 + C14892 * C50274 +
             (C3518 - C3519 + C3520 - C3521) * C7819 +
             (C3522 - C3523 + C3524 - C3525) * C50170) *
                C50196) *
               C50099) *
              C50307 +
          (((C2382 * C7818 + C2383 * C50274 +
             (C2343 - C2342 + C2345 - C2344) * C7819 +
             (C2347 - C2346 + C2349 - C2348) * C50170) *
                C50275 +
            (C15543 * C7818 + C15544 * C50274 +
             (C4024 - C4025 + C4026 - C4027) * C7819 +
             (C4028 - C4029 + C4030 - C4031) * C50170) *
                C50196) *
               C50262 +
           ((C4032 * C7818 + C4033 * C50274 +
             (C4025 - C4024 + C4027 - C4026) * C7819 +
             (C4029 - C4028 + C4031 - C4030) * C50170) *
                C50275 +
            ((C3519 - C3518 + C3521 - C3520) * C7818 +
             (C3523 - C3522 + C3525 - C3524) * C50274 +
             (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                 C7819 +
             (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C7818 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50274 +
            (C2326 - C2327 + C2328 - C2329) * C7819 +
            (C2330 - C2331 + C2332 - C2333) * C50170) *
               C50275 +
           ((C5331 - C5332 + C5333 - C5334) * C7818 +
            (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
            C14362 * C50170) *
               C50196) *
              C50035 * C964 +
          (((C2327 - C2326 + C2329 - C2328) * C7818 +
            (C2331 - C2330 + C2333 - C2332) * C50274 +
            (C2335 - C2334 + C2337 - C2336) * C7819 +
            (C2339 - C2338 + C2341 - C2340) * C50170) *
               C50275 +
           (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 + C4033 * C50170) *
               C50196) *
              C50035 * C965 +
          ((C2382 * C7818 + C2383 * C50274 +
            (C2343 - C2342 + C2345 - C2344) * C7819 +
            (C2347 - C2346 + C2349 - C2348) * C50170) *
               C50275 +
           ((C3067 - C3066 + C3069 - C3068) * C7818 +
            (C3071 - C3070 + C3073 - C3072) * C50274 +
            (C4024 - C4025 + C4026 - C4027) * C7819 +
            (C4028 - C4029 + C4030 - C4031) * C50170) *
               C50196) *
              C50035 * C966 +
          ((C3354 * C7818 + C3355 * C50274 +
            (C3347 - C3346 + C3349 - C3348) * C7819 +
            (C3351 - C3350 + C3353 - C3352) * C50170) *
               C50275 +
           ((C4025 - C4024 + C4027 - C4026) * C7818 +
            (C4029 - C4028 + C4031 - C4030) * C50274 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C7819 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C50170) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
             C14366 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C2351 - C2350 + C2353 - C2352) * C7818 +
             (C2355 - C2354 + C2357 - C2356) * C50274 +
             (C2359 - C2358 + C2361 - C2360) * C7819 +
             (C2363 - C2362 + C2365 - C2364) * C50170) *
                C50275 +
            (C14367 * C7818 + C14368 * C50274 +
             (C3082 - C3083 + C3084 - C3085) * C7819 +
             (C3086 - C3087 + C3088 - C3089) * C50170) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C7818 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50274 +
             (C2690 - C2691 + C2692 - C2693) * C7819 +
             (C2694 - C2695 + C2696 - C2697) * C50170) *
                C50275 +
            ((C5689 - C5690 + C5691 - C5692) * C7818 +
             (C5693 - C5694 + C5695 - C5696) * C50274 +
             (C13885 - C13886 + C13887 - C13888) * C7819 +
             (C13889 - C13890 + C13891 - C13892) * C50170) *
                C50196) *
               C50035 * C893 +
           (((C2691 - C2690 + C2693 - C2692) * C7818 +
             (C2695 - C2694 + C2697 - C2696) * C50274 +
             (C2699 - C2698 + C2701 - C2700) * C7819 +
             (C2703 - C2702 + C2705 - C2704) * C50170) *
                C50275 +
            ((C13886 - C13885 + C13888 - C13887) * C7818 +
             (C13890 - C13889 + C13892 - C13891) * C50274 +
             (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                 C7819 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C391 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C392 +
           ((C5387 * C7818 + C5388 * C50274 + C14891 * C7819 +
             C14892 * C50170) *
                C50275 +
            ((C5348 - C5347 + C5350 - C5349) * C7818 +
             (C5352 - C5351 + C5354 - C5353) * C50274 +
             (C6313 - C6314 + C6315 - C6316) * C7819 +
             (C6317 - C6318 + C6319 - C6320) * C50170) *
                C50196) *
               C393) *
              C893 +
          ((((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C391 +
           ((C14361 * C7818 + C14362 * C50274 +
             (C3067 - C3066 + C3069 - C3068) * C7819 +
             (C3071 - C3070 + C3073 - C3072) * C50170) *
                C50275 +
            (C14891 * C7818 + C14892 * C50274 +
             (C3518 - C3519 + C3520 - C3521) * C7819 +
             (C3522 - C3523 + C3524 - C3525) * C50170) *
                C50196) *
               C392 +
           ((C6321 * C7818 + C6322 * C50274 +
             (C3519 - C3518 + C3521 - C3520) * C7819 +
             (C3523 - C3522 + C3525 - C3524) * C50170) *
                C50275 +
            ((C6314 - C6313 + C6316 - C6315) * C7818 +
             (C6318 - C6317 + C6320 - C6319) * C50274 +
             (C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
                 C7819 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
                 C50170) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                  C7818 +
              (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                  C50274 +
              (C2326 - C2327 + C2328 - C2329) * C7819 +
              (C2330 - C2331 + C2332 - C2333) * C50170) *
                 C50275 +
             ((C5331 - C5332 + C5333 - C5334) * C7818 +
              (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
              C14362 * C50170) *
                 C50196) *
                C50262 +
            (((C5332 - C5331 + C5334 - C5333) * C7818 +
              (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
              C14364 * C50170) *
                 C50275 +
             ((C5340 - C5339 + C5342 - C5341) * C7818 +
              (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
              C6322 * C50170) *
                 C50196) *
                C50099) *
               C893 +
           ((((C2327 - C2326 + C2329 - C2328) * C7818 +
              (C2331 - C2330 + C2333 - C2332) * C50274 +
              (C2335 - C2334 + C2337 - C2336) * C7819 +
              (C2339 - C2338 + C2341 - C2340) * C50170) *
                 C50275 +
             (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
              C4033 * C50170) *
                 C50196) *
                C50262 +
            ((C14361 * C7818 + C14362 * C50274 +
              (C3067 - C3066 + C3069 - C3068) * C7819 +
              (C3071 - C3070 + C3073 - C3072) * C50170) *
                 C50275 +
             (C14891 * C7818 + C14892 * C50274 +
              (C3518 - C3519 + C3520 - C3521) * C7819 +
              (C3522 - C3523 + C3524 - C3525) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                  C7818 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                  C50274 +
              (C2350 - C2351 + C2352 - C2353) * C7819 +
              (C2354 - C2355 + C2356 - C2357) * C50170) *
                 C50275 +
             ((C5355 - C5356 + C5357 - C5358) * C7818 +
              (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
              C14366 * C50170) *
                 C50196) *
                C50262 +
            (((C5356 - C5355 + C5358 - C5357) * C7818 +
              (C5360 - C5359 + C5362 - C5361) * C50274 + C14367 * C7819 +
              C14368 * C50170) *
                 C50275 +
             ((C5364 - C5363 + C5366 - C5365) * C7818 +
              (C5368 - C5367 + C5370 - C5369) * C50274 +
              (C5903 - C5904 + C5905 - C5906) * C7819 +
              (C5907 - C5908 + C5909 - C5910) * C50170) *
                 C50196) *
                C50099) *
               C893 +
           ((((C2351 - C2350 + C2353 - C2352) * C7818 +
              (C2355 - C2354 + C2357 - C2356) * C50274 +
              (C2359 - C2358 + C2361 - C2360) * C7819 +
              (C2363 - C2362 + C2365 - C2364) * C50170) *
                 C50275 +
             (C14367 * C7818 + C14368 * C50274 +
              (C3082 - C3083 + C3084 - C3085) * C7819 +
              (C3086 - C3087 + C3088 - C3089) * C50170) *
                 C50196) *
                C50262 +
            ((C14365 * C7818 + C14366 * C50274 +
              (C3083 - C3082 + C3085 - C3084) * C7819 +
              (C3087 - C3086 + C3089 - C3088) * C50170) *
                 C50275 +
             ((C5904 - C5903 + C5906 - C5905) * C7818 +
              (C5908 - C5907 + C5910 - C5909) * C50274 +
              (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                  C7819 +
              (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
             C14366 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C2351 - C2350 + C2353 - C2352) * C7818 +
             (C2355 - C2354 + C2357 - C2356) * C50274 +
             (C2359 - C2358 + C2361 - C2360) * C7819 +
             (C2363 - C2362 + C2365 - C2364) * C50170) *
                C50275 +
            (C14367 * C7818 + C14368 * C50274 +
             (C3082 - C3083 + C3084 - C3085) * C7819 +
             (C3086 - C3087 + C3088 - C3089) * C50170) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C7818 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50274 +
             (C2690 - C2691 + C2692 - C2693) * C7819 +
             (C2694 - C2695 + C2696 - C2697) * C50170) *
                C50275 +
            ((C5689 - C5690 + C5691 - C5692) * C7818 +
             (C5693 - C5694 + C5695 - C5696) * C50274 +
             (C13885 - C13886 + C13887 - C13888) * C7819 +
             (C13889 - C13890 + C13891 - C13892) * C50170) *
                C50196) *
               C50035 * C893 +
           (((C2691 - C2690 + C2693 - C2692) * C7818 +
             (C2695 - C2694 + C2697 - C2696) * C50274 +
             (C2699 - C2698 + C2701 - C2700) * C7819 +
             (C2703 - C2702 + C2705 - C2704) * C50170) *
                C50275 +
            ((C13886 - C13885 + C13888 - C13887) * C7818 +
             (C13890 - C13889 + C13892 - C13891) * C50274 +
             (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                 C7819 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C7818 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50274 +
            (C2326 - C2327 + C2328 - C2329) * C7819 +
            (C2330 - C2331 + C2332 - C2333) * C50170) *
               C50275 +
           ((C5331 - C5332 + C5333 - C5334) * C7818 +
            (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
            C14362 * C50170) *
               C50196) *
              C50035 * C964 +
          (((C2327 - C2326 + C2329 - C2328) * C7818 +
            (C2331 - C2330 + C2333 - C2332) * C50274 +
            (C2335 - C2334 + C2337 - C2336) * C7819 +
            (C2339 - C2338 + C2341 - C2340) * C50170) *
               C50275 +
           (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 + C4033 * C50170) *
               C50196) *
              C50035 * C965 +
          ((C2382 * C7818 + C2383 * C50274 +
            (C2343 - C2342 + C2345 - C2344) * C7819 +
            (C2347 - C2346 + C2349 - C2348) * C50170) *
               C50275 +
           ((C3067 - C3066 + C3069 - C3068) * C7818 +
            (C3071 - C3070 + C3073 - C3072) * C50274 +
            (C4024 - C4025 + C4026 - C4027) * C7819 +
            (C4028 - C4029 + C4030 - C4031) * C50170) *
               C50196) *
              C50035 * C966 +
          ((C3354 * C7818 + C3355 * C50274 +
            (C3347 - C3346 + C3349 - C3348) * C7819 +
            (C3351 - C3350 + C3353 - C3352) * C50170) *
               C50275 +
           ((C4025 - C4024 + C4027 - C4026) * C7818 +
            (C4029 - C4028 + C4031 - C4030) * C50274 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C7819 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C50170) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                  C7818 +
              (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                  C50274 +
              (C2326 - C2327 + C2328 - C2329) * C7819 +
              (C2330 - C2331 + C2332 - C2333) * C50170) *
                 C50275 +
             ((C5331 - C5332 + C5333 - C5334) * C7818 +
              (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
              C14362 * C50170) *
                 C50196) *
                C1544 +
            (((C5332 - C5331 + C5334 - C5333) * C7818 +
              (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
              C14364 * C50170) *
                 C50275 +
             ((C5340 - C5339 + C5342 - C5341) * C7818 +
              (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
              C6322 * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C2327 - C2326 + C2329 - C2328) * C7818 +
              (C2331 - C2330 + C2333 - C2332) * C50274 +
              (C2335 - C2334 + C2337 - C2336) * C7819 +
              (C2339 - C2338 + C2341 - C2340) * C50170) *
                 C50275 +
             (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
              C4033 * C50170) *
                 C50196) *
                C1544 +
            ((C14361 * C7818 + C14362 * C50274 + C15543 * C7819 +
              C15544 * C50170) *
                 C50275 +
             (C14891 * C7818 + C14892 * C50274 +
              (C3518 - C3519 + C3520 - C3521) * C7819 +
              (C3522 - C3523 + C3524 - C3525) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                  C7818 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                  C50274 +
              (C2350 - C2351 + C2352 - C2353) * C7819 +
              (C2354 - C2355 + C2356 - C2357) * C50170) *
                 C50275 +
             ((C5355 - C5356 + C5357 - C5358) * C7818 +
              (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
              C14366 * C50170) *
                 C50196) *
                C1544 +
            (((C5356 - C5355 + C5358 - C5357) * C7818 +
              (C5360 - C5359 + C5362 - C5361) * C50274 + C14367 * C7819 +
              C14368 * C50170) *
                 C50275 +
             ((C5364 - C5363 + C5366 - C5365) * C7818 +
              (C5368 - C5367 + C5370 - C5369) * C50274 +
              (C5903 - C5904 + C5905 - C5906) * C7819 +
              (C5907 - C5908 + C5909 - C5910) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C2351 - C2350 + C2353 - C2352) * C7818 +
              (C2355 - C2354 + C2357 - C2356) * C50274 +
              (C2359 - C2358 + C2361 - C2360) * C7819 +
              (C2363 - C2362 + C2365 - C2364) * C50170) *
                 C50275 +
             (C14367 * C7818 + C14368 * C50274 +
              (C3082 - C3083 + C3084 - C3085) * C7819 +
              (C3086 - C3087 + C3088 - C3089) * C50170) *
                 C50196) *
                C1544 +
            ((C14365 * C7818 + C14366 * C50274 +
              (C3083 - C3082 + C3085 - C3084) * C7819 +
              (C3087 - C3086 + C3089 - C3088) * C50170) *
                 C50275 +
             ((C5904 - C5903 + C5906 - C5905) * C7818 +
              (C5908 - C5907 + C5910 - C5909) * C50274 +
              (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                  C7819 +
              (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C50308 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50309 +
           ((C5387 * C7818 + C5388 * C50274 + C14891 * C7819 +
             C14892 * C50170) *
                C50275 +
            ((C5348 - C5347 + C5350 - C5349) * C7818 +
             (C5352 - C5351 + C5354 - C5353) * C50274 +
             (C6313 - C6314 + C6315 - C6316) * C7819 +
             (C6317 - C6318 + C6319 - C6320) * C50170) *
                C50196) *
               C1960) *
              C50261 +
          ((((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C50308 +
           ((C14361 * C7818 + C14362 * C50274 + C15543 * C7819 +
             C15544 * C50170) *
                C50275 +
            (C14891 * C7818 + C14892 * C50274 +
             (C3518 - C3519 + C3520 - C3521) * C7819 +
             (C3522 - C3523 + C3524 - C3525) * C50170) *
                C50196) *
               C50309 +
           ((C6321 * C7818 + C6322 * C50274 +
             (C3519 - C3518 + C3521 - C3520) * C7819 +
             (C3523 - C3522 + C3525 - C3524) * C50170) *
                C50275 +
            ((C6314 - C6313 + C6316 - C6315) * C7818 +
             (C6318 - C6317 + C6320 - C6319) * C50274 +
             (C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
                 C7819 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
                 C50170) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50099) *
              C248 +
          ((((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C1544 +
           ((C14361 * C7818 + C14362 * C50274 + C15543 * C7819 +
             C15544 * C50170) *
                C50275 +
            (C14891 * C7818 + C14892 * C50274 +
             (C3518 - C3519 + C3520 - C3521) * C7819 +
             (C3522 - C3523 + C3524 - C3525) * C50170) *
                C50196) *
               C50099) *
              C249 +
          (((C2382 * C7818 + C2383 * C50274 +
             (C2343 - C2342 + C2345 - C2344) * C7819 +
             (C2347 - C2346 + C2349 - C2348) * C50170) *
                C50275 +
            (C15543 * C7818 + C15544 * C50274 +
             (C4024 - C4025 + C4026 - C4027) * C7819 +
             (C4028 - C4029 + C4030 - C4031) * C50170) *
                C50196) *
               C1544 +
           ((C4032 * C7818 + C4033 * C50274 +
             (C4025 - C4024 + C4027 - C4026) * C7819 +
             (C4029 - C4028 + C4031 - C4030) * C50170) *
                C50275 +
            ((C3519 - C3518 + C3521 - C3520) * C7818 +
             (C3523 - C3522 + C3525 - C3524) * C50274 +
             (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                 C7819 +
             (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
             C14366 * C50170) *
                C50196) *
               C1544 +
           (((C5356 - C5355 + C5358 - C5357) * C7818 +
             (C5360 - C5359 + C5362 - C5361) * C50274 + C14367 * C7819 +
             C14368 * C50170) *
                C50275 +
            ((C5364 - C5363 + C5366 - C5365) * C7818 +
             (C5368 - C5367 + C5370 - C5369) * C50274 +
             (C5903 - C5904 + C5905 - C5906) * C7819 +
             (C5907 - C5908 + C5909 - C5910) * C50170) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C7818 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50274 +
             (C2690 - C2691 + C2692 - C2693) * C7819 +
             (C2694 - C2695 + C2696 - C2697) * C50170) *
                C50275 +
            ((C5689 - C5690 + C5691 - C5692) * C7818 +
             (C5693 - C5694 + C5695 - C5696) * C50274 +
             (C13885 - C13886 + C13887 - C13888) * C7819 +
             (C13889 - C13890 + C13891 - C13892) * C50170) *
                C50196) *
               C1544 +
           (((C5690 - C5689 + C5692 - C5691) * C7818 +
             (C5694 - C5693 + C5696 - C5695) * C50274 +
             (C13886 - C13885 + C13888 - C13887) * C7819 +
             (C13890 - C13889 + C13892 - C13891) * C50170) *
                C50275 +
            ((C5698 - C5697 + C5700 - C5699) * C7818 +
             (C5702 - C5701 + C5704 - C5703) * C50274 +
             (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C49975 * C1090) *
                 C7819 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C7818 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50274 +
            (C2326 - C2327 + C2328 - C2329) * C7819 +
            (C2330 - C2331 + C2332 - C2333) * C50170) *
               C50275 +
           ((C5331 - C5332 + C5333 - C5334) * C7818 +
            (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
            C14362 * C50170) *
               C50196) *
              C1710 +
          (((C5332 - C5331 + C5334 - C5333) * C7818 +
            (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
            C14364 * C50170) *
               C50275 +
           ((C5340 - C5339 + C5342 - C5341) * C7818 +
            (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
            C6322 * C50170) *
               C50196) *
              C1711 +
          ((C5387 * C7818 + C5388 * C50274 + C14891 * C7819 + C14892 * C50170) *
               C50275 +
           ((C5348 - C5347 + C5350 - C5349) * C7818 +
            (C5352 - C5351 + C5354 - C5353) * C50274 +
            (C6313 - C6314 + C6315 - C6316) * C7819 +
            (C6317 - C6318 + C6319 - C6320) * C50170) *
               C50196) *
              C1712 +
          ((C7222 * C7818 + C7223 * C50274 +
            (C6314 - C6313 + C6316 - C6315) * C7819 +
            (C6318 - C6317 + C6320 - C6319) * C50170) *
               C50275 +
           ((C7215 - C7214 + C7217 - C7216) * C7818 +
            (C7219 - C7218 + C7221 - C7220) * C50274 +
            (C2162 * C6300 - C2157 * C6302 + C2163 * C6301 - C49975 * C6303) *
                C7819 +
            (C2162 * C6304 - C2157 * C6306 + C2163 * C6305 - C49975 * C6307) *
                C50170) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C50308 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50309 +
           ((C5387 * C7818 + C5388 * C50274 + C14891 * C7819 +
             C14892 * C50170) *
                C50275 +
            ((C5348 - C5347 + C5350 - C5349) * C7818 +
             (C5352 - C5351 + C5354 - C5353) * C50274 +
             (C6313 - C6314 + C6315 - C6316) * C7819 +
             (C6317 - C6318 + C6319 - C6320) * C50170) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
             C14366 * C50170) *
                C50196) *
               C50308 +
           (((C5356 - C5355 + C5358 - C5357) * C7818 +
             (C5360 - C5359 + C5362 - C5361) * C50274 + C14367 * C7819 +
             C14368 * C50170) *
                C50275 +
            ((C5364 - C5363 + C5366 - C5365) * C7818 +
             (C5368 - C5367 + C5370 - C5369) * C50274 +
             (C5903 - C5904 + C5905 - C5906) * C7819 +
             (C5907 - C5908 + C5909 - C5910) * C50170) *
                C50196) *
               C50309 +
           ((C5389 * C7818 + C5390 * C50274 +
             (C5904 - C5903 + C5906 - C5905) * C7819 +
             (C5908 - C5907 + C5910 - C5909) * C50170) *
                C50275 +
            ((C5372 - C5371 + C5374 - C5373) * C7818 +
             (C5376 - C5375 + C5378 - C5377) * C50274 +
             (C2162 * C4424 - C2157 * C4428 + C2163 * C5898 - C49975 * C5899) *
                 C7819 +
             (C2162 * C4430 - C2157 * C4436 + C2163 * C5900 - C49975 * C5901) *
                 C50170) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C7818 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50274 +
             (C2350 - C2351 + C2352 - C2353) * C7819 +
             (C2354 - C2355 + C2356 - C2357) * C50170) *
                C50275 +
            ((C5355 - C5356 + C5357 - C5358) * C7818 +
             (C5359 - C5360 + C5361 - C5362) * C50274 + C14365 * C7819 +
             C14366 * C50170) *
                C50196) *
               C1544 +
           (((C5356 - C5355 + C5358 - C5357) * C7818 +
             (C5360 - C5359 + C5362 - C5361) * C50274 + C14367 * C7819 +
             C14368 * C50170) *
                C50275 +
            ((C5364 - C5363 + C5366 - C5365) * C7818 +
             (C5368 - C5367 + C5370 - C5369) * C50274 +
             (C5903 - C5904 + C5905 - C5906) * C7819 +
             (C5907 - C5908 + C5909 - C5910) * C50170) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C7818 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50274 +
             (C2690 - C2691 + C2692 - C2693) * C7819 +
             (C2694 - C2695 + C2696 - C2697) * C50170) *
                C50275 +
            ((C5689 - C5690 + C5691 - C5692) * C7818 +
             (C5693 - C5694 + C5695 - C5696) * C50274 +
             (C13885 - C13886 + C13887 - C13888) * C7819 +
             (C13889 - C13890 + C13891 - C13892) * C50170) *
                C50196) *
               C1544 +
           (((C5690 - C5689 + C5692 - C5691) * C7818 +
             (C5694 - C5693 + C5696 - C5695) * C50274 +
             (C13886 - C13885 + C13888 - C13887) * C7819 +
             (C13890 - C13889 + C13892 - C13891) * C50170) *
                C50275 +
            ((C5698 - C5697 + C5700 - C5699) * C7818 +
             (C5702 - C5701 + C5704 - C5703) * C50274 +
             (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C49975 * C1090) *
                 C7819 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C7818 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50274 +
             (C2326 - C2327 + C2328 - C2329) * C7819 +
             (C2330 - C2331 + C2332 - C2333) * C50170) *
                C50275 +
            ((C5331 - C5332 + C5333 - C5334) * C7818 +
             (C5335 - C5336 + C5337 - C5338) * C50274 + C14361 * C7819 +
             C14362 * C50170) *
                C50196) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C7818 +
             (C5336 - C5335 + C5338 - C5337) * C50274 + C14363 * C7819 +
             C14364 * C50170) *
                C50275 +
            ((C5340 - C5339 + C5342 - C5341) * C7818 +
             (C5344 - C5343 + C5346 - C5345) * C50274 + C6321 * C7819 +
             C6322 * C50170) *
                C50196) *
               C50099) *
              C248 +
          ((((C2327 - C2326 + C2329 - C2328) * C7818 +
             (C2331 - C2330 + C2333 - C2332) * C50274 +
             (C2335 - C2334 + C2337 - C2336) * C7819 +
             (C2339 - C2338 + C2341 - C2340) * C50170) *
                C50275 +
            (C14363 * C7818 + C14364 * C50274 + C4032 * C7819 +
             C4033 * C50170) *
                C50196) *
               C1544 +
           ((C14361 * C7818 + C14362 * C50274 + C15543 * C7819 +
             C15544 * C50170) *
                C50275 +
            (C14891 * C7818 + C14892 * C50274 +
             (C3518 - C3519 + C3520 - C3521) * C7819 +
             (C3522 - C3523 + C3524 - C3525) * C50170) *
                C50196) *
               C50099) *
              C249 +
          (((C2382 * C7818 + C2383 * C50274 +
             (C2343 - C2342 + C2345 - C2344) * C7819 +
             (C2347 - C2346 + C2349 - C2348) * C50170) *
                C50275 +
            (C15543 * C7818 + C15544 * C50274 +
             (C4024 - C4025 + C4026 - C4027) * C7819 +
             (C4028 - C4029 + C4030 - C4031) * C50170) *
                C50196) *
               C1544 +
           ((C4032 * C7818 + C4033 * C50274 +
             (C4025 - C4024 + C4027 - C4026) * C7819 +
             (C4029 - C4028 + C4031 - C4030) * C50170) *
                C50275 +
            ((C3519 - C3518 + C3521 - C3520) * C7818 +
             (C3523 - C3522 + C3525 - C3524) * C50274 +
             (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                 C7819 +
             (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C50261 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C50261 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50035 * C50261 +
           ((C2691 - C2690 + C2693 - C2692) * C2164 +
            (C2695 - C2694 + C2697 - C2696) * C2159 +
            (C2699 - C2698 + C2701 - C2700) * C2165 +
            (C2703 - C2702 + C2705 - C2704) * C2160 +
            (C2162 * C971 - C2157 * C975 + C2163 * C972 - C49975 * C976) *
                C2166 +
            (C2162 * C979 - C2157 * C983 + C2163 * C980 - C49975 * C984) *
                C2161) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C50261 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C50261 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50035 * C50261 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50120) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50035 * C50261 +
           (((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            ((C3511 - C3510 + C3513 - C3512) * C121 +
             (C3515 - C3514 + C3517 - C3516) * C50120) *
                C5025) *
               C50035 * C50071) *
              C50304 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C50035 * C50261 +
           (((C2351 - C2350 + C2353 - C2352) * C121 +
             (C2355 - C2354 + C2357 - C2356) * C50120) *
                C5023 +
            ((C3074 - C3075 + C3076 - C3077) * C121 +
             (C3078 - C3079 + C3080 - C3081) * C50120) *
                C5024 +
            ((C2157 * C1088 - C2162 * C1084 + C49975 * C1089 - C2163 * C1085) *
                 C121 +
             (C2157 * C1096 - C2162 * C1092 + C49975 * C1097 - C2163 * C1093) *
                 C50120) *
                C5025) *
               C50035 * C50071) *
              C50305 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50120) *
                C5023 +
            ((C2157 * C406 - C2162 * C396 + C49975 * C407 - C2163 * C397) *
                 C121 +
             (C2157 * C426 - C2162 * C410 + C49975 * C427 - C2163 * C411) *
                 C50120) *
                C5024 +
            ((C2157 * C414 - C2162 * C400 + C49975 * C415 - C2163 * C401) *
                 C121 +
             (C2157 * C430 - C2162 * C418 + C49975 * C431 - C2163 * C419) *
                 C50120) *
                C5025) *
               C50035 * C50261 +
           (((C2691 - C2690 + C2693 - C2692) * C121 +
             (C2695 - C2694 + C2697 - C2696) * C50120) *
                C5023 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                 C50120) *
                C5024 +
            ((C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C49975 * C1090) *
                 C121 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C49975 * C1098) *
                 C50120) *
                C5025) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C2164 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C2159 +
             (C2326 - C2327 + C2328 - C2329) * C2165 +
             (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
             C2383 * C2161) *
                C50132 * C50262 +
            ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                 C2164 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                 C2159 +
             (C3058 - C3059 + C3060 - C3061) * C2165 +
             (C3062 - C3063 + C3064 - C3065) * C2160 +
             (C3066 - C3067 + C3068 - C3069) * C2166 +
             (C3070 - C3071 + C3072 - C3073) * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2327 - C2326 + C2329 - C2328) * C2164 +
             (C2331 - C2330 + C2333 - C2332) * C2159 +
             (C2335 - C2334 + C2337 - C2336) * C2165 +
             (C2339 - C2338 + C2341 - C2340) * C2160 +
             (C2342 - C2343 + C2344 - C2345) * C2166 +
             (C2346 - C2347 + C2348 - C2349) * C2161) *
                C50132 * C50262 +
            ((C3059 - C3058 + C3061 - C3060) * C2164 +
             (C3063 - C3062 + C3065 - C3064) * C2159 +
             (C3067 - C3066 + C3069 - C3068) * C2165 +
             (C3071 - C3070 + C3073 - C3072) * C2160 +
             (C2157 * C3048 - C2162 * C3045 + C49975 * C3049 - C2163 * C3046) *
                 C2166 +
             (C2157 * C3054 - C2162 * C3050 + C49975 * C3055 - C2163 * C3051) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C2164 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C2159 +
             (C2350 - C2351 + C2352 - C2353) * C2165 +
             (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
             C2385 * C2161) *
                C50132 * C50262 +
            ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                 C2164 +
             (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                 C2159 +
             (C3074 - C3075 + C3076 - C3077) * C2165 +
             (C3078 - C3079 + C3080 - C3081) * C2160 +
             (C3082 - C3083 + C3084 - C3085) * C2166 +
             (C3086 - C3087 + C3088 - C3089) * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2351 - C2350 + C2353 - C2352) * C2164 +
             (C2355 - C2354 + C2357 - C2356) * C2159 +
             (C2359 - C2358 + C2361 - C2360) * C2165 +
             (C2363 - C2362 + C2365 - C2364) * C2160 +
             (C2366 - C2367 + C2368 - C2369) * C2166 +
             (C2370 - C2371 + C2372 - C2373) * C2161) *
                C50132 * C50262 +
            ((C3075 - C3074 + C3077 - C3076) * C2164 +
             (C3079 - C3078 + C3081 - C3080) * C2159 +
             (C3083 - C3082 + C3085 - C3084) * C2165 +
             (C3087 - C3086 + C3089 - C3088) * C2160 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C2166 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                  C50120) *
                 C5023 +
             ((C5331 - C5332 + C5333 - C5334) * C121 +
              (C5335 - C5336 + C5337 - C5338) * C50120) *
                 C5024 +
             C5395 * C5025) *
                C50262 +
            (((C5332 - C5331 + C5334 - C5333) * C121 +
              (C5336 - C5335 + C5338 - C5337) * C50120) *
                 C5023 +
             ((C5340 - C5339 + C5342 - C5341) * C121 +
              (C5344 - C5343 + C5346 - C5345) * C50120) *
                 C5024 +
             ((C5347 - C5348 + C5349 - C5350) * C121 +
              (C5351 - C5352 + C5353 - C5354) * C50120) *
                 C5025) *
                C50099) *
               C50261 +
           ((((C2327 - C2326 + C2329 - C2328) * C121 +
              (C2331 - C2330 + C2333 - C2332) * C50120) *
                 C5023 +
             ((C3058 - C3059 + C3060 - C3061) * C121 +
              (C3062 - C3063 + C3064 - C3065) * C50120) *
                 C5024 +
             ((C3511 - C3510 + C3513 - C3512) * C121 +
              (C3515 - C3514 + C3517 - C3516) * C50120) *
                 C5025) *
                C50262 +
            (((C3059 - C3058 + C3061 - C3060) * C121 +
              (C3063 - C3062 + C3065 - C3064) * C50120) *
                 C5023 +
             ((C3510 - C3511 + C3512 - C3513) * C121 +
              (C3514 - C3515 + C3516 - C3517) * C50120) *
                 C5024 +
             ((C2157 * C4427 - C2162 * C4423 + C49975 * C4428 - C2163 * C4424) *
                  C121 +
              (C2157 * C4435 - C2162 * C4429 + C49975 * C4436 - C2163 * C4430) *
                  C50120) *
                 C5025) *
                C50099) *
               C50071) *
              C251 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                  C50120) *
                 C5023 +
             ((C5355 - C5356 + C5357 - C5358) * C121 +
              (C5359 - C5360 + C5361 - C5362) * C50120) *
                 C5024 +
             C5396 * C5025) *
                C50262 +
            (((C5356 - C5355 + C5358 - C5357) * C121 +
              (C5360 - C5359 + C5362 - C5361) * C50120) *
                 C5023 +
             ((C5364 - C5363 + C5366 - C5365) * C121 +
              (C5368 - C5367 + C5370 - C5369) * C50120) *
                 C5024 +
             ((C5371 - C5372 + C5373 - C5374) * C121 +
              (C5375 - C5376 + C5377 - C5378) * C50120) *
                 C5025) *
                C50099) *
               C50261 +
           ((((C2351 - C2350 + C2353 - C2352) * C121 +
              (C2355 - C2354 + C2357 - C2356) * C50120) *
                 C5023 +
             ((C3074 - C3075 + C3076 - C3077) * C121 +
              (C3078 - C3079 + C3080 - C3081) * C50120) *
                 C5024 +
             ((C5903 - C5904 + C5905 - C5906) * C121 +
              (C5907 - C5908 + C5909 - C5910) * C50120) *
                 C5025) *
                C50262 +
            (((C3075 - C3074 + C3077 - C3076) * C121 +
              (C3079 - C3078 + C3081 - C3080) * C50120) *
                 C5023 +
             ((C5904 - C5903 + C5906 - C5905) * C121 +
              (C5908 - C5907 + C5910 - C5909) * C50120) *
                 C5024 +
             ((C2162 * C4424 - C2157 * C4428 + C2163 * C5898 - C49975 * C5899) *
                  C121 +
              (C2162 * C4430 - C2157 * C4436 + C2163 * C5900 - C49975 * C5901) *
                  C50120) *
                 C5025) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                   C121 +
               (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                   C50120) *
                  C50132 * C50035 * C50019 * C113 +
              ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                   C121 +
               (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                   C50120) *
                  C50132 * C50035 * C50019 * C114 +
              ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
                C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                   C121 +
               (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
                C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                   C50120) *
                  C50132 * C50035 * C50019 * C115 +
              ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
                C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
                   C121 +
               (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
                C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
                   C50120) *
                  C50132 * C50035 * C50019 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50120) *
                   C50132 * C50035 * C248 +
               ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                 C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                    C121 +
                (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                 C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                    C50120) *
                   C50132 * C50035 * C249 +
               ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
                 C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                    C121 +
                (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
                 C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                    C50120) *
                   C50132 * C50035 * C250) *
                  C251 +
              (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                 C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                    C121 +
                (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                 C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                    C50120) *
                   C50132 * C50035 * C248 +
               ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
                 C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                    C121 +
                (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
                 C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                    C50120) *
                   C50132 * C50035 * C249 +
               ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
                 C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                    C121 +
                (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
                 C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                    C50120) *
                   C50132 * C50035 * C250) *
                  C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C393) *
              C50019 * C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C391 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C392 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50120) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2157 * C263 - C2162 * C253 + C49975 * C264 - C2163 * C254) *
               C2165 +
           (C2157 * C283 - C2162 * C267 + C49975 * C284 - C2163 * C268) *
               C2160 +
           (C2157 * C271 - C2162 * C257 + C49975 * C272 - C2163 * C258) *
               C2166 +
           (C2157 * C287 - C2162 * C275 + C49975 * C288 - C2163 * C276) *
               C2161) *
              C50132 * C50035 * C50019 * C113 +
          ((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
               C2164 +
           (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
               C2159 +
           (C2162 * C254 - C2157 * C264 + C2163 * C255 - C49975 * C265) *
               C2165 +
           (C2162 * C268 - C2157 * C284 + C2163 * C269 - C49975 * C285) *
               C2160 +
           (C2162 * C258 - C2157 * C272 + C2163 * C259 - C49975 * C273) *
               C2166 +
           (C2162 * C276 - C2157 * C288 + C2163 * C277 - C49975 * C289) *
               C2161) *
              C50132 * C50035 * C50019 * C114 +
          ((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
               C2164 +
           (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
               C2159 +
           (C2157 * C265 - C2162 * C255 + C49975 * C266 - C2163 * C256) *
               C2165 +
           (C2157 * C285 - C2162 * C269 + C49975 * C286 - C2163 * C270) *
               C2160 +
           (C2157 * C273 - C2162 * C259 + C49975 * C274 - C2163 * C260) *
               C2166 +
           (C2157 * C289 - C2162 * C277 + C49975 * C290 - C2163 * C278) *
               C2161) *
              C50132 * C50035 * C50019 * C115 +
          ((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
               C2164 +
           (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
               C2159 +
           (C2162 * C256 - C2157 * C266 + C2163 * C261 - C49975 * C279) *
               C2165 +
           (C2162 * C270 - C2157 * C286 + C2163 * C280 - C49975 * C291) *
               C2160 +
           (C2162 * C260 - C2157 * C274 + C2163 * C262 - C49975 * C281) *
               C2166 +
           (C2162 * C278 - C2157 * C290 + C2163 * C282 - C49975 * C292) *
               C2161) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C248 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C249 +
           (C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C2157 * C2316 - C2162 * C2313 + C49975 * C2317 - C2163 * C2314) *
                C2166 +
            (C2157 * C2322 - C2162 * C2318 + C49975 * C2323 - C2163 * C2319) *
                C2161) *
               C50132 * C50035 * C250) *
              C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C248 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C249 +
           (C2384 * C2164 + C2385 * C2159 +
            (C2367 - C2366 + C2369 - C2368) * C2165 +
            (C2371 - C2370 + C2373 - C2372) * C2160 +
            (C2162 * C2314 - C2157 * C2317 + C2163 * C2315 - C49975 * C2320) *
                C2166 +
            (C2162 * C2319 - C2157 * C2323 + C2163 * C2321 - C49975 * C2324) *
                C2161) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C391 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C2162 * C775 - C2157 * C780 + C2163 * C776 - C49975 * C781) *
                C2165 +
            (C2162 * C784 - C2157 * C790 + C2163 * C785 - C49975 * C791) *
                C2160 +
            (C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C49975 * C1435) *
                C2166 +
            (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C49975 * C1443) *
                C2161) *
               C50132 * C392 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C2157 * C1087 - C2162 * C1083 + C49975 * C1088 - C2163 * C1084) *
                C2165 +
            (C2157 * C1095 - C2162 * C1091 + C49975 * C1096 - C2163 * C1092) *
                C2160 +
            (C2157 * C2534 - C2162 * C2531 + C49975 * C2535 - C2163 * C2532) *
                C2166 +
            (C2157 * C2540 - C2162 * C2536 + C49975 * C2541 - C2163 * C2537) *
                C2161) *
               C50132 * C393) *
              C50019 * C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C391 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C2157 * C781 - C2162 * C776 + C49975 * C782 - C2163 * C777) *
                C2165 +
            (C2157 * C791 - C2162 * C785 + C49975 * C792 - C2163 * C786) *
                C2160 +
            (C2157 * C1435 - C2162 * C1431 + C49975 * C1436 - C2163 * C1432) *
                C2166 +
            (C2157 * C1443 - C2162 * C1439 + C49975 * C1444 - C2163 * C1440) *
                C2161) *
               C50132 * C392 +
           ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                C2164 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                C2159 +
            (C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C49975 * C1089) *
                C2165 +
            (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C49975 * C1097) *
                C2160 +
            (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                C2166 +
            (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                C2161) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50120) *
               C5023 +
           ((C2157 * C404 - C2162 * C394 + C49975 * C405 - C2163 * C395) *
                C121 +
            (C2157 * C424 - C2162 * C408 + C49975 * C425 - C2163 * C409) *
                C50120) *
               C5024 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C121 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C50120) *
               C5025) *
              C50035 * C50019 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C121 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C50120) *
               C5023 +
           ((C2162 * C395 - C2157 * C405 + C2163 * C396 - C49975 * C406) *
                C121 +
            (C2162 * C409 - C2157 * C425 + C2163 * C410 - C49975 * C426) *
                C50120) *
               C5024 +
           ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                C121 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                C50120) *
               C5025) *
              C50035 * C50019 * C114 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C121 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C50120) *
               C5023 +
           ((C2157 * C406 - C2162 * C396 + C49975 * C407 - C2163 * C397) *
                C121 +
            (C2157 * C426 - C2162 * C410 + C49975 * C427 - C2163 * C411) *
                C50120) *
               C5024 +
           ((C2157 * C414 - C2162 * C400 + C49975 * C415 - C2163 * C401) *
                C121 +
            (C2157 * C430 - C2162 * C418 + C49975 * C431 - C2163 * C419) *
                C50120) *
               C5025) *
              C50035 * C50019 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
                C121 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
                C50120) *
               C5023 +
           ((C2162 * C397 - C2157 * C407 + C2163 * C402 - C49975 * C420) *
                C121 +
            (C2162 * C411 - C2157 * C427 + C2163 * C421 - C49975 * C432) *
                C50120) *
               C5024 +
           ((C2162 * C401 - C2157 * C415 + C2163 * C403 - C49975 * C422) *
                C121 +
            (C2162 * C419 - C2157 * C431 + C2163 * C423 - C49975 * C433) *
                C50120) *
               C5025) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C2157 * C404 - C2162 * C394 + C49975 * C405 - C2163 * C395) *
                 C121 +
             (C2157 * C424 - C2162 * C408 + C49975 * C425 - C2163 * C409) *
                 C50120) *
                C5024 +
            ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                 C50120) *
                C5025) *
               C50035 * C248 +
           (((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            ((C3511 - C3510 + C3513 - C3512) * C121 +
             (C3515 - C3514 + C3517 - C3516) * C50120) *
                C5025) *
               C50035 * C249 +
           ((C2382 * C121 + C2383 * C50120) * C5023 +
            ((C3067 - C3066 + C3069 - C3068) * C121 +
             (C3071 - C3070 + C3073 - C3072) * C50120) *
                C5024 +
            ((C3518 - C3519 + C3520 - C3521) * C121 +
             (C3522 - C3523 + C3524 - C3525) * C50120) *
                C5025) *
               C50035 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C2162 * C395 - C2157 * C405 + C2163 * C396 - C49975 * C406) *
                 C121 +
             (C2162 * C409 - C2157 * C425 + C2163 * C410 - C49975 * C426) *
                 C50120) *
                C5024 +
            ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                 C121 +
             (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                 C50120) *
                C5025) *
               C50035 * C248 +
           (((C2351 - C2350 + C2353 - C2352) * C121 +
             (C2355 - C2354 + C2357 - C2356) * C50120) *
                C5023 +
            ((C3074 - C3075 + C3076 - C3077) * C121 +
             (C3078 - C3079 + C3080 - C3081) * C50120) *
                C5024 +
            ((C2157 * C1088 - C2162 * C1084 + C49975 * C1089 - C2163 * C1085) *
                 C121 +
             (C2157 * C1096 - C2162 * C1092 + C49975 * C1097 - C2163 * C1093) *
                 C50120) *
                C5025) *
               C50035 * C249 +
           ((C2384 * C121 + C2385 * C50120) * C5023 +
            ((C3083 - C3082 + C3085 - C3084) * C121 +
             (C3087 - C3086 + C3089 - C3088) * C50120) *
                C5024 +
            ((C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                 C121 +
             (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                 C50120) *
                C5025) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C391 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C392 +
           (C5395 * C5023 +
            ((C5348 - C5347 + C5350 - C5349) * C121 +
             (C5352 - C5351 + C5354 - C5353) * C50120) *
                C5024 +
            ((C2157 * C5321 - C2162 * C5318 + C49975 * C5322 - C2163 * C5319) *
                 C121 +
             (C2157 * C5327 - C2162 * C5323 + C49975 * C5328 - C2163 * C5324) *
                 C50120) *
                C5025) *
               C393) *
              C50019 * C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C391 +
           (((C5356 - C5355 + C5358 - C5357) * C121 +
             (C5360 - C5359 + C5362 - C5361) * C50120) *
                C5023 +
            ((C5364 - C5363 + C5366 - C5365) * C121 +
             (C5368 - C5367 + C5370 - C5369) * C50120) *
                C5024 +
            ((C5371 - C5372 + C5373 - C5374) * C121 +
             (C5375 - C5376 + C5377 - C5378) * C50120) *
                C5025) *
               C392 +
           (C5396 * C5023 +
            ((C5372 - C5371 + C5374 - C5373) * C121 +
             (C5376 - C5375 + C5378 - C5377) * C50120) *
                C5024 +
            ((C2162 * C5319 - C2157 * C5322 + C2163 * C5320 - C49975 * C5325) *
                 C121 +
             (C2162 * C5324 - C2157 * C5328 + C2163 * C5326 - C49975 * C5329) *
                 C50120) *
                C5025) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50262 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C2162 * C775 - C2157 * C780 + C2163 * C776 - C49975 * C781) *
                C2165 +
            (C2162 * C784 - C2157 * C790 + C2163 * C785 - C49975 * C791) *
                C2160 +
            (C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C49975 * C1435) *
                C2166 +
            (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C49975 * C1443) *
                C2161) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50262 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C2157 * C781 - C2162 * C776 + C49975 * C782 - C2163 * C777) *
                C2165 +
            (C2157 * C791 - C2162 * C785 + C49975 * C792 - C2163 * C786) *
                C2160 +
            (C2157 * C1435 - C2162 * C1431 + C49975 * C1436 - C2163 * C1432) *
                C2166 +
            (C2157 * C1443 - C2162 * C1439 + C49975 * C1444 - C2163 * C1440) *
                C2161) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50262 +
           ((C2162 * C396 - C2157 * C406 + C2163 * C397 - C49975 * C407) *
                C2164 +
            (C2162 * C410 - C2157 * C426 + C2163 * C411 - C49975 * C427) *
                C2159 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                C2165 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                C2160 +
            (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                C2166 +
            (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                C2161) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50262 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50120) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50262 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C50099) *
              C50019 * C50304 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C50262 +
           (((C5356 - C5355 + C5358 - C5357) * C121 +
             (C5360 - C5359 + C5362 - C5361) * C50120) *
                C5023 +
            ((C5364 - C5363 + C5366 - C5365) * C121 +
             (C5368 - C5367 + C5370 - C5369) * C50120) *
                C5024 +
            ((C5371 - C5372 + C5373 - C5374) * C121 +
             (C5375 - C5376 + C5377 - C5378) * C50120) *
                C5025) *
               C50099) *
              C50019 * C50305 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50120) *
                C5023 +
            ((C5689 - C5690 + C5691 - C5692) * C121 +
             (C5693 - C5694 + C5695 - C5696) * C50120) *
                C5024 +
            ((C5697 - C5698 + C5699 - C5700) * C121 +
             (C5701 - C5702 + C5703 - C5704) * C50120) *
                C5025) *
               C50262 +
           (((C5690 - C5689 + C5692 - C5691) * C121 +
             (C5694 - C5693 + C5696 - C5695) * C50120) *
                C5023 +
            ((C5698 - C5697 + C5700 - C5699) * C121 +
             (C5702 - C5701 + C5704 - C5703) * C50120) *
                C5024 +
            ((C2162 * C1716 - C2157 * C1720 + C2163 * C1717 - C49975 * C1721) *
                 C121 +
             (C2162 * C1724 - C2157 * C1728 + C2163 * C1725 - C49975 * C1729) *
                 C50120) *
                C5025) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C248 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C249 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50035 * C250) *
              C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C248 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C249 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50120) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C50035 * C50019 * C113 +
          ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
            C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
               C121 +
           (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
            C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
               C50120) *
              C50132 * C50035 * C50019 * C114 +
          ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
            C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
               C121 +
           (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
            C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
               C50120) *
              C50132 * C50035 * C50019 * C115 +
          ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
            C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
               C121 +
           (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
            C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
               C50120) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2157 * C263 - C2162 * C253 + C49975 * C264 - C2163 * C254) *
               C2165 +
           (C2157 * C283 - C2162 * C267 + C49975 * C284 - C2163 * C268) *
               C2160 +
           (C2157 * C271 - C2162 * C257 + C49975 * C272 - C2163 * C258) *
               C2166 +
           (C2157 * C287 - C2162 * C275 + C49975 * C288 - C2163 * C276) *
               C2161) *
              C50132 * C50035 * C50019 * C113 +
          ((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
               C2164 +
           (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
               C2159 +
           (C2162 * C254 - C2157 * C264 + C2163 * C255 - C49975 * C265) *
               C2165 +
           (C2162 * C268 - C2157 * C284 + C2163 * C269 - C49975 * C285) *
               C2160 +
           (C2162 * C258 - C2157 * C272 + C2163 * C259 - C49975 * C273) *
               C2166 +
           (C2162 * C276 - C2157 * C288 + C2163 * C277 - C49975 * C289) *
               C2161) *
              C50132 * C50035 * C50019 * C114 +
          ((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
               C2164 +
           (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
               C2159 +
           (C2157 * C265 - C2162 * C255 + C49975 * C266 - C2163 * C256) *
               C2165 +
           (C2157 * C285 - C2162 * C269 + C49975 * C286 - C2163 * C270) *
               C2160 +
           (C2157 * C273 - C2162 * C259 + C49975 * C274 - C2163 * C260) *
               C2166 +
           (C2157 * C289 - C2162 * C277 + C49975 * C290 - C2163 * C278) *
               C2161) *
              C50132 * C50035 * C50019 * C115 +
          ((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
               C2164 +
           (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
               C2159 +
           (C2162 * C256 - C2157 * C266 + C2163 * C261 - C49975 * C279) *
               C2165 +
           (C2162 * C270 - C2157 * C286 + C2163 * C280 - C49975 * C291) *
               C2160 +
           (C2162 * C260 - C2157 * C274 + C2163 * C262 - C49975 * C281) *
               C2166 +
           (C2162 * C278 - C2157 * C290 + C2163 * C282 - C49975 * C292) *
               C2161) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C248 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C249 +
           (C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C2157 * C2316 - C2162 * C2313 + C49975 * C2317 - C2163 * C2314) *
                C2166 +
            (C2157 * C2322 - C2162 * C2318 + C49975 * C2323 - C2163 * C2319) *
                C2161) *
               C50132 * C50035 * C250) *
              C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C248 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C249 +
           (C2384 * C2164 + C2385 * C2159 +
            (C2367 - C2366 + C2369 - C2368) * C2165 +
            (C2371 - C2370 + C2373 - C2372) * C2160 +
            (C2162 * C2314 - C2157 * C2317 + C2163 * C2315 - C49975 * C2320) *
                C2166 +
            (C2162 * C2319 - C2157 * C2323 + C2163 * C2321 - C49975 * C2324) *
                C2161) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50120) *
               C5023 +
           ((C2157 * C404 - C2162 * C394 + C49975 * C405 - C2163 * C395) *
                C121 +
            (C2157 * C424 - C2162 * C408 + C49975 * C425 - C2163 * C409) *
                C50120) *
               C5024 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C121 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C50120) *
               C5025) *
              C50035 * C50019 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C121 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C50120) *
               C5023 +
           ((C2162 * C395 - C2157 * C405 + C2163 * C396 - C49975 * C406) *
                C121 +
            (C2162 * C409 - C2157 * C425 + C2163 * C410 - C49975 * C426) *
                C50120) *
               C5024 +
           ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                C121 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                C50120) *
               C5025) *
              C50035 * C50019 * C114 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C121 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C50120) *
               C5023 +
           ((C2157 * C406 - C2162 * C396 + C49975 * C407 - C2163 * C397) *
                C121 +
            (C2157 * C426 - C2162 * C410 + C49975 * C427 - C2163 * C411) *
                C50120) *
               C5024 +
           ((C2157 * C414 - C2162 * C400 + C49975 * C415 - C2163 * C401) *
                C121 +
            (C2157 * C430 - C2162 * C418 + C49975 * C431 - C2163 * C419) *
                C50120) *
               C5025) *
              C50035 * C50019 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
                C121 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
                C50120) *
               C5023 +
           ((C2162 * C397 - C2157 * C407 + C2163 * C402 - C49975 * C420) *
                C121 +
            (C2162 * C411 - C2157 * C427 + C2163 * C421 - C49975 * C432) *
                C50120) *
               C5024 +
           ((C2162 * C401 - C2157 * C415 + C2163 * C403 - C49975 * C422) *
                C121 +
            (C2162 * C419 - C2157 * C431 + C2163 * C423 - C49975 * C433) *
                C50120) *
               C5025) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C2157 * C404 - C2162 * C394 + C49975 * C405 - C2163 * C395) *
                 C121 +
             (C2157 * C424 - C2162 * C408 + C49975 * C425 - C2163 * C409) *
                 C50120) *
                C5024 +
            ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                 C50120) *
                C5025) *
               C50035 * C248 +
           (((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            ((C3511 - C3510 + C3513 - C3512) * C121 +
             (C3515 - C3514 + C3517 - C3516) * C50120) *
                C5025) *
               C50035 * C249 +
           ((C2382 * C121 + C2383 * C50120) * C5023 +
            ((C3067 - C3066 + C3069 - C3068) * C121 +
             (C3071 - C3070 + C3073 - C3072) * C50120) *
                C5024 +
            ((C3518 - C3519 + C3520 - C3521) * C121 +
             (C3522 - C3523 + C3524 - C3525) * C50120) *
                C5025) *
               C50035 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C2162 * C395 - C2157 * C405 + C2163 * C396 - C49975 * C406) *
                 C121 +
             (C2162 * C409 - C2157 * C425 + C2163 * C410 - C49975 * C426) *
                 C50120) *
                C5024 +
            ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                 C121 +
             (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                 C50120) *
                C5025) *
               C50035 * C248 +
           (((C2351 - C2350 + C2353 - C2352) * C121 +
             (C2355 - C2354 + C2357 - C2356) * C50120) *
                C5023 +
            ((C3074 - C3075 + C3076 - C3077) * C121 +
             (C3078 - C3079 + C3080 - C3081) * C50120) *
                C5024 +
            ((C2157 * C1088 - C2162 * C1084 + C49975 * C1089 - C2163 * C1085) *
                 C121 +
             (C2157 * C1096 - C2162 * C1092 + C49975 * C1097 - C2163 * C1093) *
                 C50120) *
                C5025) *
               C50035 * C249 +
           ((C2384 * C121 + C2385 * C50120) * C5023 +
            ((C3083 - C3082 + C3085 - C3084) * C121 +
             (C3087 - C3086 + C3089 - C3088) * C50120) *
                C5024 +
            ((C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                 C121 +
             (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                 C50120) *
                C5025) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C50306 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C50035 * C50307 +
           (C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C50306 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50307 +
           (C2384 * C2164 + C2385 * C2159 +
            (C2367 - C2366 + C2369 - C2368) * C2165 +
            (C2371 - C2370 + C2373 - C2372) * C2160 +
            (C2162 * C2314 - C2157 * C2317 + C2163 * C2315 - C49975 * C2320) *
                C2166 +
            (C2162 * C2319 - C2157 * C2323 + C2163 * C2321 - C49975 * C2324) *
                C2161) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C50306 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50307 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C50306 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50307 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50120) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50035 * C50306 +
           (((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            C6325 * C5025) *
               C50035 * C50307 +
           ((C2382 * C121 + C2383 * C50120) * C5023 +
            ((C3067 - C3066 + C3069 - C3068) * C121 +
             (C3071 - C3070 + C3073 - C3072) * C50120) *
                C5024 +
            ((C3518 - C3519 + C3520 - C3521) * C121 +
             (C3522 - C3523 + C3524 - C3525) * C50120) *
                C5025) *
               C50035 * C1199) *
              C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C50035 * C50306 +
           (((C2351 - C2350 + C2353 - C2352) * C121 +
             (C2355 - C2354 + C2357 - C2356) * C50120) *
                C5023 +
            ((C3074 - C3075 + C3076 - C3077) * C121 +
             (C3078 - C3079 + C3080 - C3081) * C50120) *
                C5024 +
            ((C5903 - C5904 + C5905 - C5906) * C121 +
             (C5907 - C5908 + C5909 - C5910) * C50120) *
                C5025) *
               C50035 * C50307 +
           ((C2384 * C121 + C2385 * C50120) * C5023 +
            ((C3083 - C3082 + C3085 - C3084) * C121 +
             (C3087 - C3086 + C3089 - C3088) * C50120) *
                C5024 +
            ((C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                 C121 +
             (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                 C50120) *
                C5025) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50262 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C50306 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C50262 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50099) *
              C50307 +
          ((C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C50262 +
           (C4032 * C2164 + C4033 * C2159 +
            (C4025 - C4024 + C4027 - C4026) * C2165 +
            (C4029 - C4028 + C4031 - C4030) * C2160 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C2166 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C2161) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50306 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50262 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50099) *
              C50307 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50120) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50262 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C50099) *
              C50306 +
          ((((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            C6325 * C5025) *
               C50262 +
           (((C3059 - C3058 + C3061 - C3060) * C121 +
             (C3063 - C3062 + C3065 - C3064) * C50120) *
                C5023 +
            ((C3510 - C3511 + C3512 - C3513) * C121 +
             (C3514 - C3515 + C3516 - C3517) * C50120) *
                C5024 +
            ((C6313 - C6314 + C6315 - C6316) * C121 +
             (C6317 - C6318 + C6319 - C6320) * C50120) *
                C5025) *
               C50099) *
              C50307 +
          (((C2382 * C121 + C2383 * C50120) * C5023 +
            ((C3067 - C3066 + C3069 - C3068) * C121 +
             (C3071 - C3070 + C3073 - C3072) * C50120) *
                C5024 +
            ((C3518 - C3519 + C3520 - C3521) * C121 +
             (C3522 - C3523 + C3524 - C3525) * C50120) *
                C5025) *
               C50262 +
           ((C4032 * C121 + C4033 * C50120) * C5023 +
            ((C3519 - C3518 + C3521 - C3520) * C121 +
             (C3523 - C3522 + C3525 - C3524) * C50120) *
                C5024 +
            ((C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
                 C121 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
                 C50120) *
                C5025) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50120) *
                   C50132 * C50035 * C893 +
               ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                 C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                    C121 +
                (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                 C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                    C50120) *
                   C50132 * C50035 * C50071) *
                  C895 +
              (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                 C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                    C121 +
                (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                 C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                    C50120) *
                   C50132 * C50035 * C893 +
               ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
                 C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                    C121 +
                (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
                 C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                    C50120) *
                   C50132 * C50035 * C50071) *
                  C896 +
              (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
                 C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                    C121 +
                (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
                 C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                    C50120) *
                   C50132 * C50035 * C893 +
               ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
                 C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                    C121 +
                (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
                 C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                    C50120) *
                   C50132 * C50035 * C50071) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                   C121 +
               (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                   C50120) *
                  C50132 * C50035 * C964 +
              ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                   C121 +
               (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                   C50120) *
                  C50132 * C50035 * C965 +
              ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
                C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                   C121 +
               (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
                C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                   C50120) *
                  C50132 * C50035 * C966 +
              ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
                C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
                   C121 +
               (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
                C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
                   C50120) *
                  C50132 * C50035 * C967) *
             C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C393) *
              C893 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C391 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C392 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50120) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C893 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C893 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50035 * C893 +
           ((C2691 - C2690 + C2693 - C2692) * C2164 +
            (C2695 - C2694 + C2697 - C2696) * C2159 +
            (C2699 - C2698 + C2701 - C2700) * C2165 +
            (C2703 - C2702 + C2705 - C2704) * C2160 +
            (C2162 * C971 - C2157 * C975 + C2163 * C972 - C49975 * C976) *
                C2166 +
            (C2162 * C979 - C2157 * C983 + C2163 * C980 - C49975 * C984) *
                C2161) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2326 - C2327 + C2328 - C2329) * C2165 +
           (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
           C2383 * C2161) *
              C50132 * C50035 * C964 +
          ((C2327 - C2326 + C2329 - C2328) * C2164 +
           (C2331 - C2330 + C2333 - C2332) * C2159 +
           (C2335 - C2334 + C2337 - C2336) * C2165 +
           (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
           C3355 * C2161) *
              C50132 * C50035 * C965 +
          (C2382 * C2164 + C2383 * C2159 +
           (C2343 - C2342 + C2345 - C2344) * C2165 +
           (C2347 - C2346 + C2349 - C2348) * C2160 +
           (C3346 - C3347 + C3348 - C3349) * C2166 +
           (C3350 - C3351 + C3352 - C3353) * C2161) *
              C50132 * C50035 * C966 +
          (C3354 * C2164 + C3355 * C2159 +
           (C3347 - C3346 + C3349 - C3348) * C2165 +
           (C3351 - C3350 + C3353 - C3352) * C2160 +
           (C2162 * C3333 - C2157 * C3335 + C2163 * C3334 - C49975 * C3336) *
               C2166 +
           (C2162 * C3337 - C2157 * C3339 + C2163 * C3338 - C49975 * C3340) *
               C2161) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C391 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 +
            (C3066 - C3067 + C3068 - C3069) * C2166 +
            (C3070 - C3071 + C3072 - C3073) * C2161) *
               C50132 * C392 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C3510 - C3511 + C3512 - C3513) * C2165 +
            (C3514 - C3515 + C3516 - C3517) * C2160 +
            (C3518 - C3519 + C3520 - C3521) * C2166 +
            (C3522 - C3523 + C3524 - C3525) * C2161) *
               C50132 * C393) *
              C893 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C391 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C2157 * C3048 - C2162 * C3045 + C49975 * C3049 - C2163 * C3046) *
                C2166 +
            (C2157 * C3054 - C2162 * C3050 + C49975 * C3055 - C2163 * C3051) *
                C2161) *
               C50132 * C392 +
           ((C3511 - C3510 + C3513 - C3512) * C2164 +
            (C3515 - C3514 + C3517 - C3516) * C2159 +
            (C3519 - C3518 + C3521 - C3520) * C2165 +
            (C3523 - C3522 + C3525 - C3524) * C2160 +
            (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                C2166 +
            (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                C2161) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50035 * C893 +
           (((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            ((C3511 - C3510 + C3513 - C3512) * C121 +
             (C3515 - C3514 + C3517 - C3516) * C50120) *
                C5025) *
               C50035 * C50071) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C50035 * C893 +
           (((C2351 - C2350 + C2353 - C2352) * C121 +
             (C2355 - C2354 + C2357 - C2356) * C50120) *
                C5023 +
            ((C3074 - C3075 + C3076 - C3077) * C121 +
             (C3078 - C3079 + C3080 - C3081) * C50120) *
                C5024 +
            ((C5903 - C5904 + C5905 - C5906) * C121 +
             (C5907 - C5908 + C5909 - C5910) * C50120) *
                C5025) *
               C50035 * C50071) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50120) *
                C5023 +
            ((C5689 - C5690 + C5691 - C5692) * C121 +
             (C5693 - C5694 + C5695 - C5696) * C50120) *
                C5024 +
            ((C5697 - C5698 + C5699 - C5700) * C121 +
             (C5701 - C5702 + C5703 - C5704) * C50120) *
                C5025) *
               C50035 * C893 +
           (((C2691 - C2690 + C2693 - C2692) * C121 +
             (C2695 - C2694 + C2697 - C2696) * C50120) *
                C5023 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                 C50120) *
                C5024 +
            ((C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C49975 * C1090) *
                 C121 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C49975 * C1098) *
                 C50120) *
                C5025) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50120) *
               C5023 +
           ((C5331 - C5332 + C5333 - C5334) * C121 +
            (C5335 - C5336 + C5337 - C5338) * C50120) *
               C5024 +
           C5395 * C5025) *
              C50035 * C964 +
          (((C2327 - C2326 + C2329 - C2328) * C121 +
            (C2331 - C2330 + C2333 - C2332) * C50120) *
               C5023 +
           ((C3058 - C3059 + C3060 - C3061) * C121 +
            (C3062 - C3063 + C3064 - C3065) * C50120) *
               C5024 +
           ((C3511 - C3510 + C3513 - C3512) * C121 +
            (C3515 - C3514 + C3517 - C3516) * C50120) *
               C5025) *
              C50035 * C965 +
          ((C2382 * C121 + C2383 * C50120) * C5023 +
           ((C3067 - C3066 + C3069 - C3068) * C121 +
            (C3071 - C3070 + C3073 - C3072) * C50120) *
               C5024 +
           ((C3518 - C3519 + C3520 - C3521) * C121 +
            (C3522 - C3523 + C3524 - C3525) * C50120) *
               C5025) *
              C50035 * C966 +
          ((C3354 * C121 + C3355 * C50120) * C5023 +
           ((C4025 - C4024 + C4027 - C4026) * C121 +
            (C4029 - C4028 + C4031 - C4030) * C50120) *
               C5024 +
           ((C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                C121 +
            (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                C50120) *
               C5025) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C391 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C392 +
           (C5395 * C5023 +
            ((C5348 - C5347 + C5350 - C5349) * C121 +
             (C5352 - C5351 + C5354 - C5353) * C50120) *
                C5024 +
            ((C2157 * C5321 - C2162 * C5318 + C49975 * C5322 - C2163 * C5319) *
                 C121 +
             (C2157 * C5327 - C2162 * C5323 + C49975 * C5328 - C2163 * C5324) *
                 C50120) *
                C5025) *
               C393) *
              C893 +
          ((((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            C6325 * C5025) *
               C391 +
           (((C3059 - C3058 + C3061 - C3060) * C121 +
             (C3063 - C3062 + C3065 - C3064) * C50120) *
                C5023 +
            ((C3510 - C3511 + C3512 - C3513) * C121 +
             (C3514 - C3515 + C3516 - C3517) * C50120) *
                C5024 +
            ((C6313 - C6314 + C6315 - C6316) * C121 +
             (C6317 - C6318 + C6319 - C6320) * C50120) *
                C5025) *
               C392 +
           (C6325 * C5023 +
            ((C6314 - C6313 + C6316 - C6315) * C121 +
             (C6318 - C6317 + C6320 - C6319) * C50120) *
                C5024 +
            ((C2162 * C6300 - C2157 * C6302 + C2163 * C6301 - C49975 * C6303) *
                 C121 +
             (C2162 * C6304 - C2157 * C6306 + C2163 * C6305 - C49975 * C6307) *
                 C50120) *
                C5025) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C2164 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C2159 +
             (C2326 - C2327 + C2328 - C2329) * C2165 +
             (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
             C2383 * C2161) *
                C50132 * C50262 +
            ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                 C2164 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                 C2159 +
             (C3058 - C3059 + C3060 - C3061) * C2165 +
             (C3062 - C3063 + C3064 - C3065) * C2160 +
             (C3066 - C3067 + C3068 - C3069) * C2166 +
             (C3070 - C3071 + C3072 - C3073) * C2161) *
                C50132 * C50099) *
               C893 +
           (((C2327 - C2326 + C2329 - C2328) * C2164 +
             (C2331 - C2330 + C2333 - C2332) * C2159 +
             (C2335 - C2334 + C2337 - C2336) * C2165 +
             (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
             C3355 * C2161) *
                C50132 * C50262 +
            ((C3059 - C3058 + C3061 - C3060) * C2164 +
             (C3063 - C3062 + C3065 - C3064) * C2159 +
             (C3067 - C3066 + C3069 - C3068) * C2165 +
             (C3071 - C3070 + C3073 - C3072) * C2160 +
             (C2157 * C3048 - C2162 * C3045 + C49975 * C3049 - C2163 * C3046) *
                 C2166 +
             (C2157 * C3054 - C2162 * C3050 + C49975 * C3055 - C2163 * C3051) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C2164 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C2159 +
             (C2350 - C2351 + C2352 - C2353) * C2165 +
             (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
             C2385 * C2161) *
                C50132 * C50262 +
            ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                 C2164 +
             (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                 C2159 +
             (C3074 - C3075 + C3076 - C3077) * C2165 +
             (C3078 - C3079 + C3080 - C3081) * C2160 +
             (C3082 - C3083 + C3084 - C3085) * C2166 +
             (C3086 - C3087 + C3088 - C3089) * C2161) *
                C50132 * C50099) *
               C893 +
           (((C2351 - C2350 + C2353 - C2352) * C2164 +
             (C2355 - C2354 + C2357 - C2356) * C2159 +
             (C2359 - C2358 + C2361 - C2360) * C2165 +
             (C2363 - C2362 + C2365 - C2364) * C2160 +
             (C2366 - C2367 + C2368 - C2369) * C2166 +
             (C2370 - C2371 + C2372 - C2373) * C2161) *
                C50132 * C50262 +
            ((C3075 - C3074 + C3077 - C3076) * C2164 +
             (C3079 - C3078 + C3081 - C3080) * C2159 +
             (C3083 - C3082 + C3085 - C3084) * C2165 +
             (C3087 - C3086 + C3089 - C3088) * C2160 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C2166 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50120) *
                C50132 * C50099) *
               C893 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50120) *
                C50132 * C50099) *
               C893 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                  C50120) *
                 C5023 +
             ((C5331 - C5332 + C5333 - C5334) * C121 +
              (C5335 - C5336 + C5337 - C5338) * C50120) *
                 C5024 +
             C5395 * C5025) *
                C50262 +
            (((C5332 - C5331 + C5334 - C5333) * C121 +
              (C5336 - C5335 + C5338 - C5337) * C50120) *
                 C5023 +
             ((C5340 - C5339 + C5342 - C5341) * C121 +
              (C5344 - C5343 + C5346 - C5345) * C50120) *
                 C5024 +
             ((C5347 - C5348 + C5349 - C5350) * C121 +
              (C5351 - C5352 + C5353 - C5354) * C50120) *
                 C5025) *
                C50099) *
               C893 +
           ((((C2327 - C2326 + C2329 - C2328) * C121 +
              (C2331 - C2330 + C2333 - C2332) * C50120) *
                 C5023 +
             ((C3058 - C3059 + C3060 - C3061) * C121 +
              (C3062 - C3063 + C3064 - C3065) * C50120) *
                 C5024 +
             C6325 * C5025) *
                C50262 +
            (((C3059 - C3058 + C3061 - C3060) * C121 +
              (C3063 - C3062 + C3065 - C3064) * C50120) *
                 C5023 +
             ((C3510 - C3511 + C3512 - C3513) * C121 +
              (C3514 - C3515 + C3516 - C3517) * C50120) *
                 C5024 +
             ((C6313 - C6314 + C6315 - C6316) * C121 +
              (C6317 - C6318 + C6319 - C6320) * C50120) *
                 C5025) *
                C50099) *
               C50071) *
              C50253 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                  C50120) *
                 C5023 +
             ((C5355 - C5356 + C5357 - C5358) * C121 +
              (C5359 - C5360 + C5361 - C5362) * C50120) *
                 C5024 +
             C5396 * C5025) *
                C50262 +
            (((C5356 - C5355 + C5358 - C5357) * C121 +
              (C5360 - C5359 + C5362 - C5361) * C50120) *
                 C5023 +
             ((C5364 - C5363 + C5366 - C5365) * C121 +
              (C5368 - C5367 + C5370 - C5369) * C50120) *
                 C5024 +
             ((C5371 - C5372 + C5373 - C5374) * C121 +
              (C5375 - C5376 + C5377 - C5378) * C50120) *
                 C5025) *
                C50099) *
               C893 +
           ((((C2351 - C2350 + C2353 - C2352) * C121 +
              (C2355 - C2354 + C2357 - C2356) * C50120) *
                 C5023 +
             ((C3074 - C3075 + C3076 - C3077) * C121 +
              (C3078 - C3079 + C3080 - C3081) * C50120) *
                 C5024 +
             ((C5903 - C5904 + C5905 - C5906) * C121 +
              (C5907 - C5908 + C5909 - C5910) * C50120) *
                 C5025) *
                C50262 +
            (((C3075 - C3074 + C3077 - C3076) * C121 +
              (C3079 - C3078 + C3081 - C3080) * C50120) *
                 C5023 +
             ((C5904 - C5903 + C5906 - C5905) * C121 +
              (C5908 - C5907 + C5910 - C5909) * C50120) *
                 C5024 +
             ((C2162 * C4424 - C2157 * C4428 + C2163 * C5898 - C49975 * C5899) *
                  C121 +
              (C2162 * C4430 - C2157 * C4436 + C2163 * C5900 - C49975 * C5901) *
                  C50120) *
                 C5025) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C50035 * C964 +
          ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
            C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
               C121 +
           (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
            C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
               C50120) *
              C50132 * C50035 * C965 +
          ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
            C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
               C121 +
           (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
            C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
               C50120) *
              C50132 * C50035 * C966 +
          ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
            C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
               C121 +
           (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
            C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
               C50120) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50120) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C893 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C893 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50035 * C893 +
           ((C2691 - C2690 + C2693 - C2692) * C2164 +
            (C2695 - C2694 + C2697 - C2696) * C2159 +
            (C2699 - C2698 + C2701 - C2700) * C2165 +
            (C2703 - C2702 + C2705 - C2704) * C2160 +
            (C2162 * C971 - C2157 * C975 + C2163 * C972 - C49975 * C976) *
                C2166 +
            (C2162 * C979 - C2157 * C983 + C2163 * C980 - C49975 * C984) *
                C2161) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2326 - C2327 + C2328 - C2329) * C2165 +
           (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
           C2383 * C2161) *
              C50132 * C50035 * C964 +
          ((C2327 - C2326 + C2329 - C2328) * C2164 +
           (C2331 - C2330 + C2333 - C2332) * C2159 +
           (C2335 - C2334 + C2337 - C2336) * C2165 +
           (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
           C3355 * C2161) *
              C50132 * C50035 * C965 +
          (C2382 * C2164 + C2383 * C2159 +
           (C2343 - C2342 + C2345 - C2344) * C2165 +
           (C2347 - C2346 + C2349 - C2348) * C2160 +
           (C3346 - C3347 + C3348 - C3349) * C2166 +
           (C3350 - C3351 + C3352 - C3353) * C2161) *
              C50132 * C50035 * C966 +
          (C3354 * C2164 + C3355 * C2159 +
           (C3347 - C3346 + C3349 - C3348) * C2165 +
           (C3351 - C3350 + C3353 - C3352) * C2160 +
           (C2162 * C3333 - C2157 * C3335 + C2163 * C3334 - C49975 * C3336) *
               C2166 +
           (C2162 * C3337 - C2157 * C3339 + C2163 * C3338 - C49975 * C3340) *
               C2161) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50035 * C893 +
           (((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            ((C3511 - C3510 + C3513 - C3512) * C121 +
             (C3515 - C3514 + C3517 - C3516) * C50120) *
                C5025) *
               C50035 * C50071) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C50035 * C893 +
           (((C2351 - C2350 + C2353 - C2352) * C121 +
             (C2355 - C2354 + C2357 - C2356) * C50120) *
                C5023 +
            ((C3074 - C3075 + C3076 - C3077) * C121 +
             (C3078 - C3079 + C3080 - C3081) * C50120) *
                C5024 +
            ((C5903 - C5904 + C5905 - C5906) * C121 +
             (C5907 - C5908 + C5909 - C5910) * C50120) *
                C5025) *
               C50035 * C50071) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50120) *
                C5023 +
            ((C5689 - C5690 + C5691 - C5692) * C121 +
             (C5693 - C5694 + C5695 - C5696) * C50120) *
                C5024 +
            ((C5697 - C5698 + C5699 - C5700) * C121 +
             (C5701 - C5702 + C5703 - C5704) * C50120) *
                C5025) *
               C50035 * C893 +
           (((C2691 - C2690 + C2693 - C2692) * C121 +
             (C2695 - C2694 + C2697 - C2696) * C50120) *
                C5023 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                 C50120) *
                C5024 +
            ((C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C49975 * C1090) *
                 C121 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C49975 * C1098) *
                 C50120) *
                C5025) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50120) *
               C5023 +
           ((C5331 - C5332 + C5333 - C5334) * C121 +
            (C5335 - C5336 + C5337 - C5338) * C50120) *
               C5024 +
           C5395 * C5025) *
              C50035 * C964 +
          (((C2327 - C2326 + C2329 - C2328) * C121 +
            (C2331 - C2330 + C2333 - C2332) * C50120) *
               C5023 +
           ((C3058 - C3059 + C3060 - C3061) * C121 +
            (C3062 - C3063 + C3064 - C3065) * C50120) *
               C5024 +
           ((C3511 - C3510 + C3513 - C3512) * C121 +
            (C3515 - C3514 + C3517 - C3516) * C50120) *
               C5025) *
              C50035 * C965 +
          ((C2382 * C121 + C2383 * C50120) * C5023 +
           ((C3067 - C3066 + C3069 - C3068) * C121 +
            (C3071 - C3070 + C3073 - C3072) * C50120) *
               C5024 +
           ((C3518 - C3519 + C3520 - C3521) * C121 +
            (C3522 - C3523 + C3524 - C3525) * C50120) *
               C5025) *
              C50035 * C966 +
          ((C3354 * C121 + C3355 * C50120) * C5023 +
           ((C4025 - C4024 + C4027 - C4026) * C121 +
            (C4029 - C4028 + C4031 - C4030) * C50120) *
               C5024 +
           ((C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                C121 +
            (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                C50120) *
               C5025) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C2164 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C2159 +
             (C2326 - C2327 + C2328 - C2329) * C2165 +
             (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
             C2383 * C2161) *
                C50132 * C1544 +
            ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                 C2164 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                 C2159 +
             (C3058 - C3059 + C3060 - C3061) * C2165 +
             (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
             C4033 * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2327 - C2326 + C2329 - C2328) * C2164 +
             (C2331 - C2330 + C2333 - C2332) * C2159 +
             (C2335 - C2334 + C2337 - C2336) * C2165 +
             (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
             C3355 * C2161) *
                C50132 * C1544 +
            ((C3059 - C3058 + C3061 - C3060) * C2164 +
             (C3063 - C3062 + C3065 - C3064) * C2159 +
             (C3067 - C3066 + C3069 - C3068) * C2165 +
             (C3071 - C3070 + C3073 - C3072) * C2160 +
             (C4024 - C4025 + C4026 - C4027) * C2166 +
             (C4028 - C4029 + C4030 - C4031) * C2161) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C2164 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C2159 +
             (C2350 - C2351 + C2352 - C2353) * C2165 +
             (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
             C2385 * C2161) *
                C50132 * C1544 +
            ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                 C2164 +
             (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                 C2159 +
             (C3074 - C3075 + C3076 - C3077) * C2165 +
             (C3078 - C3079 + C3080 - C3081) * C2160 +
             (C3082 - C3083 + C3084 - C3085) * C2166 +
             (C3086 - C3087 + C3088 - C3089) * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2351 - C2350 + C2353 - C2352) * C2164 +
             (C2355 - C2354 + C2357 - C2356) * C2159 +
             (C2359 - C2358 + C2361 - C2360) * C2165 +
             (C2363 - C2362 + C2365 - C2364) * C2160 +
             (C2366 - C2367 + C2368 - C2369) * C2166 +
             (C2370 - C2371 + C2372 - C2373) * C2161) *
                C50132 * C1544 +
            ((C3075 - C3074 + C3077 - C3076) * C2164 +
             (C3079 - C3078 + C3081 - C3080) * C2159 +
             (C3083 - C3082 + C3085 - C3084) * C2165 +
             (C3087 - C3086 + C3089 - C3088) * C2160 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C2166 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50120) *
                C50132 * C1544 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50120) *
                C50132 * C1544 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50120) *
                C50132 * C1544 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50120) *
                C50132 * C1544 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                  C50120) *
                 C5023 +
             ((C5331 - C5332 + C5333 - C5334) * C121 +
              (C5335 - C5336 + C5337 - C5338) * C50120) *
                 C5024 +
             C5395 * C5025) *
                C1544 +
            (((C5332 - C5331 + C5334 - C5333) * C121 +
              (C5336 - C5335 + C5338 - C5337) * C50120) *
                 C5023 +
             ((C5340 - C5339 + C5342 - C5341) * C121 +
              (C5344 - C5343 + C5346 - C5345) * C50120) *
                 C5024 +
             C7226 * C5025) *
                C50099) *
               C50261 +
           ((((C2327 - C2326 + C2329 - C2328) * C121 +
              (C2331 - C2330 + C2333 - C2332) * C50120) *
                 C5023 +
             ((C3058 - C3059 + C3060 - C3061) * C121 +
              (C3062 - C3063 + C3064 - C3065) * C50120) *
                 C5024 +
             C6325 * C5025) *
                C1544 +
            (((C3059 - C3058 + C3061 - C3060) * C121 +
              (C3063 - C3062 + C3065 - C3064) * C50120) *
                 C5023 +
             ((C3510 - C3511 + C3512 - C3513) * C121 +
              (C3514 - C3515 + C3516 - C3517) * C50120) *
                 C5024 +
             ((C6313 - C6314 + C6315 - C6316) * C121 +
              (C6317 - C6318 + C6319 - C6320) * C50120) *
                 C5025) *
                C50099) *
               C50071) *
              C50253 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                  C50120) *
                 C5023 +
             ((C5355 - C5356 + C5357 - C5358) * C121 +
              (C5359 - C5360 + C5361 - C5362) * C50120) *
                 C5024 +
             C5396 * C5025) *
                C1544 +
            (((C5356 - C5355 + C5358 - C5357) * C121 +
              (C5360 - C5359 + C5362 - C5361) * C50120) *
                 C5023 +
             ((C5364 - C5363 + C5366 - C5365) * C121 +
              (C5368 - C5367 + C5370 - C5369) * C50120) *
                 C5024 +
             ((C5371 - C5372 + C5373 - C5374) * C121 +
              (C5375 - C5376 + C5377 - C5378) * C50120) *
                 C5025) *
                C50099) *
               C50261 +
           ((((C2351 - C2350 + C2353 - C2352) * C121 +
              (C2355 - C2354 + C2357 - C2356) * C50120) *
                 C5023 +
             ((C3074 - C3075 + C3076 - C3077) * C121 +
              (C3078 - C3079 + C3080 - C3081) * C50120) *
                 C5024 +
             ((C5903 - C5904 + C5905 - C5906) * C121 +
              (C5907 - C5908 + C5909 - C5910) * C50120) *
                 C5025) *
                C1544 +
            (((C3075 - C3074 + C3077 - C3076) * C121 +
              (C3079 - C3078 + C3081 - C3080) * C50120) *
                 C5023 +
             ((C5904 - C5903 + C5906 - C5905) * C121 +
              (C5908 - C5907 + C5910 - C5909) * C50120) *
                 C5024 +
             ((C2162 * C4424 - C2157 * C4428 + C2163 * C5898 - C49975 * C5899) *
                  C121 +
              (C2162 * C4430 - C2157 * C4436 + C2163 * C5900 - C49975 * C5901) *
                  C50120) *
                 C5025) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50308 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50309 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C3510 - C3511 + C3512 - C3513) * C2165 +
            (C3514 - C3515 + C3516 - C3517) * C2160 +
            (C3518 - C3519 + C3520 - C3521) * C2166 +
            (C3522 - C3523 + C3524 - C3525) * C2161) *
               C50132 * C1960) *
              C50261 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C50308 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50309 +
           ((C3511 - C3510 + C3513 - C3512) * C2164 +
            (C3515 - C3514 + C3517 - C3516) * C2159 +
            (C3519 - C3518 + C3521 - C3520) * C2165 +
            (C3523 - C3522 + C3525 - C3524) * C2160 +
            (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                C2166 +
            (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                C2161) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50308 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50309 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C1960) *
              C50261 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50308 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50309 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50120) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50308 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            C7226 * C5025) *
               C50309 +
           (C5395 * C5023 +
            ((C5348 - C5347 + C5350 - C5349) * C121 +
             (C5352 - C5351 + C5354 - C5353) * C50120) *
                C5024 +
            ((C7214 - C7215 + C7216 - C7217) * C121 +
             (C7218 - C7219 + C7220 - C7221) * C50120) *
                C5025) *
               C1960) *
              C50261 +
          ((((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            C6325 * C5025) *
               C50308 +
           (((C3059 - C3058 + C3061 - C3060) * C121 +
             (C3063 - C3062 + C3065 - C3064) * C50120) *
                C5023 +
            ((C3510 - C3511 + C3512 - C3513) * C121 +
             (C3514 - C3515 + C3516 - C3517) * C50120) *
                C5024 +
            ((C6313 - C6314 + C6315 - C6316) * C121 +
             (C6317 - C6318 + C6319 - C6320) * C50120) *
                C5025) *
               C50309 +
           (C6325 * C5023 +
            ((C6314 - C6313 + C6316 - C6315) * C121 +
             (C6318 - C6317 + C6320 - C6319) * C50120) *
                C5024 +
            ((C2162 * C6300 - C2157 * C6302 + C2163 * C6301 - C49975 * C6303) *
                 C121 +
             (C2162 * C6304 - C2157 * C6306 + C2163 * C6305 - C49975 * C6307) *
                 C50120) *
                C5025) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50120) *
                   C50132 * C1544 +
               ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
                 C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                    C121 +
                (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
                 C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                    C50120) *
                   C50132 * C50099) *
                  C50019 * C895 +
              (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                 C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                    C121 +
                (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                 C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                    C50120) *
                   C50132 * C1544 +
               ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
                 C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                    C121 +
                (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
                 C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                    C50120) *
                   C50132 * C50099) *
                  C50019 * C896 +
              (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
                 C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                    C121 +
                (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
                 C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                    C50120) *
                   C50132 * C1544 +
               ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
                 C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                    C121 +
                (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
                 C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                    C50120) *
                   C50132 * C50099) *
                  C50019 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50120) *
                   C50132 * C1544 +
               ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
                 C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                    C121 +
                (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
                 C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                    C50120) *
                   C50132 * C50099) *
                  C248 +
              (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                 C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                    C121 +
                (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                 C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                    C50120) *
                   C50132 * C1544 +
               ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
                 C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                    C121 +
                (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
                 C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                    C50120) *
                   C50132 * C50099) *
                  C249 +
              (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
                 C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                    C121 +
                (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
                 C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                    C50120) *
                   C50132 * C1544 +
               ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
                 C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                    C121 +
                (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
                 C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                    C50120) *
                   C50132 * C50099) *
                  C250) *
             C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C1710 +
          ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
            C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
               C121 +
           (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
            C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
               C50120) *
              C50132 * C1711 +
          ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
            C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
               C121 +
           (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
            C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
               C50120) *
              C50132 * C1712 +
          ((C117 * C1714 - C105 * C1718 + C118 * C1715 - C106 * C1719 +
            C119 * C1716 - C107 * C1720 + C120 * C1717 - C108 * C1721) *
               C121 +
           (C117 * C1722 - C105 * C1726 + C118 * C1723 - C106 * C1727 +
            C119 * C1724 - C107 * C1728 + C120 * C1725 - C108 * C1729) *
               C50120) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C1544 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C3074 - C3075 + C3076 - C3077) * C2165 +
            (C3078 - C3079 + C3080 - C3081) * C2160 +
            (C3082 - C3083 + C3084 - C3085) * C2166 +
            (C3086 - C3087 + C3088 - C3089) * C2161) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C1544 +
           ((C2162 * C396 - C2157 * C406 + C2163 * C397 - C49975 * C407) *
                C2164 +
            (C2162 * C410 - C2157 * C426 + C2163 * C411 - C49975 * C427) *
                C2159 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                C2165 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                C2160 +
            (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                C2166 +
            (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                C2161) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C248 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C1544 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50099) *
              C249 +
          ((C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C1544 +
           (C4032 * C2164 + C4033 * C2159 +
            (C4025 - C4024 + C4027 - C4026) * C2165 +
            (C4029 - C4028 + C4031 - C4030) * C2160 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C2166 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C2161) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2326 - C2327 + C2328 - C2329) * C2165 +
           (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
           C2383 * C2161) *
              C50132 * C1710 +
          ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
               C2164 +
           (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
               C2159 +
           (C3058 - C3059 + C3060 - C3061) * C2165 +
           (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
           C4033 * C2161) *
              C50132 * C1711 +
          ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
               C2164 +
           (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
               C2159 +
           (C3510 - C3511 + C3512 - C3513) * C2165 +
           (C3514 - C3515 + C3516 - C3517) * C2160 +
           (C3518 - C3519 + C3520 - C3521) * C2166 +
           (C3522 - C3523 + C3524 - C3525) * C2161) *
              C50132 * C1712 +
          ((C2162 * C1714 - C2157 * C1718 + C2163 * C1715 - C49975 * C1719) *
               C2164 +
           (C2162 * C1722 - C2157 * C1726 + C2163 * C1723 - C49975 * C1727) *
               C2159 +
           (C2162 * C4423 - C2157 * C4427 + C2163 * C4424 - C49975 * C4428) *
               C2165 +
           (C2162 * C4429 - C2157 * C4435 + C2163 * C4430 - C49975 * C4436) *
               C2160 +
           (C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
               C2166 +
           (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
               C2161) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C50099) *
              C50019 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C1544 +
           (((C5356 - C5355 + C5358 - C5357) * C121 +
             (C5360 - C5359 + C5362 - C5361) * C50120) *
                C5023 +
            ((C5364 - C5363 + C5366 - C5365) * C121 +
             (C5368 - C5367 + C5370 - C5369) * C50120) *
                C5024 +
            ((C5371 - C5372 + C5373 - C5374) * C121 +
             (C5375 - C5376 + C5377 - C5378) * C50120) *
                C5025) *
               C50099) *
              C50019 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50120) *
                C5023 +
            ((C5689 - C5690 + C5691 - C5692) * C121 +
             (C5693 - C5694 + C5695 - C5696) * C50120) *
                C5024 +
            ((C5697 - C5698 + C5699 - C5700) * C121 +
             (C5701 - C5702 + C5703 - C5704) * C50120) *
                C5025) *
               C1544 +
           (((C5690 - C5689 + C5692 - C5691) * C121 +
             (C5694 - C5693 + C5696 - C5695) * C50120) *
                C5023 +
            ((C5698 - C5697 + C5700 - C5699) * C121 +
             (C5702 - C5701 + C5704 - C5703) * C50120) *
                C5024 +
            ((C2162 * C1716 - C2157 * C1720 + C2163 * C1717 - C49975 * C1721) *
                 C121 +
             (C2162 * C1724 - C2157 * C1728 + C2163 * C1725 - C49975 * C1729) *
                 C50120) *
                C5025) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C50099) *
              C248 +
          ((((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            C6325 * C5025) *
               C1544 +
           (((C3059 - C3058 + C3061 - C3060) * C121 +
             (C3063 - C3062 + C3065 - C3064) * C50120) *
                C5023 +
            ((C3510 - C3511 + C3512 - C3513) * C121 +
             (C3514 - C3515 + C3516 - C3517) * C50120) *
                C5024 +
            ((C6313 - C6314 + C6315 - C6316) * C121 +
             (C6317 - C6318 + C6319 - C6320) * C50120) *
                C5025) *
               C50099) *
              C249 +
          (((C2382 * C121 + C2383 * C50120) * C5023 +
            ((C3067 - C3066 + C3069 - C3068) * C121 +
             (C3071 - C3070 + C3073 - C3072) * C50120) *
                C5024 +
            ((C3518 - C3519 + C3520 - C3521) * C121 +
             (C3522 - C3523 + C3524 - C3525) * C50120) *
                C5025) *
               C1544 +
           ((C4032 * C121 + C4033 * C50120) * C5023 +
            ((C3519 - C3518 + C3521 - C3520) * C121 +
             (C3523 - C3522 + C3525 - C3524) * C50120) *
                C5024 +
            ((C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
                 C121 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
                 C50120) *
                C5025) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C50120) *
               C5023 +
           ((C5331 - C5332 + C5333 - C5334) * C121 +
            (C5335 - C5336 + C5337 - C5338) * C50120) *
               C5024 +
           C5395 * C5025) *
              C1710 +
          (((C5332 - C5331 + C5334 - C5333) * C121 +
            (C5336 - C5335 + C5338 - C5337) * C50120) *
               C5023 +
           ((C5340 - C5339 + C5342 - C5341) * C121 +
            (C5344 - C5343 + C5346 - C5345) * C50120) *
               C5024 +
           C7226 * C5025) *
              C1711 +
          (C5395 * C5023 +
           ((C5348 - C5347 + C5350 - C5349) * C121 +
            (C5352 - C5351 + C5354 - C5353) * C50120) *
               C5024 +
           ((C7214 - C7215 + C7216 - C7217) * C121 +
            (C7218 - C7219 + C7220 - C7221) * C50120) *
               C5025) *
              C1712 +
          (C7226 * C5023 +
           ((C7215 - C7214 + C7217 - C7216) * C121 +
            (C7219 - C7218 + C7221 - C7220) * C50120) *
               C5024 +
           ((C2162 * C7201 - C2157 * C7203 + C2163 * C7202 - C49975 * C7204) *
                C121 +
            (C2162 * C7205 - C2157 * C7207 + C2163 * C7206 - C49975 * C7208) *
                C50120) *
               C5025) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50308 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50309 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C3510 - C3511 + C3512 - C3513) * C2165 +
            (C3514 - C3515 + C3516 - C3517) * C2160 +
            (C3518 - C3519 + C3520 - C3521) * C2166 +
            (C3522 - C3523 + C3524 - C3525) * C2161) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50308 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C3074 - C3075 + C3076 - C3077) * C2165 +
            (C3078 - C3079 + C3080 - C3081) * C2160 +
            (C3082 - C3083 + C3084 - C3085) * C2166 +
            (C3086 - C3087 + C3088 - C3089) * C2161) *
               C50132 * C50309 +
           ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                C2164 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                C2159 +
            (C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C49975 * C1089) *
                C2165 +
            (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C49975 * C1097) *
                C2160 +
            (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                C2166 +
            (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                C2161) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50308 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50309 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50308 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50309 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50120) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C50308 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            C7226 * C5025) *
               C50309 +
           (C5395 * C5023 +
            ((C5348 - C5347 + C5350 - C5349) * C121 +
             (C5352 - C5351 + C5354 - C5353) * C50120) *
                C5024 +
            ((C7214 - C7215 + C7216 - C7217) * C121 +
             (C7218 - C7219 + C7220 - C7221) * C50120) *
                C5025) *
               C1960) *
              C50019 * C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C50308 +
           (((C5356 - C5355 + C5358 - C5357) * C121 +
             (C5360 - C5359 + C5362 - C5361) * C50120) *
                C5023 +
            ((C5364 - C5363 + C5366 - C5365) * C121 +
             (C5368 - C5367 + C5370 - C5369) * C50120) *
                C5024 +
            ((C5371 - C5372 + C5373 - C5374) * C121 +
             (C5375 - C5376 + C5377 - C5378) * C50120) *
                C5025) *
               C50309 +
           (C5396 * C5023 +
            ((C5372 - C5371 + C5374 - C5373) * C121 +
             (C5376 - C5375 + C5378 - C5377) * C50120) *
                C5024 +
            ((C2162 * C5319 - C2157 * C5322 + C2163 * C5320 - C49975 * C5325) *
                 C121 +
             (C2162 * C5324 - C2157 * C5328 + C2163 * C5326 - C49975 * C5329) *
                 C50120) *
                C5025) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C248 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C1544 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50099) *
              C249 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50120) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C1544 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50120) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C1544 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C3074 - C3075 + C3076 - C3077) * C2165 +
            (C3078 - C3079 + C3080 - C3081) * C2160 +
            (C3082 - C3083 + C3084 - C3085) * C2166 +
            (C3086 - C3087 + C3088 - C3089) * C2161) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C1544 +
           ((C2162 * C396 - C2157 * C406 + C2163 * C397 - C49975 * C407) *
                C2164 +
            (C2162 * C410 - C2157 * C426 + C2163 * C411 - C49975 * C427) *
                C2159 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                C2165 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                C2160 +
            (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                C2166 +
            (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                C2161) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C248 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C1544 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50099) *
              C249 +
          ((C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C1544 +
           (C4032 * C2164 + C4033 * C2159 +
            (C4025 - C4024 + C4027 - C4026) * C2165 +
            (C4029 - C4028 + C4031 - C4030) * C2160 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C2166 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C2161) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C50099) *
              C50019 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C50120) *
                C5023 +
            ((C5355 - C5356 + C5357 - C5358) * C121 +
             (C5359 - C5360 + C5361 - C5362) * C50120) *
                C5024 +
            C5396 * C5025) *
               C1544 +
           (((C5356 - C5355 + C5358 - C5357) * C121 +
             (C5360 - C5359 + C5362 - C5361) * C50120) *
                C5023 +
            ((C5364 - C5363 + C5366 - C5365) * C121 +
             (C5368 - C5367 + C5370 - C5369) * C50120) *
                C5024 +
            ((C5371 - C5372 + C5373 - C5374) * C121 +
             (C5375 - C5376 + C5377 - C5378) * C50120) *
                C5025) *
               C50099) *
              C50019 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                 C50120) *
                C5023 +
            ((C5689 - C5690 + C5691 - C5692) * C121 +
             (C5693 - C5694 + C5695 - C5696) * C50120) *
                C5024 +
            ((C5697 - C5698 + C5699 - C5700) * C121 +
             (C5701 - C5702 + C5703 - C5704) * C50120) *
                C5025) *
               C1544 +
           (((C5690 - C5689 + C5692 - C5691) * C121 +
             (C5694 - C5693 + C5696 - C5695) * C50120) *
                C5023 +
            ((C5698 - C5697 + C5700 - C5699) * C121 +
             (C5702 - C5701 + C5704 - C5703) * C50120) *
                C5024 +
            ((C2162 * C1716 - C2157 * C1720 + C2163 * C1717 - C49975 * C1721) *
                 C121 +
             (C2162 * C1724 - C2157 * C1728 + C2163 * C1725 - C49975 * C1729) *
                 C50120) *
                C5025) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C50120) *
                C5023 +
            ((C5331 - C5332 + C5333 - C5334) * C121 +
             (C5335 - C5336 + C5337 - C5338) * C50120) *
                C5024 +
            C5395 * C5025) *
               C1544 +
           (((C5332 - C5331 + C5334 - C5333) * C121 +
             (C5336 - C5335 + C5338 - C5337) * C50120) *
                C5023 +
            ((C5340 - C5339 + C5342 - C5341) * C121 +
             (C5344 - C5343 + C5346 - C5345) * C50120) *
                C5024 +
            ((C5347 - C5348 + C5349 - C5350) * C121 +
             (C5351 - C5352 + C5353 - C5354) * C50120) *
                C5025) *
               C50099) *
              C248 +
          ((((C2327 - C2326 + C2329 - C2328) * C121 +
             (C2331 - C2330 + C2333 - C2332) * C50120) *
                C5023 +
            ((C3058 - C3059 + C3060 - C3061) * C121 +
             (C3062 - C3063 + C3064 - C3065) * C50120) *
                C5024 +
            C6325 * C5025) *
               C1544 +
           (((C3059 - C3058 + C3061 - C3060) * C121 +
             (C3063 - C3062 + C3065 - C3064) * C50120) *
                C5023 +
            ((C3510 - C3511 + C3512 - C3513) * C121 +
             (C3514 - C3515 + C3516 - C3517) * C50120) *
                C5024 +
            ((C6313 - C6314 + C6315 - C6316) * C121 +
             (C6317 - C6318 + C6319 - C6320) * C50120) *
                C5025) *
               C50099) *
              C249 +
          (((C2382 * C121 + C2383 * C50120) * C5023 +
            ((C3067 - C3066 + C3069 - C3068) * C121 +
             (C3071 - C3070 + C3073 - C3072) * C50120) *
                C5024 +
            ((C3518 - C3519 + C3520 - C3521) * C121 +
             (C3522 - C3523 + C3524 - C3525) * C50120) *
                C5025) *
               C1544 +
           ((C4032 * C121 + C4033 * C50120) * C5023 +
            ((C3519 - C3518 + C3521 - C3520) * C121 +
             (C3523 - C3522 + C3525 - C3524) * C50120) *
                C5024 +
            ((C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
                 C121 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
                 C50120) *
                C5025) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50035 * C50261 +
           (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C50035 * C50261 +
           (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
             (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                C50275 +
            ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
             (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
              C7812 * C137 - C7817 * C126) *
                 C121 +
             (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
              C7812 * C147 - C7817 * C138) *
                 C50120) *
                C50275 +
            ((C50302 * C406 - C7815 * C396 + C50303 * C407 - C7816 * C397 +
              C7812 * C420 - C7817 * C402) *
                 C121 +
             (C50302 * C426 - C7815 * C410 + C50303 * C427 - C7816 * C411 +
              C7812 * C432 - C7817 * C421) *
                 C50120) *
                C50196) *
               C50035 * C50261 +
           (((C8308 - C8307 + C8310 - C8309 + C8312 - C8311) * C121 +
             (C8314 - C8313 + C8316 - C8315 + C8318 - C8317) * C50120) *
                C50275 +
            ((C7815 * C777 - C50302 * C782 + C7816 * C778 - C50303 * C783 +
              C7817 * C779 - C7812 * C788) *
                 C121 +
             (C7815 * C786 - C50302 * C792 + C7816 * C787 - C50303 * C793 +
              C7817 * C789 - C7812 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
               C7812 * C131 - C7817 * C124) *
                  C121 +
              (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
               C7812 * C145 - C7817 * C135) *
                  C50120) *
                 C50275 +
             ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
              (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                 C50196) *
                C50262 +
            (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
              (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                 C50275 +
             ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
              (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
              (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                 C50275 +
             ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
              (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                 C50196) *
                C50262 +
            (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
              (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                 C50275 +
             ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
              (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
               C7817 * C125 - C7812 * C132) *
                  C121 +
              (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
               C7817 * C136 - C7812 * C146) *
                  C50120) *
                 C50275 +
             ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
              (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                 C50196) *
                C50262 +
            (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
              (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                 C50275 +
             ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
              (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
              (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                 C50275 +
             ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
              (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                 C50196) *
                C50262 +
            (((C8672 - C8671 + C8674 - C8673 + C8676 - C8675) * C121 +
              (C8678 - C8677 + C8680 - C8679 + C8682 - C8681) * C50120) *
                 C50275 +
             ((C7815 * C1084 - C50302 * C1088 + C7816 * C1085 - C50303 * C1089 +
               C7817 * C1086 - C7812 * C1090) *
                  C121 +
              (C7815 * C1092 - C50302 * C1096 + C7816 * C1093 - C50303 * C1097 +
               C7817 * C1094 - C7812 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C50302 * C404 - C7815 * C394 + C50303 * C405 - C7816 * C395 +
              C7812 * C406 - C7817 * C396) *
                 C121 +
             (C50302 * C424 - C7815 * C408 + C50303 * C425 - C7816 * C409 +
              C7812 * C426 - C7817 * C410) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
             (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
                C50275 +
            ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
             (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C7815 * C395 - C50302 * C405 + C7816 * C396 - C50303 * C406 +
              C7817 * C397 - C7812 * C407) *
                 C121 +
             (C7815 * C409 - C50302 * C425 + C7816 * C410 - C50303 * C426 +
              C7817 * C411 - C7812 * C427) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
             (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                C50275 +
            ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
             (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C8004 - C8003 + C8006 - C8005 + C8008 - C8007) * C121 +
             (C8010 - C8009 + C8012 - C8011 + C8014 - C8013) * C50120) *
                C50275 +
            ((C7815 * C1431 - C50302 * C1435 + C7816 * C1432 - C50303 * C1436 +
              C7817 * C1433 - C7812 * C1437) *
                 C121 +
             (C7815 * C1439 - C50302 * C1443 + C7816 * C1440 - C50303 * C1444 +
              C7817 * C1441 - C7812 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C121 +
            (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50120) *
               C50275 +
           ((C50302 * C404 - C7815 * C394 + C50303 * C405 - C7816 * C395 +
             C7812 * C406 - C7817 * C396) *
                C121 +
            (C50302 * C424 - C7815 * C408 + C50303 * C425 - C7816 * C409 +
             C7812 * C426 - C7817 * C410) *
                C50120) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
             C7817 * C125 - C7812 * C132) *
                C121 +
            (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50120) *
               C50275 +
           ((C7815 * C395 - C50302 * C405 + C7816 * C396 - C50303 * C406 +
             C7817 * C397 - C7812 * C407) *
                C121 +
            (C7815 * C409 - C50302 * C425 + C7816 * C410 - C50303 * C426 +
             C7817 * C411 - C7812 * C427) *
                C50120) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C121 +
            (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50120) *
               C50275 +
           ((C50302 * C406 - C7815 * C396 + C50303 * C407 - C7816 * C397 +
             C7812 * C420 - C7817 * C402) *
                C121 +
            (C50302 * C426 - C7815 * C410 + C50303 * C427 - C7816 * C411 +
             C7812 * C432 - C7817 * C421) *
                C50120) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C7815 * C125 - C50302 * C132 + C7816 * C126 - C50303 * C137 +
             C7817 * C127 - C7812 * C139) *
                C121 +
            (C7815 * C136 - C50302 * C146 + C7816 * C138 - C50303 * C147 +
             C7817 * C140 - C7812 * C148) *
                C50120) *
               C50275 +
           ((C7815 * C397 - C50302 * C407 + C7816 * C402 - C50303 * C420 +
             C7817 * C641 - C7812 * C642) *
                C121 +
            (C7815 * C411 - C50302 * C427 + C7816 * C421 - C50303 * C432 +
             C7817 * C643 - C7812 * C644) *
                C50120) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C391 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C392 +
           (((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C121 +
             (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50120) *
                C50275 +
            ((C50302 * C1718 - C7815 * C1714 + C50303 * C1719 - C7816 * C1715 +
              C7812 * C1720 - C7817 * C1716) *
                 C121 +
             (C50302 * C1726 - C7815 * C1722 + C50303 * C1727 - C7816 * C1723 +
              C7812 * C1728 - C7817 * C1724) *
                 C50120) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C391 +
           (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                C50275 +
            ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                C50196) *
               C392 +
           (((C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C121 +
             (C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C50120) *
                C50275 +
            ((C7815 * C1715 - C50302 * C1719 + C7816 * C1716 - C50303 * C1720 +
              C7817 * C1717 - C7812 * C1721) *
                 C121 +
             (C7815 * C1723 - C50302 * C1727 + C7816 * C1724 - C50303 * C1728 +
              C7817 * C1725 - C7812 * C1729) *
                 C50120) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50262 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C50262 +
           (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                C50275 +
            ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
              C7812 * C137 - C7817 * C126) *
                 C121 +
             (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
              C7812 * C147 - C7817 * C138) *
                 C50120) *
                C50275 +
            ((C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C121 +
             (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50120) *
                C50196) *
               C50262 +
           (((C11204 - C11203 + C11206 - C11205 + C11208 - C11207) * C121 +
             (C11210 - C11209 + C11212 - C11211 + C11214 - C11213) * C50120) *
                C50275 +
            ((C7815 * C400 - C50302 * C414 + C7816 * C401 - C50303 * C415 +
              C7817 * C403 - C7812 * C422) *
                 C121 +
             (C7815 * C418 - C50302 * C430 + C7816 * C419 - C50303 * C431 +
              C7817 * C423 - C7812 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50120) *
                       C50275 +
                   ((C50302 * C404 - C7815 * C394 + C50303 * C405 -
                     C7816 * C395 + C7812 * C406 - C7817 * C396) *
                        C121 +
                    (C50302 * C424 - C7815 * C408 + C50303 * C425 -
                     C7816 * C409 + C7812 * C426 - C7817 * C410) *
                        C50120) *
                       C50196) *
                      C50035 * C50019 * C113 +
                  (((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                     C50303 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                     C50303 * C145 + C7817 * C136 - C7812 * C146) *
                        C50120) *
                       C50275 +
                   ((C7815 * C395 - C50302 * C405 + C7816 * C396 -
                     C50303 * C406 + C7817 * C397 - C7812 * C407) *
                        C121 +
                    (C7815 * C409 - C50302 * C425 + C7816 * C410 -
                     C50303 * C426 + C7817 * C411 - C7812 * C427) *
                        C50120) *
                       C50196) *
                      C50035 * C50019 * C114 +
                  (((C50302 * C131 - C7815 * C124 + C50303 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C121 +
                    (C50302 * C145 - C7815 * C135 + C50303 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50120) *
                       C50275 +
                   ((C50302 * C406 - C7815 * C396 + C50303 * C407 -
                     C7816 * C397 + C7812 * C420 - C7817 * C402) *
                        C121 +
                    (C50302 * C426 - C7815 * C410 + C50303 * C427 -
                     C7816 * C411 + C7812 * C432 - C7817 * C421) *
                        C50120) *
                       C50196) *
                      C50035 * C50019 * C115 +
                  (((C7815 * C125 - C50302 * C132 + C7816 * C126 -
                     C50303 * C137 + C7817 * C127 - C7812 * C139) *
                        C121 +
                    (C7815 * C136 - C50302 * C146 + C7816 * C138 -
                     C50303 * C147 + C7817 * C140 - C7812 * C148) *
                        C50120) *
                       C50275 +
                   ((C7815 * C397 - C50302 * C407 + C7816 * C402 -
                     C50303 * C420 + C7817 * C641 - C7812 * C642) *
                        C121 +
                    (C7815 * C411 - C50302 * C427 + C7816 * C421 -
                     C50303 * C432 + C7817 * C643 - C7812 * C644) *
                        C50120) *
                       C50196) *
                      C50035 * C50019 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50302 * C129 - C7815 * C122 + C50303 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50302 * C143 - C7815 * C133 + C50303 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50120) *
                        C50275 +
                    ((C50302 * C404 - C7815 * C394 + C50303 * C405 -
                      C7816 * C395 + C7812 * C406 - C7817 * C396) *
                         C121 +
                     (C50302 * C424 - C7815 * C408 + C50303 * C425 -
                      C7816 * C409 + C7812 * C426 - C7817 * C410) *
                         C50120) *
                        C50196) *
                       C50035 * C248 +
                   (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
                     (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                        C50275 +
                    ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
                     (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                        C50196) *
                       C50035 * C249 +
                   (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
                     (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
                        C50275 +
                    ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
                     (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
                        C50196) *
                       C50035 * C250) *
                      C251 +
                  ((((C7815 * C123 - C50302 * C130 + C7816 * C124 -
                      C50303 * C131 + C7817 * C125 - C7812 * C132) *
                         C121 +
                     (C7815 * C134 - C50302 * C144 + C7816 * C135 -
                      C50303 * C145 + C7817 * C136 - C7812 * C146) *
                         C50120) *
                        C50275 +
                    ((C7815 * C395 - C50302 * C405 + C7816 * C396 -
                      C50303 * C406 + C7817 * C397 - C7812 * C407) *
                         C121 +
                     (C7815 * C409 - C50302 * C425 + C7816 * C410 -
                      C50303 * C426 + C7817 * C411 - C7812 * C427) *
                         C50120) *
                        C50196) *
                       C50035 * C248 +
                   (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
                     (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                        C50275 +
                    ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
                     (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                        C50196) *
                       C50035 * C249 +
                   (((C8004 - C8003 + C8006 - C8005 + C8008 - C8007) * C121 +
                     (C8010 - C8009 + C8012 - C8011 + C8014 - C8013) * C50120) *
                        C50275 +
                    ((C7815 * C1431 - C50302 * C1435 + C7816 * C1432 -
                      C50303 * C1436 + C7817 * C1433 - C7812 * C1437) *
                         C121 +
                     (C7815 * C1439 - C50302 * C1443 + C7816 * C1440 -
                      C50303 * C1444 + C7817 * C1441 - C7812 * C1445) *
                         C50120) *
                        C50196) *
                       C50035 * C250) *
                      C50006)) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50035 * C50306 +
           (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50035 * C50307 +
           (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
             (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
                C50275 +
            ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
             (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C50035 * C50306 +
           (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
             (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                C50275 +
            ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
             (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                C50196) *
               C50035 * C50307 +
           (((C8004 - C8003 + C8006 - C8005 + C8008 - C8007) * C121 +
             (C8010 - C8009 + C8012 - C8011 + C8014 - C8013) * C50120) *
                C50275 +
            ((C7815 * C1431 - C50302 * C1435 + C7816 * C1432 - C50303 * C1436 +
              C7817 * C1433 - C7812 * C1437) *
                 C121 +
             (C7815 * C1439 - C50302 * C1443 + C7816 * C1440 - C50303 * C1444 +
              C7817 * C1441 - C7812 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50262 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50099) *
              C50306 +
          ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50262 +
           (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
             (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                C50275 +
            ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
             (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                C50196) *
               C50099) *
              C50307 +
          ((((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
             (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
                C50275 +
            ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
             (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
                C50196) *
               C50262 +
           (((C9584 - C9583 + C9586 - C9585 + C9588 - C9587) * C121 +
             (C9590 - C9589 + C9592 - C9591 + C9594 - C9593) * C50120) *
                C50275 +
            ((C7815 * C2531 - C50302 * C2534 + C7816 * C2532 - C50303 * C2535 +
              C7817 * C2533 - C7812 * C2538) *
                 C121 +
             (C7815 * C2536 - C50302 * C2540 + C7816 * C2537 - C50303 * C2541 +
              C7817 * C2539 - C7812 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C121 +
            (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50120) *
               C50275 +
           ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
               C50196) *
              C50035 * C964 +
          (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
            (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
               C50275 +
           ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
            (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
               C50196) *
              C50035 * C965 +
          (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
            (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
               C50275 +
           ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
            (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
               C50196) *
              C50035 * C966 +
          (((C8928 - C8927 + C8930 - C8929 + C8932 - C8931) * C121 +
            (C8934 - C8933 + C8936 - C8935 + C8938 - C8937) * C50120) *
               C50275 +
           ((C7815 * C3045 - C50302 * C3048 + C7816 * C3046 - C50303 * C3049 +
             C7817 * C3047 - C7812 * C3052) *
                C121 +
            (C7815 * C3050 - C50302 * C3054 + C7816 * C3051 - C50303 * C3055 +
             C7817 * C3053 - C7812 * C3056) *
                C50120) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
             (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                C50275 +
            ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
             (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
              C7812 * C137 - C7817 * C126) *
                 C121 +
             (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
              C7812 * C147 - C7817 * C138) *
                 C50120) *
                C50275 +
            ((C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C121 +
             (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C8308 - C8307 + C8310 - C8309 + C8312 - C8311) * C121 +
             (C8314 - C8313 + C8316 - C8315 + C8318 - C8317) * C50120) *
                C50275 +
            ((C7815 * C777 - C50302 * C782 + C7816 * C778 - C50303 * C783 +
              C7817 * C779 - C7812 * C788) *
                 C121 +
             (C7815 * C786 - C50302 * C792 + C7816 * C787 - C50303 * C793 +
              C7817 * C789 - C7812 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C391 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C392 +
           (((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C121 +
             (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50120) *
                C50275 +
            ((C50302 * C1718 - C7815 * C1714 + C50303 * C1719 - C7816 * C1715 +
              C7812 * C1720 - C7817 * C1716) *
                 C121 +
             (C50302 * C1726 - C7815 * C1722 + C50303 * C1727 - C7816 * C1723 +
              C7812 * C1728 - C7817 * C1724) *
                 C50120) *
                C50196) *
               C393) *
              C893 +
          ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C391 +
           (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
             (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                C50275 +
            ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
             (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                C50196) *
               C392 +
           (((C9086 - C9085 + C9088 - C9087 + C9090 - C9089) * C121 +
             (C9092 - C9091 + C9094 - C9093 + C9096 - C9095) * C50120) *
                C50275 +
            ((C7815 * C4423 - C50302 * C4427 + C7816 * C4424 - C50303 * C4428 +
              C7817 * C5898 - C7812 * C5899) *
                 C121 +
             (C7815 * C4429 - C50302 * C4435 + C7816 * C4430 - C50303 * C4436 +
              C7817 * C5900 - C7812 * C5901) *
                 C50120) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
               C7812 * C131 - C7817 * C124) *
                  C121 +
              (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
               C7812 * C145 - C7817 * C135) *
                  C50120) *
                 C50275 +
             ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
              (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                 C50196) *
                C50262 +
            (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
              (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                 C50275 +
             ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
              (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                 C50196) *
                C50099) *
               C893 +
           ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
              (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                 C50275 +
             ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
              (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                 C50196) *
                C50262 +
            (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
              (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                 C50275 +
             ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
              (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
               C7817 * C125 - C7812 * C132) *
                  C121 +
              (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
               C7817 * C136 - C7812 * C146) *
                  C50120) *
                 C50275 +
             ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
              (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                 C50196) *
                C50262 +
            (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
              (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                 C50275 +
             ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
              (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                 C50196) *
                C50099) *
               C893 +
           ((((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
              (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                 C50275 +
             ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
              (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                 C50196) *
                C50262 +
            (((C8672 - C8671 + C8674 - C8673 + C8676 - C8675) * C121 +
              (C8678 - C8677 + C8680 - C8679 + C8682 - C8681) * C50120) *
                 C50275 +
             ((C7815 * C1084 - C50302 * C1088 + C7816 * C1085 - C50303 * C1089 +
               C7817 * C1086 - C7812 * C1090) *
                  C121 +
              (C7815 * C1092 - C50302 * C1096 + C7816 * C1093 - C50303 * C1097 +
               C7817 * C1094 - C7812 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
             (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                C50275 +
            ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
             (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
              C7812 * C137 - C7817 * C126) *
                 C121 +
             (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
              C7812 * C147 - C7817 * C138) *
                 C50120) *
                C50275 +
            ((C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C121 +
             (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C8308 - C8307 + C8310 - C8309 + C8312 - C8311) * C121 +
             (C8314 - C8313 + C8316 - C8315 + C8318 - C8317) * C50120) *
                C50275 +
            ((C7815 * C777 - C50302 * C782 + C7816 * C778 - C50303 * C783 +
              C7817 * C779 - C7812 * C788) *
                 C121 +
             (C7815 * C786 - C50302 * C792 + C7816 * C787 - C50303 * C793 +
              C7817 * C789 - C7812 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C121 +
            (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50120) *
               C50275 +
           ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
               C50196) *
              C50035 * C964 +
          (((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
            (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
               C50275 +
           ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
            (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
               C50196) *
              C50035 * C965 +
          (((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
            (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
               C50275 +
           ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
            (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
               C50196) *
              C50035 * C966 +
          (((C8928 - C8927 + C8930 - C8929 + C8932 - C8931) * C121 +
            (C8934 - C8933 + C8936 - C8935 + C8938 - C8937) * C50120) *
               C50275 +
           ((C7815 * C3045 - C50302 * C3048 + C7816 * C3046 - C50303 * C3049 +
             C7817 * C3047 - C7812 * C3052) *
                C121 +
            (C7815 * C3050 - C50302 * C3054 + C7816 * C3051 - C50303 * C3055 +
             C7817 * C3053 - C7812 * C3056) *
                C50120) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
               C7812 * C131 - C7817 * C124) *
                  C121 +
              (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
               C7812 * C145 - C7817 * C135) *
                  C50120) *
                 C50275 +
             ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
              (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                 C50196) *
                C1544 +
            (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
              (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                 C50275 +
             ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
              (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
              (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                 C50275 +
             ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
              (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                 C50196) *
                C1544 +
            (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
              (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                 C50275 +
             ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
              (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
               C7817 * C125 - C7812 * C132) *
                  C121 +
              (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
               C7817 * C136 - C7812 * C146) *
                  C50120) *
                 C50275 +
             ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
              (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                 C50196) *
                C1544 +
            (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
              (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                 C50275 +
             ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
              (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C7992 - C7991 + C7994 - C7993 + C7996 - C7995) * C121 +
              (C7998 - C7997 + C8000 - C7999 + C8002 - C8001) * C50120) *
                 C50275 +
             ((C8671 - C8672 + C8673 - C8674 + C8675 - C8676) * C121 +
              (C8677 - C8678 + C8679 - C8680 + C8681 - C8682) * C50120) *
                 C50196) *
                C1544 +
            (((C8672 - C8671 + C8674 - C8673 + C8676 - C8675) * C121 +
              (C8678 - C8677 + C8680 - C8679 + C8682 - C8681) * C50120) *
                 C50275 +
             ((C7815 * C1084 - C50302 * C1088 + C7816 * C1085 - C50303 * C1089 +
               C7817 * C1086 - C7812 * C1090) *
                  C121 +
              (C7815 * C1092 - C50302 * C1096 + C7816 * C1093 - C50303 * C1097 +
               C7817 * C1094 - C7812 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50308 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50309 +
           (((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C121 +
             (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50120) *
                C50275 +
            ((C12675 - C12676 + C12677 - C12678 + C12679 - C12680) * C121 +
             (C12681 - C12682 + C12683 - C12684 + C12685 - C12686) * C50120) *
                C50196) *
               C1960) *
              C50261 +
          ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C50308 +
           (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
             (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                C50275 +
            ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
             (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                C50196) *
               C50309 +
           (((C9086 - C9085 + C9088 - C9087 + C9090 - C9089) * C121 +
             (C9092 - C9091 + C9094 - C9093 + C9096 - C9095) * C50120) *
                C50275 +
            ((C7815 * C4423 - C50302 * C4427 + C7816 * C4424 - C50303 * C4428 +
              C7817 * C5898 - C7812 * C5899) *
                 C121 +
             (C7815 * C4429 - C50302 * C4435 + C7816 * C4430 - C50303 * C4436 +
              C7817 * C5900 - C7812 * C5901) *
                 C50120) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C1544 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50099) *
              C248 +
          ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C1544 +
           (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
             (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                C50275 +
            ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
             (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                C50196) *
               C50099) *
              C249 +
          ((((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
             (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
                C50275 +
            ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
             (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
                C50196) *
               C1544 +
           (((C9584 - C9583 + C9586 - C9585 + C9588 - C9587) * C121 +
             (C9590 - C9589 + C9592 - C9591 + C9594 - C9593) * C50120) *
                C50275 +
            ((C7815 * C2531 - C50302 * C2534 + C7816 * C2532 - C50303 * C2535 +
              C7817 * C2533 - C7812 * C2538) *
                 C121 +
             (C7815 * C2536 - C50302 * C2540 + C7816 * C2537 - C50303 * C2541 +
              C7817 * C2539 - C7812 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C1544 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C1544 +
           (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                C50275 +
            ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
              C7812 * C137 - C7817 * C126) *
                 C121 +
             (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
              C7812 * C147 - C7817 * C138) *
                 C50120) *
                C50275 +
            ((C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C121 +
             (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50120) *
                C50196) *
               C1544 +
           (((C11204 - C11203 + C11206 - C11205 + C11208 - C11207) * C121 +
             (C11210 - C11209 + C11212 - C11211 + C11214 - C11213) * C50120) *
                C50275 +
            ((C7815 * C400 - C50302 * C414 + C7816 * C401 - C50303 * C415 +
              C7817 * C403 - C7812 * C422) *
                 C121 +
             (C7815 * C418 - C50302 * C430 + C7816 * C419 - C50303 * C431 +
              C7817 * C423 - C7812 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C121 +
            (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50120) *
               C50275 +
           ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
               C50196) *
              C1710 +
          (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
               C50275 +
           ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
               C50196) *
              C1711 +
          (((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C121 +
            (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50120) *
               C50275 +
           ((C12675 - C12676 + C12677 - C12678 + C12679 - C12680) * C121 +
            (C12681 - C12682 + C12683 - C12684 + C12685 - C12686) * C50120) *
               C50196) *
              C1712 +
          (((C12676 - C12675 + C12678 - C12677 + C12680 - C12679) * C121 +
            (C12682 - C12681 + C12684 - C12683 + C12686 - C12685) * C50120) *
               C50275 +
           ((C7815 * C5318 - C50302 * C5321 + C7816 * C5319 - C50303 * C5322 +
             C7817 * C5320 - C7812 * C5325) *
                C121 +
            (C7815 * C5323 - C50302 * C5327 + C7816 * C5324 - C50303 * C5328 +
             C7817 * C5326 - C7812 * C5329) *
                C50120) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C50308 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50309 +
           (((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C121 +
             (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50120) *
                C50275 +
            ((C12675 - C12676 + C12677 - C12678 + C12679 - C12680) * C121 +
             (C12681 - C12682 + C12683 - C12684 + C12685 - C12686) * C50120) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C50308 +
           (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                C50275 +
            ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                C50196) *
               C50309 +
           (((C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C121 +
             (C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C50120) *
                C50275 +
            ((C7815 * C1715 - C50302 * C1719 + C7816 * C1716 - C50303 * C1720 +
              C7817 * C1717 - C7812 * C1721) *
                 C121 +
             (C7815 * C1723 - C50302 * C1727 + C7816 * C1724 - C50303 * C1728 +
              C7817 * C1725 - C7812 * C1729) *
                 C50120) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C1544 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C7815 * C123 - C50302 * C130 + C7816 * C124 - C50303 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C121 +
             (C7815 * C134 - C50302 * C144 + C7816 * C135 - C50303 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50120) *
                C50275 +
            ((C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C121 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50120) *
                C50196) *
               C1544 +
           (((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C121 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50120) *
                C50275 +
            ((C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C121 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50120) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C50302 * C131 - C7815 * C124 + C50303 * C132 - C7816 * C125 +
              C7812 * C137 - C7817 * C126) *
                 C121 +
             (C50302 * C145 - C7815 * C135 + C50303 * C146 - C7816 * C136 +
              C7812 * C147 - C7817 * C138) *
                 C50120) *
                C50275 +
            ((C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C121 +
             (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50120) *
                C50196) *
               C1544 +
           (((C11204 - C11203 + C11206 - C11205 + C11208 - C11207) * C121 +
             (C11210 - C11209 + C11212 - C11211 + C11214 - C11213) * C50120) *
                C50275 +
            ((C7815 * C400 - C50302 * C414 + C7816 * C401 - C50303 * C415 +
              C7817 * C403 - C7812 * C422) *
                 C121 +
             (C7815 * C418 - C50302 * C430 + C7816 * C419 - C50303 * C431 +
              C7817 * C423 - C7812 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50302 * C129 - C7815 * C122 + C50303 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C121 +
             (C50302 * C143 - C7815 * C133 + C50303 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50120) *
                C50275 +
            ((C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C121 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50120) *
                C50196) *
               C1544 +
           (((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C121 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50120) *
                C50275 +
            ((C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C121 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50120) *
                C50196) *
               C50099) *
              C248 +
          ((((C7968 - C7967 + C7970 - C7969 + C7972 - C7971) * C121 +
             (C7974 - C7973 + C7976 - C7975 + C7978 - C7977) * C50120) *
                C50275 +
            ((C8659 - C8660 + C8661 - C8662 + C8663 - C8664) * C121 +
             (C8665 - C8666 + C8667 - C8668 + C8669 - C8670) * C50120) *
                C50196) *
               C1544 +
           (((C8660 - C8659 + C8662 - C8661 + C8664 - C8663) * C121 +
             (C8666 - C8665 + C8668 - C8667 + C8670 - C8669) * C50120) *
                C50275 +
            ((C9085 - C9086 + C9087 - C9088 + C9089 - C9090) * C121 +
             (C9091 - C9092 + C9093 - C9094 + C9095 - C9096) * C50120) *
                C50196) *
               C50099) *
              C249 +
          ((((C7980 - C7979 + C7982 - C7981 + C7984 - C7983) * C121 +
             (C7986 - C7985 + C7988 - C7987 + C7990 - C7989) * C50120) *
                C50275 +
            ((C9583 - C9584 + C9585 - C9586 + C9587 - C9588) * C121 +
             (C9589 - C9590 + C9591 - C9592 + C9593 - C9594) * C50120) *
                C50196) *
               C1544 +
           (((C9584 - C9583 + C9586 - C9585 + C9588 - C9587) * C121 +
             (C9590 - C9589 + C9592 - C9591 + C9594 - C9593) * C50120) *
                C50275 +
            ((C7815 * C2531 - C50302 * C2534 + C7816 * C2532 - C50303 * C2535 +
              C7817 * C2533 - C7812 * C2538) *
                 C121 +
             (C7815 * C2536 - C50302 * C2540 + C7816 * C2537 - C50303 * C2541 +
              C7817 * C2539 - C7812 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C50261 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C50261 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50035 * C50261 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50120) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C50261 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C50261 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50035 * C50261 +
           ((C2691 - C2690 + C2693 - C2692) * C2164 +
            (C2695 - C2694 + C2697 - C2696) * C2159 +
            (C2699 - C2698 + C2701 - C2700) * C2165 +
            (C2703 - C2702 + C2705 - C2704) * C2160 +
            (C2162 * C971 - C2157 * C975 + C2163 * C972 - C49975 * C976) *
                C2166 +
            (C2162 * C979 - C2157 * C983 + C2163 * C980 - C49975 * C984) *
                C2161) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C2164 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C2159 +
             (C2326 - C2327 + C2328 - C2329) * C2165 +
             (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
             C2383 * C2161) *
                C50132 * C50262 +
            ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                 C2164 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                 C2159 +
             (C3058 - C3059 + C3060 - C3061) * C2165 +
             (C3062 - C3063 + C3064 - C3065) * C2160 +
             (C3066 - C3067 + C3068 - C3069) * C2166 +
             (C3070 - C3071 + C3072 - C3073) * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2327 - C2326 + C2329 - C2328) * C2164 +
             (C2331 - C2330 + C2333 - C2332) * C2159 +
             (C2335 - C2334 + C2337 - C2336) * C2165 +
             (C2339 - C2338 + C2341 - C2340) * C2160 +
             (C2342 - C2343 + C2344 - C2345) * C2166 +
             (C2346 - C2347 + C2348 - C2349) * C2161) *
                C50132 * C50262 +
            ((C3059 - C3058 + C3061 - C3060) * C2164 +
             (C3063 - C3062 + C3065 - C3064) * C2159 +
             (C3067 - C3066 + C3069 - C3068) * C2165 +
             (C3071 - C3070 + C3073 - C3072) * C2160 +
             (C2157 * C3048 - C2162 * C3045 + C49975 * C3049 - C2163 * C3046) *
                 C2166 +
             (C2157 * C3054 - C2162 * C3050 + C49975 * C3055 - C2163 * C3051) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C2164 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C2159 +
             (C2350 - C2351 + C2352 - C2353) * C2165 +
             (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
             C2385 * C2161) *
                C50132 * C50262 +
            ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                 C2164 +
             (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                 C2159 +
             (C3074 - C3075 + C3076 - C3077) * C2165 +
             (C3078 - C3079 + C3080 - C3081) * C2160 +
             (C3082 - C3083 + C3084 - C3085) * C2166 +
             (C3086 - C3087 + C3088 - C3089) * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2351 - C2350 + C2353 - C2352) * C2164 +
             (C2355 - C2354 + C2357 - C2356) * C2159 +
             (C2359 - C2358 + C2361 - C2360) * C2165 +
             (C2363 - C2362 + C2365 - C2364) * C2160 +
             (C2366 - C2367 + C2368 - C2369) * C2166 +
             (C2370 - C2371 + C2372 - C2373) * C2161) *
                C50132 * C50262 +
            ((C3075 - C3074 + C3077 - C3076) * C2164 +
             (C3079 - C3078 + C3081 - C3080) * C2159 +
             (C3083 - C3082 + C3085 - C3084) * C2165 +
             (C3087 - C3086 + C3089 - C3088) * C2160 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C2166 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C248 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C249 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50035 * C250) *
              C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C248 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C249 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50120) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C50035 * C50019 * C113 +
          ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
            C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
               C121 +
           (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
            C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
               C50120) *
              C50132 * C50035 * C50019 * C114 +
          ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
            C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
               C121 +
           (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
            C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
               C50120) *
              C50132 * C50035 * C50019 * C115 +
          ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
            C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
               C121 +
           (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
            C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
               C50120) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C393) *
              C50019 * C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C391 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C392 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50120) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2157 * C263 - C2162 * C253 + C49975 * C264 - C2163 * C254) *
               C2165 +
           (C2157 * C283 - C2162 * C267 + C49975 * C284 - C2163 * C268) *
               C2160 +
           (C2157 * C271 - C2162 * C257 + C49975 * C272 - C2163 * C258) *
               C2166 +
           (C2157 * C287 - C2162 * C275 + C49975 * C288 - C2163 * C276) *
               C2161) *
              C50132 * C50035 * C50019 * C113 +
          ((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
               C2164 +
           (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
               C2159 +
           (C2162 * C254 - C2157 * C264 + C2163 * C255 - C49975 * C265) *
               C2165 +
           (C2162 * C268 - C2157 * C284 + C2163 * C269 - C49975 * C285) *
               C2160 +
           (C2162 * C258 - C2157 * C272 + C2163 * C259 - C49975 * C273) *
               C2166 +
           (C2162 * C276 - C2157 * C288 + C2163 * C277 - C49975 * C289) *
               C2161) *
              C50132 * C50035 * C50019 * C114 +
          ((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
               C2164 +
           (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
               C2159 +
           (C2157 * C265 - C2162 * C255 + C49975 * C266 - C2163 * C256) *
               C2165 +
           (C2157 * C285 - C2162 * C269 + C49975 * C286 - C2163 * C270) *
               C2160 +
           (C2157 * C273 - C2162 * C259 + C49975 * C274 - C2163 * C260) *
               C2166 +
           (C2157 * C289 - C2162 * C277 + C49975 * C290 - C2163 * C278) *
               C2161) *
              C50132 * C50035 * C50019 * C115 +
          ((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
               C2164 +
           (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
               C2159 +
           (C2162 * C256 - C2157 * C266 + C2163 * C261 - C49975 * C279) *
               C2165 +
           (C2162 * C270 - C2157 * C286 + C2163 * C280 - C49975 * C291) *
               C2160 +
           (C2162 * C260 - C2157 * C274 + C2163 * C262 - C49975 * C281) *
               C2166 +
           (C2162 * C278 - C2157 * C290 + C2163 * C282 - C49975 * C292) *
               C2161) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C248 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C249 +
           (C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C2157 * C2316 - C2162 * C2313 + C49975 * C2317 - C2163 * C2314) *
                C2166 +
            (C2157 * C2322 - C2162 * C2318 + C49975 * C2323 - C2163 * C2319) *
                C2161) *
               C50132 * C50035 * C250) *
              C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C248 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C249 +
           (C2384 * C2164 + C2385 * C2159 +
            (C2367 - C2366 + C2369 - C2368) * C2165 +
            (C2371 - C2370 + C2373 - C2372) * C2160 +
            (C2162 * C2314 - C2157 * C2317 + C2163 * C2315 - C49975 * C2320) *
                C2166 +
            (C2162 * C2319 - C2157 * C2323 + C2163 * C2321 - C49975 * C2324) *
                C2161) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C391 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C2162 * C775 - C2157 * C780 + C2163 * C776 - C49975 * C781) *
                C2165 +
            (C2162 * C784 - C2157 * C790 + C2163 * C785 - C49975 * C791) *
                C2160 +
            (C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C49975 * C1435) *
                C2166 +
            (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C49975 * C1443) *
                C2161) *
               C50132 * C392 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C2157 * C1087 - C2162 * C1083 + C49975 * C1088 - C2163 * C1084) *
                C2165 +
            (C2157 * C1095 - C2162 * C1091 + C49975 * C1096 - C2163 * C1092) *
                C2160 +
            (C2157 * C2534 - C2162 * C2531 + C49975 * C2535 - C2163 * C2532) *
                C2166 +
            (C2157 * C2540 - C2162 * C2536 + C49975 * C2541 - C2163 * C2537) *
                C2161) *
               C50132 * C393) *
              C50019 * C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C391 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C2157 * C781 - C2162 * C776 + C49975 * C782 - C2163 * C777) *
                C2165 +
            (C2157 * C791 - C2162 * C785 + C49975 * C792 - C2163 * C786) *
                C2160 +
            (C2157 * C1435 - C2162 * C1431 + C49975 * C1436 - C2163 * C1432) *
                C2166 +
            (C2157 * C1443 - C2162 * C1439 + C49975 * C1444 - C2163 * C1440) *
                C2161) *
               C50132 * C392 +
           ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                C2164 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                C2159 +
            (C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C49975 * C1089) *
                C2165 +
            (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C49975 * C1097) *
                C2160 +
            (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                C2166 +
            (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                C2161) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50262 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50120) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50262 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C2162 * C775 - C2157 * C780 + C2163 * C776 - C49975 * C781) *
                C2165 +
            (C2162 * C784 - C2157 * C790 + C2163 * C785 - C49975 * C791) *
                C2160 +
            (C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C49975 * C1435) *
                C2166 +
            (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C49975 * C1443) *
                C2161) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50262 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C2157 * C781 - C2162 * C776 + C49975 * C782 - C2163 * C777) *
                C2165 +
            (C2157 * C791 - C2162 * C785 + C49975 * C792 - C2163 * C786) *
                C2160 +
            (C2157 * C1435 - C2162 * C1431 + C49975 * C1436 - C2163 * C1432) *
                C2166 +
            (C2157 * C1443 - C2162 * C1439 + C49975 * C1444 - C2163 * C1440) *
                C2161) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50262 +
           ((C2162 * C396 - C2157 * C406 + C2163 * C397 - C49975 * C407) *
                C2164 +
            (C2162 * C410 - C2157 * C426 + C2163 * C411 - C49975 * C427) *
                C2159 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                C2165 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                C2160 +
            (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                C2166 +
            (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                C2161) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C50035 * C50019 * C113 +
          ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
            C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
               C121 +
           (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
            C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
               C50120) *
              C50132 * C50035 * C50019 * C114 +
          ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
            C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
               C121 +
           (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
            C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
               C50120) *
              C50132 * C50035 * C50019 * C115 +
          ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
            C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
               C121 +
           (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
            C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
               C50120) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C248 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C249 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50035 * C250) *
              C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C248 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C249 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50120) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2157 * C263 - C2162 * C253 + C49975 * C264 - C2163 * C254) *
               C2165 +
           (C2157 * C283 - C2162 * C267 + C49975 * C284 - C2163 * C268) *
               C2160 +
           (C2157 * C271 - C2162 * C257 + C49975 * C272 - C2163 * C258) *
               C2166 +
           (C2157 * C287 - C2162 * C275 + C49975 * C288 - C2163 * C276) *
               C2161) *
              C50132 * C50035 * C50019 * C113 +
          ((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
               C2164 +
           (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
               C2159 +
           (C2162 * C254 - C2157 * C264 + C2163 * C255 - C49975 * C265) *
               C2165 +
           (C2162 * C268 - C2157 * C284 + C2163 * C269 - C49975 * C285) *
               C2160 +
           (C2162 * C258 - C2157 * C272 + C2163 * C259 - C49975 * C273) *
               C2166 +
           (C2162 * C276 - C2157 * C288 + C2163 * C277 - C49975 * C289) *
               C2161) *
              C50132 * C50035 * C50019 * C114 +
          ((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
               C2164 +
           (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
               C2159 +
           (C2157 * C265 - C2162 * C255 + C49975 * C266 - C2163 * C256) *
               C2165 +
           (C2157 * C285 - C2162 * C269 + C49975 * C286 - C2163 * C270) *
               C2160 +
           (C2157 * C273 - C2162 * C259 + C49975 * C274 - C2163 * C260) *
               C2166 +
           (C2157 * C289 - C2162 * C277 + C49975 * C290 - C2163 * C278) *
               C2161) *
              C50132 * C50035 * C50019 * C115 +
          ((C2162 * C125 - C2157 * C132 + C2163 * C126 - C49975 * C137) *
               C2164 +
           (C2162 * C136 - C2157 * C146 + C2163 * C138 - C49975 * C147) *
               C2159 +
           (C2162 * C256 - C2157 * C266 + C2163 * C261 - C49975 * C279) *
               C2165 +
           (C2162 * C270 - C2157 * C286 + C2163 * C280 - C49975 * C291) *
               C2160 +
           (C2162 * C260 - C2157 * C274 + C2163 * C262 - C49975 * C281) *
               C2166 +
           (C2162 * C278 - C2157 * C290 + C2163 * C282 - C49975 * C292) *
               C2161) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C248 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C249 +
           (C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C2157 * C2316 - C2162 * C2313 + C49975 * C2317 - C2163 * C2314) *
                C2166 +
            (C2157 * C2322 - C2162 * C2318 + C49975 * C2323 - C2163 * C2319) *
                C2161) *
               C50132 * C50035 * C250) *
              C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C248 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C249 +
           (C2384 * C2164 + C2385 * C2159 +
            (C2367 - C2366 + C2369 - C2368) * C2165 +
            (C2371 - C2370 + C2373 - C2372) * C2160 +
            (C2162 * C2314 - C2157 * C2317 + C2163 * C2315 - C49975 * C2320) *
                C2166 +
            (C2162 * C2319 - C2157 * C2323 + C2163 * C2321 - C49975 * C2324) *
                C2161) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C50306 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50307 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C50306 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50307 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50120) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C50306 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C50035 * C50307 +
           (C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C50306 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50307 +
           (C2384 * C2164 + C2385 * C2159 +
            (C2367 - C2366 + C2369 - C2368) * C2165 +
            (C2371 - C2370 + C2373 - C2372) * C2160 +
            (C2162 * C2314 - C2157 * C2317 + C2163 * C2315 - C49975 * C2320) *
                C2166 +
            (C2162 * C2319 - C2157 * C2323 + C2163 * C2321 - C49975 * C2324) *
                C2161) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50306 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50262 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50099) *
              C50307 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C50262 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50120) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50262 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C50306 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C50262 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50099) *
              C50307 +
          ((C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C50262 +
           (C4032 * C2164 + C4033 * C2159 +
            (C4025 - C4024 + C4027 - C4026) * C2165 +
            (C4029 - C4028 + C4031 - C4030) * C2160 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C2166 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C2161) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C50035 * C964 +
          ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
            C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
               C121 +
           (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
            C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
               C50120) *
              C50132 * C50035 * C965 +
          ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
            C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
               C121 +
           (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
            C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
               C50120) *
              C50132 * C50035 * C966 +
          ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
            C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
               C121 +
           (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
            C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
               C50120) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50120) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C393) *
              C893 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C391 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C392 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50120) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C893 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C893 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50035 * C893 +
           ((C2691 - C2690 + C2693 - C2692) * C2164 +
            (C2695 - C2694 + C2697 - C2696) * C2159 +
            (C2699 - C2698 + C2701 - C2700) * C2165 +
            (C2703 - C2702 + C2705 - C2704) * C2160 +
            (C2162 * C971 - C2157 * C975 + C2163 * C972 - C49975 * C976) *
                C2166 +
            (C2162 * C979 - C2157 * C983 + C2163 * C980 - C49975 * C984) *
                C2161) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2326 - C2327 + C2328 - C2329) * C2165 +
           (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
           C2383 * C2161) *
              C50132 * C50035 * C964 +
          ((C2327 - C2326 + C2329 - C2328) * C2164 +
           (C2331 - C2330 + C2333 - C2332) * C2159 +
           (C2335 - C2334 + C2337 - C2336) * C2165 +
           (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
           C3355 * C2161) *
              C50132 * C50035 * C965 +
          (C2382 * C2164 + C2383 * C2159 +
           (C2343 - C2342 + C2345 - C2344) * C2165 +
           (C2347 - C2346 + C2349 - C2348) * C2160 +
           (C3346 - C3347 + C3348 - C3349) * C2166 +
           (C3350 - C3351 + C3352 - C3353) * C2161) *
              C50132 * C50035 * C966 +
          (C3354 * C2164 + C3355 * C2159 +
           (C3347 - C3346 + C3349 - C3348) * C2165 +
           (C3351 - C3350 + C3353 - C3352) * C2160 +
           (C2162 * C3333 - C2157 * C3335 + C2163 * C3334 - C49975 * C3336) *
               C2166 +
           (C2162 * C3337 - C2157 * C3339 + C2163 * C3338 - C49975 * C3340) *
               C2161) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C391 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 +
            (C3066 - C3067 + C3068 - C3069) * C2166 +
            (C3070 - C3071 + C3072 - C3073) * C2161) *
               C50132 * C392 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C3510 - C3511 + C3512 - C3513) * C2165 +
            (C3514 - C3515 + C3516 - C3517) * C2160 +
            (C3518 - C3519 + C3520 - C3521) * C2166 +
            (C3522 - C3523 + C3524 - C3525) * C2161) *
               C50132 * C393) *
              C893 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C391 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C2157 * C3048 - C2162 * C3045 + C49975 * C3049 - C2163 * C3046) *
                C2166 +
            (C2157 * C3054 - C2162 * C3050 + C49975 * C3055 - C2163 * C3051) *
                C2161) *
               C50132 * C392 +
           ((C3511 - C3510 + C3513 - C3512) * C2164 +
            (C3515 - C3514 + C3517 - C3516) * C2159 +
            (C3519 - C3518 + C3521 - C3520) * C2165 +
            (C3523 - C3522 + C3525 - C3524) * C2160 +
            (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                C2166 +
            (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                C2161) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50120) *
                C50132 * C50099) *
               C893 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50120) *
                C50132 * C50262 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50120) *
                C50132 * C50099) *
               C893 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50120) *
                C50132 * C50262 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C2164 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C2159 +
             (C2326 - C2327 + C2328 - C2329) * C2165 +
             (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
             C2383 * C2161) *
                C50132 * C50262 +
            ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                 C2164 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                 C2159 +
             (C3058 - C3059 + C3060 - C3061) * C2165 +
             (C3062 - C3063 + C3064 - C3065) * C2160 +
             (C3066 - C3067 + C3068 - C3069) * C2166 +
             (C3070 - C3071 + C3072 - C3073) * C2161) *
                C50132 * C50099) *
               C893 +
           (((C2327 - C2326 + C2329 - C2328) * C2164 +
             (C2331 - C2330 + C2333 - C2332) * C2159 +
             (C2335 - C2334 + C2337 - C2336) * C2165 +
             (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
             C3355 * C2161) *
                C50132 * C50262 +
            ((C3059 - C3058 + C3061 - C3060) * C2164 +
             (C3063 - C3062 + C3065 - C3064) * C2159 +
             (C3067 - C3066 + C3069 - C3068) * C2165 +
             (C3071 - C3070 + C3073 - C3072) * C2160 +
             (C2157 * C3048 - C2162 * C3045 + C49975 * C3049 - C2163 * C3046) *
                 C2166 +
             (C2157 * C3054 - C2162 * C3050 + C49975 * C3055 - C2163 * C3051) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C2164 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C2159 +
             (C2350 - C2351 + C2352 - C2353) * C2165 +
             (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
             C2385 * C2161) *
                C50132 * C50262 +
            ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                 C2164 +
             (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                 C2159 +
             (C3074 - C3075 + C3076 - C3077) * C2165 +
             (C3078 - C3079 + C3080 - C3081) * C2160 +
             (C3082 - C3083 + C3084 - C3085) * C2166 +
             (C3086 - C3087 + C3088 - C3089) * C2161) *
                C50132 * C50099) *
               C893 +
           (((C2351 - C2350 + C2353 - C2352) * C2164 +
             (C2355 - C2354 + C2357 - C2356) * C2159 +
             (C2359 - C2358 + C2361 - C2360) * C2165 +
             (C2363 - C2362 + C2365 - C2364) * C2160 +
             (C2366 - C2367 + C2368 - C2369) * C2166 +
             (C2370 - C2371 + C2372 - C2373) * C2161) *
                C50132 * C50262 +
            ((C3075 - C3074 + C3077 - C3076) * C2164 +
             (C3079 - C3078 + C3081 - C3080) * C2159 +
             (C3083 - C3082 + C3085 - C3084) * C2165 +
             (C3087 - C3086 + C3089 - C3088) * C2160 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C2166 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50120) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C50035 * C893 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50120) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C50035 * C964 +
          ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
            C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
               C121 +
           (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
            C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
               C50120) *
              C50132 * C50035 * C965 +
          ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
            C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
               C121 +
           (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
            C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
               C50120) *
              C50132 * C50035 * C966 +
          ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
            C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
               C121 +
           (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
            C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
               C50120) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50035 * C893 +
           ((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 +
            (C2342 - C2343 + C2344 - C2345) * C2166 +
            (C2346 - C2347 + C2348 - C2349) * C2161) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50035 * C893 +
           ((C2351 - C2350 + C2353 - C2352) * C2164 +
            (C2355 - C2354 + C2357 - C2356) * C2159 +
            (C2359 - C2358 + C2361 - C2360) * C2165 +
            (C2363 - C2362 + C2365 - C2364) * C2160 +
            (C2366 - C2367 + C2368 - C2369) * C2166 +
            (C2370 - C2371 + C2372 - C2373) * C2161) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C50035 * C893 +
           ((C2691 - C2690 + C2693 - C2692) * C2164 +
            (C2695 - C2694 + C2697 - C2696) * C2159 +
            (C2699 - C2698 + C2701 - C2700) * C2165 +
            (C2703 - C2702 + C2705 - C2704) * C2160 +
            (C2162 * C971 - C2157 * C975 + C2163 * C972 - C49975 * C976) *
                C2166 +
            (C2162 * C979 - C2157 * C983 + C2163 * C980 - C49975 * C984) *
                C2161) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2326 - C2327 + C2328 - C2329) * C2165 +
           (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
           C2383 * C2161) *
              C50132 * C50035 * C964 +
          ((C2327 - C2326 + C2329 - C2328) * C2164 +
           (C2331 - C2330 + C2333 - C2332) * C2159 +
           (C2335 - C2334 + C2337 - C2336) * C2165 +
           (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
           C3355 * C2161) *
              C50132 * C50035 * C965 +
          (C2382 * C2164 + C2383 * C2159 +
           (C2343 - C2342 + C2345 - C2344) * C2165 +
           (C2347 - C2346 + C2349 - C2348) * C2160 +
           (C3346 - C3347 + C3348 - C3349) * C2166 +
           (C3350 - C3351 + C3352 - C3353) * C2161) *
              C50132 * C50035 * C966 +
          (C3354 * C2164 + C3355 * C2159 +
           (C3347 - C3346 + C3349 - C3348) * C2165 +
           (C3351 - C3350 + C3353 - C3352) * C2160 +
           (C2162 * C3333 - C2157 * C3335 + C2163 * C3334 - C49975 * C3336) *
               C2166 +
           (C2162 * C3337 - C2157 * C3339 + C2163 * C3338 - C49975 * C3340) *
               C2161) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50120) *
                C50132 * C1544 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50120) *
                C50132 * C1544 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50120) *
                C50132 * C1544 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50120) *
                C50132 * C50099) *
               C50261 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50120) *
                C50132 * C1544 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50120) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                 C2164 +
             (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                 C2159 +
             (C2326 - C2327 + C2328 - C2329) * C2165 +
             (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
             C2383 * C2161) *
                C50132 * C1544 +
            ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                 C2164 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                 C2159 +
             (C3058 - C3059 + C3060 - C3061) * C2165 +
             (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
             C4033 * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2327 - C2326 + C2329 - C2328) * C2164 +
             (C2331 - C2330 + C2333 - C2332) * C2159 +
             (C2335 - C2334 + C2337 - C2336) * C2165 +
             (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
             C3355 * C2161) *
                C50132 * C1544 +
            ((C3059 - C3058 + C3061 - C3060) * C2164 +
             (C3063 - C3062 + C3065 - C3064) * C2159 +
             (C3067 - C3066 + C3069 - C3068) * C2165 +
             (C3071 - C3070 + C3073 - C3072) * C2160 +
             (C4024 - C4025 + C4026 - C4027) * C2166 +
             (C4028 - C4029 + C4030 - C4031) * C2161) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                 C2164 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                 C2159 +
             (C2350 - C2351 + C2352 - C2353) * C2165 +
             (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
             C2385 * C2161) *
                C50132 * C1544 +
            ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                 C2164 +
             (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                 C2159 +
             (C3074 - C3075 + C3076 - C3077) * C2165 +
             (C3078 - C3079 + C3080 - C3081) * C2160 +
             (C3082 - C3083 + C3084 - C3085) * C2166 +
             (C3086 - C3087 + C3088 - C3089) * C2161) *
                C50132 * C50099) *
               C50261 +
           (((C2351 - C2350 + C2353 - C2352) * C2164 +
             (C2355 - C2354 + C2357 - C2356) * C2159 +
             (C2359 - C2358 + C2361 - C2360) * C2165 +
             (C2363 - C2362 + C2365 - C2364) * C2160 +
             (C2366 - C2367 + C2368 - C2369) * C2166 +
             (C2370 - C2371 + C2372 - C2373) * C2161) *
                C50132 * C1544 +
            ((C3075 - C3074 + C3077 - C3076) * C2164 +
             (C3079 - C3078 + C3081 - C3080) * C2159 +
             (C3083 - C3082 + C3085 - C3084) * C2165 +
             (C3087 - C3086 + C3089 - C3088) * C2160 +
             (C2162 * C3046 - C2157 * C3049 + C2163 * C3047 - C49975 * C3052) *
                 C2166 +
             (C2162 * C3051 - C2157 * C3055 + C2163 * C3053 - C49975 * C3056) *
                 C2161) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50308 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50309 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C1960) *
              C50261 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C50308 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50309 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50120) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50308 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50309 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C3510 - C3511 + C3512 - C3513) * C2165 +
            (C3514 - C3515 + C3516 - C3517) * C2160 +
            (C3518 - C3519 + C3520 - C3521) * C2166 +
            (C3522 - C3523 + C3524 - C3525) * C2161) *
               C50132 * C1960) *
              C50261 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C50308 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50309 +
           ((C3511 - C3510 + C3513 - C3512) * C2164 +
            (C3515 - C3514 + C3517 - C3516) * C2159 +
            (C3519 - C3518 + C3521 - C3520) * C2165 +
            (C3523 - C3522 + C3525 - C3524) * C2160 +
            (C2162 * C3501 - C2157 * C3503 + C2163 * C3502 - C49975 * C3504) *
                C2166 +
            (C2162 * C3505 - C2157 * C3507 + C2163 * C3506 - C49975 * C3508) *
                C2161) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C248 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C1544 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50099) *
              C249 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50120) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C1544 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50120) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50120) *
              C50132 * C1710 +
          ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
            C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
               C121 +
           (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
            C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
               C50120) *
              C50132 * C1711 +
          ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
            C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
               C121 +
           (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
            C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
               C50120) *
              C50132 * C1712 +
          ((C117 * C1714 - C105 * C1718 + C118 * C1715 - C106 * C1719 +
            C119 * C1716 - C107 * C1720 + C120 * C1717 - C108 * C1721) *
               C121 +
           (C117 * C1722 - C105 * C1726 + C118 * C1723 - C106 * C1727 +
            C119 * C1724 - C107 * C1728 + C120 * C1725 - C108 * C1729) *
               C50120) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C1544 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C3074 - C3075 + C3076 - C3077) * C2165 +
            (C3078 - C3079 + C3080 - C3081) * C2160 +
            (C3082 - C3083 + C3084 - C3085) * C2166 +
            (C3086 - C3087 + C3088 - C3089) * C2161) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C1544 +
           ((C2162 * C396 - C2157 * C406 + C2163 * C397 - C49975 * C407) *
                C2164 +
            (C2162 * C410 - C2157 * C426 + C2163 * C411 - C49975 * C427) *
                C2159 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                C2165 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                C2160 +
            (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                C2166 +
            (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                C2161) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C248 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C1544 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50099) *
              C249 +
          ((C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C1544 +
           (C4032 * C2164 + C4033 * C2159 +
            (C4025 - C4024 + C4027 - C4026) * C2165 +
            (C4029 - C4028 + C4031 - C4030) * C2160 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C2166 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C2161) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
               C2164 +
           (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
               C2159 +
           (C2326 - C2327 + C2328 - C2329) * C2165 +
           (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
           C2383 * C2161) *
              C50132 * C1710 +
          ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
               C2164 +
           (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
               C2159 +
           (C3058 - C3059 + C3060 - C3061) * C2165 +
           (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
           C4033 * C2161) *
              C50132 * C1711 +
          ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
               C2164 +
           (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
               C2159 +
           (C3510 - C3511 + C3512 - C3513) * C2165 +
           (C3514 - C3515 + C3516 - C3517) * C2160 +
           (C3518 - C3519 + C3520 - C3521) * C2166 +
           (C3522 - C3523 + C3524 - C3525) * C2161) *
              C50132 * C1712 +
          ((C2162 * C1714 - C2157 * C1718 + C2163 * C1715 - C49975 * C1719) *
               C2164 +
           (C2162 * C1722 - C2157 * C1726 + C2163 * C1723 - C49975 * C1727) *
               C2159 +
           (C2162 * C4423 - C2157 * C4427 + C2163 * C4424 - C49975 * C4428) *
               C2165 +
           (C2162 * C4429 - C2157 * C4435 + C2163 * C4430 - C49975 * C4436) *
               C2160 +
           (C2162 * C4425 - C2157 * C4431 + C2163 * C4426 - C49975 * C4432) *
               C2166 +
           (C2162 * C4433 - C2157 * C4437 + C2163 * C4434 - C49975 * C4438) *
               C2161) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C50308 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50309 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50120) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C50308 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50309 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50120) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C50308 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50309 +
           ((C2157 * C412 - C2162 * C398 + C49975 * C413 - C2163 * C399) *
                C2164 +
            (C2157 * C428 - C2162 * C416 + C49975 * C429 - C2163 * C417) *
                C2159 +
            (C3510 - C3511 + C3512 - C3513) * C2165 +
            (C3514 - C3515 + C3516 - C3517) * C2160 +
            (C3518 - C3519 + C3520 - C3521) * C2166 +
            (C3522 - C3523 + C3524 - C3525) * C2161) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C50308 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C3074 - C3075 + C3076 - C3077) * C2165 +
            (C3078 - C3079 + C3080 - C3081) * C2160 +
            (C3082 - C3083 + C3084 - C3085) * C2166 +
            (C3086 - C3087 + C3088 - C3089) * C2161) *
               C50132 * C50309 +
           ((C2162 * C399 - C2157 * C413 + C2163 * C400 - C49975 * C414) *
                C2164 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C49975 * C430) *
                C2159 +
            (C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C49975 * C1089) *
                C2165 +
            (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C49975 * C1097) *
                C2160 +
            (C2162 * C2532 - C2157 * C2535 + C2163 * C2533 - C49975 * C2538) *
                C2166 +
            (C2162 * C2537 - C2157 * C2541 + C2163 * C2539 - C49975 * C2542) *
                C2161) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50120) *
               C50132 * C1544 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50120) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50120) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50120) *
               C50132 * C50099) *
              C248 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50120) *
               C50132 * C1544 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50120) *
               C50132 * C50099) *
              C249 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50120) *
               C50132 * C1544 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50120) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C49975 * C131) *
                C2164 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C49975 * C145) *
                C2159 +
            (C2350 - C2351 + C2352 - C2353) * C2165 +
            (C2354 - C2355 + C2356 - C2357) * C2160 + C2384 * C2166 +
            C2385 * C2161) *
               C50132 * C1544 +
           ((C2157 * C405 - C2162 * C395 + C49975 * C406 - C2163 * C396) *
                C2164 +
            (C2157 * C425 - C2162 * C409 + C49975 * C426 - C2163 * C410) *
                C2159 +
            (C3074 - C3075 + C3076 - C3077) * C2165 +
            (C3078 - C3079 + C3080 - C3081) * C2160 +
            (C3082 - C3083 + C3084 - C3085) * C2166 +
            (C3086 - C3087 + C3088 - C3089) * C2161) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C2157 * C131 - C2162 * C124 + C49975 * C132 - C2163 * C125) *
                C2164 +
            (C2157 * C145 - C2162 * C135 + C49975 * C146 - C2163 * C136) *
                C2159 +
            (C2690 - C2691 + C2692 - C2693) * C2165 +
            (C2694 - C2695 + C2696 - C2697) * C2160 +
            (C2698 - C2699 + C2700 - C2701) * C2166 +
            (C2702 - C2703 + C2704 - C2705) * C2161) *
               C50132 * C1544 +
           ((C2162 * C396 - C2157 * C406 + C2163 * C397 - C49975 * C407) *
                C2164 +
            (C2162 * C410 - C2157 * C426 + C2163 * C411 - C49975 * C427) *
                C2159 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C49975 * C783) *
                C2165 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C49975 * C793) *
                C2160 +
            (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C49975 * C1437) *
                C2166 +
            (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C49975 * C1445) *
                C2161) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C49975 * C130 - C2163 * C123) *
                C2164 +
            (C2157 * C143 - C2162 * C133 + C49975 * C144 - C2163 * C134) *
                C2159 +
            (C2326 - C2327 + C2328 - C2329) * C2165 +
            (C2330 - C2331 + C2332 - C2333) * C2160 + C2382 * C2166 +
            C2383 * C2161) *
               C50132 * C1544 +
           ((C2162 * C394 - C2157 * C404 + C2163 * C395 - C49975 * C405) *
                C2164 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C49975 * C425) *
                C2159 +
            (C3058 - C3059 + C3060 - C3061) * C2165 +
            (C3062 - C3063 + C3064 - C3065) * C2160 + C4032 * C2166 +
            C4033 * C2161) *
               C50132 * C50099) *
              C248 +
          (((C2327 - C2326 + C2329 - C2328) * C2164 +
            (C2331 - C2330 + C2333 - C2332) * C2159 +
            (C2335 - C2334 + C2337 - C2336) * C2165 +
            (C2339 - C2338 + C2341 - C2340) * C2160 + C3354 * C2166 +
            C3355 * C2161) *
               C50132 * C1544 +
           ((C3059 - C3058 + C3061 - C3060) * C2164 +
            (C3063 - C3062 + C3065 - C3064) * C2159 +
            (C3067 - C3066 + C3069 - C3068) * C2165 +
            (C3071 - C3070 + C3073 - C3072) * C2160 +
            (C4024 - C4025 + C4026 - C4027) * C2166 +
            (C4028 - C4029 + C4030 - C4031) * C2161) *
               C50132 * C50099) *
              C249 +
          ((C2382 * C2164 + C2383 * C2159 +
            (C2343 - C2342 + C2345 - C2344) * C2165 +
            (C2347 - C2346 + C2349 - C2348) * C2160 +
            (C3346 - C3347 + C3348 - C3349) * C2166 +
            (C3350 - C3351 + C3352 - C3353) * C2161) *
               C50132 * C1544 +
           (C4032 * C2164 + C4033 * C2159 +
            (C4025 - C4024 + C4027 - C4026) * C2165 +
            (C4029 - C4028 + C4031 - C4030) * C2160 +
            (C2162 * C4011 - C2157 * C4013 + C2163 * C4012 - C49975 * C4014) *
                C2166 +
            (C2162 * C4015 - C2157 * C4017 + C2163 * C4016 - C49975 * C4018) *
                C2161) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50035 * C50261 +
           ((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 +
            (C24395 - C24396 + C24397 - C24398) * C24231 +
            (C24399 - C24400 + C24401 - C24402) * C24226) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50035 * C50261 +
           ((C24404 - C24403 + C24406 - C24405) * C24229 +
            (C24408 - C24407 + C24410 - C24409) * C50310 +
            (C24412 - C24411 + C24414 - C24413) * C24230 +
            (C24416 - C24415 + C24418 - C24417) * C50311 +
            (C24419 - C24420 + C24421 - C24422) * C24231 +
            (C24423 - C24424 + C24425 - C24426) * C24226) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C24229 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50310 +
            (C24731 - C24732 + C24733 - C24734) * C24230 +
            (C24735 - C24736 + C24737 - C24738) * C50311 +
            (C24739 - C24740 + C24741 - C24742) * C24231 +
            (C24743 - C24744 + C24745 - C24746) * C24226) *
               C50132 * C50035 * C50261 +
           ((C24732 - C24731 + C24734 - C24733) * C24229 +
            (C24736 - C24735 + C24738 - C24737) * C50310 +
            (C24740 - C24739 + C24742 - C24741) * C24230 +
            (C24744 - C24743 + C24746 - C24745) * C50311 +
            (C49173 * C971 - C50246 * C975 + C49166 * C972 - C49975 * C976) *
                C24231 +
            (C49173 * C979 - C50246 * C983 + C49166 * C980 - C49975 * C984) *
                C24226) *
               C50132 * C50035 * C50071) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C24229 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50310 +
             (C24379 - C24380 + C24381 - C24382) * C24230 +
             (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
             C24436 * C24226) *
                C50132 * C50262 +
            ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                 C24229 +
             (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                 C50310 +
             (C25087 - C25088 + C25089 - C25090) * C24230 +
             (C25091 - C25092 + C25093 - C25094) * C50311 +
             (C25095 - C25096 + C25097 - C25098) * C24231 +
             (C25099 - C25100 + C25101 - C25102) * C24226) *
                C50132 * C50099) *
               C50261 +
           (((C24380 - C24379 + C24382 - C24381) * C24229 +
             (C24384 - C24383 + C24386 - C24385) * C50310 +
             (C24388 - C24387 + C24390 - C24389) * C24230 +
             (C24392 - C24391 + C24394 - C24393) * C50311 +
             (C24395 - C24396 + C24397 - C24398) * C24231 +
             (C24399 - C24400 + C24401 - C24402) * C24226) *
                C50132 * C50262 +
            ((C25088 - C25087 + C25090 - C25089) * C24229 +
             (C25092 - C25091 + C25094 - C25093) * C50310 +
             (C25096 - C25095 + C25098 - C25097) * C24230 +
             (C25100 - C25099 + C25102 - C25101) * C50311 +
             (C50246 * C3048 - C49173 * C3045 + C49975 * C3049 -
              C49166 * C3046) *
                 C24231 +
             (C50246 * C3054 - C49173 * C3050 + C49975 * C3055 -
              C49166 * C3051) *
                 C24226) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C24229 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50310 +
             (C24403 - C24404 + C24405 - C24406) * C24230 +
             (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
             C24438 * C24226) *
                C50132 * C50262 +
            ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                 C24229 +
             (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                 C50310 +
             (C25103 - C25104 + C25105 - C25106) * C24230 +
             (C25107 - C25108 + C25109 - C25110) * C50311 +
             (C25111 - C25112 + C25113 - C25114) * C24231 +
             (C25115 - C25116 + C25117 - C25118) * C24226) *
                C50132 * C50099) *
               C50261 +
           (((C24404 - C24403 + C24406 - C24405) * C24229 +
             (C24408 - C24407 + C24410 - C24409) * C50310 +
             (C24412 - C24411 + C24414 - C24413) * C24230 +
             (C24416 - C24415 + C24418 - C24417) * C50311 +
             (C24419 - C24420 + C24421 - C24422) * C24231 +
             (C24423 - C24424 + C24425 - C24426) * C24226) *
                C50132 * C50262 +
            ((C25104 - C25103 + C25106 - C25105) * C24229 +
             (C25108 - C25107 + C25110 - C25109) * C50310 +
             (C25112 - C25111 + C25114 - C25113) * C24230 +
             (C25116 - C25115 + C25118 - C25117) * C50311 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C24231 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C24226) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50035 * C248 +
           ((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 +
            (C24395 - C24396 + C24397 - C24398) * C24231 +
            (C24399 - C24400 + C24401 - C24402) * C24226) *
               C50132 * C50035 * C249 +
           (C24435 * C24229 + C24436 * C50310 +
            (C24396 - C24395 + C24398 - C24397) * C24230 +
            (C24400 - C24399 + C24402 - C24401) * C50311 +
            (C50246 * C2316 - C49173 * C2313 + C49975 * C2317 -
             C49166 * C2314) *
                C24231 +
            (C50246 * C2322 - C49173 * C2318 + C49975 * C2323 -
             C49166 * C2319) *
                C24226) *
               C50132 * C50035 * C250) *
              C251 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50035 * C248 +
           ((C24404 - C24403 + C24406 - C24405) * C24229 +
            (C24408 - C24407 + C24410 - C24409) * C50310 +
            (C24412 - C24411 + C24414 - C24413) * C24230 +
            (C24416 - C24415 + C24418 - C24417) * C50311 +
            (C24419 - C24420 + C24421 - C24422) * C24231 +
            (C24423 - C24424 + C24425 - C24426) * C24226) *
               C50132 * C50035 * C249 +
           (C24437 * C24229 + C24438 * C50310 +
            (C24420 - C24419 + C24422 - C24421) * C24230 +
            (C24424 - C24423 + C24426 - C24425) * C50311 +
            (C49173 * C2314 - C50246 * C2317 + C49166 * C2315 -
             C49975 * C2320) *
                C24231 +
            (C49173 * C2319 - C50246 * C2323 + C49166 * C2321 -
             C49975 * C2324) *
                C24226) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
               C24229 +
           (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
               C50310 +
           (C50246 * C263 - C49173 * C253 + C49975 * C264 - C49166 * C254) *
               C24230 +
           (C50246 * C283 - C49173 * C267 + C49975 * C284 - C49166 * C268) *
               C50311 +
           (C50246 * C271 - C49173 * C257 + C49975 * C272 - C49166 * C258) *
               C24231 +
           (C50246 * C287 - C49173 * C275 + C49975 * C288 - C49166 * C276) *
               C24226) *
              C50132 * C50035 * C50019 * C113 +
          ((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
               C24229 +
           (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
               C50310 +
           (C49173 * C254 - C50246 * C264 + C49166 * C255 - C49975 * C265) *
               C24230 +
           (C49173 * C268 - C50246 * C284 + C49166 * C269 - C49975 * C285) *
               C50311 +
           (C49173 * C258 - C50246 * C272 + C49166 * C259 - C49975 * C273) *
               C24231 +
           (C49173 * C276 - C50246 * C288 + C49166 * C277 - C49975 * C289) *
               C24226) *
              C50132 * C50035 * C50019 * C114 +
          ((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
               C24229 +
           (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
               C50310 +
           (C50246 * C265 - C49173 * C255 + C49975 * C266 - C49166 * C256) *
               C24230 +
           (C50246 * C285 - C49173 * C269 + C49975 * C286 - C49166 * C270) *
               C50311 +
           (C50246 * C273 - C49173 * C259 + C49975 * C274 - C49166 * C260) *
               C24231 +
           (C50246 * C289 - C49173 * C277 + C49975 * C290 - C49166 * C278) *
               C24226) *
              C50132 * C50035 * C50019 * C115 +
          ((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
               C24229 +
           (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
               C50310 +
           (C49173 * C256 - C50246 * C266 + C49166 * C261 - C49975 * C279) *
               C24230 +
           (C49173 * C270 - C50246 * C286 + C49166 * C280 - C49975 * C291) *
               C50311 +
           (C49173 * C260 - C50246 * C274 + C49166 * C262 - C49975 * C281) *
               C24231 +
           (C49173 * C278 - C50246 * C290 + C49166 * C282 - C49975 * C292) *
               C24226) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C391 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C49173 * C775 - C50246 * C780 + C49166 * C776 - C49975 * C781) *
                C24230 +
            (C49173 * C784 - C50246 * C790 + C49166 * C785 - C49975 * C791) *
                C50311 +
            (C49173 * C1430 - C50246 * C1434 + C49166 * C1431 -
             C49975 * C1435) *
                C24231 +
            (C49173 * C1438 - C50246 * C1442 + C49166 * C1439 -
             C49975 * C1443) *
                C24226) *
               C50132 * C392 +
           ((C50246 * C412 - C49173 * C398 + C49975 * C413 - C49166 * C399) *
                C24229 +
            (C50246 * C428 - C49173 * C416 + C49975 * C429 - C49166 * C417) *
                C50310 +
            (C50246 * C1087 - C49173 * C1083 + C49975 * C1088 -
             C49166 * C1084) *
                C24230 +
            (C50246 * C1095 - C49173 * C1091 + C49975 * C1096 -
             C49166 * C1092) *
                C50311 +
            (C50246 * C2534 - C49173 * C2531 + C49975 * C2535 -
             C49166 * C2532) *
                C24231 +
            (C50246 * C2540 - C49173 * C2536 + C49975 * C2541 -
             C49166 * C2537) *
                C24226) *
               C50132 * C393) *
              C50019 * C251 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C391 +
           ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                C24229 +
            (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                C50310 +
            (C50246 * C781 - C49173 * C776 + C49975 * C782 - C49166 * C777) *
                C24230 +
            (C50246 * C791 - C49173 * C785 + C49975 * C792 - C49166 * C786) *
                C50311 +
            (C50246 * C1435 - C49173 * C1431 + C49975 * C1436 -
             C49166 * C1432) *
                C24231 +
            (C50246 * C1443 - C49173 * C1439 + C49975 * C1444 -
             C49166 * C1440) *
                C24226) *
               C50132 * C392 +
           ((C49173 * C399 - C50246 * C413 + C49166 * C400 - C49975 * C414) *
                C24229 +
            (C49173 * C417 - C50246 * C429 + C49166 * C418 - C49975 * C430) *
                C50310 +
            (C49173 * C1084 - C50246 * C1088 + C49166 * C1085 -
             C49975 * C1089) *
                C24230 +
            (C49173 * C1092 - C50246 * C1096 + C49166 * C1093 -
             C49975 * C1097) *
                C50311 +
            (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
             C49975 * C2538) *
                C24231 +
            (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
             C49975 * C2542) *
                C24226) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50262 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C49173 * C775 - C50246 * C780 + C49166 * C776 - C49975 * C781) *
                C24230 +
            (C49173 * C784 - C50246 * C790 + C49166 * C785 - C49975 * C791) *
                C50311 +
            (C49173 * C1430 - C50246 * C1434 + C49166 * C1431 -
             C49975 * C1435) *
                C24231 +
            (C49173 * C1438 - C50246 * C1442 + C49166 * C1439 -
             C49975 * C1443) *
                C24226) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50262 +
           ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                C24229 +
            (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                C50310 +
            (C50246 * C781 - C49173 * C776 + C49975 * C782 - C49166 * C777) *
                C24230 +
            (C50246 * C791 - C49173 * C785 + C49975 * C792 - C49166 * C786) *
                C50311 +
            (C50246 * C1435 - C49173 * C1431 + C49975 * C1436 -
             C49166 * C1432) *
                C24231 +
            (C50246 * C1443 - C49173 * C1439 + C49975 * C1444 -
             C49166 * C1440) *
                C24226) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C24229 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50310 +
            (C24731 - C24732 + C24733 - C24734) * C24230 +
            (C24735 - C24736 + C24737 - C24738) * C50311 +
            (C24739 - C24740 + C24741 - C24742) * C24231 +
            (C24743 - C24744 + C24745 - C24746) * C24226) *
               C50132 * C50262 +
           ((C49173 * C396 - C50246 * C406 + C49166 * C397 - C49975 * C407) *
                C24229 +
            (C49173 * C410 - C50246 * C426 + C49166 * C411 - C49975 * C427) *
                C50310 +
            (C49173 * C777 - C50246 * C782 + C49166 * C778 - C49975 * C783) *
                C24230 +
            (C49173 * C786 - C50246 * C792 + C49166 * C787 - C49975 * C793) *
                C50311 +
            (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
             C49975 * C1437) *
                C24231 +
            (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
             C49975 * C1445) *
                C24226) *
               C50132 * C50099) *
              C50019 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
               C24229 +
           (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
               C50310 +
           (C50246 * C263 - C49173 * C253 + C49975 * C264 - C49166 * C254) *
               C24230 +
           (C50246 * C283 - C49173 * C267 + C49975 * C284 - C49166 * C268) *
               C50311 +
           (C50246 * C271 - C49173 * C257 + C49975 * C272 - C49166 * C258) *
               C24231 +
           (C50246 * C287 - C49173 * C275 + C49975 * C288 - C49166 * C276) *
               C24226) *
              C50132 * C50035 * C50019 * C113 +
          ((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
               C24229 +
           (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
               C50310 +
           (C49173 * C254 - C50246 * C264 + C49166 * C255 - C49975 * C265) *
               C24230 +
           (C49173 * C268 - C50246 * C284 + C49166 * C269 - C49975 * C285) *
               C50311 +
           (C49173 * C258 - C50246 * C272 + C49166 * C259 - C49975 * C273) *
               C24231 +
           (C49173 * C276 - C50246 * C288 + C49166 * C277 - C49975 * C289) *
               C24226) *
              C50132 * C50035 * C50019 * C114 +
          ((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
               C24229 +
           (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
               C50310 +
           (C50246 * C265 - C49173 * C255 + C49975 * C266 - C49166 * C256) *
               C24230 +
           (C50246 * C285 - C49173 * C269 + C49975 * C286 - C49166 * C270) *
               C50311 +
           (C50246 * C273 - C49173 * C259 + C49975 * C274 - C49166 * C260) *
               C24231 +
           (C50246 * C289 - C49173 * C277 + C49975 * C290 - C49166 * C278) *
               C24226) *
              C50132 * C50035 * C50019 * C115 +
          ((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
               C24229 +
           (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
               C50310 +
           (C49173 * C256 - C50246 * C266 + C49166 * C261 - C49975 * C279) *
               C24230 +
           (C49173 * C270 - C50246 * C286 + C49166 * C280 - C49975 * C291) *
               C50311 +
           (C49173 * C260 - C50246 * C274 + C49166 * C262 - C49975 * C281) *
               C24231 +
           (C49173 * C278 - C50246 * C290 + C49166 * C282 - C49975 * C292) *
               C24226) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50035 * C248 +
           ((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 +
            (C24395 - C24396 + C24397 - C24398) * C24231 +
            (C24399 - C24400 + C24401 - C24402) * C24226) *
               C50132 * C50035 * C249 +
           (C24435 * C24229 + C24436 * C50310 +
            (C24396 - C24395 + C24398 - C24397) * C24230 +
            (C24400 - C24399 + C24402 - C24401) * C50311 +
            (C50246 * C2316 - C49173 * C2313 + C49975 * C2317 -
             C49166 * C2314) *
                C24231 +
            (C50246 * C2322 - C49173 * C2318 + C49975 * C2323 -
             C49166 * C2319) *
                C24226) *
               C50132 * C50035 * C250) *
              C251 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50035 * C248 +
           ((C24404 - C24403 + C24406 - C24405) * C24229 +
            (C24408 - C24407 + C24410 - C24409) * C50310 +
            (C24412 - C24411 + C24414 - C24413) * C24230 +
            (C24416 - C24415 + C24418 - C24417) * C50311 +
            (C24419 - C24420 + C24421 - C24422) * C24231 +
            (C24423 - C24424 + C24425 - C24426) * C24226) *
               C50132 * C50035 * C249 +
           (C24437 * C24229 + C24438 * C50310 +
            (C24420 - C24419 + C24422 - C24421) * C24230 +
            (C24424 - C24423 + C24426 - C24425) * C50311 +
            (C49173 * C2314 - C50246 * C2317 + C49166 * C2315 -
             C49975 * C2320) *
                C24231 +
            (C49173 * C2319 - C50246 * C2323 + C49166 * C2321 -
             C49975 * C2324) *
                C24226) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50035 * C50306 +
           ((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
            C25376 * C24226) *
               C50132 * C50035 * C50307 +
           (C24435 * C24229 + C24436 * C50310 +
            (C24396 - C24395 + C24398 - C24397) * C24230 +
            (C24400 - C24399 + C24402 - C24401) * C50311 +
            (C25367 - C25368 + C25369 - C25370) * C24231 +
            (C25371 - C25372 + C25373 - C25374) * C24226) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50035 * C50306 +
           ((C24404 - C24403 + C24406 - C24405) * C24229 +
            (C24408 - C24407 + C24410 - C24409) * C50310 +
            (C24412 - C24411 + C24414 - C24413) * C24230 +
            (C24416 - C24415 + C24418 - C24417) * C50311 +
            (C24419 - C24420 + C24421 - C24422) * C24231 +
            (C24423 - C24424 + C24425 - C24426) * C24226) *
               C50132 * C50035 * C50307 +
           (C24437 * C24229 + C24438 * C50310 +
            (C24420 - C24419 + C24422 - C24421) * C24230 +
            (C24424 - C24423 + C24426 - C24425) * C50311 +
            (C49173 * C2314 - C50246 * C2317 + C49166 * C2315 -
             C49975 * C2320) *
                C24231 +
            (C49173 * C2319 - C50246 * C2323 + C49166 * C2321 -
             C49975 * C2324) *
                C24226) *
               C50132 * C50035 * C1199) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50262 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50099) *
              C50306 +
          (((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
            C25376 * C24226) *
               C50132 * C50262 +
           ((C25088 - C25087 + C25090 - C25089) * C24229 +
            (C25092 - C25091 + C25094 - C25093) * C50310 +
            (C25096 - C25095 + C25098 - C25097) * C24230 +
            (C25100 - C25099 + C25102 - C25101) * C50311 +
            (C26029 - C26030 + C26031 - C26032) * C24231 +
            (C26033 - C26034 + C26035 - C26036) * C24226) *
               C50132 * C50099) *
              C50307 +
          ((C24435 * C24229 + C24436 * C50310 +
            (C24396 - C24395 + C24398 - C24397) * C24230 +
            (C24400 - C24399 + C24402 - C24401) * C50311 +
            (C25367 - C25368 + C25369 - C25370) * C24231 +
            (C25371 - C25372 + C25373 - C25374) * C24226) *
               C50132 * C50262 +
           (C26037 * C24229 + C26038 * C50310 +
            (C26030 - C26029 + C26032 - C26031) * C24230 +
            (C26034 - C26033 + C26036 - C26035) * C50311 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C24231 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C24226) *
               C50132 * C50099) *
              C1199) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
               C24229 +
           (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
               C50310 +
           (C24379 - C24380 + C24381 - C24382) * C24230 +
           (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
           C24436 * C24226) *
              C50132 * C50035 * C964 +
          ((C24380 - C24379 + C24382 - C24381) * C24229 +
           (C24384 - C24383 + C24386 - C24385) * C50310 +
           (C24388 - C24387 + C24390 - C24389) * C24230 +
           (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
           C25376 * C24226) *
              C50132 * C50035 * C965 +
          (C24435 * C24229 + C24436 * C50310 +
           (C24396 - C24395 + C24398 - C24397) * C24230 +
           (C24400 - C24399 + C24402 - C24401) * C50311 +
           (C25367 - C25368 + C25369 - C25370) * C24231 +
           (C25371 - C25372 + C25373 - C25374) * C24226) *
              C50132 * C50035 * C966 +
          (C25375 * C24229 + C25376 * C50310 +
           (C25368 - C25367 + C25370 - C25369) * C24230 +
           (C25372 - C25371 + C25374 - C25373) * C50311 +
           (C49173 * C3333 - C50246 * C3335 + C49166 * C3334 - C49975 * C3336) *
               C24231 +
           (C49173 * C3337 - C50246 * C3339 + C49166 * C3338 - C49975 * C3340) *
               C24226) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50035 * C893 +
           ((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 +
            (C24395 - C24396 + C24397 - C24398) * C24231 +
            (C24399 - C24400 + C24401 - C24402) * C24226) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50035 * C893 +
           ((C24404 - C24403 + C24406 - C24405) * C24229 +
            (C24408 - C24407 + C24410 - C24409) * C50310 +
            (C24412 - C24411 + C24414 - C24413) * C24230 +
            (C24416 - C24415 + C24418 - C24417) * C50311 +
            (C24419 - C24420 + C24421 - C24422) * C24231 +
            (C24423 - C24424 + C24425 - C24426) * C24226) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C24229 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50310 +
            (C24731 - C24732 + C24733 - C24734) * C24230 +
            (C24735 - C24736 + C24737 - C24738) * C50311 +
            (C24739 - C24740 + C24741 - C24742) * C24231 +
            (C24743 - C24744 + C24745 - C24746) * C24226) *
               C50132 * C50035 * C893 +
           ((C24732 - C24731 + C24734 - C24733) * C24229 +
            (C24736 - C24735 + C24738 - C24737) * C50310 +
            (C24740 - C24739 + C24742 - C24741) * C24230 +
            (C24744 - C24743 + C24746 - C24745) * C50311 +
            (C49173 * C971 - C50246 * C975 + C49166 * C972 - C49975 * C976) *
                C24231 +
            (C49173 * C979 - C50246 * C983 + C49166 * C980 - C49975 * C984) *
                C24226) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C391 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 +
            (C25095 - C25096 + C25097 - C25098) * C24231 +
            (C25099 - C25100 + C25101 - C25102) * C24226) *
               C50132 * C392 +
           ((C50246 * C412 - C49173 * C398 + C49975 * C413 - C49166 * C399) *
                C24229 +
            (C50246 * C428 - C49173 * C416 + C49975 * C429 - C49166 * C417) *
                C50310 +
            (C25523 - C25524 + C25525 - C25526) * C24230 +
            (C25527 - C25528 + C25529 - C25530) * C50311 +
            (C25531 - C25532 + C25533 - C25534) * C24231 +
            (C25535 - C25536 + C25537 - C25538) * C24226) *
               C50132 * C393) *
              C893 +
          (((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
            C25376 * C24226) *
               C50132 * C391 +
           ((C25088 - C25087 + C25090 - C25089) * C24229 +
            (C25092 - C25091 + C25094 - C25093) * C50310 +
            (C25096 - C25095 + C25098 - C25097) * C24230 +
            (C25100 - C25099 + C25102 - C25101) * C50311 +
            (C50246 * C3048 - C49173 * C3045 + C49975 * C3049 -
             C49166 * C3046) *
                C24231 +
            (C50246 * C3054 - C49173 * C3050 + C49975 * C3055 -
             C49166 * C3051) *
                C24226) *
               C50132 * C392 +
           ((C25524 - C25523 + C25526 - C25525) * C24229 +
            (C25528 - C25527 + C25530 - C25529) * C50310 +
            (C25532 - C25531 + C25534 - C25533) * C24230 +
            (C25536 - C25535 + C25538 - C25537) * C50311 +
            (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
             C49975 * C3504) *
                C24231 +
            (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
             C49975 * C3508) *
                C24226) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C24229 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50310 +
             (C24379 - C24380 + C24381 - C24382) * C24230 +
             (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
             C24436 * C24226) *
                C50132 * C50262 +
            ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                 C24229 +
             (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                 C50310 +
             (C25087 - C25088 + C25089 - C25090) * C24230 +
             (C25091 - C25092 + C25093 - C25094) * C50311 +
             (C25095 - C25096 + C25097 - C25098) * C24231 +
             (C25099 - C25100 + C25101 - C25102) * C24226) *
                C50132 * C50099) *
               C893 +
           (((C24380 - C24379 + C24382 - C24381) * C24229 +
             (C24384 - C24383 + C24386 - C24385) * C50310 +
             (C24388 - C24387 + C24390 - C24389) * C24230 +
             (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
             C25376 * C24226) *
                C50132 * C50262 +
            ((C25088 - C25087 + C25090 - C25089) * C24229 +
             (C25092 - C25091 + C25094 - C25093) * C50310 +
             (C25096 - C25095 + C25098 - C25097) * C24230 +
             (C25100 - C25099 + C25102 - C25101) * C50311 +
             (C50246 * C3048 - C49173 * C3045 + C49975 * C3049 -
              C49166 * C3046) *
                 C24231 +
             (C50246 * C3054 - C49173 * C3050 + C49975 * C3055 -
              C49166 * C3051) *
                 C24226) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C24229 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50310 +
             (C24403 - C24404 + C24405 - C24406) * C24230 +
             (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
             C24438 * C24226) *
                C50132 * C50262 +
            ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                 C24229 +
             (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                 C50310 +
             (C25103 - C25104 + C25105 - C25106) * C24230 +
             (C25107 - C25108 + C25109 - C25110) * C50311 +
             (C25111 - C25112 + C25113 - C25114) * C24231 +
             (C25115 - C25116 + C25117 - C25118) * C24226) *
                C50132 * C50099) *
               C893 +
           (((C24404 - C24403 + C24406 - C24405) * C24229 +
             (C24408 - C24407 + C24410 - C24409) * C50310 +
             (C24412 - C24411 + C24414 - C24413) * C24230 +
             (C24416 - C24415 + C24418 - C24417) * C50311 +
             (C24419 - C24420 + C24421 - C24422) * C24231 +
             (C24423 - C24424 + C24425 - C24426) * C24226) *
                C50132 * C50262 +
            ((C25104 - C25103 + C25106 - C25105) * C24229 +
             (C25108 - C25107 + C25110 - C25109) * C50310 +
             (C25112 - C25111 + C25114 - C25113) * C24230 +
             (C25116 - C25115 + C25118 - C25117) * C50311 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C24231 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C24226) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50035 * C893 +
           ((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 +
            (C24395 - C24396 + C24397 - C24398) * C24231 +
            (C24399 - C24400 + C24401 - C24402) * C24226) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50035 * C893 +
           ((C24404 - C24403 + C24406 - C24405) * C24229 +
            (C24408 - C24407 + C24410 - C24409) * C50310 +
            (C24412 - C24411 + C24414 - C24413) * C24230 +
            (C24416 - C24415 + C24418 - C24417) * C50311 +
            (C24419 - C24420 + C24421 - C24422) * C24231 +
            (C24423 - C24424 + C24425 - C24426) * C24226) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C24229 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50310 +
            (C24731 - C24732 + C24733 - C24734) * C24230 +
            (C24735 - C24736 + C24737 - C24738) * C50311 +
            (C24739 - C24740 + C24741 - C24742) * C24231 +
            (C24743 - C24744 + C24745 - C24746) * C24226) *
               C50132 * C50035 * C893 +
           ((C24732 - C24731 + C24734 - C24733) * C24229 +
            (C24736 - C24735 + C24738 - C24737) * C50310 +
            (C24740 - C24739 + C24742 - C24741) * C24230 +
            (C24744 - C24743 + C24746 - C24745) * C50311 +
            (C49173 * C971 - C50246 * C975 + C49166 * C972 - C49975 * C976) *
                C24231 +
            (C49173 * C979 - C50246 * C983 + C49166 * C980 - C49975 * C984) *
                C24226) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
               C24229 +
           (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
               C50310 +
           (C24379 - C24380 + C24381 - C24382) * C24230 +
           (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
           C24436 * C24226) *
              C50132 * C50035 * C964 +
          ((C24380 - C24379 + C24382 - C24381) * C24229 +
           (C24384 - C24383 + C24386 - C24385) * C50310 +
           (C24388 - C24387 + C24390 - C24389) * C24230 +
           (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
           C25376 * C24226) *
              C50132 * C50035 * C965 +
          (C24435 * C24229 + C24436 * C50310 +
           (C24396 - C24395 + C24398 - C24397) * C24230 +
           (C24400 - C24399 + C24402 - C24401) * C50311 +
           (C25367 - C25368 + C25369 - C25370) * C24231 +
           (C25371 - C25372 + C25373 - C25374) * C24226) *
              C50132 * C50035 * C966 +
          (C25375 * C24229 + C25376 * C50310 +
           (C25368 - C25367 + C25370 - C25369) * C24230 +
           (C25372 - C25371 + C25374 - C25373) * C50311 +
           (C49173 * C3333 - C50246 * C3335 + C49166 * C3334 - C49975 * C3336) *
               C24231 +
           (C49173 * C3337 - C50246 * C3339 + C49166 * C3338 - C49975 * C3340) *
               C24226) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C24229 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50310 +
             (C24379 - C24380 + C24381 - C24382) * C24230 +
             (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
             C24436 * C24226) *
                C50132 * C1544 +
            ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                 C24229 +
             (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                 C50310 +
             (C25087 - C25088 + C25089 - C25090) * C24230 +
             (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
             C26038 * C24226) *
                C50132 * C50099) *
               C50261 +
           (((C24380 - C24379 + C24382 - C24381) * C24229 +
             (C24384 - C24383 + C24386 - C24385) * C50310 +
             (C24388 - C24387 + C24390 - C24389) * C24230 +
             (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
             C25376 * C24226) *
                C50132 * C1544 +
            ((C25088 - C25087 + C25090 - C25089) * C24229 +
             (C25092 - C25091 + C25094 - C25093) * C50310 +
             (C25096 - C25095 + C25098 - C25097) * C24230 +
             (C25100 - C25099 + C25102 - C25101) * C50311 +
             (C26029 - C26030 + C26031 - C26032) * C24231 +
             (C26033 - C26034 + C26035 - C26036) * C24226) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C24229 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50310 +
             (C24403 - C24404 + C24405 - C24406) * C24230 +
             (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
             C24438 * C24226) *
                C50132 * C1544 +
            ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                 C24229 +
             (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                 C50310 +
             (C25103 - C25104 + C25105 - C25106) * C24230 +
             (C25107 - C25108 + C25109 - C25110) * C50311 +
             (C25111 - C25112 + C25113 - C25114) * C24231 +
             (C25115 - C25116 + C25117 - C25118) * C24226) *
                C50132 * C50099) *
               C50261 +
           (((C24404 - C24403 + C24406 - C24405) * C24229 +
             (C24408 - C24407 + C24410 - C24409) * C50310 +
             (C24412 - C24411 + C24414 - C24413) * C24230 +
             (C24416 - C24415 + C24418 - C24417) * C50311 +
             (C24419 - C24420 + C24421 - C24422) * C24231 +
             (C24423 - C24424 + C24425 - C24426) * C24226) *
                C50132 * C1544 +
            ((C25104 - C25103 + C25106 - C25105) * C24229 +
             (C25108 - C25107 + C25110 - C25109) * C50310 +
             (C25112 - C25111 + C25114 - C25113) * C24230 +
             (C25116 - C25115 + C25118 - C25117) * C50311 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C24231 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C24226) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50308 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50309 +
           ((C50246 * C412 - C49173 * C398 + C49975 * C413 - C49166 * C399) *
                C24229 +
            (C50246 * C428 - C49173 * C416 + C49975 * C429 - C49166 * C417) *
                C50310 +
            (C25523 - C25524 + C25525 - C25526) * C24230 +
            (C25527 - C25528 + C25529 - C25530) * C50311 +
            (C25531 - C25532 + C25533 - C25534) * C24231 +
            (C25535 - C25536 + C25537 - C25538) * C24226) *
               C50132 * C1960) *
              C50261 +
          (((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
            C25376 * C24226) *
               C50132 * C50308 +
           ((C25088 - C25087 + C25090 - C25089) * C24229 +
            (C25092 - C25091 + C25094 - C25093) * C50310 +
            (C25096 - C25095 + C25098 - C25097) * C24230 +
            (C25100 - C25099 + C25102 - C25101) * C50311 +
            (C26029 - C26030 + C26031 - C26032) * C24231 +
            (C26033 - C26034 + C26035 - C26036) * C24226) *
               C50132 * C50309 +
           ((C25524 - C25523 + C25526 - C25525) * C24229 +
            (C25528 - C25527 + C25530 - C25529) * C50310 +
            (C25532 - C25531 + C25534 - C25533) * C24230 +
            (C25536 - C25535 + C25538 - C25537) * C50311 +
            (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
             C49975 * C3504) *
                C24231 +
            (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
             C49975 * C3508) *
                C24226) *
               C50132 * C1960) *
              C50071) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C1544 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50099) *
              C248 +
          (((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
            C25376 * C24226) *
               C50132 * C1544 +
           ((C25088 - C25087 + C25090 - C25089) * C24229 +
            (C25092 - C25091 + C25094 - C25093) * C50310 +
            (C25096 - C25095 + C25098 - C25097) * C24230 +
            (C25100 - C25099 + C25102 - C25101) * C50311 +
            (C26029 - C26030 + C26031 - C26032) * C24231 +
            (C26033 - C26034 + C26035 - C26036) * C24226) *
               C50132 * C50099) *
              C249 +
          ((C24435 * C24229 + C24436 * C50310 +
            (C24396 - C24395 + C24398 - C24397) * C24230 +
            (C24400 - C24399 + C24402 - C24401) * C50311 +
            (C25367 - C25368 + C25369 - C25370) * C24231 +
            (C25371 - C25372 + C25373 - C25374) * C24226) *
               C50132 * C1544 +
           (C26037 * C24229 + C26038 * C50310 +
            (C26030 - C26029 + C26032 - C26031) * C24230 +
            (C26034 - C26033 + C26036 - C26035) * C50311 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C24231 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C24226) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C1544 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C1544 +
           ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                C24229 +
            (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                C50310 +
            (C25103 - C25104 + C25105 - C25106) * C24230 +
            (C25107 - C25108 + C25109 - C25110) * C50311 +
            (C25111 - C25112 + C25113 - C25114) * C24231 +
            (C25115 - C25116 + C25117 - C25118) * C24226) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C24229 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50310 +
            (C24731 - C24732 + C24733 - C24734) * C24230 +
            (C24735 - C24736 + C24737 - C24738) * C50311 +
            (C24739 - C24740 + C24741 - C24742) * C24231 +
            (C24743 - C24744 + C24745 - C24746) * C24226) *
               C50132 * C1544 +
           ((C49173 * C396 - C50246 * C406 + C49166 * C397 - C49975 * C407) *
                C24229 +
            (C49173 * C410 - C50246 * C426 + C49166 * C411 - C49975 * C427) *
                C50310 +
            (C49173 * C777 - C50246 * C782 + C49166 * C778 - C49975 * C783) *
                C24230 +
            (C49173 * C786 - C50246 * C792 + C49166 * C787 - C49975 * C793) *
                C50311 +
            (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
             C49975 * C1437) *
                C24231 +
            (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
             C49975 * C1445) *
                C24226) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
               C24229 +
           (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
               C50310 +
           (C24379 - C24380 + C24381 - C24382) * C24230 +
           (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
           C24436 * C24226) *
              C50132 * C1710 +
          ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
               C24229 +
           (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
               C50310 +
           (C25087 - C25088 + C25089 - C25090) * C24230 +
           (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
           C26038 * C24226) *
              C50132 * C1711 +
          ((C50246 * C412 - C49173 * C398 + C49975 * C413 - C49166 * C399) *
               C24229 +
           (C50246 * C428 - C49173 * C416 + C49975 * C429 - C49166 * C417) *
               C50310 +
           (C25523 - C25524 + C25525 - C25526) * C24230 +
           (C25527 - C25528 + C25529 - C25530) * C50311 +
           (C25531 - C25532 + C25533 - C25534) * C24231 +
           (C25535 - C25536 + C25537 - C25538) * C24226) *
              C50132 * C1712 +
          ((C49173 * C1714 - C50246 * C1718 + C49166 * C1715 - C49975 * C1719) *
               C24229 +
           (C49173 * C1722 - C50246 * C1726 + C49166 * C1723 - C49975 * C1727) *
               C50310 +
           (C49173 * C4423 - C50246 * C4427 + C49166 * C4424 - C49975 * C4428) *
               C24230 +
           (C49173 * C4429 - C50246 * C4435 + C49166 * C4430 - C49975 * C4436) *
               C50311 +
           (C49173 * C4425 - C50246 * C4431 + C49166 * C4426 - C49975 * C4432) *
               C24231 +
           (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 - C49975 * C4438) *
               C24226) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C50308 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50309 +
           ((C50246 * C412 - C49173 * C398 + C49975 * C413 - C49166 * C399) *
                C24229 +
            (C50246 * C428 - C49173 * C416 + C49975 * C429 - C49166 * C417) *
                C50310 +
            (C25523 - C25524 + C25525 - C25526) * C24230 +
            (C25527 - C25528 + C25529 - C25530) * C50311 +
            (C25531 - C25532 + C25533 - C25534) * C24231 +
            (C25535 - C25536 + C25537 - C25538) * C24226) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C50308 +
           ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                C24229 +
            (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                C50310 +
            (C25103 - C25104 + C25105 - C25106) * C24230 +
            (C25107 - C25108 + C25109 - C25110) * C50311 +
            (C25111 - C25112 + C25113 - C25114) * C24231 +
            (C25115 - C25116 + C25117 - C25118) * C24226) *
               C50132 * C50309 +
           ((C49173 * C399 - C50246 * C413 + C49166 * C400 - C49975 * C414) *
                C24229 +
            (C49173 * C417 - C50246 * C429 + C49166 * C418 - C49975 * C430) *
                C50310 +
            (C49173 * C1084 - C50246 * C1088 + C49166 * C1085 -
             C49975 * C1089) *
                C24230 +
            (C49173 * C1092 - C50246 * C1096 + C49166 * C1093 -
             C49975 * C1097) *
                C50311 +
            (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
             C49975 * C2538) *
                C24231 +
            (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
             C49975 * C2542) *
                C24226) *
               C50132 * C1960) *
              C50019 * C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C1544 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C24229 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50310 +
            (C24403 - C24404 + C24405 - C24406) * C24230 +
            (C24407 - C24408 + C24409 - C24410) * C50311 + C24437 * C24231 +
            C24438 * C24226) *
               C50132 * C1544 +
           ((C50246 * C405 - C49173 * C395 + C49975 * C406 - C49166 * C396) *
                C24229 +
            (C50246 * C425 - C49173 * C409 + C49975 * C426 - C49166 * C410) *
                C50310 +
            (C25103 - C25104 + C25105 - C25106) * C24230 +
            (C25107 - C25108 + C25109 - C25110) * C50311 +
            (C25111 - C25112 + C25113 - C25114) * C24231 +
            (C25115 - C25116 + C25117 - C25118) * C24226) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C24229 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50310 +
            (C24731 - C24732 + C24733 - C24734) * C24230 +
            (C24735 - C24736 + C24737 - C24738) * C50311 +
            (C24739 - C24740 + C24741 - C24742) * C24231 +
            (C24743 - C24744 + C24745 - C24746) * C24226) *
               C50132 * C1544 +
           ((C49173 * C396 - C50246 * C406 + C49166 * C397 - C49975 * C407) *
                C24229 +
            (C49173 * C410 - C50246 * C426 + C49166 * C411 - C49975 * C427) *
                C50310 +
            (C49173 * C777 - C50246 * C782 + C49166 * C778 - C49975 * C783) *
                C24230 +
            (C49173 * C786 - C50246 * C792 + C49166 * C787 - C49975 * C793) *
                C50311 +
            (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
             C49975 * C1437) *
                C24231 +
            (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
             C49975 * C1445) *
                C24226) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C24229 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50310 +
            (C24379 - C24380 + C24381 - C24382) * C24230 +
            (C24383 - C24384 + C24385 - C24386) * C50311 + C24435 * C24231 +
            C24436 * C24226) *
               C50132 * C1544 +
           ((C49173 * C394 - C50246 * C404 + C49166 * C395 - C49975 * C405) *
                C24229 +
            (C49173 * C408 - C50246 * C424 + C49166 * C409 - C49975 * C425) *
                C50310 +
            (C25087 - C25088 + C25089 - C25090) * C24230 +
            (C25091 - C25092 + C25093 - C25094) * C50311 + C26037 * C24231 +
            C26038 * C24226) *
               C50132 * C50099) *
              C248 +
          (((C24380 - C24379 + C24382 - C24381) * C24229 +
            (C24384 - C24383 + C24386 - C24385) * C50310 +
            (C24388 - C24387 + C24390 - C24389) * C24230 +
            (C24392 - C24391 + C24394 - C24393) * C50311 + C25375 * C24231 +
            C25376 * C24226) *
               C50132 * C1544 +
           ((C25088 - C25087 + C25090 - C25089) * C24229 +
            (C25092 - C25091 + C25094 - C25093) * C50310 +
            (C25096 - C25095 + C25098 - C25097) * C24230 +
            (C25100 - C25099 + C25102 - C25101) * C50311 +
            (C26029 - C26030 + C26031 - C26032) * C24231 +
            (C26033 - C26034 + C26035 - C26036) * C24226) *
               C50132 * C50099) *
              C249 +
          ((C24435 * C24229 + C24436 * C50310 +
            (C24396 - C24395 + C24398 - C24397) * C24230 +
            (C24400 - C24399 + C24402 - C24401) * C50311 +
            (C25367 - C25368 + C25369 - C25370) * C24231 +
            (C25371 - C25372 + C25373 - C25374) * C24226) *
               C50132 * C1544 +
           (C26037 * C24229 + C26038 * C50310 +
            (C26030 - C26029 + C26032 - C26031) * C24230 +
            (C26034 - C26033 + C26036 - C26035) * C50311 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C24231 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C24226) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50035 * C50261 +
                   (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C50304 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50035 * C50261 +
                   (((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                     (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                     (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                        C50275 +
                    (C22323 * C24229 + C22324 * C50310 +
                     (C20133 - C20134) * C24230 + (C20135 - C20136) * C50311 +
                     (C20137 - C20138) * C24231 + (C20139 - C20140) * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C50305 +
                  ((((C49970 * C131 - C19537 * C124) * C24229 +
                     (C49970 * C145 - C19537 * C135) * C50310 +
                     (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                     (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                        C50275 +
                    ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                     (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                     (C31059 - C31060) * C24231 + (C31061 - C31062) * C24226) *
                        C50196) *
                       C50035 * C50261 +
                   (((C19878 - C19877) * C24229 + (C19880 - C19879) * C50310 +
                     (C19882 - C19881) * C24230 + (C19884 - C19883) * C50311 +
                     (C19886 - C19885) * C24231 + (C19888 - C19887) * C24226) *
                        C50275 +
                    ((C21960 - C21959) * C24229 + (C21962 - C21961) * C50310 +
                     (C31060 - C31059) * C24230 + (C31062 - C31061) * C50311 +
                     (C19537 * C3047 - C49970 * C3052) * C24231 +
                     (C19537 * C3053 - C49970 * C3056) * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C536)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C50262 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50099) *
                       C50261 +
                   ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                      (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                      C20309 * C24231 + C20310 * C24226) *
                         C50275 +
                     (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                      C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                         C50196) *
                        C50262 +
                    ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                      C23229 * C50311 + (C20126 - C20125) * C24231 +
                      (C20128 - C20127) * C24226) *
                         C50275 +
                     (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                      C23231 * C50311 + (C20427 - C20428) * C24231 +
                      (C20429 - C20430) * C24226) *
                         C50196) *
                        C50099) *
                       C50071) *
                      C251 +
                  (((((C19537 * C123 - C49970 * C130) * C24229 +
                      (C19537 * C134 - C49970 * C144) * C50310 +
                      (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                      C19677 * C24231 + C19678 * C24226) *
                         C50275 +
                     ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                      C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                      C30766 * C24226) *
                         C50196) *
                        C50262 +
                    (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                      C22323 * C24230 + C22324 * C50311 + C31403 * C24231 +
                      C31404 * C24226) *
                         C50275 +
                     ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                      C22325 * C24230 + C22326 * C50311 +
                      (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                         C50196) *
                        C50099) *
                       C50261 +
                   ((((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                      (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                      (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                         C50275 +
                     (C22323 * C24229 + C22324 * C50310 + C31403 * C24230 +
                      C31404 * C50311 + (C20137 - C20138) * C24231 +
                      (C20139 - C20140) * C24226) *
                         C50196) *
                        C50262 +
                    ((C22321 * C24229 + C22322 * C50310 + C30765 * C24230 +
                      C30766 * C50311 + (C20138 - C20137) * C24231 +
                      (C20140 - C20139) * C24226) *
                         C50275 +
                     (C21785 * C24229 + C21786 * C50310 +
                      (C21610 - C21609) * C24230 + (C21612 - C21611) * C50311 +
                      (C19537 * C3502 - C49970 * C3504) * C24231 +
                      (C19537 * C3506 - C49970 * C3508) * C24226) *
                         C50196) *
                        C50099) *
                       C50071) *
                      C50006)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50035 * C248 +
                   (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50035 * C249 +
                   ((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                     C19676 * C50311 + (C19654 - C19653) * C24231 +
                     (C19656 - C19655) * C24226) *
                        C50275 +
                    (C23228 * C24229 + C23229 * C50310 +
                     (C20126 - C20125) * C24230 + (C20128 - C20127) * C50311 +
                     (C20765 - C20766) * C24231 + (C20767 - C20768) * C24226) *
                        C50196) *
                       C50035 * C250) *
                      C251 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50035 * C248 +
                   (((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                     (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                     (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                        C50275 +
                    (C22323 * C24229 + C22324 * C50310 +
                     (C20133 - C20134) * C24230 + (C20135 - C20136) * C50311 +
                     (C20137 - C20138) * C24231 + (C20139 - C20140) * C24226) *
                        C50196) *
                       C50035 * C249 +
                   ((C19677 * C24229 + C19678 * C50310 + C19679 * C24230 +
                     C19680 * C50311 + (C19670 - C19669) * C24231 +
                     (C19672 - C19671) * C24226) *
                        C50275 +
                    (C30765 * C24229 + C30766 * C50310 +
                     (C20138 - C20137) * C24230 + (C20140 - C20139) * C50311 +
                     (C19537 * C4012 - C49970 * C4014) * C24231 +
                     (C19537 * C4016 - C49970 * C4018) * C24226) *
                        C50196) *
                       C50035 * C250) *
                      C50006)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C49970 * C129 - C19537 * C122) * C24229 +
                    (C49970 * C143 - C19537 * C133) * C50310 +
                    (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                    C19673 * C24231 + C19674 * C24226) *
                       C50275 +
                   ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                    C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                    C23229 * C24226) *
                       C50196) *
                      C50035 * C50019 * C113 +
                  (((C19537 * C123 - C49970 * C130) * C24229 +
                    (C19537 * C134 - C49970 * C144) * C50310 +
                    (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                    C19677 * C24231 + C19678 * C24226) *
                       C50275 +
                   ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                    C22321 * C24230 + C22322 * C50311 +
                    (C20134 - C20133) * C24231 + (C20136 - C20135) * C24226) *
                       C50196) *
                      C50035 * C50019 * C114 +
                  (((C49970 * C131 - C19537 * C124) * C24229 +
                    (C49970 * C145 - C19537 * C135) * C50310 +
                    (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                    (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                       C50275 +
                   ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                    (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                    (C49970 * C1436 - C19537 * C1432) * C24231 +
                    (C49970 * C1444 - C19537 * C1440) * C24226) *
                       C50196) *
                      C50035 * C50019 * C115 +
                  (((C19537 * C125 - C49970 * C132) * C24229 +
                    (C19537 * C136 - C49970 * C146) * C50310 +
                    (C19537 * C256 - C49970 * C266) * C24230 +
                    (C19537 * C270 - C49970 * C286) * C50311 +
                    (C19537 * C260 - C49970 * C274) * C24231 +
                    (C19537 * C278 - C49970 * C290) * C24226) *
                       C50275 +
                   ((C19537 * C397 - C49970 * C407) * C24229 +
                    (C19537 * C411 - C49970 * C427) * C50310 +
                    (C19537 * C778 - C49970 * C783) * C24230 +
                    (C19537 * C787 - C49970 * C793) * C50311 +
                    (C19537 * C1433 - C49970 * C1437) * C24231 +
                    (C19537 * C1441 - C49970 * C1445) * C24226) *
                       C50196) *
                      C50035 * C50019 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C391 +
                   (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                     C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                     C20762 * C24226) *
                        C50275 +
                    ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                     C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                     C22732 * C24226) *
                        C50196) *
                       C392 +
                   ((C21795 * C24229 + C21796 * C50310 + C21767 * C24230 +
                     C21768 * C50311 + C23230 * C24231 + C23231 * C24226) *
                        C50275 +
                    ((C21770 - C21769) * C24229 + (C21772 - C21771) * C50310 +
                     C22723 * C24230 + C22724 * C50311 +
                     (C22733 - C22734) * C24231 + (C22735 - C22736) * C24226) *
                        C50196) *
                       C393) *
                      C50019 * C251 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C391 +
                   (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                     C22323 * C24230 + C22324 * C50311 +
                     (C20133 - C20134) * C24231 + (C20135 - C20136) * C24226) *
                        C50275 +
                    ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                     C22325 * C24230 + C22326 * C50311 +
                     (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                        C50196) *
                       C392 +
                   ((C21799 * C24229 + C21800 * C50310 + C21785 * C24230 +
                     C21786 * C50311 + (C21610 - C21609) * C24231 +
                     (C21612 - C21611) * C24226) *
                        C50275 +
                    ((C21788 - C21787) * C24229 + (C21790 - C21789) * C50310 +
                     (C21792 - C21791) * C24230 + (C21794 - C21793) * C50311 +
                     (C19537 * C4426 - C49970 * C4432) * C24231 +
                     (C19537 * C4434 - C49970 * C4438) * C24226) *
                        C50196) *
                       C393) *
                      C50019 * C50006)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50262 +
                   (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                     C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                     C20762 * C24226) *
                        C50275 +
                    ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                     C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                     C22732 * C24226) *
                        C50196) *
                       C50099) *
                      C50019 * C50304 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50262 +
                   (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                     C22323 * C24230 + C22324 * C50311 +
                     (C20133 - C20134) * C24231 + (C20135 - C20136) * C24226) *
                        C50275 +
                    ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                     C22325 * C24230 + C22326 * C50311 +
                     (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                        C50196) *
                       C50099) *
                      C50019 * C50305 +
                  ((((C49970 * C131 - C19537 * C124) * C24229 +
                     (C49970 * C145 - C19537 * C135) * C50310 +
                     (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                     (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                        C50275 +
                    ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                     (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                     (C31059 - C31060) * C24231 + (C31061 - C31062) * C24226) *
                        C50196) *
                       C50262 +
                   (((C22114 - C22113) * C24229 + (C22116 - C22115) * C50310 +
                     (C21960 - C21959) * C24230 + (C21962 - C21961) * C50311 +
                     (C31060 - C31059) * C24231 + (C31062 - C31061) * C24226) *
                        C50275 +
                    ((C22118 - C22117) * C24229 + (C22120 - C22119) * C50310 +
                     (C21964 - C21963) * C24230 + (C21966 - C21965) * C50311 +
                     (C19537 * C2533 - C49970 * C2538) * C24231 +
                     (C19537 * C2539 - C49970 * C2542) * C24226) *
                        C50196) *
                       C50099) *
                      C50019 * C536)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C49970 * C129 - C19537 * C122) * C24229 +
                    (C49970 * C143 - C19537 * C133) * C50310 +
                    (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                    C19673 * C24231 + C19674 * C24226) *
                       C50275 +
                   ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                    C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                    C23229 * C24226) *
                       C50196) *
                      C50035 * C50019 * C113 +
                  (((C19537 * C123 - C49970 * C130) * C24229 +
                    (C19537 * C134 - C49970 * C144) * C50310 +
                    (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                    C19677 * C24231 + C19678 * C24226) *
                       C50275 +
                   ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                    C22321 * C24230 + C22322 * C50311 +
                    (C20134 - C20133) * C24231 + (C20136 - C20135) * C24226) *
                       C50196) *
                      C50035 * C50019 * C114 +
                  (((C49970 * C131 - C19537 * C124) * C24229 +
                    (C49970 * C145 - C19537 * C135) * C50310 +
                    (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                    (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                       C50275 +
                   ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                    (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                    (C49970 * C1436 - C19537 * C1432) * C24231 +
                    (C49970 * C1444 - C19537 * C1440) * C24226) *
                       C50196) *
                      C50035 * C50019 * C115 +
                  (((C19537 * C125 - C49970 * C132) * C24229 +
                    (C19537 * C136 - C49970 * C146) * C50310 +
                    (C19537 * C256 - C49970 * C266) * C24230 +
                    (C19537 * C270 - C49970 * C286) * C50311 +
                    (C19537 * C260 - C49970 * C274) * C24231 +
                    (C19537 * C278 - C49970 * C290) * C24226) *
                       C50275 +
                   ((C19537 * C397 - C49970 * C407) * C24229 +
                    (C19537 * C411 - C49970 * C427) * C50310 +
                    (C19537 * C778 - C49970 * C783) * C24230 +
                    (C19537 * C787 - C49970 * C793) * C50311 +
                    (C19537 * C1433 - C49970 * C1437) * C24231 +
                    (C19537 * C1441 - C49970 * C1445) * C24226) *
                       C50196) *
                      C50035 * C50019 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50035 * C248 +
                   (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50035 * C249 +
                   ((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                     C19676 * C50311 + (C19654 - C19653) * C24231 +
                     (C19656 - C19655) * C24226) *
                        C50275 +
                    (C23228 * C24229 + C23229 * C50310 +
                     (C20126 - C20125) * C24230 + (C20128 - C20127) * C50311 +
                     (C20765 - C20766) * C24231 + (C20767 - C20768) * C24226) *
                        C50196) *
                       C50035 * C250) *
                      C251 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50035 * C248 +
                   (((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                     (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                     (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                        C50275 +
                    (C22323 * C24229 + C22324 * C50310 +
                     (C20133 - C20134) * C24230 + (C20135 - C20136) * C50311 +
                     (C20137 - C20138) * C24231 + (C20139 - C20140) * C24226) *
                        C50196) *
                       C50035 * C249 +
                   ((C19677 * C24229 + C19678 * C50310 + C19679 * C24230 +
                     C19680 * C50311 + (C19670 - C19669) * C24231 +
                     (C19672 - C19671) * C24226) *
                        C50275 +
                    (C30765 * C24229 + C30766 * C50310 +
                     (C20138 - C20137) * C24230 + (C20140 - C20139) * C50311 +
                     (C19537 * C4012 - C49970 * C4014) * C24231 +
                     (C19537 * C4016 - C49970 * C4018) * C24226) *
                        C50196) *
                       C50035 * C250) *
                      C50006)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50035 * C50306 +
                   (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50035 * C50307 +
                   ((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                     C19676 * C50311 + (C19654 - C19653) * C24231 +
                     (C19656 - C19655) * C24226) *
                        C50275 +
                    (C23228 * C24229 + C23229 * C50310 +
                     (C20126 - C20125) * C24230 + (C20128 - C20127) * C50311 +
                     (C20765 - C20766) * C24231 + (C20767 - C20768) * C24226) *
                        C50196) *
                       C50035 * C1199) *
                      C50253 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50035 * C50306 +
                   (((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                     (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                     (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                        C50275 +
                    (C22323 * C24229 + C22324 * C50310 + C31403 * C24230 +
                     C31404 * C50311 + (C20137 - C20138) * C24231 +
                     (C20139 - C20140) * C24226) *
                        C50196) *
                       C50035 * C50307 +
                   ((C19677 * C24229 + C19678 * C50310 + C19679 * C24230 +
                     C19680 * C50311 + (C19670 - C19669) * C24231 +
                     (C19672 - C19671) * C24226) *
                        C50275 +
                    (C30765 * C24229 + C30766 * C50310 +
                     (C20138 - C20137) * C24230 + (C20140 - C20139) * C50311 +
                     (C19537 * C4012 - C49970 * C4014) * C24231 +
                     (C19537 * C4016 - C49970 * C4018) * C24226) *
                        C50196) *
                       C50035 * C1199) *
                      C50006)) /
                (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50262 +
                   (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                     C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                     C20762 * C24226) *
                        C50275 +
                    ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                     C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                     C22732 * C24226) *
                        C50196) *
                       C50099) *
                      C50306 +
                  ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50262 +
                   ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                     C23229 * C50311 + C32281 * C24231 + C32282 * C24226) *
                        C50275 +
                    (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                     C23231 * C50311 + (C20427 - C20428) * C24231 +
                     (C20429 - C20430) * C24226) *
                        C50196) *
                       C50099) *
                      C50307 +
                  (((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                     C19676 * C50311 + (C19654 - C19653) * C24231 +
                     (C19656 - C19655) * C24226) *
                        C50275 +
                    (C23228 * C24229 + C23229 * C50310 + C32281 * C24230 +
                     C32282 * C50311 + (C20765 - C20766) * C24231 +
                     (C20767 - C20768) * C24226) *
                        C50196) *
                       C50262 +
                   ((C20761 * C24229 + C20762 * C50310 + C20763 * C24230 +
                     C20764 * C50311 + (C20766 - C20765) * C24231 +
                     (C20768 - C20767) * C24226) *
                        C50275 +
                    (C22731 * C24229 + C22732 * C50310 +
                     (C20428 - C20427) * C24230 + (C20430 - C20429) * C50311 +
                     (C19537 * C20414 - C49970 * C20415) * C24231 +
                     (C19537 * C20416 - C49970 * C20417) * C24226) *
                        C50196) *
                       C50099) *
                      C1199) *
                 C50000) /
                (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C49970 * C129 - C19537 * C122) * C24229 +
                    (C49970 * C143 - C19537 * C133) * C50310 +
                    (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                    C19673 * C24231 + C19674 * C24226) *
                       C50275 +
                   ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                    C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                    C23229 * C24226) *
                       C50196) *
                      C50035 * C964 +
                  (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                    (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                    C20309 * C24231 + C20310 * C24226) *
                       C50275 +
                   (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                    C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                       C50196) *
                      C50035 * C965 +
                  ((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                    C19676 * C50311 + (C19654 - C19653) * C24231 +
                    (C19656 - C19655) * C24226) *
                       C50275 +
                   (C23228 * C24229 + C23229 * C50310 +
                    (C20126 - C20125) * C24230 + (C20128 - C20127) * C50311 +
                    (C20765 - C20766) * C24231 + (C20767 - C20768) * C24226) *
                       C50196) *
                      C50035 * C966 +
                  ((C20309 * C24229 + C20310 * C50310 + C20311 * C24230 +
                    C20312 * C50311 + (C20314 - C20313) * C24231 +
                    (C20316 - C20315) * C24226) *
                       C50275 +
                   (C20763 * C24229 + C20764 * C50310 +
                    (C20766 - C20765) * C24230 + (C20768 - C20767) * C50311 +
                    (C19537 * C20756 - C49970 * C20757) * C24231 +
                    (C19537 * C20758 - C49970 * C20759) * C24226) *
                       C50196) *
                      C50035 * C967) *
                 C50000) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50035 * C893 +
                   (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C895 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50035 * C893 +
                   (((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                     (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                     (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                        C50275 +
                    (C22323 * C24229 + C22324 * C50310 + C31403 * C24230 +
                     C31404 * C50311 + (C20137 - C20138) * C24231 +
                     (C20139 - C20140) * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C896 +
                  ((((C49970 * C131 - C19537 * C124) * C24229 +
                     (C49970 * C145 - C19537 * C135) * C50310 +
                     (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                     (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                        C50275 +
                    ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                     (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                     (C31059 - C31060) * C24231 + (C31061 - C31062) * C24226) *
                        C50196) *
                       C50035 * C893 +
                   (((C19878 - C19877) * C24229 + (C19880 - C19879) * C50310 +
                     (C19882 - C19881) * C24230 + (C19884 - C19883) * C50311 +
                     (C19886 - C19885) * C24231 + (C19888 - C19887) * C24226) *
                        C50275 +
                    ((C21960 - C21959) * C24229 + (C21962 - C21961) * C50310 +
                     (C31060 - C31059) * C24230 + (C31062 - C31061) * C50311 +
                     (C19537 * C3047 - C49970 * C3052) * C24231 +
                     (C19537 * C3053 - C49970 * C3056) * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C391 +
                   (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                     C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                     C20762 * C24226) *
                        C50275 +
                    ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                     C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                     C22732 * C24226) *
                        C50196) *
                       C392 +
                   ((C21795 * C24229 + C21796 * C50310 + C21767 * C24230 +
                     C21768 * C50311 + C23230 * C24231 + C23231 * C24226) *
                        C50275 +
                    ((C21770 - C21769) * C24229 + (C21772 - C21771) * C50310 +
                     C22723 * C24230 + C22724 * C50311 +
                     (C22733 - C22734) * C24231 + (C22735 - C22736) * C24226) *
                        C50196) *
                       C393) *
                      C893 +
                  ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C391 +
                   ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                     C23229 * C50311 + (C20126 - C20125) * C24231 +
                     (C20128 - C20127) * C24226) *
                        C50275 +
                    (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                     C23231 * C50311 + (C20427 - C20428) * C24231 +
                     (C20429 - C20430) * C24226) *
                        C50196) *
                       C392 +
                   ((C22319 * C24229 + C22320 * C50310 + C22731 * C24230 +
                     C22732 * C50311 + (C20428 - C20427) * C24231 +
                     (C20430 - C20429) * C24226) *
                        C50275 +
                    (C22721 * C24229 + C22722 * C50310 +
                     (C22734 - C22733) * C24230 + (C22736 - C22735) * C50311 +
                     (C19537 * C21030 - C49970 * C21031) * C24231 +
                     (C19537 * C21032 - C49970 * C21033) * C24226) *
                        C50196) *
                       C393) *
                      C50071) *
                 C50000) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C50262 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50099) *
                       C893 +
                   ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                      (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                      C20309 * C24231 + C20310 * C24226) *
                         C50275 +
                     (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                      C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                         C50196) *
                        C50262 +
                    ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                      C23229 * C50311 + (C20126 - C20125) * C24231 +
                      (C20128 - C20127) * C24226) *
                         C50275 +
                     (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                      C23231 * C50311 + (C20427 - C20428) * C24231 +
                      (C20429 - C20430) * C24226) *
                         C50196) *
                        C50099) *
                       C50071) *
                      C50253 +
                  (((((C19537 * C123 - C49970 * C130) * C24229 +
                      (C19537 * C134 - C49970 * C144) * C50310 +
                      (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                      C19677 * C24231 + C19678 * C24226) *
                         C50275 +
                     ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                      C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                      C30766 * C24226) *
                         C50196) *
                        C50262 +
                    (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                      C22323 * C24230 + C22324 * C50311 + C31403 * C24231 +
                      C31404 * C24226) *
                         C50275 +
                     ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                      C22325 * C24230 + C22326 * C50311 +
                      (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                         C50196) *
                        C50099) *
                       C893 +
                   ((((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                      (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                      (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                         C50275 +
                     (C22323 * C24229 + C22324 * C50310 + C31403 * C24230 +
                      C31404 * C50311 + (C20137 - C20138) * C24231 +
                      (C20139 - C20140) * C24226) *
                         C50196) *
                        C50262 +
                    ((C22321 * C24229 + C22322 * C50310 + C30765 * C24230 +
                      C30766 * C50311 + (C20138 - C20137) * C24231 +
                      (C20140 - C20139) * C24226) *
                         C50275 +
                     (C21785 * C24229 + C21786 * C50310 +
                      (C21610 - C21609) * C24230 + (C21612 - C21611) * C50311 +
                      (C19537 * C3502 - C49970 * C3504) * C24231 +
                      (C19537 * C3506 - C49970 * C3508) * C24226) *
                         C50196) *
                        C50099) *
                       C50071) *
                      C50006)) /
                (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C50035 * C893 +
                   (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                     (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                     C20309 * C24231 + C20310 * C24226) *
                        C50275 +
                    (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                     C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C895 +
                  ((((C19537 * C123 - C49970 * C130) * C24229 +
                     (C19537 * C134 - C49970 * C144) * C50310 +
                     (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                     C19677 * C24231 + C19678 * C24226) *
                        C50275 +
                    ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                     C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                     C30766 * C24226) *
                        C50196) *
                       C50035 * C893 +
                   (((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
                     (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
                     (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                        C50275 +
                    (C22323 * C24229 + C22324 * C50310 + C31403 * C24230 +
                     C31404 * C50311 + (C20137 - C20138) * C24231 +
                     (C20139 - C20140) * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C896 +
                  ((((C49970 * C131 - C19537 * C124) * C24229 +
                     (C49970 * C145 - C19537 * C135) * C50310 +
                     (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                     (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                        C50275 +
                    ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                     (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                     (C31059 - C31060) * C24231 + (C31061 - C31062) * C24226) *
                        C50196) *
                       C50035 * C893 +
                   (((C19878 - C19877) * C24229 + (C19880 - C19879) * C50310 +
                     (C19882 - C19881) * C24230 + (C19884 - C19883) * C50311 +
                     (C19886 - C19885) * C24231 + (C19888 - C19887) * C24226) *
                        C50275 +
                    ((C21960 - C21959) * C24229 + (C21962 - C21961) * C50310 +
                     (C31060 - C31059) * C24230 + (C31062 - C31061) * C50311 +
                     (C19537 * C3047 - C49970 * C3052) * C24231 +
                     (C19537 * C3053 - C49970 * C3056) * C24226) *
                        C50196) *
                       C50035 * C50071) *
                      C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C49970 * C129 - C19537 * C122) * C24229 +
                    (C49970 * C143 - C19537 * C133) * C50310 +
                    (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                    C19673 * C24231 + C19674 * C24226) *
                       C50275 +
                   ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                    C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                    C23229 * C24226) *
                       C50196) *
                      C50035 * C964 +
                  (((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                    (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                    C20309 * C24231 + C20310 * C24226) *
                       C50275 +
                   (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                    C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                       C50196) *
                      C50035 * C965 +
                  ((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                    C19676 * C50311 + (C19654 - C19653) * C24231 +
                    (C19656 - C19655) * C24226) *
                       C50275 +
                   (C23228 * C24229 + C23229 * C50310 +
                    (C20126 - C20125) * C24230 + (C20128 - C20127) * C50311 +
                    (C20765 - C20766) * C24231 + (C20767 - C20768) * C24226) *
                       C50196) *
                      C50035 * C966 +
                  ((C20309 * C24229 + C20310 * C50310 + C20311 * C24230 +
                    C20312 * C50311 + (C20314 - C20313) * C24231 +
                    (C20316 - C20315) * C24226) *
                       C50275 +
                   (C20763 * C24229 + C20764 * C50310 +
                    (C20766 - C20765) * C24230 + (C20768 - C20767) * C50311 +
                    (C19537 * C20756 - C49970 * C20757) * C24231 +
                    (C19537 * C20758 - C49970 * C20759) * C24226) *
                       C50196) *
                      C50035 * C967) *
                 C50000) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C24229 +
              (C49970 * C143 - C19537 * C133) * C50310 +
              (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
              C19673 * C24231 + C19674 * C24226) *
                 C50275 +
             ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
              C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
              C23229 * C24226) *
                 C50196) *
                C1544 +
            (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
              C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
              C20762 * C24226) *
                 C50275 +
             ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
              C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
              C22732 * C24226) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
              (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
              C20309 * C24231 + C20310 * C24226) *
                 C50275 +
             (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
              C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                 C50196) *
                C1544 +
            ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
              C23229 * C50311 + C32281 * C24231 + C32282 * C24226) *
                 C50275 +
             (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
              C23231 * C50311 + (C20427 - C20428) * C24231 +
              (C20429 - C20430) * C24226) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C24229 +
              (C19537 * C134 - C49970 * C144) * C50310 +
              (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
              C19677 * C24231 + C19678 * C24226) *
                 C50275 +
             ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
              C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
              C30766 * C24226) *
                 C50196) *
                C1544 +
            (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
              C22323 * C24230 + C22324 * C50311 + C31403 * C24231 +
              C31404 * C24226) *
                 C50275 +
             ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
              C22325 * C24230 + C22326 * C50311 + (C21609 - C21610) * C24231 +
              (C21611 - C21612) * C24226) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C24229 + (C19660 - C19659) * C50310 +
              (C19662 - C19661) * C24230 + (C19664 - C19663) * C50311 +
              (C19666 - C19665) * C24231 + (C19668 - C19667) * C24226) *
                 C50275 +
             (C22323 * C24229 + C22324 * C50310 + C31403 * C24230 +
              C31404 * C50311 + (C20137 - C20138) * C24231 +
              (C20139 - C20140) * C24226) *
                 C50196) *
                C1544 +
            ((C22321 * C24229 + C22322 * C50310 + C30765 * C24230 +
              C30766 * C50311 + (C20138 - C20137) * C24231 +
              (C20140 - C20139) * C24226) *
                 C50275 +
             (C21785 * C24229 + C21786 * C50310 + (C21610 - C21609) * C24230 +
              (C21612 - C21611) * C50311 +
              (C19537 * C3502 - C49970 * C3504) * C24231 +
              (C19537 * C3506 - C49970 * C3508) * C24226) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C50308 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50309 +
                    ((C21795 * C24229 + C21796 * C50310 + C21767 * C24230 +
                      C21768 * C50311 + C23230 * C24231 + C23231 * C24226) *
                         C50275 +
                     ((C21770 - C21769) * C24229 + (C21772 - C21771) * C50310 +
                      C22723 * C24230 + C22724 * C50311 +
                      (C22733 - C22734) * C24231 + (C22735 - C22736) * C24226) *
                         C50196) *
                        C1960) *
                       C50261 +
                   ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                      (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                      C20309 * C24231 + C20310 * C24226) *
                         C50275 +
                     (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                      C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                         C50196) *
                        C50308 +
                    ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                      C23229 * C50311 + C32281 * C24231 + C32282 * C24226) *
                         C50275 +
                     (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                      C23231 * C50311 + (C20427 - C20428) * C24231 +
                      (C20429 - C20430) * C24226) *
                         C50196) *
                        C50309 +
                    ((C22319 * C24229 + C22320 * C50310 + C22731 * C24230 +
                      C22732 * C50311 + (C20428 - C20427) * C24231 +
                      (C20430 - C20429) * C24226) *
                         C50275 +
                     (C22721 * C24229 + C22722 * C50310 +
                      (C22734 - C22733) * C24230 + (C22736 - C22735) * C50311 +
                      (C19537 * C21030 - C49970 * C21031) * C24231 +
                      (C19537 * C21032 - C49970 * C21033) * C24226) *
                         C50196) *
                        C1960) *
                       C50071) *
                  C50000) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C1544 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50099) *
                       C248 +
                   ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                      (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                      C20309 * C24231 + C20310 * C24226) *
                         C50275 +
                     (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                      C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                         C50196) *
                        C1544 +
                    ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                      C23229 * C50311 + C32281 * C24231 + C32282 * C24226) *
                         C50275 +
                     (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                      C23231 * C50311 + (C20427 - C20428) * C24231 +
                      (C20429 - C20430) * C24226) *
                         C50196) *
                        C50099) *
                       C249 +
                   (((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                      C19676 * C50311 + (C19654 - C19653) * C24231 +
                      (C19656 - C19655) * C24226) *
                         C50275 +
                     (C23228 * C24229 + C23229 * C50310 + C32281 * C24230 +
                      C32282 * C50311 + (C20765 - C20766) * C24231 +
                      (C20767 - C20768) * C24226) *
                         C50196) *
                        C1544 +
                    ((C20761 * C24229 + C20762 * C50310 + C20763 * C24230 +
                      C20764 * C50311 + (C20766 - C20765) * C24231 +
                      (C20768 - C20767) * C24226) *
                         C50275 +
                     (C22731 * C24229 + C22732 * C50310 +
                      (C20428 - C20427) * C24230 + (C20430 - C20429) * C50311 +
                      (C19537 * C20414 - C49970 * C20415) * C24231 +
                      (C19537 * C20416 - C49970 * C20417) * C24226) *
                         C50196) *
                        C50099) *
                       C250) *
                  C50000) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C1544 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50099) *
                       C50019 * C895 +
                   ((((C19537 * C123 - C49970 * C130) * C24229 +
                      (C19537 * C134 - C49970 * C144) * C50310 +
                      (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                      C19677 * C24231 + C19678 * C24226) *
                         C50275 +
                     ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                      C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                      C30766 * C24226) *
                         C50196) *
                        C1544 +
                    (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                      C22323 * C24230 + C22324 * C50311 + C31403 * C24231 +
                      C31404 * C24226) *
                         C50275 +
                     ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                      C22325 * C24230 + C22326 * C50311 +
                      (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                         C50196) *
                        C50099) *
                       C50019 * C896 +
                   ((((C49970 * C131 - C19537 * C124) * C24229 +
                      (C49970 * C145 - C19537 * C135) * C50310 +
                      (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                      (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                         C50275 +
                     ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                      (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                      (C31059 - C31060) * C24231 + (C31061 - C31062) * C24226) *
                         C50196) *
                        C1544 +
                    (((C22114 - C22113) * C24229 + (C22116 - C22115) * C50310 +
                      (C21960 - C21959) * C24230 + (C21962 - C21961) * C50311 +
                      (C31060 - C31059) * C24231 + (C31062 - C31061) * C24226) *
                         C50275 +
                     ((C22118 - C22117) * C24229 + (C22120 - C22119) * C50310 +
                      (C21964 - C21963) * C24230 + (C21966 - C21965) * C50311 +
                      (C19537 * C2533 - C49970 * C2538) * C24231 +
                      (C19537 * C2539 - C49970 * C2542) * C24226) *
                         C50196) *
                        C50099) *
                       C50019 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C49970 * C129 - C19537 * C122) * C24229 +
                     (C49970 * C143 - C19537 * C133) * C50310 +
                     (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                     C19673 * C24231 + C19674 * C24226) *
                        C50275 +
                    ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                     C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                     C23229 * C24226) *
                        C50196) *
                       C1710 +
                   (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                     C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                     C20762 * C24226) *
                        C50275 +
                    ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                     C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                     C22732 * C24226) *
                        C50196) *
                       C1711 +
                   ((C21795 * C24229 + C21796 * C50310 + C21767 * C24230 +
                     C21768 * C50311 + C23230 * C24231 + C23231 * C24226) *
                        C50275 +
                    ((C21770 - C21769) * C24229 + (C21772 - C21771) * C50310 +
                     C22723 * C24230 + C22724 * C50311 +
                     (C22733 - C22734) * C24231 + (C22735 - C22736) * C24226) *
                        C50196) *
                       C1712 +
                   ((C23626 * C24229 + C23627 * C50310 + C22721 * C24230 +
                     C22722 * C50311 + (C22734 - C22733) * C24231 +
                     (C22736 - C22735) * C24226) *
                        C50275 +
                    ((C23631 - C23630) * C24229 + (C23633 - C23632) * C50310 +
                     (C22726 - C22725) * C24230 + (C22728 - C22727) * C50311 +
                     (C19537 * C22716 - C49970 * C22717) * C24231 +
                     (C19537 * C22718 - C49970 * C22719) * C24226) *
                        C50196) *
                       C1713) *
                  C50019 * C50000) /
                     (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C50308 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50309 +
                    ((C21795 * C24229 + C21796 * C50310 + C21767 * C24230 +
                      C21768 * C50311 + C23230 * C24231 + C23231 * C24226) *
                         C50275 +
                     ((C21770 - C21769) * C24229 + (C21772 - C21771) * C50310 +
                      C22723 * C24230 + C22724 * C50311 +
                      (C22733 - C22734) * C24231 + (C22735 - C22736) * C24226) *
                         C50196) *
                        C1960) *
                       C50019 * C50253 +
                   ((((C19537 * C123 - C49970 * C130) * C24229 +
                      (C19537 * C134 - C49970 * C144) * C50310 +
                      (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                      C19677 * C24231 + C19678 * C24226) *
                         C50275 +
                     ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                      C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                      C30766 * C24226) *
                         C50196) *
                        C50308 +
                    (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                      C22323 * C24230 + C22324 * C50311 + C31403 * C24231 +
                      C31404 * C24226) *
                         C50275 +
                     ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                      C22325 * C24230 + C22326 * C50311 +
                      (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                         C50196) *
                        C50309 +
                    ((C21799 * C24229 + C21800 * C50310 + C21785 * C24230 +
                      C21786 * C50311 + (C21610 - C21609) * C24231 +
                      (C21612 - C21611) * C24226) *
                         C50275 +
                     ((C21788 - C21787) * C24229 + (C21790 - C21789) * C50310 +
                      (C21792 - C21791) * C24230 + (C21794 - C21793) * C50311 +
                      (C19537 * C4426 - C49970 * C4432) * C24231 +
                      (C19537 * C4434 - C49970 * C4438) * C24226) *
                         C50196) *
                        C1960) *
                       C50019 * C50006)) /
                 (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C1544 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50099) *
                       C50019 * C895 +
                   ((((C19537 * C123 - C49970 * C130) * C24229 +
                      (C19537 * C134 - C49970 * C144) * C50310 +
                      (C19657 - C19658) * C24230 + (C19659 - C19660) * C50311 +
                      C19677 * C24231 + C19678 * C24226) *
                         C50275 +
                     ((C21777 - C21778) * C24229 + (C21779 - C21780) * C50310 +
                      C22321 * C24230 + C22322 * C50311 + C30765 * C24231 +
                      C30766 * C24226) *
                         C50196) *
                        C1544 +
                    (((C21778 - C21777) * C24229 + (C21780 - C21779) * C50310 +
                      C22323 * C24230 + C22324 * C50311 + C31403 * C24231 +
                      C31404 * C24226) *
                         C50275 +
                     ((C21782 - C21781) * C24229 + (C21784 - C21783) * C50310 +
                      C22325 * C24230 + C22326 * C50311 +
                      (C21609 - C21610) * C24231 + (C21611 - C21612) * C24226) *
                         C50196) *
                        C50099) *
                       C50019 * C896 +
                   ((((C49970 * C131 - C19537 * C124) * C24229 +
                      (C49970 * C145 - C19537 * C135) * C50310 +
                      (C19877 - C19878) * C24230 + (C19879 - C19880) * C50311 +
                      (C19881 - C19882) * C24231 + (C19883 - C19884) * C24226) *
                         C50275 +
                     ((C22113 - C22114) * C24229 + (C22115 - C22116) * C50310 +
                      (C21959 - C21960) * C24230 + (C21961 - C21962) * C50311 +
                      (C31059 - C31060) * C24231 + (C31061 - C31062) * C24226) *
                         C50196) *
                        C1544 +
                    (((C22114 - C22113) * C24229 + (C22116 - C22115) * C50310 +
                      (C21960 - C21959) * C24230 + (C21962 - C21961) * C50311 +
                      (C31060 - C31059) * C24231 + (C31062 - C31061) * C24226) *
                         C50275 +
                     ((C22118 - C22117) * C24229 + (C22120 - C22119) * C50310 +
                      (C21964 - C21963) * C24230 + (C21966 - C21965) * C50311 +
                      (C19537 * C2533 - C49970 * C2538) * C24231 +
                      (C19537 * C2539 - C49970 * C2542) * C24226) *
                         C50196) *
                        C50099) *
                       C50019 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C24229 +
                      (C49970 * C143 - C19537 * C133) * C50310 +
                      (C19641 - C19642) * C24230 + (C19643 - C19644) * C50311 +
                      C19673 * C24231 + C19674 * C24226) *
                         C50275 +
                     ((C21759 - C21760) * C24229 + (C21761 - C21762) * C50310 +
                      C22315 * C24230 + C22316 * C50311 + C23228 * C24231 +
                      C23229 * C24226) *
                         C50196) *
                        C1544 +
                    (((C21760 - C21759) * C24229 + (C21762 - C21761) * C50310 +
                      C22317 * C24230 + C22318 * C50311 + C20761 * C24231 +
                      C20762 * C24226) *
                         C50275 +
                     ((C21764 - C21763) * C24229 + (C21766 - C21765) * C50310 +
                      C22319 * C24230 + C22320 * C50311 + C22731 * C24231 +
                      C22732 * C24226) *
                         C50196) *
                        C50099) *
                       C248 +
                   ((((C19642 - C19641) * C24229 + (C19644 - C19643) * C50310 +
                      (C19646 - C19645) * C24230 + (C19648 - C19647) * C50311 +
                      C20309 * C24231 + C20310 * C24226) *
                         C50275 +
                     (C22317 * C24229 + C22318 * C50310 + C20761 * C24230 +
                      C20762 * C50311 + C20763 * C24231 + C20764 * C24226) *
                         C50196) *
                        C1544 +
                    ((C22315 * C24229 + C22316 * C50310 + C23228 * C24230 +
                      C23229 * C50311 + C32281 * C24231 + C32282 * C24226) *
                         C50275 +
                     (C21767 * C24229 + C21768 * C50310 + C23230 * C24230 +
                      C23231 * C50311 + (C20427 - C20428) * C24231 +
                      (C20429 - C20430) * C24226) *
                         C50196) *
                        C50099) *
                       C249 +
                   (((C19673 * C24229 + C19674 * C50310 + C19675 * C24230 +
                      C19676 * C50311 + (C19654 - C19653) * C24231 +
                      (C19656 - C19655) * C24226) *
                         C50275 +
                     (C23228 * C24229 + C23229 * C50310 + C32281 * C24230 +
                      C32282 * C50311 + (C20765 - C20766) * C24231 +
                      (C20767 - C20768) * C24226) *
                         C50196) *
                        C1544 +
                    ((C20761 * C24229 + C20762 * C50310 + C20763 * C24230 +
                      C20764 * C50311 + (C20766 - C20765) * C24231 +
                      (C20768 - C20767) * C24226) *
                         C50275 +
                     (C22731 * C24229 + C22732 * C50310 +
                      (C20428 - C20427) * C24230 + (C20430 - C20429) * C50311 +
                      (C19537 * C20414 - C49970 * C20415) * C24231 +
                      (C19537 * C20416 - C49970 * C20417) * C24226) *
                         C50196) *
                        C50099) *
                       C250) *
                  C50000) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C50261 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C50261 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50035 * C50261 +
           ((C19878 - C19877) * C19538 + (C19880 - C19879) * C19533 +
            (C19882 - C19881) * C19539 + (C19884 - C19883) * C19534 +
            (C19886 - C19885) * C19540 + (C19888 - C19887) * C19535 +
            (C19537 * C2315 - C49970 * C2320) * C19541 +
            (C19537 * C2321 - C49970 * C2324) * C19536) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C50261 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C50261 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50035 * C50261 +
           ((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C16814 +
            (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C16809 +
            (C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
             C16813 * C262 - C16808 * C281) *
                C16815 +
            (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
             C16813 * C282 - C16808 * C292) *
                C50170) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
                C5024 +
            C21811 * C5025) *
               C50035 * C50261 +
           (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            ((C20117 - C20118) * C16814 + (C20119 - C20120) * C16809 +
             C20761 * C16815 + C20762 * C50170) *
                C5024 +
            ((C20420 - C20419) * C16814 + (C20422 - C20421) * C16809 +
             (C20424 - C20423) * C16815 + (C20426 - C20425) * C50170) *
                C5025) *
               C50035 * C50071) *
              C50304 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
                C5024 +
            C21812 * C5025) *
               C50035 * C50261 +
           (((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
             (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                C5023 +
            ((C20129 - C20130) * C16814 + (C20131 - C20132) * C16809 +
             (C20133 - C20134) * C16815 + (C20135 - C20136) * C50170) *
                C5024 +
            ((C21606 - C21605) * C16814 + (C21608 - C21607) * C16809 +
             (C21609 - C21610) * C16815 + (C21611 - C21612) * C50170) *
                C5025) *
               C50035 * C50071) *
              C50305 +
          ((((C49970 * C131 - C19537 * C124) * C16814 +
             (C49970 * C145 - C19537 * C135) * C16809 +
             (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
                C5023 +
            ((C49970 * C406 - C19537 * C396) * C16814 +
             (C49970 * C426 - C19537 * C410) * C16809 +
             (C21959 - C21960) * C16815 + (C21961 - C21962) * C50170) *
                C5024 +
            ((C49970 * C414 - C19537 * C400) * C16814 +
             (C49970 * C430 - C19537 * C418) * C16809 +
             (C21963 - C21964) * C16815 + (C21965 - C21966) * C50170) *
                C5025) *
               C50035 * C50261 +
           (((C19878 - C19877) * C16814 + (C19880 - C19879) * C16809 +
             (C19882 - C19881) * C16815 + (C19884 - C19883) * C50170) *
                C5023 +
            ((C21960 - C21959) * C16814 + (C21962 - C21961) * C16809 +
             (C19537 * C1432 - C49970 * C1436) * C16815 +
             (C19537 * C1440 - C49970 * C1444) * C50170) *
                C5024 +
            ((C21964 - C21963) * C16814 + (C21966 - C21965) * C16809 +
             (C19537 * C2533 - C49970 * C2538) * C16815 +
             (C19537 * C2539 - C49970 * C2542) * C50170) *
                C5025) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C19538 +
             (C49970 * C143 - C19537 * C133) * C19533 +
             (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
             C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
             C19676 * C19536) *
                C50132 * C50262 +
            ((C19537 * C394 - C49970 * C404) * C19538 +
             (C19537 * C408 - C49970 * C424) * C19533 +
             (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
             (C20121 - C20122) * C19540 + (C20123 - C20124) * C19535 +
             (C20125 - C20126) * C19541 + (C20127 - C20128) * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
             (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
             (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
             (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
                C50132 * C50262 +
            ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
             (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
             (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
             (C49970 * C4013 - C19537 * C4011) * C19541 +
             (C49970 * C4017 - C19537 * C4015) * C19536) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C19538 +
             (C19537 * C134 - C49970 * C144) * C19533 +
             (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
             C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
             C19680 * C19536) *
                C50132 * C50262 +
            ((C49970 * C405 - C19537 * C395) * C19538 +
             (C49970 * C425 - C19537 * C409) * C19533 +
             (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
             (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
             (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
             (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
             (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
             (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
                C50132 * C50262 +
            ((C20130 - C20129) * C19538 + (C20132 - C20131) * C19533 +
             (C20134 - C20133) * C19539 + (C20136 - C20135) * C19534 +
             (C20138 - C20137) * C19540 + (C20140 - C20139) * C19535 +
             (C19537 * C4012 - C49970 * C4014) * C19541 +
             (C19537 * C4016 - C49970 * C4018) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C16814 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C16809 +
             (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
             (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                C50132 * C50262 +
            ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C16814 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C16809 +
             (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
             (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
             (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                C50132 * C50262 +
            ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
             (C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
              C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                 C16815 +
             (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
              C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C16814 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C16809 +
             (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
             (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
                C50132 * C50262 +
            ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C16814 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C16809 +
             (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
             (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
             (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
                C50132 * C50262 +
            ((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C16814 +
             (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C16809 +
             (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C16815 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C16814 +
              (C49970 * C143 - C19537 * C133) * C16809 +
              (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                 C5023 +
             ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
              C22315 * C16815 + C22316 * C50170) *
                 C5024 +
             C21811 * C5025) *
                C50262 +
            (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
              C22317 * C16815 + C22318 * C50170) *
                 C5023 +
             ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
              C22319 * C16815 + C22320 * C50170) *
                 C5024 +
             ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
              (C21773 - C21774) * C16815 + (C21775 - C21776) * C50170) *
                 C5025) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
              (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                 C5023 +
             (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
              C20762 * C50170) *
                 C5024 +
             (C22319 * C16814 + C22320 * C16809 + (C20424 - C20423) * C16815 +
              (C20426 - C20425) * C50170) *
                 C5025) *
                C50262 +
            ((C22315 * C16814 + C22316 * C16809 + (C20122 - C20121) * C16815 +
              (C20124 - C20123) * C50170) *
                 C5023 +
             (C21767 * C16814 + C21768 * C16809 + (C20423 - C20424) * C16815 +
              (C20425 - C20426) * C50170) *
                 C5024 +
             ((C21774 - C21773) * C16814 + (C21776 - C21775) * C16809 +
              (C49970 * C4431 - C19537 * C4425) * C16815 +
              (C49970 * C4437 - C19537 * C4433) * C50170) *
                 C5025) *
                C50099) *
               C50071) *
              C251 +
          (((((C19537 * C123 - C49970 * C130) * C16814 +
              (C19537 * C134 - C49970 * C144) * C16809 +
              (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                 C5023 +
             ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
              C22321 * C16815 + C22322 * C50170) *
                 C5024 +
             C21812 * C5025) *
                C50262 +
            (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
              C22323 * C16815 + C22324 * C50170) *
                 C5023 +
             ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
              C22325 * C16815 + C22326 * C50170) *
                 C5024 +
             ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
              (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                 C5025) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
              (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                 C5023 +
             (C22323 * C16814 + C22324 * C16809 + (C20133 - C20134) * C16815 +
              (C20135 - C20136) * C50170) *
                 C5024 +
             (C22325 * C16814 + C22326 * C16809 + (C21609 - C21610) * C16815 +
              (C21611 - C21612) * C50170) *
                 C5025) *
                C50262 +
            ((C22321 * C16814 + C22322 * C16809 + (C20134 - C20133) * C16815 +
              (C20136 - C20135) * C50170) *
                 C5023 +
             (C21785 * C16814 + C21786 * C16809 + (C21610 - C21609) * C16815 +
              (C21612 - C21611) * C50170) *
                 C5024 +
             ((C21792 - C21791) * C16814 + (C21794 - C21793) * C16809 +
              (C19537 * C4426 - C49970 * C4432) * C16815 +
              (C19537 * C4434 - C49970 * C4438) * C50170) *
                 C5025) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                C16808 * C131 - C16813 * C124) *
                   C16814 +
               (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                C16808 * C145 - C16813 * C135) *
                   C16809 +
               (C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
                C16808 * C265 - C16813 * C255) *
                   C16815 +
               (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
                C16808 * C285 - C16813 * C269) *
                   C50170) *
                  C50132 * C50035 * C50019 * C113 +
              ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                C16813 * C125 - C16808 * C132) *
                   C16814 +
               (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                C16813 * C136 - C16808 * C146) *
                   C16809 +
               (C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
                C16813 * C256 - C16808 * C266) *
                   C16815 +
               (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
                C16813 * C270 - C16808 * C286) *
                   C50170) *
                  C50132 * C50035 * C50019 * C114 +
              ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                C16808 * C137 - C16813 * C126) *
                   C16814 +
               (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                C16808 * C147 - C16813 * C138) *
                   C16809 +
               (C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
                C16808 * C279 - C16813 * C261) *
                   C16815 +
               (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
                C16808 * C291 - C16813 * C280) *
                   C50170) *
                  C50132 * C50035 * C50019 * C115 +
              ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
                C16813 * C127 - C16808 * C139) *
                   C16814 +
               (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
                C16813 * C140 - C16808 * C148) *
                   C16809 +
               (C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
                C16813 * C537 - C16808 * C538) *
                   C16815 +
               (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
                C16813 * C539 - C16808 * C540) *
                   C50170) *
                  C50132 * C50035 * C50019 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C16814 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C16809 +
                (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
                (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) *
                    C50170) *
                   C50132 * C50035 * C248 +
               ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
                (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
                (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
                (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) *
                    C50170) *
                   C50132 * C50035 * C249 +
               ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
                (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
                (C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
                 C16808 * C975 - C16813 * C971) *
                    C16815 +
                (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
                 C16808 * C983 - C16813 * C979) *
                    C50170) *
                   C50132 * C50035 * C250) *
                  C251 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C16814 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C16809 +
                (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
                (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) *
                    C50170) *
                   C50132 * C50035 * C248 +
               ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
                (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
                (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
                (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) *
                    C50170) *
                   C50132 * C50035 * C249 +
               ((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C16814 +
                (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C16809 +
                (C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
                 C16813 * C972 - C16808 * C976) *
                    C16815 +
                (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
                 C16813 * C980 - C16808 * C984) *
                    C50170) *
                   C50132 * C50035 * C250) *
                  C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C391 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
             C16813 * C777 - C16808 * C782) *
                C16815 +
            (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
             C16813 * C786 - C16808 * C792) *
                C50170) *
               C50132 * C392 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C16806 * C1087 - C16811 * C1083 + C16807 * C1088 - C16812 * C1084 +
             C16808 * C1089 - C16813 * C1085) *
                C16815 +
            (C16806 * C1095 - C16811 * C1091 + C16807 * C1096 - C16812 * C1092 +
             C16808 * C1097 - C16813 * C1093) *
                C50170) *
               C50132 * C393) *
              C50019 * C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C391 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
             C16808 * C783 - C16813 * C778) *
                C16815 +
            (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
             C16808 * C793 - C16813 * C787) *
                C50170) *
               C50132 * C392 +
           ((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
             C16813 * C401 - C16808 * C415) *
                C16814 +
            (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
             C16813 * C419 - C16808 * C431) *
                C16809 +
            (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 - C16807 * C1089 +
             C16813 * C1086 - C16808 * C1090) *
                C16815 +
            (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 - C16807 * C1097 +
             C16813 * C1094 - C16808 * C1098) *
                C50170) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C49970 * C263 - C19537 * C253) * C19539 +
           (C49970 * C283 - C19537 * C267) * C19534 +
           (C49970 * C271 - C19537 * C257) * C19540 +
           (C49970 * C287 - C19537 * C275) * C19535 +
           (C49970 * C973 - C19537 * C969) * C19541 +
           (C49970 * C981 - C19537 * C977) * C19536) *
              C50132 * C50035 * C50019 * C113 +
          ((C19537 * C123 - C49970 * C130) * C19538 +
           (C19537 * C134 - C49970 * C144) * C19533 +
           (C19537 * C254 - C49970 * C264) * C19539 +
           (C19537 * C268 - C49970 * C284) * C19534 +
           (C19537 * C258 - C49970 * C272) * C19540 +
           (C19537 * C276 - C49970 * C288) * C19535 +
           (C19537 * C970 - C49970 * C974) * C19541 +
           (C19537 * C978 - C49970 * C982) * C19536) *
              C50132 * C50035 * C50019 * C114 +
          ((C49970 * C131 - C19537 * C124) * C19538 +
           (C49970 * C145 - C19537 * C135) * C19533 +
           (C49970 * C265 - C19537 * C255) * C19539 +
           (C49970 * C285 - C19537 * C269) * C19534 +
           (C49970 * C273 - C19537 * C259) * C19540 +
           (C49970 * C289 - C19537 * C277) * C19535 +
           (C49970 * C975 - C19537 * C971) * C19541 +
           (C49970 * C983 - C19537 * C979) * C19536) *
              C50132 * C50035 * C50019 * C115 +
          ((C19537 * C125 - C49970 * C132) * C19538 +
           (C19537 * C136 - C49970 * C146) * C19533 +
           (C19537 * C256 - C49970 * C266) * C19539 +
           (C19537 * C270 - C49970 * C286) * C19534 +
           (C19537 * C260 - C49970 * C274) * C19540 +
           (C19537 * C278 - C49970 * C290) * C19535 +
           (C19537 * C972 - C49970 * C976) * C19541 +
           (C19537 * C980 - C49970 * C984) * C19536) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C248 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C249 +
           (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 +
            (C49970 * C3335 - C19537 * C3333) * C19541 +
            (C49970 * C3339 - C19537 * C3337) * C19536) *
               C50132 * C50035 * C250) *
              C251 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C248 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C249 +
           (C19677 * C19538 + C19678 * C19533 + C19679 * C19539 +
            C19680 * C19534 + (C19670 - C19669) * C19540 +
            (C19672 - C19671) * C19535 +
            (C19537 * C3334 - C49970 * C3336) * C19541 +
            (C19537 * C3338 - C49970 * C3340) * C19536) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C391 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C19537 * C775 - C49970 * C780) * C19539 +
            (C19537 * C784 - C49970 * C790) * C19534 +
            (C19537 * C1430 - C49970 * C1434) * C19540 +
            (C19537 * C1438 - C49970 * C1442) * C19535 +
            (C19537 * C3045 - C49970 * C3048) * C19541 +
            (C19537 * C3050 - C49970 * C3054) * C19536) *
               C50132 * C392 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C49970 * C1087 - C19537 * C1083) * C19539 +
            (C49970 * C1095 - C19537 * C1091) * C19534 +
            (C49970 * C2534 - C19537 * C2531) * C19540 +
            (C49970 * C2540 - C19537 * C2536) * C19535 +
            (C49970 * C3503 - C19537 * C3501) * C19541 +
            (C49970 * C3507 - C19537 * C3505) * C19536) *
               C50132 * C393) *
              C50019 * C251 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C391 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C49970 * C781 - C19537 * C776) * C19539 +
            (C49970 * C791 - C19537 * C785) * C19534 +
            (C49970 * C1435 - C19537 * C1431) * C19540 +
            (C49970 * C1443 - C19537 * C1439) * C19535 +
            (C49970 * C3049 - C19537 * C3046) * C19541 +
            (C49970 * C3055 - C19537 * C3051) * C19536) *
               C50132 * C392 +
           ((C19537 * C399 - C49970 * C413) * C19538 +
            (C19537 * C417 - C49970 * C429) * C19533 +
            (C19537 * C1084 - C49970 * C1088) * C19539 +
            (C19537 * C1092 - C49970 * C1096) * C19534 +
            (C19537 * C2532 - C49970 * C2535) * C19540 +
            (C19537 * C2537 - C49970 * C2541) * C19535 +
            (C19537 * C3502 - C49970 * C3504) * C19541 +
            (C19537 * C3506 - C49970 * C3508) * C19536) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C16814 +
            (C49970 * C143 - C19537 * C133) * C16809 +
            (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
               C5023 +
           ((C49970 * C404 - C19537 * C394) * C16814 +
            (C49970 * C424 - C19537 * C408) * C16809 +
            (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
               C5024 +
           ((C49970 * C412 - C19537 * C398) * C16814 +
            (C49970 * C428 - C19537 * C416) * C16809 +
            (C20419 - C20420) * C16815 + (C20421 - C20422) * C50170) *
               C5025) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C16814 +
            (C19537 * C134 - C49970 * C144) * C16809 +
            (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
               C5023 +
           ((C19537 * C395 - C49970 * C405) * C16814 +
            (C19537 * C409 - C49970 * C425) * C16809 +
            (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
               C5024 +
           ((C19537 * C399 - C49970 * C413) * C16814 +
            (C19537 * C417 - C49970 * C429) * C16809 +
            (C19537 * C1084 - C49970 * C1088) * C16815 +
            (C19537 * C1092 - C49970 * C1096) * C50170) *
               C5025) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C16814 +
            (C49970 * C145 - C19537 * C135) * C16809 +
            (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
               C5023 +
           ((C49970 * C406 - C19537 * C396) * C16814 +
            (C49970 * C426 - C19537 * C410) * C16809 +
            (C49970 * C782 - C19537 * C777) * C16815 +
            (C49970 * C792 - C19537 * C786) * C50170) *
               C5024 +
           ((C49970 * C414 - C19537 * C400) * C16814 +
            (C49970 * C430 - C19537 * C418) * C16809 +
            (C49970 * C1089 - C19537 * C1085) * C16815 +
            (C49970 * C1097 - C19537 * C1093) * C50170) *
               C5025) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C16814 +
            (C19537 * C136 - C49970 * C146) * C16809 +
            (C19537 * C256 - C49970 * C266) * C16815 +
            (C19537 * C270 - C49970 * C286) * C50170) *
               C5023 +
           ((C19537 * C397 - C49970 * C407) * C16814 +
            (C19537 * C411 - C49970 * C427) * C16809 +
            (C19537 * C778 - C49970 * C783) * C16815 +
            (C19537 * C787 - C49970 * C793) * C50170) *
               C5024 +
           ((C19537 * C401 - C49970 * C415) * C16814 +
            (C19537 * C419 - C49970 * C431) * C16809 +
            (C19537 * C1086 - C49970 * C1090) * C16815 +
            (C19537 * C1094 - C49970 * C1098) * C50170) *
               C5025) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C49970 * C404 - C19537 * C394) * C16814 +
             (C49970 * C424 - C19537 * C408) * C16809 +
             (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
                C5024 +
            ((C49970 * C412 - C19537 * C398) * C16814 +
             (C49970 * C428 - C19537 * C416) * C16809 +
             (C20419 - C20420) * C16815 + (C20421 - C20422) * C50170) *
                C5025) *
               C50035 * C248 +
           (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            ((C20117 - C20118) * C16814 + (C20119 - C20120) * C16809 +
             C20761 * C16815 + C20762 * C50170) *
                C5024 +
            ((C20420 - C20419) * C16814 + (C20422 - C20421) * C16809 +
             (C20424 - C20423) * C16815 + (C20426 - C20425) * C50170) *
                C5025) *
               C50035 * C249 +
           ((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
             C19676 * C50170) *
                C5023 +
            ((C20122 - C20121) * C16814 + (C20124 - C20123) * C16809 +
             (C20126 - C20125) * C16815 + (C20128 - C20127) * C50170) *
                C5024 +
            ((C20423 - C20424) * C16814 + (C20425 - C20426) * C16809 +
             (C20427 - C20428) * C16815 + (C20429 - C20430) * C50170) *
                C5025) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C19537 * C395 - C49970 * C405) * C16814 +
             (C19537 * C409 - C49970 * C425) * C16809 +
             (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
                C5024 +
            ((C19537 * C399 - C49970 * C413) * C16814 +
             (C19537 * C417 - C49970 * C429) * C16809 +
             (C21605 - C21606) * C16815 + (C21607 - C21608) * C50170) *
                C5025) *
               C50035 * C248 +
           (((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
             (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                C5023 +
            ((C20129 - C20130) * C16814 + (C20131 - C20132) * C16809 +
             (C20133 - C20134) * C16815 + (C20135 - C20136) * C50170) *
                C5024 +
            ((C21606 - C21605) * C16814 + (C21608 - C21607) * C16809 +
             (C21609 - C21610) * C16815 + (C21611 - C21612) * C50170) *
                C5025) *
               C50035 * C249 +
           ((C19677 * C16814 + C19678 * C16809 + C19679 * C16815 +
             C19680 * C50170) *
                C5023 +
            ((C20134 - C20133) * C16814 + (C20136 - C20135) * C16809 +
             (C20138 - C20137) * C16815 + (C20140 - C20139) * C50170) *
                C5024 +
            ((C21610 - C21609) * C16814 + (C21612 - C21611) * C16809 +
             (C19537 * C3502 - C49970 * C3504) * C16815 +
             (C19537 * C3506 - C49970 * C3508) * C50170) *
                C5025) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
                C5024 +
            C21811 * C5025) *
               C391 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             (C20117 - C20118) * C16815 + (C20119 - C20120) * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             (C20420 - C20419) * C16815 + (C20422 - C20421) * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             (C21773 - C21774) * C16815 + (C21775 - C21776) * C50170) *
                C5025) *
               C392 +
           (C21811 * C5023 +
            ((C21770 - C21769) * C16814 + (C21772 - C21771) * C16809 +
             (C21774 - C21773) * C16815 + (C21776 - C21775) * C50170) *
                C5024 +
            ((C49970 * C5321 - C19537 * C5318) * C16814 +
             (C49970 * C5327 - C19537 * C5323) * C16809 +
             (C49970 * C6302 - C19537 * C6300) * C16815 +
             (C49970 * C6306 - C19537 * C6304) * C50170) *
                C5025) *
               C393) *
              C50019 * C251 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
                C5024 +
            C21812 * C5025) *
               C391 +
           (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
             (C20129 - C20130) * C16815 + (C20131 - C20132) * C50170) *
                C5023 +
            ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
             (C21606 - C21605) * C16815 + (C21608 - C21607) * C50170) *
                C5024 +
            ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
             (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                C5025) *
               C392 +
           (C21812 * C5023 +
            ((C21788 - C21787) * C16814 + (C21790 - C21789) * C16809 +
             (C21792 - C21791) * C16815 + (C21794 - C21793) * C50170) *
                C5024 +
            ((C19537 * C5319 - C49970 * C5322) * C16814 +
             (C19537 * C5324 - C49970 * C5328) * C16809 +
             (C19537 * C6301 - C49970 * C6303) * C16815 +
             (C19537 * C6305 - C49970 * C6307) * C50170) *
                C5025) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50262 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C19537 * C775 - C49970 * C780) * C19539 +
            (C19537 * C784 - C49970 * C790) * C19534 +
            (C19537 * C1430 - C49970 * C1434) * C19540 +
            (C19537 * C1438 - C49970 * C1442) * C19535 +
            (C19537 * C3045 - C49970 * C3048) * C19541 +
            (C19537 * C3050 - C49970 * C3054) * C19536) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50262 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C49970 * C781 - C19537 * C776) * C19539 +
            (C49970 * C791 - C19537 * C785) * C19534 +
            (C49970 * C1435 - C19537 * C1431) * C19540 +
            (C49970 * C1443 - C19537 * C1439) * C19535 +
            (C49970 * C3049 - C19537 * C3046) * C19541 +
            (C49970 * C3055 - C19537 * C3051) * C19536) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50262 +
           ((C19537 * C396 - C49970 * C406) * C19538 +
            (C19537 * C410 - C49970 * C426) * C19533 +
            (C19537 * C777 - C49970 * C782) * C19539 +
            (C19537 * C786 - C49970 * C792) * C19534 +
            (C19537 * C1432 - C49970 * C1436) * C19540 +
            (C19537 * C1440 - C49970 * C1444) * C19535 +
            (C19537 * C3047 - C49970 * C3052) * C19541 +
            (C19537 * C3053 - C49970 * C3056) * C19536) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50262 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
             C16813 * C777 - C16808 * C782) *
                C16815 +
            (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
             C16813 * C786 - C16808 * C792) *
                C50170) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50262 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
             C16808 * C783 - C16813 * C778) *
                C16815 +
            (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
             C16808 * C793 - C16813 * C787) *
                C50170) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50262 +
           ((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
             C16813 * C402 - C16808 * C420) *
                C16814 +
            (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
             C16813 * C421 - C16808 * C432) *
                C16809 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C16815 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50170) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
                C5024 +
            C21811 * C5025) *
               C50262 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             (C20117 - C20118) * C16815 + (C20119 - C20120) * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             (C20420 - C20419) * C16815 + (C20422 - C20421) * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             (C21773 - C21774) * C16815 + (C21775 - C21776) * C50170) *
                C5025) *
               C50099) *
              C50019 * C50304 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
                C5024 +
            C21812 * C5025) *
               C50262 +
           (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
             (C20129 - C20130) * C16815 + (C20131 - C20132) * C50170) *
                C5023 +
            ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
             (C21606 - C21605) * C16815 + (C21608 - C21607) * C50170) *
                C5024 +
            ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
             (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                C5025) *
               C50099) *
              C50019 * C50305 +
          ((((C49970 * C131 - C19537 * C124) * C16814 +
             (C49970 * C145 - C19537 * C135) * C16809 +
             (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
                C5023 +
            ((C22113 - C22114) * C16814 + (C22115 - C22116) * C16809 +
             (C21959 - C21960) * C16815 + (C21961 - C21962) * C50170) *
                C5024 +
            ((C22117 - C22118) * C16814 + (C22119 - C22120) * C16809 +
             (C21963 - C21964) * C16815 + (C21965 - C21966) * C50170) *
                C5025) *
               C50262 +
           (((C22114 - C22113) * C16814 + (C22116 - C22115) * C16809 +
             (C21960 - C21959) * C16815 + (C21962 - C21961) * C50170) *
                C5023 +
            ((C22118 - C22117) * C16814 + (C22120 - C22119) * C16809 +
             (C21964 - C21963) * C16815 + (C21966 - C21965) * C50170) *
                C5024 +
            ((C19537 * C1716 - C49970 * C1720) * C16814 +
             (C19537 * C1724 - C49970 * C1728) * C16809 +
             (C19537 * C5898 - C49970 * C5899) * C16815 +
             (C19537 * C5900 - C49970 * C5901) * C50170) *
                C5025) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C248 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C249 +
           ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
             C16808 * C975 - C16813 * C971) *
                C16815 +
            (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
             C16808 * C983 - C16813 * C979) *
                C50170) *
               C50132 * C50035 * C250) *
              C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C248 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C249 +
           ((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C16814 +
            (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C16809 +
            (C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
             C16813 * C972 - C16808 * C976) *
                C16815 +
            (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
             C16813 * C980 - C16808 * C984) *
                C50170) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
            C16808 * C265 - C16813 * C255) *
               C16815 +
           (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
            C16808 * C285 - C16813 * C269) *
               C50170) *
              C50132 * C50035 * C50019 * C113 +
          ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
            C16813 * C125 - C16808 * C132) *
               C16814 +
           (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
            C16813 * C136 - C16808 * C146) *
               C16809 +
           (C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
            C16813 * C256 - C16808 * C266) *
               C16815 +
           (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
            C16813 * C270 - C16808 * C286) *
               C50170) *
              C50132 * C50035 * C50019 * C114 +
          ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
            C16808 * C137 - C16813 * C126) *
               C16814 +
           (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
            C16808 * C147 - C16813 * C138) *
               C16809 +
           (C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
            C16808 * C279 - C16813 * C261) *
               C16815 +
           (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
            C16808 * C291 - C16813 * C280) *
               C50170) *
              C50132 * C50035 * C50019 * C115 +
          ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
            C16813 * C127 - C16808 * C139) *
               C16814 +
           (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
            C16813 * C140 - C16808 * C148) *
               C16809 +
           (C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
            C16813 * C537 - C16808 * C538) *
               C16815 +
           (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
            C16813 * C539 - C16808 * C540) *
               C50170) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C49970 * C263 - C19537 * C253) * C19539 +
           (C49970 * C283 - C19537 * C267) * C19534 +
           (C49970 * C271 - C19537 * C257) * C19540 +
           (C49970 * C287 - C19537 * C275) * C19535 +
           (C49970 * C973 - C19537 * C969) * C19541 +
           (C49970 * C981 - C19537 * C977) * C19536) *
              C50132 * C50035 * C50019 * C113 +
          ((C19537 * C123 - C49970 * C130) * C19538 +
           (C19537 * C134 - C49970 * C144) * C19533 +
           (C19537 * C254 - C49970 * C264) * C19539 +
           (C19537 * C268 - C49970 * C284) * C19534 +
           (C19537 * C258 - C49970 * C272) * C19540 +
           (C19537 * C276 - C49970 * C288) * C19535 +
           (C19537 * C970 - C49970 * C974) * C19541 +
           (C19537 * C978 - C49970 * C982) * C19536) *
              C50132 * C50035 * C50019 * C114 +
          ((C49970 * C131 - C19537 * C124) * C19538 +
           (C49970 * C145 - C19537 * C135) * C19533 +
           (C49970 * C265 - C19537 * C255) * C19539 +
           (C49970 * C285 - C19537 * C269) * C19534 +
           (C49970 * C273 - C19537 * C259) * C19540 +
           (C49970 * C289 - C19537 * C277) * C19535 +
           (C49970 * C975 - C19537 * C971) * C19541 +
           (C49970 * C983 - C19537 * C979) * C19536) *
              C50132 * C50035 * C50019 * C115 +
          ((C19537 * C125 - C49970 * C132) * C19538 +
           (C19537 * C136 - C49970 * C146) * C19533 +
           (C19537 * C256 - C49970 * C266) * C19539 +
           (C19537 * C270 - C49970 * C286) * C19534 +
           (C19537 * C260 - C49970 * C274) * C19540 +
           (C19537 * C278 - C49970 * C290) * C19535 +
           (C19537 * C972 - C49970 * C976) * C19541 +
           (C19537 * C980 - C49970 * C984) * C19536) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C248 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C249 +
           (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 +
            (C49970 * C3335 - C19537 * C3333) * C19541 +
            (C49970 * C3339 - C19537 * C3337) * C19536) *
               C50132 * C50035 * C250) *
              C251 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C248 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C249 +
           (C19677 * C19538 + C19678 * C19533 + C19679 * C19539 +
            C19680 * C19534 + (C19670 - C19669) * C19540 +
            (C19672 - C19671) * C19535 +
            (C19537 * C3334 - C49970 * C3336) * C19541 +
            (C19537 * C3338 - C49970 * C3340) * C19536) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C16814 +
            (C49970 * C143 - C19537 * C133) * C16809 +
            (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
               C5023 +
           ((C49970 * C404 - C19537 * C394) * C16814 +
            (C49970 * C424 - C19537 * C408) * C16809 +
            (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
               C5024 +
           ((C49970 * C412 - C19537 * C398) * C16814 +
            (C49970 * C428 - C19537 * C416) * C16809 +
            (C20419 - C20420) * C16815 + (C20421 - C20422) * C50170) *
               C5025) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C16814 +
            (C19537 * C134 - C49970 * C144) * C16809 +
            (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
               C5023 +
           ((C19537 * C395 - C49970 * C405) * C16814 +
            (C19537 * C409 - C49970 * C425) * C16809 +
            (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
               C5024 +
           ((C19537 * C399 - C49970 * C413) * C16814 +
            (C19537 * C417 - C49970 * C429) * C16809 +
            (C19537 * C1084 - C49970 * C1088) * C16815 +
            (C19537 * C1092 - C49970 * C1096) * C50170) *
               C5025) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C16814 +
            (C49970 * C145 - C19537 * C135) * C16809 +
            (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
               C5023 +
           ((C49970 * C406 - C19537 * C396) * C16814 +
            (C49970 * C426 - C19537 * C410) * C16809 +
            (C49970 * C782 - C19537 * C777) * C16815 +
            (C49970 * C792 - C19537 * C786) * C50170) *
               C5024 +
           ((C49970 * C414 - C19537 * C400) * C16814 +
            (C49970 * C430 - C19537 * C418) * C16809 +
            (C49970 * C1089 - C19537 * C1085) * C16815 +
            (C49970 * C1097 - C19537 * C1093) * C50170) *
               C5025) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C16814 +
            (C19537 * C136 - C49970 * C146) * C16809 +
            (C19537 * C256 - C49970 * C266) * C16815 +
            (C19537 * C270 - C49970 * C286) * C50170) *
               C5023 +
           ((C19537 * C397 - C49970 * C407) * C16814 +
            (C19537 * C411 - C49970 * C427) * C16809 +
            (C19537 * C778 - C49970 * C783) * C16815 +
            (C19537 * C787 - C49970 * C793) * C50170) *
               C5024 +
           ((C19537 * C401 - C49970 * C415) * C16814 +
            (C19537 * C419 - C49970 * C431) * C16809 +
            (C19537 * C1086 - C49970 * C1090) * C16815 +
            (C19537 * C1094 - C49970 * C1098) * C50170) *
               C5025) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C49970 * C404 - C19537 * C394) * C16814 +
             (C49970 * C424 - C19537 * C408) * C16809 +
             (C20118 - C20117) * C16815 + (C20120 - C20119) * C50170) *
                C5024 +
            ((C49970 * C412 - C19537 * C398) * C16814 +
             (C49970 * C428 - C19537 * C416) * C16809 +
             (C20419 - C20420) * C16815 + (C20421 - C20422) * C50170) *
                C5025) *
               C50035 * C248 +
           (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            ((C20117 - C20118) * C16814 + (C20119 - C20120) * C16809 +
             C20761 * C16815 + C20762 * C50170) *
                C5024 +
            ((C20420 - C20419) * C16814 + (C20422 - C20421) * C16809 +
             (C20424 - C20423) * C16815 + (C20426 - C20425) * C50170) *
                C5025) *
               C50035 * C249 +
           ((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
             C19676 * C50170) *
                C5023 +
            ((C20122 - C20121) * C16814 + (C20124 - C20123) * C16809 +
             (C20126 - C20125) * C16815 + (C20128 - C20127) * C50170) *
                C5024 +
            ((C20423 - C20424) * C16814 + (C20425 - C20426) * C16809 +
             (C20427 - C20428) * C16815 + (C20429 - C20430) * C50170) *
                C5025) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C19537 * C395 - C49970 * C405) * C16814 +
             (C19537 * C409 - C49970 * C425) * C16809 +
             (C20130 - C20129) * C16815 + (C20132 - C20131) * C50170) *
                C5024 +
            ((C19537 * C399 - C49970 * C413) * C16814 +
             (C19537 * C417 - C49970 * C429) * C16809 +
             (C21605 - C21606) * C16815 + (C21607 - C21608) * C50170) *
                C5025) *
               C50035 * C248 +
           (((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
             (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                C5023 +
            ((C20129 - C20130) * C16814 + (C20131 - C20132) * C16809 +
             (C20133 - C20134) * C16815 + (C20135 - C20136) * C50170) *
                C5024 +
            ((C21606 - C21605) * C16814 + (C21608 - C21607) * C16809 +
             (C21609 - C21610) * C16815 + (C21611 - C21612) * C50170) *
                C5025) *
               C50035 * C249 +
           ((C19677 * C16814 + C19678 * C16809 + C19679 * C16815 +
             C19680 * C50170) *
                C5023 +
            ((C20134 - C20133) * C16814 + (C20136 - C20135) * C16809 +
             (C20138 - C20137) * C16815 + (C20140 - C20139) * C50170) *
                C5024 +
            ((C21610 - C21609) * C16814 + (C21612 - C21611) * C16809 +
             (C19537 * C3502 - C49970 * C3504) * C16815 +
             (C19537 * C3506 - C49970 * C3508) * C50170) *
                C5025) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C50306 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C50035 * C50307 +
           (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C50306 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50307 +
           (C19677 * C19538 + C19678 * C19533 + C19679 * C19539 +
            C19680 * C19534 + (C19670 - C19669) * C19540 +
            (C19672 - C19671) * C19535 +
            (C19537 * C3334 - C49970 * C3336) * C19541 +
            (C19537 * C3338 - C49970 * C3340) * C19536) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C50306 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50307 +
           ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C50306 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50307 +
           ((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C16814 +
            (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C16809 +
            (C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
             C16813 * C972 - C16808 * C976) *
                C16815 +
            (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
             C16813 * C980 - C16808 * C984) *
                C50170) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C50035 * C50306 +
           (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            C22741 * C5025) *
               C50035 * C50307 +
           ((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
             C19676 * C50170) *
                C5023 +
            ((C20122 - C20121) * C16814 + (C20124 - C20123) * C16809 +
             (C20126 - C20125) * C16815 + (C20128 - C20127) * C50170) *
                C5024 +
            ((C20423 - C20424) * C16814 + (C20425 - C20426) * C16809 +
             (C20427 - C20428) * C16815 + (C20429 - C20430) * C50170) *
                C5025) *
               C50035 * C1199) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             C22321 * C16815 + C22322 * C50170) *
                C5024 +
            C21812 * C5025) *
               C50035 * C50306 +
           (((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
             (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                C5023 +
            (C22323 * C16814 + C22324 * C16809 + (C20133 - C20134) * C16815 +
             (C20135 - C20136) * C50170) *
                C5024 +
            (C22325 * C16814 + C22326 * C16809 + (C21609 - C21610) * C16815 +
             (C21611 - C21612) * C50170) *
                C5025) *
               C50035 * C50307 +
           ((C19677 * C16814 + C19678 * C16809 + C19679 * C16815 +
             C19680 * C50170) *
                C5023 +
            ((C20134 - C20133) * C16814 + (C20136 - C20135) * C16809 +
             (C20138 - C20137) * C16815 + (C20140 - C20139) * C50170) *
                C5024 +
            ((C21610 - C21609) * C16814 + (C21612 - C21611) * C16809 +
             (C19537 * C3502 - C49970 * C3504) * C16815 +
             (C19537 * C3506 - C49970 * C3508) * C50170) *
                C5025) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50262 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C50306 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C50262 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50099) *
              C50307 +
          ((C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C50262 +
           (C20761 * C19538 + C20762 * C19533 + C20763 * C19539 +
            C20764 * C19534 + (C20766 - C20765) * C19540 +
            (C20768 - C20767) * C19535 +
            (C19537 * C20756 - C49970 * C20757) * C19541 +
            (C19537 * C20758 - C49970 * C20759) * C19536) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50262 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C50306 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50262 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50099) *
              C50307 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C50262 +
           ((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C16814 +
            (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C16809 +
            (C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C16815 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50170) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C50262 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             C22721 * C16815 + C22722 * C50170) *
                C5025) *
               C50099) *
              C50306 +
          ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            C22741 * C5025) *
               C50262 +
           ((C22315 * C16814 + C22316 * C16809 + C23228 * C16815 +
             C23229 * C50170) *
                C5023 +
            (C21767 * C16814 + C21768 * C16809 + C23230 * C16815 +
             C23231 * C50170) *
                C5024 +
            (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
             (C22735 - C22736) * C50170) *
                C5025) *
               C50099) *
              C50307 +
          (((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
             C19676 * C50170) *
                C5023 +
            (C23228 * C16814 + C23229 * C16809 + (C20126 - C20125) * C16815 +
             (C20128 - C20127) * C50170) *
                C5024 +
            (C23230 * C16814 + C23231 * C16809 + (C20427 - C20428) * C16815 +
             (C20429 - C20430) * C50170) *
                C5025) *
               C50262 +
           ((C20761 * C16814 + C20762 * C16809 + C20763 * C16815 +
             C20764 * C50170) *
                C5023 +
            (C22731 * C16814 + C22732 * C16809 + (C20428 - C20427) * C16815 +
             (C20430 - C20429) * C50170) *
                C5024 +
            ((C22734 - C22733) * C16814 + (C22736 - C22735) * C16809 +
             (C19537 * C21030 - C49970 * C21031) * C16815 +
             (C19537 * C21032 - C49970 * C21033) * C50170) *
                C5025) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C16814 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C16809 +
                (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
                (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) *
                    C50170) *
                   C50132 * C50035 * C893 +
               ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
                (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
                (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
                (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) *
                    C50170) *
                   C50132 * C50035 * C50071) *
                  C895 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C16814 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C16809 +
                (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
                (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) *
                    C50170) *
                   C50132 * C50035 * C893 +
               ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
                (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
                (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
                (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) *
                    C50170) *
                   C50132 * C50035 * C50071) *
                  C896 +
              (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                 C16808 * C137 - C16813 * C126) *
                    C16814 +
                (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                 C16808 * C147 - C16813 * C138) *
                    C16809 +
                (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
                (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) *
                    C50170) *
                   C50132 * C50035 * C893 +
               ((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C16814 +
                (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C16809 +
                (C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
                 C16813 * C262 - C16808 * C281) *
                    C16815 +
                (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
                 C16813 * C282 - C16808 * C292) *
                    C50170) *
                   C50132 * C50035 * C50071) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                C16808 * C131 - C16813 * C124) *
                   C16814 +
               (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                C16808 * C145 - C16813 * C135) *
                   C16809 +
               (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
               (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                  C50132 * C50035 * C964 +
              ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
               (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
               (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
               (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                  C50132 * C50035 * C965 +
              ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
               (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
               (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
               (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
                  C50132 * C50035 * C966 +
              ((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C16814 +
               (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C16809 +
               (C16811 * C2313 - C16806 * C2316 + C16812 * C2314 -
                C16807 * C2317 + C16813 * C2315 - C16808 * C2320) *
                   C16815 +
               (C16811 * C2318 - C16806 * C2322 + C16812 * C2319 -
                C16807 * C2323 + C16813 * C2321 - C16808 * C2324) *
                   C50170) *
                  C50132 * C50035 * C967) *
             C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C391 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C392 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
            (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
               C50132 * C393) *
              C893 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C391 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C16806 * C1434 - C16811 * C1430 + C16807 * C1435 - C16812 * C1431 +
             C16808 * C1436 - C16813 * C1432) *
                C16815 +
            (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 - C16812 * C1439 +
             C16808 * C1444 - C16813 * C1440) *
                C50170) *
               C50132 * C392 +
           ((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C16814 +
            (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C16809 +
            (C16811 * C2531 - C16806 * C2534 + C16812 * C2532 - C16807 * C2535 +
             C16813 * C2533 - C16808 * C2538) *
                C16815 +
            (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 - C16807 * C2541 +
             C16813 * C2539 - C16808 * C2542) *
                C50170) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C893 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C893 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50035 * C893 +
           ((C19878 - C19877) * C19538 + (C19880 - C19879) * C19533 +
            (C19882 - C19881) * C19539 + (C19884 - C19883) * C19534 +
            (C19886 - C19885) * C19540 + (C19888 - C19887) * C19535 +
            (C19537 * C2315 - C49970 * C2320) * C19541 +
            (C19537 * C2321 - C49970 * C2324) * C19536) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
           C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
           C19676 * C19536) *
              C50132 * C50035 * C964 +
          ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
           (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
           C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
           C20312 * C19536) *
              C50132 * C50035 * C965 +
          (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
           C19676 * C19534 + (C19654 - C19653) * C19540 +
           (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
           (C20315 - C20316) * C19536) *
              C50132 * C50035 * C966 +
          (C20309 * C19538 + C20310 * C19533 + C20311 * C19539 +
           C20312 * C19534 + (C20314 - C20313) * C19540 +
           (C20316 - C20315) * C19535 +
           (C19537 * C20304 - C49970 * C20305) * C19541 +
           (C19537 * C20306 - C49970 * C20307) * C19536) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C391 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            (C20121 - C20122) * C19540 + (C20123 - C20124) * C19535 +
            (C20125 - C20126) * C19541 + (C20127 - C20128) * C19536) *
               C50132 * C392 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
            (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
            (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
               C50132 * C393) *
              C893 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C391 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C49970 * C4013 - C19537 * C4011) * C19541 +
            (C49970 * C4017 - C19537 * C4015) * C19536) *
               C50132 * C392 +
           ((C20420 - C20419) * C19538 + (C20422 - C20421) * C19533 +
            (C20424 - C20423) * C19539 + (C20426 - C20425) * C19534 +
            (C20428 - C20427) * C19540 + (C20430 - C20429) * C19535 +
            (C19537 * C20414 - C49970 * C20415) * C19541 +
            (C19537 * C20416 - C49970 * C20417) * C19536) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C50035 * C893 +
           (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            (C22319 * C16814 + C22320 * C16809 + (C20424 - C20423) * C16815 +
             (C20426 - C20425) * C50170) *
                C5025) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             C22321 * C16815 + C22322 * C50170) *
                C5024 +
            C21812 * C5025) *
               C50035 * C893 +
           (((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
             (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                C5023 +
            (C22323 * C16814 + C22324 * C16809 + (C20133 - C20134) * C16815 +
             (C20135 - C20136) * C50170) *
                C5024 +
            (C22325 * C16814 + C22326 * C16809 + (C21609 - C21610) * C16815 +
             (C21611 - C21612) * C50170) *
                C5025) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C16814 +
             (C49970 * C145 - C19537 * C135) * C16809 +
             (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
                C5023 +
            ((C22113 - C22114) * C16814 + (C22115 - C22116) * C16809 +
             (C21959 - C21960) * C16815 + (C21961 - C21962) * C50170) *
                C5024 +
            ((C22117 - C22118) * C16814 + (C22119 - C22120) * C16809 +
             (C21963 - C21964) * C16815 + (C21965 - C21966) * C50170) *
                C5025) *
               C50035 * C893 +
           (((C19878 - C19877) * C16814 + (C19880 - C19879) * C16809 +
             (C19882 - C19881) * C16815 + (C19884 - C19883) * C50170) *
                C5023 +
            ((C21960 - C21959) * C16814 + (C21962 - C21961) * C16809 +
             (C19537 * C1432 - C49970 * C1436) * C16815 +
             (C19537 * C1440 - C49970 * C1444) * C50170) *
                C5024 +
            ((C21964 - C21963) * C16814 + (C21966 - C21965) * C16809 +
             (C19537 * C2533 - C49970 * C2538) * C16815 +
             (C19537 * C2539 - C49970 * C2542) * C50170) *
                C5025) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C16814 +
            (C49970 * C143 - C19537 * C133) * C16809 +
            (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
               C5023 +
           ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
            C22315 * C16815 + C22316 * C50170) *
               C5024 +
           C21811 * C5025) *
              C50035 * C964 +
          (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
            (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
               C5023 +
           (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
            C20762 * C50170) *
               C5024 +
           (C22319 * C16814 + C22320 * C16809 + (C20424 - C20423) * C16815 +
            (C20426 - C20425) * C50170) *
               C5025) *
              C50035 * C965 +
          ((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
            C19676 * C50170) *
               C5023 +
           ((C20122 - C20121) * C16814 + (C20124 - C20123) * C16809 +
            (C20126 - C20125) * C16815 + (C20128 - C20127) * C50170) *
               C5024 +
           ((C20423 - C20424) * C16814 + (C20425 - C20426) * C16809 +
            (C20427 - C20428) * C16815 + (C20429 - C20430) * C50170) *
               C5025) *
              C50035 * C966 +
          ((C20309 * C16814 + C20310 * C16809 + C20311 * C16815 +
            C20312 * C50170) *
               C5023 +
           (C20763 * C16814 + C20764 * C16809 + (C20766 - C20765) * C16815 +
            (C20768 - C20767) * C50170) *
               C5024 +
           ((C20428 - C20427) * C16814 + (C20430 - C20429) * C16809 +
            (C19537 * C20414 - C49970 * C20415) * C16815 +
            (C19537 * C20416 - C49970 * C20417) * C50170) *
               C5025) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C391 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             C22721 * C16815 + C22722 * C50170) *
                C5025) *
               C392 +
           (C21811 * C5023 +
            ((C21770 - C21769) * C16814 + (C21772 - C21771) * C16809 +
             C22723 * C16815 + C22724 * C50170) *
                C5024 +
            ((C49970 * C5321 - C19537 * C5318) * C16814 +
             (C49970 * C5327 - C19537 * C5323) * C16809 +
             (C22725 - C22726) * C16815 + (C22727 - C22728) * C50170) *
                C5025) *
               C393) *
              C893 +
          ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            C22741 * C5025) *
               C391 +
           ((C22315 * C16814 + C22316 * C16809 + (C20122 - C20121) * C16815 +
             (C20124 - C20123) * C50170) *
                C5023 +
            (C21767 * C16814 + C21768 * C16809 + (C20423 - C20424) * C16815 +
             (C20425 - C20426) * C50170) *
                C5024 +
            (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
             (C22735 - C22736) * C50170) *
                C5025) *
               C392 +
           (C22741 * C5023 +
            (C22721 * C16814 + C22722 * C16809 + (C22734 - C22733) * C16815 +
             (C22736 - C22735) * C50170) *
                C5024 +
            ((C22726 - C22725) * C16814 + (C22728 - C22727) * C16809 +
             (C19537 * C22716 - C49970 * C22717) * C16815 +
             (C19537 * C22718 - C49970 * C22719) * C50170) *
                C5025) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C19538 +
             (C49970 * C143 - C19537 * C133) * C19533 +
             (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
             C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
             C19676 * C19536) *
                C50132 * C50262 +
            ((C19537 * C394 - C49970 * C404) * C19538 +
             (C19537 * C408 - C49970 * C424) * C19533 +
             (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
             (C20121 - C20122) * C19540 + (C20123 - C20124) * C19535 +
             (C20125 - C20126) * C19541 + (C20127 - C20128) * C19536) *
                C50132 * C50099) *
               C893 +
           (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
             (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
             C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
             C20312 * C19536) *
                C50132 * C50262 +
            ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
             (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
             (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
             (C49970 * C4013 - C19537 * C4011) * C19541 +
             (C49970 * C4017 - C19537 * C4015) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C19538 +
             (C19537 * C134 - C49970 * C144) * C19533 +
             (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
             C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
             C19680 * C19536) *
                C50132 * C50262 +
            ((C49970 * C405 - C19537 * C395) * C19538 +
             (C49970 * C425 - C19537 * C409) * C19533 +
             (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
             (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
             (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
                C50132 * C50099) *
               C893 +
           (((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
             (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
             (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
             (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
                C50132 * C50262 +
            ((C20130 - C20129) * C19538 + (C20132 - C20131) * C19533 +
             (C20134 - C20133) * C19539 + (C20136 - C20135) * C19534 +
             (C20138 - C20137) * C19540 + (C20140 - C20139) * C19535 +
             (C19537 * C4012 - C49970 * C4014) * C19541 +
             (C19537 * C4016 - C49970 * C4018) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C16814 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C16809 +
             (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
             (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                C50132 * C50262 +
            ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C16814 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C16809 +
             (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
                C50132 * C50099) *
               C893 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
             (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
             (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                C50132 * C50262 +
            ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
             (C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
              C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                 C16815 +
             (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
              C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C16814 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C16809 +
             (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
             (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
                C50132 * C50262 +
            ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C16814 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C16809 +
             (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
                C50132 * C50099) *
               C893 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
             (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
             (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
                C50132 * C50262 +
            ((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C16814 +
             (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C16809 +
             (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C16815 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C16814 +
              (C49970 * C143 - C19537 * C133) * C16809 +
              (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                 C5023 +
             ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
              C22315 * C16815 + C22316 * C50170) *
                 C5024 +
             C21811 * C5025) *
                C50262 +
            (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
              C22317 * C16815 + C22318 * C50170) *
                 C5023 +
             ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
              C22319 * C16815 + C22320 * C50170) *
                 C5024 +
             ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
              C22721 * C16815 + C22722 * C50170) *
                 C5025) *
                C50099) *
               C893 +
           ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
              (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                 C5023 +
             (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
              C20762 * C50170) *
                 C5024 +
             C22741 * C5025) *
                C50262 +
            ((C22315 * C16814 + C22316 * C16809 + (C20122 - C20121) * C16815 +
              (C20124 - C20123) * C50170) *
                 C5023 +
             (C21767 * C16814 + C21768 * C16809 + (C20423 - C20424) * C16815 +
              (C20425 - C20426) * C50170) *
                 C5024 +
             (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
              (C22735 - C22736) * C50170) *
                 C5025) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C16814 +
              (C19537 * C134 - C49970 * C144) * C16809 +
              (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                 C5023 +
             ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
              C22321 * C16815 + C22322 * C50170) *
                 C5024 +
             C21812 * C5025) *
                C50262 +
            (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
              C22323 * C16815 + C22324 * C50170) *
                 C5023 +
             ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
              C22325 * C16815 + C22326 * C50170) *
                 C5024 +
             ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
              (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                 C5025) *
                C50099) *
               C893 +
           ((((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
              (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                 C5023 +
             (C22323 * C16814 + C22324 * C16809 + (C20133 - C20134) * C16815 +
              (C20135 - C20136) * C50170) *
                 C5024 +
             (C22325 * C16814 + C22326 * C16809 + (C21609 - C21610) * C16815 +
              (C21611 - C21612) * C50170) *
                 C5025) *
                C50262 +
            ((C22321 * C16814 + C22322 * C16809 + (C20134 - C20133) * C16815 +
              (C20136 - C20135) * C50170) *
                 C5023 +
             (C21785 * C16814 + C21786 * C16809 + (C21610 - C21609) * C16815 +
              (C21612 - C21611) * C50170) *
                 C5024 +
             ((C21792 - C21791) * C16814 + (C21794 - C21793) * C16809 +
              (C19537 * C4426 - C49970 * C4432) * C16815 +
              (C19537 * C4434 - C49970 * C4438) * C50170) *
                 C5025) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
           (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
              C50132 * C50035 * C964 +
          ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
           (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
           (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
           (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
              C50132 * C50035 * C965 +
          ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
           (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
           (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
           (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
              C50132 * C50035 * C966 +
          ((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C16814 +
           (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C16809 +
           (C16811 * C2313 - C16806 * C2316 + C16812 * C2314 - C16807 * C2317 +
            C16813 * C2315 - C16808 * C2320) *
               C16815 +
           (C16811 * C2318 - C16806 * C2322 + C16812 * C2319 - C16807 * C2323 +
            C16813 * C2321 - C16808 * C2324) *
               C50170) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C893 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C893 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50035 * C893 +
           ((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C16814 +
            (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C16809 +
            (C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
             C16813 * C262 - C16808 * C281) *
                C16815 +
            (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
             C16813 * C282 - C16808 * C292) *
                C50170) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C893 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C893 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50035 * C893 +
           ((C19878 - C19877) * C19538 + (C19880 - C19879) * C19533 +
            (C19882 - C19881) * C19539 + (C19884 - C19883) * C19534 +
            (C19886 - C19885) * C19540 + (C19888 - C19887) * C19535 +
            (C19537 * C2315 - C49970 * C2320) * C19541 +
            (C19537 * C2321 - C49970 * C2324) * C19536) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
           C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
           C19676 * C19536) *
              C50132 * C50035 * C964 +
          ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
           (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
           C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
           C20312 * C19536) *
              C50132 * C50035 * C965 +
          (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
           C19676 * C19534 + (C19654 - C19653) * C19540 +
           (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
           (C20315 - C20316) * C19536) *
              C50132 * C50035 * C966 +
          (C20309 * C19538 + C20310 * C19533 + C20311 * C19539 +
           C20312 * C19534 + (C20314 - C20313) * C19540 +
           (C20316 - C20315) * C19535 +
           (C19537 * C20304 - C49970 * C20305) * C19541 +
           (C19537 * C20306 - C49970 * C20307) * C19536) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C50035 * C893 +
           (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            (C22319 * C16814 + C22320 * C16809 + (C20424 - C20423) * C16815 +
             (C20426 - C20425) * C50170) *
                C5025) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             C22321 * C16815 + C22322 * C50170) *
                C5024 +
            C21812 * C5025) *
               C50035 * C893 +
           (((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
             (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                C5023 +
            (C22323 * C16814 + C22324 * C16809 + (C20133 - C20134) * C16815 +
             (C20135 - C20136) * C50170) *
                C5024 +
            (C22325 * C16814 + C22326 * C16809 + (C21609 - C21610) * C16815 +
             (C21611 - C21612) * C50170) *
                C5025) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C16814 +
             (C49970 * C145 - C19537 * C135) * C16809 +
             (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
                C5023 +
            ((C22113 - C22114) * C16814 + (C22115 - C22116) * C16809 +
             (C21959 - C21960) * C16815 + (C21961 - C21962) * C50170) *
                C5024 +
            ((C22117 - C22118) * C16814 + (C22119 - C22120) * C16809 +
             (C21963 - C21964) * C16815 + (C21965 - C21966) * C50170) *
                C5025) *
               C50035 * C893 +
           (((C19878 - C19877) * C16814 + (C19880 - C19879) * C16809 +
             (C19882 - C19881) * C16815 + (C19884 - C19883) * C50170) *
                C5023 +
            ((C21960 - C21959) * C16814 + (C21962 - C21961) * C16809 +
             (C19537 * C1432 - C49970 * C1436) * C16815 +
             (C19537 * C1440 - C49970 * C1444) * C50170) *
                C5024 +
            ((C21964 - C21963) * C16814 + (C21966 - C21965) * C16809 +
             (C19537 * C2533 - C49970 * C2538) * C16815 +
             (C19537 * C2539 - C49970 * C2542) * C50170) *
                C5025) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C16814 +
            (C49970 * C143 - C19537 * C133) * C16809 +
            (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
               C5023 +
           ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
            C22315 * C16815 + C22316 * C50170) *
               C5024 +
           C21811 * C5025) *
              C50035 * C964 +
          (((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
            (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
               C5023 +
           (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
            C20762 * C50170) *
               C5024 +
           (C22319 * C16814 + C22320 * C16809 + (C20424 - C20423) * C16815 +
            (C20426 - C20425) * C50170) *
               C5025) *
              C50035 * C965 +
          ((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
            C19676 * C50170) *
               C5023 +
           ((C20122 - C20121) * C16814 + (C20124 - C20123) * C16809 +
            (C20126 - C20125) * C16815 + (C20128 - C20127) * C50170) *
               C5024 +
           ((C20423 - C20424) * C16814 + (C20425 - C20426) * C16809 +
            (C20427 - C20428) * C16815 + (C20429 - C20430) * C50170) *
               C5025) *
              C50035 * C966 +
          ((C20309 * C16814 + C20310 * C16809 + C20311 * C16815 +
            C20312 * C50170) *
               C5023 +
           (C20763 * C16814 + C20764 * C16809 + (C20766 - C20765) * C16815 +
            (C20768 - C20767) * C50170) *
               C5024 +
           ((C20428 - C20427) * C16814 + (C20430 - C20429) * C16809 +
            (C19537 * C20414 - C49970 * C20415) * C16815 +
            (C19537 * C20416 - C49970 * C20417) * C50170) *
               C5025) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C19538 +
             (C49970 * C143 - C19537 * C133) * C19533 +
             (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
             C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
             C19676 * C19536) *
                C50132 * C1544 +
            ((C19537 * C394 - C49970 * C404) * C19538 +
             (C19537 * C408 - C49970 * C424) * C19533 +
             (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
             C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
             C20764 * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
             (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
             C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
             C20312 * C19536) *
                C50132 * C1544 +
            ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
             (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
             (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
             (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C19538 +
             (C19537 * C134 - C49970 * C144) * C19533 +
             (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
             C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
             C19680 * C19536) *
                C50132 * C1544 +
            ((C49970 * C405 - C19537 * C395) * C19538 +
             (C49970 * C425 - C19537 * C409) * C19533 +
             (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
             (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
             (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
             (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
             (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
             (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
                C50132 * C1544 +
            ((C20130 - C20129) * C19538 + (C20132 - C20131) * C19533 +
             (C20134 - C20133) * C19539 + (C20136 - C20135) * C19534 +
             (C20138 - C20137) * C19540 + (C20140 - C20139) * C19535 +
             (C19537 * C4012 - C49970 * C4014) * C19541 +
             (C19537 * C4016 - C49970 * C4018) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C16814 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C16809 +
             (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
             (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                C50132 * C1544 +
            ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C16814 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C16809 +
             (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
             (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
             (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                C50132 * C1544 +
            ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
             (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C16814 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C16809 +
             (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
             (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
                C50132 * C1544 +
            ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C16814 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C16809 +
             (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
             (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
             (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
                C50132 * C1544 +
            ((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C16814 +
             (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C16809 +
             (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C16815 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C16814 +
              (C49970 * C143 - C19537 * C133) * C16809 +
              (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                 C5023 +
             ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
              C22315 * C16815 + C22316 * C50170) *
                 C5024 +
             C21811 * C5025) *
                C1544 +
            (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
              C22317 * C16815 + C22318 * C50170) *
                 C5023 +
             ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
              C22319 * C16815 + C22320 * C50170) *
                 C5024 +
             C23638 * C5025) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
              (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                 C5023 +
             (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
              C20762 * C50170) *
                 C5024 +
             C22741 * C5025) *
                C1544 +
            ((C22315 * C16814 + C22316 * C16809 + C23228 * C16815 +
              C23229 * C50170) *
                 C5023 +
             (C21767 * C16814 + C21768 * C16809 + C23230 * C16815 +
              C23231 * C50170) *
                 C5024 +
             (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
              (C22735 - C22736) * C50170) *
                 C5025) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C16814 +
              (C19537 * C134 - C49970 * C144) * C16809 +
              (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                 C5023 +
             ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
              C22321 * C16815 + C22322 * C50170) *
                 C5024 +
             C21812 * C5025) *
                C1544 +
            (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
              C22323 * C16815 + C22324 * C50170) *
                 C5023 +
             ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
              C22325 * C16815 + C22326 * C50170) *
                 C5024 +
             ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
              (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                 C5025) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C16814 + (C19660 - C19659) * C16809 +
              (C19662 - C19661) * C16815 + (C19664 - C19663) * C50170) *
                 C5023 +
             (C22323 * C16814 + C22324 * C16809 + (C20133 - C20134) * C16815 +
              (C20135 - C20136) * C50170) *
                 C5024 +
             (C22325 * C16814 + C22326 * C16809 + (C21609 - C21610) * C16815 +
              (C21611 - C21612) * C50170) *
                 C5025) *
                C1544 +
            ((C22321 * C16814 + C22322 * C16809 + (C20134 - C20133) * C16815 +
              (C20136 - C20135) * C50170) *
                 C5023 +
             (C21785 * C16814 + C21786 * C16809 + (C21610 - C21609) * C16815 +
              (C21612 - C21611) * C50170) *
                 C5024 +
             ((C21792 - C21791) * C16814 + (C21794 - C21793) * C16809 +
              (C19537 * C4426 - C49970 * C4432) * C16815 +
              (C19537 * C4434 - C49970 * C4438) * C50170) *
                 C5025) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50308 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50309 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
            (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
            (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
               C50132 * C1960) *
              C50261 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C50308 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50309 +
           ((C20420 - C20419) * C19538 + (C20422 - C20421) * C19533 +
            (C20424 - C20423) * C19539 + (C20426 - C20425) * C19534 +
            (C20428 - C20427) * C19540 + (C20430 - C20429) * C19535 +
            (C19537 * C20414 - C49970 * C20415) * C19541 +
            (C19537 * C20416 - C49970 * C20417) * C19536) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50308 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50309 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
            (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
               C50132 * C1960) *
              C50261 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50308 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50309 +
           ((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C16814 +
            (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C16809 +
            (C16811 * C2531 - C16806 * C2534 + C16812 * C2532 - C16807 * C2535 +
             C16813 * C2533 - C16808 * C2538) *
                C16815 +
            (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 - C16807 * C2541 +
             C16813 * C2539 - C16808 * C2542) *
                C50170) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C50308 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            C23638 * C5025) *
               C50309 +
           (C21811 * C5023 +
            ((C21770 - C21769) * C16814 + (C21772 - C21771) * C16809 +
             C22723 * C16815 + C22724 * C50170) *
                C5024 +
            ((C23630 - C23631) * C16814 + (C23632 - C23633) * C16809 +
             (C22725 - C22726) * C16815 + (C22727 - C22728) * C50170) *
                C5025) *
               C1960) *
              C50261 +
          ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            C22741 * C5025) *
               C50308 +
           ((C22315 * C16814 + C22316 * C16809 + C23228 * C16815 +
             C23229 * C50170) *
                C5023 +
            (C21767 * C16814 + C21768 * C16809 + C23230 * C16815 +
             C23231 * C50170) *
                C5024 +
            (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
             (C22735 - C22736) * C50170) *
                C5025) *
               C50309 +
           (C22741 * C5023 +
            (C22721 * C16814 + C22722 * C16809 + (C22734 - C22733) * C16815 +
             (C22736 - C22735) * C50170) *
                C5024 +
            ((C22726 - C22725) * C16814 + (C22728 - C22727) * C16809 +
             (C19537 * C22716 - C49970 * C22717) * C16815 +
             (C19537 * C22718 - C49970 * C22719) * C50170) *
                C5025) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C16814 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C16809 +
                (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
                (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) *
                    C50170) *
                   C50132 * C1544 +
               ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
                 C16813 * C396 - C16808 * C406) *
                    C16814 +
                (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
                 C16813 * C410 - C16808 * C426) *
                    C16809 +
                (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
                (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) *
                    C50170) *
                   C50132 * C50099) *
                  C50019 * C895 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C16814 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C16809 +
                (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
                (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) *
                    C50170) *
                   C50132 * C1544 +
               ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
                 C16808 * C407 - C16813 * C397) *
                    C16814 +
                (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
                 C16808 * C427 - C16813 * C411) *
                    C16809 +
                (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
                (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) *
                    C50170) *
                   C50132 * C50099) *
                  C50019 * C896 +
              (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                 C16808 * C137 - C16813 * C126) *
                    C16814 +
                (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                 C16808 * C147 - C16813 * C138) *
                    C16809 +
                (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
                (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) *
                    C50170) *
                   C50132 * C1544 +
               ((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
                 C16813 * C402 - C16808 * C420) *
                    C16814 +
                (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
                 C16813 * C421 - C16808 * C432) *
                    C16809 +
                (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
                 C16813 * C779 - C16808 * C788) *
                    C16815 +
                (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
                 C16813 * C789 - C16808 * C794) *
                    C50170) *
                   C50132 * C50099) *
                  C50019 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C16814 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C16809 +
                (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
                (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) *
                    C50170) *
                   C50132 * C1544 +
               ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
                 C16813 * C396 - C16808 * C406) *
                    C16814 +
                (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
                 C16813 * C410 - C16808 * C426) *
                    C16809 +
                (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
                (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) *
                    C50170) *
                   C50132 * C50099) *
                  C248 +
              (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
                (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
                (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
                (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) *
                    C50170) *
                   C50132 * C1544 +
               ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
                (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
                (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
                (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) *
                    C50170) *
                   C50132 * C50099) *
                  C249 +
              (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
                (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
                (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
                (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) *
                    C50170) *
                   C50132 * C1544 +
               ((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C16814 +
                (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C16809 +
                (C16811 * C3045 - C16806 * C3048 + C16812 * C3046 -
                 C16807 * C3049 + C16813 * C3047 - C16808 * C3052) *
                    C16815 +
                (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 -
                 C16807 * C3055 + C16813 * C3053 - C16808 * C3056) *
                    C50170) *
                   C50132 * C50099) *
                  C250) *
             C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
           (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
              C50132 * C1710 +
          ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
            C16813 * C396 - C16808 * C406) *
               C16814 +
           (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
            C16813 * C410 - C16808 * C426) *
               C16809 +
           (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
           (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
              C50132 * C1711 +
          ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
            C16808 * C414 - C16813 * C400) *
               C16814 +
           (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
            C16808 * C430 - C16813 * C418) *
               C16809 +
           (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
           (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
              C50132 * C1712 +
          ((C16811 * C1714 - C16806 * C1718 + C16812 * C1715 - C16807 * C1719 +
            C16813 * C1716 - C16808 * C1720) *
               C16814 +
           (C16811 * C1722 - C16806 * C1726 + C16812 * C1723 - C16807 * C1727 +
            C16813 * C1724 - C16808 * C1728) *
               C16809 +
           (C16811 * C4423 - C16806 * C4427 + C16812 * C4424 - C16807 * C4428 +
            C16813 * C5898 - C16808 * C5899) *
               C16815 +
           (C16811 * C4429 - C16806 * C4435 + C16812 * C4430 - C16807 * C4436 +
            C16813 * C5900 - C16808 * C5901) *
               C50170) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C1544 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
            (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
            (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C1544 +
           ((C19537 * C396 - C49970 * C406) * C19538 +
            (C19537 * C410 - C49970 * C426) * C19533 +
            (C19537 * C777 - C49970 * C782) * C19539 +
            (C19537 * C786 - C49970 * C792) * C19534 +
            (C19537 * C1432 - C49970 * C1436) * C19540 +
            (C19537 * C1440 - C49970 * C1444) * C19535 +
            (C19537 * C3047 - C49970 * C3052) * C19541 +
            (C19537 * C3053 - C49970 * C3056) * C19536) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C248 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C1544 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50099) *
              C249 +
          ((C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C1544 +
           (C20761 * C19538 + C20762 * C19533 + C20763 * C19539 +
            C20764 * C19534 + (C20766 - C20765) * C19540 +
            (C20768 - C20767) * C19535 +
            (C19537 * C20756 - C49970 * C20757) * C19541 +
            (C19537 * C20758 - C49970 * C20759) * C19536) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
           C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
           C19676 * C19536) *
              C50132 * C1710 +
          ((C19537 * C394 - C49970 * C404) * C19538 +
           (C19537 * C408 - C49970 * C424) * C19533 +
           (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
           C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
           C20764 * C19536) *
              C50132 * C1711 +
          ((C49970 * C412 - C19537 * C398) * C19538 +
           (C49970 * C428 - C19537 * C416) * C19533 +
           (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
           (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
           (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
              C50132 * C1712 +
          ((C19537 * C1714 - C49970 * C1718) * C19538 +
           (C19537 * C1722 - C49970 * C1726) * C19533 +
           (C19537 * C4423 - C49970 * C4427) * C19539 +
           (C19537 * C4429 - C49970 * C4435) * C19534 +
           (C19537 * C4425 - C49970 * C4431) * C19540 +
           (C19537 * C4433 - C49970 * C4437) * C19535 +
           (C19537 * C21030 - C49970 * C21031) * C19541 +
           (C19537 * C21032 - C49970 * C21033) * C19536) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C1544 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             C22721 * C16815 + C22722 * C50170) *
                C5025) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             C22321 * C16815 + C22322 * C50170) *
                C5024 +
            C21812 * C5025) *
               C1544 +
           (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
             C22323 * C16815 + C22324 * C50170) *
                C5023 +
            ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
             C22325 * C16815 + C22326 * C50170) *
                C5024 +
            ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
             (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                C5025) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C16814 +
             (C49970 * C145 - C19537 * C135) * C16809 +
             (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
                C5023 +
            ((C22113 - C22114) * C16814 + (C22115 - C22116) * C16809 +
             (C21959 - C21960) * C16815 + (C21961 - C21962) * C50170) *
                C5024 +
            ((C22117 - C22118) * C16814 + (C22119 - C22120) * C16809 +
             (C21963 - C21964) * C16815 + (C21965 - C21966) * C50170) *
                C5025) *
               C1544 +
           (((C22114 - C22113) * C16814 + (C22116 - C22115) * C16809 +
             (C21960 - C21959) * C16815 + (C21962 - C21961) * C50170) *
                C5023 +
            ((C22118 - C22117) * C16814 + (C22120 - C22119) * C16809 +
             (C21964 - C21963) * C16815 + (C21966 - C21965) * C50170) *
                C5024 +
            ((C19537 * C1716 - C49970 * C1720) * C16814 +
             (C19537 * C1724 - C49970 * C1728) * C16809 +
             (C19537 * C5898 - C49970 * C5899) * C16815 +
             (C19537 * C5900 - C49970 * C5901) * C50170) *
                C5025) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C1544 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             C22721 * C16815 + C22722 * C50170) *
                C5025) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            C22741 * C5025) *
               C1544 +
           ((C22315 * C16814 + C22316 * C16809 + C23228 * C16815 +
             C23229 * C50170) *
                C5023 +
            (C21767 * C16814 + C21768 * C16809 + C23230 * C16815 +
             C23231 * C50170) *
                C5024 +
            (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
             (C22735 - C22736) * C50170) *
                C5025) *
               C50099) *
              C249 +
          (((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
             C19676 * C50170) *
                C5023 +
            (C23228 * C16814 + C23229 * C16809 + (C20126 - C20125) * C16815 +
             (C20128 - C20127) * C50170) *
                C5024 +
            (C23230 * C16814 + C23231 * C16809 + (C20427 - C20428) * C16815 +
             (C20429 - C20430) * C50170) *
                C5025) *
               C1544 +
           ((C20761 * C16814 + C20762 * C16809 + C20763 * C16815 +
             C20764 * C50170) *
                C5023 +
            (C22731 * C16814 + C22732 * C16809 + (C20428 - C20427) * C16815 +
             (C20430 - C20429) * C50170) *
                C5024 +
            ((C22734 - C22733) * C16814 + (C22736 - C22735) * C16809 +
             (C19537 * C21030 - C49970 * C21031) * C16815 +
             (C19537 * C21032 - C49970 * C21033) * C50170) *
                C5025) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C16814 +
            (C49970 * C143 - C19537 * C133) * C16809 +
            (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
               C5023 +
           ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
            C22315 * C16815 + C22316 * C50170) *
               C5024 +
           C21811 * C5025) *
              C1710 +
          (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
            C22317 * C16815 + C22318 * C50170) *
               C5023 +
           ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
            C22319 * C16815 + C22320 * C50170) *
               C5024 +
           C23638 * C5025) *
              C1711 +
          (C21811 * C5023 +
           ((C21770 - C21769) * C16814 + (C21772 - C21771) * C16809 +
            C22723 * C16815 + C22724 * C50170) *
               C5024 +
           ((C23630 - C23631) * C16814 + (C23632 - C23633) * C16809 +
            (C22725 - C22726) * C16815 + (C22727 - C22728) * C50170) *
               C5025) *
              C1712 +
          (C23638 * C5023 +
           ((C23631 - C23630) * C16814 + (C23633 - C23632) * C16809 +
            (C22726 - C22725) * C16815 + (C22728 - C22727) * C50170) *
               C5024 +
           ((C19537 * C7201 - C49970 * C7203) * C16814 +
            (C19537 * C7205 - C49970 * C7207) * C16809 +
            (C19537 * C23621 - C49970 * C23622) * C16815 +
            (C19537 * C23623 - C49970 * C23624) * C50170) *
               C5025) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50308 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50309 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
            (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
            (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50308 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
            (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
            (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
               C50132 * C50309 +
           ((C19537 * C399 - C49970 * C413) * C19538 +
            (C19537 * C417 - C49970 * C429) * C19533 +
            (C19537 * C1084 - C49970 * C1088) * C19539 +
            (C19537 * C1092 - C49970 * C1096) * C19534 +
            (C19537 * C2532 - C49970 * C2535) * C19540 +
            (C19537 * C2537 - C49970 * C2541) * C19535 +
            (C19537 * C3502 - C49970 * C3504) * C19541 +
            (C19537 * C3506 - C49970 * C3508) * C19536) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50308 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50309 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
            (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50308 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
            (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
               C50132 * C50309 +
           ((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
             C16813 * C401 - C16808 * C415) *
                C16814 +
            (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
             C16813 * C419 - C16808 * C431) *
                C16809 +
            (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 - C16807 * C1089 +
             C16813 * C1086 - C16808 * C1090) *
                C16815 +
            (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 - C16807 * C1097 +
             C16813 * C1094 - C16808 * C1098) *
                C50170) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C50308 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            C23638 * C5025) *
               C50309 +
           (C21811 * C5023 +
            ((C21770 - C21769) * C16814 + (C21772 - C21771) * C16809 +
             C22723 * C16815 + C22724 * C50170) *
                C5024 +
            ((C23630 - C23631) * C16814 + (C23632 - C23633) * C16809 +
             (C22725 - C22726) * C16815 + (C22727 - C22728) * C50170) *
                C5025) *
               C1960) *
              C50019 * C50253 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             C22321 * C16815 + C22322 * C50170) *
                C5024 +
            C21812 * C5025) *
               C50308 +
           (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
             C22323 * C16815 + C22324 * C50170) *
                C5023 +
            ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
             C22325 * C16815 + C22326 * C50170) *
                C5024 +
            ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
             (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                C5025) *
               C50309 +
           (C21812 * C5023 +
            ((C21788 - C21787) * C16814 + (C21790 - C21789) * C16809 +
             (C21792 - C21791) * C16815 + (C21794 - C21793) * C50170) *
                C5024 +
            ((C19537 * C5319 - C49970 * C5322) * C16814 +
             (C19537 * C5324 - C49970 * C5328) * C16809 +
             (C19537 * C6301 - C49970 * C6303) * C16815 +
             (C19537 * C6305 - C49970 * C6307) * C50170) *
                C5025) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C1544 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C248 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C1544 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50099) *
              C249 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C1544 +
           ((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C16814 +
            (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C16809 +
            (C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C16815 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50170) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C1544 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C1544 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
            (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C1544 +
           ((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
             C16813 * C402 - C16808 * C420) *
                C16814 +
            (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
             C16813 * C421 - C16808 * C432) *
                C16809 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C16815 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50170) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C1544 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
            (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
            (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C1544 +
           ((C19537 * C396 - C49970 * C406) * C19538 +
            (C19537 * C410 - C49970 * C426) * C19533 +
            (C19537 * C777 - C49970 * C782) * C19539 +
            (C19537 * C786 - C49970 * C792) * C19534 +
            (C19537 * C1432 - C49970 * C1436) * C19540 +
            (C19537 * C1440 - C49970 * C1444) * C19535 +
            (C19537 * C3047 - C49970 * C3052) * C19541 +
            (C19537 * C3053 - C49970 * C3056) * C19536) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C248 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C1544 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50099) *
              C249 +
          ((C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C1544 +
           (C20761 * C19538 + C20762 * C19533 + C20763 * C19539 +
            C20764 * C19534 + (C20766 - C20765) * C19540 +
            (C20768 - C20767) * C19535 +
            (C19537 * C20756 - C49970 * C20757) * C19541 +
            (C19537 * C20758 - C49970 * C20759) * C19536) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C1544 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             C22721 * C16815 + C22722 * C50170) *
                C5025) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C16814 +
             (C19537 * C134 - C49970 * C144) * C16809 +
             (C19657 - C19658) * C16815 + (C19659 - C19660) * C50170) *
                C5023 +
            ((C21777 - C21778) * C16814 + (C21779 - C21780) * C16809 +
             C22321 * C16815 + C22322 * C50170) *
                C5024 +
            C21812 * C5025) *
               C1544 +
           (((C21778 - C21777) * C16814 + (C21780 - C21779) * C16809 +
             C22323 * C16815 + C22324 * C50170) *
                C5023 +
            ((C21782 - C21781) * C16814 + (C21784 - C21783) * C16809 +
             C22325 * C16815 + C22326 * C50170) *
                C5024 +
            ((C21787 - C21788) * C16814 + (C21789 - C21790) * C16809 +
             (C21791 - C21792) * C16815 + (C21793 - C21794) * C50170) *
                C5025) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C16814 +
             (C49970 * C145 - C19537 * C135) * C16809 +
             (C19877 - C19878) * C16815 + (C19879 - C19880) * C50170) *
                C5023 +
            ((C22113 - C22114) * C16814 + (C22115 - C22116) * C16809 +
             (C21959 - C21960) * C16815 + (C21961 - C21962) * C50170) *
                C5024 +
            ((C22117 - C22118) * C16814 + (C22119 - C22120) * C16809 +
             (C21963 - C21964) * C16815 + (C21965 - C21966) * C50170) *
                C5025) *
               C1544 +
           (((C22114 - C22113) * C16814 + (C22116 - C22115) * C16809 +
             (C21960 - C21959) * C16815 + (C21962 - C21961) * C50170) *
                C5023 +
            ((C22118 - C22117) * C16814 + (C22120 - C22119) * C16809 +
             (C21964 - C21963) * C16815 + (C21966 - C21965) * C50170) *
                C5024 +
            ((C19537 * C1716 - C49970 * C1720) * C16814 +
             (C19537 * C1724 - C49970 * C1728) * C16809 +
             (C19537 * C5898 - C49970 * C5899) * C16815 +
             (C19537 * C5900 - C49970 * C5901) * C50170) *
                C5025) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C16814 +
             (C49970 * C143 - C19537 * C133) * C16809 +
             (C19641 - C19642) * C16815 + (C19643 - C19644) * C50170) *
                C5023 +
            ((C21759 - C21760) * C16814 + (C21761 - C21762) * C16809 +
             C22315 * C16815 + C22316 * C50170) *
                C5024 +
            C21811 * C5025) *
               C1544 +
           (((C21760 - C21759) * C16814 + (C21762 - C21761) * C16809 +
             C22317 * C16815 + C22318 * C50170) *
                C5023 +
            ((C21764 - C21763) * C16814 + (C21766 - C21765) * C16809 +
             C22319 * C16815 + C22320 * C50170) *
                C5024 +
            ((C21769 - C21770) * C16814 + (C21771 - C21772) * C16809 +
             C22721 * C16815 + C22722 * C50170) *
                C5025) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C16814 + (C19644 - C19643) * C16809 +
             (C19646 - C19645) * C16815 + (C19648 - C19647) * C50170) *
                C5023 +
            (C22317 * C16814 + C22318 * C16809 + C20761 * C16815 +
             C20762 * C50170) *
                C5024 +
            C22741 * C5025) *
               C1544 +
           ((C22315 * C16814 + C22316 * C16809 + C23228 * C16815 +
             C23229 * C50170) *
                C5023 +
            (C21767 * C16814 + C21768 * C16809 + C23230 * C16815 +
             C23231 * C50170) *
                C5024 +
            (C22723 * C16814 + C22724 * C16809 + (C22733 - C22734) * C16815 +
             (C22735 - C22736) * C50170) *
                C5025) *
               C50099) *
              C249 +
          (((C19673 * C16814 + C19674 * C16809 + C19675 * C16815 +
             C19676 * C50170) *
                C5023 +
            (C23228 * C16814 + C23229 * C16809 + (C20126 - C20125) * C16815 +
             (C20128 - C20127) * C50170) *
                C5024 +
            (C23230 * C16814 + C23231 * C16809 + (C20427 - C20428) * C16815 +
             (C20429 - C20430) * C50170) *
                C5025) *
               C1544 +
           ((C20761 * C16814 + C20762 * C16809 + C20763 * C16815 +
             C20764 * C50170) *
                C5023 +
            (C22731 * C16814 + C22732 * C16809 + (C20428 - C20427) * C16815 +
             (C20430 - C20429) * C50170) *
                C5024 +
            ((C22734 - C22733) * C16814 + (C22736 - C22735) * C16809 +
             (C19537 * C21030 - C49970 * C21031) * C16815 +
             (C19537 * C21032 - C49970 * C21033) * C50170) *
                C5025) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 +
             (C25088 - C25087 + C25090 - C25089) * C16815 +
             (C25092 - C25091 + C25094 - C25093) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            ((C25087 - C25088 + C25089 - C25090) * C16814 +
             (C25091 - C25092 + C25093 - C25094) * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 +
             (C25104 - C25103 + C25106 - C25105) * C16815 +
             (C25108 - C25107 + C25110 - C25109) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C24404 - C24403 + C24406 - C24405) * C16814 +
             (C24408 - C24407 + C24410 - C24409) * C16809 +
             (C24412 - C24411 + C24414 - C24413) * C16815 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C50275 +
            ((C25103 - C25104 + C25105 - C25106) * C16814 +
             (C25107 - C25108 + C25109 - C25110) * C16809 +
             (C25111 - C25112 + C25113 - C25114) * C16815 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C16814 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C16809 +
             (C24731 - C24732 + C24733 - C24734) * C16815 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C50275 +
            ((C50246 * C406 - C49173 * C396 + C49975 * C407 - C49166 * C397) *
                 C16814 +
             (C50246 * C426 - C49173 * C410 + C49975 * C427 - C49166 * C411) *
                 C16809 +
             (C27667 - C27668 + C27669 - C27670) * C16815 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C24732 - C24731 + C24734 - C24733) * C16814 +
             (C24736 - C24735 + C24738 - C24737) * C16809 +
             (C24740 - C24739 + C24742 - C24741) * C16815 +
             (C24744 - C24743 + C24746 - C24745) * C50170) *
                C50275 +
            ((C27668 - C27667 + C27670 - C27669) * C16814 +
             (C27672 - C27671 + C27674 - C27673) * C16809 +
             (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
              C49975 * C1437) *
                 C16815 +
             (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
              C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C16814 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C16809 +
              (C24379 - C24380 + C24381 - C24382) * C16815 +
              (C24383 - C24384 + C24385 - C24386) * C50170) *
                 C50275 +
             ((C27433 - C27434 + C27435 - C27436) * C16814 +
              (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
              C28152 * C50170) *
                 C50196) *
                C50262 +
            (((C27434 - C27433 + C27436 - C27435) * C16814 +
              (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
              C28154 * C50170) *
                 C50275 +
             ((C27441 - C27442 + C27443 - C27444) * C16814 +
              (C27445 - C27446 + C27447 - C27448) * C16809 +
              (C25524 - C25523 + C25526 - C25525) * C16815 +
              (C25528 - C25527 + C25530 - C25529) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24380 - C24379 + C24382 - C24381) * C16814 +
              (C24384 - C24383 + C24386 - C24385) * C16809 +
              (C24388 - C24387 + C24390 - C24389) * C16815 +
              (C24392 - C24391 + C24394 - C24393) * C50170) *
                 C50275 +
             (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
              C26038 * C50170) *
                 C50196) *
                C50262 +
            ((C28151 * C16814 + C28152 * C16809 +
              (C25096 - C25095 + C25098 - C25097) * C16815 +
              (C25100 - C25099 + C25102 - C25101) * C50170) *
                 C50275 +
             ((C25523 - C25524 + C25525 - C25526) * C16814 +
              (C25527 - C25528 + C25529 - C25530) * C16809 +
              (C25531 - C25532 + C25533 - C25534) * C16815 +
              (C25535 - C25536 + C25537 - C25538) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C16814 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C16809 +
              (C24403 - C24404 + C24405 - C24406) * C16815 +
              (C24407 - C24408 + C24409 - C24410) * C50170) *
                 C50275 +
             ((C27449 - C27450 + C27451 - C27452) * C16814 +
              (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
              C28156 * C50170) *
                 C50196) *
                C50262 +
            (((C27450 - C27449 + C27452 - C27451) * C16814 +
              (C27454 - C27453 + C27456 - C27455) * C16809 + C28157 * C16815 +
              C28158 * C50170) *
                 C50275 +
             ((C27457 - C27458 + C27459 - C27460) * C16814 +
              (C27461 - C27462 + C27463 - C27464) * C16809 +
              (C27465 - C27466 + C27467 - C27468) * C16815 +
              (C27469 - C27470 + C27471 - C27472) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24404 - C24403 + C24406 - C24405) * C16814 +
              (C24408 - C24407 + C24410 - C24409) * C16809 +
              (C24412 - C24411 + C24414 - C24413) * C16815 +
              (C24416 - C24415 + C24418 - C24417) * C50170) *
                 C50275 +
             (C28157 * C16814 + C28158 * C16809 +
              (C25111 - C25112 + C25113 - C25114) * C16815 +
              (C25115 - C25116 + C25117 - C25118) * C50170) *
                 C50196) *
                C50262 +
            ((C28155 * C16814 + C28156 * C16809 +
              (C25112 - C25111 + C25114 - C25113) * C16815 +
              (C25116 - C25115 + C25118 - C25117) * C50170) *
                 C50275 +
             ((C27466 - C27465 + C27468 - C27467) * C16814 +
              (C27470 - C27469 + C27472 - C27471) * C16809 +
              (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
               C49975 * C2538) *
                  C16815 +
              (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
               C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C50246 * C404 - C49173 * C394 + C49975 * C405 - C49166 * C395) *
                 C16814 +
             (C50246 * C424 - C49173 * C408 + C49975 * C425 - C49166 * C409) *
                 C16809 +
             (C25088 - C25087 + C25090 - C25089) * C16815 +
             (C25092 - C25091 + C25094 - C25093) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            ((C25087 - C25088 + C25089 - C25090) * C16814 +
             (C25091 - C25092 + C25093 - C25094) * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24435 * C16814 + C24436 * C16809 +
             (C24396 - C24395 + C24398 - C24397) * C16815 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C50275 +
            ((C25096 - C25095 + C25098 - C25097) * C16814 +
             (C25100 - C25099 + C25102 - C25101) * C16809 +
             (C26029 - C26030 + C26031 - C26032) * C16815 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C49173 * C395 - C50246 * C405 + C49166 * C396 - C49975 * C406) *
                 C16814 +
             (C49173 * C409 - C50246 * C425 + C49166 * C410 - C49975 * C426) *
                 C16809 +
             (C25104 - C25103 + C25106 - C25105) * C16815 +
             (C25108 - C25107 + C25110 - C25109) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24404 - C24403 + C24406 - C24405) * C16814 +
             (C24408 - C24407 + C24410 - C24409) * C16809 +
             (C24412 - C24411 + C24414 - C24413) * C16815 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C50275 +
            ((C25103 - C25104 + C25105 - C25106) * C16814 +
             (C25107 - C25108 + C25109 - C25110) * C16809 +
             (C25111 - C25112 + C25113 - C25114) * C16815 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24437 * C16814 + C24438 * C16809 +
             (C24420 - C24419 + C24422 - C24421) * C16815 +
             (C24424 - C24423 + C24426 - C24425) * C50170) *
                C50275 +
            ((C25112 - C25111 + C25114 - C25113) * C16814 +
             (C25116 - C25115 + C25118 - C25117) * C16809 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C16815 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C16814 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C16809 +
            (C24379 - C24380 + C24381 - C24382) * C16815 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C50275 +
           ((C50246 * C404 - C49173 * C394 + C49975 * C405 - C49166 * C395) *
                C16814 +
            (C50246 * C424 - C49173 * C408 + C49975 * C425 - C49166 * C409) *
                C16809 +
            (C25088 - C25087 + C25090 - C25089) * C16815 +
            (C25092 - C25091 + C25094 - C25093) * C50170) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C16814 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C16809 +
            (C24403 - C24404 + C24405 - C24406) * C16815 +
            (C24407 - C24408 + C24409 - C24410) * C50170) *
               C50275 +
           ((C49173 * C395 - C50246 * C405 + C49166 * C396 - C49975 * C406) *
                C16814 +
            (C49173 * C409 - C50246 * C425 + C49166 * C410 - C49975 * C426) *
                C16809 +
            (C25104 - C25103 + C25106 - C25105) * C16815 +
            (C25108 - C25107 + C25110 - C25109) * C50170) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C16814 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C16809 +
            (C24731 - C24732 + C24733 - C24734) * C16815 +
            (C24735 - C24736 + C24737 - C24738) * C50170) *
               C50275 +
           ((C50246 * C406 - C49173 * C396 + C49975 * C407 - C49166 * C397) *
                C16814 +
            (C50246 * C426 - C49173 * C410 + C49975 * C427 - C49166 * C411) *
                C16809 +
            (C50246 * C782 - C49173 * C777 + C49975 * C783 - C49166 * C778) *
                C16815 +
            (C50246 * C792 - C49173 * C786 + C49975 * C793 - C49166 * C787) *
                C50170) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
                C16814 +
            (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
                C16809 +
            (C49173 * C256 - C50246 * C266 + C49166 * C261 - C49975 * C279) *
                C16815 +
            (C49173 * C270 - C50246 * C286 + C49166 * C280 - C49975 * C291) *
                C50170) *
               C50275 +
           ((C49173 * C397 - C50246 * C407 + C49166 * C402 - C49975 * C420) *
                C16814 +
            (C49173 * C411 - C50246 * C427 + C49166 * C421 - C49975 * C432) *
                C16809 +
            (C49173 * C778 - C50246 * C783 + C49166 * C779 - C49975 * C788) *
                C16815 +
            (C49173 * C787 - C50246 * C793 + C49166 * C789 - C49975 * C794) *
                C50170) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 +
             (C25088 - C25087 + C25090 - C25089) * C16815 +
             (C25092 - C25091 + C25094 - C25093) * C50170) *
                C50196) *
               C391 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 +
             (C25087 - C25088 + C25089 - C25090) * C16815 +
             (C25091 - C25092 + C25093 - C25094) * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 +
             (C25524 - C25523 + C25526 - C25525) * C16815 +
             (C25528 - C25527 + C25530 - C25529) * C50170) *
                C50196) *
               C392 +
           (((C27442 - C27441 + C27444 - C27443) * C16814 +
             (C27446 - C27445 + C27448 - C27447) * C16809 +
             (C25523 - C25524 + C25525 - C25526) * C16815 +
             (C25527 - C25528 + C25529 - C25530) * C50170) *
                C50275 +
            ((C50246 * C1718 - C49173 * C1714 + C49975 * C1719 -
              C49166 * C1715) *
                 C16814 +
             (C50246 * C1726 - C49173 * C1722 + C49975 * C1727 -
              C49166 * C1723) *
                 C16809 +
             (C50246 * C4427 - C49173 * C4423 + C49975 * C4428 -
              C49166 * C4424) *
                 C16815 +
             (C50246 * C4435 - C49173 * C4429 + C49975 * C4436 -
              C49166 * C4430) *
                 C50170) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 +
             (C25104 - C25103 + C25106 - C25105) * C16815 +
             (C25108 - C25107 + C25110 - C25109) * C50170) *
                C50196) *
               C391 +
           (((C27450 - C27449 + C27452 - C27451) * C16814 +
             (C27454 - C27453 + C27456 - C27455) * C16809 +
             (C25103 - C25104 + C25105 - C25106) * C16815 +
             (C25107 - C25108 + C25109 - C25110) * C50170) *
                C50275 +
            ((C27457 - C27458 + C27459 - C27460) * C16814 +
             (C27461 - C27462 + C27463 - C27464) * C16809 +
             (C27465 - C27466 + C27467 - C27468) * C16815 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C392 +
           (((C27458 - C27457 + C27460 - C27459) * C16814 +
             (C27462 - C27461 + C27464 - C27463) * C16809 +
             (C27466 - C27465 + C27468 - C27467) * C16815 +
             (C27470 - C27469 + C27472 - C27471) * C50170) *
                C50275 +
            ((C49173 * C1715 - C50246 * C1719 + C49166 * C1716 -
              C49975 * C1720) *
                 C16814 +
             (C49173 * C1723 - C50246 * C1727 + C49166 * C1724 -
              C49975 * C1728) *
                 C16809 +
             (C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
              C49975 * C5899) *
                 C16815 +
             (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
              C49975 * C5901) *
                 C50170) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 +
             (C25088 - C25087 + C25090 - C25089) * C16815 +
             (C25092 - C25091 + C25094 - C25093) * C50170) *
                C50196) *
               C50262 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 +
             (C25087 - C25088 + C25089 - C25090) * C16815 +
             (C25091 - C25092 + C25093 - C25094) * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 +
             (C25524 - C25523 + C25526 - C25525) * C16815 +
             (C25528 - C25527 + C25530 - C25529) * C50170) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 +
             (C25104 - C25103 + C25106 - C25105) * C16815 +
             (C25108 - C25107 + C25110 - C25109) * C50170) *
                C50196) *
               C50262 +
           (((C27450 - C27449 + C27452 - C27451) * C16814 +
             (C27454 - C27453 + C27456 - C27455) * C16809 +
             (C25103 - C25104 + C25105 - C25106) * C16815 +
             (C25107 - C25108 + C25109 - C25110) * C50170) *
                C50275 +
            ((C27457 - C27458 + C27459 - C27460) * C16814 +
             (C27461 - C27462 + C27463 - C27464) * C16809 +
             (C27465 - C27466 + C27467 - C27468) * C16815 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C16814 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C16809 +
             (C24731 - C24732 + C24733 - C24734) * C16815 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C50275 +
            ((C27869 - C27870 + C27871 - C27872) * C16814 +
             (C27873 - C27874 + C27875 - C27876) * C16809 +
             (C27667 - C27668 + C27669 - C27670) * C16815 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50262 +
           (((C27870 - C27869 + C27872 - C27871) * C16814 +
             (C27874 - C27873 + C27876 - C27875) * C16809 +
             (C27668 - C27667 + C27670 - C27669) * C16815 +
             (C27672 - C27671 + C27674 - C27673) * C50170) *
                C50275 +
            ((C49173 * C400 - C50246 * C414 + C49166 * C401 - C49975 * C415) *
                 C16814 +
             (C49173 * C418 - C50246 * C430 + C49166 * C419 - C49975 * C431) *
                 C16809 +
             (C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C16815 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C16814 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C16809 +
            (C24379 - C24380 + C24381 - C24382) * C16815 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C50275 +
           ((C50246 * C404 - C49173 * C394 + C49975 * C405 - C49166 * C395) *
                C16814 +
            (C50246 * C424 - C49173 * C408 + C49975 * C425 - C49166 * C409) *
                C16809 +
            (C25088 - C25087 + C25090 - C25089) * C16815 +
            (C25092 - C25091 + C25094 - C25093) * C50170) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C16814 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C16809 +
            (C24403 - C24404 + C24405 - C24406) * C16815 +
            (C24407 - C24408 + C24409 - C24410) * C50170) *
               C50275 +
           ((C49173 * C395 - C50246 * C405 + C49166 * C396 - C49975 * C406) *
                C16814 +
            (C49173 * C409 - C50246 * C425 + C49166 * C410 - C49975 * C426) *
                C16809 +
            (C25104 - C25103 + C25106 - C25105) * C16815 +
            (C25108 - C25107 + C25110 - C25109) * C50170) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C16814 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C16809 +
            (C24731 - C24732 + C24733 - C24734) * C16815 +
            (C24735 - C24736 + C24737 - C24738) * C50170) *
               C50275 +
           ((C50246 * C406 - C49173 * C396 + C49975 * C407 - C49166 * C397) *
                C16814 +
            (C50246 * C426 - C49173 * C410 + C49975 * C427 - C49166 * C411) *
                C16809 +
            (C50246 * C782 - C49173 * C777 + C49975 * C783 - C49166 * C778) *
                C16815 +
            (C50246 * C792 - C49173 * C786 + C49975 * C793 - C49166 * C787) *
                C50170) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
                C16814 +
            (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
                C16809 +
            (C49173 * C256 - C50246 * C266 + C49166 * C261 - C49975 * C279) *
                C16815 +
            (C49173 * C270 - C50246 * C286 + C49166 * C280 - C49975 * C291) *
                C50170) *
               C50275 +
           ((C49173 * C397 - C50246 * C407 + C49166 * C402 - C49975 * C420) *
                C16814 +
            (C49173 * C411 - C50246 * C427 + C49166 * C421 - C49975 * C432) *
                C16809 +
            (C49173 * C778 - C50246 * C783 + C49166 * C779 - C49975 * C788) *
                C16815 +
            (C49173 * C787 - C50246 * C793 + C49166 * C789 - C49975 * C794) *
                C50170) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C50246 * C404 - C49173 * C394 + C49975 * C405 - C49166 * C395) *
                 C16814 +
             (C50246 * C424 - C49173 * C408 + C49975 * C425 - C49166 * C409) *
                 C16809 +
             (C25088 - C25087 + C25090 - C25089) * C16815 +
             (C25092 - C25091 + C25094 - C25093) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            ((C25087 - C25088 + C25089 - C25090) * C16814 +
             (C25091 - C25092 + C25093 - C25094) * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24435 * C16814 + C24436 * C16809 +
             (C24396 - C24395 + C24398 - C24397) * C16815 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C50275 +
            ((C25096 - C25095 + C25098 - C25097) * C16814 +
             (C25100 - C25099 + C25102 - C25101) * C16809 +
             (C26029 - C26030 + C26031 - C26032) * C16815 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C49173 * C395 - C50246 * C405 + C49166 * C396 - C49975 * C406) *
                 C16814 +
             (C49173 * C409 - C50246 * C425 + C49166 * C410 - C49975 * C426) *
                 C16809 +
             (C25104 - C25103 + C25106 - C25105) * C16815 +
             (C25108 - C25107 + C25110 - C25109) * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24404 - C24403 + C24406 - C24405) * C16814 +
             (C24408 - C24407 + C24410 - C24409) * C16809 +
             (C24412 - C24411 + C24414 - C24413) * C16815 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C50275 +
            ((C25103 - C25104 + C25105 - C25106) * C16814 +
             (C25107 - C25108 + C25109 - C25110) * C16809 +
             (C25111 - C25112 + C25113 - C25114) * C16815 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24437 * C16814 + C24438 * C16809 +
             (C24420 - C24419 + C24422 - C24421) * C16815 +
             (C24424 - C24423 + C24426 - C24425) * C50170) *
                C50275 +
            ((C25112 - C25111 + C25114 - C25113) * C16814 +
             (C25116 - C25115 + C25118 - C25117) * C16809 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C16815 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C50035 * C50306 +
           (((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50307 +
           ((C24435 * C16814 + C24436 * C16809 +
             (C24396 - C24395 + C24398 - C24397) * C16815 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C50275 +
            ((C25096 - C25095 + C25098 - C25097) * C16814 +
             (C25100 - C25099 + C25102 - C25101) * C16809 +
             (C26029 - C26030 + C26031 - C26032) * C16815 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
             C28156 * C50170) *
                C50196) *
               C50035 * C50306 +
           (((C24404 - C24403 + C24406 - C24405) * C16814 +
             (C24408 - C24407 + C24410 - C24409) * C16809 +
             (C24412 - C24411 + C24414 - C24413) * C16815 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C50275 +
            (C28157 * C16814 + C28158 * C16809 +
             (C25111 - C25112 + C25113 - C25114) * C16815 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50307 +
           ((C24437 * C16814 + C24438 * C16809 +
             (C24420 - C24419 + C24422 - C24421) * C16815 +
             (C24424 - C24423 + C24426 - C24425) * C50170) *
                C50275 +
            ((C25112 - C25111 + C25114 - C25113) * C16814 +
             (C25116 - C25115 + C25118 - C25117) * C16809 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C16815 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C50262 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50306 +
          ((((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50262 +
           ((C28151 * C16814 + C28152 * C16809 + C29347 * C16815 +
             C29348 * C50170) *
                C50275 +
            (C28695 * C16814 + C28696 * C16809 +
             (C25531 - C25532 + C25533 - C25534) * C16815 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50099) *
              C50307 +
          (((C24435 * C16814 + C24436 * C16809 +
             (C24396 - C24395 + C24398 - C24397) * C16815 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C50275 +
            (C29347 * C16814 + C29348 * C16809 +
             (C26029 - C26030 + C26031 - C26032) * C16815 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50262 +
           ((C26037 * C16814 + C26038 * C16809 +
             (C26030 - C26029 + C26032 - C26031) * C16815 +
             (C26034 - C26033 + C26036 - C26035) * C50170) *
                C50275 +
            ((C25532 - C25531 + C25534 - C25533) * C16814 +
             (C25536 - C25535 + C25538 - C25537) * C16809 +
             (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
              C49975 * C3504) *
                 C16815 +
             (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
              C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C16814 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C16809 +
            (C24379 - C24380 + C24381 - C24382) * C16815 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C50275 +
           ((C27433 - C27434 + C27435 - C27436) * C16814 +
            (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
            C28152 * C50170) *
               C50196) *
              C50035 * C964 +
          (((C24380 - C24379 + C24382 - C24381) * C16814 +
            (C24384 - C24383 + C24386 - C24385) * C16809 +
            (C24388 - C24387 + C24390 - C24389) * C16815 +
            (C24392 - C24391 + C24394 - C24393) * C50170) *
               C50275 +
           (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
            C26038 * C50170) *
               C50196) *
              C50035 * C965 +
          ((C24435 * C16814 + C24436 * C16809 +
            (C24396 - C24395 + C24398 - C24397) * C16815 +
            (C24400 - C24399 + C24402 - C24401) * C50170) *
               C50275 +
           ((C25096 - C25095 + C25098 - C25097) * C16814 +
            (C25100 - C25099 + C25102 - C25101) * C16809 +
            (C26029 - C26030 + C26031 - C26032) * C16815 +
            (C26033 - C26034 + C26035 - C26036) * C50170) *
               C50196) *
              C50035 * C966 +
          ((C25375 * C16814 + C25376 * C16809 +
            (C25368 - C25367 + C25370 - C25369) * C16815 +
            (C25372 - C25371 + C25374 - C25373) * C50170) *
               C50275 +
           ((C26030 - C26029 + C26032 - C26031) * C16814 +
            (C26034 - C26033 + C26036 - C26035) * C16809 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C16815 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C50170) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
             C28156 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24404 - C24403 + C24406 - C24405) * C16814 +
             (C24408 - C24407 + C24410 - C24409) * C16809 +
             (C24412 - C24411 + C24414 - C24413) * C16815 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C50275 +
            (C28157 * C16814 + C28158 * C16809 +
             (C25111 - C25112 + C25113 - C25114) * C16815 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C16814 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C16809 +
             (C24731 - C24732 + C24733 - C24734) * C16815 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C50275 +
            ((C27869 - C27870 + C27871 - C27872) * C16814 +
             (C27873 - C27874 + C27875 - C27876) * C16809 +
             (C27667 - C27668 + C27669 - C27670) * C16815 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24732 - C24731 + C24734 - C24733) * C16814 +
             (C24736 - C24735 + C24738 - C24737) * C16809 +
             (C24740 - C24739 + C24742 - C24741) * C16815 +
             (C24744 - C24743 + C24746 - C24745) * C50170) *
                C50275 +
            ((C27668 - C27667 + C27670 - C27669) * C16814 +
             (C27672 - C27671 + C27674 - C27673) * C16809 +
             (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
              C49975 * C1437) *
                 C16815 +
             (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
              C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C391 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C392 +
           (((C27442 - C27441 + C27444 - C27443) * C16814 +
             (C27446 - C27445 + C27448 - C27447) * C16809 + C28695 * C16815 +
             C28696 * C50170) *
                C50275 +
            ((C50246 * C1718 - C49173 * C1714 + C49975 * C1719 -
              C49166 * C1715) *
                 C16814 +
             (C50246 * C1726 - C49173 * C1722 + C49975 * C1727 -
              C49166 * C1723) *
                 C16809 +
             (C28685 - C28686 + C28687 - C28688) * C16815 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C393) *
              C893 +
          ((((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C391 +
           ((C28151 * C16814 + C28152 * C16809 +
             (C25096 - C25095 + C25098 - C25097) * C16815 +
             (C25100 - C25099 + C25102 - C25101) * C50170) *
                C50275 +
            (C28695 * C16814 + C28696 * C16809 +
             (C25531 - C25532 + C25533 - C25534) * C16815 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C392 +
           ((C28693 * C16814 + C28694 * C16809 +
             (C25532 - C25531 + C25534 - C25533) * C16815 +
             (C25536 - C25535 + C25538 - C25537) * C50170) *
                C50275 +
            ((C28686 - C28685 + C28688 - C28687) * C16814 +
             (C28690 - C28689 + C28692 - C28691) * C16809 +
             (C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C16815 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50170) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C16814 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C16809 +
              (C24379 - C24380 + C24381 - C24382) * C16815 +
              (C24383 - C24384 + C24385 - C24386) * C50170) *
                 C50275 +
             ((C27433 - C27434 + C27435 - C27436) * C16814 +
              (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
              C28152 * C50170) *
                 C50196) *
                C50262 +
            (((C27434 - C27433 + C27436 - C27435) * C16814 +
              (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
              C28154 * C50170) *
                 C50275 +
             ((C27441 - C27442 + C27443 - C27444) * C16814 +
              (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
              C28694 * C50170) *
                 C50196) *
                C50099) *
               C893 +
           ((((C24380 - C24379 + C24382 - C24381) * C16814 +
              (C24384 - C24383 + C24386 - C24385) * C16809 +
              (C24388 - C24387 + C24390 - C24389) * C16815 +
              (C24392 - C24391 + C24394 - C24393) * C50170) *
                 C50275 +
             (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
              C26038 * C50170) *
                 C50196) *
                C50262 +
            ((C28151 * C16814 + C28152 * C16809 +
              (C25096 - C25095 + C25098 - C25097) * C16815 +
              (C25100 - C25099 + C25102 - C25101) * C50170) *
                 C50275 +
             (C28695 * C16814 + C28696 * C16809 +
              (C25531 - C25532 + C25533 - C25534) * C16815 +
              (C25535 - C25536 + C25537 - C25538) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C16814 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C16809 +
              (C24403 - C24404 + C24405 - C24406) * C16815 +
              (C24407 - C24408 + C24409 - C24410) * C50170) *
                 C50275 +
             ((C27449 - C27450 + C27451 - C27452) * C16814 +
              (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
              C28156 * C50170) *
                 C50196) *
                C50262 +
            (((C27450 - C27449 + C27452 - C27451) * C16814 +
              (C27454 - C27453 + C27456 - C27455) * C16809 + C28157 * C16815 +
              C28158 * C50170) *
                 C50275 +
             ((C27457 - C27458 + C27459 - C27460) * C16814 +
              (C27461 - C27462 + C27463 - C27464) * C16809 +
              (C27465 - C27466 + C27467 - C27468) * C16815 +
              (C27469 - C27470 + C27471 - C27472) * C50170) *
                 C50196) *
                C50099) *
               C893 +
           ((((C24404 - C24403 + C24406 - C24405) * C16814 +
              (C24408 - C24407 + C24410 - C24409) * C16809 +
              (C24412 - C24411 + C24414 - C24413) * C16815 +
              (C24416 - C24415 + C24418 - C24417) * C50170) *
                 C50275 +
             (C28157 * C16814 + C28158 * C16809 +
              (C25111 - C25112 + C25113 - C25114) * C16815 +
              (C25115 - C25116 + C25117 - C25118) * C50170) *
                 C50196) *
                C50262 +
            ((C28155 * C16814 + C28156 * C16809 +
              (C25112 - C25111 + C25114 - C25113) * C16815 +
              (C25116 - C25115 + C25118 - C25117) * C50170) *
                 C50275 +
             ((C27466 - C27465 + C27468 - C27467) * C16814 +
              (C27470 - C27469 + C27472 - C27471) * C16809 +
              (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
               C49975 * C2538) *
                  C16815 +
              (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
               C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
             C28156 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24404 - C24403 + C24406 - C24405) * C16814 +
             (C24408 - C24407 + C24410 - C24409) * C16809 +
             (C24412 - C24411 + C24414 - C24413) * C16815 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C50275 +
            (C28157 * C16814 + C28158 * C16809 +
             (C25111 - C25112 + C25113 - C25114) * C16815 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C16814 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C16809 +
             (C24731 - C24732 + C24733 - C24734) * C16815 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C50275 +
            ((C27869 - C27870 + C27871 - C27872) * C16814 +
             (C27873 - C27874 + C27875 - C27876) * C16809 +
             (C27667 - C27668 + C27669 - C27670) * C16815 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24732 - C24731 + C24734 - C24733) * C16814 +
             (C24736 - C24735 + C24738 - C24737) * C16809 +
             (C24740 - C24739 + C24742 - C24741) * C16815 +
             (C24744 - C24743 + C24746 - C24745) * C50170) *
                C50275 +
            ((C27668 - C27667 + C27670 - C27669) * C16814 +
             (C27672 - C27671 + C27674 - C27673) * C16809 +
             (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
              C49975 * C1437) *
                 C16815 +
             (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
              C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C16814 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C16809 +
            (C24379 - C24380 + C24381 - C24382) * C16815 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C50275 +
           ((C27433 - C27434 + C27435 - C27436) * C16814 +
            (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
            C28152 * C50170) *
               C50196) *
              C50035 * C964 +
          (((C24380 - C24379 + C24382 - C24381) * C16814 +
            (C24384 - C24383 + C24386 - C24385) * C16809 +
            (C24388 - C24387 + C24390 - C24389) * C16815 +
            (C24392 - C24391 + C24394 - C24393) * C50170) *
               C50275 +
           (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
            C26038 * C50170) *
               C50196) *
              C50035 * C965 +
          ((C24435 * C16814 + C24436 * C16809 +
            (C24396 - C24395 + C24398 - C24397) * C16815 +
            (C24400 - C24399 + C24402 - C24401) * C50170) *
               C50275 +
           ((C25096 - C25095 + C25098 - C25097) * C16814 +
            (C25100 - C25099 + C25102 - C25101) * C16809 +
            (C26029 - C26030 + C26031 - C26032) * C16815 +
            (C26033 - C26034 + C26035 - C26036) * C50170) *
               C50196) *
              C50035 * C966 +
          ((C25375 * C16814 + C25376 * C16809 +
            (C25368 - C25367 + C25370 - C25369) * C16815 +
            (C25372 - C25371 + C25374 - C25373) * C50170) *
               C50275 +
           ((C26030 - C26029 + C26032 - C26031) * C16814 +
            (C26034 - C26033 + C26036 - C26035) * C16809 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C16815 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C50170) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C16814 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C16809 +
              (C24379 - C24380 + C24381 - C24382) * C16815 +
              (C24383 - C24384 + C24385 - C24386) * C50170) *
                 C50275 +
             ((C27433 - C27434 + C27435 - C27436) * C16814 +
              (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
              C28152 * C50170) *
                 C50196) *
                C1544 +
            (((C27434 - C27433 + C27436 - C27435) * C16814 +
              (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
              C28154 * C50170) *
                 C50275 +
             ((C27441 - C27442 + C27443 - C27444) * C16814 +
              (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
              C28694 * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24380 - C24379 + C24382 - C24381) * C16814 +
              (C24384 - C24383 + C24386 - C24385) * C16809 +
              (C24388 - C24387 + C24390 - C24389) * C16815 +
              (C24392 - C24391 + C24394 - C24393) * C50170) *
                 C50275 +
             (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
              C26038 * C50170) *
                 C50196) *
                C1544 +
            ((C28151 * C16814 + C28152 * C16809 + C29347 * C16815 +
              C29348 * C50170) *
                 C50275 +
             (C28695 * C16814 + C28696 * C16809 +
              (C25531 - C25532 + C25533 - C25534) * C16815 +
              (C25535 - C25536 + C25537 - C25538) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C16814 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C16809 +
              (C24403 - C24404 + C24405 - C24406) * C16815 +
              (C24407 - C24408 + C24409 - C24410) * C50170) *
                 C50275 +
             ((C27449 - C27450 + C27451 - C27452) * C16814 +
              (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
              C28156 * C50170) *
                 C50196) *
                C1544 +
            (((C27450 - C27449 + C27452 - C27451) * C16814 +
              (C27454 - C27453 + C27456 - C27455) * C16809 + C28157 * C16815 +
              C28158 * C50170) *
                 C50275 +
             ((C27457 - C27458 + C27459 - C27460) * C16814 +
              (C27461 - C27462 + C27463 - C27464) * C16809 +
              (C27465 - C27466 + C27467 - C27468) * C16815 +
              (C27469 - C27470 + C27471 - C27472) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24404 - C24403 + C24406 - C24405) * C16814 +
              (C24408 - C24407 + C24410 - C24409) * C16809 +
              (C24412 - C24411 + C24414 - C24413) * C16815 +
              (C24416 - C24415 + C24418 - C24417) * C50170) *
                 C50275 +
             (C28157 * C16814 + C28158 * C16809 +
              (C25111 - C25112 + C25113 - C25114) * C16815 +
              (C25115 - C25116 + C25117 - C25118) * C50170) *
                 C50196) *
                C1544 +
            ((C28155 * C16814 + C28156 * C16809 +
              (C25112 - C25111 + C25114 - C25113) * C16815 +
              (C25116 - C25115 + C25118 - C25117) * C50170) *
                 C50275 +
             ((C27466 - C27465 + C27468 - C27467) * C16814 +
              (C27470 - C27469 + C27472 - C27471) * C16809 +
              (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
               C49975 * C2538) *
                  C16815 +
              (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
               C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C50308 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50309 +
           (((C27442 - C27441 + C27444 - C27443) * C16814 +
             (C27446 - C27445 + C27448 - C27447) * C16809 + C28695 * C16815 +
             C28696 * C50170) *
                C50275 +
            ((C29867 - C29868 + C29869 - C29870) * C16814 +
             (C29871 - C29872 + C29873 - C29874) * C16809 +
             (C28685 - C28686 + C28687 - C28688) * C16815 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C1960) *
              C50261 +
          ((((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C50308 +
           ((C28151 * C16814 + C28152 * C16809 + C29347 * C16815 +
             C29348 * C50170) *
                C50275 +
            (C28695 * C16814 + C28696 * C16809 +
             (C25531 - C25532 + C25533 - C25534) * C16815 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50309 +
           ((C28693 * C16814 + C28694 * C16809 +
             (C25532 - C25531 + C25534 - C25533) * C16815 +
             (C25536 - C25535 + C25538 - C25537) * C50170) *
                C50275 +
            ((C28686 - C28685 + C28688 - C28687) * C16814 +
             (C28690 - C28689 + C28692 - C28691) * C16809 +
             (C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C16815 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50170) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C248 +
          ((((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C1544 +
           ((C28151 * C16814 + C28152 * C16809 + C29347 * C16815 +
             C29348 * C50170) *
                C50275 +
            (C28695 * C16814 + C28696 * C16809 +
             (C25531 - C25532 + C25533 - C25534) * C16815 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50099) *
              C249 +
          (((C24435 * C16814 + C24436 * C16809 +
             (C24396 - C24395 + C24398 - C24397) * C16815 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C50275 +
            (C29347 * C16814 + C29348 * C16809 +
             (C26029 - C26030 + C26031 - C26032) * C16815 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C1544 +
           ((C26037 * C16814 + C26038 * C16809 +
             (C26030 - C26029 + C26032 - C26031) * C16815 +
             (C26034 - C26033 + C26036 - C26035) * C50170) *
                C50275 +
            ((C25532 - C25531 + C25534 - C25533) * C16814 +
             (C25536 - C25535 + C25538 - C25537) * C16809 +
             (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
              C49975 * C3504) *
                 C16815 +
             (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
              C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
             C28156 * C50170) *
                C50196) *
               C1544 +
           (((C27450 - C27449 + C27452 - C27451) * C16814 +
             (C27454 - C27453 + C27456 - C27455) * C16809 + C28157 * C16815 +
             C28158 * C50170) *
                C50275 +
            ((C27457 - C27458 + C27459 - C27460) * C16814 +
             (C27461 - C27462 + C27463 - C27464) * C16809 +
             (C27465 - C27466 + C27467 - C27468) * C16815 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C16814 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C16809 +
             (C24731 - C24732 + C24733 - C24734) * C16815 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C50275 +
            ((C27869 - C27870 + C27871 - C27872) * C16814 +
             (C27873 - C27874 + C27875 - C27876) * C16809 +
             (C27667 - C27668 + C27669 - C27670) * C16815 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C1544 +
           (((C27870 - C27869 + C27872 - C27871) * C16814 +
             (C27874 - C27873 + C27876 - C27875) * C16809 +
             (C27668 - C27667 + C27670 - C27669) * C16815 +
             (C27672 - C27671 + C27674 - C27673) * C50170) *
                C50275 +
            ((C49173 * C400 - C50246 * C414 + C49166 * C401 - C49975 * C415) *
                 C16814 +
             (C49173 * C418 - C50246 * C430 + C49166 * C419 - C49975 * C431) *
                 C16809 +
             (C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C16815 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C16814 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C16809 +
            (C24379 - C24380 + C24381 - C24382) * C16815 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C50275 +
           ((C27433 - C27434 + C27435 - C27436) * C16814 +
            (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
            C28152 * C50170) *
               C50196) *
              C1710 +
          (((C27434 - C27433 + C27436 - C27435) * C16814 +
            (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
            C28154 * C50170) *
               C50275 +
           ((C27441 - C27442 + C27443 - C27444) * C16814 +
            (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
            C28694 * C50170) *
               C50196) *
              C1711 +
          (((C27442 - C27441 + C27444 - C27443) * C16814 +
            (C27446 - C27445 + C27448 - C27447) * C16809 + C28695 * C16815 +
            C28696 * C50170) *
               C50275 +
           ((C29867 - C29868 + C29869 - C29870) * C16814 +
            (C29871 - C29872 + C29873 - C29874) * C16809 +
            (C28685 - C28686 + C28687 - C28688) * C16815 +
            (C28689 - C28690 + C28691 - C28692) * C50170) *
               C50196) *
              C1712 +
          (((C29868 - C29867 + C29870 - C29869) * C16814 +
            (C29872 - C29871 + C29874 - C29873) * C16809 +
            (C28686 - C28685 + C28688 - C28687) * C16815 +
            (C28690 - C28689 + C28692 - C28691) * C50170) *
               C50275 +
           ((C49173 * C5318 - C50246 * C5321 + C49166 * C5319 -
             C49975 * C5322) *
                C16814 +
            (C49173 * C5323 - C50246 * C5327 + C49166 * C5324 -
             C49975 * C5328) *
                C16809 +
            (C49173 * C6300 - C50246 * C6302 + C49166 * C6301 -
             C49975 * C6303) *
                C16815 +
            (C49173 * C6304 - C50246 * C6306 + C49166 * C6305 -
             C49975 * C6307) *
                C50170) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C50308 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50309 +
           (((C27442 - C27441 + C27444 - C27443) * C16814 +
             (C27446 - C27445 + C27448 - C27447) * C16809 + C28695 * C16815 +
             C28696 * C50170) *
                C50275 +
            ((C29867 - C29868 + C29869 - C29870) * C16814 +
             (C29871 - C29872 + C29873 - C29874) * C16809 +
             (C28685 - C28686 + C28687 - C28688) * C16815 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
             C28156 * C50170) *
                C50196) *
               C50308 +
           (((C27450 - C27449 + C27452 - C27451) * C16814 +
             (C27454 - C27453 + C27456 - C27455) * C16809 + C28157 * C16815 +
             C28158 * C50170) *
                C50275 +
            ((C27457 - C27458 + C27459 - C27460) * C16814 +
             (C27461 - C27462 + C27463 - C27464) * C16809 +
             (C27465 - C27466 + C27467 - C27468) * C16815 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50309 +
           (((C27458 - C27457 + C27460 - C27459) * C16814 +
             (C27462 - C27461 + C27464 - C27463) * C16809 +
             (C27466 - C27465 + C27468 - C27467) * C16815 +
             (C27470 - C27469 + C27472 - C27471) * C50170) *
                C50275 +
            ((C49173 * C1715 - C50246 * C1719 + C49166 * C1716 -
              C49975 * C1720) *
                 C16814 +
             (C49173 * C1723 - C50246 * C1727 + C49166 * C1724 -
              C49975 * C1728) *
                 C16809 +
             (C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
              C49975 * C5899) *
                 C16815 +
             (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
              C49975 * C5901) *
                 C50170) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C16814 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C16809 +
             (C24403 - C24404 + C24405 - C24406) * C16815 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C50275 +
            ((C27449 - C27450 + C27451 - C27452) * C16814 +
             (C27453 - C27454 + C27455 - C27456) * C16809 + C28155 * C16815 +
             C28156 * C50170) *
                C50196) *
               C1544 +
           (((C27450 - C27449 + C27452 - C27451) * C16814 +
             (C27454 - C27453 + C27456 - C27455) * C16809 + C28157 * C16815 +
             C28158 * C50170) *
                C50275 +
            ((C27457 - C27458 + C27459 - C27460) * C16814 +
             (C27461 - C27462 + C27463 - C27464) * C16809 +
             (C27465 - C27466 + C27467 - C27468) * C16815 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C16814 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C16809 +
             (C24731 - C24732 + C24733 - C24734) * C16815 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C50275 +
            ((C27869 - C27870 + C27871 - C27872) * C16814 +
             (C27873 - C27874 + C27875 - C27876) * C16809 +
             (C27667 - C27668 + C27669 - C27670) * C16815 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C1544 +
           (((C27870 - C27869 + C27872 - C27871) * C16814 +
             (C27874 - C27873 + C27876 - C27875) * C16809 +
             (C27668 - C27667 + C27670 - C27669) * C16815 +
             (C27672 - C27671 + C27674 - C27673) * C50170) *
                C50275 +
            ((C49173 * C400 - C50246 * C414 + C49166 * C401 - C49975 * C415) *
                 C16814 +
             (C49173 * C418 - C50246 * C430 + C49166 * C419 - C49975 * C431) *
                 C16809 +
             (C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C16815 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C16814 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C16809 +
             (C24379 - C24380 + C24381 - C24382) * C16815 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C50275 +
            ((C27433 - C27434 + C27435 - C27436) * C16814 +
             (C27437 - C27438 + C27439 - C27440) * C16809 + C28151 * C16815 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C16814 +
             (C27438 - C27437 + C27440 - C27439) * C16809 + C28153 * C16815 +
             C28154 * C50170) *
                C50275 +
            ((C27441 - C27442 + C27443 - C27444) * C16814 +
             (C27445 - C27446 + C27447 - C27448) * C16809 + C28693 * C16815 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C248 +
          ((((C24380 - C24379 + C24382 - C24381) * C16814 +
             (C24384 - C24383 + C24386 - C24385) * C16809 +
             (C24388 - C24387 + C24390 - C24389) * C16815 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C50275 +
            (C28153 * C16814 + C28154 * C16809 + C26037 * C16815 +
             C26038 * C50170) *
                C50196) *
               C1544 +
           ((C28151 * C16814 + C28152 * C16809 + C29347 * C16815 +
             C29348 * C50170) *
                C50275 +
            (C28695 * C16814 + C28696 * C16809 +
             (C25531 - C25532 + C25533 - C25534) * C16815 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50099) *
              C249 +
          (((C24435 * C16814 + C24436 * C16809 +
             (C24396 - C24395 + C24398 - C24397) * C16815 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C50275 +
            (C29347 * C16814 + C29348 * C16809 +
             (C26029 - C26030 + C26031 - C26032) * C16815 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C1544 +
           ((C26037 * C16814 + C26038 * C16809 +
             (C26030 - C26029 + C26032 - C26031) * C16815 +
             (C26034 - C26033 + C26036 - C26035) * C50170) *
                C50275 +
            ((C25532 - C25531 + C25534 - C25533) * C16814 +
             (C25536 - C25535 + C25538 - C25537) * C16809 +
             (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
              C49975 * C3504) *
                 C16815 +
             (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
              C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C50261 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C50261 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50035 * C50261 +
           ((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C16814 +
            (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C16809 +
            (C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
             C16813 * C262 - C16808 * C281) *
                C16815 +
            (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
             C16813 * C282 - C16808 * C292) *
                C50170) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C50261 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C50071) *
              C50304 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C50261 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50071) *
              C50305 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50035 * C50261 +
           ((C19878 - C19877) * C19538 + (C19880 - C19879) * C19533 +
            (C19882 - C19881) * C19539 + (C19884 - C19883) * C19534 +
            (C19886 - C19885) * C19540 + (C19888 - C19887) * C19535 +
            (C19537 * C2315 - C49970 * C2320) * C19541 +
            (C19537 * C2321 - C49970 * C2324) * C19536) *
               C50132 * C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C16814 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C16809 +
             (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
             (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                C50132 * C50262 +
            ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C16814 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C16809 +
             (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
             (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
             (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                C50132 * C50262 +
            ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
             (C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
              C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                 C16815 +
             (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
              C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C16814 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C16809 +
             (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
             (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
                C50132 * C50262 +
            ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C16814 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C16809 +
             (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
             (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
             (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
                C50132 * C50262 +
            ((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C16814 +
             (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C16809 +
             (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C16815 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C19538 +
             (C49970 * C143 - C19537 * C133) * C19533 +
             (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
             C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
             C19676 * C19536) *
                C50132 * C50262 +
            ((C19537 * C394 - C49970 * C404) * C19538 +
             (C19537 * C408 - C49970 * C424) * C19533 +
             (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
             (C20121 - C20122) * C19540 + (C20123 - C20124) * C19535 +
             (C20125 - C20126) * C19541 + (C20127 - C20128) * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
             (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
             (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
             (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
                C50132 * C50262 +
            ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
             (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
             (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
             (C49970 * C4013 - C19537 * C4011) * C19541 +
             (C49970 * C4017 - C19537 * C4015) * C19536) *
                C50132 * C50099) *
               C50071) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C19538 +
             (C19537 * C134 - C49970 * C144) * C19533 +
             (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
             C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
             C19680 * C19536) *
                C50132 * C50262 +
            ((C49970 * C405 - C19537 * C395) * C19538 +
             (C49970 * C425 - C19537 * C409) * C19533 +
             (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
             (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
             (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
             (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
             (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
             (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
                C50132 * C50262 +
            ((C20130 - C20129) * C19538 + (C20132 - C20131) * C19533 +
             (C20134 - C20133) * C19539 + (C20136 - C20135) * C19534 +
             (C20138 - C20137) * C19540 + (C20140 - C20139) * C19535 +
             (C19537 * C4012 - C49970 * C4014) * C19541 +
             (C19537 * C4016 - C49970 * C4018) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C248 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C249 +
           ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
             C16808 * C975 - C16813 * C971) *
                C16815 +
            (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
             C16808 * C983 - C16813 * C979) *
                C50170) *
               C50132 * C50035 * C250) *
              C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C248 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C249 +
           ((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C16814 +
            (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C16809 +
            (C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
             C16813 * C972 - C16808 * C976) *
                C16815 +
            (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
             C16813 * C980 - C16808 * C984) *
                C50170) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
            C16808 * C265 - C16813 * C255) *
               C16815 +
           (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
            C16808 * C285 - C16813 * C269) *
               C50170) *
              C50132 * C50035 * C50019 * C113 +
          ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
            C16813 * C125 - C16808 * C132) *
               C16814 +
           (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
            C16813 * C136 - C16808 * C146) *
               C16809 +
           (C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
            C16813 * C256 - C16808 * C266) *
               C16815 +
           (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
            C16813 * C270 - C16808 * C286) *
               C50170) *
              C50132 * C50035 * C50019 * C114 +
          ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
            C16808 * C137 - C16813 * C126) *
               C16814 +
           (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
            C16808 * C147 - C16813 * C138) *
               C16809 +
           (C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
            C16808 * C279 - C16813 * C261) *
               C16815 +
           (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
            C16808 * C291 - C16813 * C280) *
               C50170) *
              C50132 * C50035 * C50019 * C115 +
          ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
            C16813 * C127 - C16808 * C139) *
               C16814 +
           (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
            C16813 * C140 - C16808 * C148) *
               C16809 +
           (C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
            C16813 * C537 - C16808 * C538) *
               C16815 +
           (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
            C16813 * C539 - C16808 * C540) *
               C50170) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C391 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
             C16813 * C777 - C16808 * C782) *
                C16815 +
            (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
             C16813 * C786 - C16808 * C792) *
                C50170) *
               C50132 * C392 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C16806 * C1087 - C16811 * C1083 + C16807 * C1088 - C16812 * C1084 +
             C16808 * C1089 - C16813 * C1085) *
                C16815 +
            (C16806 * C1095 - C16811 * C1091 + C16807 * C1096 - C16812 * C1092 +
             C16808 * C1097 - C16813 * C1093) *
                C50170) *
               C50132 * C393) *
              C50019 * C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C391 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
             C16808 * C783 - C16813 * C778) *
                C16815 +
            (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
             C16808 * C793 - C16813 * C787) *
                C50170) *
               C50132 * C392 +
           ((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
             C16813 * C401 - C16808 * C415) *
                C16814 +
            (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
             C16813 * C419 - C16808 * C431) *
                C16809 +
            (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 - C16807 * C1089 +
             C16813 * C1086 - C16808 * C1090) *
                C16815 +
            (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 - C16807 * C1097 +
             C16813 * C1094 - C16808 * C1098) *
                C50170) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C49970 * C263 - C19537 * C253) * C19539 +
           (C49970 * C283 - C19537 * C267) * C19534 +
           (C49970 * C271 - C19537 * C257) * C19540 +
           (C49970 * C287 - C19537 * C275) * C19535 +
           (C49970 * C973 - C19537 * C969) * C19541 +
           (C49970 * C981 - C19537 * C977) * C19536) *
              C50132 * C50035 * C50019 * C113 +
          ((C19537 * C123 - C49970 * C130) * C19538 +
           (C19537 * C134 - C49970 * C144) * C19533 +
           (C19537 * C254 - C49970 * C264) * C19539 +
           (C19537 * C268 - C49970 * C284) * C19534 +
           (C19537 * C258 - C49970 * C272) * C19540 +
           (C19537 * C276 - C49970 * C288) * C19535 +
           (C19537 * C970 - C49970 * C974) * C19541 +
           (C19537 * C978 - C49970 * C982) * C19536) *
              C50132 * C50035 * C50019 * C114 +
          ((C49970 * C131 - C19537 * C124) * C19538 +
           (C49970 * C145 - C19537 * C135) * C19533 +
           (C49970 * C265 - C19537 * C255) * C19539 +
           (C49970 * C285 - C19537 * C269) * C19534 +
           (C49970 * C273 - C19537 * C259) * C19540 +
           (C49970 * C289 - C19537 * C277) * C19535 +
           (C49970 * C975 - C19537 * C971) * C19541 +
           (C49970 * C983 - C19537 * C979) * C19536) *
              C50132 * C50035 * C50019 * C115 +
          ((C19537 * C125 - C49970 * C132) * C19538 +
           (C19537 * C136 - C49970 * C146) * C19533 +
           (C19537 * C256 - C49970 * C266) * C19539 +
           (C19537 * C270 - C49970 * C286) * C19534 +
           (C19537 * C260 - C49970 * C274) * C19540 +
           (C19537 * C278 - C49970 * C290) * C19535 +
           (C19537 * C972 - C49970 * C976) * C19541 +
           (C19537 * C980 - C49970 * C984) * C19536) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C248 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C249 +
           (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 +
            (C49970 * C3335 - C19537 * C3333) * C19541 +
            (C49970 * C3339 - C19537 * C3337) * C19536) *
               C50132 * C50035 * C250) *
              C251 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C248 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C249 +
           (C19677 * C19538 + C19678 * C19533 + C19679 * C19539 +
            C19680 * C19534 + (C19670 - C19669) * C19540 +
            (C19672 - C19671) * C19535 +
            (C19537 * C3334 - C49970 * C3336) * C19541 +
            (C19537 * C3338 - C49970 * C3340) * C19536) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C391 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C19537 * C775 - C49970 * C780) * C19539 +
            (C19537 * C784 - C49970 * C790) * C19534 +
            (C19537 * C1430 - C49970 * C1434) * C19540 +
            (C19537 * C1438 - C49970 * C1442) * C19535 +
            (C19537 * C3045 - C49970 * C3048) * C19541 +
            (C19537 * C3050 - C49970 * C3054) * C19536) *
               C50132 * C392 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C49970 * C1087 - C19537 * C1083) * C19539 +
            (C49970 * C1095 - C19537 * C1091) * C19534 +
            (C49970 * C2534 - C19537 * C2531) * C19540 +
            (C49970 * C2540 - C19537 * C2536) * C19535 +
            (C49970 * C3503 - C19537 * C3501) * C19541 +
            (C49970 * C3507 - C19537 * C3505) * C19536) *
               C50132 * C393) *
              C50019 * C251 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C391 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C49970 * C781 - C19537 * C776) * C19539 +
            (C49970 * C791 - C19537 * C785) * C19534 +
            (C49970 * C1435 - C19537 * C1431) * C19540 +
            (C49970 * C1443 - C19537 * C1439) * C19535 +
            (C49970 * C3049 - C19537 * C3046) * C19541 +
            (C49970 * C3055 - C19537 * C3051) * C19536) *
               C50132 * C392 +
           ((C19537 * C399 - C49970 * C413) * C19538 +
            (C19537 * C417 - C49970 * C429) * C19533 +
            (C19537 * C1084 - C49970 * C1088) * C19539 +
            (C19537 * C1092 - C49970 * C1096) * C19534 +
            (C19537 * C2532 - C49970 * C2535) * C19540 +
            (C19537 * C2537 - C49970 * C2541) * C19535 +
            (C19537 * C3502 - C49970 * C3504) * C19541 +
            (C19537 * C3506 - C49970 * C3508) * C19536) *
               C50132 * C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50262 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
             C16813 * C777 - C16808 * C782) *
                C16815 +
            (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
             C16813 * C786 - C16808 * C792) *
                C50170) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50262 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
             C16808 * C783 - C16813 * C778) *
                C16815 +
            (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
             C16808 * C793 - C16813 * C787) *
                C50170) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50262 +
           ((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
             C16813 * C402 - C16808 * C420) *
                C16814 +
            (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
             C16813 * C421 - C16808 * C432) *
                C16809 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C16815 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50170) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50262 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C19537 * C775 - C49970 * C780) * C19539 +
            (C19537 * C784 - C49970 * C790) * C19534 +
            (C19537 * C1430 - C49970 * C1434) * C19540 +
            (C19537 * C1438 - C49970 * C1442) * C19535 +
            (C19537 * C3045 - C49970 * C3048) * C19541 +
            (C19537 * C3050 - C49970 * C3054) * C19536) *
               C50132 * C50099) *
              C50019 * C50304 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50262 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C49970 * C781 - C19537 * C776) * C19539 +
            (C49970 * C791 - C19537 * C785) * C19534 +
            (C49970 * C1435 - C19537 * C1431) * C19540 +
            (C49970 * C1443 - C19537 * C1439) * C19535 +
            (C49970 * C3049 - C19537 * C3046) * C19541 +
            (C49970 * C3055 - C19537 * C3051) * C19536) *
               C50132 * C50099) *
              C50019 * C50305 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50262 +
           ((C19537 * C396 - C49970 * C406) * C19538 +
            (C19537 * C410 - C49970 * C426) * C19533 +
            (C19537 * C777 - C49970 * C782) * C19539 +
            (C19537 * C786 - C49970 * C792) * C19534 +
            (C19537 * C1432 - C49970 * C1436) * C19540 +
            (C19537 * C1440 - C49970 * C1444) * C19535 +
            (C19537 * C3047 - C49970 * C3052) * C19541 +
            (C19537 * C3053 - C49970 * C3056) * C19536) *
               C50132 * C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
            C16808 * C265 - C16813 * C255) *
               C16815 +
           (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
            C16808 * C285 - C16813 * C269) *
               C50170) *
              C50132 * C50035 * C50019 * C113 +
          ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
            C16813 * C125 - C16808 * C132) *
               C16814 +
           (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
            C16813 * C136 - C16808 * C146) *
               C16809 +
           (C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
            C16813 * C256 - C16808 * C266) *
               C16815 +
           (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
            C16813 * C270 - C16808 * C286) *
               C50170) *
              C50132 * C50035 * C50019 * C114 +
          ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
            C16808 * C137 - C16813 * C126) *
               C16814 +
           (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
            C16808 * C147 - C16813 * C138) *
               C16809 +
           (C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
            C16808 * C279 - C16813 * C261) *
               C16815 +
           (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
            C16808 * C291 - C16813 * C280) *
               C50170) *
              C50132 * C50035 * C50019 * C115 +
          ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
            C16813 * C127 - C16808 * C139) *
               C16814 +
           (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
            C16813 * C140 - C16808 * C148) *
               C16809 +
           (C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
            C16813 * C537 - C16808 * C538) *
               C16815 +
           (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
            C16813 * C539 - C16808 * C540) *
               C50170) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C248 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C249 +
           ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
             C16808 * C975 - C16813 * C971) *
                C16815 +
            (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
             C16808 * C983 - C16813 * C979) *
                C50170) *
               C50132 * C50035 * C250) *
              C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C248 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C249 +
           ((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C16814 +
            (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C16809 +
            (C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
             C16813 * C972 - C16808 * C976) *
                C16815 +
            (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
             C16813 * C980 - C16808 * C984) *
                C50170) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C49970 * C263 - C19537 * C253) * C19539 +
           (C49970 * C283 - C19537 * C267) * C19534 +
           (C49970 * C271 - C19537 * C257) * C19540 +
           (C49970 * C287 - C19537 * C275) * C19535 +
           (C49970 * C973 - C19537 * C969) * C19541 +
           (C49970 * C981 - C19537 * C977) * C19536) *
              C50132 * C50035 * C50019 * C113 +
          ((C19537 * C123 - C49970 * C130) * C19538 +
           (C19537 * C134 - C49970 * C144) * C19533 +
           (C19537 * C254 - C49970 * C264) * C19539 +
           (C19537 * C268 - C49970 * C284) * C19534 +
           (C19537 * C258 - C49970 * C272) * C19540 +
           (C19537 * C276 - C49970 * C288) * C19535 +
           (C19537 * C970 - C49970 * C974) * C19541 +
           (C19537 * C978 - C49970 * C982) * C19536) *
              C50132 * C50035 * C50019 * C114 +
          ((C49970 * C131 - C19537 * C124) * C19538 +
           (C49970 * C145 - C19537 * C135) * C19533 +
           (C49970 * C265 - C19537 * C255) * C19539 +
           (C49970 * C285 - C19537 * C269) * C19534 +
           (C49970 * C273 - C19537 * C259) * C19540 +
           (C49970 * C289 - C19537 * C277) * C19535 +
           (C49970 * C975 - C19537 * C971) * C19541 +
           (C49970 * C983 - C19537 * C979) * C19536) *
              C50132 * C50035 * C50019 * C115 +
          ((C19537 * C125 - C49970 * C132) * C19538 +
           (C19537 * C136 - C49970 * C146) * C19533 +
           (C19537 * C256 - C49970 * C266) * C19539 +
           (C19537 * C270 - C49970 * C286) * C19534 +
           (C19537 * C260 - C49970 * C274) * C19540 +
           (C19537 * C278 - C49970 * C290) * C19535 +
           (C19537 * C972 - C49970 * C976) * C19541 +
           (C19537 * C980 - C49970 * C984) * C19536) *
              C50132 * C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C248 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C249 +
           (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 +
            (C49970 * C3335 - C19537 * C3333) * C19541 +
            (C49970 * C3339 - C19537 * C3337) * C19536) *
               C50132 * C50035 * C250) *
              C251 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C248 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C249 +
           (C19677 * C19538 + C19678 * C19533 + C19679 * C19539 +
            C19680 * C19534 + (C19670 - C19669) * C19540 +
            (C19672 - C19671) * C19535 +
            (C19537 * C3334 - C49970 * C3336) * C19541 +
            (C19537 * C3338 - C49970 * C3340) * C19536) *
               C50132 * C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C50306 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50307 +
           ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C50306 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50307 +
           ((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C16814 +
            (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C16809 +
            (C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
             C16813 * C972 - C16808 * C976) *
                C16815 +
            (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
             C16813 * C980 - C16808 * C984) *
                C50170) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C50306 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C50035 * C50307 +
           (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C50035 * C1199) *
              C50253 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C50306 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50307 +
           (C19677 * C19538 + C19678 * C19533 + C19679 * C19539 +
            C19680 * C19534 + (C19670 - C19669) * C19540 +
            (C19672 - C19671) * C19535 +
            (C19537 * C3334 - C49970 * C3336) * C19541 +
            (C19537 * C3338 - C49970 * C3340) * C19536) *
               C50132 * C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50262 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C50306 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50262 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50099) *
              C50307 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C50262 +
           ((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C16814 +
            (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C16809 +
            (C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C16815 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50170) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50262 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C50306 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C50262 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50099) *
              C50307 +
          ((C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C50262 +
           (C20761 * C19538 + C20762 * C19533 + C20763 * C19539 +
            C20764 * C19534 + (C20766 - C20765) * C19540 +
            (C20768 - C20767) * C19535 +
            (C19537 * C20756 - C49970 * C20757) * C19541 +
            (C19537 * C20758 - C49970 * C20759) * C19536) *
               C50132 * C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
           (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
              C50132 * C50035 * C964 +
          ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
           (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
           (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
           (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
              C50132 * C50035 * C965 +
          ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
           (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
           (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
           (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
              C50132 * C50035 * C966 +
          ((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C16814 +
           (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C16809 +
           (C16811 * C2313 - C16806 * C2316 + C16812 * C2314 - C16807 * C2317 +
            C16813 * C2315 - C16808 * C2320) *
               C16815 +
           (C16811 * C2318 - C16806 * C2322 + C16812 * C2319 - C16807 * C2323 +
            C16813 * C2321 - C16808 * C2324) *
               C50170) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C893 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C893 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50035 * C893 +
           ((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C16814 +
            (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C16809 +
            (C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
             C16813 * C262 - C16808 * C281) *
                C16815 +
            (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
             C16813 * C282 - C16808 * C292) *
                C50170) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C391 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C392 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
            (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
               C50132 * C393) *
              C893 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C391 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C16806 * C1434 - C16811 * C1430 + C16807 * C1435 - C16812 * C1431 +
             C16808 * C1436 - C16813 * C1432) *
                C16815 +
            (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 - C16812 * C1439 +
             C16808 * C1444 - C16813 * C1440) *
                C50170) *
               C50132 * C392 +
           ((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C16814 +
            (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C16809 +
            (C16811 * C2531 - C16806 * C2534 + C16812 * C2532 - C16807 * C2535 +
             C16813 * C2533 - C16808 * C2538) *
                C16815 +
            (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 - C16807 * C2541 +
             C16813 * C2539 - C16808 * C2542) *
                C50170) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C893 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C893 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50035 * C893 +
           ((C19878 - C19877) * C19538 + (C19880 - C19879) * C19533 +
            (C19882 - C19881) * C19539 + (C19884 - C19883) * C19534 +
            (C19886 - C19885) * C19540 + (C19888 - C19887) * C19535 +
            (C19537 * C2315 - C49970 * C2320) * C19541 +
            (C19537 * C2321 - C49970 * C2324) * C19536) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
           C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
           C19676 * C19536) *
              C50132 * C50035 * C964 +
          ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
           (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
           C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
           C20312 * C19536) *
              C50132 * C50035 * C965 +
          (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
           C19676 * C19534 + (C19654 - C19653) * C19540 +
           (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
           (C20315 - C20316) * C19536) *
              C50132 * C50035 * C966 +
          (C20309 * C19538 + C20310 * C19533 + C20311 * C19539 +
           C20312 * C19534 + (C20314 - C20313) * C19540 +
           (C20316 - C20315) * C19535 +
           (C19537 * C20304 - C49970 * C20305) * C19541 +
           (C19537 * C20306 - C49970 * C20307) * C19536) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C391 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            (C20121 - C20122) * C19540 + (C20123 - C20124) * C19535 +
            (C20125 - C20126) * C19541 + (C20127 - C20128) * C19536) *
               C50132 * C392 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
            (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
            (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
               C50132 * C393) *
              C893 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C391 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C49970 * C4013 - C19537 * C4011) * C19541 +
            (C49970 * C4017 - C19537 * C4015) * C19536) *
               C50132 * C392 +
           ((C20420 - C20419) * C19538 + (C20422 - C20421) * C19533 +
            (C20424 - C20423) * C19539 + (C20426 - C20425) * C19534 +
            (C20428 - C20427) * C19540 + (C20430 - C20429) * C19535 +
            (C19537 * C20414 - C49970 * C20415) * C19541 +
            (C19537 * C20416 - C49970 * C20417) * C19536) *
               C50132 * C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C16814 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C16809 +
             (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
             (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                C50132 * C50262 +
            ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C16814 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C16809 +
             (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
                C50132 * C50099) *
               C893 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
             (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
             (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                C50132 * C50262 +
            ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
             (C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
              C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                 C16815 +
             (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
              C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C16814 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C16809 +
             (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
             (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
                C50132 * C50262 +
            ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C16814 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C16809 +
             (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
                C50132 * C50099) *
               C893 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
             (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
             (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
                C50132 * C50262 +
            ((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C16814 +
             (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C16809 +
             (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C16815 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C19538 +
             (C49970 * C143 - C19537 * C133) * C19533 +
             (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
             C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
             C19676 * C19536) *
                C50132 * C50262 +
            ((C19537 * C394 - C49970 * C404) * C19538 +
             (C19537 * C408 - C49970 * C424) * C19533 +
             (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
             (C20121 - C20122) * C19540 + (C20123 - C20124) * C19535 +
             (C20125 - C20126) * C19541 + (C20127 - C20128) * C19536) *
                C50132 * C50099) *
               C893 +
           (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
             (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
             C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
             C20312 * C19536) *
                C50132 * C50262 +
            ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
             (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
             (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
             (C49970 * C4013 - C19537 * C4011) * C19541 +
             (C49970 * C4017 - C19537 * C4015) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C19538 +
             (C19537 * C134 - C49970 * C144) * C19533 +
             (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
             C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
             C19680 * C19536) *
                C50132 * C50262 +
            ((C49970 * C405 - C19537 * C395) * C19538 +
             (C49970 * C425 - C19537 * C409) * C19533 +
             (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
             (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
             (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
                C50132 * C50099) *
               C893 +
           (((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
             (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
             (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
             (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
                C50132 * C50262 +
            ((C20130 - C20129) * C19538 + (C20132 - C20131) * C19533 +
             (C20134 - C20133) * C19539 + (C20136 - C20135) * C19534 +
             (C20138 - C20137) * C19540 + (C20140 - C20139) * C19535 +
             (C19537 * C4012 - C49970 * C4014) * C19541 +
             (C19537 * C4016 - C49970 * C4018) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50035 * C893 +
           ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50035 * C893 +
           ((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
            (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
            (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
            (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C50035 * C893 +
           ((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C16814 +
            (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C16809 +
            (C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
             C16813 * C262 - C16808 * C281) *
                C16815 +
            (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
             C16813 * C282 - C16808 * C292) *
                C50170) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
           (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
              C50132 * C50035 * C964 +
          ((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
           (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
           (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
           (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
              C50132 * C50035 * C965 +
          ((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
           (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
           (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
           (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
              C50132 * C50035 * C966 +
          ((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C16814 +
           (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C16809 +
           (C16811 * C2313 - C16806 * C2316 + C16812 * C2314 - C16807 * C2317 +
            C16813 * C2315 - C16808 * C2320) *
               C16815 +
           (C16811 * C2318 - C16806 * C2322 + C16812 * C2319 - C16807 * C2323 +
            C16813 * C2321 - C16808 * C2324) *
               C50170) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50035 * C893 +
           ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            (C19650 - C19649) * C19540 + (C19652 - C19651) * C19535 +
            (C19653 - C19654) * C19541 + (C19655 - C19656) * C19536) *
               C50132 * C50035 * C50071) *
              C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50035 * C893 +
           ((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
            (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
            (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
            (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
               C50132 * C50035 * C50071) *
              C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C50035 * C893 +
           ((C19878 - C19877) * C19538 + (C19880 - C19879) * C19533 +
            (C19882 - C19881) * C19539 + (C19884 - C19883) * C19534 +
            (C19886 - C19885) * C19540 + (C19888 - C19887) * C19535 +
            (C19537 * C2315 - C49970 * C2320) * C19541 +
            (C19537 * C2321 - C49970 * C2324) * C19536) *
               C50132 * C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
           C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
           C19676 * C19536) *
              C50132 * C50035 * C964 +
          ((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
           (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
           C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
           C20312 * C19536) *
              C50132 * C50035 * C965 +
          (C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
           C19676 * C19534 + (C19654 - C19653) * C19540 +
           (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
           (C20315 - C20316) * C19536) *
              C50132 * C50035 * C966 +
          (C20309 * C19538 + C20310 * C19533 + C20311 * C19539 +
           C20312 * C19534 + (C20314 - C20313) * C19540 +
           (C20316 - C20315) * C19535 +
           (C19537 * C20304 - C49970 * C20305) * C19541 +
           (C19537 * C20306 - C49970 * C20307) * C19536) *
              C50132 * C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C16814 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C16809 +
             (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
             (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
                C50132 * C1544 +
            ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C16814 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C16809 +
             (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
             (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
             (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
                C50132 * C1544 +
            ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
             (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C16814 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C16809 +
             (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
             (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
                C50132 * C1544 +
            ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C16814 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C16809 +
             (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
                C50132 * C50099) *
               C50261 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C16814 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C16809 +
             (C16999 - C17000 + C17001 - C17002 + C17003 - C17004) * C16815 +
             (C17005 - C17006 + C17007 - C17008 + C17009 - C17010) * C50170) *
                C50132 * C1544 +
            ((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C16814 +
             (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C16809 +
             (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C16815 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50170) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C19538 +
             (C49970 * C143 - C19537 * C133) * C19533 +
             (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
             C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
             C19676 * C19536) *
                C50132 * C1544 +
            ((C19537 * C394 - C49970 * C404) * C19538 +
             (C19537 * C408 - C49970 * C424) * C19533 +
             (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
             C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
             C20764 * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
             (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
             C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
             C20312 * C19536) *
                C50132 * C1544 +
            ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
             (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
             (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
             (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C19538 +
             (C19537 * C134 - C49970 * C144) * C19533 +
             (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
             C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
             C19680 * C19536) *
                C50132 * C1544 +
            ((C49970 * C405 - C19537 * C395) * C19538 +
             (C49970 * C425 - C19537 * C409) * C19533 +
             (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
             (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
             (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
                C50132 * C50099) *
               C50261 +
           (((C19658 - C19657) * C19538 + (C19660 - C19659) * C19533 +
             (C19662 - C19661) * C19539 + (C19664 - C19663) * C19534 +
             (C19666 - C19665) * C19540 + (C19668 - C19667) * C19535 +
             (C19669 - C19670) * C19541 + (C19671 - C19672) * C19536) *
                C50132 * C1544 +
            ((C20130 - C20129) * C19538 + (C20132 - C20131) * C19533 +
             (C20134 - C20133) * C19539 + (C20136 - C20135) * C19534 +
             (C20138 - C20137) * C19540 + (C20140 - C20139) * C19535 +
             (C19537 * C4012 - C49970 * C4014) * C19541 +
             (C19537 * C4016 - C49970 * C4018) * C19536) *
                C50132 * C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50308 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50309 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
            (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
               C50132 * C1960) *
              C50261 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C50308 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50309 +
           ((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C16814 +
            (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C16809 +
            (C16811 * C2531 - C16806 * C2534 + C16812 * C2532 - C16807 * C2535 +
             C16813 * C2533 - C16808 * C2538) *
                C16815 +
            (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 - C16807 * C2541 +
             C16813 * C2539 - C16808 * C2542) *
                C50170) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50308 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50309 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
            (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
            (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
               C50132 * C1960) *
              C50261 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C50308 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50309 +
           ((C20420 - C20419) * C19538 + (C20422 - C20421) * C19533 +
            (C20424 - C20423) * C19539 + (C20426 - C20425) * C19534 +
            (C20428 - C20427) * C19540 + (C20430 - C20429) * C19535 +
            (C19537 * C20414 - C49970 * C20415) * C19541 +
            (C19537 * C20416 - C49970 * C20417) * C19536) *
               C50132 * C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C1544 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C248 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C1544 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50099) *
              C249 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C1544 +
           ((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C16814 +
            (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C16809 +
            (C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C16815 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50170) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C1544 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C1544 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
            (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C1544 +
           ((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
             C16813 * C402 - C16808 * C420) *
                C16814 +
            (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
             C16813 * C421 - C16808 * C432) *
                C16809 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C16815 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50170) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C16814 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C16809 +
           (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
           (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
              C50132 * C1710 +
          ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
            C16813 * C396 - C16808 * C406) *
               C16814 +
           (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
            C16813 * C410 - C16808 * C426) *
               C16809 +
           (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
           (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
              C50132 * C1711 +
          ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
            C16808 * C414 - C16813 * C400) *
               C16814 +
           (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
            C16808 * C430 - C16813 * C418) *
               C16809 +
           (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
           (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
              C50132 * C1712 +
          ((C16811 * C1714 - C16806 * C1718 + C16812 * C1715 - C16807 * C1719 +
            C16813 * C1716 - C16808 * C1720) *
               C16814 +
           (C16811 * C1722 - C16806 * C1726 + C16812 * C1723 - C16807 * C1727 +
            C16813 * C1724 - C16808 * C1728) *
               C16809 +
           (C16811 * C4423 - C16806 * C4427 + C16812 * C4424 - C16807 * C4428 +
            C16813 * C5898 - C16808 * C5899) *
               C16815 +
           (C16811 * C4429 - C16806 * C4435 + C16812 * C4430 - C16807 * C4436 +
            C16813 * C5900 - C16808 * C5901) *
               C50170) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C1544 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
            (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
            (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C1544 +
           ((C19537 * C396 - C49970 * C406) * C19538 +
            (C19537 * C410 - C49970 * C426) * C19533 +
            (C19537 * C777 - C49970 * C782) * C19539 +
            (C19537 * C786 - C49970 * C792) * C19534 +
            (C19537 * C1432 - C49970 * C1436) * C19540 +
            (C19537 * C1440 - C49970 * C1444) * C19535 +
            (C19537 * C3047 - C49970 * C3052) * C19541 +
            (C19537 * C3053 - C49970 * C3056) * C19536) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C248 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C1544 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50099) *
              C249 +
          ((C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C1544 +
           (C20761 * C19538 + C20762 * C19533 + C20763 * C19539 +
            C20764 * C19534 + (C20766 - C20765) * C19540 +
            (C20768 - C20767) * C19535 +
            (C19537 * C20756 - C49970 * C20757) * C19541 +
            (C19537 * C20758 - C49970 * C20759) * C19536) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49970 * C129 - C19537 * C122) * C19538 +
           (C49970 * C143 - C19537 * C133) * C19533 +
           (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
           C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
           C19676 * C19536) *
              C50132 * C1710 +
          ((C19537 * C394 - C49970 * C404) * C19538 +
           (C19537 * C408 - C49970 * C424) * C19533 +
           (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
           C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
           C20764 * C19536) *
              C50132 * C1711 +
          ((C49970 * C412 - C19537 * C398) * C19538 +
           (C49970 * C428 - C19537 * C416) * C19533 +
           (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
           (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
           (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
              C50132 * C1712 +
          ((C19537 * C1714 - C49970 * C1718) * C19538 +
           (C19537 * C1722 - C49970 * C1726) * C19533 +
           (C19537 * C4423 - C49970 * C4427) * C19539 +
           (C19537 * C4429 - C49970 * C4435) * C19534 +
           (C19537 * C4425 - C49970 * C4431) * C19540 +
           (C19537 * C4433 - C49970 * C4437) * C19535 +
           (C19537 * C21030 - C49970 * C21031) * C19541 +
           (C19537 * C21032 - C49970 * C21033) * C19536) *
              C50132 * C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C50308 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50309 +
           ((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C16814 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C16809 +
            (C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C16815 +
            (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50170) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C50308 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
            (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
               C50132 * C50309 +
           ((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
             C16813 * C401 - C16808 * C415) *
                C16814 +
            (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
             C16813 * C419 - C16808 * C431) *
                C16809 +
            (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 - C16807 * C1089 +
             C16813 * C1086 - C16808 * C1090) *
                C16815 +
            (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 - C16807 * C1097 +
             C16813 * C1094 - C16808 * C1098) *
                C50170) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C50308 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50309 +
           ((C49970 * C412 - C19537 * C398) * C19538 +
            (C49970 * C428 - C19537 * C416) * C19533 +
            (C20419 - C20420) * C19539 + (C20421 - C20422) * C19534 +
            (C20423 - C20424) * C19540 + (C20425 - C20426) * C19535 +
            (C20427 - C20428) * C19541 + (C20429 - C20430) * C19536) *
               C50132 * C1960) *
              C50019 * C50253 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C50308 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
            (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
            (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
               C50132 * C50309 +
           ((C19537 * C399 - C49970 * C413) * C19538 +
            (C19537 * C417 - C49970 * C429) * C19533 +
            (C19537 * C1084 - C49970 * C1088) * C19539 +
            (C19537 * C1092 - C49970 * C1096) * C19534 +
            (C19537 * C2532 - C49970 * C2535) * C19540 +
            (C19537 * C2537 - C49970 * C2541) * C19535 +
            (C19537 * C3502 - C49970 * C3504) * C19541 +
            (C19537 * C3506 - C49970 * C3508) * C19536) *
               C50132 * C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C1544 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C16814 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C16809 +
            (C16987 - C16988 + C16989 - C16990 + C16991 - C16992) * C16815 +
            (C16993 - C16994 + C16995 - C16996 + C16997 - C16998) * C50170) *
               C50132 * C1544 +
           ((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
             C16808 * C407 - C16813 * C397) *
                C16814 +
            (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
             C16808 * C427 - C16813 * C411) *
                C16809 +
            (C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C16815 +
            (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50170) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C16814 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C16809 +
            (C17303 - C17304 + C17305 - C17306 + C17307 - C17308) * C16815 +
            (C17309 - C17310 + C17311 - C17312 + C17313 - C17314) * C50170) *
               C50132 * C1544 +
           ((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
             C16813 * C402 - C16808 * C420) *
                C16814 +
            (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
             C16813 * C421 - C16808 * C432) *
                C16809 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C16815 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50170) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C16814 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C16809 +
            (C16963 - C16964 + C16965 - C16966 + C16967 - C16968) * C16815 +
            (C16969 - C16970 + C16971 - C16972 + C16973 - C16974) * C50170) *
               C50132 * C1544 +
           ((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C16814 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C16809 +
            (C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C16815 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50170) *
               C50132 * C50099) *
              C248 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C16814 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C16809 +
            (C16975 - C16976 + C16977 - C16978 + C16979 - C16980) * C16815 +
            (C16981 - C16982 + C16983 - C16984 + C16985 - C16986) * C50170) *
               C50132 * C1544 +
           ((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C16814 +
            (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C16809 +
            (C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C16815 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50170) *
               C50132 * C50099) *
              C249 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C16814 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C16809 +
            (C17923 - C17924 + C17925 - C17926 + C17927 - C17928) * C16815 +
            (C17929 - C17930 + C17931 - C17932 + C17933 - C17934) * C50170) *
               C50132 * C1544 +
           ((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C16814 +
            (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C16809 +
            (C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C16815 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50170) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C50019 * C895 +
          (((C19537 * C123 - C49970 * C130) * C19538 +
            (C19537 * C134 - C49970 * C144) * C19533 +
            (C19657 - C19658) * C19539 + (C19659 - C19660) * C19534 +
            C19677 * C19540 + C19678 * C19535 + C19679 * C19541 +
            C19680 * C19536) *
               C50132 * C1544 +
           ((C49970 * C405 - C19537 * C395) * C19538 +
            (C49970 * C425 - C19537 * C409) * C19533 +
            (C20129 - C20130) * C19539 + (C20131 - C20132) * C19534 +
            (C20133 - C20134) * C19540 + (C20135 - C20136) * C19535 +
            (C20137 - C20138) * C19541 + (C20139 - C20140) * C19536) *
               C50132 * C50099) *
              C50019 * C896 +
          (((C49970 * C131 - C19537 * C124) * C19538 +
            (C49970 * C145 - C19537 * C135) * C19533 +
            (C19877 - C19878) * C19539 + (C19879 - C19880) * C19534 +
            (C19881 - C19882) * C19540 + (C19883 - C19884) * C19535 +
            (C19885 - C19886) * C19541 + (C19887 - C19888) * C19536) *
               C50132 * C1544 +
           ((C19537 * C396 - C49970 * C406) * C19538 +
            (C19537 * C410 - C49970 * C426) * C19533 +
            (C19537 * C777 - C49970 * C782) * C19539 +
            (C19537 * C786 - C49970 * C792) * C19534 +
            (C19537 * C1432 - C49970 * C1436) * C19540 +
            (C19537 * C1440 - C49970 * C1444) * C19535 +
            (C19537 * C3047 - C49970 * C3052) * C19541 +
            (C19537 * C3053 - C49970 * C3056) * C19536) *
               C50132 * C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C19538 +
            (C49970 * C143 - C19537 * C133) * C19533 +
            (C19641 - C19642) * C19539 + (C19643 - C19644) * C19534 +
            C19673 * C19540 + C19674 * C19535 + C19675 * C19541 +
            C19676 * C19536) *
               C50132 * C1544 +
           ((C19537 * C394 - C49970 * C404) * C19538 +
            (C19537 * C408 - C49970 * C424) * C19533 +
            (C20117 - C20118) * C19539 + (C20119 - C20120) * C19534 +
            C20761 * C19540 + C20762 * C19535 + C20763 * C19541 +
            C20764 * C19536) *
               C50132 * C50099) *
              C248 +
          (((C19642 - C19641) * C19538 + (C19644 - C19643) * C19533 +
            (C19646 - C19645) * C19539 + (C19648 - C19647) * C19534 +
            C20309 * C19540 + C20310 * C19535 + C20311 * C19541 +
            C20312 * C19536) *
               C50132 * C1544 +
           ((C20118 - C20117) * C19538 + (C20120 - C20119) * C19533 +
            (C20122 - C20121) * C19539 + (C20124 - C20123) * C19534 +
            (C20126 - C20125) * C19540 + (C20128 - C20127) * C19535 +
            (C20765 - C20766) * C19541 + (C20767 - C20768) * C19536) *
               C50132 * C50099) *
              C249 +
          ((C19673 * C19538 + C19674 * C19533 + C19675 * C19539 +
            C19676 * C19534 + (C19654 - C19653) * C19540 +
            (C19656 - C19655) * C19535 + (C20313 - C20314) * C19541 +
            (C20315 - C20316) * C19536) *
               C50132 * C1544 +
           (C20761 * C19538 + C20762 * C19533 + C20763 * C19539 +
            C20764 * C19534 + (C20766 - C20765) * C19540 +
            (C20768 - C20767) * C19535 +
            (C19537 * C20756 - C49970 * C20757) * C19541 +
            (C19537 * C20758 - C49970 * C20759) * C19536) *
               C50132 * C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C24404 - C24403 + C24406 - C24405) * C7818 +
             (C24408 - C24407 + C24410 - C24409) * C50274 +
             (C24412 - C24411 + C24414 - C24413) * C7819 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C33256 +
            (C28157 * C7818 + C28158 * C50274 +
             (C25111 - C25112 + C25113 - C25114) * C7819 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C7818 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50274 +
             (C24731 - C24732 + C24733 - C24734) * C7819 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C33256 +
            ((C27869 - C27870 + C27871 - C27872) * C7818 +
             (C27873 - C27874 + C27875 - C27876) * C50274 +
             (C27667 - C27668 + C27669 - C27670) * C7819 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50035 * C50261 +
           (((C24732 - C24731 + C24734 - C24733) * C7818 +
             (C24736 - C24735 + C24738 - C24737) * C50274 +
             (C24740 - C24739 + C24742 - C24741) * C7819 +
             (C24744 - C24743 + C24746 - C24745) * C50170) *
                C33256 +
            ((C27668 - C27667 + C27670 - C27669) * C7818 +
             (C27672 - C27671 + C27674 - C27673) * C50274 +
             (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
              C49975 * C1437) *
                 C7819 +
             (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
              C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C7818 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C50274 +
              (C24379 - C24380 + C24381 - C24382) * C7819 +
              (C24383 - C24384 + C24385 - C24386) * C50170) *
                 C33256 +
             ((C27433 - C27434 + C27435 - C27436) * C7818 +
              (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
              C28152 * C50170) *
                 C50196) *
                C50262 +
            (((C27434 - C27433 + C27436 - C27435) * C7818 +
              (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
              C28154 * C50170) *
                 C33256 +
             ((C27441 - C27442 + C27443 - C27444) * C7818 +
              (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
              C28694 * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24380 - C24379 + C24382 - C24381) * C7818 +
              (C24384 - C24383 + C24386 - C24385) * C50274 +
              (C24388 - C24387 + C24390 - C24389) * C7819 +
              (C24392 - C24391 + C24394 - C24393) * C50170) *
                 C33256 +
             (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
              C26038 * C50170) *
                 C50196) *
                C50262 +
            ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
              C29348 * C50170) *
                 C33256 +
             (C28695 * C7818 + C28696 * C50274 +
              (C25531 - C25532 + C25533 - C25534) * C7819 +
              (C25535 - C25536 + C25537 - C25538) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C7818 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C50274 +
              (C24403 - C24404 + C24405 - C24406) * C7819 +
              (C24407 - C24408 + C24409 - C24410) * C50170) *
                 C33256 +
             ((C27449 - C27450 + C27451 - C27452) * C7818 +
              (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
              C28156 * C50170) *
                 C50196) *
                C50262 +
            (((C27450 - C27449 + C27452 - C27451) * C7818 +
              (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
              C28158 * C50170) *
                 C33256 +
             ((C27457 - C27458 + C27459 - C27460) * C7818 +
              (C27461 - C27462 + C27463 - C27464) * C50274 +
              (C27465 - C27466 + C27467 - C27468) * C7819 +
              (C27469 - C27470 + C27471 - C27472) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24404 - C24403 + C24406 - C24405) * C7818 +
              (C24408 - C24407 + C24410 - C24409) * C50274 +
              (C24412 - C24411 + C24414 - C24413) * C7819 +
              (C24416 - C24415 + C24418 - C24417) * C50170) *
                 C33256 +
             (C28157 * C7818 + C28158 * C50274 +
              (C25111 - C25112 + C25113 - C25114) * C7819 +
              (C25115 - C25116 + C25117 - C25118) * C50170) *
                 C50196) *
                C50262 +
            ((C28155 * C7818 + C28156 * C50274 +
              (C25112 - C25111 + C25114 - C25113) * C7819 +
              (C25116 - C25115 + C25118 - C25117) * C50170) *
                 C33256 +
             ((C27466 - C27465 + C27468 - C27467) * C7818 +
              (C27470 - C27469 + C27472 - C27471) * C50274 +
              (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
               C49975 * C2538) *
                  C7819 +
              (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
               C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24435 * C7818 + C24436 * C50274 +
             (C24396 - C24395 + C24398 - C24397) * C7819 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C33256 +
            (C29347 * C7818 + C29348 * C50274 +
             (C26029 - C26030 + C26031 - C26032) * C7819 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24404 - C24403 + C24406 - C24405) * C7818 +
             (C24408 - C24407 + C24410 - C24409) * C50274 +
             (C24412 - C24411 + C24414 - C24413) * C7819 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C33256 +
            (C28157 * C7818 + C28158 * C50274 +
             (C25111 - C25112 + C25113 - C25114) * C7819 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24437 * C7818 + C24438 * C50274 +
             (C24420 - C24419 + C24422 - C24421) * C7819 +
             (C24424 - C24423 + C24426 - C24425) * C50170) *
                C33256 +
            ((C25112 - C25111 + C25114 - C25113) * C7818 +
             (C25116 - C25115 + C25118 - C25117) * C50274 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C7819 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C7818 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50274 +
            (C24379 - C24380 + C24381 - C24382) * C7819 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C33256 +
           ((C27433 - C27434 + C27435 - C27436) * C7818 +
            (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
            C28152 * C50170) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C7818 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50274 +
            (C24403 - C24404 + C24405 - C24406) * C7819 +
            (C24407 - C24408 + C24409 - C24410) * C50170) *
               C33256 +
           ((C27449 - C27450 + C27451 - C27452) * C7818 +
            (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
            C28156 * C50170) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C7818 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50274 +
            (C24731 - C24732 + C24733 - C24734) * C7819 +
            (C24735 - C24736 + C24737 - C24738) * C50170) *
               C33256 +
           ((C27869 - C27870 + C27871 - C27872) * C7818 +
            (C27873 - C27874 + C27875 - C27876) * C50274 +
            (C27667 - C27668 + C27669 - C27670) * C7819 +
            (C27671 - C27672 + C27673 - C27674) * C50170) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
                C7818 +
            (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
                C50274 +
            (C49173 * C256 - C50246 * C266 + C49166 * C261 - C49975 * C279) *
                C7819 +
            (C49173 * C270 - C50246 * C286 + C49166 * C280 - C49975 * C291) *
                C50170) *
               C33256 +
           ((C49173 * C397 - C50246 * C407 + C49166 * C402 - C49975 * C420) *
                C7818 +
            (C49173 * C411 - C50246 * C427 + C49166 * C421 - C49975 * C432) *
                C50274 +
            (C49173 * C778 - C50246 * C783 + C49166 * C779 - C49975 * C788) *
                C7819 +
            (C49173 * C787 - C50246 * C793 + C49166 * C789 - C49975 * C794) *
                C50170) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C391 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C392 +
           (((C27442 - C27441 + C27444 - C27443) * C7818 +
             (C27446 - C27445 + C27448 - C27447) * C50274 + C28695 * C7819 +
             C28696 * C50170) *
                C33256 +
            ((C29867 - C29868 + C29869 - C29870) * C7818 +
             (C29871 - C29872 + C29873 - C29874) * C50274 +
             (C28685 - C28686 + C28687 - C28688) * C7819 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C391 +
           (((C27450 - C27449 + C27452 - C27451) * C7818 +
             (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
             C28158 * C50170) *
                C33256 +
            ((C27457 - C27458 + C27459 - C27460) * C7818 +
             (C27461 - C27462 + C27463 - C27464) * C50274 +
             (C27465 - C27466 + C27467 - C27468) * C7819 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C392 +
           (((C27458 - C27457 + C27460 - C27459) * C7818 +
             (C27462 - C27461 + C27464 - C27463) * C50274 +
             (C27466 - C27465 + C27468 - C27467) * C7819 +
             (C27470 - C27469 + C27472 - C27471) * C50170) *
                C33256 +
            ((C49173 * C1715 - C50246 * C1719 + C49166 * C1716 -
              C49975 * C1720) *
                 C7818 +
             (C49173 * C1723 - C50246 * C1727 + C49166 * C1724 -
              C49975 * C1728) *
                 C50274 +
             (C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
              C49975 * C5899) *
                 C7819 +
             (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
              C49975 * C5901) *
                 C50170) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50262 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50262 +
           (((C27450 - C27449 + C27452 - C27451) * C7818 +
             (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
             C28158 * C50170) *
                C33256 +
            ((C27457 - C27458 + C27459 - C27460) * C7818 +
             (C27461 - C27462 + C27463 - C27464) * C50274 +
             (C27465 - C27466 + C27467 - C27468) * C7819 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C7818 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50274 +
             (C24731 - C24732 + C24733 - C24734) * C7819 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C33256 +
            ((C27869 - C27870 + C27871 - C27872) * C7818 +
             (C27873 - C27874 + C27875 - C27876) * C50274 +
             (C27667 - C27668 + C27669 - C27670) * C7819 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50262 +
           (((C27870 - C27869 + C27872 - C27871) * C7818 +
             (C27874 - C27873 + C27876 - C27875) * C50274 +
             (C27668 - C27667 + C27670 - C27669) * C7819 +
             (C27672 - C27671 + C27674 - C27673) * C50170) *
                C33256 +
            ((C49173 * C400 - C50246 * C414 + C49166 * C401 - C49975 * C415) *
                 C7818 +
             (C49173 * C418 - C50246 * C430 + C49166 * C419 - C49975 * C431) *
                 C50274 +
             (C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C7819 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C7818 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50274 +
            (C24379 - C24380 + C24381 - C24382) * C7819 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C33256 +
           ((C27433 - C27434 + C27435 - C27436) * C7818 +
            (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
            C28152 * C50170) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C7818 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50274 +
            (C24403 - C24404 + C24405 - C24406) * C7819 +
            (C24407 - C24408 + C24409 - C24410) * C50170) *
               C33256 +
           ((C27449 - C27450 + C27451 - C27452) * C7818 +
            (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
            C28156 * C50170) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C7818 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50274 +
            (C24731 - C24732 + C24733 - C24734) * C7819 +
            (C24735 - C24736 + C24737 - C24738) * C50170) *
               C33256 +
           ((C27869 - C27870 + C27871 - C27872) * C7818 +
            (C27873 - C27874 + C27875 - C27876) * C50274 +
            (C27667 - C27668 + C27669 - C27670) * C7819 +
            (C27671 - C27672 + C27673 - C27674) * C50170) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
                C7818 +
            (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
                C50274 +
            (C49173 * C256 - C50246 * C266 + C49166 * C261 - C49975 * C279) *
                C7819 +
            (C49173 * C270 - C50246 * C286 + C49166 * C280 - C49975 * C291) *
                C50170) *
               C33256 +
           ((C49173 * C397 - C50246 * C407 + C49166 * C402 - C49975 * C420) *
                C7818 +
            (C49173 * C411 - C50246 * C427 + C49166 * C421 - C49975 * C432) *
                C50274 +
            (C49173 * C778 - C50246 * C783 + C49166 * C779 - C49975 * C788) *
                C7819 +
            (C49173 * C787 - C50246 * C793 + C49166 * C789 - C49975 * C794) *
                C50170) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24435 * C7818 + C24436 * C50274 +
             (C24396 - C24395 + C24398 - C24397) * C7819 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C33256 +
            (C29347 * C7818 + C29348 * C50274 +
             (C26029 - C26030 + C26031 - C26032) * C7819 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50035 * C248 +
           (((C24404 - C24403 + C24406 - C24405) * C7818 +
             (C24408 - C24407 + C24410 - C24409) * C50274 +
             (C24412 - C24411 + C24414 - C24413) * C7819 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C33256 +
            (C28157 * C7818 + C28158 * C50274 +
             (C25111 - C25112 + C25113 - C25114) * C7819 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C249 +
           ((C24437 * C7818 + C24438 * C50274 +
             (C24420 - C24419 + C24422 - C24421) * C7819 +
             (C24424 - C24423 + C24426 - C24425) * C50170) *
                C33256 +
            ((C25112 - C25111 + C25114 - C25113) * C7818 +
             (C25116 - C25115 + C25118 - C25117) * C50274 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C7819 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50035 * C50306 +
           (((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50307 +
           ((C24435 * C7818 + C24436 * C50274 +
             (C24396 - C24395 + C24398 - C24397) * C7819 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C33256 +
            (C29347 * C7818 + C29348 * C50274 +
             (C26029 - C26030 + C26031 - C26032) * C7819 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50035 * C50306 +
           (((C24404 - C24403 + C24406 - C24405) * C7818 +
             (C24408 - C24407 + C24410 - C24409) * C50274 +
             (C24412 - C24411 + C24414 - C24413) * C7819 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C33256 +
            (C28157 * C7818 + C28158 * C50274 +
             (C25111 - C25112 + C25113 - C25114) * C7819 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50307 +
           ((C24437 * C7818 + C24438 * C50274 +
             (C24420 - C24419 + C24422 - C24421) * C7819 +
             (C24424 - C24423 + C24426 - C24425) * C50170) *
                C33256 +
            ((C25112 - C25111 + C25114 - C25113) * C7818 +
             (C25116 - C25115 + C25118 - C25117) * C50274 +
             (C49173 * C3046 - C50246 * C3049 + C49166 * C3047 -
              C49975 * C3052) *
                 C7819 +
             (C49173 * C3051 - C50246 * C3055 + C49166 * C3053 -
              C49975 * C3056) *
                 C50170) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50262 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50306 +
          ((((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50262 +
           ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
             C29348 * C50170) *
                C33256 +
            (C28695 * C7818 + C28696 * C50274 +
             (C25531 - C25532 + C25533 - C25534) * C7819 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50099) *
              C50307 +
          (((C24435 * C7818 + C24436 * C50274 +
             (C24396 - C24395 + C24398 - C24397) * C7819 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C33256 +
            (C29347 * C7818 + C29348 * C50274 +
             (C26029 - C26030 + C26031 - C26032) * C7819 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C50262 +
           ((C26037 * C7818 + C26038 * C50274 +
             (C26030 - C26029 + C26032 - C26031) * C7819 +
             (C26034 - C26033 + C26036 - C26035) * C50170) *
                C33256 +
            ((C25532 - C25531 + C25534 - C25533) * C7818 +
             (C25536 - C25535 + C25538 - C25537) * C50274 +
             (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
              C49975 * C3504) *
                 C7819 +
             (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
              C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C7818 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50274 +
            (C24379 - C24380 + C24381 - C24382) * C7819 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C33256 +
           ((C27433 - C27434 + C27435 - C27436) * C7818 +
            (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
            C28152 * C50170) *
               C50196) *
              C50035 * C964 +
          (((C24380 - C24379 + C24382 - C24381) * C7818 +
            (C24384 - C24383 + C24386 - C24385) * C50274 +
            (C24388 - C24387 + C24390 - C24389) * C7819 +
            (C24392 - C24391 + C24394 - C24393) * C50170) *
               C33256 +
           (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
            C26038 * C50170) *
               C50196) *
              C50035 * C965 +
          ((C24435 * C7818 + C24436 * C50274 +
            (C24396 - C24395 + C24398 - C24397) * C7819 +
            (C24400 - C24399 + C24402 - C24401) * C50170) *
               C33256 +
           (C29347 * C7818 + C29348 * C50274 +
            (C26029 - C26030 + C26031 - C26032) * C7819 +
            (C26033 - C26034 + C26035 - C26036) * C50170) *
               C50196) *
              C50035 * C966 +
          ((C25375 * C7818 + C25376 * C50274 +
            (C25368 - C25367 + C25370 - C25369) * C7819 +
            (C25372 - C25371 + C25374 - C25373) * C50170) *
               C33256 +
           ((C26030 - C26029 + C26032 - C26031) * C7818 +
            (C26034 - C26033 + C26036 - C26035) * C50274 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C7819 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C50170) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24404 - C24403 + C24406 - C24405) * C7818 +
             (C24408 - C24407 + C24410 - C24409) * C50274 +
             (C24412 - C24411 + C24414 - C24413) * C7819 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C33256 +
            (C28157 * C7818 + C28158 * C50274 +
             (C25111 - C25112 + C25113 - C25114) * C7819 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C7818 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50274 +
             (C24731 - C24732 + C24733 - C24734) * C7819 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C33256 +
            ((C27869 - C27870 + C27871 - C27872) * C7818 +
             (C27873 - C27874 + C27875 - C27876) * C50274 +
             (C27667 - C27668 + C27669 - C27670) * C7819 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24732 - C24731 + C24734 - C24733) * C7818 +
             (C24736 - C24735 + C24738 - C24737) * C50274 +
             (C24740 - C24739 + C24742 - C24741) * C7819 +
             (C24744 - C24743 + C24746 - C24745) * C50170) *
                C33256 +
            ((C27668 - C27667 + C27670 - C27669) * C7818 +
             (C27672 - C27671 + C27674 - C27673) * C50274 +
             (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
              C49975 * C1437) *
                 C7819 +
             (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
              C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C391 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C392 +
           (((C27442 - C27441 + C27444 - C27443) * C7818 +
             (C27446 - C27445 + C27448 - C27447) * C50274 + C28695 * C7819 +
             C28696 * C50170) *
                C33256 +
            ((C29867 - C29868 + C29869 - C29870) * C7818 +
             (C29871 - C29872 + C29873 - C29874) * C50274 +
             (C28685 - C28686 + C28687 - C28688) * C7819 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C393) *
              C893 +
          ((((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C391 +
           ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
             C29348 * C50170) *
                C33256 +
            (C28695 * C7818 + C28696 * C50274 +
             (C25531 - C25532 + C25533 - C25534) * C7819 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C392 +
           ((C28693 * C7818 + C28694 * C50274 +
             (C25532 - C25531 + C25534 - C25533) * C7819 +
             (C25536 - C25535 + C25538 - C25537) * C50170) *
                C33256 +
            ((C28686 - C28685 + C28688 - C28687) * C7818 +
             (C28690 - C28689 + C28692 - C28691) * C50274 +
             (C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C7819 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50170) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C7818 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C50274 +
              (C24379 - C24380 + C24381 - C24382) * C7819 +
              (C24383 - C24384 + C24385 - C24386) * C50170) *
                 C33256 +
             ((C27433 - C27434 + C27435 - C27436) * C7818 +
              (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
              C28152 * C50170) *
                 C50196) *
                C50262 +
            (((C27434 - C27433 + C27436 - C27435) * C7818 +
              (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
              C28154 * C50170) *
                 C33256 +
             ((C27441 - C27442 + C27443 - C27444) * C7818 +
              (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
              C28694 * C50170) *
                 C50196) *
                C50099) *
               C893 +
           ((((C24380 - C24379 + C24382 - C24381) * C7818 +
              (C24384 - C24383 + C24386 - C24385) * C50274 +
              (C24388 - C24387 + C24390 - C24389) * C7819 +
              (C24392 - C24391 + C24394 - C24393) * C50170) *
                 C33256 +
             (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
              C26038 * C50170) *
                 C50196) *
                C50262 +
            ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
              C29348 * C50170) *
                 C33256 +
             (C28695 * C7818 + C28696 * C50274 +
              (C25531 - C25532 + C25533 - C25534) * C7819 +
              (C25535 - C25536 + C25537 - C25538) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C7818 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C50274 +
              (C24403 - C24404 + C24405 - C24406) * C7819 +
              (C24407 - C24408 + C24409 - C24410) * C50170) *
                 C33256 +
             ((C27449 - C27450 + C27451 - C27452) * C7818 +
              (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
              C28156 * C50170) *
                 C50196) *
                C50262 +
            (((C27450 - C27449 + C27452 - C27451) * C7818 +
              (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
              C28158 * C50170) *
                 C33256 +
             ((C27457 - C27458 + C27459 - C27460) * C7818 +
              (C27461 - C27462 + C27463 - C27464) * C50274 +
              (C27465 - C27466 + C27467 - C27468) * C7819 +
              (C27469 - C27470 + C27471 - C27472) * C50170) *
                 C50196) *
                C50099) *
               C893 +
           ((((C24404 - C24403 + C24406 - C24405) * C7818 +
              (C24408 - C24407 + C24410 - C24409) * C50274 +
              (C24412 - C24411 + C24414 - C24413) * C7819 +
              (C24416 - C24415 + C24418 - C24417) * C50170) *
                 C33256 +
             (C28157 * C7818 + C28158 * C50274 +
              (C25111 - C25112 + C25113 - C25114) * C7819 +
              (C25115 - C25116 + C25117 - C25118) * C50170) *
                 C50196) *
                C50262 +
            ((C28155 * C7818 + C28156 * C50274 +
              (C25112 - C25111 + C25114 - C25113) * C7819 +
              (C25116 - C25115 + C25118 - C25117) * C50170) *
                 C33256 +
             ((C27466 - C27465 + C27468 - C27467) * C7818 +
              (C27470 - C27469 + C27472 - C27471) * C50274 +
              (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
               C49975 * C2538) *
                  C7819 +
              (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
               C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24404 - C24403 + C24406 - C24405) * C7818 +
             (C24408 - C24407 + C24410 - C24409) * C50274 +
             (C24412 - C24411 + C24414 - C24413) * C7819 +
             (C24416 - C24415 + C24418 - C24417) * C50170) *
                C33256 +
            (C28157 * C7818 + C28158 * C50274 +
             (C25111 - C25112 + C25113 - C25114) * C7819 +
             (C25115 - C25116 + C25117 - C25118) * C50170) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C7818 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50274 +
             (C24731 - C24732 + C24733 - C24734) * C7819 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C33256 +
            ((C27869 - C27870 + C27871 - C27872) * C7818 +
             (C27873 - C27874 + C27875 - C27876) * C50274 +
             (C27667 - C27668 + C27669 - C27670) * C7819 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C50035 * C893 +
           (((C24732 - C24731 + C24734 - C24733) * C7818 +
             (C24736 - C24735 + C24738 - C24737) * C50274 +
             (C24740 - C24739 + C24742 - C24741) * C7819 +
             (C24744 - C24743 + C24746 - C24745) * C50170) *
                C33256 +
            ((C27668 - C27667 + C27670 - C27669) * C7818 +
             (C27672 - C27671 + C27674 - C27673) * C50274 +
             (C49173 * C1432 - C50246 * C1436 + C49166 * C1433 -
              C49975 * C1437) *
                 C7819 +
             (C49173 * C1440 - C50246 * C1444 + C49166 * C1441 -
              C49975 * C1445) *
                 C50170) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C7818 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50274 +
            (C24379 - C24380 + C24381 - C24382) * C7819 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C33256 +
           ((C27433 - C27434 + C27435 - C27436) * C7818 +
            (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
            C28152 * C50170) *
               C50196) *
              C50035 * C964 +
          (((C24380 - C24379 + C24382 - C24381) * C7818 +
            (C24384 - C24383 + C24386 - C24385) * C50274 +
            (C24388 - C24387 + C24390 - C24389) * C7819 +
            (C24392 - C24391 + C24394 - C24393) * C50170) *
               C33256 +
           (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
            C26038 * C50170) *
               C50196) *
              C50035 * C965 +
          ((C24435 * C7818 + C24436 * C50274 +
            (C24396 - C24395 + C24398 - C24397) * C7819 +
            (C24400 - C24399 + C24402 - C24401) * C50170) *
               C33256 +
           (C29347 * C7818 + C29348 * C50274 +
            (C26029 - C26030 + C26031 - C26032) * C7819 +
            (C26033 - C26034 + C26035 - C26036) * C50170) *
               C50196) *
              C50035 * C966 +
          ((C25375 * C7818 + C25376 * C50274 +
            (C25368 - C25367 + C25370 - C25369) * C7819 +
            (C25372 - C25371 + C25374 - C25373) * C50170) *
               C33256 +
           ((C26030 - C26029 + C26032 - C26031) * C7818 +
            (C26034 - C26033 + C26036 - C26035) * C50274 +
            (C49173 * C4011 - C50246 * C4013 + C49166 * C4012 -
             C49975 * C4014) *
                C7819 +
            (C49173 * C4015 - C50246 * C4017 + C49166 * C4016 -
             C49975 * C4018) *
                C50170) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C7818 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C50274 +
              (C24379 - C24380 + C24381 - C24382) * C7819 +
              (C24383 - C24384 + C24385 - C24386) * C50170) *
                 C33256 +
             ((C27433 - C27434 + C27435 - C27436) * C7818 +
              (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
              C28152 * C50170) *
                 C50196) *
                C1544 +
            (((C27434 - C27433 + C27436 - C27435) * C7818 +
              (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
              C28154 * C50170) *
                 C33256 +
             ((C27441 - C27442 + C27443 - C27444) * C7818 +
              (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
              C28694 * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24380 - C24379 + C24382 - C24381) * C7818 +
              (C24384 - C24383 + C24386 - C24385) * C50274 +
              (C24388 - C24387 + C24390 - C24389) * C7819 +
              (C24392 - C24391 + C24394 - C24393) * C50170) *
                 C33256 +
             (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
              C26038 * C50170) *
                 C50196) *
                C1544 +
            ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
              C29348 * C50170) *
                 C33256 +
             (C28695 * C7818 + C28696 * C50274 +
              (C25531 - C25532 + C25533 - C25534) * C7819 +
              (C25535 - C25536 + C25537 - C25538) * C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C7818 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C50274 +
              (C24403 - C24404 + C24405 - C24406) * C7819 +
              (C24407 - C24408 + C24409 - C24410) * C50170) *
                 C33256 +
             ((C27449 - C27450 + C27451 - C27452) * C7818 +
              (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
              C28156 * C50170) *
                 C50196) *
                C1544 +
            (((C27450 - C27449 + C27452 - C27451) * C7818 +
              (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
              C28158 * C50170) *
                 C33256 +
             ((C27457 - C27458 + C27459 - C27460) * C7818 +
              (C27461 - C27462 + C27463 - C27464) * C50274 +
              (C27465 - C27466 + C27467 - C27468) * C7819 +
              (C27469 - C27470 + C27471 - C27472) * C50170) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C24404 - C24403 + C24406 - C24405) * C7818 +
              (C24408 - C24407 + C24410 - C24409) * C50274 +
              (C24412 - C24411 + C24414 - C24413) * C7819 +
              (C24416 - C24415 + C24418 - C24417) * C50170) *
                 C33256 +
             (C28157 * C7818 + C28158 * C50274 +
              (C25111 - C25112 + C25113 - C25114) * C7819 +
              (C25115 - C25116 + C25117 - C25118) * C50170) *
                 C50196) *
                C1544 +
            ((C28155 * C7818 + C28156 * C50274 +
              (C25112 - C25111 + C25114 - C25113) * C7819 +
              (C25116 - C25115 + C25118 - C25117) * C50170) *
                 C33256 +
             ((C27466 - C27465 + C27468 - C27467) * C7818 +
              (C27470 - C27469 + C27472 - C27471) * C50274 +
              (C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
               C49975 * C2538) *
                  C7819 +
              (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
               C49975 * C2542) *
                  C50170) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50308 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50309 +
           (((C27442 - C27441 + C27444 - C27443) * C7818 +
             (C27446 - C27445 + C27448 - C27447) * C50274 + C28695 * C7819 +
             C28696 * C50170) *
                C33256 +
            ((C29867 - C29868 + C29869 - C29870) * C7818 +
             (C29871 - C29872 + C29873 - C29874) * C50274 +
             (C28685 - C28686 + C28687 - C28688) * C7819 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C1960) *
              C50261 +
          ((((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C50308 +
           ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
             C29348 * C50170) *
                C33256 +
            (C28695 * C7818 + C28696 * C50274 +
             (C25531 - C25532 + C25533 - C25534) * C7819 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50309 +
           ((C28693 * C7818 + C28694 * C50274 +
             (C25532 - C25531 + C25534 - C25533) * C7819 +
             (C25536 - C25535 + C25538 - C25537) * C50170) *
                C33256 +
            ((C28686 - C28685 + C28688 - C28687) * C7818 +
             (C28690 - C28689 + C28692 - C28691) * C50274 +
             (C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C7819 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50170) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C248 +
          ((((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C1544 +
           ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
             C29348 * C50170) *
                C33256 +
            (C28695 * C7818 + C28696 * C50274 +
             (C25531 - C25532 + C25533 - C25534) * C7819 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50099) *
              C249 +
          (((C24435 * C7818 + C24436 * C50274 +
             (C24396 - C24395 + C24398 - C24397) * C7819 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C33256 +
            (C29347 * C7818 + C29348 * C50274 +
             (C26029 - C26030 + C26031 - C26032) * C7819 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C1544 +
           ((C26037 * C7818 + C26038 * C50274 +
             (C26030 - C26029 + C26032 - C26031) * C7819 +
             (C26034 - C26033 + C26036 - C26035) * C50170) *
                C33256 +
            ((C25532 - C25531 + C25534 - C25533) * C7818 +
             (C25536 - C25535 + C25538 - C25537) * C50274 +
             (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
              C49975 * C3504) *
                 C7819 +
             (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
              C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C1544 +
           (((C27450 - C27449 + C27452 - C27451) * C7818 +
             (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
             C28158 * C50170) *
                C33256 +
            ((C27457 - C27458 + C27459 - C27460) * C7818 +
             (C27461 - C27462 + C27463 - C27464) * C50274 +
             (C27465 - C27466 + C27467 - C27468) * C7819 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C7818 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50274 +
             (C24731 - C24732 + C24733 - C24734) * C7819 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C33256 +
            ((C27869 - C27870 + C27871 - C27872) * C7818 +
             (C27873 - C27874 + C27875 - C27876) * C50274 +
             (C27667 - C27668 + C27669 - C27670) * C7819 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C1544 +
           (((C27870 - C27869 + C27872 - C27871) * C7818 +
             (C27874 - C27873 + C27876 - C27875) * C50274 +
             (C27668 - C27667 + C27670 - C27669) * C7819 +
             (C27672 - C27671 + C27674 - C27673) * C50170) *
                C33256 +
            ((C49173 * C400 - C50246 * C414 + C49166 * C401 - C49975 * C415) *
                 C7818 +
             (C49173 * C418 - C50246 * C430 + C49166 * C419 - C49975 * C431) *
                 C50274 +
             (C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C7819 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C7818 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50274 +
            (C24379 - C24380 + C24381 - C24382) * C7819 +
            (C24383 - C24384 + C24385 - C24386) * C50170) *
               C33256 +
           ((C27433 - C27434 + C27435 - C27436) * C7818 +
            (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
            C28152 * C50170) *
               C50196) *
              C1710 +
          (((C27434 - C27433 + C27436 - C27435) * C7818 +
            (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
            C28154 * C50170) *
               C33256 +
           ((C27441 - C27442 + C27443 - C27444) * C7818 +
            (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
            C28694 * C50170) *
               C50196) *
              C1711 +
          (((C27442 - C27441 + C27444 - C27443) * C7818 +
            (C27446 - C27445 + C27448 - C27447) * C50274 + C28695 * C7819 +
            C28696 * C50170) *
               C33256 +
           ((C29867 - C29868 + C29869 - C29870) * C7818 +
            (C29871 - C29872 + C29873 - C29874) * C50274 +
            (C28685 - C28686 + C28687 - C28688) * C7819 +
            (C28689 - C28690 + C28691 - C28692) * C50170) *
               C50196) *
              C1712 +
          (((C29868 - C29867 + C29870 - C29869) * C7818 +
            (C29872 - C29871 + C29874 - C29873) * C50274 +
            (C28686 - C28685 + C28688 - C28687) * C7819 +
            (C28690 - C28689 + C28692 - C28691) * C50170) *
               C33256 +
           ((C49173 * C5318 - C50246 * C5321 + C49166 * C5319 -
             C49975 * C5322) *
                C7818 +
            (C49173 * C5323 - C50246 * C5327 + C49166 * C5324 -
             C49975 * C5328) *
                C50274 +
            (C49173 * C6300 - C50246 * C6302 + C49166 * C6301 -
             C49975 * C6303) *
                C7819 +
            (C49173 * C6304 - C50246 * C6306 + C49166 * C6305 -
             C49975 * C6307) *
                C50170) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C50308 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50309 +
           (((C27442 - C27441 + C27444 - C27443) * C7818 +
             (C27446 - C27445 + C27448 - C27447) * C50274 + C28695 * C7819 +
             C28696 * C50170) *
                C33256 +
            ((C29867 - C29868 + C29869 - C29870) * C7818 +
             (C29871 - C29872 + C29873 - C29874) * C50274 +
             (C28685 - C28686 + C28687 - C28688) * C7819 +
             (C28689 - C28690 + C28691 - C28692) * C50170) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C50308 +
           (((C27450 - C27449 + C27452 - C27451) * C7818 +
             (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
             C28158 * C50170) *
                C33256 +
            ((C27457 - C27458 + C27459 - C27460) * C7818 +
             (C27461 - C27462 + C27463 - C27464) * C50274 +
             (C27465 - C27466 + C27467 - C27468) * C7819 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50309 +
           (((C27458 - C27457 + C27460 - C27459) * C7818 +
             (C27462 - C27461 + C27464 - C27463) * C50274 +
             (C27466 - C27465 + C27468 - C27467) * C7819 +
             (C27470 - C27469 + C27472 - C27471) * C50170) *
                C33256 +
            ((C49173 * C1715 - C50246 * C1719 + C49166 * C1716 -
              C49975 * C1720) *
                 C7818 +
             (C49173 * C1723 - C50246 * C1727 + C49166 * C1724 -
              C49975 * C1728) *
                 C50274 +
             (C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
              C49975 * C5899) *
                 C7819 +
             (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
              C49975 * C5901) *
                 C50170) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C7818 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50274 +
             (C24403 - C24404 + C24405 - C24406) * C7819 +
             (C24407 - C24408 + C24409 - C24410) * C50170) *
                C33256 +
            ((C27449 - C27450 + C27451 - C27452) * C7818 +
             (C27453 - C27454 + C27455 - C27456) * C50274 + C28155 * C7819 +
             C28156 * C50170) *
                C50196) *
               C1544 +
           (((C27450 - C27449 + C27452 - C27451) * C7818 +
             (C27454 - C27453 + C27456 - C27455) * C50274 + C28157 * C7819 +
             C28158 * C50170) *
                C33256 +
            ((C27457 - C27458 + C27459 - C27460) * C7818 +
             (C27461 - C27462 + C27463 - C27464) * C50274 +
             (C27465 - C27466 + C27467 - C27468) * C7819 +
             (C27469 - C27470 + C27471 - C27472) * C50170) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C7818 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50274 +
             (C24731 - C24732 + C24733 - C24734) * C7819 +
             (C24735 - C24736 + C24737 - C24738) * C50170) *
                C33256 +
            ((C27869 - C27870 + C27871 - C27872) * C7818 +
             (C27873 - C27874 + C27875 - C27876) * C50274 +
             (C27667 - C27668 + C27669 - C27670) * C7819 +
             (C27671 - C27672 + C27673 - C27674) * C50170) *
                C50196) *
               C1544 +
           (((C27870 - C27869 + C27872 - C27871) * C7818 +
             (C27874 - C27873 + C27876 - C27875) * C50274 +
             (C27668 - C27667 + C27670 - C27669) * C7819 +
             (C27672 - C27671 + C27674 - C27673) * C50170) *
                C33256 +
            ((C49173 * C400 - C50246 * C414 + C49166 * C401 - C49975 * C415) *
                 C7818 +
             (C49173 * C418 - C50246 * C430 + C49166 * C419 - C49975 * C431) *
                 C50274 +
             (C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C7819 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50170) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C7818 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50274 +
             (C24379 - C24380 + C24381 - C24382) * C7819 +
             (C24383 - C24384 + C24385 - C24386) * C50170) *
                C33256 +
            ((C27433 - C27434 + C27435 - C27436) * C7818 +
             (C27437 - C27438 + C27439 - C27440) * C50274 + C28151 * C7819 +
             C28152 * C50170) *
                C50196) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C7818 +
             (C27438 - C27437 + C27440 - C27439) * C50274 + C28153 * C7819 +
             C28154 * C50170) *
                C33256 +
            ((C27441 - C27442 + C27443 - C27444) * C7818 +
             (C27445 - C27446 + C27447 - C27448) * C50274 + C28693 * C7819 +
             C28694 * C50170) *
                C50196) *
               C50099) *
              C248 +
          ((((C24380 - C24379 + C24382 - C24381) * C7818 +
             (C24384 - C24383 + C24386 - C24385) * C50274 +
             (C24388 - C24387 + C24390 - C24389) * C7819 +
             (C24392 - C24391 + C24394 - C24393) * C50170) *
                C33256 +
            (C28153 * C7818 + C28154 * C50274 + C26037 * C7819 +
             C26038 * C50170) *
                C50196) *
               C1544 +
           ((C28151 * C7818 + C28152 * C50274 + C29347 * C7819 +
             C29348 * C50170) *
                C33256 +
            (C28695 * C7818 + C28696 * C50274 +
             (C25531 - C25532 + C25533 - C25534) * C7819 +
             (C25535 - C25536 + C25537 - C25538) * C50170) *
                C50196) *
               C50099) *
              C249 +
          (((C24435 * C7818 + C24436 * C50274 +
             (C24396 - C24395 + C24398 - C24397) * C7819 +
             (C24400 - C24399 + C24402 - C24401) * C50170) *
                C33256 +
            (C29347 * C7818 + C29348 * C50274 +
             (C26029 - C26030 + C26031 - C26032) * C7819 +
             (C26033 - C26034 + C26035 - C26036) * C50170) *
                C50196) *
               C1544 +
           ((C26037 * C7818 + C26038 * C50274 +
             (C26030 - C26029 + C26032 - C26031) * C7819 +
             (C26034 - C26033 + C26036 - C26035) * C50170) *
                C33256 +
            ((C25532 - C25531 + C25534 - C25533) * C7818 +
             (C25536 - C25535 + C25538 - C25537) * C50274 +
             (C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
              C49975 * C3504) *
                 C7819 +
             (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
              C49975 * C3508) *
                 C50170) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50035 * C50261 +
                    (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                      C22732 * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C50304 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C50035 * C50261 +
                    (((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                      (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                         C50312 +
                     (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                      C31404 * C50170) *
                         C50313 +
                     (C22325 * C7818 + C22326 * C50274 +
                      (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C50305 +
                   ((((C49970 * C131 - C19537 * C124) * C7818 +
                      (C49970 * C145 - C19537 * C135) * C50274 +
                      (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                         C50312 +
                     ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                      (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                         C50313 +
                     ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                      (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                         C43894) *
                        C50035 * C50261 +
                    (((C19878 - C19877) * C7818 + (C19880 - C19879) * C50274 +
                      (C19882 - C19881) * C7819 + (C19884 - C19883) * C50170) *
                         C50312 +
                     ((C21960 - C21959) * C7818 + (C21962 - C21961) * C50274 +
                      (C31060 - C31059) * C7819 + (C31062 - C31061) * C50170) *
                         C50313 +
                     ((C21964 - C21963) * C7818 + (C21966 - C21965) * C50274 +
                      (C19537 * C2533 - C49970 * C2538) * C7819 +
                      (C19537 * C2539 - C49970 * C2542) * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C49970 * C129 - C19537 * C122) * C7818 +
                       (C49970 * C143 - C19537 * C133) * C50274 +
                       (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                          C50312 +
                      ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                       C22315 * C7819 + C22316 * C50170) *
                          C50313 +
                      C46882 * C43894) *
                         C50262 +
                     (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                       C22317 * C7819 + C22318 * C50170) *
                          C50312 +
                      ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                       C22319 * C7819 + C22320 * C50170) *
                          C50313 +
                      (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                       C22722 * C50170) *
                          C43894) *
                         C50099) *
                        C50261 +
                    ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                       (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                          C50312 +
                      (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                       C20762 * C50170) *
                          C50313 +
                      (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                       C22732 * C50170) *
                          C43894) *
                         C50262 +
                     ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                       C23229 * C50170) *
                          C50312 +
                      (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                       C23231 * C50170) *
                          C50313 +
                      (C22723 * C7818 + C22724 * C50274 +
                       (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                          C43894) *
                         C50099) *
                        C50071) *
                       C251 +
                   (((((C19537 * C123 - C49970 * C130) * C7818 +
                       (C19537 * C134 - C49970 * C144) * C50274 +
                       (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                          C50312 +
                      ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                       C22321 * C7819 + C22322 * C50170) *
                          C50313 +
                      C46883 * C43894) *
                         C50262 +
                     (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                       C22323 * C7819 + C22324 * C50170) *
                          C50312 +
                      ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                       C22325 * C7819 + C22326 * C50170) *
                          C50313 +
                      ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                       (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                          C43894) *
                         C50099) *
                        C50261 +
                    ((((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                       (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                          C50312 +
                      (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                       C31404 * C50170) *
                          C50313 +
                      (C22325 * C7818 + C22326 * C50274 +
                       (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                          C43894) *
                         C50262 +
                     ((C22321 * C7818 + C22322 * C50274 + C30765 * C7819 +
                       C30766 * C50170) *
                          C50312 +
                      (C21785 * C7818 + C21786 * C50274 +
                       (C21610 - C21609) * C7819 + (C21612 - C21611) * C50170) *
                          C50313 +
                      ((C21792 - C21791) * C7818 + (C21794 - C21793) * C50274 +
                       (C19537 * C4426 - C49970 * C4432) * C7819 +
                       (C19537 * C4434 - C49970 * C4438) * C50170) *
                          C43894) *
                         C50099) *
                        C50071) *
                       C50006)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     (C21795 * C7818 + C21796 * C50274 + C21767 * C7819 +
                      C21768 * C50170) *
                         C43894) *
                        C50035 * C248 +
                    (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                      C22732 * C50170) *
                         C43894) *
                        C50035 * C249 +
                    ((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                      C19676 * C50170) *
                         C50312 +
                     (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                      C32282 * C50170) *
                         C50313 +
                     (C23230 * C7818 + C23231 * C50274 +
                      (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                         C43894) *
                        C50035 * C250) *
                       C251 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     (C21799 * C7818 + C21800 * C50274 + C21785 * C7819 +
                      C21786 * C50170) *
                         C43894) *
                        C50035 * C248 +
                    (((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                      (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                         C50312 +
                     (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                      C31404 * C50170) *
                         C50313 +
                     (C22325 * C7818 + C22326 * C50274 +
                      (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                         C43894) *
                        C50035 * C249 +
                    ((C19677 * C7818 + C19678 * C50274 + C19679 * C7819 +
                      C19680 * C50170) *
                         C50312 +
                     (C30765 * C7818 + C30766 * C50274 +
                      (C20138 - C20137) * C7819 + (C20140 - C20139) * C50170) *
                         C50313 +
                     ((C21610 - C21609) * C7818 + (C21612 - C21611) * C50274 +
                      (C19537 * C3502 - C49970 * C3504) * C7819 +
                      (C19537 * C3506 - C49970 * C3508) * C50170) *
                         C43894) *
                        C50035 * C250) *
                       C50006)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C49970 * C129 - C19537 * C122) * C7818 +
                     (C49970 * C143 - C19537 * C133) * C50274 +
                     (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                        C50312 +
                    ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                     C22315 * C7819 + C22316 * C50170) *
                        C50313 +
                    (C21795 * C7818 + C21796 * C50274 + C21767 * C7819 +
                     C21768 * C50170) *
                        C43894) *
                       C50035 * C50019 * C113 +
                   (((C19537 * C123 - C49970 * C130) * C7818 +
                     (C19537 * C134 - C49970 * C144) * C50274 +
                     (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                        C50312 +
                    ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                     C22321 * C7819 + C22322 * C50170) *
                        C50313 +
                    (C21799 * C7818 + C21800 * C50274 + C21785 * C7819 +
                     C21786 * C50170) *
                        C43894) *
                       C50035 * C50019 * C114 +
                   (((C49970 * C131 - C19537 * C124) * C7818 +
                     (C49970 * C145 - C19537 * C135) * C50274 +
                     (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                        C50312 +
                    ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                     (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                        C50313 +
                    ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                     (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                        C43894) *
                       C50035 * C50019 * C115 +
                   (((C19537 * C125 - C49970 * C132) * C7818 +
                     (C19537 * C136 - C49970 * C146) * C50274 +
                     (C19537 * C256 - C49970 * C266) * C7819 +
                     (C19537 * C270 - C49970 * C286) * C50170) *
                        C50312 +
                    ((C19537 * C397 - C49970 * C407) * C7818 +
                     (C19537 * C411 - C49970 * C427) * C50274 +
                     (C19537 * C778 - C49970 * C783) * C7819 +
                     (C19537 * C787 - C49970 * C793) * C50170) *
                        C50313 +
                    ((C19537 * C401 - C49970 * C415) * C7818 +
                     (C19537 * C419 - C49970 * C431) * C50274 +
                     (C19537 * C1086 - C49970 * C1090) * C7819 +
                     (C19537 * C1094 - C49970 * C1098) * C50170) *
                        C43894) *
                       C50035 * C50019 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C391 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C392 +
                    (C46882 * C50312 +
                     (C38757 * C7818 + C38758 * C50274 + C22723 * C7819 +
                      C22724 * C50170) *
                         C50313 +
                     ((C23630 - C23631) * C7818 + (C23632 - C23633) * C50274 +
                      (C22725 - C22726) * C7819 + (C22727 - C22728) * C50170) *
                         C43894) *
                        C393) *
                       C50019 * C251 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C391 +
                    (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                      C22323 * C7819 + C22324 * C50170) *
                         C50312 +
                     ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                      C22325 * C7819 + C22326 * C50170) *
                         C50313 +
                     ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                      (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                         C43894) *
                        C392 +
                    (C46883 * C50312 +
                     (C38761 * C7818 + C38762 * C50274 +
                      (C21792 - C21791) * C7819 + (C21794 - C21793) * C50170) *
                         C50313 +
                     ((C38764 - C38763) * C7818 + (C38766 - C38765) * C50274 +
                      (C19537 * C6301 - C49970 * C6303) * C7819 +
                      (C19537 * C6305 - C49970 * C6307) * C50170) *
                         C43894) *
                        C393) *
                       C50019 * C50006)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50262 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C50304 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C50262 +
                    (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                      C22323 * C7819 + C22324 * C50170) *
                         C50312 +
                     ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                      C22325 * C7819 + C22326 * C50170) *
                         C50313 +
                     ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                      (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C50305 +
                   ((((C49970 * C131 - C19537 * C124) * C7818 +
                      (C49970 * C145 - C19537 * C135) * C50274 +
                      (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                         C50312 +
                     ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                      (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                         C50313 +
                     ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                      (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                         C43894) *
                        C50262 +
                    (((C22114 - C22113) * C7818 + (C22116 - C22115) * C50274 +
                      (C21960 - C21959) * C7819 + (C21962 - C21961) * C50170) *
                         C50312 +
                     ((C22118 - C22117) * C7818 + (C22120 - C22119) * C50274 +
                      (C21964 - C21963) * C7819 + (C21966 - C21965) * C50170) *
                         C50313 +
                     ((C38972 - C38971) * C7818 + (C38974 - C38973) * C50274 +
                      (C19537 * C5898 - C49970 * C5899) * C7819 +
                      (C19537 * C5900 - C49970 * C5901) * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C49970 * C129 - C19537 * C122) * C7818 +
                     (C49970 * C143 - C19537 * C133) * C50274 +
                     (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                        C50312 +
                    ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                     C22315 * C7819 + C22316 * C50170) *
                        C50313 +
                    (C21795 * C7818 + C21796 * C50274 + C21767 * C7819 +
                     C21768 * C50170) *
                        C43894) *
                       C50035 * C50019 * C113 +
                   (((C19537 * C123 - C49970 * C130) * C7818 +
                     (C19537 * C134 - C49970 * C144) * C50274 +
                     (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                        C50312 +
                    ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                     C22321 * C7819 + C22322 * C50170) *
                        C50313 +
                    (C21799 * C7818 + C21800 * C50274 + C21785 * C7819 +
                     C21786 * C50170) *
                        C43894) *
                       C50035 * C50019 * C114 +
                   (((C49970 * C131 - C19537 * C124) * C7818 +
                     (C49970 * C145 - C19537 * C135) * C50274 +
                     (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                        C50312 +
                    ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                     (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                        C50313 +
                    ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                     (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                        C43894) *
                       C50035 * C50019 * C115 +
                   (((C19537 * C125 - C49970 * C132) * C7818 +
                     (C19537 * C136 - C49970 * C146) * C50274 +
                     (C19537 * C256 - C49970 * C266) * C7819 +
                     (C19537 * C270 - C49970 * C286) * C50170) *
                        C50312 +
                    ((C19537 * C397 - C49970 * C407) * C7818 +
                     (C19537 * C411 - C49970 * C427) * C50274 +
                     (C19537 * C778 - C49970 * C783) * C7819 +
                     (C19537 * C787 - C49970 * C793) * C50170) *
                        C50313 +
                    ((C19537 * C401 - C49970 * C415) * C7818 +
                     (C19537 * C419 - C49970 * C431) * C50274 +
                     (C19537 * C1086 - C49970 * C1090) * C7819 +
                     (C19537 * C1094 - C49970 * C1098) * C50170) *
                        C43894) *
                       C50035 * C50019 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     (C21795 * C7818 + C21796 * C50274 + C21767 * C7819 +
                      C21768 * C50170) *
                         C43894) *
                        C50035 * C248 +
                    (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                      C22732 * C50170) *
                         C43894) *
                        C50035 * C249 +
                    ((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                      C19676 * C50170) *
                         C50312 +
                     (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                      C32282 * C50170) *
                         C50313 +
                     (C23230 * C7818 + C23231 * C50274 +
                      (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                         C43894) *
                        C50035 * C250) *
                       C251 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     (C21799 * C7818 + C21800 * C50274 + C21785 * C7819 +
                      C21786 * C50170) *
                         C43894) *
                        C50035 * C248 +
                    (((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                      (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                         C50312 +
                     (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                      C31404 * C50170) *
                         C50313 +
                     (C22325 * C7818 + C22326 * C50274 +
                      (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                         C43894) *
                        C50035 * C249 +
                    ((C19677 * C7818 + C19678 * C50274 + C19679 * C7819 +
                      C19680 * C50170) *
                         C50312 +
                     (C30765 * C7818 + C30766 * C50274 +
                      (C20138 - C20137) * C7819 + (C20140 - C20139) * C50170) *
                         C50313 +
                     ((C21610 - C21609) * C7818 + (C21612 - C21611) * C50274 +
                      (C19537 * C3502 - C49970 * C3504) * C7819 +
                      (C19537 * C3506 - C49970 * C3508) * C50170) *
                         C43894) *
                        C50035 * C250) *
                       C50006)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50035 * C50306 +
                    (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     C47766 * C43894) *
                        C50035 * C50307 +
                    ((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                      C19676 * C50170) *
                         C50312 +
                     (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                      C32282 * C50170) *
                         C50313 +
                     (C23230 * C7818 + C23231 * C50274 +
                      (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                         C43894) *
                        C50035 * C1199) *
                       C50253 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C50035 * C50306 +
                    (((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                      (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                         C50312 +
                     (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                      C31404 * C50170) *
                         C50313 +
                     (C22325 * C7818 + C22326 * C50274 +
                      (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                         C43894) *
                        C50035 * C50307 +
                    ((C19677 * C7818 + C19678 * C50274 + C19679 * C7819 +
                      C19680 * C50170) *
                         C50312 +
                     (C30765 * C7818 + C30766 * C50274 +
                      (C20138 - C20137) * C7819 + (C20140 - C20139) * C50170) *
                         C50313 +
                     ((C21610 - C21609) * C7818 + (C21612 - C21611) * C50274 +
                      (C19537 * C3502 - C49970 * C3504) * C7819 +
                      (C19537 * C3506 - C49970 * C3508) * C50170) *
                         C43894) *
                        C50035 * C1199) *
                       C50006)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50262 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C50099) *
                       C50306 +
                   ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     C47766 * C43894) *
                        C50262 +
                    ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                      C23229 * C50170) *
                         C50312 +
                     (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                      C23231 * C50170) *
                         C50313 +
                     (C22723 * C7818 + C22724 * C50274 +
                      (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                         C43894) *
                        C50099) *
                       C50307 +
                   (((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                      C19676 * C50170) *
                         C50312 +
                     (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                      C32282 * C50170) *
                         C50313 +
                     (C23230 * C7818 + C23231 * C50274 +
                      (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                         C43894) *
                        C50262 +
                    ((C20761 * C7818 + C20762 * C50274 + C20763 * C7819 +
                      C20764 * C50170) *
                         C50312 +
                     (C22731 * C7818 + C22732 * C50274 +
                      (C20428 - C20427) * C7819 + (C20430 - C20429) * C50170) *
                         C50313 +
                     ((C22734 - C22733) * C7818 + (C22736 - C22735) * C50274 +
                      (C19537 * C21030 - C49970 * C21031) * C7819 +
                      (C19537 * C21032 - C49970 * C21033) * C50170) *
                         C43894) *
                        C50099) *
                       C1199) *
                  C50000) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C49970 * C129 - C19537 * C122) * C7818 +
                     (C49970 * C143 - C19537 * C133) * C50274 +
                     (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                        C50312 +
                    ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                     C22315 * C7819 + C22316 * C50170) *
                        C50313 +
                    C46882 * C43894) *
                       C50035 * C964 +
                   (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                     (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                        C50312 +
                    (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                     C20762 * C50170) *
                        C50313 +
                    (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                     C22732 * C50170) *
                        C43894) *
                       C50035 * C965 +
                   ((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                     C19676 * C50170) *
                        C50312 +
                    (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                     C32282 * C50170) *
                        C50313 +
                    (C23230 * C7818 + C23231 * C50274 +
                     (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                        C43894) *
                       C50035 * C966 +
                   ((C20309 * C7818 + C20310 * C50274 + C20311 * C7819 +
                     C20312 * C50170) *
                        C50312 +
                    (C20763 * C7818 + C20764 * C50274 +
                     (C20766 - C20765) * C7819 + (C20768 - C20767) * C50170) *
                        C50313 +
                    ((C20428 - C20427) * C7818 + (C20430 - C20429) * C50274 +
                     (C19537 * C20414 - C49970 * C20415) * C7819 +
                     (C19537 * C20416 - C49970 * C20417) * C50170) *
                        C43894) *
                       C50035 * C967) *
                  C50000) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50035 * C893 +
                    (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                      C22732 * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C895 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C50035 * C893 +
                    (((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                      (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                         C50312 +
                     (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                      C31404 * C50170) *
                         C50313 +
                     (C22325 * C7818 + C22326 * C50274 +
                      (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C896 +
                   ((((C49970 * C131 - C19537 * C124) * C7818 +
                      (C49970 * C145 - C19537 * C135) * C50274 +
                      (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                         C50312 +
                     ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                      (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                         C50313 +
                     ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                      (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                         C43894) *
                        C50035 * C893 +
                    (((C19878 - C19877) * C7818 + (C19880 - C19879) * C50274 +
                      (C19882 - C19881) * C7819 + (C19884 - C19883) * C50170) *
                         C50312 +
                     ((C21960 - C21959) * C7818 + (C21962 - C21961) * C50274 +
                      (C31060 - C31059) * C7819 + (C31062 - C31061) * C50170) *
                         C50313 +
                     ((C21964 - C21963) * C7818 + (C21966 - C21965) * C50274 +
                      (C19537 * C2533 - C49970 * C2538) * C7819 +
                      (C19537 * C2539 - C49970 * C2542) * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C391 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C392 +
                    (C46882 * C50312 +
                     (C38757 * C7818 + C38758 * C50274 + C22723 * C7819 +
                      C22724 * C50170) *
                         C50313 +
                     ((C23630 - C23631) * C7818 + (C23632 - C23633) * C50274 +
                      (C22725 - C22726) * C7819 + (C22727 - C22728) * C50170) *
                         C43894) *
                        C393) *
                       C893 +
                   ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     C47766 * C43894) *
                        C391 +
                    ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                      C23229 * C50170) *
                         C50312 +
                     (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                      C23231 * C50170) *
                         C50313 +
                     (C22723 * C7818 + C22724 * C50274 +
                      (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                         C43894) *
                        C392 +
                    (C47766 * C50312 +
                     (C22721 * C7818 + C22722 * C50274 +
                      (C22734 - C22733) * C7819 + (C22736 - C22735) * C50170) *
                         C50313 +
                     ((C22726 - C22725) * C7818 + (C22728 - C22727) * C50274 +
                      (C19537 * C22716 - C49970 * C22717) * C7819 +
                      (C19537 * C22718 - C49970 * C22719) * C50170) *
                         C43894) *
                        C393) *
                       C50071) *
                  C50000) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C49970 * C129 - C19537 * C122) * C7818 +
                       (C49970 * C143 - C19537 * C133) * C50274 +
                       (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                          C50312 +
                      ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                       C22315 * C7819 + C22316 * C50170) *
                          C50313 +
                      C46882 * C43894) *
                         C50262 +
                     (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                       C22317 * C7819 + C22318 * C50170) *
                          C50312 +
                      ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                       C22319 * C7819 + C22320 * C50170) *
                          C50313 +
                      (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                       C22722 * C50170) *
                          C43894) *
                         C50099) *
                        C893 +
                    ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                       (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                          C50312 +
                      (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                       C20762 * C50170) *
                          C50313 +
                      C47766 * C43894) *
                         C50262 +
                     ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                       C23229 * C50170) *
                          C50312 +
                      (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                       C23231 * C50170) *
                          C50313 +
                      (C22723 * C7818 + C22724 * C50274 +
                       (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                          C43894) *
                         C50099) *
                        C50071) *
                       C50253 +
                   (((((C19537 * C123 - C49970 * C130) * C7818 +
                       (C19537 * C134 - C49970 * C144) * C50274 +
                       (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                          C50312 +
                      ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                       C22321 * C7819 + C22322 * C50170) *
                          C50313 +
                      C46883 * C43894) *
                         C50262 +
                     (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                       C22323 * C7819 + C22324 * C50170) *
                          C50312 +
                      ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                       C22325 * C7819 + C22326 * C50170) *
                          C50313 +
                      ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                       (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                          C43894) *
                         C50099) *
                        C893 +
                    ((((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                       (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                          C50312 +
                      (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                       C31404 * C50170) *
                          C50313 +
                      (C22325 * C7818 + C22326 * C50274 +
                       (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                          C43894) *
                         C50262 +
                     ((C22321 * C7818 + C22322 * C50274 + C30765 * C7819 +
                       C30766 * C50170) *
                          C50312 +
                      (C21785 * C7818 + C21786 * C50274 +
                       (C21610 - C21609) * C7819 + (C21612 - C21611) * C50170) *
                          C50313 +
                      ((C21792 - C21791) * C7818 + (C21794 - C21793) * C50274 +
                       (C19537 * C4426 - C49970 * C4432) * C7819 +
                       (C19537 * C4434 - C49970 * C4438) * C50170) *
                          C43894) *
                         C50099) *
                        C50071) *
                       C50006)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50035 * C893 +
                    (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                      C22732 * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C895 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C50035 * C893 +
                    (((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                      (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                         C50312 +
                     (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                      C31404 * C50170) *
                         C50313 +
                     (C22325 * C7818 + C22326 * C50274 +
                      (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C896 +
                   ((((C49970 * C131 - C19537 * C124) * C7818 +
                      (C49970 * C145 - C19537 * C135) * C50274 +
                      (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                         C50312 +
                     ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                      (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                         C50313 +
                     ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                      (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                         C43894) *
                        C50035 * C893 +
                    (((C19878 - C19877) * C7818 + (C19880 - C19879) * C50274 +
                      (C19882 - C19881) * C7819 + (C19884 - C19883) * C50170) *
                         C50312 +
                     ((C21960 - C21959) * C7818 + (C21962 - C21961) * C50274 +
                      (C31060 - C31059) * C7819 + (C31062 - C31061) * C50170) *
                         C50313 +
                     ((C21964 - C21963) * C7818 + (C21966 - C21965) * C50274 +
                      (C19537 * C2533 - C49970 * C2538) * C7819 +
                      (C19537 * C2539 - C49970 * C2542) * C50170) *
                         C43894) *
                        C50035 * C50071) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C49970 * C129 - C19537 * C122) * C7818 +
                     (C49970 * C143 - C19537 * C133) * C50274 +
                     (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                        C50312 +
                    ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                     C22315 * C7819 + C22316 * C50170) *
                        C50313 +
                    C46882 * C43894) *
                       C50035 * C964 +
                   (((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                     (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                        C50312 +
                    (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                     C20762 * C50170) *
                        C50313 +
                    (C22319 * C7818 + C22320 * C50274 + C22731 * C7819 +
                     C22732 * C50170) *
                        C43894) *
                       C50035 * C965 +
                   ((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                     C19676 * C50170) *
                        C50312 +
                    (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                     C32282 * C50170) *
                        C50313 +
                    (C23230 * C7818 + C23231 * C50274 +
                     (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                        C43894) *
                       C50035 * C966 +
                   ((C20309 * C7818 + C20310 * C50274 + C20311 * C7819 +
                     C20312 * C50170) *
                        C50312 +
                    (C20763 * C7818 + C20764 * C50274 +
                     (C20766 - C20765) * C7819 + (C20768 - C20767) * C50170) *
                        C50313 +
                    ((C20428 - C20427) * C7818 + (C20430 - C20429) * C50274 +
                     (C19537 * C20414 - C49970 * C20415) * C7819 +
                     (C19537 * C20416 - C49970 * C20417) * C50170) *
                        C43894) *
                       C50035 * C967) *
                  C50000) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C49970 * C129 - C19537 * C122) * C7818 +
                       (C49970 * C143 - C19537 * C133) * C50274 +
                       (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                          C50312 +
                      ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                       C22315 * C7819 + C22316 * C50170) *
                          C50313 +
                      C46882 * C43894) *
                         C1544 +
                     (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                       C22317 * C7819 + C22318 * C50170) *
                          C50312 +
                      ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                       C22319 * C7819 + C22320 * C50170) *
                          C50313 +
                      C48649 * C43894) *
                         C50099) *
                        C50261 +
                    ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                       (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                          C50312 +
                      (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                       C20762 * C50170) *
                          C50313 +
                      C47766 * C43894) *
                         C1544 +
                     ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                       C23229 * C50170) *
                          C50312 +
                      (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                       C23231 * C50170) *
                          C50313 +
                      (C22723 * C7818 + C22724 * C50274 +
                       (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                          C43894) *
                         C50099) *
                        C50071) *
                       C50253 +
                   (((((C19537 * C123 - C49970 * C130) * C7818 +
                       (C19537 * C134 - C49970 * C144) * C50274 +
                       (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                          C50312 +
                      ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                       C22321 * C7819 + C22322 * C50170) *
                          C50313 +
                      C46883 * C43894) *
                         C1544 +
                     (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                       C22323 * C7819 + C22324 * C50170) *
                          C50312 +
                      ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                       C22325 * C7819 + C22326 * C50170) *
                          C50313 +
                      ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                       (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                          C43894) *
                         C50099) *
                        C50261 +
                    ((((C19658 - C19657) * C7818 + (C19660 - C19659) * C50274 +
                       (C19662 - C19661) * C7819 + (C19664 - C19663) * C50170) *
                          C50312 +
                      (C22323 * C7818 + C22324 * C50274 + C31403 * C7819 +
                       C31404 * C50170) *
                          C50313 +
                      (C22325 * C7818 + C22326 * C50274 +
                       (C21609 - C21610) * C7819 + (C21611 - C21612) * C50170) *
                          C43894) *
                         C1544 +
                     ((C22321 * C7818 + C22322 * C50274 + C30765 * C7819 +
                       C30766 * C50170) *
                          C50312 +
                      (C21785 * C7818 + C21786 * C50274 +
                       (C21610 - C21609) * C7819 + (C21612 - C21611) * C50170) *
                          C50313 +
                      ((C21792 - C21791) * C7818 + (C21794 - C21793) * C50274 +
                       (C19537 * C4426 - C49970 * C4432) * C7819 +
                       (C19537 * C4434 - C49970 * C4438) * C50170) *
                          C43894) *
                         C50099) *
                        C50071) *
                       C50006)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50308 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     C48649 * C43894) *
                        C50309 +
                    (C46882 * C50312 +
                     (C38757 * C7818 + C38758 * C50274 + C22723 * C7819 +
                      C22724 * C50170) *
                         C50313 +
                     ((C23630 - C23631) * C7818 + (C23632 - C23633) * C50274 +
                      (C22725 - C22726) * C7819 + (C22727 - C22728) * C50170) *
                         C43894) *
                        C1960) *
                       C50261 +
                   ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     C47766 * C43894) *
                        C50308 +
                    ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                      C23229 * C50170) *
                         C50312 +
                     (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                      C23231 * C50170) *
                         C50313 +
                     (C22723 * C7818 + C22724 * C50274 +
                      (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                         C43894) *
                        C50309 +
                    (C47766 * C50312 +
                     (C22721 * C7818 + C22722 * C50274 +
                      (C22734 - C22733) * C7819 + (C22736 - C22735) * C50170) *
                         C50313 +
                     ((C22726 - C22725) * C7818 + (C22728 - C22727) * C50274 +
                      (C19537 * C22716 - C49970 * C22717) * C7819 +
                      (C19537 * C22718 - C49970 * C22719) * C50170) *
                         C43894) *
                        C1960) *
                       C50071) *
                  C50000) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C1544 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C50099) *
                       C248 +
                   ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     C47766 * C43894) *
                        C1544 +
                    ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                      C23229 * C50170) *
                         C50312 +
                     (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                      C23231 * C50170) *
                         C50313 +
                     (C22723 * C7818 + C22724 * C50274 +
                      (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                         C43894) *
                        C50099) *
                       C249 +
                   (((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                      C19676 * C50170) *
                         C50312 +
                     (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                      C32282 * C50170) *
                         C50313 +
                     (C23230 * C7818 + C23231 * C50274 +
                      (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                         C43894) *
                        C1544 +
                    ((C20761 * C7818 + C20762 * C50274 + C20763 * C7819 +
                      C20764 * C50170) *
                         C50312 +
                     (C22731 * C7818 + C22732 * C50274 +
                      (C20428 - C20427) * C7819 + (C20430 - C20429) * C50170) *
                         C50313 +
                     ((C22734 - C22733) * C7818 + (C22736 - C22735) * C50274 +
                      (C19537 * C21030 - C49970 * C21031) * C7819 +
                      (C19537 * C21032 - C49970 * C21033) * C50170) *
                         C43894) *
                        C50099) *
                       C250) *
                  C50000) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C1544 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C895 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C1544 +
                    (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                      C22323 * C7819 + C22324 * C50170) *
                         C50312 +
                     ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                      C22325 * C7819 + C22326 * C50170) *
                         C50313 +
                     ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                      (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C896 +
                   ((((C49970 * C131 - C19537 * C124) * C7818 +
                      (C49970 * C145 - C19537 * C135) * C50274 +
                      (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                         C50312 +
                     ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                      (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                         C50313 +
                     ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                      (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                         C43894) *
                        C1544 +
                    (((C22114 - C22113) * C7818 + (C22116 - C22115) * C50274 +
                      (C21960 - C21959) * C7819 + (C21962 - C21961) * C50170) *
                         C50312 +
                     ((C22118 - C22117) * C7818 + (C22120 - C22119) * C50274 +
                      (C21964 - C21963) * C7819 + (C21966 - C21965) * C50170) *
                         C50313 +
                     ((C38972 - C38971) * C7818 + (C38974 - C38973) * C50274 +
                      (C19537 * C5898 - C49970 * C5899) * C7819 +
                      (C19537 * C5900 - C49970 * C5901) * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C49970 * C129 - C19537 * C122) * C7818 +
                     (C49970 * C143 - C19537 * C133) * C50274 +
                     (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                        C50312 +
                    ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                     C22315 * C7819 + C22316 * C50170) *
                        C50313 +
                    C46882 * C43894) *
                       C1710 +
                   (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                     C22317 * C7819 + C22318 * C50170) *
                        C50312 +
                    ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                     C22319 * C7819 + C22320 * C50170) *
                        C50313 +
                    C48649 * C43894) *
                       C1711 +
                   (C46882 * C50312 +
                    (C38757 * C7818 + C38758 * C50274 + C22723 * C7819 +
                     C22724 * C50170) *
                        C50313 +
                    ((C23630 - C23631) * C7818 + (C23632 - C23633) * C50274 +
                     (C22725 - C22726) * C7819 + (C22727 - C22728) * C50170) *
                        C43894) *
                       C1712 +
                   (C48649 * C50312 +
                    (C39967 * C7818 + C39968 * C50274 +
                     (C22726 - C22725) * C7819 + (C22728 - C22727) * C50170) *
                        C50313 +
                    ((C39970 - C39969) * C7818 + (C39972 - C39971) * C50274 +
                     (C19537 * C23621 - C49970 * C23622) * C7819 +
                     (C19537 * C23623 - C49970 * C23624) * C50170) *
                        C43894) *
                       C1713) *
                  C50019 * C50000) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C50308 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     C48649 * C43894) *
                        C50309 +
                    (C46882 * C50312 +
                     (C38757 * C7818 + C38758 * C50274 + C22723 * C7819 +
                      C22724 * C50170) *
                         C50313 +
                     ((C23630 - C23631) * C7818 + (C23632 - C23633) * C50274 +
                      (C22725 - C22726) * C7819 + (C22727 - C22728) * C50170) *
                         C43894) *
                        C1960) *
                       C50019 * C50253 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C50308 +
                    (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                      C22323 * C7819 + C22324 * C50170) *
                         C50312 +
                     ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                      C22325 * C7819 + C22326 * C50170) *
                         C50313 +
                     ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                      (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                         C43894) *
                        C50309 +
                    (C46883 * C50312 +
                     (C38761 * C7818 + C38762 * C50274 +
                      (C21792 - C21791) * C7819 + (C21794 - C21793) * C50170) *
                         C50313 +
                     ((C38764 - C38763) * C7818 + (C38766 - C38765) * C50274 +
                      (C19537 * C6301 - C49970 * C6303) * C7819 +
                      (C19537 * C6305 - C49970 * C6307) * C50170) *
                         C43894) *
                        C1960) *
                       C50019 * C50006)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C1544 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C895 +
                   ((((C19537 * C123 - C49970 * C130) * C7818 +
                      (C19537 * C134 - C49970 * C144) * C50274 +
                      (C19657 - C19658) * C7819 + (C19659 - C19660) * C50170) *
                         C50312 +
                     ((C21777 - C21778) * C7818 + (C21779 - C21780) * C50274 +
                      C22321 * C7819 + C22322 * C50170) *
                         C50313 +
                     C46883 * C43894) *
                        C1544 +
                    (((C21778 - C21777) * C7818 + (C21780 - C21779) * C50274 +
                      C22323 * C7819 + C22324 * C50170) *
                         C50312 +
                     ((C21782 - C21781) * C7818 + (C21784 - C21783) * C50274 +
                      C22325 * C7819 + C22326 * C50170) *
                         C50313 +
                     ((C21787 - C21788) * C7818 + (C21789 - C21790) * C50274 +
                      (C21791 - C21792) * C7819 + (C21793 - C21794) * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C896 +
                   ((((C49970 * C131 - C19537 * C124) * C7818 +
                      (C49970 * C145 - C19537 * C135) * C50274 +
                      (C19877 - C19878) * C7819 + (C19879 - C19880) * C50170) *
                         C50312 +
                     ((C22113 - C22114) * C7818 + (C22115 - C22116) * C50274 +
                      (C21959 - C21960) * C7819 + (C21961 - C21962) * C50170) *
                         C50313 +
                     ((C22117 - C22118) * C7818 + (C22119 - C22120) * C50274 +
                      (C21963 - C21964) * C7819 + (C21965 - C21966) * C50170) *
                         C43894) *
                        C1544 +
                    (((C22114 - C22113) * C7818 + (C22116 - C22115) * C50274 +
                      (C21960 - C21959) * C7819 + (C21962 - C21961) * C50170) *
                         C50312 +
                     ((C22118 - C22117) * C7818 + (C22120 - C22119) * C50274 +
                      (C21964 - C21963) * C7819 + (C21966 - C21965) * C50170) *
                         C50313 +
                     ((C38972 - C38971) * C7818 + (C38974 - C38973) * C50274 +
                      (C19537 * C5898 - C49970 * C5899) * C7819 +
                      (C19537 * C5900 - C49970 * C5901) * C50170) *
                         C43894) *
                        C50099) *
                       C50019 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C49970 * C129 - C19537 * C122) * C7818 +
                      (C49970 * C143 - C19537 * C133) * C50274 +
                      (C19641 - C19642) * C7819 + (C19643 - C19644) * C50170) *
                         C50312 +
                     ((C21759 - C21760) * C7818 + (C21761 - C21762) * C50274 +
                      C22315 * C7819 + C22316 * C50170) *
                         C50313 +
                     C46882 * C43894) *
                        C1544 +
                    (((C21760 - C21759) * C7818 + (C21762 - C21761) * C50274 +
                      C22317 * C7819 + C22318 * C50170) *
                         C50312 +
                     ((C21764 - C21763) * C7818 + (C21766 - C21765) * C50274 +
                      C22319 * C7819 + C22320 * C50170) *
                         C50313 +
                     (C23626 * C7818 + C23627 * C50274 + C22721 * C7819 +
                      C22722 * C50170) *
                         C43894) *
                        C50099) *
                       C248 +
                   ((((C19642 - C19641) * C7818 + (C19644 - C19643) * C50274 +
                      (C19646 - C19645) * C7819 + (C19648 - C19647) * C50170) *
                         C50312 +
                     (C22317 * C7818 + C22318 * C50274 + C20761 * C7819 +
                      C20762 * C50170) *
                         C50313 +
                     C47766 * C43894) *
                        C1544 +
                    ((C22315 * C7818 + C22316 * C50274 + C23228 * C7819 +
                      C23229 * C50170) *
                         C50312 +
                     (C21767 * C7818 + C21768 * C50274 + C23230 * C7819 +
                      C23231 * C50170) *
                         C50313 +
                     (C22723 * C7818 + C22724 * C50274 +
                      (C22733 - C22734) * C7819 + (C22735 - C22736) * C50170) *
                         C43894) *
                        C50099) *
                       C249 +
                   (((C19673 * C7818 + C19674 * C50274 + C19675 * C7819 +
                      C19676 * C50170) *
                         C50312 +
                     (C23228 * C7818 + C23229 * C50274 + C32281 * C7819 +
                      C32282 * C50170) *
                         C50313 +
                     (C23230 * C7818 + C23231 * C50274 +
                      (C20427 - C20428) * C7819 + (C20429 - C20430) * C50170) *
                         C43894) *
                        C1544 +
                    ((C20761 * C7818 + C20762 * C50274 + C20763 * C7819 +
                      C20764 * C50170) *
                         C50312 +
                     (C22731 * C7818 + C22732 * C50274 +
                      (C20428 - C20427) * C7819 + (C20430 - C20429) * C50170) *
                         C50313 +
                     ((C22734 - C22733) * C7818 + (C22736 - C22735) * C50274 +
                      (C19537 * C21030 - C49970 * C21031) * C7819 +
                      (C19537 * C21032 - C49970 * C21033) * C50170) *
                         C43894) *
                        C50099) *
                       C250) *
                  C50000) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C50261 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C50261 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50035 * C50261 +
           (((C19878 - C19877) * C2164 + (C19880 - C19879) * C2159 +
             (C19882 - C19881) * C2165 + (C19884 - C19883) * C2160 +
             (C19886 - C19885) * C2166 + (C19888 - C19887) * C2161) *
                C33256 +
            ((C21960 - C21959) * C2164 + (C21962 - C21961) * C2159 +
             (C31060 - C31059) * C2165 + (C31062 - C31061) * C2160 +
             (C19537 * C3047 - C49970 * C3052) * C2166 +
             (C19537 * C3053 - C49970 * C3056) * C2161) *
                C50196) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C50261 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C50261 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
              C16808 * C420 - C16813 * C402) *
                 C121 +
             (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
              C16808 * C432 - C16813 * C421) *
                 C50120) *
                C50196) *
               C50035 * C50261 +
           (((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C121 +
             (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C50120) *
                C33256 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50035 * C50261 +
           (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 +
            (C22319 * C121 + C22320 * C50120) * C38556 +
            (C22721 * C121 + C22722 * C50120) * C38557) *
               C50035 * C50071) *
              C50304 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C50035 * C50261 +
           (((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
            (C22323 * C121 + C22324 * C50120) * C38555 +
            (C22325 * C121 + C22326 * C50120) * C38556 +
            ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
               C50035 * C50071) *
              C50305 +
          ((((C49970 * C131 - C19537 * C124) * C121 +
             (C49970 * C145 - C19537 * C135) * C50120) *
                C38554 +
            ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
            ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
            ((C49970 * C1720 - C19537 * C1716) * C121 +
             (C49970 * C1728 - C19537 * C1724) * C50120) *
                C38557) *
               C50035 * C50261 +
           (((C19878 - C19877) * C121 + (C19880 - C19879) * C50120) * C38554 +
            ((C21960 - C21959) * C121 + (C21962 - C21961) * C50120) * C38555 +
            ((C21964 - C21963) * C121 + (C21966 - C21965) * C50120) * C38556 +
            ((C19537 * C5898 - C49970 * C5899) * C121 +
             (C19537 * C5900 - C49970 * C5901) * C50120) *
                C38557) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C2164 +
              (C49970 * C143 - C19537 * C133) * C2159 +
              (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
              C19673 * C2166 + C19674 * C2161) *
                 C33256 +
             ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
              C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
              C23229 * C2161) *
                 C50196) *
                C50262 +
            (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
              C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
              C20762 * C2161) *
                 C33256 +
             ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
              C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
              C22732 * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
              (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
              C20309 * C2166 + C20310 * C2161) *
                 C33256 +
             (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 +
              C20762 * C2160 + C20763 * C2166 + C20764 * C2161) *
                 C50196) *
                C50262 +
            ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 +
              C23229 * C2160 + C32281 * C2166 + C32282 * C2161) *
                 C33256 +
             (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 +
              C23231 * C2160 + (C20427 - C20428) * C2166 +
              (C20429 - C20430) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C19537 * C123 - C49970 * C130) * C2164 +
              (C19537 * C134 - C49970 * C144) * C2159 +
              (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
              C19677 * C2166 + C19678 * C2161) *
                 C33256 +
             ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
              C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
              C30766 * C2161) *
                 C50196) *
                C50262 +
            (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
              C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
              C31404 * C2161) *
                 C33256 +
             ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
              C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
              (C21611 - C21612) * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
              (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
              (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                 C33256 +
             (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 +
              C31404 * C2160 + (C20137 - C20138) * C2166 +
              (C20139 - C20140) * C2161) *
                 C50196) *
                C50262 +
            ((C22321 * C2164 + C22322 * C2159 + C30765 * C2165 +
              C30766 * C2160 + (C20138 - C20137) * C2166 +
              (C20140 - C20139) * C2161) *
                 C33256 +
             (C21785 * C2164 + C21786 * C2159 + (C21610 - C21609) * C2165 +
              (C21612 - C21611) * C2160 +
              (C19537 * C3502 - C49970 * C3504) * C2166 +
              (C19537 * C3506 - C49970 * C3508) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50120) *
                 C33256 +
             ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
              (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                 C50196) *
                C50262 +
            (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
              (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                 C33256 +
             ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
              (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
              (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                 C33256 +
             ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
              (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                 C50196) *
                C50262 +
            (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
              (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                 C33256 +
             ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
              (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50120) *
                 C33256 +
             ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
              (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                 C50196) *
                C50262 +
            (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
              (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                 C33256 +
             ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
              (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
              (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                 C33256 +
             ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
              (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                 C50196) *
                C50262 +
            (((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C121 +
              (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C50120) *
                 C33256 +
             ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
               C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                  C121 +
              (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
               C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C121 +
              (C49970 * C143 - C19537 * C133) * C50120) *
                 C38554 +
             ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
             C38767 * C38556 + C38773 * C38557) *
                C50262 +
            (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
             ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
             (C23626 * C121 + C23627 * C50120) * C38556 +
             ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
             (C22317 * C121 + C22318 * C50120) * C38555 +
             (C22319 * C121 + C22320 * C50120) * C38556 +
             (C22721 * C121 + C22722 * C50120) * C38557) *
                C50262 +
            ((C22315 * C121 + C22316 * C50120) * C38554 +
             (C21767 * C121 + C21768 * C50120) * C38555 +
             (C22723 * C121 + C22724 * C50120) * C38556 +
             ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
                C50099) *
               C50071) *
              C251 +
          (((((C19537 * C123 - C49970 * C130) * C121 +
              (C19537 * C134 - C49970 * C144) * C50120) *
                 C38554 +
             ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
             C38770 * C38556 + C38774 * C38557) *
                C50262 +
            (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
             ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
             ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
             ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
             (C22323 * C121 + C22324 * C50120) * C38555 +
             (C22325 * C121 + C22326 * C50120) * C38556 +
             ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
                C50262 +
            ((C22321 * C121 + C22322 * C50120) * C38554 +
             (C21785 * C121 + C21786 * C50120) * C38555 +
             ((C21792 - C21791) * C121 + (C21794 - C21793) * C50120) * C38556 +
             ((C19537 * C6301 - C49970 * C6303) * C121 +
              (C19537 * C6305 - C49970 * C6307) * C50120) *
                 C38557) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C121 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C50120) *
                   C33256 +
               ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
                 C16808 * C406 - C16813 * C396) *
                    C121 +
                (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
                 C16808 * C426 - C16813 * C410) *
                    C50120) *
                   C50196) *
                  C50035 * C50019 * C113 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C121 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C50120) *
                   C33256 +
               ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
                 C16813 * C397 - C16808 * C407) *
                    C121 +
                (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
                 C16813 * C411 - C16808 * C427) *
                    C50120) *
                   C50196) *
                  C50035 * C50019 * C114 +
              (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                 C16808 * C137 - C16813 * C126) *
                    C121 +
                (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                 C16808 * C147 - C16813 * C138) *
                    C50120) *
                   C33256 +
               ((C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
                 C16808 * C420 - C16813 * C402) *
                    C121 +
                (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
                 C16808 * C432 - C16813 * C421) *
                    C50120) *
                   C50196) *
                  C50035 * C50019 * C115 +
              (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
                 C16813 * C127 - C16808 * C139) *
                    C121 +
                (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
                 C16813 * C140 - C16808 * C148) *
                    C50120) *
                   C33256 +
               ((C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
                 C16813 * C641 - C16808 * C642) *
                    C121 +
                (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
                 C16813 * C643 - C16808 * C644) *
                    C50120) *
                   C50196) *
                  C50035 * C50019 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50120) *
                    C33256 +
                ((C16806 * C404 - C16811 * C394 + C16807 * C405 -
                  C16812 * C395 + C16808 * C406 - C16813 * C396) *
                     C121 +
                 (C16806 * C424 - C16811 * C408 + C16807 * C425 -
                  C16812 * C409 + C16808 * C426 - C16813 * C410) *
                     C50120) *
                    C50196) *
                   C50035 * C248 +
               (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
                 (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) *
                     C50120) *
                    C33256 +
                ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
                 (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) *
                     C50120) *
                    C50196) *
                   C50035 * C249 +
               (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
                 (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) *
                     C50120) *
                    C33256 +
                ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
                 (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) *
                     C50120) *
                    C50196) *
                   C50035 * C250) *
                  C251 +
              ((((C16811 * C123 - C16806 * C130 + C16812 * C124 -
                  C16807 * C131 + C16813 * C125 - C16808 * C132) *
                     C121 +
                 (C16811 * C134 - C16806 * C144 + C16812 * C135 -
                  C16807 * C145 + C16813 * C136 - C16808 * C146) *
                     C50120) *
                    C33256 +
                ((C16811 * C395 - C16806 * C405 + C16812 * C396 -
                  C16807 * C406 + C16813 * C397 - C16808 * C407) *
                     C121 +
                 (C16811 * C409 - C16806 * C425 + C16812 * C410 -
                  C16807 * C426 + C16813 * C411 - C16808 * C427) *
                     C50120) *
                    C50196) *
                   C50035 * C248 +
               (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
                 (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) *
                     C50120) *
                    C33256 +
                ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
                 (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) *
                     C50120) *
                    C50196) *
                   C50035 * C249 +
               (((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C121 +
                 (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) *
                     C50120) *
                    C33256 +
                ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
                  C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                     C121 +
                 (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
                  C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                     C50120) *
                    C50196) *
                   C50035 * C250) *
                  C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C391 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C392 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C16806 * C1718 - C16811 * C1714 + C16807 * C1719 -
              C16812 * C1715 + C16808 * C1720 - C16813 * C1716) *
                 C121 +
             (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 -
              C16812 * C1723 + C16808 * C1728 - C16813 * C1724) *
                 C50120) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C391 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C392 +
           (((C33588 - C33587 + C33590 - C33589 + C33592 - C33591) * C121 +
             (C33594 - C33593 + C33596 - C33595 + C33598 - C33597) * C50120) *
                C33256 +
            ((C16811 * C1715 - C16806 * C1719 + C16812 * C1716 -
              C16807 * C1720 + C16813 * C1717 - C16808 * C1721) *
                 C121 +
             (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 -
              C16807 * C1728 + C16813 * C1725 - C16808 * C1729) *
                 C50120) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C2164 +
            (C19537 * C134 - C49970 * C144) * C2159 +
            (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
            C19677 * C2166 + C19678 * C2161) *
               C33256 +
           ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
            C22321 * C2165 + C22322 * C2160 + C30765 * C2166 + C30766 * C2161) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C2164 +
            (C49970 * C145 - C19537 * C135) * C2159 +
            (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
            (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
               C33256 +
           ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
            (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
            (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C2164 +
            (C19537 * C136 - C49970 * C146) * C2159 +
            (C19537 * C256 - C49970 * C266) * C2165 +
            (C19537 * C270 - C49970 * C286) * C2160 +
            (C19537 * C260 - C49970 * C274) * C2166 +
            (C19537 * C278 - C49970 * C290) * C2161) *
               C33256 +
           ((C19537 * C397 - C49970 * C407) * C2164 +
            (C19537 * C411 - C49970 * C427) * C2159 +
            (C19537 * C778 - C49970 * C783) * C2165 +
            (C19537 * C787 - C49970 * C793) * C2160 +
            (C19537 * C1433 - C49970 * C1437) * C2166 +
            (C19537 * C1441 - C49970 * C1445) * C2161) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19677 * C2164 + C19678 * C2159 + C19679 * C2165 + C19680 * C2160 +
             (C19670 - C19669) * C2166 + (C19672 - C19671) * C2161) *
                C33256 +
            (C30765 * C2164 + C30766 * C2159 + (C20138 - C20137) * C2165 +
             (C20140 - C20139) * C2160 +
             (C19537 * C4012 - C49970 * C4014) * C2166 +
             (C19537 * C4016 - C49970 * C4018) * C2161) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C391 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C392 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C391 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C392 +
           ((C21799 * C2164 + C21800 * C2159 + C21785 * C2165 + C21786 * C2160 +
             (C21610 - C21609) * C2166 + (C21612 - C21611) * C2161) *
                C33256 +
            ((C21788 - C21787) * C2164 + (C21790 - C21789) * C2159 +
             (C21792 - C21791) * C2165 + (C21794 - C21793) * C2160 +
             (C19537 * C4426 - C49970 * C4432) * C2166 +
             (C19537 * C4434 - C49970 * C4438) * C2161) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C121 +
            (C49970 * C143 - C19537 * C133) * C50120) *
               C38554 +
           ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
           (C21795 * C121 + C21796 * C50120) * C38556 +
           ((C21770 - C21769) * C121 + (C21772 - C21771) * C50120) * C38557) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C121 +
            (C19537 * C134 - C49970 * C144) * C50120) *
               C38554 +
           ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
           (C21799 * C121 + C21800 * C50120) * C38556 +
           ((C21788 - C21787) * C121 + (C21790 - C21789) * C50120) * C38557) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C121 +
            (C49970 * C145 - C19537 * C135) * C50120) *
               C38554 +
           ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
           ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
           ((C49970 * C1720 - C19537 * C1716) * C121 +
            (C49970 * C1728 - C19537 * C1724) * C50120) *
               C38557) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C121 +
            (C19537 * C136 - C49970 * C146) * C50120) *
               C38554 +
           ((C19537 * C397 - C49970 * C407) * C121 +
            (C19537 * C411 - C49970 * C427) * C50120) *
               C38555 +
           ((C19537 * C401 - C49970 * C415) * C121 +
            (C19537 * C419 - C49970 * C431) * C50120) *
               C38556 +
           ((C19537 * C1717 - C49970 * C1721) * C121 +
            (C19537 * C1725 - C49970 * C1729) * C50120) *
               C38557) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            (C21795 * C121 + C21796 * C50120) * C38556 +
            ((C21770 - C21769) * C121 + (C21772 - C21771) * C50120) * C38557) *
               C50035 * C248 +
           (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 +
            (C22319 * C121 + C22320 * C50120) * C38556 +
            (C22721 * C121 + C22722 * C50120) * C38557) *
               C50035 * C249 +
           ((C19673 * C121 + C19674 * C50120) * C38554 +
            (C23228 * C121 + C23229 * C50120) * C38555 +
            (C23230 * C121 + C23231 * C50120) * C38556 +
            ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            (C21799 * C121 + C21800 * C50120) * C38556 +
            ((C21788 - C21787) * C121 + (C21790 - C21789) * C50120) * C38557) *
               C50035 * C248 +
           (((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
            (C22323 * C121 + C22324 * C50120) * C38555 +
            (C22325 * C121 + C22326 * C50120) * C38556 +
            ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
               C50035 * C249 +
           ((C19677 * C121 + C19678 * C50120) * C38554 +
            (C30765 * C121 + C30766 * C50120) * C38555 +
            ((C21610 - C21609) * C121 + (C21612 - C21611) * C50120) * C38556 +
            ((C19537 * C4426 - C49970 * C4432) * C121 +
             (C19537 * C4434 - C49970 * C4438) * C50120) *
                C38557) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C391 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C392 +
           (C38767 * C38554 + C38773 * C38555 +
            ((C23630 - C23631) * C121 + (C23632 - C23633) * C50120) * C38556 +
            ((C49970 * C7203 - C19537 * C7201) * C121 +
             (C49970 * C7207 - C19537 * C7205) * C50120) *
                C38557) *
               C393) *
              C50019 * C251 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C391 +
           (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
            ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
            ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
            ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
               C392 +
           (C38770 * C38554 + C38774 * C38555 +
            ((C38764 - C38763) * C121 + (C38766 - C38765) * C50120) * C38556 +
            ((C19537 * C7202 - C49970 * C7204) * C121 +
             (C19537 * C7206 - C49970 * C7208) * C50120) *
                C38557) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50262 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50262 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50262 +
           (((C22114 - C22113) * C2164 + (C22116 - C22115) * C2159 +
             (C21960 - C21959) * C2165 + (C21962 - C21961) * C2160 +
             (C31060 - C31059) * C2166 + (C31062 - C31061) * C2161) *
                C33256 +
            ((C22118 - C22117) * C2164 + (C22120 - C22119) * C2159 +
             (C21964 - C21963) * C2165 + (C21966 - C21965) * C2160 +
             (C19537 * C2533 - C49970 * C2538) * C2166 +
             (C19537 * C2539 - C49970 * C2542) * C2161) *
                C50196) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50262 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50262 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C50262 +
           (((C33892 - C33891 + C33894 - C33893 + C33896 - C33895) * C121 +
             (C33898 - C33897 + C33900 - C33899 + C33902 - C33901) * C50120) *
                C33256 +
            ((C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
              C16813 * C403 - C16808 * C422) *
                 C121 +
             (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
              C16813 * C423 - C16808 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50262 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C50099) *
              C50019 * C50304 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C50262 +
           (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
            ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
            ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
            ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
               C50099) *
              C50019 * C50305 +
          ((((C49970 * C131 - C19537 * C124) * C121 +
             (C49970 * C145 - C19537 * C135) * C50120) *
                C38554 +
            ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
            ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
            ((C38971 - C38972) * C121 + (C38973 - C38974) * C50120) * C38557) *
               C50262 +
           (((C22114 - C22113) * C121 + (C22116 - C22115) * C50120) * C38554 +
            ((C22118 - C22117) * C121 + (C22120 - C22119) * C50120) * C38555 +
            ((C38972 - C38971) * C121 + (C38974 - C38973) * C50120) * C38556 +
            ((C19537 * C5320 - C49970 * C5325) * C121 +
             (C19537 * C5326 - C49970 * C5329) * C50120) *
                C38557) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
              C16808 * C406 - C16813 * C396) *
                 C121 +
             (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
              C16808 * C426 - C16813 * C410) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
              C16813 * C397 - C16808 * C407) *
                 C121 +
             (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
              C16813 * C411 - C16808 * C427) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C121 +
             (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C50120) *
                C33256 +
            ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C121 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
             C16808 * C406 - C16813 * C396) *
                C121 +
            (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
             C16808 * C426 - C16813 * C410) *
                C50120) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C121 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C50120) *
               C33256 +
           ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
             C16813 * C397 - C16808 * C407) *
                C121 +
            (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
             C16813 * C411 - C16808 * C427) *
                C50120) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C121 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C50120) *
               C33256 +
           ((C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
             C16808 * C420 - C16813 * C402) *
                C121 +
            (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
             C16808 * C432 - C16813 * C421) *
                C50120) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
             C16813 * C127 - C16808 * C139) *
                C121 +
            (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
             C16813 * C140 - C16808 * C148) *
                C50120) *
               C33256 +
           ((C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
             C16813 * C641 - C16808 * C642) *
                C121 +
            (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
             C16813 * C643 - C16808 * C644) *
                C50120) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C2164 +
            (C19537 * C134 - C49970 * C144) * C2159 +
            (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
            C19677 * C2166 + C19678 * C2161) *
               C33256 +
           ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
            C22321 * C2165 + C22322 * C2160 + C30765 * C2166 + C30766 * C2161) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C2164 +
            (C49970 * C145 - C19537 * C135) * C2159 +
            (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
            (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
               C33256 +
           ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
            (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
            (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C2164 +
            (C19537 * C136 - C49970 * C146) * C2159 +
            (C19537 * C256 - C49970 * C266) * C2165 +
            (C19537 * C270 - C49970 * C286) * C2160 +
            (C19537 * C260 - C49970 * C274) * C2166 +
            (C19537 * C278 - C49970 * C290) * C2161) *
               C33256 +
           ((C19537 * C397 - C49970 * C407) * C2164 +
            (C19537 * C411 - C49970 * C427) * C2159 +
            (C19537 * C778 - C49970 * C783) * C2165 +
            (C19537 * C787 - C49970 * C793) * C2160 +
            (C19537 * C1433 - C49970 * C1437) * C2166 +
            (C19537 * C1441 - C49970 * C1445) * C2161) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19677 * C2164 + C19678 * C2159 + C19679 * C2165 + C19680 * C2160 +
             (C19670 - C19669) * C2166 + (C19672 - C19671) * C2161) *
                C33256 +
            (C30765 * C2164 + C30766 * C2159 + (C20138 - C20137) * C2165 +
             (C20140 - C20139) * C2160 +
             (C19537 * C4012 - C49970 * C4014) * C2166 +
             (C19537 * C4016 - C49970 * C4018) * C2161) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C121 +
            (C49970 * C143 - C19537 * C133) * C50120) *
               C38554 +
           ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
           (C21795 * C121 + C21796 * C50120) * C38556 +
           ((C21770 - C21769) * C121 + (C21772 - C21771) * C50120) * C38557) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C121 +
            (C19537 * C134 - C49970 * C144) * C50120) *
               C38554 +
           ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
           (C21799 * C121 + C21800 * C50120) * C38556 +
           ((C21788 - C21787) * C121 + (C21790 - C21789) * C50120) * C38557) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C121 +
            (C49970 * C145 - C19537 * C135) * C50120) *
               C38554 +
           ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
           ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
           ((C49970 * C1720 - C19537 * C1716) * C121 +
            (C49970 * C1728 - C19537 * C1724) * C50120) *
               C38557) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C121 +
            (C19537 * C136 - C49970 * C146) * C50120) *
               C38554 +
           ((C19537 * C397 - C49970 * C407) * C121 +
            (C19537 * C411 - C49970 * C427) * C50120) *
               C38555 +
           ((C19537 * C401 - C49970 * C415) * C121 +
            (C19537 * C419 - C49970 * C431) * C50120) *
               C38556 +
           ((C19537 * C1717 - C49970 * C1721) * C121 +
            (C19537 * C1725 - C49970 * C1729) * C50120) *
               C38557) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            (C21795 * C121 + C21796 * C50120) * C38556 +
            ((C21770 - C21769) * C121 + (C21772 - C21771) * C50120) * C38557) *
               C50035 * C248 +
           (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 +
            (C22319 * C121 + C22320 * C50120) * C38556 +
            (C22721 * C121 + C22722 * C50120) * C38557) *
               C50035 * C249 +
           ((C19673 * C121 + C19674 * C50120) * C38554 +
            (C23228 * C121 + C23229 * C50120) * C38555 +
            (C23230 * C121 + C23231 * C50120) * C38556 +
            ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            (C21799 * C121 + C21800 * C50120) * C38556 +
            ((C21788 - C21787) * C121 + (C21790 - C21789) * C50120) * C38557) *
               C50035 * C248 +
           (((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
            (C22323 * C121 + C22324 * C50120) * C38555 +
            (C22325 * C121 + C22326 * C50120) * C38556 +
            ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
               C50035 * C249 +
           ((C19677 * C121 + C19678 * C50120) * C38554 +
            (C30765 * C121 + C30766 * C50120) * C38555 +
            ((C21610 - C21609) * C121 + (C21612 - C21611) * C50120) * C38556 +
            ((C19537 * C4426 - C49970 * C4432) * C121 +
             (C19537 * C4434 - C49970 * C4438) * C50120) *
                C38557) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C50306 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50307 +
           ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C50306 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50307 +
           ((C19677 * C2164 + C19678 * C2159 + C19679 * C2165 + C19680 * C2160 +
             (C19670 - C19669) * C2166 + (C19672 - C19671) * C2161) *
                C33256 +
            (C30765 * C2164 + C30766 * C2159 + (C20138 - C20137) * C2165 +
             (C20140 - C20139) * C2160 +
             (C19537 * C4012 - C49970 * C4014) * C2166 +
             (C19537 * C4016 - C49970 * C4018) * C2161) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C50306 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50307 +
           (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C50306 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50307 +
           (((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C121 +
             (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C50120) *
                C33256 +
            ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C121 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50035 * C50306 +
           (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
            C39372 * C38557) *
               C50035 * C50307 +
           ((C19673 * C121 + C19674 * C50120) * C38554 +
            (C23228 * C121 + C23229 * C50120) * C38555 +
            (C23230 * C121 + C23231 * C50120) * C38556 +
            ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
               C50035 * C1199) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C50035 * C50306 +
           (((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
            (C22323 * C121 + C22324 * C50120) * C38555 +
            (C22325 * C121 + C22326 * C50120) * C38556 +
            ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
               C50035 * C50307 +
           ((C19677 * C121 + C19678 * C50120) * C38554 +
            (C30765 * C121 + C30766 * C50120) * C38555 +
            ((C21610 - C21609) * C121 + (C21612 - C21611) * C50120) * C38556 +
            ((C19537 * C4426 - C49970 * C4432) * C121 +
             (C19537 * C4434 - C49970 * C4438) * C50120) *
                C38557) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50262 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50306 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50262 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50099) *
              C50307 +
          (((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50262 +
           ((C20761 * C2164 + C20762 * C2159 + C20763 * C2165 + C20764 * C2160 +
             (C20766 - C20765) * C2166 + (C20768 - C20767) * C2161) *
                C33256 +
            (C22731 * C2164 + C22732 * C2159 + (C20428 - C20427) * C2165 +
             (C20430 - C20429) * C2160 +
             (C19537 * C20414 - C49970 * C20415) * C2166 +
             (C19537 * C20416 - C49970 * C20417) * C2161) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50262 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50306 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50262 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50099) *
              C50307 +
          ((((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50262 +
           (((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C121 +
             (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C50120) *
                C33256 +
            ((C16811 * C2531 - C16806 * C2534 + C16812 * C2532 -
              C16807 * C2535 + C16813 * C2533 - C16808 * C2538) *
                 C121 +
             (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 -
              C16807 * C2541 + C16813 * C2539 - C16808 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50262 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C50099) *
              C50306 +
          ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
            C39372 * C38557) *
               C50262 +
           ((C22315 * C121 + C22316 * C50120) * C38554 +
            (C21767 * C121 + C21768 * C50120) * C38555 +
            (C22723 * C121 + C22724 * C50120) * C38556 +
            ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
               C50099) *
              C50307 +
          (((C19673 * C121 + C19674 * C50120) * C38554 +
            (C23228 * C121 + C23229 * C50120) * C38555 +
            (C23230 * C121 + C23231 * C50120) * C38556 +
            ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
               C50262 +
           ((C20761 * C121 + C20762 * C50120) * C38554 +
            (C22731 * C121 + C22732 * C50120) * C38555 +
            ((C22734 - C22733) * C121 + (C22736 - C22735) * C50120) * C38556 +
            ((C19537 * C22716 - C49970 * C22717) * C121 +
             (C19537 * C22718 - C49970 * C22719) * C50120) *
                C38557) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50120) *
                    C33256 +
                ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
                 (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) *
                     C50120) *
                    C50196) *
                   C50035 * C893 +
               (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
                 (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) *
                     C50120) *
                    C33256 +
                ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
                 (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) *
                     C50120) *
                    C50196) *
                   C50035 * C50071) *
                  C895 +
              ((((C16811 * C123 - C16806 * C130 + C16812 * C124 -
                  C16807 * C131 + C16813 * C125 - C16808 * C132) *
                     C121 +
                 (C16811 * C134 - C16806 * C144 + C16812 * C135 -
                  C16807 * C145 + C16813 * C136 - C16808 * C146) *
                     C50120) *
                    C33256 +
                ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
                 (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) *
                     C50120) *
                    C50196) *
                   C50035 * C893 +
               (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
                 (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) *
                     C50120) *
                    C33256 +
                ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
                 (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) *
                     C50120) *
                    C50196) *
                   C50035 * C50071) *
                  C896 +
              ((((C16806 * C131 - C16811 * C124 + C16807 * C132 -
                  C16812 * C125 + C16808 * C137 - C16813 * C126) *
                     C121 +
                 (C16806 * C145 - C16811 * C135 + C16807 * C146 -
                  C16812 * C136 + C16808 * C147 - C16813 * C138) *
                     C50120) *
                    C33256 +
                ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
                 (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) *
                     C50120) *
                    C50196) *
                   C50035 * C893 +
               (((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C121 +
                 (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) *
                     C50120) *
                    C33256 +
                ((C16811 * C777 - C16806 * C782 + C16812 * C778 -
                  C16807 * C783 + C16813 * C779 - C16808 * C788) *
                     C121 +
                 (C16811 * C786 - C16806 * C792 + C16812 * C787 -
                  C16807 * C793 + C16813 * C789 - C16808 * C794) *
                     C50120) *
                    C50196) *
                   C50035 * C50071) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C121 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C50120) *
                   C33256 +
               ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
                (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) *
                    C50120) *
                   C50196) *
                  C50035 * C964 +
              (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
                (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) *
                    C50120) *
                   C33256 +
               ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
                (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) *
                    C50120) *
                   C50196) *
                  C50035 * C965 +
              (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
                (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) *
                    C50120) *
                   C33256 +
               ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
                (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) *
                    C50120) *
                   C50196) *
                  C50035 * C966 +
              (((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C121 +
                (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) *
                    C50120) *
                   C33256 +
               ((C16811 * C3045 - C16806 * C3048 + C16812 * C3046 -
                 C16807 * C3049 + C16813 * C3047 - C16808 * C3052) *
                    C121 +
                (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 -
                 C16807 * C3055 + C16813 * C3053 - C16808 * C3056) *
                    C50120) *
                   C50196) *
                  C50035 * C967) *
             C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C391 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C392 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C16806 * C1718 - C16811 * C1714 + C16807 * C1719 -
              C16812 * C1715 + C16808 * C1720 - C16813 * C1716) *
                 C121 +
             (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 -
              C16812 * C1723 + C16808 * C1728 - C16813 * C1724) *
                 C50120) *
                C50196) *
               C393) *
              C893 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C391 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C392 +
           (((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C121 +
             (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C50120) *
                C33256 +
            ((C16811 * C4423 - C16806 * C4427 + C16812 * C4424 -
              C16807 * C4428 + C16813 * C5898 - C16808 * C5899) *
                 C121 +
             (C16811 * C4429 - C16806 * C4435 + C16812 * C4430 -
              C16807 * C4436 + C16813 * C5900 - C16808 * C5901) *
                 C50120) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19878 - C19877) * C2164 + (C19880 - C19879) * C2159 +
             (C19882 - C19881) * C2165 + (C19884 - C19883) * C2160 +
             (C19886 - C19885) * C2166 + (C19888 - C19887) * C2161) *
                C33256 +
            ((C21960 - C21959) * C2164 + (C21962 - C21961) * C2159 +
             (C31060 - C31059) * C2165 + (C31062 - C31061) * C2160 +
             (C19537 * C3047 - C49970 * C3052) * C2166 +
             (C19537 * C3053 - C49970 * C3056) * C2161) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C964 +
          (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
            (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
            C20309 * C2166 + C20310 * C2161) *
               C33256 +
           (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
            C20763 * C2166 + C20764 * C2161) *
               C50196) *
              C50035 * C965 +
          ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
            (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
               C33256 +
           (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
            (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
               C50196) *
              C50035 * C966 +
          ((C20309 * C2164 + C20310 * C2159 + C20311 * C2165 + C20312 * C2160 +
            (C20314 - C20313) * C2166 + (C20316 - C20315) * C2161) *
               C33256 +
           (C20763 * C2164 + C20764 * C2159 + (C20766 - C20765) * C2165 +
            (C20768 - C20767) * C2160 +
            (C19537 * C20756 - C49970 * C20757) * C2166 +
            (C19537 * C20758 - C49970 * C20759) * C2161) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C391 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C392 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C393) *
              C893 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C391 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C392 +
           ((C22319 * C2164 + C22320 * C2159 + C22731 * C2165 + C22732 * C2160 +
             (C20428 - C20427) * C2166 + (C20430 - C20429) * C2161) *
                C33256 +
            (C22721 * C2164 + C22722 * C2159 + (C22734 - C22733) * C2165 +
             (C22736 - C22735) * C2160 +
             (C19537 * C21030 - C49970 * C21031) * C2166 +
             (C19537 * C21032 - C49970 * C21033) * C2161) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50035 * C893 +
           (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 +
            (C22319 * C121 + C22320 * C50120) * C38556 +
            (C22721 * C121 + C22722 * C50120) * C38557) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C50035 * C893 +
           (((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
            (C22323 * C121 + C22324 * C50120) * C38555 +
            (C22325 * C121 + C22326 * C50120) * C38556 +
            ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C121 +
             (C49970 * C145 - C19537 * C135) * C50120) *
                C38554 +
            ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
            ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
            ((C38971 - C38972) * C121 + (C38973 - C38974) * C50120) * C38557) *
               C50035 * C893 +
           (((C19878 - C19877) * C121 + (C19880 - C19879) * C50120) * C38554 +
            ((C21960 - C21959) * C121 + (C21962 - C21961) * C50120) * C38555 +
            ((C21964 - C21963) * C121 + (C21966 - C21965) * C50120) * C38556 +
            ((C19537 * C5898 - C49970 * C5899) * C121 +
             (C19537 * C5900 - C49970 * C5901) * C50120) *
                C38557) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C121 +
            (C49970 * C143 - C19537 * C133) * C50120) *
               C38554 +
           ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
           C38767 * C38556 + C38773 * C38557) *
              C50035 * C964 +
          (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
           (C22317 * C121 + C22318 * C50120) * C38555 +
           (C22319 * C121 + C22320 * C50120) * C38556 +
           (C22721 * C121 + C22722 * C50120) * C38557) *
              C50035 * C965 +
          ((C19673 * C121 + C19674 * C50120) * C38554 +
           (C23228 * C121 + C23229 * C50120) * C38555 +
           (C23230 * C121 + C23231 * C50120) * C38556 +
           ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
              C50035 * C966 +
          ((C20309 * C121 + C20310 * C50120) * C38554 +
           (C20763 * C121 + C20764 * C50120) * C38555 +
           ((C20428 - C20427) * C121 + (C20430 - C20429) * C50120) * C38556 +
           ((C19537 * C21030 - C49970 * C21031) * C121 +
            (C19537 * C21032 - C49970 * C21033) * C50120) *
               C38557) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C391 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C392 +
           (C38767 * C38554 + C38773 * C38555 +
            ((C23630 - C23631) * C121 + (C23632 - C23633) * C50120) * C38556 +
            ((C49970 * C7203 - C19537 * C7201) * C121 +
             (C49970 * C7207 - C19537 * C7205) * C50120) *
                C38557) *
               C393) *
              C893 +
          ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
            C39372 * C38557) *
               C391 +
           ((C22315 * C121 + C22316 * C50120) * C38554 +
            (C21767 * C121 + C21768 * C50120) * C38555 +
            (C22723 * C121 + C22724 * C50120) * C38556 +
            ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
               C392 +
           (C39371 * C38554 + C39372 * C38555 +
            ((C22726 - C22725) * C121 + (C22728 - C22727) * C50120) * C38556 +
            ((C19537 * C23621 - C49970 * C23622) * C121 +
             (C19537 * C23623 - C49970 * C23624) * C50120) *
                C38557) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C2164 +
              (C49970 * C143 - C19537 * C133) * C2159 +
              (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
              C19673 * C2166 + C19674 * C2161) *
                 C33256 +
             ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
              C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
              C23229 * C2161) *
                 C50196) *
                C50262 +
            (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
              C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
              C20762 * C2161) *
                 C33256 +
             ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
              C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
              C22732 * C2161) *
                 C50196) *
                C50099) *
               C893 +
           ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
              (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
              C20309 * C2166 + C20310 * C2161) *
                 C33256 +
             (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 +
              C20762 * C2160 + C20763 * C2166 + C20764 * C2161) *
                 C50196) *
                C50262 +
            ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 +
              C23229 * C2160 + C32281 * C2166 + C32282 * C2161) *
                 C33256 +
             (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 +
              C23231 * C2160 + (C20427 - C20428) * C2166 +
              (C20429 - C20430) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C2164 +
              (C19537 * C134 - C49970 * C144) * C2159 +
              (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
              C19677 * C2166 + C19678 * C2161) *
                 C33256 +
             ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
              C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
              C30766 * C2161) *
                 C50196) *
                C50262 +
            (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
              C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
              C31404 * C2161) *
                 C33256 +
             ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
              C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
              (C21611 - C21612) * C2161) *
                 C50196) *
                C50099) *
               C893 +
           ((((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
              (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
              (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                 C33256 +
             (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 +
              C31404 * C2160 + (C20137 - C20138) * C2166 +
              (C20139 - C20140) * C2161) *
                 C50196) *
                C50262 +
            ((C22321 * C2164 + C22322 * C2159 + C30765 * C2165 +
              C30766 * C2160 + (C20138 - C20137) * C2166 +
              (C20140 - C20139) * C2161) *
                 C33256 +
             (C21785 * C2164 + C21786 * C2159 + (C21610 - C21609) * C2165 +
              (C21612 - C21611) * C2160 +
              (C19537 * C3502 - C49970 * C3504) * C2166 +
              (C19537 * C3506 - C49970 * C3508) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50120) *
                 C33256 +
             ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
              (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                 C50196) *
                C50262 +
            (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
              (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                 C33256 +
             ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
              (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                 C50196) *
                C50099) *
               C893 +
           ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
              (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                 C33256 +
             ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
              (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                 C50196) *
                C50262 +
            (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
              (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                 C33256 +
             ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
              (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50120) *
                 C33256 +
             ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
              (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                 C50196) *
                C50262 +
            (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
              (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                 C33256 +
             ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
              (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                 C50196) *
                C50099) *
               C893 +
           ((((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
              (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                 C33256 +
             ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
              (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                 C50196) *
                C50262 +
            (((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C121 +
              (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C50120) *
                 C33256 +
             ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
               C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                  C121 +
              (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
               C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C121 +
              (C49970 * C143 - C19537 * C133) * C50120) *
                 C38554 +
             ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
             C38767 * C38556 + C38773 * C38557) *
                C50262 +
            (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
             ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
             (C23626 * C121 + C23627 * C50120) * C38556 +
             ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
                C50099) *
               C893 +
           ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
             (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
             C39372 * C38557) *
                C50262 +
            ((C22315 * C121 + C22316 * C50120) * C38554 +
             (C21767 * C121 + C21768 * C50120) * C38555 +
             (C22723 * C121 + C22724 * C50120) * C38556 +
             ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C121 +
              (C19537 * C134 - C49970 * C144) * C50120) *
                 C38554 +
             ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
             C38770 * C38556 + C38774 * C38557) *
                C50262 +
            (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
             ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
             ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
             ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
                C50099) *
               C893 +
           ((((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
             (C22323 * C121 + C22324 * C50120) * C38555 +
             (C22325 * C121 + C22326 * C50120) * C38556 +
             ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
                C50262 +
            ((C22321 * C121 + C22322 * C50120) * C38554 +
             (C21785 * C121 + C21786 * C50120) * C38555 +
             ((C21792 - C21791) * C121 + (C21794 - C21793) * C50120) * C38556 +
             ((C19537 * C6301 - C49970 * C6303) * C121 +
              (C19537 * C6305 - C49970 * C6307) * C50120) *
                 C38557) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
            (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
               C50196) *
              C50035 * C964 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
               C33256 +
           ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
               C50196) *
              C50035 * C965 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
               C33256 +
           ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
               C50196) *
              C50035 * C966 +
          (((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C121 +
            (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C50120) *
               C33256 +
           ((C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C121 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50120) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C121 +
             (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C50120) *
                C33256 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19878 - C19877) * C2164 + (C19880 - C19879) * C2159 +
             (C19882 - C19881) * C2165 + (C19884 - C19883) * C2160 +
             (C19886 - C19885) * C2166 + (C19888 - C19887) * C2161) *
                C33256 +
            ((C21960 - C21959) * C2164 + (C21962 - C21961) * C2159 +
             (C31060 - C31059) * C2165 + (C31062 - C31061) * C2160 +
             (C19537 * C3047 - C49970 * C3052) * C2166 +
             (C19537 * C3053 - C49970 * C3056) * C2161) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C964 +
          (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
            (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
            C20309 * C2166 + C20310 * C2161) *
               C33256 +
           (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
            C20763 * C2166 + C20764 * C2161) *
               C50196) *
              C50035 * C965 +
          ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
            (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
               C33256 +
           (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
            (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
               C50196) *
              C50035 * C966 +
          ((C20309 * C2164 + C20310 * C2159 + C20311 * C2165 + C20312 * C2160 +
            (C20314 - C20313) * C2166 + (C20316 - C20315) * C2161) *
               C33256 +
           (C20763 * C2164 + C20764 * C2159 + (C20766 - C20765) * C2165 +
            (C20768 - C20767) * C2160 +
            (C19537 * C20756 - C49970 * C20757) * C2166 +
            (C19537 * C20758 - C49970 * C20759) * C2161) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50035 * C893 +
           (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 +
            (C22319 * C121 + C22320 * C50120) * C38556 +
            (C22721 * C121 + C22722 * C50120) * C38557) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C50035 * C893 +
           (((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
            (C22323 * C121 + C22324 * C50120) * C38555 +
            (C22325 * C121 + C22326 * C50120) * C38556 +
            ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C121 +
             (C49970 * C145 - C19537 * C135) * C50120) *
                C38554 +
            ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
            ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
            ((C38971 - C38972) * C121 + (C38973 - C38974) * C50120) * C38557) *
               C50035 * C893 +
           (((C19878 - C19877) * C121 + (C19880 - C19879) * C50120) * C38554 +
            ((C21960 - C21959) * C121 + (C21962 - C21961) * C50120) * C38555 +
            ((C21964 - C21963) * C121 + (C21966 - C21965) * C50120) * C38556 +
            ((C19537 * C5898 - C49970 * C5899) * C121 +
             (C19537 * C5900 - C49970 * C5901) * C50120) *
                C38557) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C121 +
            (C49970 * C143 - C19537 * C133) * C50120) *
               C38554 +
           ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
           C38767 * C38556 + C38773 * C38557) *
              C50035 * C964 +
          (((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
           (C22317 * C121 + C22318 * C50120) * C38555 +
           (C22319 * C121 + C22320 * C50120) * C38556 +
           (C22721 * C121 + C22722 * C50120) * C38557) *
              C50035 * C965 +
          ((C19673 * C121 + C19674 * C50120) * C38554 +
           (C23228 * C121 + C23229 * C50120) * C38555 +
           (C23230 * C121 + C23231 * C50120) * C38556 +
           ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
              C50035 * C966 +
          ((C20309 * C121 + C20310 * C50120) * C38554 +
           (C20763 * C121 + C20764 * C50120) * C38555 +
           ((C20428 - C20427) * C121 + (C20430 - C20429) * C50120) * C38556 +
           ((C19537 * C21030 - C49970 * C21031) * C121 +
            (C19537 * C21032 - C49970 * C21033) * C50120) *
               C38557) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C2164 +
              (C49970 * C143 - C19537 * C133) * C2159 +
              (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
              C19673 * C2166 + C19674 * C2161) *
                 C33256 +
             ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
              C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
              C23229 * C2161) *
                 C50196) *
                C1544 +
            (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
              C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
              C20762 * C2161) *
                 C33256 +
             ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
              C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
              C22732 * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
              (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
              C20309 * C2166 + C20310 * C2161) *
                 C33256 +
             (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 +
              C20762 * C2160 + C20763 * C2166 + C20764 * C2161) *
                 C50196) *
                C1544 +
            ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 +
              C23229 * C2160 + C32281 * C2166 + C32282 * C2161) *
                 C33256 +
             (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 +
              C23231 * C2160 + (C20427 - C20428) * C2166 +
              (C20429 - C20430) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C2164 +
              (C19537 * C134 - C49970 * C144) * C2159 +
              (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
              C19677 * C2166 + C19678 * C2161) *
                 C33256 +
             ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
              C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
              C30766 * C2161) *
                 C50196) *
                C1544 +
            (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
              C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
              C31404 * C2161) *
                 C33256 +
             ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
              C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
              (C21611 - C21612) * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
              (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
              (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                 C33256 +
             (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 +
              C31404 * C2160 + (C20137 - C20138) * C2166 +
              (C20139 - C20140) * C2161) *
                 C50196) *
                C1544 +
            ((C22321 * C2164 + C22322 * C2159 + C30765 * C2165 +
              C30766 * C2160 + (C20138 - C20137) * C2166 +
              (C20140 - C20139) * C2161) *
                 C33256 +
             (C21785 * C2164 + C21786 * C2159 + (C21610 - C21609) * C2165 +
              (C21612 - C21611) * C2160 +
              (C19537 * C3502 - C49970 * C3504) * C2166 +
              (C19537 * C3506 - C49970 * C3508) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50120) *
                 C33256 +
             ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
              (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                 C50196) *
                C1544 +
            (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
              (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                 C33256 +
             ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
              (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
              (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                 C33256 +
             ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
              (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                 C50196) *
                C1544 +
            (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
              (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                 C33256 +
             ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
              (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50120) *
                 C33256 +
             ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
              (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                 C50196) *
                C1544 +
            (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
              (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                 C33256 +
             ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
              (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
              (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                 C33256 +
             ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
              (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                 C50196) *
                C1544 +
            (((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C121 +
              (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C50120) *
                 C33256 +
             ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
               C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                  C121 +
              (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
               C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C121 +
              (C49970 * C143 - C19537 * C133) * C50120) *
                 C38554 +
             ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
             C38767 * C38556 + C38773 * C38557) *
                C1544 +
            (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
             ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
             C39973 * C38556 + C39976 * C38557) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
             (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
             C39372 * C38557) *
                C1544 +
            ((C22315 * C121 + C22316 * C50120) * C38554 +
             (C21767 * C121 + C21768 * C50120) * C38555 +
             (C22723 * C121 + C22724 * C50120) * C38556 +
             ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C121 +
              (C19537 * C134 - C49970 * C144) * C50120) *
                 C38554 +
             ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
             C38770 * C38556 + C38774 * C38557) *
                C1544 +
            (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
             ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
             ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
             ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C121 + (C19660 - C19659) * C50120) * C38554 +
             (C22323 * C121 + C22324 * C50120) * C38555 +
             (C22325 * C121 + C22326 * C50120) * C38556 +
             ((C21791 - C21792) * C121 + (C21793 - C21794) * C50120) * C38557) *
                C1544 +
            ((C22321 * C121 + C22322 * C50120) * C38554 +
             (C21785 * C121 + C21786 * C50120) * C38555 +
             ((C21792 - C21791) * C121 + (C21794 - C21793) * C50120) * C38556 +
             ((C19537 * C6301 - C49970 * C6303) * C121 +
              (C19537 * C6305 - C49970 * C6307) * C50120) *
                 C38557) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50308 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50309 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C1960) *
              C50261 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50308 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50309 +
           ((C22319 * C2164 + C22320 * C2159 + C22731 * C2165 + C22732 * C2160 +
             (C20428 - C20427) * C2166 + (C20430 - C20429) * C2161) *
                C33256 +
            (C22721 * C2164 + C22722 * C2159 + (C22734 - C22733) * C2165 +
             (C22736 - C22735) * C2160 +
             (C19537 * C21030 - C49970 * C21031) * C2166 +
             (C19537 * C21032 - C49970 * C21033) * C2161) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50308 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50309 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C35363 - C35364 + C35365 - C35366 + C35367 - C35368) * C121 +
             (C35369 - C35370 + C35371 - C35372 + C35373 - C35374) * C50120) *
                C50196) *
               C1960) *
              C50261 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50308 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50309 +
           (((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C121 +
             (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C50120) *
                C33256 +
            ((C16811 * C4423 - C16806 * C4427 + C16812 * C4424 -
              C16807 * C4428 + C16813 * C5898 - C16808 * C5899) *
                 C121 +
             (C16811 * C4429 - C16806 * C4435 + C16812 * C4430 -
              C16807 * C4436 + C16813 * C5900 - C16808 * C5901) *
                 C50120) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50308 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            C39973 * C38556 + C39976 * C38557) *
               C50309 +
           (C38767 * C38554 + C38773 * C38555 +
            ((C23630 - C23631) * C121 + (C23632 - C23633) * C50120) * C38556 +
            ((C39969 - C39970) * C121 + (C39971 - C39972) * C50120) * C38557) *
               C1960) *
              C50261 +
          ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
            C39372 * C38557) *
               C50308 +
           ((C22315 * C121 + C22316 * C50120) * C38554 +
            (C21767 * C121 + C21768 * C50120) * C38555 +
            (C22723 * C121 + C22724 * C50120) * C38556 +
            ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
               C50309 +
           (C39371 * C38554 + C39372 * C38555 +
            ((C22726 - C22725) * C121 + (C22728 - C22727) * C50120) * C38556 +
            ((C19537 * C23621 - C49970 * C23622) * C121 +
             (C19537 * C23623 - C49970 * C23624) * C50120) *
                C38557) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50120) *
                    C33256 +
                ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
                 (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) *
                     C50120) *
                    C50196) *
                   C1544 +
               (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
                 (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) *
                     C50120) *
                    C33256 +
                ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
                 (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) *
                     C50120) *
                    C50196) *
                   C50099) *
                  C50019 * C895 +
              ((((C16811 * C123 - C16806 * C130 + C16812 * C124 -
                  C16807 * C131 + C16813 * C125 - C16808 * C132) *
                     C121 +
                 (C16811 * C134 - C16806 * C144 + C16812 * C135 -
                  C16807 * C145 + C16813 * C136 - C16808 * C146) *
                     C50120) *
                    C33256 +
                ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
                 (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) *
                     C50120) *
                    C50196) *
                   C1544 +
               (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
                 (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) *
                     C50120) *
                    C33256 +
                ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
                 (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) *
                     C50120) *
                    C50196) *
                   C50099) *
                  C50019 * C896 +
              ((((C16806 * C131 - C16811 * C124 + C16807 * C132 -
                  C16812 * C125 + C16808 * C137 - C16813 * C126) *
                     C121 +
                 (C16806 * C145 - C16811 * C135 + C16807 * C146 -
                  C16812 * C136 + C16808 * C147 - C16813 * C138) *
                     C50120) *
                    C33256 +
                ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
                 (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) *
                     C50120) *
                    C50196) *
                   C1544 +
               (((C33892 - C33891 + C33894 - C33893 + C33896 - C33895) * C121 +
                 (C33898 - C33897 + C33900 - C33899 + C33902 - C33901) *
                     C50120) *
                    C33256 +
                ((C16811 * C400 - C16806 * C414 + C16812 * C401 -
                  C16807 * C415 + C16813 * C403 - C16808 * C422) *
                     C121 +
                 (C16811 * C418 - C16806 * C430 + C16812 * C419 -
                  C16807 * C431 + C16813 * C423 - C16808 * C433) *
                     C50120) *
                    C50196) *
                   C50099) *
                  C50019 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50120) *
                    C33256 +
                ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
                 (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) *
                     C50120) *
                    C50196) *
                   C1544 +
               (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
                 (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) *
                     C50120) *
                    C33256 +
                ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
                 (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) *
                     C50120) *
                    C50196) *
                   C50099) *
                  C248 +
              ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
                 (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) *
                     C50120) *
                    C33256 +
                ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
                 (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) *
                     C50120) *
                    C50196) *
                   C1544 +
               (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
                 (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) *
                     C50120) *
                    C33256 +
                ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
                 (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) *
                     C50120) *
                    C50196) *
                   C50099) *
                  C249 +
              ((((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
                 (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) *
                     C50120) *
                    C33256 +
                ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
                 (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) *
                     C50120) *
                    C50196) *
                   C1544 +
               (((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C121 +
                 (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) *
                     C50120) *
                    C33256 +
                ((C16811 * C2531 - C16806 * C2534 + C16812 * C2532 -
                  C16807 * C2535 + C16813 * C2533 - C16808 * C2538) *
                     C121 +
                 (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 -
                  C16807 * C2541 + C16813 * C2539 - C16808 * C2542) *
                     C50120) *
                    C50196) *
                   C50099) *
                  C250) *
             C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
            (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
               C50196) *
              C1710 +
          (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
            (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
               C33256 +
           ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
            (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
               C50196) *
              C1711 +
          (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
            (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
               C33256 +
           ((C35363 - C35364 + C35365 - C35366 + C35367 - C35368) * C121 +
            (C35369 - C35370 + C35371 - C35372 + C35373 - C35374) * C50120) *
               C50196) *
              C1712 +
          (((C35364 - C35363 + C35366 - C35365 + C35368 - C35367) * C121 +
            (C35370 - C35369 + C35372 - C35371 + C35374 - C35373) * C50120) *
               C33256 +
           ((C16811 * C5318 - C16806 * C5321 + C16812 * C5319 - C16807 * C5322 +
             C16813 * C5320 - C16808 * C5325) *
                C121 +
            (C16811 * C5323 - C16806 * C5327 + C16812 * C5324 - C16807 * C5328 +
             C16813 * C5326 - C16808 * C5329) *
                C50120) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C1544 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C1544 +
           (((C22114 - C22113) * C2164 + (C22116 - C22115) * C2159 +
             (C21960 - C21959) * C2165 + (C21962 - C21961) * C2160 +
             (C31060 - C31059) * C2166 + (C31062 - C31061) * C2161) *
                C33256 +
            ((C22118 - C22117) * C2164 + (C22120 - C22119) * C2159 +
             (C21964 - C21963) * C2165 + (C21966 - C21965) * C2160 +
             (C19537 * C2533 - C49970 * C2538) * C2166 +
             (C19537 * C2539 - C49970 * C2542) * C2161) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C1544 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50099) *
              C249 +
          (((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C1544 +
           ((C20761 * C2164 + C20762 * C2159 + C20763 * C2165 + C20764 * C2160 +
             (C20766 - C20765) * C2166 + (C20768 - C20767) * C2161) *
                C33256 +
            (C22731 * C2164 + C22732 * C2159 + (C20428 - C20427) * C2165 +
             (C20430 - C20429) * C2160 +
             (C19537 * C20414 - C49970 * C20415) * C2166 +
             (C19537 * C20416 - C49970 * C20417) * C2161) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C1710 +
          (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
            C22317 * C2165 + C22318 * C2160 + C20761 * C2166 + C20762 * C2161) *
               C33256 +
           ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
            C22319 * C2165 + C22320 * C2160 + C22731 * C2166 + C22732 * C2161) *
               C50196) *
              C1711 +
          ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
            C23230 * C2166 + C23231 * C2161) *
               C33256 +
           ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
            C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
            (C22735 - C22736) * C2161) *
               C50196) *
              C1712 +
          ((C23626 * C2164 + C23627 * C2159 + C22721 * C2165 + C22722 * C2160 +
            (C22734 - C22733) * C2166 + (C22736 - C22735) * C2161) *
               C33256 +
           ((C23631 - C23630) * C2164 + (C23633 - C23632) * C2159 +
            (C22726 - C22725) * C2165 + (C22728 - C22727) * C2160 +
            (C19537 * C22716 - C49970 * C22717) * C2166 +
            (C19537 * C22718 - C49970 * C22719) * C2161) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C1544 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C1544 +
           (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
            ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
            ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
            ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C121 +
             (C49970 * C145 - C19537 * C135) * C50120) *
                C38554 +
            ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
            ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
            ((C38971 - C38972) * C121 + (C38973 - C38974) * C50120) * C38557) *
               C1544 +
           (((C22114 - C22113) * C121 + (C22116 - C22115) * C50120) * C38554 +
            ((C22118 - C22117) * C121 + (C22120 - C22119) * C50120) * C38555 +
            ((C38972 - C38971) * C121 + (C38974 - C38973) * C50120) * C38556 +
            ((C19537 * C5320 - C49970 * C5325) * C121 +
             (C19537 * C5326 - C49970 * C5329) * C50120) *
                C38557) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C1544 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
            C39372 * C38557) *
               C1544 +
           ((C22315 * C121 + C22316 * C50120) * C38554 +
            (C21767 * C121 + C21768 * C50120) * C38555 +
            (C22723 * C121 + C22724 * C50120) * C38556 +
            ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
               C50099) *
              C249 +
          (((C19673 * C121 + C19674 * C50120) * C38554 +
            (C23228 * C121 + C23229 * C50120) * C38555 +
            (C23230 * C121 + C23231 * C50120) * C38556 +
            ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
               C1544 +
           ((C20761 * C121 + C20762 * C50120) * C38554 +
            (C22731 * C121 + C22732 * C50120) * C38555 +
            ((C22734 - C22733) * C121 + (C22736 - C22735) * C50120) * C38556 +
            ((C19537 * C22716 - C49970 * C22717) * C121 +
             (C19537 * C22718 - C49970 * C22719) * C50120) *
                C38557) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C121 +
            (C49970 * C143 - C19537 * C133) * C50120) *
               C38554 +
           ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
           C38767 * C38556 + C38773 * C38557) *
              C1710 +
          (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
           ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
           C39973 * C38556 + C39976 * C38557) *
              C1711 +
          (C38767 * C38554 + C38773 * C38555 +
           ((C23630 - C23631) * C121 + (C23632 - C23633) * C50120) * C38556 +
           ((C39969 - C39970) * C121 + (C39971 - C39972) * C50120) * C38557) *
              C1712 +
          (C39973 * C38554 + C39976 * C38555 +
           ((C39970 - C39969) * C121 + (C39972 - C39971) * C50120) * C38556 +
           ((C19537 * C39960 - C49970 * C39961) * C121 +
            (C19537 * C39962 - C49970 * C39963) * C50120) *
               C38557) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50308 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50309 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50308 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50309 +
           ((C21799 * C2164 + C21800 * C2159 + C21785 * C2165 + C21786 * C2160 +
             (C21610 - C21609) * C2166 + (C21612 - C21611) * C2161) *
                C33256 +
            ((C21788 - C21787) * C2164 + (C21790 - C21789) * C2159 +
             (C21792 - C21791) * C2165 + (C21794 - C21793) * C2160 +
             (C19537 * C4426 - C49970 * C4432) * C2166 +
             (C19537 * C4434 - C49970 * C4438) * C2161) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50308 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50309 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C35363 - C35364 + C35365 - C35366 + C35367 - C35368) * C121 +
             (C35369 - C35370 + C35371 - C35372 + C35373 - C35374) * C50120) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50308 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50309 +
           (((C33588 - C33587 + C33590 - C33589 + C33592 - C33591) * C121 +
             (C33594 - C33593 + C33596 - C33595 + C33598 - C33597) * C50120) *
                C33256 +
            ((C16811 * C1715 - C16806 * C1719 + C16812 * C1716 -
              C16807 * C1720 + C16813 * C1717 - C16808 * C1721) *
                 C121 +
             (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 -
              C16807 * C1728 + C16813 * C1725 - C16808 * C1729) *
                 C50120) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C50308 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            C39973 * C38556 + C39976 * C38557) *
               C50309 +
           (C38767 * C38554 + C38773 * C38555 +
            ((C23630 - C23631) * C121 + (C23632 - C23633) * C50120) * C38556 +
            ((C39969 - C39970) * C121 + (C39971 - C39972) * C50120) * C38557) *
               C1960) *
              C50019 * C50253 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C50308 +
           (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
            ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
            ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
            ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
               C50309 +
           (C38770 * C38554 + C38774 * C38555 +
            ((C38764 - C38763) * C121 + (C38766 - C38765) * C50120) * C38556 +
            ((C19537 * C7202 - C49970 * C7204) * C121 +
             (C19537 * C7206 - C49970 * C7208) * C50120) *
                C38557) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C1544 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C248 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C1544 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50099) *
              C249 +
          ((((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C1544 +
           (((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C121 +
             (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C50120) *
                C33256 +
            ((C16811 * C2531 - C16806 * C2534 + C16812 * C2532 -
              C16807 * C2535 + C16813 * C2533 - C16808 * C2538) *
                 C121 +
             (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 -
              C16807 * C2541 + C16813 * C2539 - C16808 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C1544 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C1544 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C1544 +
           (((C33892 - C33891 + C33894 - C33893 + C33896 - C33895) * C121 +
             (C33898 - C33897 + C33900 - C33899 + C33902 - C33901) * C50120) *
                C33256 +
            ((C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
              C16813 * C403 - C16808 * C422) *
                 C121 +
             (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
              C16813 * C423 - C16808 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C1544 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C1544 +
           (((C22114 - C22113) * C2164 + (C22116 - C22115) * C2159 +
             (C21960 - C21959) * C2165 + (C21962 - C21961) * C2160 +
             (C31060 - C31059) * C2166 + (C31062 - C31061) * C2161) *
                C33256 +
            ((C22118 - C22117) * C2164 + (C22120 - C22119) * C2159 +
             (C21964 - C21963) * C2165 + (C21966 - C21965) * C2160 +
             (C19537 * C2533 - C49970 * C2538) * C2166 +
             (C19537 * C2539 - C49970 * C2542) * C2161) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C1544 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50099) *
              C249 +
          (((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C1544 +
           ((C20761 * C2164 + C20762 * C2159 + C20763 * C2165 + C20764 * C2160 +
             (C20766 - C20765) * C2166 + (C20768 - C20767) * C2161) *
                C33256 +
            (C22731 * C2164 + C22732 * C2159 + (C20428 - C20427) * C2165 +
             (C20430 - C20429) * C2160 +
             (C19537 * C20414 - C49970 * C20415) * C2166 +
             (C19537 * C20416 - C49970 * C20417) * C2161) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C1544 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C121 +
             (C19537 * C134 - C49970 * C144) * C50120) *
                C38554 +
            ((C21777 - C21778) * C121 + (C21779 - C21780) * C50120) * C38555 +
            C38770 * C38556 + C38774 * C38557) *
               C1544 +
           (((C21778 - C21777) * C121 + (C21780 - C21779) * C50120) * C38554 +
            ((C21782 - C21781) * C121 + (C21784 - C21783) * C50120) * C38555 +
            ((C21787 - C21788) * C121 + (C21789 - C21790) * C50120) * C38556 +
            ((C38763 - C38764) * C121 + (C38765 - C38766) * C50120) * C38557) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C121 +
             (C49970 * C145 - C19537 * C135) * C50120) *
                C38554 +
            ((C22113 - C22114) * C121 + (C22115 - C22116) * C50120) * C38555 +
            ((C22117 - C22118) * C121 + (C22119 - C22120) * C50120) * C38556 +
            ((C38971 - C38972) * C121 + (C38973 - C38974) * C50120) * C38557) *
               C1544 +
           (((C22114 - C22113) * C121 + (C22116 - C22115) * C50120) * C38554 +
            ((C22118 - C22117) * C121 + (C22120 - C22119) * C50120) * C38555 +
            ((C38972 - C38971) * C121 + (C38974 - C38973) * C50120) * C38556 +
            ((C19537 * C5320 - C49970 * C5325) * C121 +
             (C19537 * C5326 - C49970 * C5329) * C50120) *
                C38557) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C121 +
             (C49970 * C143 - C19537 * C133) * C50120) *
                C38554 +
            ((C21759 - C21760) * C121 + (C21761 - C21762) * C50120) * C38555 +
            C38767 * C38556 + C38773 * C38557) *
               C1544 +
           (((C21760 - C21759) * C121 + (C21762 - C21761) * C50120) * C38554 +
            ((C21764 - C21763) * C121 + (C21766 - C21765) * C50120) * C38555 +
            (C23626 * C121 + C23627 * C50120) * C38556 +
            ((C23631 - C23630) * C121 + (C23633 - C23632) * C50120) * C38557) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C121 + (C19644 - C19643) * C50120) * C38554 +
            (C22317 * C121 + C22318 * C50120) * C38555 + C39371 * C38556 +
            C39372 * C38557) *
               C1544 +
           ((C22315 * C121 + C22316 * C50120) * C38554 +
            (C21767 * C121 + C21768 * C50120) * C38555 +
            (C22723 * C121 + C22724 * C50120) * C38556 +
            ((C22725 - C22726) * C121 + (C22727 - C22728) * C50120) * C38557) *
               C50099) *
              C249 +
          (((C19673 * C121 + C19674 * C50120) * C38554 +
            (C23228 * C121 + C23229 * C50120) * C38555 +
            (C23230 * C121 + C23231 * C50120) * C38556 +
            ((C22733 - C22734) * C121 + (C22735 - C22736) * C50120) * C38557) *
               C1544 +
           ((C20761 * C121 + C20762 * C50120) * C38554 +
            (C22731 * C121 + C22732 * C50120) * C38555 +
            ((C22734 - C22733) * C121 + (C22736 - C22735) * C50120) * C38556 +
            ((C19537 * C22716 - C49970 * C22717) * C121 +
             (C19537 * C22718 - C49970 * C22719) * C50120) *
                C38557) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50035 * C50261 +
           (((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 +
            (C28693 * C121 + C28694 * C50120) * C43894) *
               C50035 * C50071) *
              C50304 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C50035 * C50261 +
           (((C24404 - C24403 + C24406 - C24405) * C121 +
             (C24408 - C24407 + C24410 - C24409) * C50120) *
                C50312 +
            (C28157 * C121 + C28158 * C50120) * C50313 +
            ((C27465 - C27466 + C27467 - C27468) * C121 +
             (C27469 - C27470 + C27471 - C27472) * C50120) *
                C43894) *
               C50035 * C50071) *
              C50305 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C121 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50120) *
                C50312 +
            ((C27869 - C27870 + C27871 - C27872) * C121 +
             (C27873 - C27874 + C27875 - C27876) * C50120) *
                C50313 +
            ((C50246 * C414 - C49173 * C400 + C49975 * C415 - C49166 * C401) *
                 C121 +
             (C50246 * C430 - C49173 * C418 + C49975 * C431 - C49166 * C419) *
                 C50120) *
                C43894) *
               C50035 * C50261 +
           (((C24732 - C24731 + C24734 - C24733) * C121 +
             (C24736 - C24735 + C24738 - C24737) * C50120) *
                C50312 +
            ((C27668 - C27667 + C27670 - C27669) * C121 +
             (C27672 - C27671 + C27674 - C27673) * C50120) *
                C50313 +
            ((C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C121 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50120) *
                C43894) *
               C50035 * C50071) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C121 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C50120) *
                 C50312 +
             ((C27433 - C27434 + C27435 - C27436) * C121 +
              (C27437 - C27438 + C27439 - C27440) * C50120) *
                 C50313 +
             C44212 * C43894) *
                C50262 +
            (((C27434 - C27433 + C27436 - C27435) * C121 +
              (C27438 - C27437 + C27440 - C27439) * C50120) *
                 C50312 +
             ((C27441 - C27442 + C27443 - C27444) * C121 +
              (C27445 - C27446 + C27447 - C27448) * C50120) *
                 C50313 +
             ((C29868 - C29867 + C29870 - C29869) * C121 +
              (C29872 - C29871 + C29874 - C29873) * C50120) *
                 C43894) *
                C50099) *
               C50261 +
           ((((C24380 - C24379 + C24382 - C24381) * C121 +
              (C24384 - C24383 + C24386 - C24385) * C50120) *
                 C50312 +
             (C28153 * C121 + C28154 * C50120) * C50313 +
             (C28693 * C121 + C28694 * C50120) * C43894) *
                C50262 +
            ((C28151 * C121 + C28152 * C50120) * C50312 +
             (C28695 * C121 + C28696 * C50120) * C50313 +
             ((C28685 - C28686 + C28687 - C28688) * C121 +
              (C28689 - C28690 + C28691 - C28692) * C50120) *
                 C43894) *
                C50099) *
               C50071) *
              C251 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C121 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C50120) *
                 C50312 +
             ((C27449 - C27450 + C27451 - C27452) * C121 +
              (C27453 - C27454 + C27455 - C27456) * C50120) *
                 C50313 +
             C44213 * C43894) *
                C50262 +
            (((C27450 - C27449 + C27452 - C27451) * C121 +
              (C27454 - C27453 + C27456 - C27455) * C50120) *
                 C50312 +
             ((C27457 - C27458 + C27459 - C27460) * C121 +
              (C27461 - C27462 + C27463 - C27464) * C50120) *
                 C50313 +
             ((C44196 - C44197 + C44198 - C44199) * C121 +
              (C44200 - C44201 + C44202 - C44203) * C50120) *
                 C43894) *
                C50099) *
               C50261 +
           ((((C24404 - C24403 + C24406 - C24405) * C121 +
              (C24408 - C24407 + C24410 - C24409) * C50120) *
                 C50312 +
             (C28157 * C121 + C28158 * C50120) * C50313 +
             ((C27465 - C27466 + C27467 - C27468) * C121 +
              (C27469 - C27470 + C27471 - C27472) * C50120) *
                 C43894) *
                C50262 +
            ((C28155 * C121 + C28156 * C50120) * C50312 +
             ((C27466 - C27465 + C27468 - C27467) * C121 +
              (C27470 - C27469 + C27472 - C27471) * C50120) *
                 C50313 +
             ((C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
               C49975 * C5899) *
                  C121 +
              (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
               C49975 * C5901) *
                  C50120) *
                 C43894) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            ((C27442 - C27441 + C27444 - C27443) * C121 +
             (C27446 - C27445 + C27448 - C27447) * C50120) *
                C43894) *
               C50035 * C248 +
           (((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 +
            (C28693 * C121 + C28694 * C50120) * C43894) *
               C50035 * C249 +
           ((C24435 * C121 + C24436 * C50120) * C50312 +
            (C29347 * C121 + C29348 * C50120) * C50313 +
            ((C25531 - C25532 + C25533 - C25534) * C121 +
             (C25535 - C25536 + C25537 - C25538) * C50120) *
                C43894) *
               C50035 * C250) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            ((C27458 - C27457 + C27460 - C27459) * C121 +
             (C27462 - C27461 + C27464 - C27463) * C50120) *
                C43894) *
               C50035 * C248 +
           (((C24404 - C24403 + C24406 - C24405) * C121 +
             (C24408 - C24407 + C24410 - C24409) * C50120) *
                C50312 +
            (C28157 * C121 + C28158 * C50120) * C50313 +
            ((C27465 - C27466 + C27467 - C27468) * C121 +
             (C27469 - C27470 + C27471 - C27472) * C50120) *
                C43894) *
               C50035 * C249 +
           ((C24437 * C121 + C24438 * C50120) * C50312 +
            ((C25112 - C25111 + C25114 - C25113) * C121 +
             (C25116 - C25115 + C25118 - C25117) * C50120) *
                C50313 +
            ((C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
              C49975 * C2538) *
                 C121 +
             (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
              C49975 * C2542) *
                 C50120) *
                C43894) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C121 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50120) *
               C50312 +
           ((C27433 - C27434 + C27435 - C27436) * C121 +
            (C27437 - C27438 + C27439 - C27440) * C50120) *
               C50313 +
           ((C27442 - C27441 + C27444 - C27443) * C121 +
            (C27446 - C27445 + C27448 - C27447) * C50120) *
               C43894) *
              C50035 * C50019 * C113 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C121 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50120) *
               C50312 +
           ((C27449 - C27450 + C27451 - C27452) * C121 +
            (C27453 - C27454 + C27455 - C27456) * C50120) *
               C50313 +
           ((C27458 - C27457 + C27460 - C27459) * C121 +
            (C27462 - C27461 + C27464 - C27463) * C50120) *
               C43894) *
              C50035 * C50019 * C114 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C121 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50120) *
               C50312 +
           ((C27869 - C27870 + C27871 - C27872) * C121 +
            (C27873 - C27874 + C27875 - C27876) * C50120) *
               C50313 +
           ((C50246 * C414 - C49173 * C400 + C49975 * C415 - C49166 * C401) *
                C121 +
            (C50246 * C430 - C49173 * C418 + C49975 * C431 - C49166 * C419) *
                C50120) *
               C43894) *
              C50035 * C50019 * C115 +
          (((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
                C121 +
            (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
                C50120) *
               C50312 +
           ((C49173 * C397 - C50246 * C407 + C49166 * C402 - C49975 * C420) *
                C121 +
            (C49173 * C411 - C50246 * C427 + C49166 * C421 - C49975 * C432) *
                C50120) *
               C50313 +
           ((C49173 * C401 - C50246 * C415 + C49166 * C403 - C49975 * C422) *
                C121 +
            (C49173 * C419 - C50246 * C431 + C49166 * C423 - C49975 * C433) *
                C50120) *
               C43894) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C391 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C392 +
           (C44212 * C50312 +
            ((C29867 - C29868 + C29869 - C29870) * C121 +
             (C29871 - C29872 + C29873 - C29874) * C50120) *
                C50313 +
            ((C50246 * C5321 - C49173 * C5318 + C49975 * C5322 -
              C49166 * C5319) *
                 C121 +
             (C50246 * C5327 - C49173 * C5323 + C49975 * C5328 -
              C49166 * C5324) *
                 C50120) *
                C43894) *
               C393) *
              C50019 * C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C391 +
           (((C27450 - C27449 + C27452 - C27451) * C121 +
             (C27454 - C27453 + C27456 - C27455) * C50120) *
                C50312 +
            ((C27457 - C27458 + C27459 - C27460) * C121 +
             (C27461 - C27462 + C27463 - C27464) * C50120) *
                C50313 +
            ((C44196 - C44197 + C44198 - C44199) * C121 +
             (C44200 - C44201 + C44202 - C44203) * C50120) *
                C43894) *
               C392 +
           (C44213 * C50312 +
            ((C44197 - C44196 + C44199 - C44198) * C121 +
             (C44201 - C44200 + C44203 - C44202) * C50120) *
                C50313 +
            ((C49173 * C5319 - C50246 * C5322 + C49166 * C5320 -
              C49975 * C5325) *
                 C121 +
             (C49173 * C5324 - C50246 * C5328 + C49166 * C5326 -
              C49975 * C5329) *
                 C50120) *
                C43894) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50262 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C50099) *
              C50019 * C50304 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C50262 +
           (((C27450 - C27449 + C27452 - C27451) * C121 +
             (C27454 - C27453 + C27456 - C27455) * C50120) *
                C50312 +
            ((C27457 - C27458 + C27459 - C27460) * C121 +
             (C27461 - C27462 + C27463 - C27464) * C50120) *
                C50313 +
            ((C44196 - C44197 + C44198 - C44199) * C121 +
             (C44200 - C44201 + C44202 - C44203) * C50120) *
                C43894) *
               C50099) *
              C50019 * C50305 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C121 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50120) *
                C50312 +
            ((C27869 - C27870 + C27871 - C27872) * C121 +
             (C27873 - C27874 + C27875 - C27876) * C50120) *
                C50313 +
            ((C44506 - C44507 + C44508 - C44509) * C121 +
             (C44510 - C44511 + C44512 - C44513) * C50120) *
                C43894) *
               C50262 +
           (((C27870 - C27869 + C27872 - C27871) * C121 +
             (C27874 - C27873 + C27876 - C27875) * C50120) *
                C50312 +
            ((C44507 - C44506 + C44509 - C44508) * C121 +
             (C44511 - C44510 + C44513 - C44512) * C50120) *
                C50313 +
            ((C49173 * C1716 - C50246 * C1720 + C49166 * C1717 -
              C49975 * C1721) *
                 C121 +
             (C49173 * C1724 - C50246 * C1728 + C49166 * C1725 -
              C49975 * C1729) *
                 C50120) *
                C43894) *
               C50099) *
              C50019 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C121 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50120) *
               C50312 +
           ((C27433 - C27434 + C27435 - C27436) * C121 +
            (C27437 - C27438 + C27439 - C27440) * C50120) *
               C50313 +
           ((C27442 - C27441 + C27444 - C27443) * C121 +
            (C27446 - C27445 + C27448 - C27447) * C50120) *
               C43894) *
              C50035 * C50019 * C113 +
          (((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                C121 +
            (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                C50120) *
               C50312 +
           ((C27449 - C27450 + C27451 - C27452) * C121 +
            (C27453 - C27454 + C27455 - C27456) * C50120) *
               C50313 +
           ((C27458 - C27457 + C27460 - C27459) * C121 +
            (C27462 - C27461 + C27464 - C27463) * C50120) *
               C43894) *
              C50035 * C50019 * C114 +
          (((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                C121 +
            (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                C50120) *
               C50312 +
           ((C27869 - C27870 + C27871 - C27872) * C121 +
            (C27873 - C27874 + C27875 - C27876) * C50120) *
               C50313 +
           ((C50246 * C414 - C49173 * C400 + C49975 * C415 - C49166 * C401) *
                C121 +
            (C50246 * C430 - C49173 * C418 + C49975 * C431 - C49166 * C419) *
                C50120) *
               C43894) *
              C50035 * C50019 * C115 +
          (((C49173 * C125 - C50246 * C132 + C49166 * C126 - C49975 * C137) *
                C121 +
            (C49173 * C136 - C50246 * C146 + C49166 * C138 - C49975 * C147) *
                C50120) *
               C50312 +
           ((C49173 * C397 - C50246 * C407 + C49166 * C402 - C49975 * C420) *
                C121 +
            (C49173 * C411 - C50246 * C427 + C49166 * C421 - C49975 * C432) *
                C50120) *
               C50313 +
           ((C49173 * C401 - C50246 * C415 + C49166 * C403 - C49975 * C422) *
                C121 +
            (C49173 * C419 - C50246 * C431 + C49166 * C423 - C49975 * C433) *
                C50120) *
               C43894) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            ((C27442 - C27441 + C27444 - C27443) * C121 +
             (C27446 - C27445 + C27448 - C27447) * C50120) *
                C43894) *
               C50035 * C248 +
           (((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 +
            (C28693 * C121 + C28694 * C50120) * C43894) *
               C50035 * C249 +
           ((C24435 * C121 + C24436 * C50120) * C50312 +
            (C29347 * C121 + C29348 * C50120) * C50313 +
            ((C25531 - C25532 + C25533 - C25534) * C121 +
             (C25535 - C25536 + C25537 - C25538) * C50120) *
                C43894) *
               C50035 * C250) *
              C251 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            ((C27458 - C27457 + C27460 - C27459) * C121 +
             (C27462 - C27461 + C27464 - C27463) * C50120) *
                C43894) *
               C50035 * C248 +
           (((C24404 - C24403 + C24406 - C24405) * C121 +
             (C24408 - C24407 + C24410 - C24409) * C50120) *
                C50312 +
            (C28157 * C121 + C28158 * C50120) * C50313 +
            ((C27465 - C27466 + C27467 - C27468) * C121 +
             (C27469 - C27470 + C27471 - C27472) * C50120) *
                C43894) *
               C50035 * C249 +
           ((C24437 * C121 + C24438 * C50120) * C50312 +
            ((C25112 - C25111 + C25114 - C25113) * C121 +
             (C25116 - C25115 + C25118 - C25117) * C50120) *
                C50313 +
            ((C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
              C49975 * C2538) *
                 C121 +
             (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
              C49975 * C2542) *
                 C50120) *
                C43894) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50035 * C50306 +
           (((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
               C50035 * C50307 +
           ((C24435 * C121 + C24436 * C50120) * C50312 +
            (C29347 * C121 + C29348 * C50120) * C50313 +
            ((C25531 - C25532 + C25533 - C25534) * C121 +
             (C25535 - C25536 + C25537 - C25538) * C50120) *
                C43894) *
               C50035 * C1199) *
              C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C50035 * C50306 +
           (((C24404 - C24403 + C24406 - C24405) * C121 +
             (C24408 - C24407 + C24410 - C24409) * C50120) *
                C50312 +
            (C28157 * C121 + C28158 * C50120) * C50313 +
            ((C27465 - C27466 + C27467 - C27468) * C121 +
             (C27469 - C27470 + C27471 - C27472) * C50120) *
                C43894) *
               C50035 * C50307 +
           ((C24437 * C121 + C24438 * C50120) * C50312 +
            ((C25112 - C25111 + C25114 - C25113) * C121 +
             (C25116 - C25115 + C25118 - C25117) * C50120) *
                C50313 +
            ((C49173 * C2532 - C50246 * C2535 + C49166 * C2533 -
              C49975 * C2538) *
                 C121 +
             (C49173 * C2537 - C50246 * C2541 + C49166 * C2539 -
              C49975 * C2542) *
                 C50120) *
                C43894) *
               C50035 * C1199) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50262 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C50099) *
              C50306 +
          ((((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
               C50262 +
           ((C28151 * C121 + C28152 * C50120) * C50312 +
            (C28695 * C121 + C28696 * C50120) * C50313 +
            ((C28685 - C28686 + C28687 - C28688) * C121 +
             (C28689 - C28690 + C28691 - C28692) * C50120) *
                C43894) *
               C50099) *
              C50307 +
          (((C24435 * C121 + C24436 * C50120) * C50312 +
            (C29347 * C121 + C29348 * C50120) * C50313 +
            ((C25531 - C25532 + C25533 - C25534) * C121 +
             (C25535 - C25536 + C25537 - C25538) * C50120) *
                C43894) *
               C50262 +
           ((C26037 * C121 + C26038 * C50120) * C50312 +
            ((C25532 - C25531 + C25534 - C25533) * C121 +
             (C25536 - C25535 + C25538 - C25537) * C50120) *
                C50313 +
            ((C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C121 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50120) *
                C43894) *
               C50099) *
              C1199) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C121 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50120) *
               C50312 +
           ((C27433 - C27434 + C27435 - C27436) * C121 +
            (C27437 - C27438 + C27439 - C27440) * C50120) *
               C50313 +
           C44212 * C43894) *
              C50035 * C964 +
          (((C24380 - C24379 + C24382 - C24381) * C121 +
            (C24384 - C24383 + C24386 - C24385) * C50120) *
               C50312 +
           (C28153 * C121 + C28154 * C50120) * C50313 +
           (C28693 * C121 + C28694 * C50120) * C43894) *
              C50035 * C965 +
          ((C24435 * C121 + C24436 * C50120) * C50312 +
           (C29347 * C121 + C29348 * C50120) * C50313 +
           ((C25531 - C25532 + C25533 - C25534) * C121 +
            (C25535 - C25536 + C25537 - C25538) * C50120) *
               C43894) *
              C50035 * C966 +
          ((C25375 * C121 + C25376 * C50120) * C50312 +
           ((C26030 - C26029 + C26032 - C26031) * C121 +
            (C26034 - C26033 + C26036 - C26035) * C50120) *
               C50313 +
           ((C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
             C49975 * C3504) *
                C121 +
            (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
             C49975 * C3508) *
                C50120) *
               C43894) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50035 * C893 +
           (((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 +
            (C28693 * C121 + C28694 * C50120) * C43894) *
               C50035 * C50071) *
              C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C50035 * C893 +
           (((C24404 - C24403 + C24406 - C24405) * C121 +
             (C24408 - C24407 + C24410 - C24409) * C50120) *
                C50312 +
            (C28157 * C121 + C28158 * C50120) * C50313 +
            ((C27465 - C27466 + C27467 - C27468) * C121 +
             (C27469 - C27470 + C27471 - C27472) * C50120) *
                C43894) *
               C50035 * C50071) *
              C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C121 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50120) *
                C50312 +
            ((C27869 - C27870 + C27871 - C27872) * C121 +
             (C27873 - C27874 + C27875 - C27876) * C50120) *
                C50313 +
            ((C44506 - C44507 + C44508 - C44509) * C121 +
             (C44510 - C44511 + C44512 - C44513) * C50120) *
                C43894) *
               C50035 * C893 +
           (((C24732 - C24731 + C24734 - C24733) * C121 +
             (C24736 - C24735 + C24738 - C24737) * C50120) *
                C50312 +
            ((C27668 - C27667 + C27670 - C27669) * C121 +
             (C27672 - C27671 + C27674 - C27673) * C50120) *
                C50313 +
            ((C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C121 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50120) *
                C43894) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C391 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C392 +
           (C44212 * C50312 +
            ((C29867 - C29868 + C29869 - C29870) * C121 +
             (C29871 - C29872 + C29873 - C29874) * C50120) *
                C50313 +
            ((C50246 * C5321 - C49173 * C5318 + C49975 * C5322 -
              C49166 * C5319) *
                 C121 +
             (C50246 * C5327 - C49173 * C5323 + C49975 * C5328 -
              C49166 * C5324) *
                 C50120) *
                C43894) *
               C393) *
              C893 +
          ((((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
               C391 +
           ((C28151 * C121 + C28152 * C50120) * C50312 +
            (C28695 * C121 + C28696 * C50120) * C50313 +
            ((C28685 - C28686 + C28687 - C28688) * C121 +
             (C28689 - C28690 + C28691 - C28692) * C50120) *
                C43894) *
               C392 +
           (C45100 * C50312 +
            ((C28686 - C28685 + C28688 - C28687) * C121 +
             (C28690 - C28689 + C28692 - C28691) * C50120) *
                C50313 +
            ((C49173 * C6300 - C50246 * C6302 + C49166 * C6301 -
              C49975 * C6303) *
                 C121 +
             (C49173 * C6304 - C50246 * C6306 + C49166 * C6305 -
              C49975 * C6307) *
                 C50120) *
                C43894) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C121 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C50120) *
                 C50312 +
             ((C27433 - C27434 + C27435 - C27436) * C121 +
              (C27437 - C27438 + C27439 - C27440) * C50120) *
                 C50313 +
             C44212 * C43894) *
                C50262 +
            (((C27434 - C27433 + C27436 - C27435) * C121 +
              (C27438 - C27437 + C27440 - C27439) * C50120) *
                 C50312 +
             ((C27441 - C27442 + C27443 - C27444) * C121 +
              (C27445 - C27446 + C27447 - C27448) * C50120) *
                 C50313 +
             ((C29868 - C29867 + C29870 - C29869) * C121 +
              (C29872 - C29871 + C29874 - C29873) * C50120) *
                 C43894) *
                C50099) *
               C893 +
           ((((C24380 - C24379 + C24382 - C24381) * C121 +
              (C24384 - C24383 + C24386 - C24385) * C50120) *
                 C50312 +
             (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
                C50262 +
            ((C28151 * C121 + C28152 * C50120) * C50312 +
             (C28695 * C121 + C28696 * C50120) * C50313 +
             ((C28685 - C28686 + C28687 - C28688) * C121 +
              (C28689 - C28690 + C28691 - C28692) * C50120) *
                 C43894) *
                C50099) *
               C50071) *
              C50253 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C121 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C50120) *
                 C50312 +
             ((C27449 - C27450 + C27451 - C27452) * C121 +
              (C27453 - C27454 + C27455 - C27456) * C50120) *
                 C50313 +
             C44213 * C43894) *
                C50262 +
            (((C27450 - C27449 + C27452 - C27451) * C121 +
              (C27454 - C27453 + C27456 - C27455) * C50120) *
                 C50312 +
             ((C27457 - C27458 + C27459 - C27460) * C121 +
              (C27461 - C27462 + C27463 - C27464) * C50120) *
                 C50313 +
             ((C44196 - C44197 + C44198 - C44199) * C121 +
              (C44200 - C44201 + C44202 - C44203) * C50120) *
                 C43894) *
                C50099) *
               C893 +
           ((((C24404 - C24403 + C24406 - C24405) * C121 +
              (C24408 - C24407 + C24410 - C24409) * C50120) *
                 C50312 +
             (C28157 * C121 + C28158 * C50120) * C50313 +
             ((C27465 - C27466 + C27467 - C27468) * C121 +
              (C27469 - C27470 + C27471 - C27472) * C50120) *
                 C43894) *
                C50262 +
            ((C28155 * C121 + C28156 * C50120) * C50312 +
             ((C27466 - C27465 + C27468 - C27467) * C121 +
              (C27470 - C27469 + C27472 - C27471) * C50120) *
                 C50313 +
             ((C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
               C49975 * C5899) *
                  C121 +
              (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
               C49975 * C5901) *
                  C50120) *
                 C43894) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50035 * C893 +
           (((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 +
            (C28693 * C121 + C28694 * C50120) * C43894) *
               C50035 * C50071) *
              C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C50035 * C893 +
           (((C24404 - C24403 + C24406 - C24405) * C121 +
             (C24408 - C24407 + C24410 - C24409) * C50120) *
                C50312 +
            (C28157 * C121 + C28158 * C50120) * C50313 +
            ((C27465 - C27466 + C27467 - C27468) * C121 +
             (C27469 - C27470 + C27471 - C27472) * C50120) *
                C43894) *
               C50035 * C50071) *
              C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C121 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50120) *
                C50312 +
            ((C27869 - C27870 + C27871 - C27872) * C121 +
             (C27873 - C27874 + C27875 - C27876) * C50120) *
                C50313 +
            ((C44506 - C44507 + C44508 - C44509) * C121 +
             (C44510 - C44511 + C44512 - C44513) * C50120) *
                C43894) *
               C50035 * C893 +
           (((C24732 - C24731 + C24734 - C24733) * C121 +
             (C24736 - C24735 + C24738 - C24737) * C50120) *
                C50312 +
            ((C27668 - C27667 + C27670 - C27669) * C121 +
             (C27672 - C27671 + C27674 - C27673) * C50120) *
                C50313 +
            ((C49173 * C1085 - C50246 * C1089 + C49166 * C1086 -
              C49975 * C1090) *
                 C121 +
             (C49173 * C1093 - C50246 * C1097 + C49166 * C1094 -
              C49975 * C1098) *
                 C50120) *
                C43894) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C121 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50120) *
               C50312 +
           ((C27433 - C27434 + C27435 - C27436) * C121 +
            (C27437 - C27438 + C27439 - C27440) * C50120) *
               C50313 +
           C44212 * C43894) *
              C50035 * C964 +
          (((C24380 - C24379 + C24382 - C24381) * C121 +
            (C24384 - C24383 + C24386 - C24385) * C50120) *
               C50312 +
           (C28153 * C121 + C28154 * C50120) * C50313 +
           (C28693 * C121 + C28694 * C50120) * C43894) *
              C50035 * C965 +
          ((C24435 * C121 + C24436 * C50120) * C50312 +
           (C29347 * C121 + C29348 * C50120) * C50313 +
           ((C25531 - C25532 + C25533 - C25534) * C121 +
            (C25535 - C25536 + C25537 - C25538) * C50120) *
               C43894) *
              C50035 * C966 +
          ((C25375 * C121 + C25376 * C50120) * C50312 +
           ((C26030 - C26029 + C26032 - C26031) * C121 +
            (C26034 - C26033 + C26036 - C26035) * C50120) *
               C50313 +
           ((C49173 * C3501 - C50246 * C3503 + C49166 * C3502 -
             C49975 * C3504) *
                C121 +
            (C49173 * C3505 - C50246 * C3507 + C49166 * C3506 -
             C49975 * C3508) *
                C50120) *
               C43894) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                  C121 +
              (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                  C50120) *
                 C50312 +
             ((C27433 - C27434 + C27435 - C27436) * C121 +
              (C27437 - C27438 + C27439 - C27440) * C50120) *
                 C50313 +
             C44212 * C43894) *
                C1544 +
            (((C27434 - C27433 + C27436 - C27435) * C121 +
              (C27438 - C27437 + C27440 - C27439) * C50120) *
                 C50312 +
             ((C27441 - C27442 + C27443 - C27444) * C121 +
              (C27445 - C27446 + C27447 - C27448) * C50120) *
                 C50313 +
             C45993 * C43894) *
                C50099) *
               C50261 +
           ((((C24380 - C24379 + C24382 - C24381) * C121 +
              (C24384 - C24383 + C24386 - C24385) * C50120) *
                 C50312 +
             (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
                C1544 +
            ((C28151 * C121 + C28152 * C50120) * C50312 +
             (C28695 * C121 + C28696 * C50120) * C50313 +
             ((C28685 - C28686 + C28687 - C28688) * C121 +
              (C28689 - C28690 + C28691 - C28692) * C50120) *
                 C43894) *
                C50099) *
               C50071) *
              C50253 +
          (((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                  C121 +
              (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                  C50120) *
                 C50312 +
             ((C27449 - C27450 + C27451 - C27452) * C121 +
              (C27453 - C27454 + C27455 - C27456) * C50120) *
                 C50313 +
             C44213 * C43894) *
                C1544 +
            (((C27450 - C27449 + C27452 - C27451) * C121 +
              (C27454 - C27453 + C27456 - C27455) * C50120) *
                 C50312 +
             ((C27457 - C27458 + C27459 - C27460) * C121 +
              (C27461 - C27462 + C27463 - C27464) * C50120) *
                 C50313 +
             ((C44196 - C44197 + C44198 - C44199) * C121 +
              (C44200 - C44201 + C44202 - C44203) * C50120) *
                 C43894) *
                C50099) *
               C50261 +
           ((((C24404 - C24403 + C24406 - C24405) * C121 +
              (C24408 - C24407 + C24410 - C24409) * C50120) *
                 C50312 +
             (C28157 * C121 + C28158 * C50120) * C50313 +
             ((C27465 - C27466 + C27467 - C27468) * C121 +
              (C27469 - C27470 + C27471 - C27472) * C50120) *
                 C43894) *
                C1544 +
            ((C28155 * C121 + C28156 * C50120) * C50312 +
             ((C27466 - C27465 + C27468 - C27467) * C121 +
              (C27470 - C27469 + C27472 - C27471) * C50120) *
                 C50313 +
             ((C49173 * C4424 - C50246 * C4428 + C49166 * C5898 -
               C49975 * C5899) *
                  C121 +
              (C49173 * C4430 - C50246 * C4436 + C49166 * C5900 -
               C49975 * C5901) *
                  C50120) *
                 C43894) *
                C50099) *
               C50071) *
              C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50308 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            C45993 * C43894) *
               C50309 +
           (C44212 * C50312 +
            ((C29867 - C29868 + C29869 - C29870) * C121 +
             (C29871 - C29872 + C29873 - C29874) * C50120) *
                C50313 +
            ((C45981 - C45982 + C45983 - C45984) * C121 +
             (C45985 - C45986 + C45987 - C45988) * C50120) *
                C43894) *
               C1960) *
              C50261 +
          ((((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
               C50308 +
           ((C28151 * C121 + C28152 * C50120) * C50312 +
            (C28695 * C121 + C28696 * C50120) * C50313 +
            ((C28685 - C28686 + C28687 - C28688) * C121 +
             (C28689 - C28690 + C28691 - C28692) * C50120) *
                C43894) *
               C50309 +
           (C45100 * C50312 +
            ((C28686 - C28685 + C28688 - C28687) * C121 +
             (C28690 - C28689 + C28692 - C28691) * C50120) *
                C50313 +
            ((C49173 * C6300 - C50246 * C6302 + C49166 * C6301 -
              C49975 * C6303) *
                 C121 +
             (C49173 * C6304 - C50246 * C6306 + C49166 * C6305 -
              C49975 * C6307) *
                 C50120) *
                C43894) *
               C1960) *
              C50071) *
         C50000) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C50099) *
              C248 +
          ((((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
               C1544 +
           ((C28151 * C121 + C28152 * C50120) * C50312 +
            (C28695 * C121 + C28696 * C50120) * C50313 +
            ((C28685 - C28686 + C28687 - C28688) * C121 +
             (C28689 - C28690 + C28691 - C28692) * C50120) *
                C43894) *
               C50099) *
              C249 +
          (((C24435 * C121 + C24436 * C50120) * C50312 +
            (C29347 * C121 + C29348 * C50120) * C50313 +
            ((C25531 - C25532 + C25533 - C25534) * C121 +
             (C25535 - C25536 + C25537 - C25538) * C50120) *
                C43894) *
               C1544 +
           ((C26037 * C121 + C26038 * C50120) * C50312 +
            ((C25532 - C25531 + C25534 - C25533) * C121 +
             (C25536 - C25535 + C25538 - C25537) * C50120) *
                C50313 +
            ((C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C121 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50120) *
                C43894) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C50099) *
              C50019 * C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C1544 +
           (((C27450 - C27449 + C27452 - C27451) * C121 +
             (C27454 - C27453 + C27456 - C27455) * C50120) *
                C50312 +
            ((C27457 - C27458 + C27459 - C27460) * C121 +
             (C27461 - C27462 + C27463 - C27464) * C50120) *
                C50313 +
            ((C44196 - C44197 + C44198 - C44199) * C121 +
             (C44200 - C44201 + C44202 - C44203) * C50120) *
                C43894) *
               C50099) *
              C50019 * C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C121 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50120) *
                C50312 +
            ((C27869 - C27870 + C27871 - C27872) * C121 +
             (C27873 - C27874 + C27875 - C27876) * C50120) *
                C50313 +
            ((C44506 - C44507 + C44508 - C44509) * C121 +
             (C44510 - C44511 + C44512 - C44513) * C50120) *
                C43894) *
               C1544 +
           (((C27870 - C27869 + C27872 - C27871) * C121 +
             (C27874 - C27873 + C27876 - C27875) * C50120) *
                C50312 +
            ((C44507 - C44506 + C44509 - C44508) * C121 +
             (C44511 - C44510 + C44513 - C44512) * C50120) *
                C50313 +
            ((C49173 * C1716 - C50246 * C1720 + C49166 * C1717 -
              C49975 * C1721) *
                 C121 +
             (C49173 * C1724 - C50246 * C1728 + C49166 * C1725 -
              C49975 * C1729) *
                 C50120) *
                C43894) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                C121 +
            (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                C50120) *
               C50312 +
           ((C27433 - C27434 + C27435 - C27436) * C121 +
            (C27437 - C27438 + C27439 - C27440) * C50120) *
               C50313 +
           C44212 * C43894) *
              C1710 +
          (((C27434 - C27433 + C27436 - C27435) * C121 +
            (C27438 - C27437 + C27440 - C27439) * C50120) *
               C50312 +
           ((C27441 - C27442 + C27443 - C27444) * C121 +
            (C27445 - C27446 + C27447 - C27448) * C50120) *
               C50313 +
           C45993 * C43894) *
              C1711 +
          (C44212 * C50312 +
           ((C29867 - C29868 + C29869 - C29870) * C121 +
            (C29871 - C29872 + C29873 - C29874) * C50120) *
               C50313 +
           ((C45981 - C45982 + C45983 - C45984) * C121 +
            (C45985 - C45986 + C45987 - C45988) * C50120) *
               C43894) *
              C1712 +
          (C45993 * C50312 +
           ((C45982 - C45981 + C45984 - C45983) * C121 +
            (C45986 - C45985 + C45988 - C45987) * C50120) *
               C50313 +
           ((C49173 * C7201 - C50246 * C7203 + C49166 * C7202 -
             C49975 * C7204) *
                C121 +
            (C49173 * C7205 - C50246 * C7207 + C49166 * C7206 -
             C49975 * C7208) *
                C50120) *
               C43894) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C50308 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            C45993 * C43894) *
               C50309 +
           (C44212 * C50312 +
            ((C29867 - C29868 + C29869 - C29870) * C121 +
             (C29871 - C29872 + C29873 - C29874) * C50120) *
                C50313 +
            ((C45981 - C45982 + C45983 - C45984) * C121 +
             (C45985 - C45986 + C45987 - C45988) * C50120) *
                C43894) *
               C1960) *
              C50019 * C50253 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C50308 +
           (((C27450 - C27449 + C27452 - C27451) * C121 +
             (C27454 - C27453 + C27456 - C27455) * C50120) *
                C50312 +
            ((C27457 - C27458 + C27459 - C27460) * C121 +
             (C27461 - C27462 + C27463 - C27464) * C50120) *
                C50313 +
            ((C44196 - C44197 + C44198 - C44199) * C121 +
             (C44200 - C44201 + C44202 - C44203) * C50120) *
                C43894) *
               C50309 +
           (C44213 * C50312 +
            ((C44197 - C44196 + C44199 - C44198) * C121 +
             (C44201 - C44200 + C44203 - C44202) * C50120) *
                C50313 +
            ((C49173 * C5319 - C50246 * C5322 + C49166 * C5320 -
              C49975 * C5325) *
                 C121 +
             (C49173 * C5324 - C50246 * C5328 + C49166 * C5326 -
              C49975 * C5329) *
                 C50120) *
                C43894) *
               C1960) *
              C50019 * C50006)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C50099) *
              C50019 * C895 +
          ((((C49173 * C123 - C50246 * C130 + C49166 * C124 - C49975 * C131) *
                 C121 +
             (C49173 * C134 - C50246 * C144 + C49166 * C135 - C49975 * C145) *
                 C50120) *
                C50312 +
            ((C27449 - C27450 + C27451 - C27452) * C121 +
             (C27453 - C27454 + C27455 - C27456) * C50120) *
                C50313 +
            C44213 * C43894) *
               C1544 +
           (((C27450 - C27449 + C27452 - C27451) * C121 +
             (C27454 - C27453 + C27456 - C27455) * C50120) *
                C50312 +
            ((C27457 - C27458 + C27459 - C27460) * C121 +
             (C27461 - C27462 + C27463 - C27464) * C50120) *
                C50313 +
            ((C44196 - C44197 + C44198 - C44199) * C121 +
             (C44200 - C44201 + C44202 - C44203) * C50120) *
                C43894) *
               C50099) *
              C50019 * C896 +
          ((((C50246 * C131 - C49173 * C124 + C49975 * C132 - C49166 * C125) *
                 C121 +
             (C50246 * C145 - C49173 * C135 + C49975 * C146 - C49166 * C136) *
                 C50120) *
                C50312 +
            ((C27869 - C27870 + C27871 - C27872) * C121 +
             (C27873 - C27874 + C27875 - C27876) * C50120) *
                C50313 +
            ((C44506 - C44507 + C44508 - C44509) * C121 +
             (C44510 - C44511 + C44512 - C44513) * C50120) *
                C43894) *
               C1544 +
           (((C27870 - C27869 + C27872 - C27871) * C121 +
             (C27874 - C27873 + C27876 - C27875) * C50120) *
                C50312 +
            ((C44507 - C44506 + C44509 - C44508) * C121 +
             (C44511 - C44510 + C44513 - C44512) * C50120) *
                C50313 +
            ((C49173 * C1716 - C50246 * C1720 + C49166 * C1717 -
              C49975 * C1721) *
                 C121 +
             (C49173 * C1724 - C50246 * C1728 + C49166 * C1725 -
              C49975 * C1729) *
                 C50120) *
                C43894) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50246 * C129 - C49173 * C122 + C49975 * C130 - C49166 * C123) *
                 C121 +
             (C50246 * C143 - C49173 * C133 + C49975 * C144 - C49166 * C134) *
                 C50120) *
                C50312 +
            ((C27433 - C27434 + C27435 - C27436) * C121 +
             (C27437 - C27438 + C27439 - C27440) * C50120) *
                C50313 +
            C44212 * C43894) *
               C1544 +
           (((C27434 - C27433 + C27436 - C27435) * C121 +
             (C27438 - C27437 + C27440 - C27439) * C50120) *
                C50312 +
            ((C27441 - C27442 + C27443 - C27444) * C121 +
             (C27445 - C27446 + C27447 - C27448) * C50120) *
                C50313 +
            ((C29868 - C29867 + C29870 - C29869) * C121 +
             (C29872 - C29871 + C29874 - C29873) * C50120) *
                C43894) *
               C50099) *
              C248 +
          ((((C24380 - C24379 + C24382 - C24381) * C121 +
             (C24384 - C24383 + C24386 - C24385) * C50120) *
                C50312 +
            (C28153 * C121 + C28154 * C50120) * C50313 + C45100 * C43894) *
               C1544 +
           ((C28151 * C121 + C28152 * C50120) * C50312 +
            (C28695 * C121 + C28696 * C50120) * C50313 +
            ((C28685 - C28686 + C28687 - C28688) * C121 +
             (C28689 - C28690 + C28691 - C28692) * C50120) *
                C43894) *
               C50099) *
              C249 +
          (((C24435 * C121 + C24436 * C50120) * C50312 +
            (C29347 * C121 + C29348 * C50120) * C50313 +
            ((C25531 - C25532 + C25533 - C25534) * C121 +
             (C25535 - C25536 + C25537 - C25538) * C50120) *
                C43894) *
               C1544 +
           ((C26037 * C121 + C26038 * C50120) * C50312 +
            ((C25532 - C25531 + C25534 - C25533) * C121 +
             (C25536 - C25535 + C25538 - C25537) * C50120) *
                C50313 +
            ((C49173 * C4425 - C50246 * C4431 + C49166 * C4426 -
              C49975 * C4432) *
                 C121 +
             (C49173 * C4433 - C50246 * C4437 + C49166 * C4434 -
              C49975 * C4438) *
                 C50120) *
                C43894) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C50261 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C50261 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
              C16808 * C420 - C16813 * C402) *
                 C121 +
             (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
              C16808 * C432 - C16813 * C421) *
                 C50120) *
                C50196) *
               C50035 * C50261 +
           (((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C121 +
             (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C50120) *
                C33256 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C50261 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50071) *
              C50304 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C50261 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50071) *
              C50305 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50035 * C50261 +
           (((C19878 - C19877) * C2164 + (C19880 - C19879) * C2159 +
             (C19882 - C19881) * C2165 + (C19884 - C19883) * C2160 +
             (C19886 - C19885) * C2166 + (C19888 - C19887) * C2161) *
                C33256 +
            ((C21960 - C21959) * C2164 + (C21962 - C21961) * C2159 +
             (C31060 - C31059) * C2165 + (C31062 - C31061) * C2160 +
             (C19537 * C3047 - C49970 * C3052) * C2166 +
             (C19537 * C3053 - C49970 * C3056) * C2161) *
                C50196) *
               C50035 * C50071) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50120) *
                 C33256 +
             ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
              (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                 C50196) *
                C50262 +
            (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
              (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                 C33256 +
             ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
              (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
              (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                 C33256 +
             ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
              (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                 C50196) *
                C50262 +
            (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
              (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                 C33256 +
             ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
              (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50120) *
                 C33256 +
             ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
              (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                 C50196) *
                C50262 +
            (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
              (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                 C33256 +
             ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
              (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
              (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                 C33256 +
             ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
              (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                 C50196) *
                C50262 +
            (((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C121 +
              (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C50120) *
                 C33256 +
             ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
               C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                  C121 +
              (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
               C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C2164 +
              (C49970 * C143 - C19537 * C133) * C2159 +
              (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
              C19673 * C2166 + C19674 * C2161) *
                 C33256 +
             ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
              C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
              C23229 * C2161) *
                 C50196) *
                C50262 +
            (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
              C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
              C20762 * C2161) *
                 C33256 +
             ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
              C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
              C22732 * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
              (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
              C20309 * C2166 + C20310 * C2161) *
                 C33256 +
             (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 +
              C20762 * C2160 + C20763 * C2166 + C20764 * C2161) *
                 C50196) *
                C50262 +
            ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 +
              C23229 * C2160 + C32281 * C2166 + C32282 * C2161) *
                 C33256 +
             (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 +
              C23231 * C2160 + (C20427 - C20428) * C2166 +
              (C20429 - C20430) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C251 +
          (((((C19537 * C123 - C49970 * C130) * C2164 +
              (C19537 * C134 - C49970 * C144) * C2159 +
              (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
              C19677 * C2166 + C19678 * C2161) *
                 C33256 +
             ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
              C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
              C30766 * C2161) *
                 C50196) *
                C50262 +
            (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
              C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
              C31404 * C2161) *
                 C33256 +
             ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
              C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
              (C21611 - C21612) * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
              (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
              (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                 C33256 +
             (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 +
              C31404 * C2160 + (C20137 - C20138) * C2166 +
              (C20139 - C20140) * C2161) *
                 C50196) *
                C50262 +
            ((C22321 * C2164 + C22322 * C2159 + C30765 * C2165 +
              C30766 * C2160 + (C20138 - C20137) * C2166 +
              (C20140 - C20139) * C2161) *
                 C33256 +
             (C21785 * C2164 + C21786 * C2159 + (C21610 - C21609) * C2165 +
              (C21612 - C21611) * C2160 +
              (C19537 * C3502 - C49970 * C3504) * C2166 +
              (C19537 * C3506 - C49970 * C3508) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
              C16808 * C406 - C16813 * C396) *
                 C121 +
             (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
              C16808 * C426 - C16813 * C410) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
              C16813 * C397 - C16808 * C407) *
                 C121 +
             (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
              C16813 * C411 - C16808 * C427) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C121 +
             (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C50120) *
                C33256 +
            ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C121 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
             C16808 * C406 - C16813 * C396) *
                C121 +
            (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
             C16808 * C426 - C16813 * C410) *
                C50120) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C121 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C50120) *
               C33256 +
           ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
             C16813 * C397 - C16808 * C407) *
                C121 +
            (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
             C16813 * C411 - C16808 * C427) *
                C50120) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C121 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C50120) *
               C33256 +
           ((C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
             C16808 * C420 - C16813 * C402) *
                C121 +
            (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
             C16808 * C432 - C16813 * C421) *
                C50120) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
             C16813 * C127 - C16808 * C139) *
                C121 +
            (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
             C16813 * C140 - C16808 * C148) *
                C50120) *
               C33256 +
           ((C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
             C16813 * C641 - C16808 * C642) *
                C121 +
            (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
             C16813 * C643 - C16808 * C644) *
                C50120) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C391 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C392 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C16806 * C1718 - C16811 * C1714 + C16807 * C1719 -
              C16812 * C1715 + C16808 * C1720 - C16813 * C1716) *
                 C121 +
             (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 -
              C16812 * C1723 + C16808 * C1728 - C16813 * C1724) *
                 C50120) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C391 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C392 +
           (((C33588 - C33587 + C33590 - C33589 + C33592 - C33591) * C121 +
             (C33594 - C33593 + C33596 - C33595 + C33598 - C33597) * C50120) *
                C33256 +
            ((C16811 * C1715 - C16806 * C1719 + C16812 * C1716 -
              C16807 * C1720 + C16813 * C1717 - C16808 * C1721) *
                 C121 +
             (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 -
              C16807 * C1728 + C16813 * C1725 - C16808 * C1729) *
                 C50120) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C2164 +
            (C19537 * C134 - C49970 * C144) * C2159 +
            (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
            C19677 * C2166 + C19678 * C2161) *
               C33256 +
           ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
            C22321 * C2165 + C22322 * C2160 + C30765 * C2166 + C30766 * C2161) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C2164 +
            (C49970 * C145 - C19537 * C135) * C2159 +
            (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
            (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
               C33256 +
           ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
            (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
            (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C2164 +
            (C19537 * C136 - C49970 * C146) * C2159 +
            (C19537 * C256 - C49970 * C266) * C2165 +
            (C19537 * C270 - C49970 * C286) * C2160 +
            (C19537 * C260 - C49970 * C274) * C2166 +
            (C19537 * C278 - C49970 * C290) * C2161) *
               C33256 +
           ((C19537 * C397 - C49970 * C407) * C2164 +
            (C19537 * C411 - C49970 * C427) * C2159 +
            (C19537 * C778 - C49970 * C783) * C2165 +
            (C19537 * C787 - C49970 * C793) * C2160 +
            (C19537 * C1433 - C49970 * C1437) * C2166 +
            (C19537 * C1441 - C49970 * C1445) * C2161) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19677 * C2164 + C19678 * C2159 + C19679 * C2165 + C19680 * C2160 +
             (C19670 - C19669) * C2166 + (C19672 - C19671) * C2161) *
                C33256 +
            (C30765 * C2164 + C30766 * C2159 + (C20138 - C20137) * C2165 +
             (C20140 - C20139) * C2160 +
             (C19537 * C4012 - C49970 * C4014) * C2166 +
             (C19537 * C4016 - C49970 * C4018) * C2161) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C391 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C392 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C393) *
              C50019 * C251 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C391 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C392 +
           ((C21799 * C2164 + C21800 * C2159 + C21785 * C2165 + C21786 * C2160 +
             (C21610 - C21609) * C2166 + (C21612 - C21611) * C2161) *
                C33256 +
            ((C21788 - C21787) * C2164 + (C21790 - C21789) * C2159 +
             (C21792 - C21791) * C2165 + (C21794 - C21793) * C2160 +
             (C19537 * C4426 - C49970 * C4432) * C2166 +
             (C19537 * C4434 - C49970 * C4438) * C2161) *
                C50196) *
               C393) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50262 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50262 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C50262 +
           (((C33892 - C33891 + C33894 - C33893 + C33896 - C33895) * C121 +
             (C33898 - C33897 + C33900 - C33899 + C33902 - C33901) * C50120) *
                C33256 +
            ((C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
              C16813 * C403 - C16808 * C422) *
                 C121 +
             (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
              C16813 * C423 - C16808 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50262 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50019 * C50304 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50262 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50099) *
              C50019 * C50305 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50262 +
           (((C22114 - C22113) * C2164 + (C22116 - C22115) * C2159 +
             (C21960 - C21959) * C2165 + (C21962 - C21961) * C2160 +
             (C31060 - C31059) * C2166 + (C31062 - C31061) * C2161) *
                C33256 +
            ((C22118 - C22117) * C2164 + (C22120 - C22119) * C2159 +
             (C21964 - C21963) * C2165 + (C21966 - C21965) * C2160 +
             (C19537 * C2533 - C49970 * C2538) * C2166 +
             (C19537 * C2539 - C49970 * C2542) * C2161) *
                C50196) *
               C50099) *
              C50019 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
             C16808 * C406 - C16813 * C396) *
                C121 +
            (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
             C16808 * C426 - C16813 * C410) *
                C50120) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C121 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C50120) *
               C33256 +
           ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
             C16813 * C397 - C16808 * C407) *
                C121 +
            (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
             C16813 * C411 - C16808 * C427) *
                C50120) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C121 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C50120) *
               C33256 +
           ((C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
             C16808 * C420 - C16813 * C402) *
                C121 +
            (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
             C16808 * C432 - C16813 * C421) *
                C50120) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
             C16813 * C127 - C16808 * C139) *
                C121 +
            (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
             C16813 * C140 - C16808 * C148) *
                C50120) *
               C33256 +
           ((C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
             C16813 * C641 - C16808 * C642) *
                C121 +
            (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
             C16813 * C643 - C16808 * C644) *
                C50120) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
              C16808 * C406 - C16813 * C396) *
                 C121 +
             (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
              C16808 * C426 - C16813 * C410) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
              C16813 * C397 - C16808 * C407) *
                 C121 +
             (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
              C16813 * C411 - C16808 * C427) *
                 C50120) *
                C50196) *
               C50035 * C248 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C249 +
           (((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C121 +
             (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C50120) *
                C33256 +
            ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C121 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C50019 * C113 +
          (((C19537 * C123 - C49970 * C130) * C2164 +
            (C19537 * C134 - C49970 * C144) * C2159 +
            (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
            C19677 * C2166 + C19678 * C2161) *
               C33256 +
           ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
            C22321 * C2165 + C22322 * C2160 + C30765 * C2166 + C30766 * C2161) *
               C50196) *
              C50035 * C50019 * C114 +
          (((C49970 * C131 - C19537 * C124) * C2164 +
            (C49970 * C145 - C19537 * C135) * C2159 +
            (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
            (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
               C33256 +
           ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
            (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
            (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
               C50196) *
              C50035 * C50019 * C115 +
          (((C19537 * C125 - C49970 * C132) * C2164 +
            (C19537 * C136 - C49970 * C146) * C2159 +
            (C19537 * C256 - C49970 * C266) * C2165 +
            (C19537 * C270 - C49970 * C286) * C2160 +
            (C19537 * C260 - C49970 * C274) * C2166 +
            (C19537 * C278 - C49970 * C290) * C2161) *
               C33256 +
           ((C19537 * C397 - C49970 * C407) * C2164 +
            (C19537 * C411 - C49970 * C427) * C2159 +
            (C19537 * C778 - C49970 * C783) * C2165 +
            (C19537 * C787 - C49970 * C793) * C2160 +
            (C19537 * C1433 - C49970 * C1437) * C2166 +
            (C19537 * C1441 - C49970 * C1445) * C2161) *
               C50196) *
              C50035 * C50019 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50035 * C250) *
              C251 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C248 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C249 +
           ((C19677 * C2164 + C19678 * C2159 + C19679 * C2165 + C19680 * C2160 +
             (C19670 - C19669) * C2166 + (C19672 - C19671) * C2161) *
                C33256 +
            (C30765 * C2164 + C30766 * C2159 + (C20138 - C20137) * C2165 +
             (C20140 - C20139) * C2160 +
             (C19537 * C4012 - C49970 * C4014) * C2166 +
             (C19537 * C4016 - C49970 * C4018) * C2161) *
                C50196) *
               C50035 * C250) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C50306 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50307 +
           (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C50306 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50307 +
           (((C17000 - C16999 + C17002 - C17001 + C17004 - C17003) * C121 +
             (C17006 - C17005 + C17008 - C17007 + C17010 - C17009) * C50120) *
                C33256 +
            ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
              C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                 C121 +
             (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
              C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                 C50120) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C50306 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50307 +
           ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50035 * C1199) *
              C50253 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C50306 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50307 +
           ((C19677 * C2164 + C19678 * C2159 + C19679 * C2165 + C19680 * C2160 +
             (C19670 - C19669) * C2166 + (C19672 - C19671) * C2161) *
                C33256 +
            (C30765 * C2164 + C30766 * C2159 + (C20138 - C20137) * C2165 +
             (C20140 - C20139) * C2160 +
             (C19537 * C4012 - C49970 * C4014) * C2166 +
             (C19537 * C4016 - C49970 * C4018) * C2161) *
                C50196) *
               C50035 * C1199) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50262 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50306 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50262 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50099) *
              C50307 +
          ((((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C50262 +
           (((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C121 +
             (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C50120) *
                C33256 +
            ((C16811 * C2531 - C16806 * C2534 + C16812 * C2532 -
              C16807 * C2535 + C16813 * C2533 - C16808 * C2538) *
                 C121 +
             (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 -
              C16807 * C2541 + C16813 * C2539 - C16808 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50262 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50306 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50262 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50099) *
              C50307 +
          (((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C50262 +
           ((C20761 * C2164 + C20762 * C2159 + C20763 * C2165 + C20764 * C2160 +
             (C20766 - C20765) * C2166 + (C20768 - C20767) * C2161) *
                C33256 +
            (C22731 * C2164 + C22732 * C2159 + (C20428 - C20427) * C2165 +
             (C20430 - C20429) * C2160 +
             (C19537 * C20414 - C49970 * C20415) * C2166 +
             (C19537 * C20416 - C49970 * C20417) * C2161) *
                C50196) *
               C50099) *
              C1199) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
            (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
               C50196) *
              C50035 * C964 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
               C33256 +
           ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
               C50196) *
              C50035 * C965 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
               C33256 +
           ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
               C50196) *
              C50035 * C966 +
          (((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C121 +
            (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C50120) *
               C33256 +
           ((C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C121 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50120) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C121 +
             (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C50120) *
                C33256 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C391 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C392 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C16806 * C1718 - C16811 * C1714 + C16807 * C1719 -
              C16812 * C1715 + C16808 * C1720 - C16813 * C1716) *
                 C121 +
             (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 -
              C16812 * C1723 + C16808 * C1728 - C16813 * C1724) *
                 C50120) *
                C50196) *
               C393) *
              C893 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C391 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C392 +
           (((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C121 +
             (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C50120) *
                C33256 +
            ((C16811 * C4423 - C16806 * C4427 + C16812 * C4424 -
              C16807 * C4428 + C16813 * C5898 - C16808 * C5899) *
                 C121 +
             (C16811 * C4429 - C16806 * C4435 + C16812 * C4430 -
              C16807 * C4436 + C16813 * C5900 - C16808 * C5901) *
                 C50120) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19878 - C19877) * C2164 + (C19880 - C19879) * C2159 +
             (C19882 - C19881) * C2165 + (C19884 - C19883) * C2160 +
             (C19886 - C19885) * C2166 + (C19888 - C19887) * C2161) *
                C33256 +
            ((C21960 - C21959) * C2164 + (C21962 - C21961) * C2159 +
             (C31060 - C31059) * C2165 + (C31062 - C31061) * C2160 +
             (C19537 * C3047 - C49970 * C3052) * C2166 +
             (C19537 * C3053 - C49970 * C3056) * C2161) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C964 +
          (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
            (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
            C20309 * C2166 + C20310 * C2161) *
               C33256 +
           (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
            C20763 * C2166 + C20764 * C2161) *
               C50196) *
              C50035 * C965 +
          ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
            (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
               C33256 +
           (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
            (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
               C50196) *
              C50035 * C966 +
          ((C20309 * C2164 + C20310 * C2159 + C20311 * C2165 + C20312 * C2160 +
            (C20314 - C20313) * C2166 + (C20316 - C20315) * C2161) *
               C33256 +
           (C20763 * C2164 + C20764 * C2159 + (C20766 - C20765) * C2165 +
            (C20768 - C20767) * C2160 +
            (C19537 * C20756 - C49970 * C20757) * C2166 +
            (C19537 * C20758 - C49970 * C20759) * C2161) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C391 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C392 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C393) *
              C893 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C391 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C392 +
           ((C22319 * C2164 + C22320 * C2159 + C22731 * C2165 + C22732 * C2160 +
             (C20428 - C20427) * C2166 + (C20430 - C20429) * C2161) *
                C33256 +
            (C22721 * C2164 + C22722 * C2159 + (C22734 - C22733) * C2165 +
             (C22736 - C22735) * C2160 +
             (C19537 * C21030 - C49970 * C21031) * C2166 +
             (C19537 * C21032 - C49970 * C21033) * C2161) *
                C50196) *
               C393) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50120) *
                 C33256 +
             ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
              (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                 C50196) *
                C50262 +
            (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
              (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                 C33256 +
             ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
              (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                 C50196) *
                C50099) *
               C893 +
           ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
              (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                 C33256 +
             ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
              (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                 C50196) *
                C50262 +
            (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
              (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                 C33256 +
             ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
              (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50120) *
                 C33256 +
             ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
              (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                 C50196) *
                C50262 +
            (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
              (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                 C33256 +
             ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
              (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                 C50196) *
                C50099) *
               C893 +
           ((((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
              (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                 C33256 +
             ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
              (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                 C50196) *
                C50262 +
            (((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C121 +
              (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C50120) *
                 C33256 +
             ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
               C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                  C121 +
              (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
               C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C2164 +
              (C49970 * C143 - C19537 * C133) * C2159 +
              (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
              C19673 * C2166 + C19674 * C2161) *
                 C33256 +
             ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
              C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
              C23229 * C2161) *
                 C50196) *
                C50262 +
            (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
              C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
              C20762 * C2161) *
                 C33256 +
             ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
              C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
              C22732 * C2161) *
                 C50196) *
                C50099) *
               C893 +
           ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
              (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
              C20309 * C2166 + C20310 * C2161) *
                 C33256 +
             (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 +
              C20762 * C2160 + C20763 * C2166 + C20764 * C2161) *
                 C50196) *
                C50262 +
            ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 +
              C23229 * C2160 + C32281 * C2166 + C32282 * C2161) *
                 C33256 +
             (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 +
              C23231 * C2160 + (C20427 - C20428) * C2166 +
              (C20429 - C20430) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C2164 +
              (C19537 * C134 - C49970 * C144) * C2159 +
              (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
              C19677 * C2166 + C19678 * C2161) *
                 C33256 +
             ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
              C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
              C30766 * C2161) *
                 C50196) *
                C50262 +
            (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
              C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
              C31404 * C2161) *
                 C33256 +
             ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
              C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
              (C21611 - C21612) * C2161) *
                 C50196) *
                C50099) *
               C893 +
           ((((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
              (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
              (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                 C33256 +
             (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 +
              C31404 * C2160 + (C20137 - C20138) * C2166 +
              (C20139 - C20140) * C2161) *
                 C50196) *
                C50262 +
            ((C22321 * C2164 + C22322 * C2159 + C30765 * C2165 +
              C30766 * C2160 + (C20138 - C20137) * C2166 +
              (C20140 - C20139) * C2161) *
                 C33256 +
             (C21785 * C2164 + C21786 * C2159 + (C21610 - C21609) * C2165 +
              (C21612 - C21611) * C2160 +
              (C19537 * C3502 - C49970 * C3504) * C2166 +
              (C19537 * C3506 - C49970 * C3508) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
             (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                C33256 +
            ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
             (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C50035 * C893 +
           (((C17304 - C17303 + C17306 - C17305 + C17308 - C17307) * C121 +
             (C17310 - C17309 + C17312 - C17311 + C17314 - C17313) * C50120) *
                C33256 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50120) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
            (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
               C50196) *
              C50035 * C964 +
          (((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
            (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
               C33256 +
           ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
            (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
               C50196) *
              C50035 * C965 +
          (((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
            (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
               C33256 +
           ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
            (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
               C50196) *
              C50035 * C966 +
          (((C17924 - C17923 + C17926 - C17925 + C17928 - C17927) * C121 +
            (C17930 - C17929 + C17932 - C17931 + C17934 - C17933) * C50120) *
               C33256 +
           ((C16811 * C3045 - C16806 * C3048 + C16812 * C3046 - C16807 * C3049 +
             C16813 * C3047 - C16808 * C3052) *
                C121 +
            (C16811 * C3050 - C16806 * C3054 + C16812 * C3051 - C16807 * C3055 +
             C16813 * C3053 - C16808 * C3056) *
                C50120) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50035 * C50071) *
              C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
             (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
             (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                C33256 +
            (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 + C31404 * C2160 +
             (C20137 - C20138) * C2166 + (C20139 - C20140) * C2161) *
                C50196) *
               C50035 * C50071) *
              C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C50035 * C893 +
           (((C19878 - C19877) * C2164 + (C19880 - C19879) * C2159 +
             (C19882 - C19881) * C2165 + (C19884 - C19883) * C2160 +
             (C19886 - C19885) * C2166 + (C19888 - C19887) * C2161) *
                C33256 +
            ((C21960 - C21959) * C2164 + (C21962 - C21961) * C2159 +
             (C31060 - C31059) * C2165 + (C31062 - C31061) * C2160 +
             (C19537 * C3047 - C49970 * C3052) * C2166 +
             (C19537 * C3053 - C49970 * C3056) * C2161) *
                C50196) *
               C50035 * C50071) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C50035 * C964 +
          (((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
            (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
            C20309 * C2166 + C20310 * C2161) *
               C33256 +
           (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
            C20763 * C2166 + C20764 * C2161) *
               C50196) *
              C50035 * C965 +
          ((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
            (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
               C33256 +
           (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
            (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
               C50196) *
              C50035 * C966 +
          ((C20309 * C2164 + C20310 * C2159 + C20311 * C2165 + C20312 * C2160 +
            (C20314 - C20313) * C2166 + (C20316 - C20315) * C2161) *
               C33256 +
           (C20763 * C2164 + C20764 * C2159 + (C20766 - C20765) * C2165 +
            (C20768 - C20767) * C2160 +
            (C19537 * C20756 - C49970 * C20757) * C2166 +
            (C19537 * C20758 - C49970 * C20759) * C2161) *
               C50196) *
              C50035 * C967) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50120) *
                 C33256 +
             ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
              (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                 C50196) *
                C1544 +
            (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
              (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                 C33256 +
             ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
              (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
              (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                 C33256 +
             ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
              (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                 C50196) *
                C1544 +
            (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
              (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                 C33256 +
             ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
              (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50120) *
                 C33256 +
             ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
              (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                 C50196) *
                C1544 +
            (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
              (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                 C33256 +
             ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
              (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C16988 - C16987 + C16990 - C16989 + C16992 - C16991) * C121 +
              (C16994 - C16993 + C16996 - C16995 + C16998 - C16997) * C50120) *
                 C33256 +
             ((C17667 - C17668 + C17669 - C17670 + C17671 - C17672) * C121 +
              (C17673 - C17674 + C17675 - C17676 + C17677 - C17678) * C50120) *
                 C50196) *
                C1544 +
            (((C17668 - C17667 + C17670 - C17669 + C17672 - C17671) * C121 +
              (C17674 - C17673 + C17676 - C17675 + C17678 - C17677) * C50120) *
                 C33256 +
             ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
               C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                  C121 +
              (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
               C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                  C50120) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49970 * C129 - C19537 * C122) * C2164 +
              (C49970 * C143 - C19537 * C133) * C2159 +
              (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
              C19673 * C2166 + C19674 * C2161) *
                 C33256 +
             ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
              C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
              C23229 * C2161) *
                 C50196) *
                C1544 +
            (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
              C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
              C20762 * C2161) *
                 C33256 +
             ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
              C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
              C22732 * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
              (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
              C20309 * C2166 + C20310 * C2161) *
                 C33256 +
             (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 +
              C20762 * C2160 + C20763 * C2166 + C20764 * C2161) *
                 C50196) *
                C1544 +
            ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 +
              C23229 * C2160 + C32281 * C2166 + C32282 * C2161) *
                 C33256 +
             (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 +
              C23231 * C2160 + (C20427 - C20428) * C2166 +
              (C20429 - C20430) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50253 +
          (((((C19537 * C123 - C49970 * C130) * C2164 +
              (C19537 * C134 - C49970 * C144) * C2159 +
              (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
              C19677 * C2166 + C19678 * C2161) *
                 C33256 +
             ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
              C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
              C30766 * C2161) *
                 C50196) *
                C1544 +
            (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
              C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
              C31404 * C2161) *
                 C33256 +
             ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
              C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
              (C21611 - C21612) * C2161) *
                 C50196) *
                C50099) *
               C50261 +
           ((((C19658 - C19657) * C2164 + (C19660 - C19659) * C2159 +
              (C19662 - C19661) * C2165 + (C19664 - C19663) * C2160 +
              (C19666 - C19665) * C2166 + (C19668 - C19667) * C2161) *
                 C33256 +
             (C22323 * C2164 + C22324 * C2159 + C31403 * C2165 +
              C31404 * C2160 + (C20137 - C20138) * C2166 +
              (C20139 - C20140) * C2161) *
                 C50196) *
                C1544 +
            ((C22321 * C2164 + C22322 * C2159 + C30765 * C2165 +
              C30766 * C2160 + (C20138 - C20137) * C2166 +
              (C20140 - C20139) * C2161) *
                 C33256 +
             (C21785 * C2164 + C21786 * C2159 + (C21610 - C21609) * C2165 +
              (C21612 - C21611) * C2160 +
              (C19537 * C3502 - C49970 * C3504) * C2166 +
              (C19537 * C3506 - C49970 * C3508) * C2161) *
                 C50196) *
                C50099) *
               C50071) *
              C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50308 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50309 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C35363 - C35364 + C35365 - C35366 + C35367 - C35368) * C121 +
             (C35369 - C35370 + C35371 - C35372 + C35373 - C35374) * C50120) *
                C50196) *
               C1960) *
              C50261 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C50308 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50309 +
           (((C18082 - C18081 + C18084 - C18083 + C18086 - C18085) * C121 +
             (C18088 - C18087 + C18090 - C18089 + C18092 - C18091) * C50120) *
                C33256 +
            ((C16811 * C4423 - C16806 * C4427 + C16812 * C4424 -
              C16807 * C4428 + C16813 * C5898 - C16808 * C5899) *
                 C121 +
             (C16811 * C4429 - C16806 * C4435 + C16812 * C4430 -
              C16807 * C4436 + C16813 * C5900 - C16808 * C5901) *
                 C50120) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50308 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50309 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C1960) *
              C50261 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C50308 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50309 +
           ((C22319 * C2164 + C22320 * C2159 + C22731 * C2165 + C22732 * C2160 +
             (C20428 - C20427) * C2166 + (C20430 - C20429) * C2161) *
                C33256 +
            (C22721 * C2164 + C22722 * C2159 + (C22734 - C22733) * C2165 +
             (C22736 - C22735) * C2160 +
             (C19537 * C21030 - C49970 * C21031) * C2166 +
             (C19537 * C21032 - C49970 * C21033) * C2161) *
                C50196) *
               C1960) *
              C50071) *
         C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C1544 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C248 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C1544 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50099) *
              C249 +
          ((((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C1544 +
           (((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C121 +
             (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C50120) *
                C33256 +
            ((C16811 * C2531 - C16806 * C2534 + C16812 * C2532 -
              C16807 * C2535 + C16813 * C2533 - C16808 * C2538) *
                 C121 +
             (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 -
              C16807 * C2541 + C16813 * C2539 - C16808 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C1544 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C1544 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C1544 +
           (((C33892 - C33891 + C33894 - C33893 + C33896 - C33895) * C121 +
             (C33898 - C33897 + C33900 - C33899 + C33902 - C33901) * C50120) *
                C33256 +
            ((C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
              C16813 * C403 - C16808 * C422) *
                 C121 +
             (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
              C16813 * C423 - C16808 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50120) *
               C33256 +
           ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
            (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
               C50196) *
              C1710 +
          (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
            (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
               C33256 +
           ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
            (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
               C50196) *
              C1711 +
          (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
            (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
               C33256 +
           ((C35363 - C35364 + C35365 - C35366 + C35367 - C35368) * C121 +
            (C35369 - C35370 + C35371 - C35372 + C35373 - C35374) * C50120) *
               C50196) *
              C1712 +
          (((C35364 - C35363 + C35366 - C35365 + C35368 - C35367) * C121 +
            (C35370 - C35369 + C35372 - C35371 + C35374 - C35373) * C50120) *
               C33256 +
           ((C16811 * C5318 - C16806 * C5321 + C16812 * C5319 - C16807 * C5322 +
             C16813 * C5320 - C16808 * C5325) *
                C121 +
            (C16811 * C5323 - C16806 * C5327 + C16812 * C5324 - C16807 * C5328 +
             C16813 * C5326 - C16808 * C5329) *
                C50120) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C1544 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C1544 +
           (((C22114 - C22113) * C2164 + (C22116 - C22115) * C2159 +
             (C21960 - C21959) * C2165 + (C21962 - C21961) * C2160 +
             (C31060 - C31059) * C2166 + (C31062 - C31061) * C2161) *
                C33256 +
            ((C22118 - C22117) * C2164 + (C22120 - C22119) * C2159 +
             (C21964 - C21963) * C2165 + (C21966 - C21965) * C2160 +
             (C19537 * C2533 - C49970 * C2538) * C2166 +
             (C19537 * C2539 - C49970 * C2542) * C2161) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C1544 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50099) *
              C249 +
          (((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C1544 +
           ((C20761 * C2164 + C20762 * C2159 + C20763 * C2165 + C20764 * C2160 +
             (C20766 - C20765) * C2166 + (C20768 - C20767) * C2161) *
                C33256 +
            (C22731 * C2164 + C22732 * C2159 + (C20428 - C20427) * C2165 +
             (C20430 - C20429) * C2160 +
             (C19537 * C20414 - C49970 * C20415) * C2166 +
             (C19537 * C20416 - C49970 * C20417) * C2161) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49970 * C129 - C19537 * C122) * C2164 +
            (C49970 * C143 - C19537 * C133) * C2159 +
            (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
            C19673 * C2166 + C19674 * C2161) *
               C33256 +
           ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
            C22315 * C2165 + C22316 * C2160 + C23228 * C2166 + C23229 * C2161) *
               C50196) *
              C1710 +
          (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
            C22317 * C2165 + C22318 * C2160 + C20761 * C2166 + C20762 * C2161) *
               C33256 +
           ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
            C22319 * C2165 + C22320 * C2160 + C22731 * C2166 + C22732 * C2161) *
               C50196) *
              C1711 +
          ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
            C23230 * C2166 + C23231 * C2161) *
               C33256 +
           ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
            C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
            (C22735 - C22736) * C2161) *
               C50196) *
              C1712 +
          ((C23626 * C2164 + C23627 * C2159 + C22721 * C2165 + C22722 * C2160 +
            (C22734 - C22733) * C2166 + (C22736 - C22735) * C2161) *
               C33256 +
           ((C23631 - C23630) * C2164 + (C23633 - C23632) * C2159 +
            (C22726 - C22725) * C2165 + (C22728 - C22727) * C2160 +
            (C19537 * C22716 - C49970 * C22717) * C2166 +
            (C19537 * C22718 - C49970 * C22719) * C2161) *
               C50196) *
              C1713) *
         C50019 * C50000) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C50308 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50309 +
           (((C33564 - C33563 + C33566 - C33565 + C33568 - C33567) * C121 +
             (C33570 - C33569 + C33572 - C33571 + C33574 - C33573) * C50120) *
                C33256 +
            ((C35363 - C35364 + C35365 - C35366 + C35367 - C35368) * C121 +
             (C35369 - C35370 + C35371 - C35372 + C35373 - C35374) * C50120) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C50308 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50309 +
           (((C33588 - C33587 + C33590 - C33589 + C33592 - C33591) * C121 +
             (C33594 - C33593 + C33596 - C33595 + C33598 - C33597) * C50120) *
                C33256 +
            ((C16811 * C1715 - C16806 * C1719 + C16812 * C1716 -
              C16807 * C1720 + C16813 * C1717 - C16808 * C1721) *
                 C121 +
             (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 -
              C16807 * C1728 + C16813 * C1725 - C16808 * C1729) *
                 C50120) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C50308 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50309 +
           ((C21795 * C2164 + C21796 * C2159 + C21767 * C2165 + C21768 * C2160 +
             C23230 * C2166 + C23231 * C2161) *
                C33256 +
            ((C21770 - C21769) * C2164 + (C21772 - C21771) * C2159 +
             C22723 * C2165 + C22724 * C2160 + (C22733 - C22734) * C2166 +
             (C22735 - C22736) * C2161) *
                C50196) *
               C1960) *
              C50019 * C50253 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C50308 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50309 +
           ((C21799 * C2164 + C21800 * C2159 + C21785 * C2165 + C21786 * C2160 +
             (C21610 - C21609) * C2166 + (C21612 - C21611) * C2161) *
                C33256 +
            ((C21788 - C21787) * C2164 + (C21790 - C21789) * C2159 +
             (C21792 - C21791) * C2165 + (C21794 - C21793) * C2160 +
             (C19537 * C4426 - C49970 * C4432) * C2166 +
             (C19537 * C4434 - C49970 * C4438) * C2161) *
                C50196) *
               C1960) *
              C50019 * C50006)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C1544 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50120) *
                C33256 +
            ((C33575 - C33576 + C33577 - C33578 + C33579 - C33580) * C121 +
             (C33581 - C33582 + C33583 - C33584 + C33585 - C33586) * C50120) *
                C50196) *
               C1544 +
           (((C33576 - C33575 + C33578 - C33577 + C33580 - C33579) * C121 +
             (C33582 - C33581 + C33584 - C33583 + C33586 - C33585) * C50120) *
                C33256 +
            ((C33587 - C33588 + C33589 - C33590 + C33591 - C33592) * C121 +
             (C33593 - C33594 + C33595 - C33596 + C33597 - C33598) * C50120) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50120) *
                C33256 +
            ((C33891 - C33892 + C33893 - C33894 + C33895 - C33896) * C121 +
             (C33897 - C33898 + C33899 - C33900 + C33901 - C33902) * C50120) *
                C50196) *
               C1544 +
           (((C33892 - C33891 + C33894 - C33893 + C33896 - C33895) * C121 +
             (C33898 - C33897 + C33900 - C33899 + C33902 - C33901) * C50120) *
                C33256 +
            ((C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
              C16813 * C403 - C16808 * C422) *
                 C121 +
             (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
              C16813 * C423 - C16808 * C433) *
                 C50120) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50120) *
                C33256 +
            ((C33551 - C33552 + C33553 - C33554 + C33555 - C33556) * C121 +
             (C33557 - C33558 + C33559 - C33560 + C33561 - C33562) * C50120) *
                C50196) *
               C1544 +
           (((C33552 - C33551 + C33554 - C33553 + C33556 - C33555) * C121 +
             (C33558 - C33557 + C33560 - C33559 + C33562 - C33561) * C50120) *
                C33256 +
            ((C33563 - C33564 + C33565 - C33566 + C33567 - C33568) * C121 +
             (C33569 - C33570 + C33571 - C33572 + C33573 - C33574) * C50120) *
                C50196) *
               C50099) *
              C248 +
          ((((C16964 - C16963 + C16966 - C16965 + C16968 - C16967) * C121 +
             (C16970 - C16969 + C16972 - C16971 + C16974 - C16973) * C50120) *
                C33256 +
            ((C17655 - C17656 + C17657 - C17658 + C17659 - C17660) * C121 +
             (C17661 - C17662 + C17663 - C17664 + C17665 - C17666) * C50120) *
                C50196) *
               C1544 +
           (((C17656 - C17655 + C17658 - C17657 + C17660 - C17659) * C121 +
             (C17662 - C17661 + C17664 - C17663 + C17666 - C17665) * C50120) *
                C33256 +
            ((C18081 - C18082 + C18083 - C18084 + C18085 - C18086) * C121 +
             (C18087 - C18088 + C18089 - C18090 + C18091 - C18092) * C50120) *
                C50196) *
               C50099) *
              C249 +
          ((((C16976 - C16975 + C16978 - C16977 + C16980 - C16979) * C121 +
             (C16982 - C16981 + C16984 - C16983 + C16986 - C16985) * C50120) *
                C33256 +
            ((C18579 - C18580 + C18581 - C18582 + C18583 - C18584) * C121 +
             (C18585 - C18586 + C18587 - C18588 + C18589 - C18590) * C50120) *
                C50196) *
               C1544 +
           (((C18580 - C18579 + C18582 - C18581 + C18584 - C18583) * C121 +
             (C18586 - C18585 + C18588 - C18587 + C18590 - C18589) * C50120) *
                C33256 +
            ((C16811 * C2531 - C16806 * C2534 + C16812 * C2532 -
              C16807 * C2535 + C16813 * C2533 - C16808 * C2538) *
                 C121 +
             (C16811 * C2536 - C16806 * C2540 + C16812 * C2537 -
              C16807 * C2541 + C16813 * C2539 - C16808 * C2542) *
                 C50120) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C50019 * C895 +
          ((((C19537 * C123 - C49970 * C130) * C2164 +
             (C19537 * C134 - C49970 * C144) * C2159 +
             (C19657 - C19658) * C2165 + (C19659 - C19660) * C2160 +
             C19677 * C2166 + C19678 * C2161) *
                C33256 +
            ((C21777 - C21778) * C2164 + (C21779 - C21780) * C2159 +
             C22321 * C2165 + C22322 * C2160 + C30765 * C2166 +
             C30766 * C2161) *
                C50196) *
               C1544 +
           (((C21778 - C21777) * C2164 + (C21780 - C21779) * C2159 +
             C22323 * C2165 + C22324 * C2160 + C31403 * C2166 +
             C31404 * C2161) *
                C33256 +
            ((C21782 - C21781) * C2164 + (C21784 - C21783) * C2159 +
             C22325 * C2165 + C22326 * C2160 + (C21609 - C21610) * C2166 +
             (C21611 - C21612) * C2161) *
                C50196) *
               C50099) *
              C50019 * C896 +
          ((((C49970 * C131 - C19537 * C124) * C2164 +
             (C49970 * C145 - C19537 * C135) * C2159 +
             (C19877 - C19878) * C2165 + (C19879 - C19880) * C2160 +
             (C19881 - C19882) * C2166 + (C19883 - C19884) * C2161) *
                C33256 +
            ((C22113 - C22114) * C2164 + (C22115 - C22116) * C2159 +
             (C21959 - C21960) * C2165 + (C21961 - C21962) * C2160 +
             (C31059 - C31060) * C2166 + (C31061 - C31062) * C2161) *
                C50196) *
               C1544 +
           (((C22114 - C22113) * C2164 + (C22116 - C22115) * C2159 +
             (C21960 - C21959) * C2165 + (C21962 - C21961) * C2160 +
             (C31060 - C31059) * C2166 + (C31062 - C31061) * C2161) *
                C33256 +
            ((C22118 - C22117) * C2164 + (C22120 - C22119) * C2159 +
             (C21964 - C21963) * C2165 + (C21966 - C21965) * C2160 +
             (C19537 * C2533 - C49970 * C2538) * C2166 +
             (C19537 * C2539 - C49970 * C2542) * C2161) *
                C50196) *
               C50099) *
              C50019 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49970 * C129 - C19537 * C122) * C2164 +
             (C49970 * C143 - C19537 * C133) * C2159 +
             (C19641 - C19642) * C2165 + (C19643 - C19644) * C2160 +
             C19673 * C2166 + C19674 * C2161) *
                C33256 +
            ((C21759 - C21760) * C2164 + (C21761 - C21762) * C2159 +
             C22315 * C2165 + C22316 * C2160 + C23228 * C2166 +
             C23229 * C2161) *
                C50196) *
               C1544 +
           (((C21760 - C21759) * C2164 + (C21762 - C21761) * C2159 +
             C22317 * C2165 + C22318 * C2160 + C20761 * C2166 +
             C20762 * C2161) *
                C33256 +
            ((C21764 - C21763) * C2164 + (C21766 - C21765) * C2159 +
             C22319 * C2165 + C22320 * C2160 + C22731 * C2166 +
             C22732 * C2161) *
                C50196) *
               C50099) *
              C248 +
          ((((C19642 - C19641) * C2164 + (C19644 - C19643) * C2159 +
             (C19646 - C19645) * C2165 + (C19648 - C19647) * C2160 +
             C20309 * C2166 + C20310 * C2161) *
                C33256 +
            (C22317 * C2164 + C22318 * C2159 + C20761 * C2165 + C20762 * C2160 +
             C20763 * C2166 + C20764 * C2161) *
                C50196) *
               C1544 +
           ((C22315 * C2164 + C22316 * C2159 + C23228 * C2165 + C23229 * C2160 +
             C32281 * C2166 + C32282 * C2161) *
                C33256 +
            (C21767 * C2164 + C21768 * C2159 + C23230 * C2165 + C23231 * C2160 +
             (C20427 - C20428) * C2166 + (C20429 - C20430) * C2161) *
                C50196) *
               C50099) *
              C249 +
          (((C19673 * C2164 + C19674 * C2159 + C19675 * C2165 + C19676 * C2160 +
             (C19654 - C19653) * C2166 + (C19656 - C19655) * C2161) *
                C33256 +
            (C23228 * C2164 + C23229 * C2159 + C32281 * C2165 + C32282 * C2160 +
             (C20765 - C20766) * C2166 + (C20767 - C20768) * C2161) *
                C50196) *
               C1544 +
           ((C20761 * C2164 + C20762 * C2159 + C20763 * C2165 + C20764 * C2160 +
             (C20766 - C20765) * C2166 + (C20768 - C20767) * C2161) *
                C33256 +
            (C22731 * C2164 + C22732 * C2159 + (C20428 - C20427) * C2165 +
             (C20430 - C20429) * C2160 +
             (C19537 * C20414 - C49970 * C20415) * C2166 +
             (C19537 * C20416 - C49970 * C20417) * C2161) *
                C50196) *
               C50099) *
              C250) *
         C50000) /
            (p * q * std::sqrt(p + q));
}
