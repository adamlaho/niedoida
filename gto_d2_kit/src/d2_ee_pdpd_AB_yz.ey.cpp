/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AB_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_12_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49149 = ae * be;
    const double C49148 = ae + be;
    const double C49147 = 0 * be;
    const double C49146 = yA - yB;
    const double C49166 = 0 * be;
    const double C49165 = zA - zB;
    const double C49196 = 0 * ae;
    const double C49191 = 0 * be;
    const double C49238 = 0 * ae;
    const double C49234 = 0 * be;
    const double C49273 = zP - zQ;
    const double C49272 = yP - yQ;
    const double C49271 = p + q;
    const double C49270 = p * q;
    const double C49282 = bs[4];
    const double C49280 = xP - xQ;
    const double C49287 = bs[5];
    const double C49294 = bs[6];
    const double C49302 = bs[7];
    const double C49319 = bs[3];
    const double C49684 = bs[2];
    const double C119 = bs[0];
    const double C50050 = xA - xB;
    const double C50075 = ce + de;
    const double C50074 = ce * de;
    const double C50073 = xC - xD;
    const double C50097 = yC - yD;
    const double C50113 = zC - zD;
    const double C49150 = std::pow(C49148, 2);
    const double C49192 = 2 * C49148;
    const double C49151 = C49149 * C49146;
    const double C49193 = C49146 * C49147;
    const double C50195 = std::pow(C49146, 2);
    const double C50246 = C49146 * be;
    const double C50245 = C49146 * ae;
    const double C49167 = C49149 * C49165;
    const double C49235 = C49165 * C49166;
    const double C50210 = std::pow(C49165, 2);
    const double C50274 = C49165 * be;
    const double C50273 = C49165 * ae;
    const double C49201 = C49196 / C49148;
    const double C49243 = C49238 / C49148;
    const double C49313 = C49273 * be;
    const double C49538 = std::pow(C49273, 2);
    const double C49275 = C49272 * C49273;
    const double C49354 = C49272 * ae;
    const double C49431 = std::pow(C49272, 2);
    const double C49274 = 2 * C49270;
    const double C49288 = std::pow(C49280, 2);
    const double C50053 = C50050 * be;
    const double C50052 = C50050 * ae;
    const double C50051 = std::pow(C50050, 2);
    const double C50077 = 2 * C50075;
    const double C50087 = std::pow(C50075, 2);
    const double C50079 = C50073 * de;
    const double C50078 = C50073 * ce;
    const double C50076 = std::pow(C50073, 2);
    const double C50098 = std::pow(C50097, 2);
    const double C50150 = C50097 * de;
    const double C50149 = C50097 * ce;
    const double C50114 = std::pow(C50113, 2);
    const double C50178 = C50113 * de;
    const double C50177 = C50113 * ce;
    const double C49152 = 2 * C49150;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (zP - zQ) * ae * be) /
                        C49150;
    const double C141 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (yP - yQ) * (zP - zQ) * ae * be) /
                        C49150;
    const double C50332 = 4 * C49150;
    const double C50061 = std::pow(C49192, -1);
    const double C50354 = std::pow(C49192, -2);
    const double C49198 = C49193 / C49148;
    const double C50196 = C50195 * C49149;
    const double C49240 = C49235 / C49148;
    const double C50211 = C50210 * C49149;
    const double C49315 = C49282 * C49313;
    const double C49320 = C49319 * C49313;
    const double C49325 = C49287 * C49313;
    const double C49331 = C49294 * C49313;
    const double C49342 = C49302 * C49313;
    const double C49277 = C49275 * ae;
    const double C49356 = C49282 * C49354;
    const double C49359 = C49319 * C49354;
    const double C49364 = C49287 * C49354;
    const double C49370 = C49294 * C49354;
    const double C49381 = C49302 * C49354;
    const double C49276 = C49274 / C49271;
    const double C126 = (-(bs[1] * C49313 * C49274) / C49271) / C49148;
    const double C127 = (-(bs[1] * C49354 * C49274) / C49271) / C49148;
    const double C120 = -(C49280 * bs[1] * C49274) / C49271;
    const double C290 = -(C49272 * bs[1] * C49274) / C49271;
    const double C455 = -(C49273 * bs[1] * C49274) / C49271;
    const double C50054 = C50051 * C49149;
    const double C50088 = std::pow(C50077, -1);
    const double C50341 = std::pow(C50077, -2);
    const double C50092 = 2 * C50087;
    const double C50339 = 4 * C50087;
    const double C50080 = C50076 * C50074;
    const double C50099 = C50098 * C50074;
    const double C50115 = C50114 * C50074;
    const double C49195 = C49147 / C49152;
    const double C49199 = C49191 / C49152;
    const double C49237 = C49166 / C49152;
    const double C49241 = C49234 / C49152;
    const double C49202 = 0 - C49198;
    const double C50197 = C50196 / C49148;
    const double C49244 = 0 - C49240;
    const double C50212 = C50211 / C49148;
    const double C49278 = C49277 * be;
    const double C49281 = std::pow(C49276, 4);
    const double C49286 = -C49276;
    const double C49293 = std::pow(C49276, 6);
    const double C49683 = std::pow(C49276, 2);
    const double C128 =
        (C49280 * std::pow(C49276, 2) * bs[2] * C49313) / C49148;
    const double C129 =
        (C49280 * std::pow(C49276, 2) * bs[2] * C49354) / C49148;
    const double C300 =
        (C49272 * std::pow(C49276, 2) * bs[2] * C49313) / C49148;
    const double C301 =
        (C49272 * std::pow(C49276, 2) * bs[2] * C49354) / C49148 -
        (ae * bs[1] * C49274) / (C49271 * C49148);
    const double C50055 = C50054 / C49148;
    const double C50081 = C50080 / C50075;
    const double C50100 = C50099 / C50075;
    const double C50116 = C50115 / C50075;
    const double C49205 = C49202 * ae;
    const double C50198 = -C50197;
    const double C49247 = C49244 * ae;
    const double C50213 = -C50212;
    const double C49283 = C49282 * C49278;
    const double C49290 = C49287 * C49278;
    const double C49295 = C49294 * C49278;
    const double C49304 = C49302 * C49278;
    const double C142 =
        (std::pow(-C49276, 3) * bs[3] * C49278 +
         std::pow(C49276, 4) * bs[4] * C49278 * std::pow(xP - xQ, 2)) /
        C49150;
    const double C49316 = C49281 * C49315;
    const double C49357 = C49281 * C49356;
    const double C49396 = C49282 * C49281;
    const double C49289 = std::pow(C49286, 5);
    const double C49301 = std::pow(C49286, 7);
    const double C49318 = std::pow(C49286, 3);
    const double C320 = (ae * std::pow(C49276, 2) * bs[2] * C49273 * be +
                         C49272 * std::pow(C49286, 3) * bs[3] * C49278) /
                        C49150;
    const double C49333 = C49293 * C49331;
    const double C49372 = C49293 * C49370;
    const double C49413 = C49294 * C49293;
    const double C49685 = C49684 * C49683;
    const double C465 = (C49273 * C49683 * C49684 * C49313) / C49148 -
                        (be * bs[1] * C49274) / (C49271 * C49148);
    const double C466 = (C49273 * C49683 * C49684 * C49354) / C49148;
    const double C50056 = -C50055;
    const double C50082 = -C50081;
    const double C50101 = -C50100;
    const double C50117 = -C50116;
    const double C49207 = C49205 / C49148;
    const double C50199 = std::exp(C50198);
    const double C49249 = C49247 / C49148;
    const double C50214 = std::exp(C50213);
    const double C49284 = C49281 * C49283;
    const double C49296 = C49293 * C49295;
    const double C49323 = C49280 * C49316;
    const double C49429 = ae * C49316;
    const double C49428 = C49272 * C49316;
    const double C49849 = C49273 * C49316;
    const double C49362 = C49280 * C49357;
    const double C49456 = be * C49357;
    const double C49543 = C49273 * C49357;
    const double C49777 = C49272 * C49357;
    const double C49407 = C49280 * C49396;
    const double C49450 = C49272 * C49396;
    const double C49525 = C49396 * be;
    const double C49556 = C49273 * C49396;
    const double C49691 = C49396 * C49288;
    const double C49779 = C49396 * C49431;
    const double C49811 = C49396 * ae;
    const double C49852 = C49396 * C49538;
    const double C49291 = C49289 * C49290;
    const double C49326 = C49289 * C49325;
    const double C49365 = C49289 * C49364;
    const double C49398 = C49287 * C49289;
    const double C49305 = C49301 * C49304;
    const double C49344 = C49301 * C49342;
    const double C49383 = C49301 * C49381;
    const double C49321 = C49318 * C49320;
    const double C49360 = C49318 * C49359;
    const double C49405 = C49319 * C49318;
    const double C485 = (be * std::pow(C49276, 2) * bs[2] * C49272 * ae +
                         C49273 * C49318 * C49319 * C49278) /
                        C49150;
    const double C49334 = C49333 * C49288;
    const double C49341 = C49280 * C49333;
    const double C49471 = C49333 * C49431;
    const double C49579 = ae * C49333;
    const double C49578 = C49272 * C49333;
    const double C49598 = C49273 * C49333;
    const double C49373 = C49372 * C49288;
    const double C49380 = C49280 * C49372;
    const double C49558 = C49372 * C49538;
    const double C49602 = be * C49372;
    const double C49601 = C49273 * C49372;
    const double C49911 = C49272 * C49372;
    const double C49415 = C49413 * C49288;
    const double C49513 = C49280 * C49413;
    const double C49606 = C49272 * C49413;
    const double C49605 = C49413 * C49431;
    const double C49643 = C49413 * C49538;
    const double C121 = C49685 * C49288 - (bs[1] * C49274) / C49271;
    const double C291 = C49272 * C49280 * C49685;
    const double C294 = C49685 * C49431 - (bs[1] * C49274) / C49271;
    const double C456 = C49273 * C49280 * C49685;
    const double C459 = C49685 * C49538 - (bs[1] * C49274) / C49271;
    const double C888 = C49273 * C49272 * C49685;
    const double C50057 = std::exp(C50056);
    const double C50083 = std::exp(C50082);
    const double C50102 = std::exp(C50101);
    const double C50118 = std::exp(C50117);
    const double C49209 = C49207 - C49199;
    const double C49153 = C49151 * C50199;
    const double C118 = -(2 * ae * be * (yA - yB) * C50199) / (ae + be);
    const double C50247 = C50199 * C50245;
    const double C50250 = C50061 * C50199;
    const double C50358 = C50199 * C50246;
    const double C50353 = C50199 / C49192;
    const double C2284 = C50354 * C50199;
    const double C49251 = C49249 - C49241;
    const double C154 = C50214 * C142;
    const double C150 = C50214 * C141;
    const double C148 = C50214 * C128;
    const double C2451 = C50214 * C320;
    const double C2449 = C50214 * C300;
    const double C49168 = C49167 * C50214;
    const double C117 = -(2 * ae * be * (zA - zB) * C50214) / (ae + be);
    const double C50275 = C50214 * C50273;
    const double C50278 = C50061 * C50214;
    const double C50362 = C50214 * C50274;
    const double C50355 = C50214 / C49192;
    const double C5096 = C50354 * C50214;
    const double C143 = (2 * C49280 * C49284 +
                         C49280 * (C49284 + std::pow(-C49276, 5) * bs[5] *
                                                C49278 * std::pow(C49280, 2))) /
                        C49150;
    const double C321 =
        (ae * C49280 * std::pow(C49286, 3) * bs[3] * C49273 * be +
         C49272 * C49280 * C49284) /
        C49150;
    const double C486 = (be * C49280 * C49318 * C49319 * C49272 * ae +
                         C49273 * C49280 * C49284) /
                        C49150;
    const double C49297 = C49296 * C49288;
    const double C49300 = C49280 * C49296;
    const double C49470 = C49272 * C49296;
    const double C49500 = C49273 * C49296;
    const double C49695 = 2 * C49407;
    const double C49751 = C49272 * C49407;
    const double C49785 = C49407 * ae;
    const double C49859 = C49273 * C49407;
    const double C49858 = C49407 * be;
    const double C49813 = 2 * C49450;
    const double C49812 = C49450 * ae;
    const double C49877 = C49273 * C49450;
    const double C49876 = C49450 * be;
    const double C49893 = 2 * C49556;
    const double C49892 = C49556 * be;
    const double C49401 = C49280 * C49291;
    const double C49430 = C49272 * C49291;
    const double C49457 = C49273 * C49291;
    const double C144 =
        (3 * (C49284 + C49291 * C49288) +
         C49280 * (2 * C49280 * C49291 +
                   C49280 * (C49291 +
                             std::pow(C49276, 6) * bs[6] * C49278 * C49288))) /
        C49150;
    const double C322 = (ae * (std::pow(C49286, 3) * bs[3] * C49313 +
                               C49281 * C49282 * C49313 * C49288) +
                         C49272 * (C49284 + C49291 * C49288)) /
                        C49150;
    const double C325 = (C49280 * C49284 + ae * C49272 * C49323 +
                         C49272 * (ae * C49323 + C49272 * C49280 * C49291)) /
                        C49150;
    const double C487 =
        (be * (C49318 * C49319 * C49354 + C49281 * C49282 * C49354 * C49288) +
         C49273 * (C49284 + C49291 * C49288)) /
        C49150;
    const double C490 = (C49280 * C49284 + be * C49273 * C49362 +
                         C49273 * (be * C49362 + C49273 * C49280 * C49291)) /
                        C49150;
    const double C904 =
        (ae * (C49273 * C49323 + C49280 * C49319 * C49318 * be) +
         C49272 * (be * C49362 + C49273 * C49280 * C49291)) /
        C49150;
    const double C49327 = C49326 * C49288;
    const double C49330 = C49280 * C49326;
    const double C49433 = C49326 * C49431;
    const double C49469 = ae * C49326;
    const double C49468 = C49272 * C49326;
    const double C49524 = C49273 * C49326;
    const double C49366 = C49365 * C49288;
    const double C49369 = C49280 * C49365;
    const double C49499 = be * C49365;
    const double C49498 = C49273 * C49365;
    const double C49544 = C49365 * C49538;
    const double C2643 =
        (C49284 + be * C49273 * C49357 +
         C49273 * (be * C49357 + C49273 * C49291) +
         ae * (C49428 + C49273 * (C49273 * C49272 * C49326 + C49450 * be) +
               C49273 * C49450 * be) +
         C49272 * (ae * (C49316 + C49273 * (C49273 * C49326 + C49396 * be) +
                         C49273 * C49396 * be) +
                   C49272 * (C49291 + be * C49273 * C49365 +
                             C49273 * (be * C49365 + C49273 * C49296)))) /
        C49150;
    const double C49810 = C49272 * C49365;
    const double C49409 = C49398 * C49288;
    const double C49412 = C49280 * C49398;
    const double C49502 = C49272 * C49398;
    const double C49501 = C49398 * C49431;
    const double C49557 = C49398 * C49538;
    const double C49600 = C49273 * C49398;
    const double C49599 = C49398 * be;
    const double C49912 = C49398 * ae;
    const double C49306 = C49305 * C49288;
    const double C49484 = C49280 * C49305;
    const double C49580 = C49272 * C49305;
    const double C49603 = C49273 * C49305;
    const double C49345 = C49344 * C49288;
    const double C49485 = C49280 * C49344;
    const double C49582 = C49344 * C49431;
    const double C49384 = C49383 * C49288;
    const double C49514 = C49280 * C49383;
    const double C49644 = C49383 * C49538;
    const double C324 = (C49318 * C49319 * C49278 + ae * C49272 * C49321 +
                         C49272 * (ae * C49321 + C49272 * C49284)) /
                        C49150;
    const double C1106 = (2 * (ae * C49321 + C49272 * C49284) +
                          ae * (C49321 + C49316 * std::pow(C49272, 2)) +
                          C49272 * (C49284 + ae * C49272 * C49316 +
                                    C49272 * (ae * C49316 + C49272 * C49291))) /
                         C49150;
    const double C130 =
        (std::pow(C49276, 2) * bs[2] * C49313 + C49321 * C49288) / C49148;
    const double C132 =
        (2 * C49280 * C49321 + C49280 * (C49321 + C49316 * C49288)) / C49148;
    const double C302 = (C49272 * C49280 * C49321) / C49148;
    const double C304 = (C49272 * (C49321 + C49316 * C49288)) / C49148;
    const double C308 =
        (std::pow(C49276, 2) * bs[2] * C49313 + C49321 * C49431) / C49148;
    const double C310 = (C49280 * C49321 + C49323 * C49431) / C49148;
    const double C467 =
        (C49273 * C49280 * C49321 + C49280 * C49685 * be) / C49148;
    const double C473 =
        (C49683 * C49684 * C49313 + C49273 * (C49273 * C49321 + C49685 * be) +
         C49273 * C49685 * be) /
        C49148;
    const double C893 =
        (C49273 * C49272 * C49321 + C49272 * C49685 * be) / C49148;
    const double C1098 =
        (2 * C49272 * C49321 + C49272 * (C49321 + C49316 * C49431)) / C49148;
    const double C489 = (C49318 * C49319 * C49278 + be * C49273 * C49360 +
                         C49273 * (be * C49360 + C49273 * C49284)) /
                        C49150;
    const double C903 =
        (ae * (C49273 * C49321 + bs[2] * std::pow(C49276, 2) * be) +
         C49272 * (be * C49360 + C49273 * C49284)) /
        C49150;
    const double C1851 = (2 * (be * C49360 + C49273 * C49284) +
                          be * (C49360 + C49357 * std::pow(C49273, 2)) +
                          C49273 * (C49284 + be * C49273 * C49357 +
                                    C49273 * (be * C49357 + C49273 * C49291))) /
                         C49150;
    const double C131 =
        (std::pow(C49276, 2) * bs[2] * C49354 + C49360 * C49288) / C49148;
    const double C133 =
        (2 * C49280 * C49360 + C49280 * (C49360 + C49357 * C49288)) / C49148;
    const double C303 =
        (C49272 * C49280 * C49360 + C49280 * bs[2] * std::pow(C49276, 2) * ae) /
        C49148;
    const double C309 =
        (C49683 * C49684 * C49354 + C49272 * (C49272 * C49360 + C49685 * ae) +
         C49272 * C49685 * ae) /
        C49148;
    const double C468 = (C49273 * C49280 * C49360) / C49148;
    const double C470 = (C49273 * (C49360 + C49357 * C49288)) / C49148;
    const double C474 = (C49683 * C49684 * C49354 + C49360 * C49538) / C49148;
    const double C476 = (C49280 * C49360 + C49362 * C49538) / C49148;
    const double C894 = (C49273 * (C49272 * C49360 + C49685 * ae)) / C49148;
    const double C1844 =
        (2 * C49273 * C49360 + C49273 * (C49360 + C49357 * C49538)) / C49148;
    const double C1220 =
        (ae * (C49321 + C49273 * (C49273 * C49316 + C49405 * be) +
               C49273 * C49405 * be) +
         C49272 * (C49284 + be * C49273 * C49357 +
                   C49273 * (be * C49357 + C49273 * C49291))) /
        C49150;
    const double C1567 =
        (be * C49360 + C49273 * C49284 +
         ae * (C49273 * C49272 * C49316 + C49272 * C49405 * be) +
         C49272 * (ae * (C49273 * C49316 + C49405 * be) +
                   C49272 * (be * C49357 + C49273 * C49291))) /
        C49150;
    const double C49688 = C49280 * C49405;
    const double C49692 = C49405 + C49691;
    const double C49748 = C49272 * C49405;
    const double C49778 = C49405 * ae;
    const double C49781 = C49405 + C49779;
    const double C49851 = C49273 * C49405;
    const double C49850 = C49405 * be;
    const double C49854 = C49405 + C49852;
    const double C305 = (C49272 * (C49360 + C49357 * C49288) +
                         (bs[2] * std::pow(C49276, 2) + C49405 * C49288) * ae) /
                        C49148;
    const double C469 = (C49273 * (C49321 + C49316 * C49288) +
                         (C49685 + C49405 * C49288) * be) /
                        C49148;
    const double C1099 =
        (2 * (C49272 * C49360 + C49685 * ae) +
         C49272 * (C49360 + C49272 * (C49272 * C49357 + C49405 * ae) +
                   C49272 * C49405 * ae) +
         (C49685 + C49405 * C49431) * ae) /
        C49148;
    const double C1213 = (C49272 * C49360 + C49685 * ae +
                          (C49272 * C49357 + C49405 * ae) * C49538) /
                         C49148;
    const double C1559 = (C49273 * (C49321 + C49316 * C49431) +
                          (C49685 + C49405 * C49431) * be) /
                         C49148;
    const double C1843 =
        (2 * (C49273 * C49321 + C49685 * be) +
         C49273 * (C49321 + C49273 * (C49273 * C49316 + C49405 * be) +
                   C49273 * C49405 * be) +
         (C49685 + C49405 * C49538) * be) /
        C49148;
    const double C122 =
        2 * C49280 * C49685 + C49280 * (C49685 + C49405 * C49288);
    const double C292 = C49272 * (C49685 + C49405 * C49288);
    const double C457 = C49273 * (C49685 + C49405 * C49288);
    const double C1094 =
        2 * C49272 * C49685 + C49272 * (C49685 + C49405 * C49431);
    const double C1555 = C49273 * (C49685 + C49405 * C49431);
    const double C1839 =
        2 * C49273 * C49685 + C49273 * (C49685 + C49405 * C49538);
    const double C49335 = C49326 + C49334;
    const double C49343 = 2 * C49341;
    const double C49439 = C49341 * C49431;
    const double C49483 = ae * C49341;
    const double C49482 = C49272 * C49341;
    const double C49531 = C49273 * C49341;
    const double C49475 = C49326 + C49471;
    const double C49586 = 2 * C49578;
    const double C49584 = ae * C49578;
    const double C49624 = C49273 * C49578;
    const double C49374 = C49365 + C49373;
    const double C49382 = 2 * C49380;
    const double C49511 = be * C49380;
    const double C49510 = C49273 * C49380;
    const double C49548 = C49380 * C49538;
    const double C49822 = C49272 * C49380;
    const double C49560 = C49365 + C49558;
    const double C49609 = be * C49601;
    const double C49651 = 2 * C49601;
    const double C49416 = C49398 + C49415;
    const double C49518 = C49272 * C49513;
    const double C49517 = C49513 * C49431;
    const double C49563 = C49513 * C49538;
    const double C49642 = C49606 * C49538;
    const double C49611 = C49398 + C49605;
    const double C49646 = C49398 + C49643;
    const double C50058 = C50057 * C50052;
    const double C50062 = C50061 * C50057;
    const double C50329 = C50057 * C50053;
    const double C50326 = C50057 / C49192;
    const double C16959 = C50354 * C50057;
    const double C50084 = C50083 * C50078;
    const double C50089 = C50088 * C50083;
    const double C50336 = C50083 * C50079;
    const double C50333 = C50083 / C50077;
    const double C1022 = C50341 * C50083;
    const double C50151 = C50102 * C50149;
    const double C50154 = C50088 * C50102;
    const double C50345 = C50102 * C50150;
    const double C50340 = C50102 / C50077;
    const double C287 = C50341 * C50102;
    const double C50179 = C50118 * C50177;
    const double C50182 = C50088 * C50118;
    const double C50349 = C50118 * C50178;
    const double C50342 = C50118 / C50077;
    const double C454 = C50341 * C50118;
    const double C49197 = C49153 / C49150;
    const double C49194 = 2 * C49153;
    const double C2289 = ((0 * ae) / C49148 - C49153 / C49150) / (2 * C49148) +
                         (0 * ae) / C49148;
    const double C7885 =
        ((C50199 - (C49146 * 2 * C49153) / C49148) * ae) / C49148 -
        C49147 / C49152;
    const double C7886 = (0 * ae) / C49148 - C49153 / C49150;
    const double C16960 =
        (-C49147 / C49148) / (2 * C49148) -
        ((C50199 - (C49146 * 2 * C49153) / C49148) * be) / C49148;
    const double C16961 =
        (-(2 * C49153) / C49148) / (2 * C49148) - (0 * be) / C49148;
    const double C50360 = C50247 / C49152;
    const double C50359 = C50247 * C50246;
    const double C50356 = C50247 / C49148;
    const double C2283 = (2 * C50061 * C50247) / C49148;
    const double C2288 =
        (((C50199 - (C49146 * 2 * C49153) / C49148) * ae) / C49148 -
         C49147 / C49152) /
            (2 * C49148) +
        ((C49146 * ((0 * ae) / C49148 - C49153 / C49150) + C50250) * ae) /
            C49148;
    const double C50361 = C50250 * C50246;
    const double C19589 = C50250 / C50332;
    const double C24135 = C50250 / C49192;
    const double C50378 = C50358 / C49148;
    const double C2282 = (C50199 * std::pow(C50245, 2)) / C49150 + C50353;
    const double C49239 = C49168 / C49150;
    const double C49236 = 2 * C49168;
    const double C5099 = ((0 * ae) / C49148 - C49168 / C49150) / (2 * C49148) +
                         (0 * ae) / C49148;
    const double C10555 =
        ((C50214 - (C49165 * 2 * C49168) / C49148) * ae) / C49148 -
        C49166 / C49152;
    const double C10556 = (0 * ae) / C49148 - C49168 / C49150;
    const double C32933 =
        (-C49166 / C49148) / C49192 -
        ((C50214 - (C49165 * 2 * C49168) / C49148) * be) / C49148;
    const double C32934 = (-(2 * C49168) / C49148) / C49192 - (0 * be) / C49148;
    const double C153 = C117 * C121;
    const double C151 = C117 * C129;
    const double C149 = C117 * C120;
    const double C331 = C117 * C291;
    const double C496 = C117 * C456;
    const double C2454 = C117 * C294;
    const double C2452 = C117 * C301;
    const double C2450 = C117 * C290;
    const double C3165 = C117 * C888;
    const double C50364 = C50275 / C49152;
    const double C50363 = C50275 * C50274;
    const double C50357 = C50275 / C49148;
    const double C5095 = (2 * C50061 * C50275) / C49148;
    const double C5098 =
        (((C50214 - (C49165 * 2 * C49168) / C49148) * ae) / C49148 -
         C49166 / C49152) /
            (2 * C49148) +
        ((C49165 * ((0 * ae) / C49148 - C49168 / C49150) + C50278) * ae) /
            C49148;
    const double C50365 = C50278 * C50274;
    const double C38438 = C50278 / C50332;
    const double C43781 = C50278 / C49192;
    const double C50381 = C50362 / C49148;
    const double C5094 = (C50214 * std::pow(C50273, 2)) / C49150 + C50355;
    const double C158 = C50214 * C143;
    const double C334 = C50214 * C321;
    const double C499 = C50214 * C486;
    const double C10564 = C50278 * C486;
    const double C32942 = C50278 * C486;
    const double C49298 = C49291 + C49297;
    const double C49303 = 2 * C49300;
    const double C49438 = C49272 * C49300;
    const double C49461 = C49273 * C49300;
    const double C49432 = C49429 + C49430;
    const double C49458 = C49456 + C49457;
    const double C163 = C50214 * C144;
    const double C338 = C50214 * C322;
    const double C345 = C50214 * C325;
    const double C503 = C50214 * C487;
    const double C10572 = C50278 * C487;
    const double C32950 = C50278 * C487;
    const double C510 = C50214 * C490;
    const double C5111 = C5096 * C490;
    const double C10939 = C50278 * C490;
    const double C33317 = C50278 * C490;
    const double C911 = C50214 * C904;
    const double C10761 = C50278 * C904;
    const double C33139 = C50278 * C904;
    const double C49328 = C49316 + C49327;
    const double C49332 = 2 * C49330;
    const double C49437 = ae * C49330;
    const double C49436 = C49272 * C49330;
    const double C1107 = (2 * (ae * C49323 + C49272 * C49401) +
                          ae * (C49323 + C49330 * std::pow(C49272, 2)) +
                          C49272 * (C49401 + ae * C49272 * C49330 +
                                    C49272 * (ae * C49330 + C49272 * C49300))) /
                         C49150;
    const double C49857 = C49273 * C49330;
    const double C1100 =
        (2 * C49272 * C49323 + C49272 * (C49323 + C49330 * C49431)) / C49148;
    const double C49434 = C49316 + C49433;
    const double C49473 = C49469 + C49470;
    const double C49474 = 2 * C49468;
    const double C49472 = ae * C49468;
    const double C49875 = C49273 * C49468;
    const double C49527 = C49524 + C49525;
    const double C49367 = C49357 + C49366;
    const double C49371 = 2 * C49369;
    const double C49460 = be * C49369;
    const double C49547 = C49273 * C49369;
    const double C1221 =
        (ae * (C49323 + C49273 * (C49273 * C49330 + C49407 * be) +
               C49273 * C49407 * be) +
         C49272 * (C49401 + be * C49273 * C49369 +
                   C49273 * (be * C49369 + C49273 * C49300))) /
        C49150;
    const double C1568 =
        (be * C49362 + C49273 * C49401 +
         ae * (C49273 * C49272 * C49330 + C49272 * C49407 * be) +
         C49272 * (ae * (C49273 * C49330 + C49407 * be) +
                   C49272 * (be * C49369 + C49273 * C49300))) /
        C49150;
    const double C1852 = (2 * (be * C49362 + C49273 * C49401) +
                          be * (C49362 + C49369 * std::pow(C49273, 2)) +
                          C49273 * (C49401 + be * C49273 * C49369 +
                                    C49273 * (be * C49369 + C49273 * C49300))) /
                         C49150;
    const double C49784 = C49272 * C49369;
    const double C1562 =
        (C49273 *
         (C49362 + C49272 * (C49272 * C49369 + C49407 * ae) + C49751 * ae)) /
        C49148;
    const double C1846 =
        (2 * C49273 * C49362 + C49273 * (C49362 + C49369 * C49538)) / C49148;
    const double C49504 = C49499 + C49500;
    const double C49503 = be * C49498;
    const double C49568 = 2 * C49498;
    const double C49545 = C49357 + C49544;
    const double C3603 = C50214 * C2643;
    const double C15692 = C50278 * C2643;
    const double C21595 = C5096 * C2643;
    const double C36565 = C50278 * C2643;
    const double C49815 = C49810 + C49811;
    const double C49410 = C49396 + C49409;
    const double C49414 = 2 * C49412;
    const double C49452 = C49272 * C49412;
    const double C49532 = C49412 * be;
    const double C49562 = C49273 * C49412;
    const double C49786 = C49412 * C49431;
    const double C49823 = C49412 * ae;
    const double C49860 = C49412 * C49538;
    const double C49604 = 2 * C49502;
    const double C49625 = C49502 * be;
    const double C49641 = C49273 * C49502;
    const double C49878 = C49502 * C49538;
    const double C49913 = C49502 * ae;
    const double C49505 = C49396 + C49501;
    const double C49559 = C49396 + C49557;
    const double C49608 = C49600 * be;
    const double C49649 = 2 * C49600;
    const double C49607 = C49598 + C49599;
    const double C49917 = C49911 + C49912;
    const double C49307 = C49296 + C49306;
    const double C49487 = C49272 * C49484;
    const double C49512 = C49273 * C49484;
    const double C49585 = C49579 + C49580;
    const double C49610 = C49602 + C49603;
    const double C49346 = C49333 + C49345;
    const double C49489 = C49485 * C49431;
    const double C49587 = C49333 + C49582;
    const double C49385 = C49372 + C49384;
    const double C49564 = C49514 * C49538;
    const double C49647 = C49372 + C49644;
    const double C2455 = C50214 * C324;
    const double C2464 = C50214 * C1106;
    const double C152 = C50214 * C130;
    const double C156 = C50214 * C132;
    const double C332 = C50214 * C302;
    const double C336 = C50214 * C304;
    const double C2453 = C50214 * C308;
    const double C343 = C50214 * C310;
    const double C497 = C50214 * C467;
    const double C10560 = C50278 * C467;
    const double C32938 = C50278 * C467;
    const double C3166 = C50214 * C893;
    const double C13578 = C50278 * C893;
    const double C35876 = C50278 * C893;
    const double C2462 = C50214 * C1098;
    const double C3168 = C50214 * C903;
    const double C13582 = C50278 * C903;
    const double C35880 = C50278 * C903;
    const double C155 = C117 * C131;
    const double C159 = C117 * C133;
    const double C333 = C117 * C303;
    const double C2456 = C117 * C309;
    const double C498 = C117 * C468;
    const double C502 = C117 * C470;
    const double C511 = C117 * C476;
    const double C3167 = C117 * C894;
    const double C3599 = C50214 * C1220;
    const double C14485 = C50278 * C1220;
    const double C21582 = C5096 * C1220;
    const double C36557 = C50278 * C1220;
    const double C3172 = C50214 * C1567;
    const double C13595 = C50278 * C1567;
    const double C35888 = C50278 * C1567;
    const double C311 =
        (C49280 * C49360 + C49272 * (C49272 * C49362 + C49688 * ae) +
         C49272 * C49688 * ae) /
        C49148;
    const double C475 =
        (C49280 * C49321 + C49273 * (C49273 * C49323 + C49688 * be) +
         C49273 * C49688 * be) /
        C49148;
    const double C895 =
        (C49273 * C49272 * C49323 + C49272 * C49688 * be) / C49148;
    const double C896 = (C49273 * (C49272 * C49362 + C49688 * ae)) / C49148;
    const double C1101 =
        (2 * (C49272 * C49362 + C49688 * ae) +
         C49272 * (C49362 + C49272 * (C49272 * C49369 + C49407 * ae) +
                   C49272 * C49407 * ae) +
         (C49688 + C49407 * C49431) * ae) /
        C49148;
    const double C1215 = (C49272 * C49362 + C49688 * ae +
                          (C49272 * C49369 + C49407 * ae) * C49538) /
                         C49148;
    const double C1561 = (C49273 * (C49323 + C49330 * C49431) +
                          (C49688 + C49407 * C49431) * be) /
                         C49148;
    const double C1845 =
        (2 * (C49273 * C49323 + C49688 * be) +
         C49273 * (C49323 + C49273 * (C49273 * C49330 + C49407 * be) +
                   C49273 * C49407 * be) +
         (C49688 + C49407 * C49538) * be) /
        C49148;
    const double C295 = C49280 * C49685 + C49688 * C49431;
    const double C460 = C49280 * C49685 + C49688 * C49538;
    const double C889 = C49273 * C49272 * C49688;
    const double C1095 =
        2 * C49272 * C49688 + C49272 * (C49688 + C49407 * C49431);
    const double C1209 = C49272 * C49688 + C49751 * C49538;
    const double C1556 = C49273 * (C49688 + C49407 * C49431);
    const double C1840 =
        2 * C49273 * C49688 + C49273 * (C49688 + C49407 * C49538);
    const double C123 = 3 * (C49685 + C49405 * C49288) +
                        C49280 * (2 * C49688 + C49280 * C49692);
    const double C293 = C49272 * (2 * C49688 + C49280 * C49692);
    const double C296 = C49685 + C49405 * C49288 + C49692 * C49431;
    const double C458 = C49273 * (2 * C49688 + C49280 * C49692);
    const double C461 = C49685 + C49405 * C49288 + C49692 * C49538;
    const double C890 = C49273 * C49272 * C49692;
    const double C1212 =
        (C49272 * C49321 + C49273 * (C49273 * C49428 + C49748 * be) +
         C49273 * C49748 * be) /
        C49148;
    const double C1560 =
        (C49273 *
         (C49360 + C49272 * (C49272 * C49357 + C49405 * ae) + C49748 * ae)) /
        C49148;
    const double C4498 =
        (2 * (C49273 * C49428 + C49748 * be) +
         C49273 * (C49428 + C49273 * (C49273 * C49468 + C49450 * be) +
                   C49273 * C49450 * be) +
         (C49748 + C49450 * C49538) * be) /
        C49148;
    const double C1208 = C49272 * C49685 + C49748 * C49538;
    const double C4494 =
        2 * C49273 * C49748 + C49273 * (C49748 + C49450 * C49538);
    const double C49780 = C49777 + C49778;
    const double C2436 = 3 * (C49685 + C49405 * C49431) +
                         C49272 * (2 * C49748 + C49272 * C49781);
    const double C2634 = C49685 + C49405 * C49431 + C49781 * C49538;
    const double C3152 = C49273 * (2 * C49748 + C49272 * C49781);
    const double C49853 = C49849 + C49850;
    const double C5452 = 3 * (C49685 + C49405 * C49538) +
                         C49273 * (2 * C49851 + C49273 * C49854);
    const double C337 = C117 * C305;
    const double C501 = C50214 * C469;
    const double C10568 = C50278 * C469;
    const double C32946 = C50278 * C469;
    const double C2463 = C117 * C1099;
    const double C3600 = C117 * C1213;
    const double C3170 = C50214 * C1559;
    const double C13591 = C50278 * C1559;
    const double C35884 = C50278 * C1559;
    const double C157 = C117 * C122;
    const double C335 = C117 * C292;
    const double C500 = C117 * C457;
    const double C2461 = C117 * C1094;
    const double C3169 = C117 * C1555;
    const double C49336 = C49280 * C49335;
    const double C49340 = 3 * C49335;
    const double C49444 = ae * C49335;
    const double C49443 = C49272 * C49335;
    const double C49865 = C49273 * C49335;
    const double C49441 = C49330 + C49439;
    const double C49488 = 2 * C49482;
    const double C49486 = ae * C49482;
    const double C49883 = C49273 * C49482;
    const double C49478 = C49272 * C49475;
    const double C49581 = 3 * C49475;
    const double C49577 = ae * C49475;
    const double C49932 = C49273 * C49475;
    const double C49588 = C49296 + C49584;
    const double C49375 = C49280 * C49374;
    const double C49379 = 3 * C49374;
    const double C49464 = be * C49374;
    const double C49551 = C49273 * C49374;
    const double C49791 = C49272 * C49374;
    const double C49515 = be * C49510;
    const double C49572 = 2 * C49510;
    const double C49549 = C49369 + C49548;
    const double C49569 = C49273 * C49560;
    const double C49636 = be * C49560;
    const double C49656 = 3 * C49560;
    const double C49613 = C49296 + C49609;
    const double C49417 = C49280 * C49416;
    const double C49454 = C49272 * C49416;
    const double C49793 = C49416 * C49431;
    const double C49868 = C49416 * C49538;
    const double C49886 = C49518 * C49538;
    const double C49521 = C49412 + C49517;
    const double C49565 = C49412 + C49563;
    const double C49645 = C49502 + C49642;
    const double C49615 = C49272 * C49611;
    const double C49935 = C49611 * C49538;
    const double C49650 = C49273 * C49646;
    const double C50330 = C50058 / C49152;
    const double C50328 = C50058 / C49148;
    const double C50327 = C50058 * C50053;
    const double C16958 = (2 * C50061 * C50058) / C49148;
    const double C50331 = C50062 * C50053;
    const double C110 = C50062 / C50332;
    const double C7884 = C50062 / C49192;
    const double C50367 = C50329 / C49148;
    const double C16957 = (C50057 * std::pow(C50052, 2)) / C49150 + C50326;
    const double C50337 = C50084 / C50092;
    const double C50335 = C50084 / C50075;
    const double C50334 = C50084 * C50079;
    const double C1021 = (2 * C50088 * C50084) / C50075;
    const double C50338 = C50089 * C50079;
    const double C116 = C50089 / C50339;
    const double C621 = C50089 / C50077;
    const double C50370 = C50336 / C50075;
    const double C1020 = (C50083 * std::pow(C50078, 2)) / C50087 + C50333;
    const double C50347 = C50151 / C50092;
    const double C50346 = C50151 * C50150;
    const double C50343 = C50151 / C50075;
    const double C286 = (2 * C50088 * C50151) / C50075;
    const double C50348 = C50154 * C50150;
    const double C1092 = C50154 / C50339;
    const double C1324 = C50154 / C50077;
    const double C50372 = C50345 / C50075;
    const double C285 = (C50102 * std::pow(C50149, 2)) / C50087 + C50340;
    const double C50351 = C50179 / C50092;
    const double C50350 = C50179 * C50178;
    const double C50344 = C50179 / C50075;
    const double C453 = (2 * C50088 * C50179) / C50075;
    const double C50352 = C50182 * C50178;
    const double C1838 = C50182 / C50339;
    const double C2085 = C50182 / C50077;
    const double C50375 = C50349 / C50075;
    const double C452 = (C50118 * std::pow(C50177, 2)) / C50087 + C50342;
    const double C49204 = C49201 - C49197;
    const double C49200 = C49146 * C49194;
    const double C50379 = C50359 / C49150;
    const double C2287 =
        (((0 - (C49146 * C49147) / C49148) * ae) / C49148 - (0 * be) / C49152) /
            (2 * C49148) +
        ((C49146 * (((C50199 - (C49146 * 2 * C49153) / C49148) * ae) / C49148 -
                    C49147 / C49152) +
          C50356) *
         ae) /
            C49148 +
        (0 * ae) / C49148 - C49153 / C49150;
    const double C50380 = C50361 / C49148;
    const double C16955 = -C50378;
    const double C49246 = C49243 - C49239;
    const double C49242 = C49165 * C49236;
    const double C5112 = C5099 * C476;
    const double C21583 = C5099 * C1213;
    const double C10578 = C10555 * C133;
    const double C10574 = C10555 * C122;
    const double C10571 = C10555 * C131;
    const double C10567 = C10555 * C121;
    const double C10563 = C10555 * C129;
    const double C10559 = C10555 * C120;
    const double C10766 = C10555 * C305;
    const double C10762 = C10555 * C292;
    const double C10758 = C10555 * C303;
    const double C10754 = C10555 * C291;
    const double C10953 = C10555 * C476;
    const double C10944 = C10555 * C470;
    const double C10940 = C10555 * C457;
    const double C10936 = C10555 * C468;
    const double C10932 = C10555 * C456;
    const double C13592 = C10555 * C309;
    const double C13588 = C10555 * C294;
    const double C13581 = C10555 * C301;
    const double C13577 = C10555 * C290;
    const double C14482 = C10555 * C894;
    const double C14478 = C10555 * C888;
    const double C14835 = C10555 * C1099;
    const double C14831 = C10555 * C1094;
    const double C15037 = C10555 * C1213;
    const double C15687 = C10555 * C1555;
    const double C10573 = C10556 * C470;
    const double C10569 = C10556 * C457;
    const double C10565 = C10556 * C468;
    const double C10561 = C10556 * C456;
    const double C10938 = C10556 * C476;
    const double C13590 = C10556 * C1555;
    const double C13583 = C10556 * C894;
    const double C13579 = C10556 * C888;
    const double C14484 = C10556 * C1213;
    const double C32956 = C32933 * C133;
    const double C32952 = C32933 * C122;
    const double C32949 = C32933 * C131;
    const double C32945 = C32933 * C121;
    const double C32941 = C32933 * C129;
    const double C32937 = C32933 * C120;
    const double C33144 = C32933 * C305;
    const double C33140 = C32933 * C292;
    const double C33136 = C32933 * C303;
    const double C33132 = C32933 * C291;
    const double C33331 = C32933 * C476;
    const double C33322 = C32933 * C470;
    const double C33318 = C32933 * C457;
    const double C33314 = C32933 * C468;
    const double C33310 = C32933 * C456;
    const double C35894 = C32933 * C1099;
    const double C35890 = C32933 * C1094;
    const double C35887 = C32933 * C309;
    const double C35883 = C32933 * C294;
    const double C35879 = C32933 * C301;
    const double C35875 = C32933 * C290;
    const double C36558 = C32933 * C1555;
    const double C36554 = C32933 * C894;
    const double C36550 = C32933 * C888;
    const double C36983 = C32933 * C1213;
    const double C32951 = C32934 * C470;
    const double C32947 = C32934 * C457;
    const double C32943 = C32934 * C468;
    const double C32939 = C32934 * C456;
    const double C33316 = C32934 * C476;
    const double C35885 = C32934 * C1555;
    const double C35881 = C32934 * C894;
    const double C35877 = C32934 * C888;
    const double C36556 = C32934 * C1213;
    const double C50382 = C50363 / C49150;
    const double C10586 = C50357 * C144;
    const double C10579 = C50357 * C143;
    const double C10575 = C50357 * C132;
    const double C10570 = C50357 * C142;
    const double C10566 = C50357 * C130;
    const double C10562 = C50357 * C141;
    const double C10558 = C50357 * C128;
    const double C10774 = C50357 * C325;
    const double C10770 = C50357 * C310;
    const double C10767 = C50357 * C322;
    const double C10763 = C50357 * C304;
    const double C10759 = C50357 * C321;
    const double C10755 = C50357 * C302;
    const double C10952 = C50357 * C490;
    const double C10945 = C50357 * C487;
    const double C10941 = C50357 * C469;
    const double C10937 = C50357 * C486;
    const double C10933 = C50357 * C467;
    const double C11488 = C50357 * C904;
    const double C13593 = C50357 * C324;
    const double C13589 = C50357 * C308;
    const double C13580 = C50357 * C320;
    const double C13576 = C50357 * C300;
    const double C14483 = C50357 * C903;
    const double C14479 = C50357 * C893;
    const double C14834 = C50357 * C1106;
    const double C14830 = C50357 * C1098;
    const double C15036 = C50357 * C1220;
    const double C15690 = C50357 * C1567;
    const double C15686 = C50357 * C1559;
    const double C31454 = C50357 * C2643;
    const double C5097 =
        (((0 - (C49165 * C49166) / C49148) * ae) / C49148 - (0 * be) / C49152) /
            (2 * C49148) +
        ((C49165 * (((C50214 - (C49165 * 2 * C49168) / C49148) * ae) / C49148 -
                    C49166 / C49152) +
          C50357) *
         ae) /
            C49148 +
        (0 * ae) / C49148 - C49168 / C49150;
    const double C5122 = C5095 * C487;
    const double C5116 = C5095 * C469;
    const double C5109 = C5095 * C486;
    const double C5103 = C5095 * C467;
    const double C5292 = C5095 * C904;
    const double C5474 = C5095 * C490;
    const double C21593 = C5095 * C1567;
    const double C21587 = C5095 * C1559;
    const double C21580 = C5095 * C903;
    const double C21574 = C5095 * C893;
    const double C22237 = C5095 * C1220;
    const double C23152 = C5095 * C2643;
    const double C5121 = C5098 * C470;
    const double C5115 = C5098 * C457;
    const double C5110 = C5098 * C468;
    const double C5104 = C5098 * C456;
    const double C5473 = C5098 * C476;
    const double C21586 = C5098 * C1555;
    const double C21581 = C5098 * C894;
    const double C21575 = C5098 * C888;
    const double C22236 = C5098 * C1213;
    const double C50383 = C50365 / C49148;
    const double C43796 = C43781 * C490;
    const double C46703 = C43781 * C2643;
    const double C46690 = C43781 * C1220;
    const double C32931 = -C50381;
    const double C5131 = C5094 * C143;
    const double C5125 = C5094 * C132;
    const double C5120 = C5094 * C142;
    const double C5114 = C5094 * C130;
    const double C5107 = C5094 * C141;
    const double C5101 = C5094 * C128;
    const double C5301 = C5094 * C325;
    const double C5295 = C5094 * C310;
    const double C5290 = C5094 * C321;
    const double C5284 = C5094 * C302;
    const double C5483 = C5094 * C490;
    const double C5472 = C5094 * C486;
    const double C5466 = C5094 * C467;
    const double C5641 = C5094 * C322;
    const double C5635 = C5094 * C304;
    const double C5799 = C5094 * C487;
    const double C5793 = C5094 * C469;
    const double C6009 = C5094 * C904;
    const double C21591 = C5094 * C324;
    const double C21585 = C5094 * C308;
    const double C21578 = C5094 * C320;
    const double C21572 = C5094 * C300;
    const double C22235 = C5094 * C903;
    const double C22229 = C5094 * C893;
    const double C22490 = C5094 * C1106;
    const double C22484 = C5094 * C1098;
    const double C22652 = C5094 * C1220;
    const double C23150 = C5094 * C1567;
    const double C23144 = C5094 * C1559;
    const double C145 =
        (4 * (2 * C49280 * C49291 + C49280 * C49298) +
         C49280 * (3 * C49298 +
                   C49280 * (2 * C49280 * C49296 +
                             C49280 * (C49296 + std::pow(C49286, 7) * bs[7] *
                                                    C49278 * C49288)))) /
        C49150;
    const double C323 =
        (ae * (2 * C49280 * C49316 +
               C49280 * (C49316 + C49289 * C49287 * C49313 * C49288)) +
         C49272 * (2 * C49280 * C49291 + C49280 * C49298)) /
        C49150;
    const double C488 =
        (be * (2 * C49280 * C49357 +
               C49280 * (C49357 + C49289 * C49287 * C49354 * C49288)) +
         C49273 * (2 * C49280 * C49291 + C49280 * C49298)) /
        C49150;
    const double C326 = (C49284 + C49291 * C49288 + ae * C49272 * C49328 +
                         C49272 * (ae * C49328 + C49272 * C49298)) /
                        C49150;
    const double C134 = (3 * (C49321 + C49316 * C49288) +
                         C49280 * (2 * C49323 + C49280 * C49328)) /
                        C49148;
    const double C306 = (C49272 * (2 * C49323 + C49280 * C49328)) / C49148;
    const double C312 = (C49321 + C49316 * C49288 + C49328 * C49431) / C49148;
    const double C471 = (C49273 * (2 * C49323 + C49280 * C49328) +
                         (2 * C49688 + C49280 * C49692) * be) /
                        C49148;
    const double C477 =
        (C49321 + C49316 * C49288 + C49273 * (C49273 * C49328 + C49692 * be) +
         C49273 * C49692 * be) /
        C49148;
    const double C897 =
        (C49273 * C49272 * C49328 + C49272 * C49692 * be) / C49148;
    const double C1102 =
        (2 * C49272 * C49328 + C49272 * (C49328 + C49335 * C49431)) / C49148;
    const double C49440 = C49437 + C49438;
    const double C1214 =
        (C49272 * C49323 + C49273 * (C49273 * C49436 + C49751 * be) +
         C49273 * C49751 * be) /
        C49148;
    const double C2472 = C50214 * C1107;
    const double C13612 = C50357 * C1107;
    const double C49861 = C49857 + C49858;
    const double C2470 = C50214 * C1100;
    const double C13608 = C50357 * C1100;
    const double C2445 =
        (3 * (C49284 + ae * C49428 + C49272 * C49432) +
         ae * (2 * C49428 + C49272 * C49434) +
         C49272 * (2 * C49432 + ae * C49434 +
                   C49272 * (C49291 + ae * C49272 * C49326 +
                             C49272 * (ae * C49326 + C49272 * C49296)))) /
        C49150;
    const double C3161 =
        (2 * (ae * (C49273 * C49316 + C49405 * be) + C49272 * C49458) +
         ae * (C49273 * C49434 + (C49405 + C49396 * C49431) * be) +
         C49272 * (C49458 + ae * (C49273 * C49272 * C49326 + C49450 * be) +
                   C49272 * (ae * (C49273 * C49326 + C49396 * be) +
                             C49272 * (be * C49365 + C49273 * C49296)))) /
        C49150;
    const double C2439 = (3 * (C49321 + C49316 * C49431) +
                          C49272 * (2 * C49428 + C49272 * C49434)) /
                         C49148;
    const double C2637 =
        (C49321 + C49316 * C49431 + C49273 * (C49273 * C49434 + C49781 * be) +
         C49273 * C49781 * be) /
        C49148;
    const double C3155 = (C49273 * (2 * C49428 + C49272 * C49434) +
                          (2 * C49748 + C49272 * C49781) * be) /
                         C49148;
    const double C49477 = C49272 * C49473;
    const double C49576 = 2 * C49473;
    const double C49476 = C49291 + C49472;
    const double C49879 = C49875 + C49876;
    const double C49528 = ae * C49527;
    const double C49891 = C49273 * C49527;
    const double C49951 = 2 * C49527;
    const double C491 = (C49284 + C49291 * C49288 + be * C49273 * C49367 +
                         C49273 * (be * C49367 + C49273 * C49298)) /
                        C49150;
    const double C905 =
        (ae * (C49273 * C49328 +
               (C49319 * C49318 + C49282 * C49281 * C49288) * be) +
         C49272 * (be * C49367 + C49273 * C49298)) /
        C49150;
    const double C135 = (3 * (C49360 + C49357 * C49288) +
                         C49280 * (2 * C49362 + C49280 * C49367)) /
                        C49148;
    const double C307 =
        (C49272 * (2 * C49362 + C49280 * C49367) +
         (2 * C49280 * C49405 + C49280 * (C49405 + C49396 * C49288)) * ae) /
        C49148;
    const double C313 =
        (C49360 + C49357 * C49288 + C49272 * (C49272 * C49367 + C49692 * ae) +
         C49272 * C49692 * ae) /
        C49148;
    const double C472 = (C49273 * (2 * C49362 + C49280 * C49367)) / C49148;
    const double C478 = (C49360 + C49357 * C49288 + C49367 * C49538) / C49148;
    const double C898 = (C49273 * (C49272 * C49367 + C49692 * ae)) / C49148;
    const double C1848 =
        (2 * C49273 * C49367 + C49273 * (C49367 + C49374 * C49538)) / C49148;
    const double C49462 = C49460 + C49461;
    const double C2653 = C50214 * C1221;
    const double C5294 = C5096 * C1221;
    const double C6011 = C5095 * C1221;
    const double C11490 = C50278 * C1221;
    const double C13822 = C50357 * C1221;
    const double C33868 = C50278 * C1221;
    const double C43979 = C43781 * C1221;
    const double C2650 = C50214 * C1568;
    const double C5303 = C5095 * C1568;
    const double C10776 = C50278 * C1568;
    const double C14498 = C50357 * C1568;
    const double C33154 = C50278 * C1568;
    const double C5485 = C5095 * C1852;
    const double C5476 = C5096 * C1852;
    const double C10954 = C50278 * C1852;
    const double C33332 = C50278 * C1852;
    const double C44149 = C43781 * C1852;
    const double C49787 = C49784 + C49785;
    const double C2649 = C117 * C1562;
    const double C5304 = C5098 * C1562;
    const double C10777 = C10556 * C1562;
    const double C14499 = C10555 * C1562;
    const double C33155 = C32934 * C1562;
    const double C36571 = C32933 * C1562;
    const double C5486 = C5098 * C1846;
    const double C5475 = C5099 * C1846;
    const double C10955 = C10556 * C1846;
    const double C33333 = C32934 * C1846;
    const double C49507 = C49273 * C49504;
    const double C49526 = C49272 * C49504;
    const double C49635 = 2 * C49504;
    const double C49506 = C49291 + C49503;
    const double C5456 = (3 * (C49360 + C49357 * C49538) +
                          C49273 * (2 * C49543 + C49273 * C49545)) /
                         C49148;
    const double C49817 = C49272 * C49815;
    const double C49910 = 2 * C49815;
    const double C49696 = C49280 * C49410;
    const double C49702 = 3 * C49410;
    const double C49754 = C49272 * C49410;
    const double C49792 = C49410 * ae;
    const double C49867 = C49273 * C49410;
    const double C49866 = C49410 * be;
    const double C1103 =
        (2 * (C49272 * C49367 + C49692 * ae) +
         C49272 * (C49367 + C49272 * (C49272 * C49374 + C49410 * ae) +
                   C49272 * C49410 * ae) +
         (C49692 + C49410 * C49431) * ae) /
        C49148;
    const double C1217 = (C49272 * C49367 + C49692 * ae +
                          (C49272 * C49374 + C49410 * ae) * C49538) /
                         C49148;
    const double C1563 = (C49273 * (C49328 + C49335 * C49431) +
                          (C49692 + C49410 * C49431) * be) /
                         C49148;
    const double C1847 =
        (2 * (C49273 * C49328 + C49692 * be) +
         C49273 * (C49328 + C49273 * (C49273 * C49335 + C49410 * be) +
                   C49273 * C49410 * be) +
         (C49692 + C49410 * C49538) * be) /
        C49148;
    const double C1096 =
        2 * C49272 * C49692 + C49272 * (C49692 + C49410 * C49431);
    const double C1557 = C49273 * (C49692 + C49410 * C49431);
    const double C1841 =
        2 * C49273 * C49692 + C49273 * (C49692 + C49410 * C49538);
    const double C2644 =
        (C49401 + be * C49273 * C49369 +
         C49273 * (be * C49369 + C49273 * C49300) +
         ae * (C49436 + C49273 * (C49273 * C49272 * C49341 + C49452 * be) +
               C49273 * C49452 * be) +
         C49272 *
             (ae * (C49330 + C49273 * (C49273 * C49341 + C49412 * be) +
                    C49273 * C49412 * be) +
              C49272 * (C49300 + be * C49273 * C49380 +
                        C49273 * (be * C49380 + C49273 * C49280 * C49305)))) /
        C49150;
    const double C49825 = 2 * C49452;
    const double C49824 = C49452 * ae;
    const double C49885 = C49273 * C49452;
    const double C49884 = C49452 * be;
    const double C4502 =
        (2 * (C49273 * C49436 + C49751 * be) +
         C49273 * (C49436 + C49273 * (C49273 * C49482 + C49452 * be) +
                   C49273 * C49452 * be) +
         (C49751 + C49452 * C49538) * be) /
        C49148;
    const double C4496 =
        2 * C49273 * C49751 + C49273 * (C49751 + C49452 * C49538);
    const double C49534 = C49531 + C49532;
    const double C49902 = 2 * C49562;
    const double C49901 = C49562 * be;
    const double C49788 = C49407 + C49786;
    const double C49827 = C49822 + C49823;
    const double C49862 = C49407 + C49860;
    const double C49628 = C49624 + C49625;
    const double C49942 = 2 * C49641;
    const double C49941 = C49641 * be;
    const double C49880 = C49450 + C49878;
    const double C49814 = C49272 * C49505;
    const double C49915 = 3 * C49505;
    const double C49914 = C49505 * ae;
    const double C49934 = C49273 * C49505;
    const double C49933 = C49505 * be;
    const double C4500 =
        (2 * (C49273 * C49434 + C49781 * be) +
         C49273 * (C49434 + C49273 * (C49273 * C49475 + C49505 * be) +
                   C49273 * C49505 * be) +
         (C49781 + C49505 * C49538) * be) /
        C49148;
    const double C4495 =
        2 * C49273 * C49781 + C49273 * (C49781 + C49505 * C49538);
    const double C49894 = C49273 * C49559;
    const double C49954 = 3 * C49559;
    const double C49953 = C49559 * be;
    const double C49612 = C49273 * C49607;
    const double C49626 = ae * C49607;
    const double C49919 = C49272 * C49917;
    const double C49948 = C49917 * C49538;
    const double C49308 = C49280 * C49307;
    const double C49445 = C49272 * C49307;
    const double C49465 = C49273 * C49307;
    const double C1108 = (2 * (ae * C49328 + C49272 * C49298) +
                          ae * (C49328 + C49335 * std::pow(C49272, 2)) +
                          C49272 * (C49298 + ae * C49272 * C49335 +
                                    C49272 * (ae * C49335 + C49272 * C49307))) /
                         C49150;
    const double C1222 =
        (ae * (C49328 + C49273 * (C49273 * C49335 + C49410 * be) +
               C49273 * C49410 * be) +
         C49272 * (C49298 + be * C49273 * C49374 +
                   C49273 * (be * C49374 + C49273 * C49307))) /
        C49150;
    const double C1569 =
        (be * C49367 + C49273 * C49298 +
         ae * (C49273 * C49272 * C49335 + C49272 * C49410 * be) +
         C49272 * (ae * (C49273 * C49335 + C49410 * be) +
                   C49272 * (be * C49374 + C49273 * C49307))) /
        C49150;
    const double C1853 = (2 * (be * C49367 + C49273 * C49298) +
                          be * (C49367 + C49374 * std::pow(C49273, 2)) +
                          C49273 * (C49298 + be * C49273 * C49374 +
                                    C49273 * (be * C49374 + C49273 * C49307))) /
                         C49150;
    const double C49491 = C49483 + C49487;
    const double C49516 = C49511 + C49512;
    const double C49589 = C49272 * C49585;
    const double C49614 = C49273 * C49610;
    const double C49627 = C49272 * C49610;
    const double C49347 = C49280 * C49346;
    const double C49446 = C49346 * C49431;
    const double C49492 = C49341 + C49489;
    const double C49590 = C49272 * C49587;
    const double C49386 = C49280 * C49385;
    const double C49552 = C49385 * C49538;
    const double C49566 = C49380 + C49564;
    const double C49652 = C49273 * C49647;
    const double C168 = C152 - C153;
    const double C2465 = C331 - C332;
    const double C2457 = C332 - C331;
    const double C2483 = C2453 - C2454;
    const double C169 = C154 - C155;
    const double C173 = C159 - C158;
    const double C171 = C158 - C159;
    const double C2466 = C333 - C334;
    const double C2458 = C334 - C333;
    const double C2484 = C2455 - C2456;
    const double C746 = C502 - C503;
    const double C346 = C117 * C311;
    const double C10775 = C10555 * C311;
    const double C33153 = C32933 * C311;
    const double C508 = C50214 * C475;
    const double C5105 = C5096 * C475;
    const double C5477 = C5094 * C475;
    const double C5468 = C5095 * C475;
    const double C10948 = C50357 * C475;
    const double C10935 = C50278 * C475;
    const double C33313 = C50278 * C475;
    const double C43790 = C43781 * C475;
    const double C909 = C50214 * C895;
    const double C5286 = C5095 * C895;
    const double C6003 = C5094 * C895;
    const double C10757 = C50278 * C895;
    const double C11484 = C50357 * C895;
    const double C33135 = C50278 * C895;
    const double C912 = C117 * C896;
    const double C5291 = C5098 * C896;
    const double C10760 = C10556 * C896;
    const double C11489 = C10555 * C896;
    const double C33138 = C32934 * C896;
    const double C33867 = C32933 * C896;
    const double C2471 = C117 * C1101;
    const double C13613 = C10555 * C1101;
    const double C35907 = C32933 * C1101;
    const double C2654 = C117 * C1215;
    const double C5293 = C5099 * C1215;
    const double C6012 = C5098 * C1215;
    const double C11491 = C10556 * C1215;
    const double C13823 = C10555 * C1215;
    const double C33869 = C32934 * C1215;
    const double C40687 = C32933 * C1215;
    const double C2648 = C50214 * C1561;
    const double C5297 = C5095 * C1561;
    const double C10772 = C50278 * C1561;
    const double C14494 = C50357 * C1561;
    const double C33150 = C50278 * C1561;
    const double C5479 = C5095 * C1845;
    const double C5470 = C5096 * C1845;
    const double C10950 = C50278 * C1845;
    const double C33328 = C50278 * C1845;
    const double C44143 = C43781 * C1845;
    const double C344 = C117 * C295;
    const double C10771 = C10555 * C295;
    const double C33149 = C32933 * C295;
    const double C509 = C117 * C460;
    const double C5106 = C5099 * C460;
    const double C5467 = C5098 * C460;
    const double C10949 = C10555 * C460;
    const double C10934 = C10556 * C460;
    const double C33327 = C32933 * C460;
    const double C33312 = C32934 * C460;
    const double C910 = C117 * C889;
    const double C5285 = C5098 * C889;
    const double C10756 = C10556 * C889;
    const double C11485 = C10555 * C889;
    const double C33134 = C32934 * C889;
    const double C33863 = C32933 * C889;
    const double C2469 = C117 * C1095;
    const double C13609 = C10555 * C1095;
    const double C35903 = C32933 * C1095;
    const double C2652 = C117 * C1209;
    const double C5287 = C5099 * C1209;
    const double C6006 = C5098 * C1209;
    const double C11487 = C10556 * C1209;
    const double C13819 = C10555 * C1209;
    const double C33865 = C32934 * C1209;
    const double C40683 = C32933 * C1209;
    const double C2647 = C117 * C1556;
    const double C5298 = C5098 * C1556;
    const double C10773 = C10556 * C1556;
    const double C14495 = C10555 * C1556;
    const double C33151 = C32934 * C1556;
    const double C36567 = C32933 * C1556;
    const double C5480 = C5098 * C1840;
    const double C5469 = C5099 * C1840;
    const double C10951 = C10556 * C1840;
    const double C33329 = C32934 * C1840;
    const double C160 = C117 * C123;
    const double C10583 = C10555 * C123;
    const double C32961 = C32933 * C123;
    const double C339 = C117 * C293;
    const double C11115 = C10555 * C293;
    const double C33493 = C32933 * C293;
    const double C348 = C117 * C296;
    const double C10779 = C10555 * C296;
    const double C33157 = C32933 * C296;
    const double C504 = C117 * C458;
    const double C5128 = C5098 * C458;
    const double C10576 = C10556 * C458;
    const double C11278 = C10555 * C458;
    const double C32954 = C32934 * C458;
    const double C33656 = C32933 * C458;
    const double C513 = C117 * C461;
    const double C5117 = C5099 * C461;
    const double C5796 = C5098 * C461;
    const double C10957 = C10555 * C461;
    const double C10942 = C10556 * C461;
    const double C33335 = C32933 * C461;
    const double C33320 = C32934 * C461;
    const double C914 = C117 * C890;
    const double C5638 = C5098 * C890;
    const double C10764 = C10556 * C890;
    const double C11493 = C10555 * C890;
    const double C33142 = C32934 * C890;
    const double C33871 = C32933 * C890;
    const double C3597 = C50214 * C1212;
    const double C14481 = C50278 * C1212;
    const double C15032 = C50357 * C1212;
    const double C21576 = C5096 * C1212;
    const double C22231 = C5095 * C1212;
    const double C22646 = C5094 * C1212;
    const double C36553 = C50278 * C1212;
    const double C46684 = C43781 * C1212;
    const double C3171 = C117 * C1560;
    const double C13594 = C10556 * C1560;
    const double C15691 = C10555 * C1560;
    const double C21592 = C5098 * C1560;
    const double C35889 = C32934 * C1560;
    const double C36562 = C32933 * C1560;
    const double C15034 = C50278 * C4498;
    const double C22233 = C5096 * C4498;
    const double C22648 = C5095 * C4498;
    const double C36980 = C50278 * C4498;
    const double C47341 = C43781 * C4498;
    const double C3598 = C117 * C1208;
    const double C14480 = C10556 * C1208;
    const double C15033 = C10555 * C1208;
    const double C21577 = C5099 * C1208;
    const double C22230 = C5098 * C1208;
    const double C36552 = C32934 * C1208;
    const double C36979 = C32933 * C1208;
    const double C15035 = C10556 * C4494;
    const double C22232 = C5099 * C4494;
    const double C22649 = C5098 * C4494;
    const double C36981 = C32934 * C4494;
    const double C2440 =
        (3 * (C49360 + C49272 * C49780 + C49748 * ae) +
         C49272 * (2 * C49780 +
                   C49272 * (C49357 + C49272 * (C49272 * C49365 + C49396 * ae) +
                             C49450 * ae) +
                   C49781 * ae) +
         (2 * C49748 + C49272 * C49781) * ae) /
        C49148;
    const double C2638 =
        (C49360 + C49272 * C49780 + C49748 * ae +
         (C49357 + C49272 * (C49272 * C49365 + C49396 * ae) + C49450 * ae) *
             C49538) /
        C49148;
    const double C3156 =
        (C49273 * (2 * C49780 +
                   C49272 * (C49357 + C49272 * (C49272 * C49365 + C49396 * ae) +
                             C49450 * ae) +
                   C49781 * ae)) /
        C49148;
    const double C4499 =
        (2 * C49273 * C49780 + C49273 * (C49780 + C49815 * C49538)) / C49148;
    const double C6407 =
        (3 * (C49780 + C49815 * C49538) +
         C49273 *
             (2 * C49273 * C49815 +
              C49273 * (C49815 + (C49272 * C49372 + C49398 * ae) * C49538))) /
        C49148;
    const double C3440 = C117 * C2436;
    const double C31295 = C10555 * C2436;
    const double C36823 = C32933 * C2436;
    const double C3602 = C117 * C2634;
    const double C15689 = C10556 * C2634;
    const double C21588 = C5099 * C2634;
    const double C23147 = C5098 * C2634;
    const double C31451 = C10555 * C2634;
    const double C36560 = C32934 * C2634;
    const double C36987 = C32933 * C2634;
    const double C4102 = C117 * C3152;
    const double C14833 = C10556 * C3152;
    const double C22487 = C5098 * C3152;
    const double C31949 = C10555 * C3152;
    const double C35892 = C32934 * C3152;
    const double C37485 = C32933 * C3152;
    const double C5455 =
        (3 * (C49321 + C49273 * C49853 + C49851 * be) +
         C49273 *
             (2 * C49853 + C49273 * (C49316 + C49273 * C49527 + C49556 * be) +
              C49854 * be) +
         (2 * C49851 + C49273 * C49854) * be) /
        C49148;
    const double C628 = C337 - C338;
    const double C2806 = C338 - C337;
    const double C3438 = C2463 - C2464;
    const double C19695 = C2464 - C2463;
    const double C172 = C157 - C156;
    const double C170 = C156 - C157;
    const double C627 = C335 - C336;
    const double C2805 = C336 - C335;
    const double C745 = C500 - C501;
    const double C3437 = C2461 - C2462;
    const double C19694 = C2462 - C2461;
    const double C4099 = C3169 - C3170;
    const double C49337 = C49332 + C49336;
    const double C2441 = (3 * (C49323 + C49330 * C49431) +
                          C49272 * (2 * C49436 + C49272 * C49441)) /
                         C49148;
    const double C49490 = C49300 + C49486;
    const double C49480 = C49474 + C49478;
    const double C49376 = C49371 + C49375;
    const double C49519 = C49300 + C49515;
    const double C5458 = (3 * (C49362 + C49369 * C49538) +
                          C49273 * (2 * C49547 + C49273 * C49549)) /
                         C49148;
    const double C49570 = C49568 + C49569;
    const double C49418 = C49414 + C49417;
    const double C2645 =
        (C49298 + be * C49273 * C49374 +
         C49273 * (be * C49374 + C49273 * C49307) +
         ae * (C49443 + C49273 * (C49273 * C49272 * C49346 + C49454 * be) +
               C49273 * C49454 * be) +
         C49272 * (ae * (C49335 + C49273 * (C49273 * C49346 + C49416 * be) +
                         C49273 * C49416 * be) +
                   C49272 * (C49307 + be * C49273 * C49385 +
                             C49273 * (be * C49385 +
                                       C49273 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C49795 = C49410 + C49793;
    const double C49870 = C49410 + C49868;
    const double C49888 = C49452 + C49886;
    const double C49826 = C49272 * C49521;
    const double C49903 = C49273 * C49565;
    const double C49943 = C49273 * C49645;
    const double C49618 = C49604 + C49615;
    const double C49937 = C49505 + C49935;
    const double C49653 = C49649 + C49650;
    const double C50366 = C50327 / C49150;
    const double C50368 = C50331 / C49148;
    const double C2285 = -C50367;
    const double C50369 = C50334 / C50087;
    const double C50371 = C50338 / C50075;
    const double C288 = -C50370;
    const double C50373 = C50346 / C50087;
    const double C50374 = C50348 / C50075;
    const double C1018 = -C50372;
    const double C50376 = C50350 / C50087;
    const double C50377 = C50352 / C50075;
    const double C1669 = -C50375;
    const double C19594 =
        (C49204 / C49192 - (0 * be) / C49148) / C49192 + (0 * ae) / C49148;
    const double C24140 = C49204 / C49192 - (0 * be) / C49148;
    const double C49203 = C49200 / C49148;
    const double C50392 = C50353 - C50379;
    const double C50393 = C50360 - C50380;
    const double C38442 =
        (C49246 / C49192 - (0 * be) / C49148) / C49192 + (0 * ae) / C49148;
    const double C43784 = C49246 / C49192 - (0 * be) / C49148;
    const double C49245 = C49242 / C49148;
    const double C10593 = C10572 - C10573;
    const double C10591 = C10568 - C10569;
    const double C30409 = C13591 - C13590;
    const double C32971 = C32950 - C32951;
    const double C32969 = C32946 - C32947;
    const double C35911 = C35884 - C35885;
    const double C50394 = C50355 - C50382;
    const double C10596 = C10578 - C10579;
    const double C10594 = C10574 - C10575;
    const double C10592 = C10570 - C10571;
    const double C10590 = C10566 - C10567;
    const double C11112 = C10766 - C10767;
    const double C14022 = C10767 - C10766;
    const double C11110 = C10762 - C10763;
    const double C14020 = C10763 - C10762;
    const double C13598 = C10758 - C10759;
    const double C13586 = C10759 - C10758;
    const double C13596 = C10754 - C10755;
    const double C13584 = C10755 - C10754;
    const double C11275 = C10944 - C10945;
    const double C11273 = C10940 - C10941;
    const double C30410 = C13593 - C13592;
    const double C30408 = C13589 - C13588;
    const double C31292 = C14835 - C14834;
    const double C31290 = C14831 - C14830;
    const double C31944 = C15687 - C15686;
    const double C5132 = C5097 * C133;
    const double C5126 = C5097 * C122;
    const double C5119 = C5097 * C131;
    const double C5113 = C5097 * C121;
    const double C5108 = C5097 * C129;
    const double C5102 = C5097 * C120;
    const double C5302 = C5097 * C311;
    const double C5296 = C5097 * C295;
    const double C5289 = C5097 * C303;
    const double C5283 = C5097 * C291;
    const double C5484 = C5097 * C476;
    const double C5478 = C5097 * C460;
    const double C5471 = C5097 * C468;
    const double C5465 = C5097 * C456;
    const double C5642 = C5097 * C305;
    const double C5636 = C5097 * C292;
    const double C5800 = C5097 * C470;
    const double C5794 = C5097 * C457;
    const double C6010 = C5097 * C896;
    const double C6004 = C5097 * C889;
    const double C21590 = C5097 * C309;
    const double C21584 = C5097 * C294;
    const double C21579 = C5097 * C301;
    const double C21573 = C5097 * C290;
    const double C22234 = C5097 * C894;
    const double C22228 = C5097 * C888;
    const double C22491 = C5097 * C1099;
    const double C22485 = C5097 * C1094;
    const double C22653 = C5097 * C1213;
    const double C22647 = C5097 * C1208;
    const double C23151 = C5097 * C1560;
    const double C23145 = C5097 * C1555;
    const double C50395 = C50364 - C50383;
    const double C32964 = C32931 * C144;
    const double C32957 = C32931 * C143;
    const double C32953 = C32931 * C132;
    const double C32948 = C32931 * C142;
    const double C32944 = C32931 * C130;
    const double C32940 = C32931 * C141;
    const double C32936 = C32931 * C128;
    const double C33152 = C32931 * C325;
    const double C33148 = C32931 * C310;
    const double C33145 = C32931 * C322;
    const double C33141 = C32931 * C304;
    const double C33137 = C32931 * C321;
    const double C33133 = C32931 * C302;
    const double C33330 = C32931 * C490;
    const double C33326 = C32931 * C475;
    const double C33323 = C32931 * C487;
    const double C33319 = C32931 * C469;
    const double C33315 = C32931 * C486;
    const double C33311 = C32931 * C467;
    const double C33866 = C32931 * C904;
    const double C33862 = C32931 * C895;
    const double C35906 = C32931 * C1107;
    const double C35902 = C32931 * C1100;
    const double C35895 = C32931 * C1106;
    const double C35891 = C32931 * C1098;
    const double C35886 = C32931 * C324;
    const double C35882 = C32931 * C308;
    const double C35878 = C32931 * C320;
    const double C35874 = C32931 * C300;
    const double C36570 = C32931 * C1568;
    const double C36566 = C32931 * C1561;
    const double C36563 = C32931 * C1567;
    const double C36559 = C32931 * C1559;
    const double C36555 = C32931 * C903;
    const double C36551 = C32931 * C893;
    const double C36990 = C32931 * C2643;
    const double C36982 = C32931 * C1220;
    const double C36978 = C32931 * C1212;
    const double C40686 = C32931 * C1221;
    const double C166 = C50214 * C145;
    const double C342 = C50214 * C323;
    const double C11118 = C50357 * C323;
    const double C33496 = C32931 * C323;
    const double C507 = C50214 * C488;
    const double C5133 = C5095 * C488;
    const double C10581 = C50278 * C488;
    const double C11281 = C50357 * C488;
    const double C32959 = C50278 * C488;
    const double C33659 = C32931 * C488;
    const double C349 = C50214 * C326;
    const double C10782 = C50357 * C326;
    const double C33160 = C32931 * C326;
    const double C161 = C50214 * C134;
    const double C10582 = C50357 * C134;
    const double C32960 = C32931 * C134;
    const double C340 = C50214 * C306;
    const double C11114 = C50357 * C306;
    const double C33492 = C32931 * C306;
    const double C347 = C50214 * C312;
    const double C10778 = C50357 * C312;
    const double C33156 = C32931 * C312;
    const double C505 = C50214 * C471;
    const double C5127 = C5095 * C471;
    const double C10577 = C50278 * C471;
    const double C11277 = C50357 * C471;
    const double C32955 = C50278 * C471;
    const double C33655 = C32931 * C471;
    const double C512 = C50214 * C477;
    const double C5118 = C5096 * C477;
    const double C5795 = C5095 * C477;
    const double C10956 = C50357 * C477;
    const double C10943 = C50278 * C477;
    const double C33334 = C32931 * C477;
    const double C33321 = C50278 * C477;
    const double C43803 = C43781 * C477;
    const double C913 = C50214 * C897;
    const double C5637 = C5095 * C897;
    const double C10765 = C50278 * C897;
    const double C11492 = C50357 * C897;
    const double C33143 = C50278 * C897;
    const double C33870 = C32931 * C897;
    const double C2479 = C50214 * C1102;
    const double C2446 =
        (3 * (C49401 + ae * C49436 + C49272 * C49440) +
         ae * (2 * C49436 + C49272 * C49441) +
         C49272 *
             (2 * C49440 + ae * C49441 +
              C49272 * (C49300 + ae * C49272 * C49341 +
                        C49272 * (ae * C49341 + C49272 * C49280 * C49305)))) /
        C49150;
    const double C2651 = C50214 * C1214;
    const double C5288 = C5096 * C1214;
    const double C6005 = C5095 * C1214;
    const double C11486 = C50278 * C1214;
    const double C13818 = C50357 * C1214;
    const double C33864 = C50278 * C1214;
    const double C40682 = C32931 * C1214;
    const double C43973 = C43781 * C1214;
    const double C3441 = C50214 * C2445;
    const double C31298 = C50357 * C2445;
    const double C36826 = C32931 * C2445;
    const double C4103 = C50214 * C3161;
    const double C14836 = C50278 * C3161;
    const double C22492 = C5095 * C3161;
    const double C31952 = C50357 * C3161;
    const double C35897 = C50278 * C3161;
    const double C37488 = C32931 * C3161;
    const double C3439 = C50214 * C2439;
    const double C31294 = C50357 * C2439;
    const double C36822 = C32931 * C2439;
    const double C3601 = C50214 * C2637;
    const double C15688 = C50278 * C2637;
    const double C21589 = C5096 * C2637;
    const double C23146 = C5095 * C2637;
    const double C31450 = C50357 * C2637;
    const double C36561 = C50278 * C2637;
    const double C36986 = C32931 * C2637;
    const double C46697 = C43781 * C2637;
    const double C4101 = C50214 * C3155;
    const double C14832 = C50278 * C3155;
    const double C22486 = C5095 * C3155;
    const double C31948 = C50357 * C3155;
    const double C35893 = C50278 * C3155;
    const double C37484 = C32931 * C3155;
    const double C49583 = C49576 + C49577;
    const double C49479 = C49476 + C49477;
    const double C49895 = C49316 + C49891;
    const double C514 = C50214 * C491;
    const double C5124 = C5096 * C491;
    const double C5801 = C5095 * C491;
    const double C10960 = C50357 * C491;
    const double C10947 = C50278 * C491;
    const double C33338 = C32931 * C491;
    const double C33325 = C50278 * C491;
    const double C43809 = C43781 * C491;
    const double C915 = C50214 * C905;
    const double C5643 = C5095 * C905;
    const double C10769 = C50278 * C905;
    const double C11496 = C50357 * C905;
    const double C33147 = C50278 * C905;
    const double C33874 = C32931 * C905;
    const double C162 = C117 * C135;
    const double C10587 = C10555 * C135;
    const double C32965 = C32933 * C135;
    const double C341 = C117 * C307;
    const double C11119 = C10555 * C307;
    const double C33497 = C32933 * C307;
    const double C350 = C117 * C313;
    const double C10783 = C10555 * C313;
    const double C33161 = C32933 * C313;
    const double C506 = C117 * C472;
    const double C5134 = C5098 * C472;
    const double C10580 = C10556 * C472;
    const double C11282 = C10555 * C472;
    const double C32958 = C32934 * C472;
    const double C33660 = C32933 * C472;
    const double C515 = C117 * C478;
    const double C5123 = C5099 * C478;
    const double C5802 = C5098 * C478;
    const double C10961 = C10555 * C478;
    const double C10946 = C10556 * C478;
    const double C33339 = C32933 * C478;
    const double C33324 = C32934 * C478;
    const double C916 = C117 * C898;
    const double C5644 = C5098 * C898;
    const double C10768 = C10556 * C898;
    const double C11497 = C10555 * C898;
    const double C33146 = C32934 * C898;
    const double C33875 = C32933 * C898;
    const double C5804 = C5099 * C1848;
    const double C10963 = C10556 * C1848;
    const double C33341 = C32934 * C1848;
    const double C3162 =
        (2 * (ae * (C49273 * C49330 + C49407 * be) + C49272 * C49462) +
         ae * (C49273 * C49441 + (C49407 + C49412 * C49431) * be) +
         C49272 *
             (C49462 + ae * (C49273 * C49272 * C49341 + C49452 * be) +
              C49272 * (ae * (C49273 * C49341 + C49412 * be) +
                        C49272 * (be * C49380 + C49273 * C49280 * C49305)))) /
        C49150;
    const double C2640 =
        (C49362 + C49272 * C49787 + C49751 * ae +
         (C49369 + C49272 * (C49272 * C49380 + C49412 * ae) + C49452 * ae) *
             C49538) /
        C49148;
    const double C3180 = C2650 - C2649;
    const double C3176 = C2649 - C2650;
    const double C13607 = C10776 - C10777;
    const double C13603 = C10777 - C10776;
    const double C35901 = C33155 - C33154;
    const double C40481 = C33154 - C33155;
    const double C49529 = C49528 + C49526;
    const double C49638 = C49635 + C49636;
    const double C49508 = C49506 + C49507;
    const double C49818 = C49357 + C49817;
    const double C49697 = C49695 + C49696;
    const double C1216 =
        (C49272 * C49328 + C49273 * (C49273 * C49443 + C49754 * be) +
         C49273 * C49754 * be) /
        C49148;
    const double C1564 =
        (C49273 *
         (C49367 + C49272 * (C49272 * C49374 + C49410 * ae) + C49754 * ae)) /
        C49148;
    const double C5999 =
        (2 * (C49273 * C49443 + C49754 * be) +
         C49273 * (C49443 + C49273 * (C49273 * C49272 * C49346 + C49454 * be) +
                   C49273 * C49454 * be) +
         (C49754 + C49454 * C49538) * be) /
        C49148;
    const double C1210 = C49272 * C49692 + C49754 * C49538;
    const double C5998 =
        2 * C49273 * C49754 + C49273 * (C49754 + C49454 * C49538);
    const double C49794 = C49791 + C49792;
    const double C49869 = C49865 + C49866;
    const double C2482 = C117 * C1103;
    const double C5646 = C5099 * C1217;
    const double C8197 = C117 * C1217;
    const double C11499 = C10556 * C1217;
    const double C33877 = C32934 * C1217;
    const double C2955 = C50214 * C1563;
    const double C10780 = C50278 * C1563;
    const double C33158 = C50278 * C1563;
    const double C5797 = C5096 * C1847;
    const double C10958 = C50278 * C1847;
    const double C33336 = C50278 * C1847;
    const double C44470 = C43781 * C1847;
    const double C2480 = C117 * C1096;
    const double C2956 = C117 * C1557;
    const double C10781 = C10556 * C1557;
    const double C33159 = C32934 * C1557;
    const double C5798 = C5099 * C1841;
    const double C10959 = C10556 * C1841;
    const double C33337 = C32934 * C1841;
    const double C2657 = C50214 * C2644;
    const double C5305 = C5096 * C2644;
    const double C14500 = C50278 * C2644;
    const double C36572 = C50278 * C2644;
    const double C43990 = C43781 * C2644;
    const double C49887 = C49883 + C49884;
    const double C6007 = C5096 * C4502;
    const double C13820 = C50278 * C4502;
    const double C40684 = C50278 * C4502;
    const double C44676 = C43781 * C4502;
    const double C6008 = C5099 * C4496;
    const double C13821 = C10556 * C4496;
    const double C40685 = C32934 * C4496;
    const double C49535 = ae * C49534;
    const double C49900 = C49273 * C49534;
    const double C2442 =
        (3 * (C49362 + C49272 * C49787 + C49751 * ae) +
         C49272 * (2 * C49787 +
                   C49272 * (C49369 + C49272 * (C49272 * C49380 + C49412 * ae) +
                             C49452 * ae) +
                   C49788 * ae) +
         (2 * C49751 + C49272 * C49788) * ae) /
        C49148;
    const double C2639 =
        (C49323 + C49330 * C49431 + C49273 * (C49273 * C49441 + C49788 * be) +
         C49273 * C49788 * be) /
        C49148;
    const double C3157 = (C49273 * (2 * C49436 + C49272 * C49441) +
                          (2 * C49751 + C49272 * C49788) * be) /
                         C49148;
    const double C3158 =
        (C49273 * (2 * C49787 +
                   C49272 * (C49369 + C49272 * (C49272 * C49380 + C49412 * ae) +
                             C49452 * ae) +
                   C49788 * ae)) /
        C49148;
    const double C2437 = 3 * (C49688 + C49407 * C49431) +
                         C49272 * (2 * C49751 + C49272 * C49788);
    const double C2635 = C49688 + C49407 * C49431 + C49788 * C49538;
    const double C3153 = C49273 * (2 * C49751 + C49272 * C49788);
    const double C4497 =
        2 * C49273 * C49788 + C49273 * (C49788 + C49521 * C49538);
    const double C49829 = C49272 * C49827;
    const double C4503 =
        (2 * C49273 * C49787 + C49273 * (C49787 + C49827 * C49538)) / C49148;
    const double C6409 =
        (3 * (C49787 + C49827 * C49538) +
         C49273 *
             (2 * C49273 * C49827 +
              C49273 * (C49827 + (C49272 * C49514 + C49513 * ae) * C49538))) /
        C49148;
    const double C5457 =
        (3 * (C49323 + C49273 * C49861 + C49859 * be) +
         C49273 *
             (2 * C49861 + C49273 * (C49330 + C49273 * C49534 + C49562 * be) +
              C49862 * be) +
         (2 * C49859 + C49273 * C49862) * be) /
        C49148;
    const double C5453 = 3 * (C49688 + C49407 * C49538) +
                         C49273 * (2 * C49859 + C49273 * C49862);
    const double C49630 = ae * C49628;
    const double C49940 = C49273 * C49628;
    const double C6406 =
        (3 * (C49428 + C49273 * C49879 + C49877 * be) +
         C49273 *
             (2 * C49879 + C49273 * (C49468 + C49273 * C49628 + C49641 * be) +
              C49880 * be) +
         (2 * C49877 + C49273 * C49880) * be) /
        C49148;
    const double C6404 = 3 * (C49748 + C49450 * C49538) +
                         C49273 * (2 * C49877 + C49273 * C49880);
    const double C49816 = C49813 + C49814;
    const double C49936 = C49932 + C49933;
    const double C23148 = C5096 * C4500;
    const double C31452 = C50278 * C4500;
    const double C36988 = C50278 * C4500;
    const double C48252 = C43781 * C4500;
    const double C23149 = C5099 * C4495;
    const double C31453 = C10556 * C4495;
    const double C36989 = C32934 * C4495;
    const double C49896 = C49893 + C49894;
    const double C49616 = C49326 + C49612;
    const double C49920 = C49365 + C49919;
    const double C49949 = C49815 + C49948;
    const double C49309 = C49303 + C49308;
    const double C49447 = C49444 + C49445;
    const double C49466 = C49464 + C49465;
    const double C2481 = C50214 * C1108;
    const double C5645 = C5096 * C1222;
    const double C8196 = C50214 * C1222;
    const double C11498 = C50278 * C1222;
    const double C33876 = C50278 * C1222;
    const double C44318 = C43781 * C1222;
    const double C2957 = C50214 * C1569;
    const double C10784 = C50278 * C1569;
    const double C33162 = C50278 * C1569;
    const double C5803 = C5096 * C1853;
    const double C10962 = C50278 * C1853;
    const double C33340 = C50278 * C1853;
    const double C44476 = C43781 * C1853;
    const double C49493 = C49272 * C49491;
    const double C49520 = C49273 * C49516;
    const double C49533 = C49272 * C49516;
    const double C49591 = C49588 + C49589;
    const double C49617 = C49613 + C49614;
    const double C49629 = C49626 + C49627;
    const double C49348 = C49343 + C49347;
    const double C49448 = C49335 + C49446;
    const double C49494 = C49272 * C49492;
    const double C4504 =
        (2 * (C49273 * C49441 + C49788 * be) +
         C49273 * (C49441 + C49273 * (C49273 * C49492 + C49521 * be) +
                   C49273 * C49521 * be) +
         (C49788 + C49521 * C49538) * be) /
        C49148;
    const double C49592 = C49586 + C49590;
    const double C49387 = C49382 + C49386;
    const double C49553 = C49374 + C49552;
    const double C49573 = C49273 * C49566;
    const double C49654 = C49651 + C49652;
    const double C176 = C168 * C118;
    const double C7888 = C168 * C7885;
    const double C16963 = C168 * C16960;
    const double C177 = C169 * C50199;
    const double C7889 = C169 * C50356;
    const double C16964 = C169 * C16955;
    const double C181 = C173 * C50199;
    const double C7893 = C173 * C50356;
    const double C16968 = C173 * C16955;
    const double C179 = C171 * C50199;
    const double C754 = C746 * C50199;
    const double C8500 = C746 * C50356;
    const double C17569 = C746 * C16955;
    const double C2468 = C346 - C345;
    const double C2460 = C345 - C346;
    const double C13606 = C10774 - C10775;
    const double C13602 = C10775 - C10774;
    const double C3178 = C911 - C912;
    const double C3174 = C912 - C911;
    const double C13599 = C10760 - C10761;
    const double C13587 = C10761 - C10760;
    const double C14492 = C11488 - C11489;
    const double C14488 = C11489 - C11488;
    const double C40477 = C33138 - C33139;
    const double C40473 = C33139 - C33138;
    const double C2488 = C2472 - C2471;
    const double C2486 = C2471 - C2472;
    const double C14493 = C11490 - C11491;
    const double C14489 = C11491 - C11490;
    const double C41349 = C33868 - C33869;
    const double C41345 = C33869 - C33868;
    const double C2467 = C344 - C343;
    const double C2459 = C343 - C344;
    const double C13604 = C10770 - C10771;
    const double C13600 = C10771 - C10770;
    const double C3177 = C909 - C910;
    const double C3173 = C910 - C909;
    const double C13597 = C10756 - C10757;
    const double C13585 = C10757 - C10756;
    const double C14490 = C11484 - C11485;
    const double C14486 = C11485 - C11484;
    const double C40475 = C33134 - C33135;
    const double C40471 = C33135 - C33134;
    const double C2487 = C2470 - C2469;
    const double C2485 = C2469 - C2470;
    const double C3179 = C2648 - C2647;
    const double C3175 = C2647 - C2648;
    const double C13605 = C10772 - C10773;
    const double C13601 = C10773 - C10772;
    const double C35899 = C33151 - C33150;
    const double C40479 = C33150 - C33151;
    const double C4100 = C3171 - C3172;
    const double C30411 = C13595 - C13594;
    const double C31946 = C15691 - C15690;
    const double C35913 = C35888 - C35889;
    const double C3442 = C117 * C2440;
    const double C31299 = C10555 * C2440;
    const double C36827 = C32933 * C2440;
    const double C3604 = C117 * C2638;
    const double C15693 = C10556 * C2638;
    const double C21594 = C5099 * C2638;
    const double C23153 = C5098 * C2638;
    const double C31455 = C10555 * C2638;
    const double C36564 = C32934 * C2638;
    const double C36991 = C32933 * C2638;
    const double C4104 = C117 * C3156;
    const double C14837 = C10556 * C3156;
    const double C22493 = C5098 * C3156;
    const double C31953 = C10555 * C3156;
    const double C35896 = C32934 * C3156;
    const double C37489 = C32933 * C3156;
    const double C15039 = C10556 * C4499;
    const double C22238 = C5099 * C4499;
    const double C22655 = C5098 * C4499;
    const double C36985 = C32934 * C4499;
    const double C22657 = C5099 * C6407;
    const double C636 = C628 * C50199;
    const double C8345 = C628 * C50356;
    const double C17416 = C628 * C16955;
    const double C7891 = C2806 * C50250;
    const double C16966 = C2806 * C50250;
    const double C180 = C172 * C118;
    const double C7892 = C172 * C7885;
    const double C16967 = C172 * C16960;
    const double C178 = C170 * C118;
    const double C635 = C627 * C118;
    const double C8344 = C627 * C7885;
    const double C17415 = C627 * C16960;
    const double C7890 = C2805 * C7886;
    const double C16965 = C2805 * C16961;
    const double C753 = C745 * C118;
    const double C8499 = C745 * C7885;
    const double C17568 = C745 * C16960;
    const double C136 = (4 * (2 * C49323 + C49280 * C49328) +
                         C49280 * (3 * C49328 + C49280 * C49337)) /
                        C49148;
    const double C314 =
        (2 * C49323 + C49280 * C49328 + C49337 * C49431) / C49148;
    const double C316 = (C49272 * (3 * C49328 + C49280 * C49337)) / C49148;
    const double C2473 = C50214 * C2441;
    const double C3430 = (4 * (2 * C49428 + C49272 * C49434) +
                          C49272 * (3 * C49434 + C49272 * C49480)) /
                         C49148;
    const double C137 = (4 * (2 * C49362 + C49280 * C49367) +
                         C49280 * (3 * C49367 + C49280 * C49376)) /
                        C49148;
    const double C480 =
        (2 * C49362 + C49280 * C49367 + C49376 * C49538) / C49148;
    const double C482 = (C49273 * (3 * C49367 + C49280 * C49376)) / C49148;
    const double C5488 = C5099 * C5458;
    const double C7291 = (4 * (2 * C49543 + C49273 * C49545) +
                          C49273 * (3 * C49545 + C49273 * C49570)) /
                         C49148;
    const double C49703 = C49280 * C49418;
    const double C49757 = C49272 * C49418;
    const double C2438 = 3 * (C49692 + C49410 * C49431) +
                         C49272 * (2 * C49754 + C49272 * C49795);
    const double C2636 = C49692 + C49410 * C49431 + C49795 * C49538;
    const double C3154 = C49273 * (2 * C49754 + C49272 * C49795);
    const double C5454 = 3 * (C49692 + C49410 * C49538) +
                         C49273 * (2 * C49867 + C49273 * C49870);
    const double C6405 = 3 * (C49751 + C49452 * C49538) +
                         C49273 * (2 * C49885 + C49273 * C49888);
    const double C49828 = C49825 + C49826;
    const double C49905 = C49902 + C49903;
    const double C49945 = C49942 + C49943;
    const double C49916 = C49272 * C49618;
    const double C22641 = 3 * (C49781 + C49505 * C49538) +
                          C49273 * (2 * C49934 + C49273 * C49937);
    const double C49955 = C49273 * C49653;
    const double C50384 = C50326 - C50366;
    const double C50385 = C50330 - C50368;
    const double C50386 = C50333 - C50369;
    const double C50387 = C50337 - C50371;
    const double C50388 = C50340 - C50373;
    const double C50389 = C50347 - C50374;
    const double C50390 = C50342 - C50376;
    const double C50391 = C50351 - C50377;
    const double C49206 = C50199 - C49203;
    const double C19586 =
        (C50392 * C50245) / C49148 + (C50356 - C50378) / C49192;
    const double C19587 =
        (C50393 * C50245) / C49148 + (2 * C50250 + C50392) / C49192;
    const double C19588 = (C50245 * C50250) / C49152 + C50393 / C49192;
    const double C43808 = C43784 * C478;
    const double C43802 = C43784 * C461;
    const double C43797 = C43784 * C476;
    const double C43791 = C43784 * C460;
    const double C43978 = C43784 * C1215;
    const double C43972 = C43784 * C1209;
    const double C44161 = C43784 * C5458;
    const double C44148 = C43784 * C1846;
    const double C44142 = C43784 * C1840;
    const double C44319 = C43784 * C1217;
    const double C44477 = C43784 * C1848;
    const double C44471 = C43784 * C1841;
    const double C44677 = C43784 * C4496;
    const double C46702 = C43784 * C2638;
    const double C46696 = C43784 * C2634;
    const double C46691 = C43784 * C1213;
    const double C46685 = C43784 * C1208;
    const double C47346 = C43784 * C4499;
    const double C47340 = C43784 * C4494;
    const double C47761 = C43784 * C6407;
    const double C48253 = C43784 * C4495;
    const double C49248 = C50214 - C49245;
    const double C43816 = C50394 * C143;
    const double C43810 = C50394 * C132;
    const double C43805 = C50394 * C142;
    const double C43799 = C50394 * C130;
    const double C43792 = C50394 * C141;
    const double C43786 = C50394 * C128;
    const double C43986 = C50394 * C325;
    const double C43980 = C50394 * C310;
    const double C43975 = C50394 * C321;
    const double C43969 = C50394 * C302;
    const double C44156 = C50394 * C490;
    const double C44150 = C50394 * C475;
    const double C44145 = C50394 * C486;
    const double C44139 = C50394 * C467;
    const double C44314 = C50394 * C322;
    const double C44308 = C50394 * C304;
    const double C44472 = C50394 * C487;
    const double C44466 = C50394 * C469;
    const double C44678 = C50394 * C904;
    const double C44672 = C50394 * C895;
    const double C46699 = C50394 * C324;
    const double C46693 = C50394 * C308;
    const double C46686 = C50394 * C320;
    const double C46680 = C50394 * C300;
    const double C47343 = C50394 * C903;
    const double C47337 = C50394 * C893;
    const double C47598 = C50394 * C1106;
    const double C47592 = C50394 * C1098;
    const double C47756 = C50394 * C1220;
    const double C47750 = C50394 * C1212;
    const double C48254 = C50394 * C1567;
    const double C48248 = C50394 * C1559;
    const double C38435 =
        (C50394 * C50273) / C49148 + (C50357 - C50381) / C49192;
    const double C10599 = C10592 + C10593;
    const double C10598 = C10590 + C10591;
    const double C30412 = C30408 + C30409;
    const double C43818 = C50395 * C488;
    const double C43812 = C50395 * C471;
    const double C43807 = C50395 * C487;
    const double C43801 = C50395 * C469;
    const double C43794 = C50395 * C486;
    const double C43788 = C50395 * C467;
    const double C43988 = C50395 * C1568;
    const double C43982 = C50395 * C1561;
    const double C43977 = C50395 * C904;
    const double C43971 = C50395 * C895;
    const double C44158 = C50395 * C1852;
    const double C44152 = C50395 * C1845;
    const double C44147 = C50395 * C490;
    const double C44141 = C50395 * C475;
    const double C44316 = C50395 * C905;
    const double C44310 = C50395 * C897;
    const double C44474 = C50395 * C491;
    const double C44468 = C50395 * C477;
    const double C44680 = C50395 * C1221;
    const double C44674 = C50395 * C1214;
    const double C46701 = C50395 * C1567;
    const double C46695 = C50395 * C1559;
    const double C46688 = C50395 * C903;
    const double C46682 = C50395 * C893;
    const double C47345 = C50395 * C1220;
    const double C47339 = C50395 * C1212;
    const double C47600 = C50395 * C3161;
    const double C47594 = C50395 * C3155;
    const double C47752 = C50395 * C4498;
    const double C48256 = C50395 * C2643;
    const double C48250 = C50395 * C2637;
    const double C38436 =
        (C50395 * C50273) / C49148 + (2 * C50278 + C50394) / C49192;
    const double C38437 = (C50273 * C50278) / C49152 + C50395 / C49192;
    const double C32974 = C32956 - C32957;
    const double C32972 = C32952 - C32953;
    const double C32970 = C32948 - C32949;
    const double C32968 = C32944 - C32945;
    const double C35900 = C33153 - C33152;
    const double C40480 = C33152 - C33153;
    const double C35898 = C33149 - C33148;
    const double C40478 = C33148 - C33149;
    const double C33490 = C33144 - C33145;
    const double C40886 = C33145 - C33144;
    const double C33488 = C33140 - C33141;
    const double C40884 = C33141 - C33140;
    const double C40476 = C33136 - C33137;
    const double C40472 = C33137 - C33136;
    const double C40474 = C33132 - C33133;
    const double C40470 = C33133 - C33132;
    const double C33653 = C33322 - C33323;
    const double C33651 = C33318 - C33319;
    const double C41348 = C33866 - C33867;
    const double C41344 = C33867 - C33866;
    const double C41346 = C33862 - C33863;
    const double C41342 = C33863 - C33862;
    const double C36820 = C35894 - C35895;
    const double C36818 = C35890 - C35891;
    const double C35912 = C35886 - C35887;
    const double C35910 = C35882 - C35883;
    const double C37482 = C36562 - C36563;
    const double C37480 = C36558 - C36559;
    const double C174 = C160 - C161;
    const double C629 = C339 - C340;
    const double C8348 = C340 - C339;
    const double C2477 = C348 - C347;
    const double C2807 = C347 - C348;
    const double C747 = C504 - C505;
    const double C10595 = C10576 - C10577;
    const double C32973 = C32954 - C32955;
    const double C11274 = C10942 - C10943;
    const double C33652 = C33320 - C33321;
    const double C8501 = C914 - C913;
    const double C8702 = C913 - C914;
    const double C11111 = C10764 - C10765;
    const double C14021 = C10765 - C10764;
    const double C33489 = C33142 - C33143;
    const double C40885 = C33143 - C33142;
    const double C2475 = C50214 * C2446;
    const double C14491 = C11486 - C11487;
    const double C14487 = C11487 - C11486;
    const double C41347 = C33864 - C33865;
    const double C41343 = C33865 - C33864;
    const double C20288 = C3440 - C3439;
    const double C31945 = C15689 - C15688;
    const double C37481 = C36560 - C36561;
    const double C20730 = C4102 - C4101;
    const double C31291 = C14833 - C14832;
    const double C36819 = C35892 - C35893;
    const double C3434 =
        (4 * (2 * C49432 + ae * C49434 + C49272 * C49479) +
         ae * (3 * C49434 + C49272 * C49480) +
         C49272 *
             (3 * C49479 + ae * C49480 +
              C49272 * (2 * C49473 + ae * C49475 +
                        C49272 * (C49296 + ae * C49272 * C49333 +
                                  C49272 * (ae * C49333 + C49272 * C49305))))) /
        C49150;
    const double C49897 = C49895 + C49892;
    const double C175 = C162 - C163;
    const double C630 = C341 - C342;
    const double C8349 = C342 - C341;
    const double C2478 = C350 - C349;
    const double C2808 = C349 - C350;
    const double C748 = C506 - C507;
    const double C10597 = C10580 - C10581;
    const double C32975 = C32958 - C32959;
    const double C11276 = C10946 - C10947;
    const double C33654 = C33324 - C33325;
    const double C8502 = C916 - C915;
    const double C8703 = C915 - C916;
    const double C11113 = C10768 - C10769;
    const double C14023 = C10769 - C10768;
    const double C33491 = C33146 - C33147;
    const double C40887 = C33147 - C33146;
    const double C3183 = C50214 * C3162;
    const double C13614 = C50278 * C3162;
    const double C35908 = C50278 * C3162;
    const double C2658 = C117 * C2640;
    const double C5306 = C5099 * C2640;
    const double C14501 = C10556 * C2640;
    const double C36573 = C32934 * C2640;
    const double C43991 = C43784 * C2640;
    const double C4096 =
        (3 * (C49458 + ae * (C49273 * C49468 + C49450 * be) + C49272 * C49529) +
         ae * (C49273 * C49480 + (2 * C49450 + C49272 * C49505) * be) +
         C49272 *
             (2 * C49529 + ae * (C49273 * C49475 + C49505 * be) +
              C49272 * (C49504 + ae * (C49273 * C49272 * C49333 + C49502 * be) +
                        C49272 * (ae * (C49273 * C49333 + C49398 * be) +
                                  C49272 * (be * C49372 + C49273 * C49305))))) /
        C49150;
    const double C3594 =
        (2 * (ae * (C49316 + C49273 * (C49273 * C49326 + C49396 * be) +
                    C49273 * C49396 * be) +
              C49272 * C49508) +
         ae * (C49434 + C49273 * (C49273 * C49475 + C49505 * be) +
               C49273 * C49505 * be) +
         C49272 *
             (C49508 +
              ae * (C49468 + C49273 * (C49273 * C49272 * C49333 + C49502 * be) +
                    C49273 * C49502 * be) +
              C49272 *
                  (ae * (C49326 + C49273 * (C49273 * C49333 + C49398 * be) +
                         C49273 * C49398 * be) +
                   C49272 * (C49296 + be * C49273 * C49372 +
                             C49273 * (be * C49372 + C49273 * C49305))))) /
        C49150;
    const double C4506 =
        (ae * (2 * (C49273 * C49316 + C49405 * be) +
               C49273 * (C49316 + C49273 * C49527 + C49273 * C49396 * be) +
               (C49405 + C49396 * C49538) * be) +
         C49272 *
             (2 * C49458 + be * (C49357 + C49365 * C49538) + C49273 * C49508)) /
        C49150;
    const double C4507 =
        (2 * C49458 + be * (C49357 + C49365 * C49538) + C49273 * C49508 +
         ae * (2 * (C49273 * C49468 + C49450 * be) +
               C49273 *
                   (C49468 + C49273 * (C49273 * C49272 * C49333 + C49502 * be) +
                    C49273 * C49502 * be) +
               (C49450 + C49502 * C49538) * be) +
         C49272 *
             (ae *
                  (2 * C49527 +
                   C49273 * (C49326 + C49273 * (C49273 * C49333 + C49398 * be) +
                             C49273 * C49398 * be) +
                   (C49396 + C49398 * C49538) * be) +
              C49272 * (2 * C49504 + be * (C49365 + C49372 * C49538) +
                        C49273 * (C49296 + be * C49273 * C49372 +
                                  C49273 * (be * C49372 + C49273 * C49305))))) /
        C49150;
    const double C5461 =
        (3 * (C49284 + be * C49543 + C49273 * C49458) +
         be * (2 * C49543 + C49273 * C49545) +
         C49273 * (2 * C49458 + be * C49545 + C49273 * C49508)) /
        C49150;
    const double C6410 =
        (ae * (3 * (C49316 + C49273 * C49527 + C49556 * be) +
               C49273 * (2 * C49527 +
                         C49273 * (C49326 +
                                   C49273 * (C49273 * C49333 + C49398 * be) +
                                   C49273 * C49398 * be) +
                         C49559 * be) +
               (2 * C49556 + C49273 * C49559) * be) +
         C49272 *
             (3 * C49508 + be * (2 * C49498 + C49273 * C49560) +
              C49273 * (2 * C49504 + be * C49560 +
                        C49273 * (C49296 + be * C49273 * C49372 +
                                  C49273 * (be * C49372 + C49273 * C49305))))) /
        C49150;
    const double C7294 =
        (4 * (2 * C49458 + be * C49545 + C49273 * C49508) +
         be * (3 * C49545 + C49273 * C49570) +
         C49273 *
             (3 * C49508 + be * C49570 +
              C49273 * (2 * C49504 + be * C49560 +
                        C49273 * (C49296 + be * C49273 * C49372 +
                                  C49273 * (be * C49372 + C49273 * C49305))))) /
        C49150;
    const double C49819 = C49818 + C49812;
    const double C315 =
        (2 * C49362 + C49280 * C49367 +
         C49272 * (C49272 * C49376 + C49697 * ae) + C49272 * C49697 * ae) /
        C49148;
    const double C317 = (C49272 * (3 * C49367 + C49280 * C49376) +
                         (3 * C49692 + C49280 * C49697) * ae) /
                        C49148;
    const double C479 =
        (2 * C49323 + C49280 * C49328 +
         C49273 * (C49273 * C49337 + C49697 * be) + C49273 * C49697 * be) /
        C49148;
    const double C481 = (C49273 * (3 * C49328 + C49280 * C49337) +
                         (3 * C49692 + C49280 * C49697) * be) /
                        C49148;
    const double C899 =
        (C49273 * C49272 * C49337 + C49272 * C49697 * be) / C49148;
    const double C900 = (C49273 * (C49272 * C49376 + C49697 * ae)) / C49148;
    const double C124 = 4 * (2 * C49688 + C49280 * C49692) +
                        C49280 * (3 * C49692 + C49280 * C49697);
    const double C297 = 2 * C49688 + C49280 * C49692 + C49697 * C49431;
    const double C298 = C49272 * (3 * C49692 + C49280 * C49697);
    const double C462 = 2 * C49688 + C49280 * C49692 + C49697 * C49538;
    const double C463 = C49273 * (3 * C49692 + C49280 * C49697);
    const double C891 = C49273 * C49272 * C49697;
    const double C1097 =
        2 * C49272 * C49697 + C49272 * (C49697 + C49418 * C49431);
    const double C1558 = C49273 * (C49697 + C49418 * C49431);
    const double C1842 =
        2 * C49273 * C49697 + C49273 * (C49697 + C49418 * C49538);
    const double C5639 = C5096 * C1216;
    const double C8194 = C50214 * C1216;
    const double C11494 = C50278 * C1216;
    const double C33872 = C50278 * C1216;
    const double C44312 = C43781 * C1216;
    const double C2958 = C117 * C1564;
    const double C10785 = C10556 * C1564;
    const double C33163 = C32934 * C1564;
    const double C5640 = C5099 * C1210;
    const double C8195 = C117 * C1210;
    const double C11495 = C10556 * C1210;
    const double C33873 = C32934 * C1210;
    const double C44313 = C43784 * C1210;
    const double C2444 =
        (3 * (C49367 + C49272 * C49794 + C49754 * ae) +
         C49272 * (2 * C49794 +
                   C49272 * (C49374 + C49272 * (C49272 * C49385 + C49416 * ae) +
                             C49454 * ae) +
                   C49795 * ae) +
         (2 * C49754 + C49272 * C49795) * ae) /
        C49148;
    const double C2642 =
        (C49367 + C49272 * C49794 + C49754 * ae +
         (C49374 + C49272 * (C49272 * C49385 + C49416 * ae) + C49454 * ae) *
             C49538) /
        C49148;
    const double C3160 =
        (C49273 * (2 * C49794 +
                   C49272 * (C49374 + C49272 * (C49272 * C49385 + C49416 * ae) +
                             C49454 * ae) +
                   C49795 * ae)) /
        C49148;
    const double C6000 =
        (2 * C49273 * C49794 +
         C49273 * (C49794 + (C49272 * C49385 + C49416 * ae) * C49538)) /
        C49148;
    const double C5459 =
        (3 * (C49328 + C49273 * C49869 + C49867 * be) +
         C49273 * (2 * C49869 +
                   C49273 * (C49335 + C49273 * (C49273 * C49346 + C49416 * be) +
                             C49273 * C49416 * be) +
                   C49870 * be) +
         (2 * C49867 + C49273 * C49870) * be) /
        C49148;
    const double C6408 =
        (3 * (C49436 + C49273 * C49887 + C49885 * be) +
         C49273 * (2 * C49887 +
                   C49273 * (C49482 +
                             C49273 * (C49273 * C49272 * C49485 + C49518 * be) +
                             C49273 * C49518 * be) +
                   C49888 * be) +
         (2 * C49885 + C49273 * C49888) * be) /
        C49148;
    const double C49904 = C49330 + C49900;
    const double C2476 = C117 * C2442;
    const double C2655 = C50214 * C2639;
    const double C5299 = C5096 * C2639;
    const double C14496 = C50278 * C2639;
    const double C36568 = C50278 * C2639;
    const double C43984 = C43781 * C2639;
    const double C3181 = C50214 * C3157;
    const double C13610 = C50278 * C3157;
    const double C35904 = C50278 * C3157;
    const double C3184 = C117 * C3158;
    const double C13615 = C10556 * C3158;
    const double C35909 = C32934 * C3158;
    const double C2474 = C117 * C2437;
    const double C2656 = C117 * C2635;
    const double C5300 = C5099 * C2635;
    const double C14497 = C10556 * C2635;
    const double C36569 = C32934 * C2635;
    const double C43985 = C43784 * C2635;
    const double C3182 = C117 * C3153;
    const double C13611 = C10556 * C3153;
    const double C35905 = C32934 * C3153;
    const double C49830 = C49369 + C49829;
    const double C6014 = C5099 * C4503;
    const double C13825 = C10556 * C4503;
    const double C40689 = C32934 * C4503;
    const double C44683 = C43784 * C4503;
    const double C5481 = C5096 * C5457;
    const double C44154 = C43781 * C5457;
    const double C5482 = C5099 * C5453;
    const double C44155 = C43784 * C5453;
    const double C49632 = C49504 + C49630;
    const double C49944 = C49468 + C49940;
    const double C22650 = C5096 * C6406;
    const double C47754 = C43781 * C6406;
    const double C22651 = C5099 * C6404;
    const double C47755 = C43784 * C6404;
    const double C3590 =
        (2 * C49428 + C49272 * C49434 +
         C49273 * (C49273 * C49480 + C49816 * be) + C49273 * C49816 * be) /
        C49148;
    const double C4092 = (C49273 * (3 * C49434 + C49272 * C49480) +
                          (3 * C49781 + C49272 * C49816) * be) /
                         C49148;
    const double C3428 = 4 * (2 * C49748 + C49272 * C49781) +
                         C49272 * (3 * C49781 + C49272 * C49816);
    const double C3588 = 2 * C49748 + C49272 * C49781 + C49816 * C49538;
    const double C4090 = C49273 * (3 * C49781 + C49272 * C49816);
    const double C20997 =
        2 * C49273 * C49816 + C49273 * (C49816 + C49618 * C49538);
    const double C22642 =
        (3 * (C49434 + C49273 * C49936 + C49934 * be) +
         C49273 * (2 * C49936 +
                   C49273 * (C49475 + C49273 * (C49273 * C49587 + C49611 * be) +
                             C49273 * C49611 * be) +
                   C49937 * be) +
         (2 * C49934 + C49273 * C49937) * be) /
        C49148;
    const double C7288 = 4 * (2 * C49851 + C49273 * C49854) +
                         C49273 * (3 * C49854 + C49273 * C49896);
    const double C49619 = C49616 + C49608;
    const double C49921 = C49920 + C49913;
    const double C23547 =
        (4 * (2 * C49273 * C49815 + C49273 * C49949) +
         C49273 * (3 * C49949 + C49273 * (2 * C49273 * C49917 +
                                          C49273 * (C49917 + (C49272 * C49383 +
                                                              C49413 * ae) *
                                                                 C49538)))) /
        C49148;
    const double C146 =
        (5 * (3 * C49298 + C49280 * C49309) +
         C49280 * (4 * C49309 +
                   C49280 * (3 * C49307 +
                             C49280 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C327 =
        (2 * C49280 * C49291 + C49280 * C49298 + ae * C49272 * C49337 +
         C49272 * (ae * C49337 + C49272 * C49309)) /
        C49150;
    const double C328 = (ae * (3 * C49328 + C49280 * C49337) +
                         C49272 * (3 * C49298 + C49280 * C49309)) /
                        C49150;
    const double C492 =
        (2 * C49280 * C49291 + C49280 * C49298 + be * C49273 * C49376 +
         C49273 * (be * C49376 + C49273 * C49309)) /
        C49150;
    const double C493 = (be * (3 * C49367 + C49280 * C49376) +
                         C49273 * (3 * C49298 + C49280 * C49309)) /
                        C49150;
    const double C906 = (ae * (C49273 * C49337 +
                               (2 * C49280 * C49396 +
                                C49280 * (C49396 + C49287 * C49289 * C49288)) *
                                   be) +
                         C49272 * (be * C49376 + C49273 * C49309)) /
                        C49150;
    const double C49495 = C49490 + C49493;
    const double C49522 = C49519 + C49520;
    const double C49536 = C49535 + C49533;
    const double C49593 = C49272 * C49591;
    const double C49620 = C49272 * C49617;
    const double C49637 = C49273 * C49617;
    const double C49631 = C49272 * C49629;
    const double C49349 = C49280 * C49348;
    const double C1109 =
        (2 * (ae * C49337 + C49272 * C49309) +
         ae * (C49337 + C49348 * std::pow(C49272, 2)) +
         C49272 * (C49309 + ae * C49272 * C49348 +
                   C49272 * (ae * C49348 +
                             C49272 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C1104 =
        (2 * C49272 * C49337 + C49272 * (C49337 + C49348 * C49431)) / C49148;
    const double C1565 = (C49273 * (C49337 + C49348 * C49431) +
                          (C49697 + C49418 * C49431) * be) /
                         C49148;
    const double C1849 =
        (2 * (C49273 * C49337 + C49697 * be) +
         C49273 * (C49337 + C49273 * (C49273 * C49348 + C49418 * be) +
                   C49273 * C49418 * be) +
         (C49697 + C49418 * C49538) * be) /
        C49148;
    const double C2447 =
        (3 * (C49298 + ae * C49443 + C49272 * C49447) +
         ae * (2 * C49443 + C49272 * C49448) +
         C49272 * (2 * C49447 + ae * C49448 +
                   C49272 * (C49307 + ae * C49272 * C49346 +
                             C49272 * (ae * C49346 +
                                       C49272 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C3163 =
        (2 * (ae * (C49273 * C49335 + C49410 * be) + C49272 * C49466) +
         ae * (C49273 * C49448 + (C49410 + C49416 * C49431) * be) +
         C49272 * (C49466 + ae * (C49273 * C49272 * C49346 + C49454 * be) +
                   C49272 * (ae * (C49273 * C49346 + C49416 * be) +
                             C49272 * (be * C49385 +
                                       C49273 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C2443 = (3 * (C49328 + C49335 * C49431) +
                          C49272 * (2 * C49443 + C49272 * C49448)) /
                         C49148;
    const double C2641 =
        (C49328 + C49335 * C49431 + C49273 * (C49273 * C49448 + C49795 * be) +
         C49273 * C49795 * be) /
        C49148;
    const double C3159 = (C49273 * (2 * C49443 + C49272 * C49448) +
                          (2 * C49754 + C49272 * C49795) * be) /
                         C49148;
    const double C49496 = C49488 + C49494;
    const double C49594 = C49272 * C49592;
    const double C20998 =
        (2 * (C49273 * C49480 + C49816 * be) +
         C49273 * (C49480 + C49273 * (C49273 * C49592 + C49618 * be) +
                   C49273 * C49618 * be) +
         (C49816 + C49618 * C49538) * be) /
        C49148;
    const double C49388 = C49280 * C49387;
    const double C1223 =
        (ae * (C49337 + C49273 * (C49273 * C49348 + C49418 * be) +
               C49273 * C49418 * be) +
         C49272 * (C49309 + be * C49273 * C49387 +
                   C49273 * (be * C49387 +
                             C49273 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C1570 =
        (be * C49376 + C49273 * C49309 +
         ae * (C49273 * C49272 * C49348 + C49272 * C49418 * be) +
         C49272 * (ae * (C49273 * C49348 + C49418 * be) +
                   C49272 * (be * C49387 +
                             C49273 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C1854 =
        (2 * (be * C49376 + C49273 * C49309) +
         be * (C49376 + C49387 * std::pow(C49273, 2)) +
         C49273 * (C49309 + be * C49273 * C49387 +
                   C49273 * (be * C49387 +
                             C49273 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C1105 =
        (2 * (C49272 * C49376 + C49697 * ae) +
         C49272 * (C49376 + C49272 * (C49272 * C49387 + C49418 * ae) +
                   C49272 * C49418 * ae) +
         (C49697 + C49418 * C49431) * ae) /
        C49148;
    const double C1219 = (C49272 * C49376 + C49697 * ae +
                          (C49272 * C49387 + C49418 * ae) * C49538) /
                         C49148;
    const double C1850 =
        (2 * C49273 * C49376 + C49273 * (C49376 + C49387 * C49538)) / C49148;
    const double C5463 =
        (3 * (C49298 + be * C49551 + C49273 * C49466) +
         be * (2 * C49551 + C49273 * C49553) +
         C49273 * (2 * C49466 + be * C49553 +
                   C49273 * (C49307 + be * C49273 * C49385 +
                             C49273 * (be * C49385 +
                                       C49273 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C6001 =
        (ae * (2 * (C49273 * C49335 + C49410 * be) +
               C49273 * (C49335 + C49273 * (C49273 * C49346 + C49416 * be) +
                         C49273 * C49416 * be) +
               (C49410 + C49416 * C49538) * be) +
         C49272 * (2 * C49466 + be * C49553 +
                   C49273 * (C49307 + be * C49273 * C49385 +
                             C49273 * (be * C49385 +
                                       C49273 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C5460 = (3 * (C49367 + C49374 * C49538) +
                          C49273 * (2 * C49551 + C49273 * C49553)) /
                         C49148;
    const double C49574 = C49572 + C49573;
    const double C49657 = C49273 * C49654;
    const double C184 = C176 + C177;
    const double C7896 = C7888 + C7889;
    const double C16971 = C16963 + C16964;
    const double C13623 = C13606 + C13607;
    const double C13621 = C13602 + C13603;
    const double C13619 = C13598 + C13599;
    const double C13617 = C13586 + C13587;
    const double C14505 = C14492 + C14493;
    const double C14503 = C14488 + C14489;
    const double C13618 = C13596 + C13597;
    const double C13616 = C13584 + C13585;
    const double C13622 = C13604 + C13605;
    const double C13620 = C13600 + C13601;
    const double C30413 = C30410 + C30411;
    const double C20289 = C3442 - C3441;
    const double C31947 = C15693 - C15692;
    const double C37483 = C36564 - C36565;
    const double C20731 = C4104 - C4103;
    const double C31293 = C14837 - C14836;
    const double C36821 = C35896 - C35897;
    const double C186 = C180 + C181;
    const double C7897 = C7892 + C7893;
    const double C16972 = C16967 + C16968;
    const double C185 = C178 + C179;
    const double C639 = C635 + C636;
    const double C8350 = C8344 + C8345;
    const double C17419 = C17415 + C17416;
    const double C757 = C753 + C754;
    const double C8503 = C8499 + C8500;
    const double C17572 = C17568 + C17569;
    const double C164 = C50214 * C136;
    const double C351 = C50214 * C314;
    const double C631 = C50214 * C316;
    const double C20290 = C50214 * C3430;
    const double C167 = C117 * C137;
    const double C519 = C117 * C480;
    const double C5136 = C5099 * C480;
    const double C11284 = C10556 * C480;
    const double C33662 = C32934 * C480;
    const double C43821 = C43784 * C480;
    const double C752 = C117 * C482;
    const double C10589 = C10556 * C482;
    const double C32967 = C32934 * C482;
    const double C49704 = C49702 + C49703;
    const double C1218 =
        (C49272 * C49337 + C49273 * (C49273 * C49272 * C49348 + C49757 * be) +
         C49273 * C49757 * be) /
        C49148;
    const double C1566 =
        (C49273 *
         (C49376 + C49272 * (C49272 * C49387 + C49418 * ae) + C49757 * ae)) /
        C49148;
    const double C1211 = C49272 * C49697 + C49757 * C49538;
    const double C3429 = 4 * (2 * C49751 + C49272 * C49788) +
                         C49272 * (3 * C49788 + C49272 * C49828);
    const double C3589 = 2 * C49751 + C49272 * C49788 + C49828 * C49538;
    const double C4091 = C49273 * (3 * C49788 + C49272 * C49828);
    const double C7289 = 4 * (2 * C49859 + C49273 * C49862) +
                         C49273 * (3 * C49862 + C49273 * C49905);
    const double C23545 = 4 * (2 * C49877 + C49273 * C49880) +
                          C49273 * (3 * C49880 + C49273 * C49945);
    const double C49918 = C49915 + C49916;
    const double C49957 = C49954 + C49955;
    const double C107 = (C50384 * C50052) / C49148 + (C50328 - C50367) / C49192;
    const double C108 =
        (C50385 * C50052) / C49148 + (2 * C50062 + C50384) / C49192;
    const double C109 = (C50052 * C50062) / C49152 + C50385 / C49192;
    const double C113 = (C50386 * C50078) / C50075 + (C50335 - C50370) / C50077;
    const double C114 =
        (C50387 * C50078) / C50075 + (2 * C50089 + C50386) / C50077;
    const double C115 = (C50078 * C50089) / C50092 + C50387 / C50077;
    const double C1089 =
        (C50388 * C50149) / C50075 + (C50343 - C50372) / C50077;
    const double C1090 =
        (C50389 * C50149) / C50075 + (2 * C50154 + C50388) / C50077;
    const double C1091 = (C50149 * C50154) / C50092 + C50389 / C50077;
    const double C1835 =
        (C50390 * C50177) / C50075 + (C50344 - C50375) / C50077;
    const double C1836 =
        (C50391 * C50177) / C50075 + (2 * C50182 + C50390) / C50077;
    const double C1837 = (C50177 * C50182) / C50092 + C50391 / C50077;
    const double C49208 = C49206 * ae;
    const double C49250 = C49248 * ae;
    const double C10603 = C10599 * C50199;
    const double C10602 = C10598 * C118;
    const double C32977 = C32970 + C32971;
    const double C32976 = C32968 + C32969;
    const double C35915 = C35900 + C35901;
    const double C40487 = C40480 + C40481;
    const double C35914 = C35898 + C35899;
    const double C40486 = C40478 + C40479;
    const double C40485 = C40476 + C40477;
    const double C40483 = C40472 + C40473;
    const double C40484 = C40474 + C40475;
    const double C40482 = C40470 + C40471;
    const double C41353 = C41348 + C41349;
    const double C41351 = C41344 + C41345;
    const double C35917 = C35912 + C35913;
    const double C35916 = C35910 + C35911;
    const double C182 = C174 * C118;
    const double C637 = C629 * C118;
    const double C7894 = C629 * C7886;
    const double C16969 = C629 * C16961;
    const double C8346 = C2477 * C7886;
    const double C17417 = C2477 * C16961;
    const double C755 = C747 * C118;
    const double C10600 = C10594 + C10595;
    const double C32978 = C32972 + C32973;
    const double C11285 = C11273 + C11274;
    const double C33663 = C33651 + C33652;
    const double C8504 = C8501 * C7886;
    const double C17570 = C8501 * C16961;
    const double C11122 = C11110 + C11111;
    const double C14024 = C14020 + C14021;
    const double C33500 = C33488 + C33489;
    const double C40888 = C40884 + C40885;
    const double C14504 = C14490 + C14491;
    const double C14502 = C14486 + C14487;
    const double C41352 = C41346 + C41347;
    const double C41350 = C41342 + C41343;
    const double C31956 = C31944 + C31945;
    const double C37492 = C37480 + C37481;
    const double C31302 = C31290 + C31291;
    const double C36830 = C36818 + C36819;
    const double C20292 = C50214 * C3434;
    const double C183 = C175 * C50199;
    const double C638 = C630 * C50199;
    const double C7895 = C630 * C50250;
    const double C16970 = C630 * C50250;
    const double C8347 = C2478 * C50250;
    const double C17418 = C2478 * C50250;
    const double C756 = C748 * C50199;
    const double C10601 = C10596 + C10597;
    const double C32979 = C32974 + C32975;
    const double C11286 = C11275 + C11276;
    const double C33664 = C33653 + C33654;
    const double C8505 = C8502 * C50250;
    const double C17571 = C8502 * C50250;
    const double C11123 = C11112 + C11113;
    const double C14025 = C14022 + C14023;
    const double C33501 = C33490 + C33491;
    const double C40889 = C40886 + C40887;
    const double C20734 = C50214 * C4096;
    const double C31300 = C50278 * C4096;
    const double C36828 = C50278 * C4096;
    const double C20398 = C50214 * C3594;
    const double C22494 = C5096 * C3594;
    const double C31954 = C50278 * C3594;
    const double C37490 = C50278 * C3594;
    const double C47602 = C43781 * C3594;
    const double C15038 = C50278 * C4506;
    const double C22239 = C5096 * C4506;
    const double C22654 = C5095 * C4506;
    const double C36984 = C50278 * C4506;
    const double C47347 = C43781 * C4506;
    const double C47758 = C50395 * C4506;
    const double C23154 = C5096 * C4507;
    const double C31456 = C50278 * C4507;
    const double C36992 = C50278 * C4507;
    const double C48258 = C43781 * C4507;
    const double C22656 = C5096 * C6410;
    const double C47760 = C43781 * C6410;
    const double C3431 =
        (4 * (2 * C49780 + C49272 * C49819 + C49781 * ae) +
         C49272 *
             (3 * C49819 +
              C49272 *
                  (2 * C49815 +
                   C49272 * (C49365 + C49272 * (C49272 * C49372 + C49398 * ae) +
                             C49502 * ae) +
                   C49505 * ae) +
              C49816 * ae) +
         (3 * C49781 + C49272 * C49816) * ae) /
        C49148;
    const double C3591 =
        (2 * C49780 + C49272 * C49819 + C49781 * ae +
         (2 * C49815 +
          C49272 * (C49365 + C49272 * (C49272 * C49372 + C49398 * ae) +
                    C49502 * ae) +
          C49505 * ae) *
             C49538) /
        C49148;
    const double C4093 =
        (C49273 *
         (3 * C49819 +
          C49272 *
              (2 * C49815 +
               C49272 * (C49365 + C49272 * (C49272 * C49372 + C49398 * ae) +
                         C49502 * ae) +
               C49505 * ae) +
          C49816 * ae)) /
        C49148;
    const double C4501 =
        (2 * C49273 * C49819 +
         C49273 * (C49819 + (C49365 + C49272 * (C49272 * C49372 + C49398 * ae) +
                             C49502 * ae) *
                                C49538)) /
        C49148;
    const double C354 = C117 * C315;
    const double C634 = C117 * C317;
    const double C516 = C50214 * C479;
    const double C5129 = C5096 * C479;
    const double C11279 = C50278 * C479;
    const double C33657 = C50278 * C479;
    const double C43814 = C43781 * C479;
    const double C749 = C50214 * C481;
    const double C10584 = C50278 * C481;
    const double C32962 = C50278 * C481;
    const double C917 = C50214 * C899;
    const double C11116 = C50278 * C899;
    const double C33494 = C50278 * C899;
    const double C920 = C117 * C900;
    const double C11121 = C10556 * C900;
    const double C33499 = C32934 * C900;
    const double C165 = C117 * C124;
    const double C352 = C117 * C297;
    const double C632 = C117 * C298;
    const double C517 = C117 * C462;
    const double C5130 = C5099 * C462;
    const double C11280 = C10556 * C462;
    const double C33658 = C32934 * C462;
    const double C43815 = C43784 * C462;
    const double C750 = C117 * C463;
    const double C10585 = C10556 * C463;
    const double C32963 = C32934 * C463;
    const double C918 = C117 * C891;
    const double C11117 = C10556 * C891;
    const double C33495 = C32934 * C891;
    const double C49906 = C49904 + C49901;
    const double C49831 = C49830 + C49824;
    const double C49946 = C49944 + C49941;
    const double C20396 = C50214 * C3590;
    const double C22488 = C5096 * C3590;
    const double C31950 = C50278 * C3590;
    const double C37486 = C50278 * C3590;
    const double C47596 = C43781 * C3590;
    const double C20732 = C50214 * C4092;
    const double C31296 = C50278 * C4092;
    const double C36824 = C50278 * C4092;
    const double C20291 = C117 * C3428;
    const double C20397 = C117 * C3588;
    const double C22489 = C5099 * C3588;
    const double C31951 = C10556 * C3588;
    const double C37487 = C32934 * C3588;
    const double C47597 = C43784 * C3588;
    const double C20733 = C117 * C4090;
    const double C31297 = C10556 * C4090;
    const double C36825 = C32934 * C4090;
    const double C49621 = ae * C49619;
    const double C49952 = C49273 * C49619;
    const double C7290 =
        (4 * (2 * C49853 + C49273 * C49897 + C49854 * be) +
         C49273 * (3 * C49897 +
                   C49273 * (2 * C49527 + C49273 * C49619 + C49559 * be) +
                   C49896 * be) +
         (3 * C49854 + C49273 * C49896) * be) /
        C49148;
    const double C49922 = C49272 * C49921;
    const double C22643 =
        (3 * (C49819 + C49921 * C49538) +
         C49273 *
             (2 * C49273 * C49921 +
              C49273 *
                  (C49921 + (C49372 + C49272 * (C49272 * C49383 + C49413 * ae) +
                             C49606 * ae) *
                                C49538))) /
        C49148;
    const double C353 = C50214 * C327;
    const double C633 = C50214 * C328;
    const double C518 = C50214 * C492;
    const double C5135 = C5096 * C492;
    const double C11283 = C50278 * C492;
    const double C33661 = C50278 * C492;
    const double C43820 = C43781 * C492;
    const double C751 = C50214 * C493;
    const double C10588 = C50278 * C493;
    const double C32966 = C50278 * C493;
    const double C919 = C50214 * C906;
    const double C11120 = C50278 * C906;
    const double C33498 = C50278 * C906;
    const double C3595 =
        (2 * (ae * (C49330 + C49273 * (C49273 * C49341 + C49412 * be) +
                    C49273 * C49412 * be) +
              C49272 * C49522) +
         ae * (C49441 + C49273 * (C49273 * C49492 + C49521 * be) +
               C49273 * C49521 * be) +
         C49272 *
             (C49522 +
              ae * (C49482 + C49273 * (C49273 * C49272 * C49485 + C49518 * be) +
                    C49273 * C49518 * be) +
              C49272 *
                  (ae * (C49341 + C49273 * (C49273 * C49485 + C49513 * be) +
                         C49273 * C49513 * be) +
                   C49272 * (C49484 + be * C49273 * C49514 +
                             C49273 * (be * C49514 + C49273 * C49280 *
                                                         std::pow(C49276, 8) *
                                                         bs[8] * C49278))))) /
        C49150;
    const double C4508 =
        (ae * (2 * (C49273 * C49330 + C49407 * be) +
               C49273 * (C49330 + C49273 * C49534 + C49273 * C49412 * be) +
               (C49407 + C49412 * C49538) * be) +
         C49272 *
             (2 * C49462 + be * (C49369 + C49380 * C49538) + C49273 * C49522)) /
        C49150;
    const double C4509 =
        (2 * C49462 + be * (C49369 + C49380 * C49538) + C49273 * C49522 +
         ae * (2 * (C49273 * C49482 + C49452 * be) +
               C49273 *
                   (C49482 + C49273 * (C49273 * C49272 * C49485 + C49518 * be) +
                    C49273 * C49518 * be) +
               (C49452 + C49518 * C49538) * be) +
         C49272 *
             (ae *
                  (2 * C49534 +
                   C49273 * (C49341 + C49273 * (C49273 * C49485 + C49513 * be) +
                             C49273 * C49513 * be) +
                   (C49412 + C49513 * C49538) * be) +
              C49272 *
                  (2 * C49516 + be * (C49380 + C49514 * C49538) +
                   C49273 * (C49484 + be * C49273 * C49514 +
                             C49273 * (be * C49514 + C49273 * C49280 *
                                                         std::pow(C49276, 8) *
                                                         bs[8] * C49278))))) /
        C49150;
    const double C5462 =
        (3 * (C49401 + be * C49547 + C49273 * C49462) +
         be * (2 * C49547 + C49273 * C49549) +
         C49273 * (2 * C49462 + be * C49549 + C49273 * C49522)) /
        C49150;
    const double C6411 =
        (ae * (3 * (C49330 + C49273 * C49534 + C49562 * be) +
               C49273 * (2 * C49534 +
                         C49273 * (C49341 +
                                   C49273 * (C49273 * C49485 + C49513 * be) +
                                   C49273 * C49513 * be) +
                         C49565 * be) +
               (2 * C49562 + C49273 * C49565) * be) +
         C49272 * (3 * C49522 + be * (2 * C49510 + C49273 * C49566) +
                   C49273 * (2 * C49516 + be * C49566 +
                             C49273 * (C49484 + be * C49273 * C49514 +
                                       C49273 * (be * C49514 +
                                                 C49273 * C49280 *
                                                     std::pow(C49276, 8) *
                                                     bs[8] * C49278))))) /
        C49150;
    const double C49595 = C49583 + C49593;
    const double C49639 = C49638 + C49637;
    const double C49633 = C49632 + C49631;
    const double C49350 = C49340 + C49349;
    const double C3435 =
        (4 * (2 * C49440 + ae * C49441 + C49272 * C49495) +
         ae * (3 * C49441 + C49272 * C49496) +
         C49272 * (3 * C49495 + ae * C49496 +
                   C49272 * (2 * C49491 + ae * C49492 +
                             C49272 * (C49484 + ae * C49272 * C49485 +
                                       C49272 * (ae * C49485 +
                                                 C49272 * C49280 *
                                                     std::pow(C49276, 8) *
                                                     bs[8] * C49278))))) /
        C49150;
    const double C4097 =
        (3 * (C49462 + ae * (C49273 * C49482 + C49452 * be) + C49272 * C49536) +
         ae * (C49273 * C49496 + (2 * C49452 + C49272 * C49521) * be) +
         C49272 *
             (2 * C49536 + ae * (C49273 * C49492 + C49521 * be) +
              C49272 *
                  (C49516 + ae * (C49273 * C49272 * C49485 + C49518 * be) +
                   C49272 * (ae * (C49273 * C49485 + C49513 * be) +
                             C49272 * (be * C49514 + C49273 * C49280 *
                                                         std::pow(C49276, 8) *
                                                         bs[8] * C49278))))) /
        C49150;
    const double C3432 = (4 * (2 * C49436 + C49272 * C49441) +
                          C49272 * (3 * C49441 + C49272 * C49496)) /
                         C49148;
    const double C3592 =
        (2 * C49436 + C49272 * C49441 +
         C49273 * (C49273 * C49496 + C49828 * be) + C49273 * C49828 * be) /
        C49148;
    const double C4094 = (C49273 * (3 * C49441 + C49272 * C49496) +
                          (3 * C49788 + C49272 * C49828) * be) /
                         C49148;
    const double C49596 = C49581 + C49594;
    const double C49389 = C49379 + C49388;
    const double C7295 =
        (4 * (2 * C49462 + be * C49549 + C49273 * C49522) +
         be * (3 * C49549 + C49273 * C49574) +
         C49273 * (3 * C49522 + be * C49574 +
                   C49273 * (2 * C49516 + be * C49566 +
                             C49273 * (C49484 + be * C49273 * C49514 +
                                       C49273 * (be * C49514 +
                                                 C49273 * C49280 *
                                                     std::pow(C49276, 8) *
                                                     bs[8] * C49278))))) /
        C49150;
    const double C7293 = (4 * (2 * C49547 + C49273 * C49549) +
                          C49273 * (3 * C49549 + C49273 * C49574)) /
                         C49148;
    const double C49658 = C49656 + C49657;
    const double C7898 = C7896 + C7890;
    const double C16973 = C16971 + C16965;
    const double C31957 = C31946 + C31947;
    const double C37493 = C37482 + C37483;
    const double C31303 = C31292 + C31293;
    const double C36831 = C36820 + C36821;
    const double C125 = 5 * (3 * C49692 + C49280 * C49697) +
                        C49280 * (4 * C49697 + C49280 * C49704);
    const double C299 = 3 * C49692 + C49280 * C49697 + C49704 * C49431;
    const double C464 = 3 * C49692 + C49280 * C49697 + C49704 * C49538;
    const double C622 = C49272 * (4 * C49697 + C49280 * C49704);
    const double C740 = C49273 * (4 * C49697 + C49280 * C49704);
    const double C892 = C49273 * C49272 * C49704;
    const double C20283 = 5 * (3 * C49781 + C49272 * C49816) +
                          C49272 * (4 * C49816 + C49272 * C49918);
    const double C20391 = 3 * C49781 + C49272 * C49816 + C49918 * C49538;
    const double C20725 = C49273 * (4 * C49816 + C49272 * C49918);
    const double C39815 = 5 * (3 * C49854 + C49273 * C49896) +
                          C49273 * (4 * C49896 + C49273 * C49957);
    const double C49210 = C49208 / C49148;
    const double C49252 = C49250 / C49148;
    const double C10606 = C10602 + C10603;
    const double C32981 = C32977 * C50199;
    const double C32980 = C32976 * C118;
    const double C7899 = C7897 + C7894;
    const double C16974 = C16972 + C16969;
    const double C8351 = C8350 + C8346;
    const double C17420 = C17419 + C17417;
    const double C10604 = C10600 * C118;
    const double C32982 = C32978 * C118;
    const double C11287 = C11285 * C118;
    const double C33665 = C33663 * C118;
    const double C8506 = C8503 + C8504;
    const double C17573 = C17572 + C17570;
    const double C11124 = C11122 * C118;
    const double C33502 = C33500 * C118;
    const double C187 = C182 + C183;
    const double C640 = C637 + C638;
    const double C758 = C755 + C756;
    const double C10605 = C10601 * C50199;
    const double C32983 = C32979 * C50199;
    const double C11288 = C11286 * C50199;
    const double C33666 = C33664 * C50199;
    const double C11125 = C11123 * C50199;
    const double C33503 = C33501 * C50199;
    const double C20293 = C117 * C3431;
    const double C20399 = C117 * C3591;
    const double C22495 = C5099 * C3591;
    const double C31955 = C10556 * C3591;
    const double C37491 = C32934 * C3591;
    const double C47603 = C43784 * C3591;
    const double C20735 = C117 * C4093;
    const double C31301 = C10556 * C4093;
    const double C36829 = C32934 * C4093;
    const double C23155 = C5099 * C4501;
    const double C31457 = C10556 * C4501;
    const double C36993 = C32934 * C4501;
    const double C48259 = C43784 * C4501;
    const double C7292 =
        (4 * (2 * C49861 + C49273 * C49906 + C49862 * be) +
         C49273 *
             (3 * C49906 +
              C49273 *
                  (2 * C49534 +
                   C49273 * (C49341 + C49273 * (C49273 * C49485 + C49513 * be) +
                             C49273 * C49513 * be) +
                   C49565 * be) +
              C49905 * be) +
         (3 * C49862 + C49273 * C49905) * be) /
        C49148;
    const double C3433 =
        (4 * (2 * C49787 + C49272 * C49831 + C49788 * ae) +
         C49272 *
             (3 * C49831 +
              C49272 *
                  (2 * C49827 +
                   C49272 * (C49380 + C49272 * (C49272 * C49514 + C49513 * ae) +
                             C49518 * ae) +
                   C49521 * ae) +
              C49828 * ae) +
         (3 * C49788 + C49272 * C49828) * ae) /
        C49148;
    const double C3593 =
        (2 * C49787 + C49272 * C49831 + C49788 * ae +
         (2 * C49827 +
          C49272 * (C49380 + C49272 * (C49272 * C49514 + C49513 * ae) +
                    C49518 * ae) +
          C49521 * ae) *
             C49538) /
        C49148;
    const double C4095 =
        (C49273 *
         (3 * C49831 +
          C49272 *
              (2 * C49827 +
               C49272 * (C49380 + C49272 * (C49272 * C49514 + C49513 * ae) +
                         C49518 * ae) +
               C49521 * ae) +
          C49828 * ae)) /
        C49148;
    const double C4505 =
        (2 * C49273 * C49831 +
         C49273 * (C49831 + (C49380 + C49272 * (C49272 * C49514 + C49513 * ae) +
                             C49518 * ae) *
                                C49538)) /
        C49148;
    const double C23546 =
        (4 * (2 * C49879 + C49273 * C49946 + C49880 * be) +
         C49273 * (3 * C49946 +
                   C49273 * (2 * C49628 +
                             C49273 * (C49578 +
                                       C49273 * (C49273 * C49272 * C49344 +
                                                 C49606 * be) +
                                       C49273 * C49606 * be) +
                             C49645 * be) +
                   C49945 * be) +
         (3 * C49880 + C49273 * C49945) * be) /
        C49148;
    const double C49622 = C49621 + C49620;
    const double C49956 = C49951 + C49952;
    const double C49923 = C49910 + C49922;
    const double C6013 = C5096 * C4508;
    const double C13824 = C50278 * C4508;
    const double C40688 = C50278 * C4508;
    const double C44682 = C43781 * C4508;
    const double C5487 = C5096 * C5462;
    const double C44160 = C43781 * C5462;
    const double C21000 =
        (2 * (ae * (2 * C49527 + C49273 * C49619 + C49559 * be) +
              C49272 * C49639) +
         ae * (2 * (C49273 * C49475 + C49505 * be) +
               C49273 * (C49475 + C49273 * (C49273 * C49587 + C49611 * be) +
                         C49273 * C49611 * be) +
               (C49505 + C49611 * C49538) * be) +
         C49272 *
             (C49639 +
              ae *
                  (2 * C49628 +
                   C49273 * (C49578 +
                             C49273 * (C49273 * C49272 * C49344 + C49606 * be) +
                             C49273 * C49606 * be) +
                   (C49502 + C49606 * C49538) * be) +
              C49272 *
                  (ae * (2 * C49607 +
                         C49273 * (C49333 +
                                   C49273 * (C49273 * C49344 + C49413 * be) +
                                   C49273 * C49413 * be) +
                         (C49398 + C49413 * C49538) * be) +
                   C49272 * (2 * C49610 + be * (C49372 + C49383 * C49538) +
                             C49273 * (C49305 + be * C49273 * C49383 +
                                       C49273 * (be * C49383 +
                                                 C49273 * std::pow(C49276, 8) *
                                                     bs[8] * C49278)))))) /
        C49150;
    const double C22644 =
        (3 * C49508 + be * C49570 + C49273 * C49639 +
         ae * (3 * (C49468 + C49273 * C49628 + C49641 * be) +
               C49273 * (2 * C49628 +
                         C49273 * (C49578 +
                                   C49273 * (C49273 * C49272 * C49344 +
                                             C49606 * be) +
                                   C49273 * C49606 * be) +
                         C49645 * be) +
               (2 * C49641 + C49273 * C49645) * be) +
         C49272 *
             (ae * (3 * C49619 +
                    C49273 *
                        (2 * C49607 +
                         C49273 * (C49333 +
                                   C49273 * (C49273 * C49344 + C49413 * be) +
                                   C49273 * C49413 * be) +
                         C49646 * be) +
                    (2 * C49600 + C49273 * C49646) * be) +
              C49272 *
                  (3 * C49617 + be * (2 * C49601 + C49273 * C49647) +
                   C49273 * (2 * C49610 + be * C49647 +
                             C49273 * (C49305 + be * C49273 * C49383 +
                                       C49273 * (be * C49383 +
                                                 C49273 * std::pow(C49276, 8) *
                                                     bs[8] * C49278)))))) /
        C49150;
    const double C23548 =
        (ae * (4 * (2 * C49527 + C49273 * C49619 + C49559 * be) +
               C49273 * (3 * C49619 +
                         C49273 * (2 * C49607 +
                                   C49273 * (C49333 +
                                             C49273 * (C49273 * C49344 +
                                                       C49413 * be) +
                                             C49273 * C49413 * be) +
                                   C49646 * be) +
                         C49653 * be) +
               (3 * C49559 + C49273 * C49653) * be) +
         C49272 *
             (4 * C49639 + be * (3 * C49560 + C49273 * C49654) +
              C49273 *
                  (3 * C49617 + be * C49654 +
                   C49273 * (2 * C49610 + be * C49647 +
                             C49273 * (C49305 + be * C49273 * C49383 +
                                       C49273 * (be * C49383 +
                                                 C49273 * std::pow(C49276, 8) *
                                                     bs[8] * C49278)))))) /
        C49150;
    const double C329 =
        (3 * C49298 + C49280 * C49309 + ae * C49272 * C49350 +
         C49272 * (ae * C49350 +
                   C49272 * (3 * C49307 +
                             C49280 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C625 =
        (ae * (4 * C49337 + C49280 * C49350) +
         C49272 * (4 * C49309 +
                   C49280 * (3 * C49307 +
                             C49280 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C138 = (5 * (3 * C49328 + C49280 * C49337) +
                         C49280 * (4 * C49337 + C49280 * C49350)) /
                        C49148;
    const double C318 =
        (3 * C49328 + C49280 * C49337 + C49350 * C49431) / C49148;
    const double C483 =
        (3 * C49328 + C49280 * C49337 +
         C49273 * (C49273 * C49350 + C49704 * be) + C49273 * C49704 * be) /
        C49148;
    const double C623 = (C49272 * (4 * C49337 + C49280 * C49350)) / C49148;
    const double C741 = (C49273 * (4 * C49337 + C49280 * C49350) +
                         (4 * C49697 + C49280 * C49704) * be) /
                        C49148;
    const double C901 =
        (C49273 * C49272 * C49350 + C49272 * C49704 * be) / C49148;
    const double C20286 =
        (5 * (3 * C49479 + ae * C49480 + C49272 * C49595) +
         ae * (4 * C49480 + C49272 * C49596) +
         C49272 *
             (4 * C49595 + ae * C49596 +
              C49272 *
                  (3 * C49591 + ae * C49592 +
                   C49272 * (2 * C49585 + ae * C49587 +
                             C49272 * (C49305 + ae * C49272 * C49344 +
                                       C49272 * (ae * C49344 +
                                                 C49272 * std::pow(C49276, 8) *
                                                     bs[8] * C49278)))))) /
        C49150;
    const double C20728 =
        (4 * (2 * C49529 + ae * (C49273 * C49475 + C49505 * be) +
              C49272 * C49633) +
         ae * (C49273 * C49596 + (3 * C49505 + C49272 * C49618) * be) +
         C49272 *
             (3 * C49633 + ae * (C49273 * C49592 + C49618 * be) +
              C49272 *
                  (2 * C49629 + ae * (C49273 * C49587 + C49611 * be) +
                   C49272 *
                       (C49610 + ae * (C49273 * C49272 * C49344 + C49606 * be) +
                        C49272 * (ae * (C49273 * C49344 + C49413 * be) +
                                  C49272 * (be * C49383 +
                                            C49273 * std::pow(C49276, 8) *
                                                bs[8] * C49278)))))) /
        C49150;
    const double C20284 = (5 * (3 * C49434 + C49272 * C49480) +
                           C49272 * (4 * C49480 + C49272 * C49596)) /
                          C49148;
    const double C20392 =
        (3 * C49434 + C49272 * C49480 +
         C49273 * (C49273 * C49596 + C49918 * be) + C49273 * C49918 * be) /
        C49148;
    const double C20726 = (C49273 * (4 * C49480 + C49272 * C49596) +
                           (4 * C49816 + C49272 * C49918) * be) /
                          C49148;
    const double C494 =
        (3 * C49298 + C49280 * C49309 + be * C49273 * C49389 +
         C49273 * (be * C49389 +
                   C49273 * (3 * C49307 +
                             C49280 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C743 =
        (be * (4 * C49376 + C49280 * C49389) +
         C49273 * (4 * C49309 +
                   C49280 * (3 * C49307 +
                             C49280 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C907 =
        (ae * (C49273 * C49350 +
               (3 * (C49396 + C49398 * C49288) +
                C49280 * (2 * C49280 * C49398 +
                          C49280 * (C49398 + C49294 * C49293 * C49288))) *
                   be) +
         C49272 * (be * C49389 +
                   C49273 * (3 * C49307 +
                             C49280 * (2 * C49280 * C49305 +
                                       C49280 * (C49305 + std::pow(C49276, 8) *
                                                              bs[8] * C49278 *
                                                              C49288))))) /
        C49150;
    const double C139 = (5 * (3 * C49367 + C49280 * C49376) +
                         C49280 * (4 * C49376 + C49280 * C49389)) /
                        C49148;
    const double C319 =
        (3 * C49367 + C49280 * C49376 +
         C49272 * (C49272 * C49389 + C49704 * ae) + C49272 * C49704 * ae) /
        C49148;
    const double C484 =
        (3 * C49367 + C49280 * C49376 + C49389 * C49538) / C49148;
    const double C624 = (C49272 * (4 * C49376 + C49280 * C49389) +
                         (4 * C49697 + C49280 * C49704) * ae) /
                        C49148;
    const double C742 = (C49273 * (4 * C49376 + C49280 * C49389)) / C49148;
    const double C902 = (C49273 * (C49272 * C49389 + C49704 * ae)) / C49148;
    const double C39818 =
        (5 * (3 * C49508 + be * C49570 + C49273 * C49639) +
         be * (4 * C49570 + C49273 * C49658) +
         C49273 *
             (4 * C49639 + be * C49658 +
              C49273 *
                  (3 * C49617 + be * C49654 +
                   C49273 * (2 * C49610 + be * C49647 +
                             C49273 * (C49305 + be * C49273 * C49383 +
                                       C49273 * (be * C49383 +
                                                 C49273 * std::pow(C49276, 8) *
                                                     bs[8] * C49278)))))) /
        C49150;
    const double C39817 = (5 * (3 * C49545 + C49273 * C49570) +
                           C49273 * (4 * C49570 + C49273 * C49658)) /
                          C49148;
    const double C7900 = C7898 + C7891;
    const double C16975 = C16973 + C16966;
    const double C49211 = C49210 - C49195;
    const double C49253 = C49252 - C49237;
    const double C32984 = C32980 + C32981;
    const double C7901 = C7899 + C7895;
    const double C16976 = C16974 + C16970;
    const double C8352 = C8351 + C8347;
    const double C17421 = C17420 + C17418;
    const double C8507 = C8506 + C8505;
    const double C17574 = C17573 + C17571;
    const double C10607 = C10604 + C10605;
    const double C32985 = C32982 + C32983;
    const double C11289 = C11287 + C11288;
    const double C33667 = C33665 + C33666;
    const double C11126 = C11124 + C11125;
    const double C33504 = C33502 + C33503;
    const double C20394 =
        (3 * (C49508 +
              ae * (C49468 + C49273 * (C49273 * C49578 + C49502 * be) +
                    C49273 * C49502 * be) +
              C49272 * C49622) +
         ae * (C49480 + C49273 * (C49273 * C49592 + C49618 * be) +
               C49273 * C49618 * be) +
         C49272 *
             (2 * C49622 +
              ae * (C49475 + C49273 * (C49273 * C49587 + C49611 * be) +
                    C49273 * C49611 * be) +
              C49272 *
                  (C49617 +
                   ae * (C49578 +
                         C49273 * (C49273 * C49272 * C49344 + C49606 * be) +
                         C49273 * C49606 * be) +
                   C49272 * (ae * (C49333 +
                                   C49273 * (C49273 * C49344 + C49413 * be) +
                                   C49273 * C49413 * be) +
                             C49272 * (C49305 + be * C49273 * C49383 +
                                       C49273 * (be * C49383 +
                                                 C49273 * std::pow(C49276, 8) *
                                                     bs[8] * C49278)))))) /
        C49150;
    const double C49958 = C49956 + C49953;
    const double C49924 = C49923 + C49914;
    const double C19591 =
        ((((0 - (C49146 * C49191) / C49148) * ae) / C49148 - (0 * be) / C49152 +
          C49147 / C49148) /
             C49192 -
         ((C49146 * C49209 + 0) * be) / C49148) /
            C49192 +
        ((C49146 * (C49209 / C49192 -
                    ((C49146 * C49211 + C50356) * be) / C49148 + C49204) +
          C50392) *
         ae) /
            C49148 +
        C49211 / C49192 - ((C49146 * C49204 + C50250) * be) / C49148;
    const double C19592 =
        (C49209 / C49192 - ((C49146 * C49211 + C50356) * be) / C49148 +
         C49204) /
            C49192 +
        ((C49146 *
              (C49211 / C49192 - ((C49146 * C49204 + C50250) * be) / C49148) +
          C50393) *
         ae) /
            C49148 +
        2 * (C49204 / C49192 - (0 * be) / C49148);
    const double C19593 =
        (C49211 / C49192 - ((C49146 * C49204 + C50250) * be) / C49148) /
            C49192 +
        ((C49146 * (C49204 / C49192 - (0 * be) / C49148) + C24135) * ae) /
            C49148;
    const double C24138 =
        C49209 / C49192 - ((C49146 * C49211 + C50356) * be) / C49148 + C49204;
    const double C24139 =
        C49211 / C49192 - ((C49146 * C49204 + C50250) * be) / C49148;
    const double C38439 =
        ((((0 - (C49165 * C49234) / C49148) * ae) / C49148 - (0 * be) / C49152 +
          C49166 / C49148) /
             C49192 -
         ((C49165 * C49251 + 0) * be) / C49148) /
            C49192 +
        ((C49165 * (C49251 / C49192 -
                    ((C49165 * C49253 + C50357) * be) / C49148 + C49246) +
          C50394) *
         ae) /
            C49148 +
        C49253 / C49192 - ((C49165 * C49246 + C50278) * be) / C49148;
    const double C38440 =
        (C49251 / C49192 - ((C49165 * C49253 + C50357) * be) / C49148 +
         C49246) /
            C49192 +
        ((C49165 *
              (C49253 / C49192 - ((C49165 * C49246 + C50278) * be) / C49148) +
          C50395) *
         ae) /
            C49148 +
        2 * (C49246 / C49192 - (0 * be) / C49148);
    const double C38441 =
        (C49253 / C49192 - ((C49165 * C49246 + C50278) * be) / C49148) /
            C49192 +
        ((C49165 * (C49246 / C49192 - (0 * be) / C49148) + C43781) * ae) /
            C49148;
    const double C43782 =
        C49251 / C49192 - ((C49165 * C49253 + C50357) * be) / C49148 + C49246;
    const double C43783 =
        C49253 / C49192 - ((C49165 * C49246 + C50278) * be) / C49148;
    const double C39816 =
        (5 * (3 * C49897 + C49273 * C49958 + C49896 * be) +
         C49273 * (4 * C49958 +
                   C49273 * (3 * C49619 +
                             C49273 * (2 * C49607 +
                                       C49273 * (C49333 +
                                                 C49273 * (C49273 * C49344 +
                                                           C49413 * be) +
                                                 C49273 * C49413 * be) +
                                       C49646 * be) +
                             C49653 * be) +
                   C49957 * be) +
         (4 * C49896 + C49273 * C49957) * be) /
        C49148;
    const double C20285 =
        (5 * (3 * C49819 + C49272 * C49924 + C49816 * ae) +
         C49272 * (4 * C49924 +
                   C49272 * (3 * C49921 +
                             C49272 * (2 * C49917 +
                                       C49272 * (C49372 +
                                                 C49272 * (C49272 * C49383 +
                                                           C49413 * ae) +
                                                 C49606 * ae) +
                                       C49611 * ae) +
                             C49618 * ae) +
                   C49918 * ae) +
         (4 * C49816 + C49272 * C49918) * ae) /
        C49148;
    const double C20393 =
        (3 * C49819 + C49272 * C49924 + C49816 * ae +
         (3 * C49921 +
          C49272 *
              (2 * C49917 +
               C49272 * (C49372 + C49272 * (C49272 * C49383 + C49413 * ae) +
                         C49606 * ae) +
               C49611 * ae) +
          C49618 * ae) *
             C49538) /
        C49148;
    const double C20727 =
        (C49273 *
         (4 * C49924 +
          C49272 *
              (3 * C49921 +
               C49272 * (2 * C49917 +
                         C49272 * (C49372 +
                                   C49272 * (C49272 * C49383 + C49413 * ae) +
                                   C49606 * ae) +
                         C49611 * ae) +
               C49618 * ae) +
          C49918 * ae)) /
        C49148;
    const double C20999 =
        (2 * C49273 * C49924 +
         C49273 *
             (C49924 +
              (2 * C49917 +
               C49272 * (C49372 + C49272 * (C49272 * C49383 + C49413 * ae) +
                         C49606 * ae) +
               C49611 * ae) *
                  C49538)) /
        C49148;
    const double C43817 = C43782 * C133;
    const double C43811 = C43782 * C122;
    const double C43804 = C43782 * C131;
    const double C43798 = C43782 * C121;
    const double C43793 = C43782 * C129;
    const double C43787 = C43782 * C120;
    const double C43987 = C43782 * C311;
    const double C43981 = C43782 * C295;
    const double C43974 = C43782 * C303;
    const double C43968 = C43782 * C291;
    const double C44157 = C43782 * C476;
    const double C44151 = C43782 * C460;
    const double C44144 = C43782 * C468;
    const double C44138 = C43782 * C456;
    const double C44315 = C43782 * C305;
    const double C44309 = C43782 * C292;
    const double C44473 = C43782 * C470;
    const double C44467 = C43782 * C457;
    const double C44679 = C43782 * C896;
    const double C44673 = C43782 * C889;
    const double C46698 = C43782 * C309;
    const double C46692 = C43782 * C294;
    const double C46687 = C43782 * C301;
    const double C46681 = C43782 * C290;
    const double C47342 = C43782 * C894;
    const double C47336 = C43782 * C888;
    const double C47599 = C43782 * C1099;
    const double C47593 = C43782 * C1094;
    const double C47757 = C43782 * C1213;
    const double C47751 = C43782 * C1208;
    const double C48255 = C43782 * C1560;
    const double C48249 = C43782 * C1555;
    const double C43819 = C43783 * C472;
    const double C43813 = C43783 * C458;
    const double C43806 = C43783 * C470;
    const double C43800 = C43783 * C457;
    const double C43795 = C43783 * C468;
    const double C43789 = C43783 * C456;
    const double C43989 = C43783 * C1562;
    const double C43983 = C43783 * C1556;
    const double C43976 = C43783 * C896;
    const double C43970 = C43783 * C889;
    const double C44159 = C43783 * C1846;
    const double C44153 = C43783 * C1840;
    const double C44146 = C43783 * C476;
    const double C44140 = C43783 * C460;
    const double C44317 = C43783 * C898;
    const double C44311 = C43783 * C890;
    const double C44475 = C43783 * C478;
    const double C44469 = C43783 * C461;
    const double C44681 = C43783 * C1215;
    const double C44675 = C43783 * C1209;
    const double C46700 = C43783 * C1560;
    const double C46694 = C43783 * C1555;
    const double C46689 = C43783 * C894;
    const double C46683 = C43783 * C888;
    const double C47344 = C43783 * C1213;
    const double C47338 = C43783 * C1208;
    const double C47601 = C43783 * C3156;
    const double C47595 = C43783 * C3152;
    const double C47759 = C43783 * C4499;
    const double C47753 = C43783 * C4494;
    const double C48257 = C43783 * C2638;
    const double C48251 = C43783 * C2634;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50118 * C50343 +
           (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50118 * C50343 +
           ((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                C50384 +
            (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                C50385 +
            (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
             (C353 - C354) * C50250) *
                C7884) *
               C50118 * C50154) *
              C50387 +
          ((C7900 * C50384 +
            (C170 * C7885 + C171 * C50356 + C8348 * C7886 + C8349 * C50250) *
                C50385 +
            ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
             (C631 - C632) * C7886 + (C633 - C634) * C50250) *
                C7884) *
               C50118 * C50343 +
           (C8352 * C50384 +
            (C629 * C7885 + C630 * C50356 + (C352 - C351) * C7886 +
             (C354 - C353) * C50250) *
                C50385 +
            ((C632 - C631) * C7885 + (C634 - C633) * C50356 +
             (C117 * C299 - C50214 * C318) * C7886 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C7884) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C7885 +
              (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
              (C2451 - C2452) * C50250) *
                 C50384 +
             ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
              C2458 * C50250) *
                 C50385 +
             C7900 * C7884) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C7885 +
              (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
              (C3167 - C3168) * C50250) *
                 C50384 +
             ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
              C3174 * C50250) *
                 C50385 +
             C8507 * C7884) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
              (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                 C50384 +
             (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                 C50385 +
             C8352 * C7884) *
                C50344 +
            (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
              (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                 C50384 +
             (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                 C50385 +
             (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
              (C2957 - C2958) * C50250) *
                 C7884) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
              C2466 * C50250) *
                 C50384 +
             ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
              C628 * C50250) *
                 C50385 +
             C7901 * C7884) *
                C50344 +
            (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
              C3178 * C50250) *
                 C50384 +
             ((C501 - C500) * C7885 + (C503 - C502) * C50356 + C8702 * C7886 +
              C8703 * C50250) *
                 C50385 +
             ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
              (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                 C7884) *
                C50182) *
               C50343 +
           (((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                 C50384 +
             (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                 C50385 +
             (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
              (C353 - C354) * C50250) *
                 C7884) *
                C50344 +
            ((C3173 * C7885 + C3174 * C50356 + C3175 * C7886 + C3176 * C50250) *
                 C50384 +
             (C8501 * C7885 + C8502 * C50356 + (C2956 - C2955) * C7886 +
              (C2958 - C2957) * C50250) *
                 C50385 +
             ((C918 - C917) * C7885 + (C920 - C919) * C50356 +
              (C117 * C1558 - C50214 * C1565) * C7886 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C7884) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50118 * C285 +
           (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            (C627 * C7885 + C628 * C50356 + C2477 * C7886 + C2478 * C50250) *
                C7884) *
               C50118 * C286 +
           ((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
             (C2464 - C2463) * C50250) *
                C50384 +
            (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
                C50385 +
            (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
             (C2481 - C2482) * C50250) *
                C7884) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50118 * C285 +
           ((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                C50384 +
            (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                C50385 +
            ((C340 - C339) * C7885 + (C342 - C341) * C50356 +
             (C351 - C352) * C7886 + (C353 - C354) * C50250) *
                C7884) *
               C50118 * C286 +
           ((C2467 * C7885 + C2468 * C50356 + C2485 * C7886 + C2486 * C50250) *
                C50384 +
            (C2477 * C7885 + C2478 * C50356 + (C2480 - C2479) * C7886 +
             (C2482 - C2481) * C50250) *
                C50385 +
            ((C352 - C351) * C7885 + (C354 - C353) * C50356 +
             (C117 * C1097 - C50214 * C1104) * C7886 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C7884) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C7885 +
            (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
            (C2451 - C2452) * C50250) *
               C50384 +
           ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
            C2458 * C50250) *
               C50385 +
           C7900 * C7884) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
            C2466 * C50250) *
               C50384 +
           ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
            C628 * C50250) *
               C50385 +
           C7901 * C7884) *
              C50118 * C50102 * C114 +
          (C7900 * C50384 +
           (C170 * C7885 + C171 * C50356 + (C340 - C339) * C7886 +
            (C342 - C341) * C50250) *
               C50385 +
           ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
            (C631 - C632) * C7886 + (C633 - C634) * C50250) *
               C7884) *
              C50118 * C50102 * C115 +
          (C7901 * C50384 +
           (C174 * C7885 + C175 * C50356 + (C632 - C631) * C7886 +
            (C634 - C633) * C50250) *
               C50385 +
           ((C165 - C164) * C7885 + (C167 - C166) * C50356 +
            (C117 * C622 - C50214 * C623) * C7886 +
            (C117 * C624 - C50214 * C625) * C50250) *
               C7884) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            (C745 * C7885 + C746 * C50356 + (C914 - C913) * C7886 +
             (C916 - C915) * C50250) *
                C7884) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C7885 +
             (C50214 * C489 - C117 * C474) * C50356 + (C3597 - C3598) * C7886 +
             (C3599 - C3600) * C50250) *
                C50384 +
            ((C508 - C509) * C7885 + (C510 - C511) * C50356 +
             (C2651 - C2652) * C7886 + (C2653 - C2654) * C50250) *
                C50385 +
            ((C512 - C513) * C7885 + (C514 - C515) * C50356 +
             (C8194 - C8195) * C7886 + (C8196 - C8197) * C50250) *
                C7884) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C452 +
           (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
             C3178 * C50250) *
                C50384 +
            ((C501 - C500) * C7885 + (C503 - C502) * C50356 +
             (C913 - C914) * C7886 + (C915 - C916) * C50250) *
                C50385 +
            ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
             (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                C7884) *
               C453 +
           (((C509 - C508) * C7885 + (C511 - C510) * C50356 +
             (C2652 - C2651) * C7886 + (C2654 - C2653) * C50250) *
                C50384 +
            ((C513 - C512) * C7885 + (C515 - C514) * C50356 +
             (C8195 - C8194) * C7886 + (C8197 - C8196) * C50250) *
                C50385 +
            ((C517 - C516) * C7885 + (C519 - C518) * C50356 +
             (C117 * C1211 - C50214 * C1218) * C7886 +
             (C117 * C1219 - C50214 * C1223) * C50250) *
                C7884) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50344 +
           (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
             C3178 * C50250) *
                C50384 +
            ((C501 - C500) * C7885 + (C503 - C502) * C50356 +
             (C913 - C914) * C7886 + (C915 - C916) * C50250) *
                C50385 +
            ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
             (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                C7884) *
               C50182) *
              C50102 * C50387 +
          ((C7900 * C50384 +
            (C170 * C7885 + C171 * C50356 + C8348 * C7886 + C8349 * C50250) *
                C50385 +
            ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
             (C631 - C632) * C7886 + (C633 - C634) * C50250) *
                C7884) *
               C50344 +
           (C8507 * C50384 +
            (C747 * C7885 + C748 * C50356 + (C918 - C917) * C7886 +
             (C920 - C919) * C50250) *
                C50385 +
            ((C750 - C749) * C7885 + (C752 - C751) * C50356 +
             (C117 * C892 - C50214 * C901) * C7886 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C7884) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C7885 +
            (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
            (C2451 - C2452) * C50250) *
               C50384 +
           ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
            C2458 * C50250) *
               C50385 +
           C7900 * C7884) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
            C2466 * C50250) *
               C50384 +
           ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
            C628 * C50250) *
               C50385 +
           C7901 * C7884) *
              C50118 * C50102 * C114 +
          (C7900 * C50384 +
           (C170 * C7885 + C171 * C50356 + (C340 - C339) * C7886 +
            (C342 - C341) * C50250) *
               C50385 +
           ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
            (C631 - C632) * C7886 + (C633 - C634) * C50250) *
               C7884) *
              C50118 * C50102 * C115 +
          (C7901 * C50384 +
           (C174 * C7885 + C175 * C50356 + (C632 - C631) * C7886 +
            (C634 - C633) * C50250) *
               C50385 +
           ((C165 - C164) * C7885 + (C167 - C166) * C50356 +
            (C117 * C622 - C50214 * C623) * C7886 +
            (C117 * C624 - C50214 * C625) * C50250) *
               C7884) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50118 * C285 +
           (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            (C627 * C7885 + C628 * C50356 + C2477 * C7886 + C2478 * C50250) *
                C7884) *
               C50118 * C286 +
           ((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
             (C2464 - C2463) * C50250) *
                C50384 +
            (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
                C50385 +
            (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
             (C2481 - C2482) * C50250) *
                C7884) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50118 * C285 +
           ((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                C50384 +
            (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                C50385 +
            ((C340 - C339) * C7885 + (C342 - C341) * C50356 +
             (C351 - C352) * C7886 + (C353 - C354) * C50250) *
                C7884) *
               C50118 * C286 +
           ((C2467 * C7885 + C2468 * C50356 + C2485 * C7886 + C2486 * C50250) *
                C50384 +
            (C2477 * C7885 + C2478 * C50356 + (C2480 - C2479) * C7886 +
             (C2482 - C2481) * C50250) *
                C50385 +
            ((C352 - C351) * C7885 + (C354 - C353) * C50356 +
             (C117 * C1097 - C50214 * C1104) * C7886 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C7884) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50118 * C50388 +
           (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C50118 * C50389 +
           ((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
             (C2464 - C2463) * C50250) *
                C50384 +
            (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
                C50385 +
            (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
             (C2481 - C2482) * C50250) *
                C7884) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50118 * C50388 +
           ((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                C50384 +
            (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                C50385 +
            (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
             (C353 - C354) * C50250) *
                C7884) *
               C50118 * C50389 +
           ((C2467 * C7885 + C2468 * C50356 + C2485 * C7886 + C2486 * C50250) *
                C50384 +
            (C2477 * C7885 + C2478 * C50356 + (C2480 - C2479) * C7886 +
             (C2482 - C2481) * C50250) *
                C50385 +
            ((C352 - C351) * C7885 + (C354 - C353) * C50356 +
             (C117 * C1097 - C50214 * C1104) * C7886 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C7884) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50182) *
              C50388 +
          ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C50344 +
           (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
             (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                C50384 +
            (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                C50385 +
            (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
             (C2957 - C2958) * C50250) *
                C7884) *
               C50182) *
              C50389 +
          (((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
             (C2464 - C2463) * C50250) *
                C50384 +
            (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
                C50385 +
            (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
             (C2481 - C2482) * C50250) *
                C7884) *
               C50344 +
           ((C4099 * C7885 + C4100 * C50356 + (C4102 - C4101) * C7886 +
             (C4104 - C4103) * C50250) *
                C50384 +
            (C3175 * C7885 + C3176 * C50356 + (C3182 - C3181) * C7886 +
             (C3184 - C3183) * C50250) *
                C50385 +
            ((C2956 - C2955) * C7885 + (C2958 - C2957) * C50356 +
             (C117 * C3154 - C50214 * C3159) * C7886 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C7884) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C7885 +
            (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
            (C2451 - C2452) * C50250) *
               C50384 +
           ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
            C2458 * C50250) *
               C50385 +
           C7900 * C7884) *
              C50118 * C1089 +
          (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
            (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
               C50384 +
           (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
               C50385 +
           C8352 * C7884) *
              C50118 * C1090 +
          ((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
            (C2464 - C2463) * C50250) *
               C50384 +
           (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
               C50385 +
           (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
            (C2481 - C2482) * C50250) *
               C7884) *
              C50118 * C1091 +
          ((C3437 * C7885 + C3438 * C50356 + (C3440 - C3439) * C7886 +
            (C3442 - C3441) * C50250) *
               C50384 +
           (C2485 * C7885 + C2486 * C50356 + (C2474 - C2473) * C7886 +
            (C2476 - C2475) * C50250) *
               C50385 +
           ((C2480 - C2479) * C7885 + (C2482 - C2481) * C50356 +
            (C117 * C2438 - C50214 * C2443) * C7886 +
            (C117 * C2444 - C50214 * C2447) * C50250) *
               C7884) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50118 * C1018 +
           (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50118 * C1018 +
           ((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                C50384 +
            (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                C50385 +
            (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
             (C353 - C354) * C50250) *
                C7884) *
               C50118 * C50154) *
              C1021 +
          ((C7900 * C50384 +
            (C170 * C7885 + C171 * C50356 + C8348 * C7886 + C8349 * C50250) *
                C50385 +
            ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
             (C631 - C632) * C7886 + (C633 - C634) * C50250) *
                C7884) *
               C50118 * C1018 +
           (C8352 * C50384 +
            (C629 * C7885 + C630 * C50356 + (C352 - C351) * C7886 +
             (C354 - C353) * C50250) *
                C50385 +
            ((C632 - C631) * C7885 + (C634 - C633) * C50356 +
             (C117 * C299 - C50214 * C318) * C7886 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C7884) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C7885 +
             (C50214 * C489 - C117 * C474) * C50356 + (C3597 - C3598) * C7886 +
             (C3599 - C3600) * C50250) *
                C50384 +
            ((C508 - C509) * C7885 + (C510 - C511) * C50356 +
             (C2651 - C2652) * C7886 + (C2653 - C2654) * C50250) *
                C50385 +
            ((C512 - C513) * C7885 + (C514 - C515) * C50356 +
             (C8194 - C8195) * C7886 + (C8196 - C8197) * C50250) *
                C7884) *
               C454) *
              C1018 +
          ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C452 +
           (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
             (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                C50384 +
            (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                C50385 +
            (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
             (C2957 - C2958) * C50250) *
                C7884) *
               C453 +
           (((C3598 - C3597) * C7885 + (C3600 - C3599) * C50356 +
             (C3602 - C3601) * C7886 + (C3604 - C3603) * C50250) *
                C50384 +
            ((C2652 - C2651) * C7885 + (C2654 - C2653) * C50356 +
             (C2656 - C2655) * C7886 + (C2658 - C2657) * C50250) *
                C50385 +
            ((C8195 - C8194) * C7885 + (C8197 - C8196) * C50356 +
             (C117 * C2636 - C50214 * C2641) * C7886 +
             (C117 * C2642 - C50214 * C2645) * C50250) *
                C7884) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C7885 +
              (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
              (C2451 - C2452) * C50250) *
                 C50384 +
             ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
              C2458 * C50250) *
                 C50385 +
             C7900 * C7884) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C7885 +
              (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
              (C3167 - C3168) * C50250) *
                 C50384 +
             ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
              C3174 * C50250) *
                 C50385 +
             C8507 * C7884) *
                C50182) *
               C1018 +
           ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
              (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                 C50384 +
             (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                 C50385 +
             C8352 * C7884) *
                C50344 +
            (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
              (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                 C50384 +
             (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                 C50385 +
             (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
              (C2957 - C2958) * C50250) *
                 C7884) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
              C2466 * C50250) *
                 C50384 +
             ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
              C628 * C50250) *
                 C50385 +
             C7901 * C7884) *
                C50344 +
            (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
              C3178 * C50250) *
                 C50384 +
             ((C501 - C500) * C7885 + (C503 - C502) * C50356 + C8702 * C7886 +
              C8703 * C50250) *
                 C50385 +
             ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
              (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                 C7884) *
                C50182) *
               C1018 +
           (((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                 C50384 +
             (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                 C50385 +
             (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
              (C353 - C354) * C50250) *
                 C7884) *
                C50344 +
            ((C3173 * C7885 + C3174 * C50356 + C3175 * C7886 + C3176 * C50250) *
                 C50384 +
             (C8501 * C7885 + C8502 * C50356 + (C2956 - C2955) * C7886 +
              (C2958 - C2957) * C50250) *
                 C50385 +
             ((C918 - C917) * C7885 + (C920 - C919) * C50356 +
              (C117 * C1558 - C50214 * C1565) * C7886 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C7884) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50118 * C1018 +
           (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C50118 * C1018 +
           ((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                C50384 +
            (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                C50385 +
            (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
             (C353 - C354) * C50250) *
                C7884) *
               C50118 * C50154) *
              C1021 +
          ((C7900 * C50384 +
            (C170 * C7885 + C171 * C50356 + C8348 * C7886 + C8349 * C50250) *
                C50385 +
            ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
             (C631 - C632) * C7886 + (C633 - C634) * C50250) *
                C7884) *
               C50118 * C1018 +
           (C8352 * C50384 +
            (C629 * C7885 + C630 * C50356 + (C352 - C351) * C7886 +
             (C354 - C353) * C50250) *
                C50385 +
            ((C632 - C631) * C7885 + (C634 - C633) * C50356 +
             (C117 * C299 - C50214 * C318) * C7886 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C7884) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C7885 +
            (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
            (C2451 - C2452) * C50250) *
               C50384 +
           ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
            C2458 * C50250) *
               C50385 +
           C7900 * C7884) *
              C50118 * C1089 +
          (((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
            (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
               C50384 +
           (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
               C50385 +
           C8352 * C7884) *
              C50118 * C1090 +
          ((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
            (C2464 - C2463) * C50250) *
               C50384 +
           (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
               C50385 +
           (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
            (C2481 - C2482) * C50250) *
               C7884) *
              C50118 * C1091 +
          ((C3437 * C7885 + C3438 * C50356 + (C3440 - C3439) * C7886 +
            (C3442 - C3441) * C50250) *
               C50384 +
           (C2485 * C7885 + C2486 * C50356 + (C2474 - C2473) * C7886 +
            (C2476 - C2475) * C50250) *
               C50385 +
           ((C2480 - C2479) * C7885 + (C2482 - C2481) * C50356 +
            (C117 * C2438 - C50214 * C2443) * C7886 +
            (C117 * C2444 - C50214 * C2447) * C50250) *
               C7884) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C7885 +
              (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
              (C2451 - C2452) * C50250) *
                 C50384 +
             ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
              C2458 * C50250) *
                 C50385 +
             C7900 * C7884) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C7885 +
              (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
              (C3167 - C3168) * C50250) *
                 C50384 +
             ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
              C3174 * C50250) *
                 C50385 +
             C8507 * C7884) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
              (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                 C50384 +
             (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                 C50385 +
             C8352 * C7884) *
                C1669 +
            (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
              (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                 C50384 +
             (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                 C50385 +
             (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
              (C2957 - C2958) * C50250) *
                 C7884) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
              C2466 * C50250) *
                 C50384 +
             ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
              C628 * C50250) *
                 C50385 +
             C7901 * C7884) *
                C1669 +
            (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
              C3178 * C50250) *
                 C50384 +
             ((C501 - C500) * C7885 + (C503 - C502) * C50356 + C8702 * C7886 +
              C8703 * C50250) *
                 C50385 +
             ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
              (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                 C7884) *
                C50182) *
               C50343 +
           (((C2457 * C7885 + C2458 * C50356 + C2459 * C7886 + C2460 * C50250) *
                 C50384 +
             (C2805 * C7885 + C2806 * C50356 + C2807 * C7886 + C2808 * C50250) *
                 C50385 +
             (C8348 * C7885 + C8349 * C50356 + (C351 - C352) * C7886 +
              (C353 - C354) * C50250) *
                 C7884) *
                C1669 +
            ((C3173 * C7885 + C3174 * C50356 + C3175 * C7886 + C3176 * C50250) *
                 C50384 +
             (C8501 * C7885 + C8502 * C50356 + (C2956 - C2955) * C7886 +
              (C2958 - C2957) * C50250) *
                 C50385 +
             ((C918 - C917) * C7885 + (C920 - C919) * C50356 +
              (C117 * C1558 - C50214 * C1565) * C7886 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C7884) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C7885 +
             (C50214 * C489 - C117 * C474) * C50356 + (C3597 - C3598) * C7886 +
             (C3599 - C3600) * C50250) *
                C50384 +
            ((C508 - C509) * C7885 + (C510 - C511) * C50356 +
             (C2651 - C2652) * C7886 + (C2653 - C2654) * C50250) *
                C50385 +
            ((C512 - C513) * C7885 + (C514 - C515) * C50356 +
             (C8194 - C8195) * C7886 + (C8196 - C8197) * C50250) *
                C7884) *
               C2085) *
              C50343 +
          ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C50390 +
           (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
             (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                C50384 +
            (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                C50385 +
            (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
             (C2957 - C2958) * C50250) *
                C7884) *
               C50391 +
           (((C3598 - C3597) * C7885 + (C3600 - C3599) * C50356 +
             (C3602 - C3601) * C7886 + (C3604 - C3603) * C50250) *
                C50384 +
            ((C2652 - C2651) * C7885 + (C2654 - C2653) * C50356 +
             (C2656 - C2655) * C7886 + (C2658 - C2657) * C50250) *
                C50385 +
            ((C8195 - C8194) * C7885 + (C8197 - C8196) * C50356 +
             (C117 * C2636 - C50214 * C2641) * C7886 +
             (C117 * C2642 - C50214 * C2645) * C50250) *
                C7884) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C1669 +
           (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
             (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                C50384 +
            (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                C50385 +
            (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
             (C2957 - C2958) * C50250) *
                C7884) *
               C50182) *
              C286 +
          (((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
             (C2464 - C2463) * C50250) *
                C50384 +
            (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
                C50385 +
            (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
             (C2481 - C2482) * C50250) *
                C7884) *
               C1669 +
           ((C4099 * C7885 + C4100 * C50356 + (C4102 - C4101) * C7886 +
             (C4104 - C4103) * C50250) *
                C50384 +
            (C3175 * C7885 + C3176 * C50356 + (C3182 - C3181) * C7886 +
             (C3184 - C3183) * C50250) *
                C50385 +
            ((C2956 - C2955) * C7885 + (C2958 - C2957) * C50356 +
             (C117 * C3154 - C50214 * C3159) * C7886 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C7884) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C1669 +
           (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
             C3178 * C50250) *
                C50384 +
            ((C501 - C500) * C7885 + (C503 - C502) * C50356 + C8702 * C7886 +
             C8703 * C50250) *
                C50385 +
            ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
             (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                C7884) *
               C50182) *
              C50102 * C1021 +
          ((C7900 * C50384 +
            (C170 * C7885 + C171 * C50356 + C8348 * C7886 + C8349 * C50250) *
                C50385 +
            ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
             (C631 - C632) * C7886 + (C633 - C634) * C50250) *
                C7884) *
               C1669 +
           (C8507 * C50384 +
            (C747 * C7885 + C748 * C50356 + (C918 - C917) * C7886 +
             (C920 - C919) * C50250) *
                C50385 +
            ((C750 - C749) * C7885 + (C752 - C751) * C50356 +
             (C117 * C892 - C50214 * C901) * C7886 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C7884) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C7885 +
            (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
            (C2451 - C2452) * C50250) *
               C50384 +
           ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
            C2458 * C50250) *
               C50385 +
           C7900 * C7884) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C7885 +
            (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
            (C3167 - C3168) * C50250) *
               C50384 +
           ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
            C3174 * C50250) *
               C50385 +
           C8507 * C7884) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C7885 +
            (C50214 * C489 - C117 * C474) * C50356 + (C3597 - C3598) * C7886 +
            (C3599 - C3600) * C50250) *
               C50384 +
           ((C508 - C509) * C7885 + (C510 - C511) * C50356 +
            (C2651 - C2652) * C7886 + (C2653 - C2654) * C50250) *
               C50385 +
           ((C512 - C513) * C7885 + (C514 - C515) * C50356 +
            (C8194 - C8195) * C7886 + (C8196 - C8197) * C50250) *
               C7884) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C7885 +
            (C117 * C1844 - C50214 * C1851) * C50356 +
            (C117 * C4494 - C50214 * C4498) * C7886 +
            (C117 * C4499 - C50214 * C4506) * C50250) *
               C50384 +
           ((C117 * C1840 - C50214 * C1845) * C7885 +
            (C117 * C1846 - C50214 * C1852) * C50356 +
            (C117 * C4496 - C50214 * C4502) * C7886 +
            (C117 * C4503 - C50214 * C4508) * C50250) *
               C50385 +
           ((C117 * C1841 - C50214 * C1847) * C7885 +
            (C117 * C1848 - C50214 * C1853) * C50356 +
            (C117 * C5998 - C50214 * C5999) * C7886 +
            (C117 * C6000 - C50214 * C6001) * C50250) *
               C7884) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50214 * C126 - C117 * C119) * C7885 +
                     (C50214 * C140 - C117 * C127) * C50356 +
                     (C2449 - C2450) * C7886 + (C2451 - C2452) * C50250) *
                        C50384 +
                    ((C148 - C149) * C7885 + (C150 - C151) * C50356 +
                     C2457 * C7886 + C2458 * C50250) *
                        C50385 +
                    C7900 * C7884) *
                       C50390 +
                   (((C117 * C455 - C50214 * C465) * C7885 +
                     (C117 * C466 - C50214 * C485) * C50356 +
                     (C3165 - C3166) * C7886 + (C3167 - C3168) * C50250) *
                        C50384 +
                    ((C496 - C497) * C7885 + (C498 - C499) * C50356 +
                     C3173 * C7886 + C3174 * C50250) *
                        C50385 +
                    C8507 * C7884) *
                       C50391 +
                   (((C50214 * C473 - C117 * C459) * C7885 +
                     (C50214 * C489 - C117 * C474) * C50356 +
                     (C3597 - C3598) * C7886 + (C3599 - C3600) * C50250) *
                        C50384 +
                    ((C508 - C509) * C7885 + (C510 - C511) * C50356 +
                     (C2651 - C2652) * C7886 + (C2653 - C2654) * C50250) *
                        C50385 +
                    ((C512 - C513) * C7885 + (C514 - C515) * C50356 +
                     (C8194 - C8195) * C7886 + (C8196 - C8197) * C50250) *
                        C7884) *
                       C2085) *
                      C50102 * C50335 +
                  ((((C149 - C148) * C7885 + (C151 - C150) * C50356 +
                     C2465 * C7886 + C2466 * C50250) *
                        C50384 +
                    ((C153 - C152) * C7885 + (C155 - C154) * C50356 +
                     C627 * C7886 + C628 * C50250) *
                        C50385 +
                    C7901 * C7884) *
                       C50390 +
                   (((C497 - C496) * C7885 + (C499 - C498) * C50356 +
                     C3177 * C7886 + C3178 * C50250) *
                        C50384 +
                    ((C501 - C500) * C7885 + (C503 - C502) * C50356 +
                     C8702 * C7886 + C8703 * C50250) *
                        C50385 +
                    ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
                     (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                        C7884) *
                       C50391 +
                   (((C509 - C508) * C7885 + (C511 - C510) * C50356 +
                     (C2652 - C2651) * C7886 + (C2654 - C2653) * C50250) *
                        C50384 +
                    ((C513 - C512) * C7885 + (C515 - C514) * C50356 +
                     (C8195 - C8194) * C7886 + (C8197 - C8196) * C50250) *
                        C50385 +
                    ((C517 - C516) * C7885 + (C519 - C518) * C50356 +
                     (C117 * C1211 - C50214 * C1218) * C7886 +
                     (C117 * C1219 - C50214 * C1223) * C50250) *
                        C7884) *
                       C2085) *
                      C50102 * C50089)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C7885 + (C151 - C150) * C50356 + C2465 * C7886 +
             C2466 * C50250) *
                C50384 +
            ((C153 - C152) * C7885 + (C155 - C154) * C50356 + C627 * C7886 +
             C628 * C50250) *
                C50385 +
            C7901 * C7884) *
               C1669 +
           (((C497 - C496) * C7885 + (C499 - C498) * C50356 + C3177 * C7886 +
             C3178 * C50250) *
                C50384 +
            ((C501 - C500) * C7885 + (C503 - C502) * C50356 + C8702 * C7886 +
             C8703 * C50250) *
                C50385 +
            ((C505 - C504) * C7885 + (C507 - C506) * C50356 +
             (C917 - C918) * C7886 + (C919 - C920) * C50250) *
                C7884) *
               C50182) *
              C50102 * C1021 +
          ((C7900 * C50384 +
            (C170 * C7885 + C171 * C50356 + C8348 * C7886 + C8349 * C50250) *
                C50385 +
            ((C161 - C160) * C7885 + (C163 - C162) * C50356 +
             (C631 - C632) * C7886 + (C633 - C634) * C50250) *
                C7884) *
               C1669 +
           (C8507 * C50384 +
            (C747 * C7885 + C748 * C50356 + (C918 - C917) * C7886 +
             (C920 - C919) * C50250) *
                C50385 +
            ((C750 - C749) * C7885 + (C752 - C751) * C50356 +
             (C117 * C892 - C50214 * C901) * C7886 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C7884) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C7885 +
             (C50214 * C140 - C117 * C127) * C50356 + (C2449 - C2450) * C7886 +
             (C2451 - C2452) * C50250) *
                C50384 +
            ((C148 - C149) * C7885 + (C150 - C151) * C50356 + C2457 * C7886 +
             C2458 * C50250) *
                C50385 +
            C7900 * C7884) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C7885 +
             (C117 * C466 - C50214 * C485) * C50356 + (C3165 - C3166) * C7886 +
             (C3167 - C3168) * C50250) *
                C50384 +
            ((C496 - C497) * C7885 + (C498 - C499) * C50356 + C3173 * C7886 +
             C3174 * C50250) *
                C50385 +
            C8507 * C7884) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C7885 + (C2452 - C2451) * C50356 +
             (C2454 - C2453) * C7886 + (C2456 - C2455) * C50250) *
                C50384 +
            (C2465 * C7885 + C2466 * C50356 + C2467 * C7886 + C2468 * C50250) *
                C50385 +
            C8352 * C7884) *
               C1669 +
           (((C3166 - C3165) * C7885 + (C3168 - C3167) * C50356 +
             (C3170 - C3169) * C7886 + (C3172 - C3171) * C50250) *
                C50384 +
            (C3177 * C7885 + C3178 * C50356 + C3179 * C7886 + C3180 * C50250) *
                C50385 +
            (C8702 * C7885 + C8703 * C50356 + (C2955 - C2956) * C7886 +
             (C2957 - C2958) * C50250) *
                C7884) *
               C50182) *
              C286 +
          (((C2483 * C7885 + C2484 * C50356 + (C2462 - C2461) * C7886 +
             (C2464 - C2463) * C50250) *
                C50384 +
            (C2459 * C7885 + C2460 * C50356 + C2487 * C7886 + C2488 * C50250) *
                C50385 +
            (C2807 * C7885 + C2808 * C50356 + (C2479 - C2480) * C7886 +
             (C2481 - C2482) * C50250) *
                C7884) *
               C1669 +
           ((C4099 * C7885 + C4100 * C50356 + (C4102 - C4101) * C7886 +
             (C4104 - C4103) * C50250) *
                C50384 +
            (C3175 * C7885 + C3176 * C50356 + (C3182 - C3181) * C7886 +
             (C3184 - C3183) * C50250) *
                C50385 +
            ((C2956 - C2955) * C7885 + (C2958 - C2957) * C50356 +
             (C117 * C3154 - C50214 * C3159) * C7886 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C7884) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50118 * C50343 +
           (((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50118 * C50343 +
           ((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
             C13623 * C50250) *
                C2285 +
            (C14024 * C7885 + C14025 * C50356 +
             (C10778 - C10779 + C10780 - C10781) * C7886 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          (((C10598 * C7885 + C10599 * C50356 + C14024 * C7886 +
             C14025 * C50250) *
                C2285 +
            ((C10575 - C10574 + C10577 - C10576) * C7885 +
             (C10579 - C10578 + C10581 - C10580) * C50356 +
             (C11114 - C11115 + C11116 - C11117) * C7886 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50118 * C50343 +
           ((C11122 * C7885 + C11123 * C50356 +
             (C10779 - C10778 + C10781 - C10780) * C7886 +
             (C10783 - C10782 + C10785 - C10784) * C50250) *
                C2285 +
            ((C11115 - C11114 + C11117 - C11116) * C7885 +
             (C11119 - C11118 + C11121 - C11120) * C50356 +
             (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C7886 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C7885 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C50356 +
              (C13576 - C13577 + C13578 - C13579) * C7886 +
              (C13580 - C13581 + C13582 - C13583) * C50250) *
                 C2285 +
             ((C10558 - C10559 + C10560 - C10561) * C7885 +
              (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
              C13617 * C50250) *
                 C50062) *
                C50344 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C7885 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C50356 +
              (C14478 - C14479 + C14480 - C14481) * C7886 +
              (C14482 - C14483 + C14484 - C14485) * C50250) *
                 C2285 +
             ((C10932 - C10933 + C10934 - C10935) * C7885 +
              (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
              C14503 * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C13577 - C13576 + C13579 - C13578) * C7885 +
              (C13581 - C13580 + C13583 - C13582) * C50356 +
              (C13588 - C13589 + C13590 - C13591) * C7886 +
              (C13592 - C13593 + C13594 - C13595) * C50250) *
                 C2285 +
             (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
              C13621 * C50250) *
                 C50062) *
                C50344 +
            (((C14479 - C14478 + C14481 - C14480) * C7885 +
              (C14483 - C14482 + C14485 - C14484) * C50356 +
              (C50357 * C1559 - C10555 * C1555 + C50278 * C2637 -
               C10556 * C2634) *
                  C7886 +
              (C50357 * C1567 - C10555 * C1560 + C50278 * C2643 -
               C10556 * C2638) *
                  C50250) *
                 C2285 +
             (C14504 * C7885 + C14505 * C50356 +
              (C14494 - C14495 + C14496 - C14497) * C7886 +
              (C14498 - C14499 + C14500 - C14501) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C10559 - C10558 + C10561 - C10560) * C7885 +
              (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
              C13619 * C50250) *
                 C2285 +
             ((C10567 - C10566 + C10569 - C10568) * C7885 +
              (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
              C11123 * C50250) *
                 C50062) *
                C50344 +
            (((C10933 - C10932 + C10935 - C10934) * C7885 +
              (C10937 - C10936 + C10939 - C10938) * C50356 + C14504 * C7886 +
              C14505 * C50250) *
                 C2285 +
             ((C10941 - C10940 + C10943 - C10942) * C7885 +
              (C10945 - C10944 + C10947 - C10946) * C50356 +
              (C11492 - C11493 + C11494 - C11495) * C7886 +
              (C11496 - C11497 + C11498 - C11499) * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           (((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
              C13623 * C50250) *
                 C2285 +
             (C14024 * C7885 + C14025 * C50356 +
              (C10778 - C10779 + C10780 - C10781) * C7886 +
              (C10782 - C10783 + C10784 - C10785) * C50250) *
                 C50062) *
                C50344 +
            ((C14502 * C7885 + C14503 * C50356 +
              (C14495 - C14494 + C14497 - C14496) * C7886 +
              (C14499 - C14498 + C14501 - C14500) * C50250) *
                 C2285 +
             ((C11493 - C11492 + C11495 - C11494) * C7885 +
              (C11497 - C11496 + C11499 - C11498) * C50356 +
              (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
               C50278 * C2641) *
                  C7886 +
              (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50118 * C285 +
           (((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50118 * C286 +
           (((C13589 - C13588 + C13591 - C13590) * C7885 +
             (C13593 - C13592 + C13595 - C13594) * C50356 +
             (C50357 * C1098 - C10555 * C1094 + C50278 * C3155 -
              C10556 * C3152) *
                 C7886 +
             (C50357 * C1106 - C10555 * C1099 + C50278 * C3161 -
              C10556 * C3156) *
                 C50250) *
                C2285 +
            (C13622 * C7885 + C13623 * C50356 +
             (C13608 - C13609 + C13610 - C13611) * C7886 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50118 * C285 +
           ((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
             C13623 * C50250) *
                C2285 +
            ((C10763 - C10762 + C10765 - C10764) * C7885 +
             (C10767 - C10766 + C10769 - C10768) * C50356 +
             (C10778 - C10779 + C10780 - C10781) * C7886 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C286 +
           ((C13620 * C7885 + C13621 * C50356 +
             (C13609 - C13608 + C13611 - C13610) * C7886 +
             (C13613 - C13612 + C13615 - C13614) * C50250) *
                C2285 +
            ((C10779 - C10778 + C10781 - C10780) * C7885 +
             (C10783 - C10782 + C10785 - C10784) * C50356 +
             (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
              C50278 * C3159) *
                 C7886 +
             (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C7885 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50356 +
            (C50357 * C300 - C10555 * C290 + C50278 * C893 - C10556 * C888) *
                C7886 +
            (C50357 * C320 - C10555 * C301 + C50278 * C903 - C10556 * C894) *
                C50250) *
               C2285 +
           ((C10558 - C10559 + C10560 - C10561) * C7885 +
            (C10562 - C10563 + C10564 - C10565) * C50356 +
            (C10755 - C10754 + C10757 - C10756) * C7886 +
            (C10759 - C10758 + C10761 - C10760) * C50250) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C10559 - C10558 + C10561 - C10560) * C7885 +
            (C10563 - C10562 + C10565 - C10564) * C50356 +
            (C10754 - C10755 + C10756 - C10757) * C7886 +
            (C10758 - C10759 + C10760 - C10761) * C50250) *
               C2285 +
           ((C10567 - C10566 + C10569 - C10568) * C7885 +
            (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
            C11123 * C50250) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C10598 * C7885 + C10599 * C50356 +
            (C10763 - C10762 + C10765 - C10764) * C7886 +
            (C10767 - C10766 + C10769 - C10768) * C50250) *
               C2285 +
           ((C10575 - C10574 + C10577 - C10576) * C7885 +
            (C10579 - C10578 + C10581 - C10580) * C50356 +
            (C11114 - C11115 + C11116 - C11117) * C7886 +
            (C11118 - C11119 + C11120 - C11121) * C50250) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C10600 * C7885 + C10601 * C50356 +
            (C11115 - C11114 + C11117 - C11116) * C7886 +
            (C11119 - C11118 + C11121 - C11120) * C50250) *
               C2285 +
           ((C10583 - C10582 + C10585 - C10584) * C7885 +
            (C10587 - C10586 + C10589 - C10588) * C50356 +
            (C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                C7886 +
            (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                C50250) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C452 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C10555 * C888 - C50357 * C893 + C10556 * C1208 - C50278 * C1212) *
                 C7886 +
             (C10555 * C894 - C50357 * C903 + C10556 * C1213 - C50278 * C1220) *
                 C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 +
             (C11485 - C11484 + C11487 - C11486) * C7886 +
             (C11489 - C11488 + C11491 - C11490) * C50250) *
                C50062) *
               C453 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C7885 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50356 +
             (C50357 * C1212 - C10555 * C1208 + C50278 * C4498 -
              C10556 * C4494) *
                 C7886 +
             (C50357 * C1220 - C10555 * C1213 + C50278 * C4506 -
              C10556 * C4499) *
                 C50250) *
                C2285 +
            ((C10948 - C10949 + C10950 - C10951) * C7885 +
             (C10952 - C10953 + C10954 - C10955) * C50356 +
             (C13818 - C13819 + C13820 - C13821) * C7886 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C452 +
           (((C10933 - C10932 + C10935 - C10934) * C7885 +
             (C10937 - C10936 + C10939 - C10938) * C50356 +
             (C11484 - C11485 + C11486 - C11487) * C7886 +
             (C11488 - C11489 + C11490 - C11491) * C50250) *
                C2285 +
            ((C10941 - C10940 + C10943 - C10942) * C7885 +
             (C10945 - C10944 + C10947 - C10946) * C50356 +
             (C11492 - C11493 + C11494 - C11495) * C7886 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C453 +
           (((C10949 - C10948 + C10951 - C10950) * C7885 +
             (C10953 - C10952 + C10955 - C10954) * C50356 +
             (C13819 - C13818 + C13821 - C13820) * C7886 +
             (C13823 - C13822 + C13825 - C13824) * C50250) *
                C2285 +
            ((C10957 - C10956 + C10959 - C10958) * C7885 +
             (C10961 - C10960 + C10963 - C10962) * C50356 +
             (C10555 * C1210 - C50357 * C1216 + C10556 * C5998 -
              C50278 * C5999) *
                 C7886 +
             (C10555 * C1217 - C50357 * C1222 + C10556 * C6000 -
              C50278 * C6001) *
                 C50250) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50344 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C10555 * C888 - C50357 * C893 + C10556 * C1208 - C50278 * C1212) *
                 C7886 +
             (C10555 * C894 - C50357 * C903 + C10556 * C1213 - C50278 * C1220) *
                 C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 +
             (C11485 - C11484 + C11487 - C11486) * C7886 +
             (C11489 - C11488 + C11491 - C11490) * C50250) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50344 +
           (((C10933 - C10932 + C10935 - C10934) * C7885 +
             (C10937 - C10936 + C10939 - C10938) * C50356 +
             (C11484 - C11485 + C11486 - C11487) * C7886 +
             (C11488 - C11489 + C11490 - C11491) * C50250) *
                C2285 +
            ((C10941 - C10940 + C10943 - C10942) * C7885 +
             (C10945 - C10944 + C10947 - C10946) * C50356 +
             (C11492 - C11493 + C11494 - C11495) * C7886 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          (((C10598 * C7885 + C10599 * C50356 + C14024 * C7886 +
             C14025 * C50250) *
                C2285 +
            ((C10575 - C10574 + C10577 - C10576) * C7885 +
             (C10579 - C10578 + C10581 - C10580) * C50356 +
             (C11114 - C11115 + C11116 - C11117) * C7886 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50344 +
           ((C11285 * C7885 + C11286 * C50356 +
             (C11493 - C11492 + C11495 - C11494) * C7886 +
             (C11497 - C11496 + C11499 - C11498) * C50250) *
                C2285 +
            ((C11278 - C11277 + C11280 - C11279) * C7885 +
             (C11282 - C11281 + C11284 - C11283) * C50356 +
             (C10555 * C891 - C50357 * C899 + C10556 * C1211 - C50278 * C1218) *
                 C7886 +
             (C10555 * C900 - C50357 * C906 + C10556 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C7885 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50356 +
            (C50357 * C300 - C10555 * C290 + C50278 * C893 - C10556 * C888) *
                C7886 +
            (C50357 * C320 - C10555 * C301 + C50278 * C903 - C10556 * C894) *
                C50250) *
               C2285 +
           ((C10558 - C10559 + C10560 - C10561) * C7885 +
            (C10562 - C10563 + C10564 - C10565) * C50356 +
            (C10755 - C10754 + C10757 - C10756) * C7886 +
            (C10759 - C10758 + C10761 - C10760) * C50250) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C10559 - C10558 + C10561 - C10560) * C7885 +
            (C10563 - C10562 + C10565 - C10564) * C50356 +
            (C10754 - C10755 + C10756 - C10757) * C7886 +
            (C10758 - C10759 + C10760 - C10761) * C50250) *
               C2285 +
           ((C10567 - C10566 + C10569 - C10568) * C7885 +
            (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
            C11123 * C50250) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C10598 * C7885 + C10599 * C50356 +
            (C10763 - C10762 + C10765 - C10764) * C7886 +
            (C10767 - C10766 + C10769 - C10768) * C50250) *
               C2285 +
           ((C10575 - C10574 + C10577 - C10576) * C7885 +
            (C10579 - C10578 + C10581 - C10580) * C50356 +
            (C11114 - C11115 + C11116 - C11117) * C7886 +
            (C11118 - C11119 + C11120 - C11121) * C50250) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C10600 * C7885 + C10601 * C50356 +
            (C11115 - C11114 + C11117 - C11116) * C7886 +
            (C11119 - C11118 + C11121 - C11120) * C50250) *
               C2285 +
           ((C10583 - C10582 + C10585 - C10584) * C7885 +
            (C10587 - C10586 + C10589 - C10588) * C50356 +
            (C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                C7886 +
            (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                C50250) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50118 * C285 +
           (((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50118 * C286 +
           (((C13589 - C13588 + C13591 - C13590) * C7885 +
             (C13593 - C13592 + C13595 - C13594) * C50356 +
             (C50357 * C1098 - C10555 * C1094 + C50278 * C3155 -
              C10556 * C3152) *
                 C7886 +
             (C50357 * C1106 - C10555 * C1099 + C50278 * C3161 -
              C10556 * C3156) *
                 C50250) *
                C2285 +
            (C13622 * C7885 + C13623 * C50356 +
             (C13608 - C13609 + C13610 - C13611) * C7886 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50118 * C285 +
           ((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
             C13623 * C50250) *
                C2285 +
            ((C10763 - C10762 + C10765 - C10764) * C7885 +
             (C10767 - C10766 + C10769 - C10768) * C50356 +
             (C10778 - C10779 + C10780 - C10781) * C7886 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C286 +
           ((C13620 * C7885 + C13621 * C50356 +
             (C13609 - C13608 + C13611 - C13610) * C7886 +
             (C13613 - C13612 + C13615 - C13614) * C50250) *
                C2285 +
            ((C10779 - C10778 + C10781 - C10780) * C7885 +
             (C10783 - C10782 + C10785 - C10784) * C50356 +
             (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
              C50278 * C3159) *
                 C7886 +
             (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50118 * C50388 +
           (((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50389 +
           (((C13589 - C13588 + C13591 - C13590) * C7885 +
             (C13593 - C13592 + C13595 - C13594) * C50356 +
             (C14830 - C14831 + C14832 - C14833) * C7886 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C2285 +
            (C13622 * C7885 + C13623 * C50356 +
             (C13608 - C13609 + C13610 - C13611) * C7886 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50118 * C50388 +
           ((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
             C13623 * C50250) *
                C2285 +
            (C14024 * C7885 + C14025 * C50356 +
             (C10778 - C10779 + C10780 - C10781) * C7886 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50389 +
           ((C13620 * C7885 + C13621 * C50356 +
             (C13609 - C13608 + C13611 - C13610) * C7886 +
             (C13613 - C13612 + C13615 - C13614) * C50250) *
                C2285 +
            ((C10779 - C10778 + C10781 - C10780) * C7885 +
             (C10783 - C10782 + C10785 - C10784) * C50356 +
             (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
              C50278 * C3159) *
                 C7886 +
             (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50344 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50388 +
          ((((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50344 +
           (((C14479 - C14478 + C14481 - C14480) * C7885 +
             (C14483 - C14482 + C14485 - C14484) * C50356 +
             (C15686 - C15687 + C15688 - C15689) * C7886 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C2285 +
            (C14504 * C7885 + C14505 * C50356 +
             (C14494 - C14495 + C14496 - C14497) * C7886 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50182) *
              C50389 +
          ((((C13589 - C13588 + C13591 - C13590) * C7885 +
             (C13593 - C13592 + C13595 - C13594) * C50356 +
             (C14830 - C14831 + C14832 - C14833) * C7886 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C2285 +
            (C13622 * C7885 + C13623 * C50356 +
             (C13608 - C13609 + C13610 - C13611) * C7886 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50344 +
           (((C15687 - C15686 + C15689 - C15688) * C7885 +
             (C15691 - C15690 + C15693 - C15692) * C50356 +
             (C10555 * C3152 - C50357 * C3155 + C10556 * C3588 -
              C50278 * C3590) *
                 C7886 +
             (C10555 * C3156 - C50357 * C3161 + C10556 * C3591 -
              C50278 * C3594) *
                 C50250) *
                C2285 +
            ((C14495 - C14494 + C14497 - C14496) * C7885 +
             (C14499 - C14498 + C14501 - C14500) * C50356 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C7886 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C7885 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50356 +
            (C13576 - C13577 + C13578 - C13579) * C7886 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C2285 +
           ((C10558 - C10559 + C10560 - C10561) * C7885 +
            (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
            C13617 * C50250) *
               C50062) *
              C50118 * C1089 +
          (((C13577 - C13576 + C13579 - C13578) * C7885 +
            (C13581 - C13580 + C13583 - C13582) * C50356 +
            (C13588 - C13589 + C13590 - C13591) * C7886 +
            (C13592 - C13593 + C13594 - C13595) * C50250) *
               C2285 +
           (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
            C13621 * C50250) *
               C50062) *
              C50118 * C1090 +
          (((C13589 - C13588 + C13591 - C13590) * C7885 +
            (C13593 - C13592 + C13595 - C13594) * C50356 +
            (C14830 - C14831 + C14832 - C14833) * C7886 +
            (C14834 - C14835 + C14836 - C14837) * C50250) *
               C2285 +
           (C13622 * C7885 + C13623 * C50356 +
            (C13608 - C13609 + C13610 - C13611) * C7886 +
            (C13612 - C13613 + C13614 - C13615) * C50250) *
               C50062) *
              C50118 * C1091 +
          (((C14831 - C14830 + C14833 - C14832) * C7885 +
            (C14835 - C14834 + C14837 - C14836) * C50356 +
            (C10555 * C2436 - C50357 * C2439 + C10556 * C4090 -
             C50278 * C4092) *
                C7886 +
            (C10555 * C2440 - C50357 * C2445 + C10556 * C4093 -
             C50278 * C4096) *
                C50250) *
               C2285 +
           ((C13609 - C13608 + C13611 - C13610) * C7885 +
            (C13613 - C13612 + C13615 - C13614) * C50356 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C7886 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C50250) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50118 * C1018 +
           (((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
             C13623 * C50250) *
                C2285 +
            (C14024 * C7885 + C14025 * C50356 +
             (C10778 - C10779 + C10780 - C10781) * C7886 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C10598 * C7885 + C10599 * C50356 + C14024 * C7886 +
             C14025 * C50250) *
                C2285 +
            ((C10575 - C10574 + C10577 - C10576) * C7885 +
             (C10579 - C10578 + C10581 - C10580) * C50356 +
             (C11114 - C11115 + C11116 - C11117) * C7886 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C11122 * C7885 + C11123 * C50356 +
             (C10779 - C10778 + C10781 - C10780) * C7886 +
             (C10783 - C10782 + C10785 - C10784) * C50250) *
                C2285 +
            ((C11115 - C11114 + C11117 - C11116) * C7885 +
             (C11119 - C11118 + C11121 - C11120) * C50356 +
             (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C7886 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C452 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C453 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C7885 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50356 +
             (C15032 - C15033 + C15034 - C15035) * C7886 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C2285 +
            ((C10948 - C10949 + C10950 - C10951) * C7885 +
             (C10952 - C10953 + C10954 - C10955) * C50356 +
             (C13818 - C13819 + C13820 - C13821) * C7886 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C454) *
              C1018 +
          ((((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C452 +
           (((C14479 - C14478 + C14481 - C14480) * C7885 +
             (C14483 - C14482 + C14485 - C14484) * C50356 +
             (C50357 * C1559 - C10555 * C1555 + C50278 * C2637 -
              C10556 * C2634) *
                 C7886 +
             (C50357 * C1567 - C10555 * C1560 + C50278 * C2643 -
              C10556 * C2638) *
                 C50250) *
                C2285 +
            (C14504 * C7885 + C14505 * C50356 +
             (C14494 - C14495 + C14496 - C14497) * C7886 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C453 +
           (((C15033 - C15032 + C15035 - C15034) * C7885 +
             (C15037 - C15036 + C15039 - C15038) * C50356 +
             (C10555 * C2634 - C50357 * C2637 + C10556 * C4495 -
              C50278 * C4500) *
                 C7886 +
             (C10555 * C2638 - C50357 * C2643 + C10556 * C4501 -
              C50278 * C4507) *
                 C50250) *
                C2285 +
            ((C13819 - C13818 + C13821 - C13820) * C7885 +
             (C13823 - C13822 + C13825 - C13824) * C50356 +
             (C10555 * C2635 - C50357 * C2639 + C10556 * C4497 -
              C50278 * C4504) *
                 C7886 +
             (C10555 * C2640 - C50357 * C2644 + C10556 * C4505 -
              C50278 * C4509) *
                 C50250) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C7885 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C50356 +
              (C13576 - C13577 + C13578 - C13579) * C7886 +
              (C13580 - C13581 + C13582 - C13583) * C50250) *
                 C2285 +
             ((C10558 - C10559 + C10560 - C10561) * C7885 +
              (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
              C13617 * C50250) *
                 C50062) *
                C50344 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C7885 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C50356 +
              (C14478 - C14479 + C14480 - C14481) * C7886 +
              (C14482 - C14483 + C14484 - C14485) * C50250) *
                 C2285 +
             ((C10932 - C10933 + C10934 - C10935) * C7885 +
              (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
              C14503 * C50250) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C13577 - C13576 + C13579 - C13578) * C7885 +
              (C13581 - C13580 + C13583 - C13582) * C50356 +
              (C13588 - C13589 + C13590 - C13591) * C7886 +
              (C13592 - C13593 + C13594 - C13595) * C50250) *
                 C2285 +
             (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
              C13621 * C50250) *
                 C50062) *
                C50344 +
            (((C14479 - C14478 + C14481 - C14480) * C7885 +
              (C14483 - C14482 + C14485 - C14484) * C50356 +
              (C50357 * C1559 - C10555 * C1555 + C50278 * C2637 -
               C10556 * C2634) *
                  C7886 +
              (C50357 * C1567 - C10555 * C1560 + C50278 * C2643 -
               C10556 * C2638) *
                  C50250) *
                 C2285 +
             (C14504 * C7885 + C14505 * C50356 +
              (C14494 - C14495 + C14496 - C14497) * C7886 +
              (C14498 - C14499 + C14500 - C14501) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C10559 - C10558 + C10561 - C10560) * C7885 +
              (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
              C13619 * C50250) *
                 C2285 +
             ((C10567 - C10566 + C10569 - C10568) * C7885 +
              (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
              C11123 * C50250) *
                 C50062) *
                C50344 +
            (((C10933 - C10932 + C10935 - C10934) * C7885 +
              (C10937 - C10936 + C10939 - C10938) * C50356 + C14504 * C7886 +
              C14505 * C50250) *
                 C2285 +
             ((C10941 - C10940 + C10943 - C10942) * C7885 +
              (C10945 - C10944 + C10947 - C10946) * C50356 +
              (C11492 - C11493 + C11494 - C11495) * C7886 +
              (C11496 - C11497 + C11498 - C11499) * C50250) *
                 C50062) *
                C50182) *
               C1018 +
           (((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
              C13623 * C50250) *
                 C2285 +
             (C14024 * C7885 + C14025 * C50356 +
              (C10778 - C10779 + C10780 - C10781) * C7886 +
              (C10782 - C10783 + C10784 - C10785) * C50250) *
                 C50062) *
                C50344 +
            ((C14502 * C7885 + C14503 * C50356 +
              (C14495 - C14494 + C14497 - C14496) * C7886 +
              (C14499 - C14498 + C14501 - C14500) * C50250) *
                 C2285 +
             ((C11493 - C11492 + C11495 - C11494) * C7885 +
              (C11497 - C11496 + C11499 - C11498) * C50356 +
              (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
               C50278 * C2641) *
                  C7886 +
              (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50118 * C1018 +
           (((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
             C13623 * C50250) *
                C2285 +
            (C14024 * C7885 + C14025 * C50356 +
             (C10778 - C10779 + C10780 - C10781) * C7886 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C10598 * C7885 + C10599 * C50356 + C14024 * C7886 +
             C14025 * C50250) *
                C2285 +
            ((C10575 - C10574 + C10577 - C10576) * C7885 +
             (C10579 - C10578 + C10581 - C10580) * C50356 +
             (C11114 - C11115 + C11116 - C11117) * C7886 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C11122 * C7885 + C11123 * C50356 +
             (C10779 - C10778 + C10781 - C10780) * C7886 +
             (C10783 - C10782 + C10785 - C10784) * C50250) *
                C2285 +
            ((C11115 - C11114 + C11117 - C11116) * C7885 +
             (C11119 - C11118 + C11121 - C11120) * C50356 +
             (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C7886 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C7885 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50356 +
            (C13576 - C13577 + C13578 - C13579) * C7886 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C2285 +
           ((C10558 - C10559 + C10560 - C10561) * C7885 +
            (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
            C13617 * C50250) *
               C50062) *
              C50118 * C1089 +
          (((C13577 - C13576 + C13579 - C13578) * C7885 +
            (C13581 - C13580 + C13583 - C13582) * C50356 +
            (C13588 - C13589 + C13590 - C13591) * C7886 +
            (C13592 - C13593 + C13594 - C13595) * C50250) *
               C2285 +
           (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
            C13621 * C50250) *
               C50062) *
              C50118 * C1090 +
          (((C13589 - C13588 + C13591 - C13590) * C7885 +
            (C13593 - C13592 + C13595 - C13594) * C50356 +
            (C14830 - C14831 + C14832 - C14833) * C7886 +
            (C14834 - C14835 + C14836 - C14837) * C50250) *
               C2285 +
           (C13622 * C7885 + C13623 * C50356 +
            (C13608 - C13609 + C13610 - C13611) * C7886 +
            (C13612 - C13613 + C13614 - C13615) * C50250) *
               C50062) *
              C50118 * C1091 +
          (((C14831 - C14830 + C14833 - C14832) * C7885 +
            (C14835 - C14834 + C14837 - C14836) * C50356 +
            (C10555 * C2436 - C50357 * C2439 + C10556 * C4090 -
             C50278 * C4092) *
                C7886 +
            (C10555 * C2440 - C50357 * C2445 + C10556 * C4093 -
             C50278 * C4096) *
                C50250) *
               C2285 +
           ((C13609 - C13608 + C13611 - C13610) * C7885 +
            (C13613 - C13612 + C13615 - C13614) * C50356 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C7886 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C50250) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C7885 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C50356 +
              (C13576 - C13577 + C13578 - C13579) * C7886 +
              (C13580 - C13581 + C13582 - C13583) * C50250) *
                 C2285 +
             ((C10558 - C10559 + C10560 - C10561) * C7885 +
              (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
              C13617 * C50250) *
                 C50062) *
                C1669 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C7885 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C50356 +
              (C14478 - C14479 + C14480 - C14481) * C7886 +
              (C14482 - C14483 + C14484 - C14485) * C50250) *
                 C2285 +
             ((C10932 - C10933 + C10934 - C10935) * C7885 +
              (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
              C14503 * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C13577 - C13576 + C13579 - C13578) * C7885 +
              (C13581 - C13580 + C13583 - C13582) * C50356 +
              (C13588 - C13589 + C13590 - C13591) * C7886 +
              (C13592 - C13593 + C13594 - C13595) * C50250) *
                 C2285 +
             (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
              C13621 * C50250) *
                 C50062) *
                C1669 +
            (((C14479 - C14478 + C14481 - C14480) * C7885 +
              (C14483 - C14482 + C14485 - C14484) * C50356 +
              (C15686 - C15687 + C15688 - C15689) * C7886 +
              (C15690 - C15691 + C15692 - C15693) * C50250) *
                 C2285 +
             (C14504 * C7885 + C14505 * C50356 +
              (C14494 - C14495 + C14496 - C14497) * C7886 +
              (C14498 - C14499 + C14500 - C14501) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C10559 - C10558 + C10561 - C10560) * C7885 +
              (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
              C13619 * C50250) *
                 C2285 +
             ((C10567 - C10566 + C10569 - C10568) * C7885 +
              (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
              C11123 * C50250) *
                 C50062) *
                C1669 +
            (((C10933 - C10932 + C10935 - C10934) * C7885 +
              (C10937 - C10936 + C10939 - C10938) * C50356 + C14504 * C7886 +
              C14505 * C50250) *
                 C2285 +
             ((C10941 - C10940 + C10943 - C10942) * C7885 +
              (C10945 - C10944 + C10947 - C10946) * C50356 +
              (C11492 - C11493 + C11494 - C11495) * C7886 +
              (C11496 - C11497 + C11498 - C11499) * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           (((C13616 * C7885 + C13617 * C50356 + C13622 * C7886 +
              C13623 * C50250) *
                 C2285 +
             (C14024 * C7885 + C14025 * C50356 +
              (C10778 - C10779 + C10780 - C10781) * C7886 +
              (C10782 - C10783 + C10784 - C10785) * C50250) *
                 C50062) *
                C1669 +
            ((C14502 * C7885 + C14503 * C50356 +
              (C14495 - C14494 + C14497 - C14496) * C7886 +
              (C14499 - C14498 + C14501 - C14500) * C50250) *
                 C2285 +
             ((C11493 - C11492 + C11495 - C11494) * C7885 +
              (C11497 - C11496 + C11499 - C11498) * C50356 +
              (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
               C50278 * C2641) *
                  C7886 +
              (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50390 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50391 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C7885 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50356 +
             (C15032 - C15033 + C15034 - C15035) * C7886 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C2285 +
            ((C10948 - C10949 + C10950 - C10951) * C7885 +
             (C10952 - C10953 + C10954 - C10955) * C50356 +
             (C13818 - C13819 + C13820 - C13821) * C7886 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C2085) *
              C50343 +
          ((((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C50390 +
           (((C14479 - C14478 + C14481 - C14480) * C7885 +
             (C14483 - C14482 + C14485 - C14484) * C50356 +
             (C15686 - C15687 + C15688 - C15689) * C7886 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C2285 +
            (C14504 * C7885 + C14505 * C50356 +
             (C14494 - C14495 + C14496 - C14497) * C7886 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50391 +
           (((C15033 - C15032 + C15035 - C15034) * C7885 +
             (C15037 - C15036 + C15039 - C15038) * C50356 +
             (C10555 * C2634 - C50357 * C2637 + C10556 * C4495 -
              C50278 * C4500) *
                 C7886 +
             (C10555 * C2638 - C50357 * C2643 + C10556 * C4501 -
              C50278 * C4507) *
                 C50250) *
                C2285 +
            ((C13819 - C13818 + C13821 - C13820) * C7885 +
             (C13823 - C13822 + C13825 - C13824) * C50356 +
             (C10555 * C2635 - C50357 * C2639 + C10556 * C4497 -
              C50278 * C4504) *
                 C7886 +
             (C10555 * C2640 - C50357 * C2644 + C10556 * C4505 -
              C50278 * C4509) *
                 C50250) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C285 +
          ((((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C1669 +
           (((C14479 - C14478 + C14481 - C14480) * C7885 +
             (C14483 - C14482 + C14485 - C14484) * C50356 +
             (C15686 - C15687 + C15688 - C15689) * C7886 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C2285 +
            (C14504 * C7885 + C14505 * C50356 +
             (C14494 - C14495 + C14496 - C14497) * C7886 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50182) *
              C286 +
          ((((C13589 - C13588 + C13591 - C13590) * C7885 +
             (C13593 - C13592 + C13595 - C13594) * C50356 +
             (C14830 - C14831 + C14832 - C14833) * C7886 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C2285 +
            (C13622 * C7885 + C13623 * C50356 +
             (C13608 - C13609 + C13610 - C13611) * C7886 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C1669 +
           (((C15687 - C15686 + C15689 - C15688) * C7885 +
             (C15691 - C15690 + C15693 - C15692) * C50356 +
             (C10555 * C3152 - C50357 * C3155 + C10556 * C3588 -
              C50278 * C3590) *
                 C7886 +
             (C10555 * C3156 - C50357 * C3161 + C10556 * C3591 -
              C50278 * C3594) *
                 C50250) *
                C2285 +
            ((C14495 - C14494 + C14497 - C14496) * C7885 +
             (C14499 - C14498 + C14501 - C14500) * C50356 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C7886 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C1669 +
           (((C10933 - C10932 + C10935 - C10934) * C7885 +
             (C10937 - C10936 + C10939 - C10938) * C50356 + C14504 * C7886 +
             C14505 * C50250) *
                C2285 +
            ((C10941 - C10940 + C10943 - C10942) * C7885 +
             (C10945 - C10944 + C10947 - C10946) * C50356 +
             (C11492 - C11493 + C11494 - C11495) * C7886 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C10598 * C7885 + C10599 * C50356 + C14024 * C7886 +
             C14025 * C50250) *
                C2285 +
            ((C10575 - C10574 + C10577 - C10576) * C7885 +
             (C10579 - C10578 + C10581 - C10580) * C50356 +
             (C11114 - C11115 + C11116 - C11117) * C7886 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C1669 +
           ((C11285 * C7885 + C11286 * C50356 +
             (C11493 - C11492 + C11495 - C11494) * C7886 +
             (C11497 - C11496 + C11499 - C11498) * C50250) *
                C2285 +
            ((C11278 - C11277 + C11280 - C11279) * C7885 +
             (C11282 - C11281 + C11284 - C11283) * C50356 +
             (C10555 * C891 - C50357 * C899 + C10556 * C1211 - C50278 * C1218) *
                 C7886 +
             (C10555 * C900 - C50357 * C906 + C10556 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C7885 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50356 +
            (C13576 - C13577 + C13578 - C13579) * C7886 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C2285 +
           ((C10558 - C10559 + C10560 - C10561) * C7885 +
            (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
            C13617 * C50250) *
               C50062) *
              C1835 +
          (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C7885 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50356 +
            (C14478 - C14479 + C14480 - C14481) * C7886 +
            (C14482 - C14483 + C14484 - C14485) * C50250) *
               C2285 +
           ((C10932 - C10933 + C10934 - C10935) * C7885 +
            (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
            C14503 * C50250) *
               C50062) *
              C1836 +
          (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C7885 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C50356 +
            (C15032 - C15033 + C15034 - C15035) * C7886 +
            (C15036 - C15037 + C15038 - C15039) * C50250) *
               C2285 +
           ((C10948 - C10949 + C10950 - C10951) * C7885 +
            (C10952 - C10953 + C10954 - C10955) * C50356 +
            (C13818 - C13819 + C13820 - C13821) * C7886 +
            (C13822 - C13823 + C13824 - C13825) * C50250) *
               C50062) *
              C1837 +
          (((C10555 * C1839 - C50357 * C1843 + C10556 * C5452 -
             C50278 * C5455) *
                C7885 +
            (C10555 * C1844 - C50357 * C1851 + C10556 * C5456 -
             C50278 * C5461) *
                C50356 +
            (C10555 * C4494 - C50357 * C4498 + C10556 * C6404 -
             C50278 * C6406) *
                C7886 +
            (C10555 * C4499 - C50357 * C4506 + C10556 * C6407 -
             C50278 * C6410) *
                C50250) *
               C2285 +
           ((C10555 * C1840 - C50357 * C1845 + C10556 * C5453 -
             C50278 * C5457) *
                C7885 +
            (C10555 * C1846 - C50357 * C1852 + C10556 * C5458 -
             C50278 * C5462) *
                C50356 +
            (C10555 * C4496 - C50357 * C4502 + C10556 * C6405 -
             C50278 * C6408) *
                C7886 +
            (C10555 * C4503 - C50357 * C4508 + C10556 * C6409 -
             C50278 * C6411) *
                C50250) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C50390 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50391 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C7885 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50356 +
             (C15032 - C15033 + C15034 - C15035) * C7886 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C2285 +
            ((C10948 - C10949 + C10950 - C10951) * C7885 +
             (C10952 - C10953 + C10954 - C10955) * C50356 +
             (C13818 - C13819 + C13820 - C13821) * C7886 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C50390 +
           (((C10933 - C10932 + C10935 - C10934) * C7885 +
             (C10937 - C10936 + C10939 - C10938) * C50356 + C14504 * C7886 +
             C14505 * C50250) *
                C2285 +
            ((C10941 - C10940 + C10943 - C10942) * C7885 +
             (C10945 - C10944 + C10947 - C10946) * C50356 +
             (C11492 - C11493 + C11494 - C11495) * C7886 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50391 +
           (((C10949 - C10948 + C10951 - C10950) * C7885 +
             (C10953 - C10952 + C10955 - C10954) * C50356 +
             (C13819 - C13818 + C13821 - C13820) * C7886 +
             (C13823 - C13822 + C13825 - C13824) * C50250) *
                C2285 +
            ((C10957 - C10956 + C10959 - C10958) * C7885 +
             (C10961 - C10960 + C10963 - C10962) * C50356 +
             (C10555 * C1210 - C50357 * C1216 + C10556 * C5998 -
              C50278 * C5999) *
                 C7886 +
             (C10555 * C1217 - C50357 * C1222 + C10556 * C6000 -
              C50278 * C6001) *
                 C50250) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C7885 +
             (C10563 - C10562 + C10565 - C10564) * C50356 + C13618 * C7886 +
             C13619 * C50250) *
                C2285 +
            ((C10567 - C10566 + C10569 - C10568) * C7885 +
             (C10571 - C10570 + C10573 - C10572) * C50356 + C11122 * C7886 +
             C11123 * C50250) *
                C50062) *
               C1669 +
           (((C10933 - C10932 + C10935 - C10934) * C7885 +
             (C10937 - C10936 + C10939 - C10938) * C50356 + C14504 * C7886 +
             C14505 * C50250) *
                C2285 +
            ((C10941 - C10940 + C10943 - C10942) * C7885 +
             (C10945 - C10944 + C10947 - C10946) * C50356 +
             (C11492 - C11493 + C11494 - C11495) * C7886 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C10598 * C7885 + C10599 * C50356 + C14024 * C7886 +
             C14025 * C50250) *
                C2285 +
            ((C10575 - C10574 + C10577 - C10576) * C7885 +
             (C10579 - C10578 + C10581 - C10580) * C50356 +
             (C11114 - C11115 + C11116 - C11117) * C7886 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C1669 +
           ((C11285 * C7885 + C11286 * C50356 +
             (C11493 - C11492 + C11495 - C11494) * C7886 +
             (C11497 - C11496 + C11499 - C11498) * C50250) *
                C2285 +
            ((C11278 - C11277 + C11280 - C11279) * C7885 +
             (C11282 - C11281 + C11284 - C11283) * C50356 +
             (C10555 * C891 - C50357 * C899 + C10556 * C1211 - C50278 * C1218) *
                 C7886 +
             (C10555 * C900 - C50357 * C906 + C10556 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C7885 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50356 +
             (C13576 - C13577 + C13578 - C13579) * C7886 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C2285 +
            ((C10558 - C10559 + C10560 - C10561) * C7885 +
             (C10562 - C10563 + C10564 - C10565) * C50356 + C13616 * C7886 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C7885 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50356 +
             (C14478 - C14479 + C14480 - C14481) * C7886 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C2285 +
            ((C10932 - C10933 + C10934 - C10935) * C7885 +
             (C10936 - C10937 + C10938 - C10939) * C50356 + C14502 * C7886 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C285 +
          ((((C13577 - C13576 + C13579 - C13578) * C7885 +
             (C13581 - C13580 + C13583 - C13582) * C50356 +
             (C13588 - C13589 + C13590 - C13591) * C7886 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C2285 +
            (C13618 * C7885 + C13619 * C50356 + C13620 * C7886 +
             C13621 * C50250) *
                C50062) *
               C1669 +
           (((C14479 - C14478 + C14481 - C14480) * C7885 +
             (C14483 - C14482 + C14485 - C14484) * C50356 +
             (C15686 - C15687 + C15688 - C15689) * C7886 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C2285 +
            (C14504 * C7885 + C14505 * C50356 +
             (C14494 - C14495 + C14496 - C14497) * C7886 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50182) *
              C286 +
          ((((C13589 - C13588 + C13591 - C13590) * C7885 +
             (C13593 - C13592 + C13595 - C13594) * C50356 +
             (C14830 - C14831 + C14832 - C14833) * C7886 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C2285 +
            (C13622 * C7885 + C13623 * C50356 +
             (C13608 - C13609 + C13610 - C13611) * C7886 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C1669 +
           (((C15687 - C15686 + C15689 - C15688) * C7885 +
             (C15691 - C15690 + C15693 - C15692) * C50356 +
             (C10555 * C3152 - C50357 * C3155 + C10556 * C3588 -
              C50278 * C3590) *
                 C7886 +
             (C10555 * C3156 - C50357 * C3161 + C10556 * C3591 -
              C50278 * C3594) *
                 C50250) *
                C2285 +
            ((C14495 - C14494 + C14497 - C14496) * C7885 +
             (C14499 - C14498 + C14501 - C14500) * C50356 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C7886 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C50343 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C50343 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50118 * C50343 +
           ((C627 * C2287 + C628 * C2282 + C2477 * C2288 + C2478 * C2283 +
             (C2480 - C2479) * C2289 + (C2482 - C2481) * C2284) *
                C2285 +
            (C629 * C2287 + C630 * C2282 + (C352 - C351) * C2288 +
             (C354 - C353) * C2283 + (C117 * C1097 - C50214 * C1104) * C2289 +
             (C117 * C1105 - C50214 * C1109) * C2284) *
                C50062) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C50343 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C50343 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50154) *
              C50387 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50118 * C50343 +
           (C639 * C107 + C640 * C108 +
            ((C632 - C631) * C118 + (C634 - C633) * C50199) * C109 +
            ((C117 * C622 - C50214 * C623) * C118 +
             (C117 * C624 - C50214 * C625) * C50199) *
                C110) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50118 * C50343 +
           (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50118 * C50343 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                C2285 +
            ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          ((((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
             (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
                C2285 +
            ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
             (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
                C50062) *
               C50118 * C50343 +
           (((C5636 - C5635 + C5638 - C5637 + C5640 - C5639) * C118 +
             (C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C50199) *
                C2285 +
            ((C5097 * C293 - C5094 * C306 + C5098 * C891 - C5095 * C899 +
              C5099 * C1211 - C5096 * C1218) *
                 C118 +
             (C5097 * C307 - C5094 * C323 + C5098 * C900 - C5095 * C906 +
              C5099 * C1219 - C5096 * C1223) *
                 C50199) *
                C50062) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C2287 +
              (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
              (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                 C2285 +
             ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
              C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                 C50062) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C2287 +
              (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
              (C3167 - C3168) * C2283 + (C3169 - C3170) * C2289 +
              (C3171 - C3172) * C2284) *
                 C2285 +
             ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
              C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
              (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
              (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                 C2285 +
             (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
              C2485 * C2289 + C2486 * C2284) *
                 C50062) *
                C50344 +
            (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
              (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
              (C50214 * C3155 - C117 * C3152) * C2289 +
              (C50214 * C3161 - C117 * C3156) * C2284) *
                 C2285 +
             (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
              (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
              C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                 C2285 +
             ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
              C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                 C50062) *
                C50344 +
            (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
              C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                 C2285 +
             ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
              (C913 - C914) * C2288 + (C915 - C916) * C2283 +
              (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           (((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
              C2487 * C2289 + C2488 * C2284) *
                 C2285 +
             (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
              (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                 C50062) *
                C50344 +
            ((C3173 * C2287 + C3174 * C2282 + C3175 * C2288 + C3176 * C2283 +
              (C3182 - C3181) * C2289 + (C3184 - C3183) * C2284) *
                 C2285 +
             ((C914 - C913) * C2287 + (C916 - C915) * C2282 +
              (C2956 - C2955) * C2288 + (C2958 - C2957) * C2283 +
              (C117 * C3154 - C50214 * C3159) * C2289 +
              (C117 * C3160 - C50214 * C3163) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C118 +
              (C50214 * C140 - C117 * C127) * C50199) *
                 C107 +
             ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
             C184 * C109 + C185 * C110) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C118 +
              (C117 * C466 - C50214 * C485) * C50199) *
                 C107 +
             ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
             C757 * C109 + C758 * C110) *
                C50182) *
               C50343 +
           ((((C117 * C290 - C50214 * C300) * C118 +
              (C117 * C301 - C50214 * C320) * C50199) *
                 C107 +
             ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
             C639 * C109 + C640 * C110) *
                C50344 +
            (((C50214 * C893 - C117 * C888) * C118 +
              (C50214 * C903 - C117 * C894) * C50199) *
                 C107 +
             ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
             ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
             ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
             ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
             C186 * C109 + C187 * C110) *
                C50344 +
            (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
             ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
             ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
             ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                C50182) *
               C50343 +
           ((((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
             ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
             ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
             ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                C50344 +
            (((C910 - C909) * C118 + (C912 - C911) * C50199) * C107 +
             ((C914 - C913) * C118 + (C916 - C915) * C50199) * C108 +
             ((C918 - C917) * C118 + (C920 - C919) * C50199) * C109 +
             ((C117 * C892 - C50214 * C901) * C118 +
              (C117 * C902 - C50214 * C907) * C50199) *
                 C110) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
               C5096 * C473 - C5099 * C459) *
                  C118 +
              (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
               C5096 * C489 - C5099 * C474) *
                  C50199) *
                 C2285 +
             ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
              (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                 C50062) *
                C50344 +
            (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
               C5099 * C1839 - C5096 * C1843) *
                  C118 +
              (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
               C5099 * C1844 - C5096 * C1851) *
                  C50199) *
                 C2285 +
             ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
              (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
               C5099 * C1208 - C5096 * C1212) *
                  C118 +
              (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
               C5099 * C1213 - C5096 * C1220) *
                  C50199) *
                 C2285 +
             ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
              (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                 C50062) *
                C50344 +
            (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
               C5096 * C4498 - C5099 * C4494) *
                  C118 +
              (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
               C5096 * C4506 - C5099 * C4499) *
                  C50199) *
                 C2285 +
             ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
              (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
              (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                 C2285 +
             ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
              (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                 C50062) *
                C50344 +
            (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
              (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                 C2285 +
             ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
              (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
              (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                 C2285 +
             ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
              (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                 C50062) *
                C50344 +
            (((C6004 - C6003 + C6006 - C6005 + C6008 - C6007) * C118 +
              (C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C50199) *
                 C2285 +
             ((C5097 * C890 - C5094 * C897 + C5098 * C1210 - C5095 * C1216 +
               C5099 * C5998 - C5096 * C5999) *
                  C118 +
              (C5097 * C898 - C5094 * C905 + C5098 * C1217 - C5095 * C1222 +
               C5099 * C6000 - C5096 * C6001) *
                  C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50214 * C126 - C117 * C119) * C118 +
                (C50214 * C140 - C117 * C127) * C50199) *
                   C107 +
               ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
               C184 * C109 + C185 * C110) *
                  C50118 * C50102 * C113 +
              (((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
               ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
               C186 * C109 + C187 * C110) *
                  C50118 * C50102 * C114 +
              (C184 * C107 + C185 * C108 +
               ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
               ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
                  C50118 * C50102 * C115 +
              (C186 * C107 + C187 * C108 +
               ((C165 - C164) * C118 + (C167 - C166) * C50199) * C109 +
               ((C117 * C125 - C50214 * C138) * C118 +
                (C117 * C139 - C50214 * C146) * C50199) *
                   C110) *
                  C50118 * C50102 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C118 +
                 (C50214 * C140 - C117 * C127) * C50199) *
                    C107 +
                ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
                C184 * C109 + C185 * C110) *
                   C50118 * C285 +
               (((C117 * C290 - C50214 * C300) * C118 +
                 (C117 * C301 - C50214 * C320) * C50199) *
                    C107 +
                ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
                ((C335 - C336) * C118 + (C337 - C338) * C50199) * C109 +
                ((C339 - C340) * C118 + (C341 - C342) * C50199) * C110) *
                   C50118 * C286 +
               (((C50214 * C308 - C117 * C294) * C118 +
                 (C50214 * C324 - C117 * C309) * C50199) *
                    C107 +
                ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
                ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
                ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
                   C50118 * C287) *
                  C288 +
              ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
                ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
                C186 * C109 + C187 * C110) *
                   C50118 * C285 +
               (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
                ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
                ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
                ((C50214 * C316 - C117 * C298) * C118 +
                 (C50214 * C328 - C117 * C317) * C50199) *
                    C110) *
                   C50118 * C286 +
               (((C344 - C343) * C118 + (C346 - C345) * C50199) * C107 +
                ((C348 - C347) * C118 + (C350 - C349) * C50199) * C108 +
                ((C352 - C351) * C118 + (C354 - C353) * C50199) * C109 +
                ((C117 * C299 - C50214 * C318) * C118 +
                 (C117 * C319 - C50214 * C329) * C50199) *
                    C110) *
                   C50118 * C287) *
                  C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            ((C500 - C501) * C118 + (C502 - C503) * C50199) * C109 +
            ((C504 - C505) * C118 + (C506 - C507) * C50199) * C110) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C452 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C50214 * C481 - C117 * C463) * C118 +
             (C50214 * C493 - C117 * C482) * C50199) *
                C110) *
               C453 +
           (((C509 - C508) * C118 + (C511 - C510) * C50199) * C107 +
            ((C513 - C512) * C118 + (C515 - C514) * C50199) * C108 +
            ((C517 - C516) * C118 + (C519 - C518) * C50199) * C109 +
            ((C117 * C464 - C50214 * C483) * C118 +
             (C117 * C484 - C50214 * C494) * C50199) *
                C110) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 +
            (C50214 * C300 - C117 * C290) * C2288 +
            (C50214 * C320 - C117 * C301) * C2283 +
            (C50214 * C308 - C117 * C294) * C2289 +
            (C50214 * C324 - C117 * C309) * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 +
            (C332 - C331) * C2288 + (C334 - C333) * C2283 +
            (C343 - C344) * C2289 + (C345 - C346) * C2284) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C2287 + (C151 - C150) * C2282 +
            (C331 - C332) * C2288 + (C333 - C334) * C2283 +
            (C344 - C343) * C2289 + (C346 - C345) * C2284) *
               C2285 +
           ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
            C628 * C2283 + (C348 - C347) * C2289 + (C350 - C349) * C2284) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C168 * C2287 + C169 * C2282 + (C336 - C335) * C2288 +
            (C338 - C337) * C2283 + (C347 - C348) * C2289 +
            (C349 - C350) * C2284) *
               C2285 +
           (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
            (C342 - C341) * C2283 + (C351 - C352) * C2289 +
            (C353 - C354) * C2284) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C172 * C2287 + C173 * C2282 + C629 * C2288 + C630 * C2283 +
            (C352 - C351) * C2289 + (C354 - C353) * C2284) *
               C2285 +
           (C174 * C2287 + C175 * C2282 + (C632 - C631) * C2288 +
            (C634 - C633) * C2283 + (C117 * C299 - C50214 * C318) * C2289 +
            (C117 * C319 - C50214 * C329) * C2284) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C285 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C50214 * C2439 - C117 * C2436) * C2289 +
             (C50214 * C2445 - C117 * C2440) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C285 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            ((C336 - C335) * C2287 + (C338 - C337) * C2282 +
             (C347 - C348) * C2288 + (C349 - C350) * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2467 * C2287 + C2468 * C2282 + C2485 * C2288 + C2486 * C2283 +
             (C2474 - C2473) * C2289 + (C2476 - C2475) * C2284) *
                C2285 +
            (C2477 * C2287 + C2478 * C2282 + (C2480 - C2479) * C2288 +
             (C2482 - C2481) * C2283 + (C117 * C2438 - C50214 * C2443) * C2289 +
             (C117 * C2444 - C50214 * C2447) * C2284) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 +
             (C117 * C888 - C50214 * C893) * C2288 +
             (C117 * C894 - C50214 * C903) * C2283 +
             (C117 * C1555 - C50214 * C1559) * C2289 +
             (C117 * C1560 - C50214 * C1567) * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 +
             (C910 - C909) * C2288 + (C912 - C911) * C2283 +
             (C2647 - C2648) * C2289 + (C2649 - C2650) * C2284) *
                C50062) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 +
             (C50214 * C1212 - C117 * C1208) * C2288 +
             (C50214 * C1220 - C117 * C1213) * C2283 +
             (C50214 * C2637 - C117 * C2634) * C2289 +
             (C50214 * C2643 - C117 * C2638) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C452 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 +
             (C909 - C910) * C2288 + (C911 - C912) * C2283 +
             (C2648 - C2647) * C2289 + (C2650 - C2649) * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C50214 * C1563 - C117 * C1557) * C2289 +
             (C50214 * C1569 - C117 * C1564) * C2284) *
                C50062) *
               C453 +
           (((C509 - C508) * C2287 + (C511 - C510) * C2282 +
             (C2652 - C2651) * C2288 + (C2654 - C2653) * C2283 +
             (C2656 - C2655) * C2289 + (C2658 - C2657) * C2284) *
                C2285 +
            ((C513 - C512) * C2287 + (C515 - C514) * C2282 +
             (C117 * C1210 - C50214 * C1216) * C2288 +
             (C117 * C1217 - C50214 * C1222) * C2283 +
             (C117 * C2636 - C50214 * C2641) * C2289 +
             (C117 * C2642 - C50214 * C2645) * C2284) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C118 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C50199) *
               C2285 +
           ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
               C2285 +
           ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
               C50062) *
              C50118 * C50102 * C114 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
               C2285 +
           ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
               C50062) *
              C50118 * C50102 * C115 +
          (((C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C118 +
            (C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C50199) *
               C2285 +
           ((C5097 * C123 - C5094 * C134 + C5098 * C463 - C5095 * C481 +
             C5099 * C464 - C5096 * C483) *
                C118 +
            (C5097 * C135 - C5094 * C144 + C5098 * C482 - C5095 * C493 +
             C5099 * C484 - C5096 * C494) *
                C50199) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50118 * C286 +
           (((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
              C5096 * C2637 - C5099 * C2634) *
                 C118 +
             (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
              C5096 * C2643 - C5099 * C2638) *
                 C50199) *
                C2285 +
            ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                C2285 +
            ((C5094 * C304 - C5097 * C292 + C5095 * C897 - C5098 * C890 +
              C5096 * C1216 - C5099 * C1210) *
                 C118 +
             (C5094 * C322 - C5097 * C305 + C5095 * C905 - C5098 * C898 +
              C5096 * C1222 - C5099 * C1217) *
                 C50199) *
                C50062) *
               C50118 * C286 +
           (((C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C118 +
             (C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C50199) *
                C2285 +
            ((C5097 * C296 - C5094 * C312 + C5098 * C1557 - C5095 * C1563 +
              C5099 * C2636 - C5096 * C2641) *
                 C118 +
             (C5097 * C313 - C5094 * C326 + C5098 * C1564 - C5095 * C1569 +
              C5099 * C2642 - C5096 * C2645) *
                 C50199) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C452 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C453 +
           (((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
              C5096 * C5455 - C5099 * C5452) *
                 C118 +
             (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
              C5096 * C5461 - C5099 * C5456) *
                 C50199) *
                C2285 +
            ((C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C118 +
             (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C50199) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C452 +
           (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                C2285 +
            ((C5094 * C469 - C5097 * C457 + C5095 * C477 - C5098 * C461 +
              C5096 * C1847 - C5099 * C1841) *
                 C118 +
             (C5094 * C487 - C5097 * C470 + C5095 * C491 - C5098 * C478 +
              C5096 * C1853 - C5099 * C1848) *
                 C50199) *
                C50062) *
               C453 +
           (((C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C118 +
             (C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C50199) *
                C2285 +
            ((C5097 * C461 - C5094 * C477 + C5098 * C1841 - C5095 * C1847 +
              C5099 * C5454 - C5096 * C5459) *
                 C118 +
             (C5097 * C478 - C5094 * C491 + C5098 * C1848 - C5095 * C1853 +
              C5099 * C5460 - C5096 * C5463) *
                 C50199) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 +
             (C117 * C888 - C50214 * C893) * C2288 +
             (C117 * C894 - C50214 * C903) * C2283 +
             (C117 * C1555 - C50214 * C1559) * C2289 +
             (C117 * C1560 - C50214 * C1567) * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 +
             (C910 - C909) * C2288 + (C912 - C911) * C2283 +
             (C2647 - C2648) * C2289 + (C2649 - C2650) * C2284) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50344 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 +
             (C909 - C910) * C2288 + (C911 - C912) * C2283 +
             (C2648 - C2647) * C2289 + (C2650 - C2649) * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50344 +
           ((C745 * C2287 + C746 * C2282 + (C914 - C913) * C2288 +
             (C916 - C915) * C2283 + (C2956 - C2955) * C2289 +
             (C2958 - C2957) * C2284) *
                C2285 +
            (C747 * C2287 + C748 * C2282 + (C918 - C917) * C2288 +
             (C920 - C919) * C2283 + (C117 * C1558 - C50214 * C1565) * C2289 +
             (C117 * C1566 - C50214 * C1570) * C2284) *
                C50062) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50344 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50182) *
              C50102 * C50387 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50344 +
           (C757 * C107 + C758 * C108 +
            ((C750 - C749) * C118 + (C752 - C751) * C50199) * C109 +
            ((C117 * C740 - C50214 * C741) * C118 +
             (C117 * C742 - C50214 * C743) * C50199) *
                C110) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50344 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50344 +
           (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                C2285 +
            ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          ((((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
             (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
                C2285 +
            ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
             (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
                C50062) *
               C50344 +
           (((C5794 - C5793 + C5796 - C5795 + C5798 - C5797) * C118 +
             (C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C50199) *
                C2285 +
            ((C5097 * C458 - C5094 * C471 + C5098 * C462 - C5095 * C479 +
              C5099 * C1842 - C5096 * C1849) *
                 C118 +
             (C5097 * C472 - C5094 * C488 + C5098 * C480 - C5095 * C492 +
              C5099 * C1850 - C5096 * C1854) *
                 C50199) *
                C50062) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C285 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            ((C335 - C336) * C118 + (C337 - C338) * C50199) * C109 +
            ((C339 - C340) * C118 + (C341 - C342) * C50199) * C110) *
               C50118 * C286 +
           (((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C285 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C50214 * C316 - C117 * C298) * C118 +
             (C50214 * C328 - C117 * C317) * C50199) *
                C110) *
               C50118 * C286 +
           (((C344 - C343) * C118 + (C346 - C345) * C50199) * C107 +
            ((C348 - C347) * C118 + (C350 - C349) * C50199) * C108 +
            ((C352 - C351) * C118 + (C354 - C353) * C50199) * C109 +
            ((C117 * C299 - C50214 * C318) * C118 +
             (C117 * C319 - C50214 * C329) * C50199) *
                C110) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
           ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
           C186 * C109 + C187 * C110) *
              C50118 * C50102 * C114 +
          (C184 * C107 + C185 * C108 +
           ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
           ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
              C50118 * C50102 * C115 +
          (C186 * C107 + C187 * C108 +
           ((C165 - C164) * C118 + (C167 - C166) * C50199) * C109 +
           ((C117 * C125 - C50214 * C138) * C118 +
            (C117 * C139 - C50214 * C146) * C50199) *
               C110) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 +
            (C50214 * C300 - C117 * C290) * C2288 +
            (C50214 * C320 - C117 * C301) * C2283 +
            (C50214 * C308 - C117 * C294) * C2289 +
            (C50214 * C324 - C117 * C309) * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 +
            (C332 - C331) * C2288 + (C334 - C333) * C2283 +
            (C343 - C344) * C2289 + (C345 - C346) * C2284) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C2287 + (C151 - C150) * C2282 +
            (C331 - C332) * C2288 + (C333 - C334) * C2283 +
            (C344 - C343) * C2289 + (C346 - C345) * C2284) *
               C2285 +
           ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
            C628 * C2283 + (C348 - C347) * C2289 + (C350 - C349) * C2284) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C168 * C2287 + C169 * C2282 + (C336 - C335) * C2288 +
            (C338 - C337) * C2283 + (C347 - C348) * C2289 +
            (C349 - C350) * C2284) *
               C2285 +
           (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
            (C342 - C341) * C2283 + (C351 - C352) * C2289 +
            (C353 - C354) * C2284) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C172 * C2287 + C173 * C2282 + C629 * C2288 + C630 * C2283 +
            (C352 - C351) * C2289 + (C354 - C353) * C2284) *
               C2285 +
           (C174 * C2287 + C175 * C2282 + (C632 - C631) * C2288 +
            (C634 - C633) * C2283 + (C117 * C299 - C50214 * C318) * C2289 +
            (C117 * C319 - C50214 * C329) * C2284) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C285 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C50214 * C2439 - C117 * C2436) * C2289 +
             (C50214 * C2445 - C117 * C2440) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C285 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            ((C336 - C335) * C2287 + (C338 - C337) * C2282 +
             (C347 - C348) * C2288 + (C349 - C350) * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2467 * C2287 + C2468 * C2282 + C2485 * C2288 + C2486 * C2283 +
             (C2474 - C2473) * C2289 + (C2476 - C2475) * C2284) *
                C2285 +
            (C2477 * C2287 + C2478 * C2282 + (C2480 - C2479) * C2288 +
             (C2482 - C2481) * C2283 + (C117 * C2438 - C50214 * C2443) * C2289 +
             (C117 * C2444 - C50214 * C2447) * C2284) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C118 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C50199) *
               C2285 +
           ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
               C2285 +
           ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
            (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
               C50062) *
              C50118 * C50102 * C114 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
               C2285 +
           ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
            (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
               C50062) *
              C50118 * C50102 * C115 +
          (((C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C118 +
            (C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C50199) *
               C2285 +
           ((C5097 * C123 - C5094 * C134 + C5098 * C463 - C5095 * C481 +
             C5099 * C464 - C5096 * C483) *
                C118 +
            (C5097 * C135 - C5094 * C144 + C5098 * C482 - C5095 * C493 +
             C5099 * C484 - C5096 * C494) *
                C50199) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50118 * C286 +
           (((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
              C5096 * C2637 - C5099 * C2634) *
                 C118 +
             (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
              C5096 * C2643 - C5099 * C2638) *
                 C50199) *
                C2285 +
            ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                C2285 +
            ((C5094 * C304 - C5097 * C292 + C5095 * C897 - C5098 * C890 +
              C5096 * C1216 - C5099 * C1210) *
                 C118 +
             (C5094 * C322 - C5097 * C305 + C5095 * C905 - C5098 * C898 +
              C5096 * C1222 - C5099 * C1217) *
                 C50199) *
                C50062) *
               C50118 * C286 +
           (((C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C118 +
             (C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C50199) *
                C2285 +
            ((C5097 * C296 - C5094 * C312 + C5098 * C1557 - C5095 * C1563 +
              C5099 * C2636 - C5096 * C2641) *
                 C118 +
             (C5097 * C313 - C5094 * C326 + C5098 * C1564 - C5095 * C1569 +
              C5099 * C2642 - C5096 * C2645) *
                 C50199) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C50388 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50389 +
           ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C50388 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50389 +
           ((C2467 * C2287 + C2468 * C2282 + C2485 * C2288 + C2486 * C2283 +
             (C2474 - C2473) * C2289 + (C2476 - C2475) * C2284) *
                C2285 +
            (C2477 * C2287 + C2478 * C2282 + (C2480 - C2479) * C2288 +
             (C2482 - C2481) * C2283 + (C117 * C2438 - C50214 * C2443) * C2289 +
             (C117 * C2444 - C50214 * C2447) * C2284) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C50388 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50389 +
           (((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C50388 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50389 +
           (((C344 - C343) * C118 + (C346 - C345) * C50199) * C107 +
            ((C348 - C347) * C118 + (C350 - C349) * C50199) * C108 +
            ((C352 - C351) * C118 + (C354 - C353) * C50199) * C109 +
            ((C117 * C299 - C50214 * C318) * C118 +
             (C117 * C319 - C50214 * C329) * C50199) *
                C110) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50118 * C50388 +
           (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50118 * C50389 +
           (((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
              C5096 * C2637 - C5099 * C2634) *
                 C118 +
             (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
              C5096 * C2643 - C5099 * C2638) *
                 C50199) *
                C2285 +
            ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50118 * C50388 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                C2285 +
            ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                C50062) *
               C50118 * C50389 +
           (((C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C118 +
             (C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C50199) *
                C2285 +
            ((C5097 * C296 - C5094 * C312 + C5098 * C1557 - C5095 * C1563 +
              C5099 * C2636 - C5096 * C2641) *
                 C118 +
             (C5097 * C313 - C5094 * C326 + C5098 * C1564 - C5095 * C1569 +
              C5099 * C2642 - C5096 * C2645) *
                 C50199) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C50388 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50344 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50182) *
              C50389 +
          (((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50344 +
           ((C4099 * C2287 + C4100 * C2282 + (C4102 - C4101) * C2288 +
             (C4104 - C4103) * C2283 + (C117 * C4090 - C50214 * C4092) * C2289 +
             (C117 * C4093 - C50214 * C4096) * C2284) *
                C2285 +
            (C3175 * C2287 + C3176 * C2282 + (C3182 - C3181) * C2288 +
             (C3184 - C3183) * C2283 + (C117 * C4091 - C50214 * C4094) * C2289 +
             (C117 * C4095 - C50214 * C4097) * C2284) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50388 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50344 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50182) *
              C50389 +
          ((((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50344 +
           (((C117 * C1555 - C50214 * C1559) * C118 +
             (C117 * C1560 - C50214 * C1567) * C50199) *
                C107 +
            ((C117 * C1556 - C50214 * C1561) * C118 +
             (C117 * C1562 - C50214 * C1568) * C50199) *
                C108 +
            ((C117 * C1557 - C50214 * C1563) * C118 +
             (C117 * C1564 - C50214 * C1569) * C50199) *
                C109 +
            ((C117 * C1558 - C50214 * C1565) * C118 +
             (C117 * C1566 - C50214 * C1570) * C50199) *
                C110) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50344 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50182) *
              C50388 +
          ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50344 +
           (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
              C5096 * C4498 - C5099 * C4494) *
                 C118 +
             (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
              C5096 * C4506 - C5099 * C4499) *
                 C50199) *
                C2285 +
            ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                C50062) *
               C50182) *
              C50389 +
          ((((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
              C5096 * C2637 - C5099 * C2634) *
                 C118 +
             (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
              C5096 * C2643 - C5099 * C2638) *
                 C50199) *
                C2285 +
            ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
                C50062) *
               C50344 +
           (((C5097 * C1555 - C5094 * C1559 + C5098 * C2634 - C5095 * C2637 +
              C5099 * C4495 - C5096 * C4500) *
                 C118 +
             (C5097 * C1560 - C5094 * C1567 + C5098 * C2638 - C5095 * C2643 +
              C5099 * C4501 - C5096 * C4507) *
                 C50199) *
                C2285 +
            ((C5097 * C1556 - C5094 * C1561 + C5098 * C2635 - C5095 * C2639 +
              C5099 * C4497 - C5096 * C4504) *
                 C118 +
             (C5097 * C1562 - C5094 * C1568 + C5098 * C2640 - C5095 * C2644 +
              C5099 * C4505 - C5096 * C4509) *
                 C50199) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C118 +
                 (C50214 * C140 - C117 * C127) * C50199) *
                    C107 +
                ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
                C184 * C109 + C185 * C110) *
                   C50118 * C1018 +
               (((C117 * C290 - C50214 * C300) * C118 +
                 (C117 * C301 - C50214 * C320) * C50199) *
                    C107 +
                ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
                C639 * C109 + C640 * C110) *
                   C50118 * C50154) *
                  C1020 +
              ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
                ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
                C186 * C109 + C187 * C110) *
                   C50118 * C1018 +
               (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
                ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
                ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
                ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                   C50118 * C50154) *
                  C1021 +
              ((C184 * C107 + C185 * C108 +
                ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
                ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
                   C50118 * C1018 +
               (C639 * C107 + C640 * C108 +
                ((C632 - C631) * C118 + (C634 - C633) * C50199) * C109 +
                ((C117 * C622 - C50214 * C623) * C118 +
                 (C117 * C624 - C50214 * C625) * C50199) *
                    C110) *
                   C50118 * C50154) *
                  C1022) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50214 * C126 - C117 * C119) * C118 +
                (C50214 * C140 - C117 * C127) * C50199) *
                   C107 +
               ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
               C184 * C109 + C185 * C110) *
                  C50118 * C1089 +
              (((C117 * C290 - C50214 * C300) * C118 +
                (C117 * C301 - C50214 * C320) * C50199) *
                   C107 +
               ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
               C639 * C109 + C640 * C110) *
                  C50118 * C1090 +
              (((C50214 * C308 - C117 * C294) * C118 +
                (C50214 * C324 - C117 * C309) * C50199) *
                   C107 +
               ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
               ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
               ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
                  C50118 * C1091 +
              (((C117 * C1094 - C50214 * C1098) * C118 +
                (C117 * C1099 - C50214 * C1106) * C50199) *
                   C107 +
               ((C117 * C1095 - C50214 * C1100) * C118 +
                (C117 * C1101 - C50214 * C1107) * C50199) *
                   C108 +
               ((C117 * C1096 - C50214 * C1102) * C118 +
                (C117 * C1103 - C50214 * C1108) * C50199) *
                   C109 +
               ((C117 * C1097 - C50214 * C1104) * C118 +
                (C117 * C1105 - C50214 * C1109) * C50199) *
                   C110) *
                  C50118 * C1092) *
             C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C454) *
              C1018 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C452 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C453 +
           (((C117 * C1208 - C50214 * C1212) * C118 +
             (C117 * C1213 - C50214 * C1220) * C50199) *
                C107 +
            ((C117 * C1209 - C50214 * C1214) * C118 +
             (C117 * C1215 - C50214 * C1221) * C50199) *
                C108 +
            ((C117 * C1210 - C50214 * C1216) * C118 +
             (C117 * C1217 - C50214 * C1222) * C50199) *
                C109 +
            ((C117 * C1211 - C50214 * C1218) * C118 +
             (C117 * C1219 - C50214 * C1223) * C50199) *
                C110) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C1018 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C627 * C2287 + C628 * C2282 + C2477 * C2288 + C2478 * C2283 +
             (C2480 - C2479) * C2289 + (C2482 - C2481) * C2284) *
                C2285 +
            (C629 * C2287 + C630 * C2282 + (C352 - C351) * C2288 +
             (C354 - C353) * C2283 + (C117 * C1097 - C50214 * C1104) * C2289 +
             (C117 * C1105 - C50214 * C1109) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
            (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
            C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
               C50062) *
              C50118 * C1089 +
          (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
            (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
            C3438 * C2284) *
               C2285 +
           (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
            C2485 * C2289 + C2486 * C2284) *
               C50062) *
              C50118 * C1090 +
          ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
            (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
            (C3441 - C3442) * C2284) *
               C2285 +
           (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
            (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
               C50062) *
              C50118 * C1091 +
          ((C3437 * C2287 + C3438 * C2282 + (C3440 - C3439) * C2288 +
            (C3442 - C3441) * C2283 + (C117 * C3428 - C50214 * C3430) * C2289 +
            (C117 * C3431 - C50214 * C3434) * C2284) *
               C2285 +
           (C2485 * C2287 + C2486 * C2282 + (C2474 - C2473) * C2288 +
            (C2476 - C2475) * C2283 + (C117 * C3429 - C50214 * C3432) * C2289 +
            (C117 * C3433 - C50214 * C3435) * C2284) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + (C3169 - C3170) * C2289 +
             (C3171 - C3172) * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
             (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
             (C3603 - C3604) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C454) *
              C1018 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C452 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C50214 * C3155 - C117 * C3152) * C2289 +
             (C50214 * C3161 - C117 * C3156) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C453 +
           (((C3598 - C3597) * C2287 + (C3600 - C3599) * C2282 +
             (C3602 - C3601) * C2288 + (C3604 - C3603) * C2283 +
             (C117 * C3588 - C50214 * C3590) * C2289 +
             (C117 * C3591 - C50214 * C3594) * C2284) *
                C2285 +
            ((C2652 - C2651) * C2287 + (C2654 - C2653) * C2282 +
             (C2656 - C2655) * C2288 + (C2658 - C2657) * C2283 +
             (C117 * C3589 - C50214 * C3592) * C2289 +
             (C117 * C3593 - C50214 * C3595) * C2284) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                C2285 +
            ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          ((((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
             (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
                C2285 +
            ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
             (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C5636 - C5635 + C5638 - C5637 + C5640 - C5639) * C118 +
             (C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C50199) *
                C2285 +
            ((C5097 * C293 - C5094 * C306 + C5098 * C891 - C5095 * C899 +
              C5099 * C1211 - C5096 * C1218) *
                 C118 +
             (C5097 * C307 - C5094 * C323 + C5098 * C900 - C5095 * C906 +
              C5099 * C1219 - C5096 * C1223) *
                 C50199) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C118 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C50199) *
               C2285 +
           ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
               C50062) *
              C50118 * C1089 +
          (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
             C5099 * C1208 - C5096 * C1212) *
                C118 +
            (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
             C5099 * C1213 - C5096 * C1220) *
                C50199) *
               C2285 +
           ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
               C50062) *
              C50118 * C1090 +
          (((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
             C5096 * C2637 - C5099 * C2634) *
                C118 +
            (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
             C5096 * C2643 - C5099 * C2638) *
                C50199) *
               C2285 +
           ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
               C50062) *
              C50118 * C1091 +
          (((C5097 * C1094 - C5094 * C1098 + C5098 * C3152 - C5095 * C3155 +
             C5099 * C3588 - C5096 * C3590) *
                C118 +
            (C5097 * C1099 - C5094 * C1106 + C5098 * C3156 - C5095 * C3161 +
             C5099 * C3591 - C5096 * C3594) *
                C50199) *
               C2285 +
           ((C5097 * C1095 - C5094 * C1100 + C5098 * C3153 - C5095 * C3157 +
             C5099 * C3589 - C5096 * C3592) *
                C118 +
            (C5097 * C1101 - C5094 * C1107 + C5098 * C3158 - C5095 * C3162 +
             C5099 * C3593 - C5096 * C3595) *
                C50199) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C452 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C453 +
           (((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
              C5096 * C5455 - C5099 * C5452) *
                 C118 +
             (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
              C5096 * C5461 - C5099 * C5456) *
                 C50199) *
                C2285 +
            ((C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C118 +
             (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C50199) *
                C50062) *
               C454) *
              C1018 +
          ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C452 +
           (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
              C5096 * C4498 - C5099 * C4494) *
                 C118 +
             (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
              C5096 * C4506 - C5099 * C4499) *
                 C50199) *
                C2285 +
            ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                C50062) *
               C453 +
           (((C5097 * C1208 - C5094 * C1212 + C5098 * C4494 - C5095 * C4498 +
              C5099 * C6404 - C5096 * C6406) *
                 C118 +
             (C5097 * C1213 - C5094 * C1220 + C5098 * C4499 - C5095 * C4506 +
              C5099 * C6407 - C5096 * C6410) *
                 C50199) *
                C2285 +
            ((C5097 * C1209 - C5094 * C1214 + C5098 * C4496 - C5095 * C4502 +
              C5099 * C6405 - C5096 * C6408) *
                 C118 +
             (C5097 * C1215 - C5094 * C1221 + C5098 * C4503 - C5095 * C4508 +
              C5099 * C6409 - C5096 * C6411) *
                 C50199) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C2287 +
              (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
              (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                 C2285 +
             ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
              C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                 C50062) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C2287 +
              (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
              (C3167 - C3168) * C2283 + (C3169 - C3170) * C2289 +
              (C3171 - C3172) * C2284) *
                 C2285 +
             ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
              C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
              (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
              C3437 * C2289 + C3438 * C2284) *
                 C2285 +
             (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
              C2485 * C2289 + C2486 * C2284) *
                 C50062) *
                C50344 +
            (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
              (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
              (C50214 * C3155 - C117 * C3152) * C2289 +
              (C50214 * C3161 - C117 * C3156) * C2284) *
                 C2285 +
             (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
              (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
              C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                 C2285 +
             ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
              C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                 C50062) *
                C50344 +
            (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
              C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                 C2285 +
             ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
              (C913 - C914) * C2288 + (C915 - C916) * C2283 +
              (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                 C50062) *
                C50182) *
               C1018 +
           (((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
              C2487 * C2289 + C2488 * C2284) *
                 C2285 +
             (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
              (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                 C50062) *
                C50344 +
            ((C3173 * C2287 + C3174 * C2282 + C3175 * C2288 + C3176 * C2283 +
              (C3182 - C3181) * C2289 + (C3184 - C3183) * C2284) *
                 C2285 +
             ((C914 - C913) * C2287 + (C916 - C915) * C2282 +
              (C2956 - C2955) * C2288 + (C2958 - C2957) * C2283 +
              (C117 * C3154 - C50214 * C3159) * C2289 +
              (C117 * C3160 - C50214 * C3163) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C118 +
              (C50214 * C140 - C117 * C127) * C50199) *
                 C107 +
             ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
             C184 * C109 + C185 * C110) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C118 +
              (C117 * C466 - C50214 * C485) * C50199) *
                 C107 +
             ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
             C757 * C109 + C758 * C110) *
                C50182) *
               C1018 +
           ((((C117 * C290 - C50214 * C300) * C118 +
              (C117 * C301 - C50214 * C320) * C50199) *
                 C107 +
             ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
             C639 * C109 + C640 * C110) *
                C50344 +
            (((C50214 * C893 - C117 * C888) * C118 +
              (C50214 * C903 - C117 * C894) * C50199) *
                 C107 +
             ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
             ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
             ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
             ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
             C186 * C109 + C187 * C110) *
                C50344 +
            (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
             ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
             ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
             ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                C50182) *
               C1018 +
           ((((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
             ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
             ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
             ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                C50344 +
            (((C910 - C909) * C118 + (C912 - C911) * C50199) * C107 +
             ((C914 - C913) * C118 + (C916 - C915) * C50199) * C108 +
             ((C918 - C917) * C118 + (C920 - C919) * C50199) * C109 +
             ((C117 * C892 - C50214 * C901) * C118 +
              (C117 * C902 - C50214 * C907) * C50199) *
                 C110) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
               C5096 * C473 - C5099 * C459) *
                  C118 +
              (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
               C5096 * C489 - C5099 * C474) *
                  C50199) *
                 C2285 +
             ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
              (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                 C50062) *
                C50344 +
            (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
               C5099 * C1839 - C5096 * C1843) *
                  C118 +
              (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
               C5099 * C1844 - C5096 * C1851) *
                  C50199) *
                 C2285 +
             ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
              (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
               C5099 * C1208 - C5096 * C1212) *
                  C118 +
              (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
               C5099 * C1213 - C5096 * C1220) *
                  C50199) *
                 C2285 +
             ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
              (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                 C50062) *
                C50344 +
            (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
               C5096 * C4498 - C5099 * C4494) *
                  C118 +
              (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
               C5096 * C4506 - C5099 * C4499) *
                  C50199) *
                 C2285 +
             ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
              (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
              (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                 C2285 +
             ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
              (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                 C50062) *
                C50344 +
            (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
              (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                 C2285 +
             ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
              (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
              (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                 C2285 +
             ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
              (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                 C50062) *
                C50344 +
            (((C6004 - C6003 + C6006 - C6005 + C6008 - C6007) * C118 +
              (C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C50199) *
                 C2285 +
             ((C5097 * C890 - C5094 * C897 + C5098 * C1210 - C5095 * C1216 +
               C5099 * C5998 - C5096 * C5999) *
                  C118 +
              (C5097 * C898 - C5094 * C905 + C5098 * C1217 - C5095 * C1222 +
               C5099 * C6000 - C5096 * C6001) *
                  C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C50118 * C1089 +
          (((C117 * C290 - C50214 * C300) * C118 +
            (C117 * C301 - C50214 * C320) * C50199) *
               C107 +
           ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
           C639 * C109 + C640 * C110) *
              C50118 * C1090 +
          (((C50214 * C308 - C117 * C294) * C118 +
            (C50214 * C324 - C117 * C309) * C50199) *
               C107 +
           ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
           ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
           ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
              C50118 * C1091 +
          (((C117 * C1094 - C50214 * C1098) * C118 +
            (C117 * C1099 - C50214 * C1106) * C50199) *
               C107 +
           ((C117 * C1095 - C50214 * C1100) * C118 +
            (C117 * C1101 - C50214 * C1107) * C50199) *
               C108 +
           ((C117 * C1096 - C50214 * C1102) * C118 +
            (C117 * C1103 - C50214 * C1108) * C50199) *
               C109 +
           ((C117 * C1097 - C50214 * C1104) * C118 +
            (C117 * C1105 - C50214 * C1109) * C50199) *
               C110) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C1018 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C1018 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50154) *
              C1021 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50118 * C1018 +
           (C639 * C107 + C640 * C108 +
            ((C632 - C631) * C118 + (C634 - C633) * C50199) * C109 +
            ((C117 * C622 - C50214 * C623) * C118 +
             (C117 * C624 - C50214 * C625) * C50199) *
                C110) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C1018 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C627 * C2287 + C628 * C2282 + C2477 * C2288 + C2478 * C2283 +
             (C2480 - C2479) * C2289 + (C2482 - C2481) * C2284) *
                C2285 +
            (C629 * C2287 + C630 * C2282 + (C352 - C351) * C2288 +
             (C354 - C353) * C2283 + (C117 * C1097 - C50214 * C1104) * C2289 +
             (C117 * C1105 - C50214 * C1109) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
            (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
            C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
               C50062) *
              C50118 * C1089 +
          (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
            (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
            C3438 * C2284) *
               C2285 +
           (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
            C2485 * C2289 + C2486 * C2284) *
               C50062) *
              C50118 * C1090 +
          ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
            (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
            (C3441 - C3442) * C2284) *
               C2285 +
           (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
            (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
               C50062) *
              C50118 * C1091 +
          ((C3437 * C2287 + C3438 * C2282 + (C3440 - C3439) * C2288 +
            (C3442 - C3441) * C2283 + (C117 * C3428 - C50214 * C3430) * C2289 +
            (C117 * C3431 - C50214 * C3434) * C2284) *
               C2285 +
           (C2485 * C2287 + C2486 * C2282 + (C2474 - C2473) * C2288 +
            (C2476 - C2475) * C2283 + (C117 * C3429 - C50214 * C3432) * C2289 +
            (C117 * C3433 - C50214 * C3435) * C2284) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                C2285 +
            ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
             (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          ((((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
             (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
                C2285 +
            ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
             (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C5636 - C5635 + C5638 - C5637 + C5640 - C5639) * C118 +
             (C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C50199) *
                C2285 +
            ((C5097 * C293 - C5094 * C306 + C5098 * C891 - C5095 * C899 +
              C5099 * C1211 - C5096 * C1218) *
                 C118 +
             (C5097 * C307 - C5094 * C323 + C5098 * C900 - C5095 * C906 +
              C5099 * C1219 - C5096 * C1223) *
                 C50199) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C118 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C50199) *
               C2285 +
           ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
               C50062) *
              C50118 * C1089 +
          (((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
             C5099 * C1208 - C5096 * C1212) *
                C118 +
            (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
             C5099 * C1213 - C5096 * C1220) *
                C50199) *
               C2285 +
           ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
               C50062) *
              C50118 * C1090 +
          (((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
             C5096 * C2637 - C5099 * C2634) *
                C118 +
            (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
             C5096 * C2643 - C5099 * C2638) *
                C50199) *
               C2285 +
           ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
               C50062) *
              C50118 * C1091 +
          (((C5097 * C1094 - C5094 * C1098 + C5098 * C3152 - C5095 * C3155 +
             C5099 * C3588 - C5096 * C3590) *
                C118 +
            (C5097 * C1099 - C5094 * C1106 + C5098 * C3156 - C5095 * C3161 +
             C5099 * C3591 - C5096 * C3594) *
                C50199) *
               C2285 +
           ((C5097 * C1095 - C5094 * C1100 + C5098 * C3153 - C5095 * C3157 +
             C5099 * C3589 - C5096 * C3592) *
                C118 +
            (C5097 * C1101 - C5094 * C1107 + C5098 * C3158 - C5095 * C3162 +
             C5099 * C3593 - C5096 * C3595) *
                C50199) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C2287 +
              (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
              (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                 C2285 +
             ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
              C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                 C50062) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C2287 +
              (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
              (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                 C2285 +
             ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
              C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
              (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
              C3437 * C2289 + C3438 * C2284) *
                 C2285 +
             (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
              C2485 * C2289 + C2486 * C2284) *
                 C50062) *
                C1669 +
            (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
              (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
              (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                 C2285 +
             (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
              (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
              C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                 C2285 +
             ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
              C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                 C50062) *
                C1669 +
            (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
              C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                 C2285 +
             ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
              (C913 - C914) * C2288 + (C915 - C916) * C2283 +
              (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           (((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
              C2487 * C2289 + C2488 * C2284) *
                 C2285 +
             (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
              (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                 C50062) *
                C1669 +
            ((C3173 * C2287 + C3174 * C2282 + C3175 * C2288 + C3176 * C2283 +
              (C3182 - C3181) * C2289 + (C3184 - C3183) * C2284) *
                 C2285 +
             ((C914 - C913) * C2287 + (C916 - C915) * C2282 +
              (C2956 - C2955) * C2288 + (C2958 - C2957) * C2283 +
              (C117 * C3154 - C50214 * C3159) * C2289 +
              (C117 * C3160 - C50214 * C3163) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C118 +
              (C50214 * C140 - C117 * C127) * C50199) *
                 C107 +
             ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
             C184 * C109 + C185 * C110) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C118 +
              (C117 * C466 - C50214 * C485) * C50199) *
                 C107 +
             ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
             C757 * C109 + C758 * C110) *
                C50182) *
               C50343 +
           ((((C117 * C290 - C50214 * C300) * C118 +
              (C117 * C301 - C50214 * C320) * C50199) *
                 C107 +
             ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
             C639 * C109 + C640 * C110) *
                C1669 +
            (((C50214 * C893 - C117 * C888) * C118 +
              (C50214 * C903 - C117 * C894) * C50199) *
                 C107 +
             ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
             ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
             ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
             ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
             C186 * C109 + C187 * C110) *
                C1669 +
            (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
             ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
             ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
             ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                C50182) *
               C50343 +
           ((((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
             ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
             ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
             ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                C1669 +
            (((C910 - C909) * C118 + (C912 - C911) * C50199) * C107 +
             ((C914 - C913) * C118 + (C916 - C915) * C50199) * C108 +
             ((C918 - C917) * C118 + (C920 - C919) * C50199) * C109 +
             ((C117 * C892 - C50214 * C901) * C118 +
              (C117 * C902 - C50214 * C907) * C50199) *
                 C110) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
               C5096 * C473 - C5099 * C459) *
                  C118 +
              (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
               C5096 * C489 - C5099 * C474) *
                  C50199) *
                 C2285 +
             ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
              (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                 C50062) *
                C1669 +
            (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
               C5099 * C1839 - C5096 * C1843) *
                  C118 +
              (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
               C5099 * C1844 - C5096 * C1851) *
                  C50199) *
                 C2285 +
             ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
              (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
               C5099 * C1208 - C5096 * C1212) *
                  C118 +
              (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
               C5099 * C1213 - C5096 * C1220) *
                  C50199) *
                 C2285 +
             ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
              (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                 C50062) *
                C1669 +
            (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
               C5096 * C4498 - C5099 * C4494) *
                  C118 +
              (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
               C5096 * C4506 - C5099 * C4499) *
                  C50199) *
                 C2285 +
             ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
              (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
              (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                 C2285 +
             ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
              (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                 C50062) *
                C1669 +
            (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
              (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                 C2285 +
             ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
              (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C118 +
              (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C50199) *
                 C2285 +
             ((C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C118 +
              (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50199) *
                 C50062) *
                C1669 +
            (((C6004 - C6003 + C6006 - C6005 + C6008 - C6007) * C118 +
              (C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C50199) *
                 C2285 +
             ((C5097 * C890 - C5094 * C897 + C5098 * C1210 - C5095 * C1216 +
               C5099 * C5998 - C5096 * C5999) *
                  C118 +
              (C5097 * C898 - C5094 * C905 + C5098 * C1217 - C5095 * C1222 +
               C5099 * C6000 - C5096 * C6001) *
                  C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
             (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
             (C3603 - C3604) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C2085) *
              C50343 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50390 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50391 +
           (((C3598 - C3597) * C2287 + (C3600 - C3599) * C2282 +
             (C3602 - C3601) * C2288 + (C3604 - C3603) * C2283 +
             (C117 * C3588 - C50214 * C3590) * C2289 +
             (C117 * C3591 - C50214 * C3594) * C2284) *
                C2285 +
            ((C2652 - C2651) * C2287 + (C2654 - C2653) * C2282 +
             (C2656 - C2655) * C2288 + (C2658 - C2657) * C2283 +
             (C117 * C3589 - C50214 * C3592) * C2289 +
             (C117 * C3593 - C50214 * C3595) * C2284) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C2085) *
              C50343 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50390 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50391 +
           (((C117 * C1208 - C50214 * C1212) * C118 +
             (C117 * C1213 - C50214 * C1220) * C50199) *
                C107 +
            ((C117 * C1209 - C50214 * C1214) * C118 +
             (C117 * C1215 - C50214 * C1221) * C50199) *
                C108 +
            ((C117 * C1210 - C50214 * C1216) * C118 +
             (C117 * C1217 - C50214 * C1222) * C50199) *
                C109 +
            ((C117 * C1211 - C50214 * C1218) * C118 +
             (C117 * C1219 - C50214 * C1223) * C50199) *
                C110) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50390 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50391 +
           (((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
              C5096 * C5455 - C5099 * C5452) *
                 C118 +
             (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
              C5096 * C5461 - C5099 * C5456) *
                 C50199) *
                C2285 +
            ((C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C118 +
             (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C50199) *
                C50062) *
               C2085) *
              C50343 +
          ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C50390 +
           (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
              C5096 * C4498 - C5099 * C4494) *
                 C118 +
             (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
              C5096 * C4506 - C5099 * C4499) *
                 C50199) *
                C2285 +
            ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                C50062) *
               C50391 +
           (((C5097 * C1208 - C5094 * C1212 + C5098 * C4494 - C5095 * C4498 +
              C5099 * C6404 - C5096 * C6406) *
                 C118 +
             (C5097 * C1213 - C5094 * C1220 + C5098 * C4499 - C5095 * C4506 +
              C5099 * C6407 - C5096 * C6410) *
                 C50199) *
                C2285 +
            ((C5097 * C1209 - C5094 * C1214 + C5098 * C4496 - C5095 * C4502 +
              C5099 * C6405 - C5096 * C6408) *
                 C118 +
             (C5097 * C1215 - C5094 * C1221 + C5098 * C4503 - C5095 * C4508 +
              C5099 * C6409 - C5096 * C6411) *
                 C50199) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C118 +
                 (C50214 * C140 - C117 * C127) * C50199) *
                    C107 +
                ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
                C184 * C109 + C185 * C110) *
                   C1669 +
               (((C117 * C455 - C50214 * C465) * C118 +
                 (C117 * C466 - C50214 * C485) * C50199) *
                    C107 +
                ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
                C757 * C109 + C758 * C110) *
                   C50182) *
                  C50102 * C1020 +
              ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
                ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
                C186 * C109 + C187 * C110) *
                   C1669 +
               (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
                ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
                ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
                ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                   C50182) *
                  C50102 * C1021 +
              ((C184 * C107 + C185 * C108 +
                ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
                ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
                   C1669 +
               (C757 * C107 + C758 * C108 +
                ((C750 - C749) * C118 + (C752 - C751) * C50199) * C109 +
                ((C117 * C740 - C50214 * C741) * C118 +
                 (C117 * C742 - C50214 * C743) * C50199) *
                    C110) *
                   C50182) *
                  C50102 * C1022) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C118 +
                 (C50214 * C140 - C117 * C127) * C50199) *
                    C107 +
                ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
                C184 * C109 + C185 * C110) *
                   C1669 +
               (((C117 * C455 - C50214 * C465) * C118 +
                 (C117 * C466 - C50214 * C485) * C50199) *
                    C107 +
                ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
                C757 * C109 + C758 * C110) *
                   C50182) *
                  C285 +
              ((((C117 * C290 - C50214 * C300) * C118 +
                 (C117 * C301 - C50214 * C320) * C50199) *
                    C107 +
                ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
                C639 * C109 + C640 * C110) *
                   C1669 +
               (((C50214 * C893 - C117 * C888) * C118 +
                 (C50214 * C903 - C117 * C894) * C50199) *
                    C107 +
                ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
                ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
                ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                   C50182) *
                  C286 +
              ((((C50214 * C308 - C117 * C294) * C118 +
                 (C50214 * C324 - C117 * C309) * C50199) *
                    C107 +
                ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
                ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
                ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
                   C1669 +
               (((C117 * C1555 - C50214 * C1559) * C118 +
                 (C117 * C1560 - C50214 * C1567) * C50199) *
                    C107 +
                ((C117 * C1556 - C50214 * C1561) * C118 +
                 (C117 * C1562 - C50214 * C1568) * C50199) *
                    C108 +
                ((C117 * C1557 - C50214 * C1563) * C118 +
                 (C117 * C1564 - C50214 * C1569) * C50199) *
                    C109 +
                ((C117 * C1558 - C50214 * C1565) * C118 +
                 (C117 * C1566 - C50214 * C1570) * C50199) *
                    C110) *
                   C50182) *
                  C287) *
             C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C118 +
            (C117 * C466 - C50214 * C485) * C50199) *
               C107 +
           ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
           C757 * C109 + C758 * C110) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C118 +
            (C50214 * C489 - C117 * C474) * C50199) *
               C107 +
           ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
           ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
           ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C118 +
            (C117 * C1844 - C50214 * C1851) * C50199) *
               C107 +
           ((C117 * C1840 - C50214 * C1845) * C118 +
            (C117 * C1846 - C50214 * C1852) * C50199) *
               C108 +
           ((C117 * C1841 - C50214 * C1847) * C118 +
            (C117 * C1848 - C50214 * C1853) * C50199) *
               C109 +
           ((C117 * C1842 - C50214 * C1849) * C118 +
            (C117 * C1850 - C50214 * C1854) * C50199) *
               C110) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C1669 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
             C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C1669 +
           ((C745 * C2287 + C746 * C2282 + (C914 - C913) * C2288 +
             (C916 - C915) * C2283 + (C2956 - C2955) * C2289 +
             (C2958 - C2957) * C2284) *
                C2285 +
            (C747 * C2287 + C748 * C2282 + (C918 - C917) * C2288 +
             (C920 - C919) * C2283 + (C117 * C1558 - C50214 * C1565) * C2289 +
             (C117 * C1566 - C50214 * C1570) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C1669 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50182) *
              C286 +
          (((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C1669 +
           ((C4099 * C2287 + C4100 * C2282 + (C4102 - C4101) * C2288 +
             (C4104 - C4103) * C2283 + (C117 * C4090 - C50214 * C4092) * C2289 +
             (C117 * C4093 - C50214 * C4096) * C2284) *
                C2285 +
            (C3175 * C2287 + C3176 * C2282 + (C3182 - C3181) * C2288 +
             (C3184 - C3183) * C2283 + (C117 * C4091 - C50214 * C4094) * C2289 +
             (C117 * C4095 - C50214 * C4097) * C2284) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
            (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
            C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
               C50062) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C2287 +
            (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
            (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
               C2285 +
           ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
            C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
               C50062) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C2287 +
            (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
            (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
            (C3603 - C3604) * C2284) *
               C2285 +
           ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
            (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
            (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
               C50062) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C2287 +
            (C117 * C1844 - C50214 * C1851) * C2282 +
            (C117 * C4494 - C50214 * C4498) * C2288 +
            (C117 * C4499 - C50214 * C4506) * C2283 +
            (C117 * C4495 - C50214 * C4500) * C2289 +
            (C117 * C4501 - C50214 * C4507) * C2284) *
               C2285 +
           ((C117 * C1840 - C50214 * C1845) * C2287 +
            (C117 * C1846 - C50214 * C1852) * C2282 +
            (C117 * C4496 - C50214 * C4502) * C2288 +
            (C117 * C4503 - C50214 * C4508) * C2283 +
            (C117 * C4497 - C50214 * C4504) * C2289 +
            (C117 * C4505 - C50214 * C4509) * C2284) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C1669 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C1669 +
           (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                C2285 +
            ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          ((((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
             (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
                C2285 +
            ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
             (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
                C50062) *
               C1669 +
           (((C5794 - C5793 + C5796 - C5795 + C5798 - C5797) * C118 +
             (C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C50199) *
                C2285 +
            ((C5097 * C458 - C5094 * C471 + C5098 * C462 - C5095 * C479 +
              C5099 * C1842 - C5096 * C1849) *
                 C118 +
             (C5097 * C472 - C5094 * C488 + C5098 * C480 - C5095 * C492 +
              C5099 * C1850 - C5096 * C1854) *
                 C50199) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C1669 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50182) *
              C285 +
          ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C1669 +
           (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
              C5096 * C4498 - C5099 * C4494) *
                 C118 +
             (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
              C5096 * C4506 - C5099 * C4499) *
                 C50199) *
                C2285 +
            ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                C50062) *
               C50182) *
              C286 +
          ((((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
              C5096 * C2637 - C5099 * C2634) *
                 C118 +
             (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
              C5096 * C2643 - C5099 * C2638) *
                 C50199) *
                C2285 +
            ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
                C50062) *
               C1669 +
           (((C5097 * C1555 - C5094 * C1559 + C5098 * C2634 - C5095 * C2637 +
              C5099 * C4495 - C5096 * C4500) *
                 C118 +
             (C5097 * C1560 - C5094 * C1567 + C5098 * C2638 - C5095 * C2643 +
              C5099 * C4501 - C5096 * C4507) *
                 C50199) *
                C2285 +
            ((C5097 * C1556 - C5094 * C1561 + C5098 * C2635 - C5095 * C2639 +
              C5099 * C4497 - C5096 * C4504) *
                 C118 +
             (C5097 * C1562 - C5094 * C1568 + C5098 * C2640 - C5095 * C2644 +
              C5099 * C4505 - C5096 * C4509) *
                 C50199) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C118 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C50199) *
               C2285 +
           ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
            (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
               C50062) *
              C1835 +
          (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C118 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C50199) *
               C2285 +
           ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
            (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
               C50062) *
              C1836 +
          (((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
             C5096 * C5455 - C5099 * C5452) *
                C118 +
            (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
             C5096 * C5461 - C5099 * C5456) *
                C50199) *
               C2285 +
           ((C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C118 +
            (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C50199) *
               C50062) *
              C1837 +
          (((C5097 * C1839 - C5094 * C1843 + C5098 * C5452 - C5095 * C5455 +
             C5099 * C7288 - C5096 * C7290) *
                C118 +
            (C5097 * C1844 - C5094 * C1851 + C5098 * C5456 - C5095 * C5461 +
             C5099 * C7291 - C5096 * C7294) *
                C50199) *
               C2285 +
           ((C5097 * C1840 - C5094 * C1845 + C5098 * C5453 - C5095 * C5457 +
             C5099 * C7289 - C5096 * C7292) *
                C118 +
            (C5097 * C1846 - C5094 * C1852 + C5098 * C5458 - C5095 * C5462 +
             C5099 * C7293 - C5096 * C7295) *
                C50199) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
             (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
             (C3603 - C3604) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50390 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
             C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50391 +
           (((C509 - C508) * C2287 + (C511 - C510) * C2282 +
             (C2652 - C2651) * C2288 + (C2654 - C2653) * C2283 +
             (C2656 - C2655) * C2289 + (C2658 - C2657) * C2284) *
                C2285 +
            ((C513 - C512) * C2287 + (C515 - C514) * C2282 +
             (C117 * C1210 - C50214 * C1216) * C2288 +
             (C117 * C1217 - C50214 * C1222) * C2283 +
             (C117 * C2636 - C50214 * C2641) * C2289 +
             (C117 * C2642 - C50214 * C2645) * C2284) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50390 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50391 +
           (((C509 - C508) * C118 + (C511 - C510) * C50199) * C107 +
            ((C513 - C512) * C118 + (C515 - C514) * C50199) * C108 +
            ((C517 - C516) * C118 + (C519 - C518) * C50199) * C109 +
            ((C117 * C464 - C50214 * C483) * C118 +
             (C117 * C484 - C50214 * C494) * C50199) *
                C110) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C50390 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50391 +
           (((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
              C5096 * C5455 - C5099 * C5452) *
                 C118 +
             (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
              C5096 * C5461 - C5099 * C5456) *
                 C50199) *
                C2285 +
            ((C5477 - C5478 + C5479 - C5480 + C5481 - C5482) * C118 +
             (C5483 - C5484 + C5485 - C5486 + C5487 - C5488) * C50199) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C50390 +
           (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                C2285 +
            ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                C50062) *
               C50391 +
           (((C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C118 +
             (C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C50199) *
                C2285 +
            ((C5097 * C461 - C5094 * C477 + C5098 * C1841 - C5095 * C1847 +
              C5099 * C5454 - C5096 * C5459) *
                 C118 +
             (C5097 * C478 - C5094 * C491 + C5098 * C1848 - C5095 * C1853 +
              C5099 * C5460 - C5096 * C5463) *
                 C50199) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C285 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C1669 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50182) *
              C286 +
          ((((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C1669 +
           (((C117 * C1555 - C50214 * C1559) * C118 +
             (C117 * C1560 - C50214 * C1567) * C50199) *
                C107 +
            ((C117 * C1556 - C50214 * C1561) * C118 +
             (C117 * C1562 - C50214 * C1568) * C50199) *
                C108 +
            ((C117 * C1557 - C50214 * C1563) * C118 +
             (C117 * C1564 - C50214 * C1569) * C50199) *
                C109 +
            ((C117 * C1558 - C50214 * C1565) * C118 +
             (C117 * C1566 - C50214 * C1570) * C50199) *
                C110) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C1669 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50182) *
              C50102 * C1021 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C1669 +
           (C757 * C107 + C758 * C108 +
            ((C750 - C749) * C118 + (C752 - C751) * C50199) * C109 +
            ((C117 * C740 - C50214 * C741) * C118 +
             (C117 * C742 - C50214 * C743) * C50199) *
                C110) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C1669 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
             C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C1669 +
           ((C745 * C2287 + C746 * C2282 + (C914 - C913) * C2288 +
             (C916 - C915) * C2283 + (C2956 - C2955) * C2289 +
             (C2958 - C2957) * C2284) *
                C2285 +
            (C747 * C2287 + C748 * C2282 + (C918 - C917) * C2288 +
             (C920 - C919) * C2283 + (C117 * C1558 - C50214 * C1565) * C2289 +
             (C117 * C1566 - C50214 * C1570) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C1669 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50182) *
              C286 +
          (((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C1669 +
           ((C4099 * C2287 + C4100 * C2282 + (C4102 - C4101) * C2288 +
             (C4104 - C4103) * C2283 + (C117 * C4090 - C50214 * C4092) * C2289 +
             (C117 * C4093 - C50214 * C4096) * C2284) *
                C2285 +
            (C3175 * C2287 + C3176 * C2282 + (C3182 - C3181) * C2288 +
             (C3184 - C3183) * C2283 + (C117 * C4091 - C50214 * C4094) * C2289 +
             (C117 * C4095 - C50214 * C4097) * C2284) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C1669 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C118 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C50199) *
                C2285 +
            ((C5113 - C5114 + C5115 - C5116 + C5117 - C5118) * C118 +
             (C5119 - C5120 + C5121 - C5122 + C5123 - C5124) * C50199) *
                C50062) *
               C1669 +
           (((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C118 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C50199) *
                C2285 +
            ((C5793 - C5794 + C5795 - C5796 + C5797 - C5798) * C118 +
             (C5799 - C5800 + C5801 - C5802 + C5803 - C5804) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          ((((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C118 +
             (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C50199) *
                C2285 +
            ((C5125 - C5126 + C5127 - C5128 + C5129 - C5130) * C118 +
             (C5131 - C5132 + C5133 - C5134 + C5135 - C5136) * C50199) *
                C50062) *
               C1669 +
           (((C5794 - C5793 + C5796 - C5795 + C5798 - C5797) * C118 +
             (C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C50199) *
                C2285 +
            ((C5097 * C458 - C5094 * C471 + C5098 * C462 - C5095 * C479 +
              C5099 * C1842 - C5096 * C1849) *
                 C118 +
             (C5097 * C472 - C5094 * C488 + C5098 * C480 - C5095 * C492 +
              C5099 * C1850 - C5096 * C1854) *
                 C50199) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C118 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C50199) *
                C2285 +
            ((C5101 - C5102 + C5103 - C5104 + C5105 - C5106) * C118 +
             (C5107 - C5108 + C5109 - C5110 + C5111 - C5112) * C50199) *
                C50062) *
               C1669 +
           (((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C118 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C50199) *
                C2285 +
            ((C5465 - C5466 + C5467 - C5468 + C5469 - C5470) * C118 +
             (C5471 - C5472 + C5473 - C5474 + C5475 - C5476) * C50199) *
                C50062) *
               C50182) *
              C285 +
          ((((C5097 * C290 - C5094 * C300 + C5098 * C888 - C5095 * C893 +
              C5099 * C1208 - C5096 * C1212) *
                 C118 +
             (C5097 * C301 - C5094 * C320 + C5098 * C894 - C5095 * C903 +
              C5099 * C1213 - C5096 * C1220) *
                 C50199) *
                C2285 +
            ((C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C118 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50199) *
                C50062) *
               C1669 +
           (((C5094 * C893 - C5097 * C888 + C5095 * C1212 - C5098 * C1208 +
              C5096 * C4498 - C5099 * C4494) *
                 C118 +
             (C5094 * C903 - C5097 * C894 + C5095 * C1220 - C5098 * C1213 +
              C5096 * C4506 - C5099 * C4499) *
                 C50199) *
                C2285 +
            ((C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C118 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50199) *
                C50062) *
               C50182) *
              C286 +
          ((((C5094 * C308 - C5097 * C294 + C5095 * C1559 - C5098 * C1555 +
              C5096 * C2637 - C5099 * C2634) *
                 C118 +
             (C5094 * C324 - C5097 * C309 + C5095 * C1567 - C5098 * C1560 +
              C5096 * C2643 - C5099 * C2638) *
                 C50199) *
                C2285 +
            ((C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C118 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50199) *
                C50062) *
               C1669 +
           (((C5097 * C1555 - C5094 * C1559 + C5098 * C2634 - C5095 * C2637 +
              C5099 * C4495 - C5096 * C4500) *
                 C118 +
             (C5097 * C1560 - C5094 * C1567 + C5098 * C2638 - C5095 * C2643 +
              C5099 * C4501 - C5096 * C4507) *
                 C50199) *
                C2285 +
            ((C5097 * C1556 - C5094 * C1561 + C5098 * C2635 - C5095 * C2639 +
              C5099 * C4497 - C5096 * C4504) *
                 C118 +
             (C5097 * C1562 - C5094 * C1568 + C5098 * C2640 - C5095 * C2644 +
              C5099 * C4505 - C5096 * C4509) *
                 C50199) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50118 * C50343 +
           (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C50118 * C50154) *
              C50386 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50118 * C50343 +
           (((C10755 - C10754 + C10757 - C10756) * C118 +
             (C10759 - C10758 + C10761 - C10760) * C50199) *
                C50384 +
            ((C10763 - C10762 + C10765 - C10764) * C118 +
             (C10767 - C10766 + C10769 - C10768) * C50199) *
                C50385 +
            ((C11114 - C11115 + C11116 - C11117) * C118 +
             (C11118 - C11119 + C11120 - C11121) * C50199) *
                C7884) *
               C50118 * C50154) *
              C50387 +
          ((C10606 * C50384 +
            ((C10575 - C10574 + C10577 - C10576) * C118 +
             (C10579 - C10578 + C10581 - C10580) * C50199) *
                C50385 +
            ((C10582 - C10583 + C10584 - C10585) * C118 +
             (C10586 - C10587 + C10588 - C10589) * C50199) *
                C7884) *
               C50118 * C50343 +
           (C11126 * C50384 +
            ((C11115 - C11114 + C11117 - C11116) * C118 +
             (C11119 - C11118 + C11121 - C11120) * C50199) *
                C50385 +
            ((C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                 C118 +
             (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                 C50199) *
                C7884) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C118 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C50199) *
                 C50384 +
             ((C10558 - C10559 + C10560 - C10561) * C118 +
              (C10562 - C10563 + C10564 - C10565) * C50199) *
                 C50385 +
             C10606 * C7884) *
                C50344 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C118 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C50199) *
                 C50384 +
             ((C10932 - C10933 + C10934 - C10935) * C118 +
              (C10936 - C10937 + C10938 - C10939) * C50199) *
                 C50385 +
             C11289 * C7884) *
                C50182) *
               C50343 +
           ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                  C118 +
              (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                  C50199) *
                 C50384 +
             ((C10754 - C10755 + C10756 - C10757) * C118 +
              (C10758 - C10759 + C10760 - C10761) * C50199) *
                 C50385 +
             C11126 * C7884) *
                C50344 +
            (((C50357 * C893 - C10555 * C888 + C50278 * C1212 -
               C10556 * C1208) *
                  C118 +
              (C50357 * C903 - C10555 * C894 + C50278 * C1220 -
               C10556 * C1213) *
                  C50199) *
                 C50384 +
             ((C11484 - C11485 + C11486 - C11487) * C118 +
              (C11488 - C11489 + C11490 - C11491) * C50199) *
                 C50385 +
             ((C11492 - C11493 + C11494 - C11495) * C118 +
              (C11496 - C11497 + C11498 - C11499) * C50199) *
                 C7884) *
                C50182) *
               C50154) *
              C288 +
          (((((C10559 - C10558 + C10561 - C10560) * C118 +
              (C10563 - C10562 + C10565 - C10564) * C50199) *
                 C50384 +
             ((C10567 - C10566 + C10569 - C10568) * C118 +
              (C10571 - C10570 + C10573 - C10572) * C50199) *
                 C50385 +
             C10607 * C7884) *
                C50344 +
            (((C10933 - C10932 + C10935 - C10934) * C118 +
              (C10937 - C10936 + C10939 - C10938) * C50199) *
                 C50384 +
             ((C10941 - C10940 + C10943 - C10942) * C118 +
              (C10945 - C10944 + C10947 - C10946) * C50199) *
                 C50385 +
             ((C11277 - C11278 + C11279 - C11280) * C118 +
              (C11281 - C11282 + C11283 - C11284) * C50199) *
                 C7884) *
                C50182) *
               C50343 +
           ((((C10755 - C10754 + C10757 - C10756) * C118 +
              (C10759 - C10758 + C10761 - C10760) * C50199) *
                 C50384 +
             ((C10763 - C10762 + C10765 - C10764) * C118 +
              (C10767 - C10766 + C10769 - C10768) * C50199) *
                 C50385 +
             ((C11114 - C11115 + C11116 - C11117) * C118 +
              (C11118 - C11119 + C11120 - C11121) * C50199) *
                 C7884) *
                C50344 +
            (((C11485 - C11484 + C11487 - C11486) * C118 +
              (C11489 - C11488 + C11491 - C11490) * C50199) *
                 C50384 +
             ((C11493 - C11492 + C11495 - C11494) * C118 +
              (C11497 - C11496 + C11499 - C11498) * C50199) *
                 C50385 +
             ((C10555 * C891 - C50357 * C899 + C10556 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C10555 * C900 - C50357 * C906 + C10556 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C7884) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50118 * C285 +
           (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            ((C10762 - C10763 + C10764 - C10765) * C118 +
             (C10766 - C10767 + C10768 - C10769) * C50199) *
                C7884) *
               C50118 * C286 +
           (((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                 C118 +
             (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                 C50199) *
                C50384 +
            ((C10770 - C10771 + C10772 - C10773) * C118 +
             (C10774 - C10775 + C10776 - C10777) * C50199) *
                C50385 +
            ((C10778 - C10779 + C10780 - C10781) * C118 +
             (C10782 - C10783 + C10784 - C10785) * C50199) *
                C7884) *
               C50118 * C287) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50118 * C285 +
           (((C10755 - C10754 + C10757 - C10756) * C118 +
             (C10759 - C10758 + C10761 - C10760) * C50199) *
                C50384 +
            ((C10763 - C10762 + C10765 - C10764) * C118 +
             (C10767 - C10766 + C10769 - C10768) * C50199) *
                C50385 +
            ((C50357 * C306 - C10555 * C293 + C50278 * C899 - C10556 * C891) *
                 C118 +
             (C50357 * C323 - C10555 * C307 + C50278 * C906 - C10556 * C900) *
                 C50199) *
                C7884) *
               C50118 * C286 +
           (((C10771 - C10770 + C10773 - C10772) * C118 +
             (C10775 - C10774 + C10777 - C10776) * C50199) *
                C50384 +
            ((C10779 - C10778 + C10781 - C10780) * C118 +
             (C10783 - C10782 + C10785 - C10784) * C50199) *
                C50385 +
            ((C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C118 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50199) *
                C7884) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C118 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50199) *
               C50384 +
           ((C10558 - C10559 + C10560 - C10561) * C118 +
            (C10562 - C10563 + C10564 - C10565) * C50199) *
               C50385 +
           C10606 * C7884) *
              C50118 * C50102 * C113 +
          (((C10559 - C10558 + C10561 - C10560) * C118 +
            (C10563 - C10562 + C10565 - C10564) * C50199) *
               C50384 +
           ((C10567 - C10566 + C10569 - C10568) * C118 +
            (C10571 - C10570 + C10573 - C10572) * C50199) *
               C50385 +
           C10607 * C7884) *
              C50118 * C50102 * C114 +
          (C10606 * C50384 +
           ((C10575 - C10574 + C10577 - C10576) * C118 +
            (C10579 - C10578 + C10581 - C10580) * C50199) *
               C50385 +
           ((C10582 - C10583 + C10584 - C10585) * C118 +
            (C10586 - C10587 + C10588 - C10589) * C50199) *
               C7884) *
              C50118 * C50102 * C115 +
          (C10607 * C50384 +
           ((C10583 - C10582 + C10585 - C10584) * C118 +
            (C10587 - C10586 + C10589 - C10588) * C50199) *
               C50385 +
           ((C10555 * C124 - C50357 * C136 + C10556 * C740 - C50278 * C741) *
                C118 +
            (C10555 * C137 - C50357 * C145 + C10556 * C742 - C50278 * C743) *
                C50199) *
               C7884) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C452 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            ((C10940 - C10941 + C10942 - C10943) * C118 +
             (C10944 - C10945 + C10946 - C10947) * C50199) *
                C7884) *
               C453 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C118 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50199) *
                C50384 +
            ((C10948 - C10949 + C10950 - C10951) * C118 +
             (C10952 - C10953 + C10954 - C10955) * C50199) *
                C50385 +
            ((C10956 - C10957 + C10958 - C10959) * C118 +
             (C10960 - C10961 + C10962 - C10963) * C50199) *
                C7884) *
               C454) *
              C50102 * C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C452 +
           (((C10933 - C10932 + C10935 - C10934) * C118 +
             (C10937 - C10936 + C10939 - C10938) * C50199) *
                C50384 +
            ((C10941 - C10940 + C10943 - C10942) * C118 +
             (C10945 - C10944 + C10947 - C10946) * C50199) *
                C50385 +
            ((C50357 * C471 - C10555 * C458 + C50278 * C479 - C10556 * C462) *
                 C118 +
             (C50357 * C488 - C10555 * C472 + C50278 * C492 - C10556 * C480) *
                 C50199) *
                C7884) *
               C453 +
           (((C10949 - C10948 + C10951 - C10950) * C118 +
             (C10953 - C10952 + C10955 - C10954) * C50199) *
                C50384 +
            ((C10957 - C10956 + C10959 - C10958) * C118 +
             (C10961 - C10960 + C10963 - C10962) * C50199) *
                C50385 +
            ((C10555 * C462 - C50357 * C479 + C10556 * C1842 - C50278 * C1849) *
                 C118 +
             (C10555 * C480 - C50357 * C492 + C10556 * C1850 - C50278 * C1854) *
                 C50199) *
                C7884) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50344 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50182) *
              C50102 * C50386 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50344 +
           (((C10933 - C10932 + C10935 - C10934) * C118 +
             (C10937 - C10936 + C10939 - C10938) * C50199) *
                C50384 +
            ((C10941 - C10940 + C10943 - C10942) * C118 +
             (C10945 - C10944 + C10947 - C10946) * C50199) *
                C50385 +
            ((C11277 - C11278 + C11279 - C11280) * C118 +
             (C11281 - C11282 + C11283 - C11284) * C50199) *
                C7884) *
               C50182) *
              C50102 * C50387 +
          ((C10606 * C50384 +
            ((C10575 - C10574 + C10577 - C10576) * C118 +
             (C10579 - C10578 + C10581 - C10580) * C50199) *
                C50385 +
            ((C10582 - C10583 + C10584 - C10585) * C118 +
             (C10586 - C10587 + C10588 - C10589) * C50199) *
                C7884) *
               C50344 +
           (C11289 * C50384 +
            ((C11278 - C11277 + C11280 - C11279) * C118 +
             (C11282 - C11281 + C11284 - C11283) * C50199) *
                C50385 +
            ((C10555 * C463 - C50357 * C481 + C10556 * C464 - C50278 * C483) *
                 C118 +
             (C10555 * C482 - C50357 * C493 + C10556 * C484 - C50278 * C494) *
                 C50199) *
                C7884) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C118 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50199) *
               C50384 +
           ((C10558 - C10559 + C10560 - C10561) * C118 +
            (C10562 - C10563 + C10564 - C10565) * C50199) *
               C50385 +
           C10606 * C7884) *
              C50118 * C50102 * C113 +
          (((C10559 - C10558 + C10561 - C10560) * C118 +
            (C10563 - C10562 + C10565 - C10564) * C50199) *
               C50384 +
           ((C10567 - C10566 + C10569 - C10568) * C118 +
            (C10571 - C10570 + C10573 - C10572) * C50199) *
               C50385 +
           C10607 * C7884) *
              C50118 * C50102 * C114 +
          (C10606 * C50384 +
           ((C10575 - C10574 + C10577 - C10576) * C118 +
            (C10579 - C10578 + C10581 - C10580) * C50199) *
               C50385 +
           ((C10582 - C10583 + C10584 - C10585) * C118 +
            (C10586 - C10587 + C10588 - C10589) * C50199) *
               C7884) *
              C50118 * C50102 * C115 +
          (C10607 * C50384 +
           ((C10583 - C10582 + C10585 - C10584) * C118 +
            (C10587 - C10586 + C10589 - C10588) * C50199) *
               C50385 +
           ((C10555 * C124 - C50357 * C136 + C10556 * C740 - C50278 * C741) *
                C118 +
            (C10555 * C137 - C50357 * C145 + C10556 * C742 - C50278 * C743) *
                C50199) *
               C7884) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50118 * C285 +
           (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            ((C10762 - C10763 + C10764 - C10765) * C118 +
             (C10766 - C10767 + C10768 - C10769) * C50199) *
                C7884) *
               C50118 * C286 +
           (((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                 C118 +
             (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                 C50199) *
                C50384 +
            ((C10770 - C10771 + C10772 - C10773) * C118 +
             (C10774 - C10775 + C10776 - C10777) * C50199) *
                C50385 +
            ((C10778 - C10779 + C10780 - C10781) * C118 +
             (C10782 - C10783 + C10784 - C10785) * C50199) *
                C7884) *
               C50118 * C287) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50118 * C285 +
           (((C10755 - C10754 + C10757 - C10756) * C118 +
             (C10759 - C10758 + C10761 - C10760) * C50199) *
                C50384 +
            ((C10763 - C10762 + C10765 - C10764) * C118 +
             (C10767 - C10766 + C10769 - C10768) * C50199) *
                C50385 +
            ((C50357 * C306 - C10555 * C293 + C50278 * C899 - C10556 * C891) *
                 C118 +
             (C50357 * C323 - C10555 * C307 + C50278 * C906 - C10556 * C900) *
                 C50199) *
                C7884) *
               C50118 * C286 +
           (((C10771 - C10770 + C10773 - C10772) * C118 +
             (C10775 - C10774 + C10777 - C10776) * C50199) *
                C50384 +
            ((C10779 - C10778 + C10781 - C10780) * C118 +
             (C10783 - C10782 + C10785 - C10784) * C50199) *
                C50385 +
            ((C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C118 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50199) *
                C7884) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50118 * C50388 +
           (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C50118 * C50389 +
           (((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                 C118 +
             (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                 C50199) *
                C50384 +
            ((C10770 - C10771 + C10772 - C10773) * C118 +
             (C10774 - C10775 + C10776 - C10777) * C50199) *
                C50385 +
            ((C10778 - C10779 + C10780 - C10781) * C118 +
             (C10782 - C10783 + C10784 - C10785) * C50199) *
                C7884) *
               C50118 * C1324) *
              C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50118 * C50388 +
           (((C10755 - C10754 + C10757 - C10756) * C118 +
             (C10759 - C10758 + C10761 - C10760) * C50199) *
                C50384 +
            ((C10763 - C10762 + C10765 - C10764) * C118 +
             (C10767 - C10766 + C10769 - C10768) * C50199) *
                C50385 +
            ((C11114 - C11115 + C11116 - C11117) * C118 +
             (C11118 - C11119 + C11120 - C11121) * C50199) *
                C7884) *
               C50118 * C50389 +
           (((C10771 - C10770 + C10773 - C10772) * C118 +
             (C10775 - C10774 + C10777 - C10776) * C50199) *
                C50384 +
            ((C10779 - C10778 + C10781 - C10780) * C118 +
             (C10783 - C10782 + C10785 - C10784) * C50199) *
                C50385 +
            ((C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C118 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50199) *
                C7884) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50344 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50182) *
              C50388 +
          ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C50344 +
           (((C50357 * C893 - C10555 * C888 + C50278 * C1212 - C10556 * C1208) *
                 C118 +
             (C50357 * C903 - C10555 * C894 + C50278 * C1220 - C10556 * C1213) *
                 C50199) *
                C50384 +
            ((C11484 - C11485 + C11486 - C11487) * C118 +
             (C11488 - C11489 + C11490 - C11491) * C50199) *
                C50385 +
            ((C11492 - C11493 + C11494 - C11495) * C118 +
             (C11496 - C11497 + C11498 - C11499) * C50199) *
                C7884) *
               C50182) *
              C50389 +
          ((((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                 C118 +
             (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                 C50199) *
                C50384 +
            ((C10770 - C10771 + C10772 - C10773) * C118 +
             (C10774 - C10775 + C10776 - C10777) * C50199) *
                C50385 +
            ((C10778 - C10779 + C10780 - C10781) * C118 +
             (C10782 - C10783 + C10784 - C10785) * C50199) *
                C7884) *
               C50344 +
           (((C10555 * C1555 - C50357 * C1559 + C10556 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C10555 * C1560 - C50357 * C1567 + C10556 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C50384 +
            ((C10555 * C1556 - C50357 * C1561 + C10556 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C10555 * C1562 - C50357 * C1568 + C10556 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C50385 +
            ((C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C7884) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C118 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50199) *
               C50384 +
           ((C10558 - C10559 + C10560 - C10561) * C118 +
            (C10562 - C10563 + C10564 - C10565) * C50199) *
               C50385 +
           C10606 * C7884) *
              C50118 * C1089 +
          (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                C118 +
            (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                C50199) *
               C50384 +
           ((C10754 - C10755 + C10756 - C10757) * C118 +
            (C10758 - C10759 + C10760 - C10761) * C50199) *
               C50385 +
           C11126 * C7884) *
              C50118 * C1090 +
          (((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                C118 +
            (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                C50199) *
               C50384 +
           ((C10770 - C10771 + C10772 - C10773) * C118 +
            (C10774 - C10775 + C10776 - C10777) * C50199) *
               C50385 +
           ((C10778 - C10779 + C10780 - C10781) * C118 +
            (C10782 - C10783 + C10784 - C10785) * C50199) *
               C7884) *
              C50118 * C1091 +
          (((C10555 * C1094 - C50357 * C1098 + C10556 * C3152 -
             C50278 * C3155) *
                C118 +
            (C10555 * C1099 - C50357 * C1106 + C10556 * C3156 -
             C50278 * C3161) *
                C50199) *
               C50384 +
           ((C10555 * C1095 - C50357 * C1100 + C10556 * C3153 -
             C50278 * C3157) *
                C118 +
            (C10555 * C1101 - C50357 * C1107 + C10556 * C3158 -
             C50278 * C3162) *
                C50199) *
               C50385 +
           ((C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
             C50278 * C3159) *
                C118 +
            (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
             C50278 * C3163) *
                C50199) *
               C7884) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50118 * C1018 +
           (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C50118 * C50154) *
              C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50118 * C1018 +
           (((C10755 - C10754 + C10757 - C10756) * C118 +
             (C10759 - C10758 + C10761 - C10760) * C50199) *
                C50384 +
            ((C10763 - C10762 + C10765 - C10764) * C118 +
             (C10767 - C10766 + C10769 - C10768) * C50199) *
                C50385 +
            ((C11114 - C11115 + C11116 - C11117) * C118 +
             (C11118 - C11119 + C11120 - C11121) * C50199) *
                C7884) *
               C50118 * C50154) *
              C1021 +
          ((C10606 * C50384 +
            ((C10575 - C10574 + C10577 - C10576) * C118 +
             (C10579 - C10578 + C10581 - C10580) * C50199) *
                C50385 +
            ((C10582 - C10583 + C10584 - C10585) * C118 +
             (C10586 - C10587 + C10588 - C10589) * C50199) *
                C7884) *
               C50118 * C1018 +
           (C11126 * C50384 +
            ((C11115 - C11114 + C11117 - C11116) * C118 +
             (C11119 - C11118 + C11121 - C11120) * C50199) *
                C50385 +
            ((C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                 C118 +
             (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                 C50199) *
                C7884) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C452 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C453 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C118 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50199) *
                C50384 +
            ((C10948 - C10949 + C10950 - C10951) * C118 +
             (C10952 - C10953 + C10954 - C10955) * C50199) *
                C50385 +
            ((C10956 - C10957 + C10958 - C10959) * C118 +
             (C10960 - C10961 + C10962 - C10963) * C50199) *
                C7884) *
               C454) *
              C1018 +
          ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C452 +
           (((C50357 * C893 - C10555 * C888 + C50278 * C1212 - C10556 * C1208) *
                 C118 +
             (C50357 * C903 - C10555 * C894 + C50278 * C1220 - C10556 * C1213) *
                 C50199) *
                C50384 +
            ((C11484 - C11485 + C11486 - C11487) * C118 +
             (C11488 - C11489 + C11490 - C11491) * C50199) *
                C50385 +
            ((C11492 - C11493 + C11494 - C11495) * C118 +
             (C11496 - C11497 + C11498 - C11499) * C50199) *
                C7884) *
               C453 +
           (((C10555 * C1208 - C50357 * C1212 + C10556 * C4494 -
              C50278 * C4498) *
                 C118 +
             (C10555 * C1213 - C50357 * C1220 + C10556 * C4499 -
              C50278 * C4506) *
                 C50199) *
                C50384 +
            ((C10555 * C1209 - C50357 * C1214 + C10556 * C4496 -
              C50278 * C4502) *
                 C118 +
             (C10555 * C1215 - C50357 * C1221 + C10556 * C4503 -
              C50278 * C4508) *
                 C50199) *
                C50385 +
            ((C10555 * C1210 - C50357 * C1216 + C10556 * C5998 -
              C50278 * C5999) *
                 C118 +
             (C10555 * C1217 - C50357 * C1222 + C10556 * C6000 -
              C50278 * C6001) *
                 C50199) *
                C7884) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C118 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C50199) *
                 C50384 +
             ((C10558 - C10559 + C10560 - C10561) * C118 +
              (C10562 - C10563 + C10564 - C10565) * C50199) *
                 C50385 +
             C10606 * C7884) *
                C50344 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C118 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C50199) *
                 C50384 +
             ((C10932 - C10933 + C10934 - C10935) * C118 +
              (C10936 - C10937 + C10938 - C10939) * C50199) *
                 C50385 +
             C11289 * C7884) *
                C50182) *
               C1018 +
           ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                  C118 +
              (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                  C50199) *
                 C50384 +
             ((C10754 - C10755 + C10756 - C10757) * C118 +
              (C10758 - C10759 + C10760 - C10761) * C50199) *
                 C50385 +
             C11126 * C7884) *
                C50344 +
            (((C50357 * C893 - C10555 * C888 + C50278 * C1212 -
               C10556 * C1208) *
                  C118 +
              (C50357 * C903 - C10555 * C894 + C50278 * C1220 -
               C10556 * C1213) *
                  C50199) *
                 C50384 +
             ((C11484 - C11485 + C11486 - C11487) * C118 +
              (C11488 - C11489 + C11490 - C11491) * C50199) *
                 C50385 +
             ((C11492 - C11493 + C11494 - C11495) * C118 +
              (C11496 - C11497 + C11498 - C11499) * C50199) *
                 C7884) *
                C50182) *
               C50154) *
              C50335 +
          (((((C10559 - C10558 + C10561 - C10560) * C118 +
              (C10563 - C10562 + C10565 - C10564) * C50199) *
                 C50384 +
             ((C10567 - C10566 + C10569 - C10568) * C118 +
              (C10571 - C10570 + C10573 - C10572) * C50199) *
                 C50385 +
             C10607 * C7884) *
                C50344 +
            (((C10933 - C10932 + C10935 - C10934) * C118 +
              (C10937 - C10936 + C10939 - C10938) * C50199) *
                 C50384 +
             ((C10941 - C10940 + C10943 - C10942) * C118 +
              (C10945 - C10944 + C10947 - C10946) * C50199) *
                 C50385 +
             ((C11277 - C11278 + C11279 - C11280) * C118 +
              (C11281 - C11282 + C11283 - C11284) * C50199) *
                 C7884) *
                C50182) *
               C1018 +
           ((((C10755 - C10754 + C10757 - C10756) * C118 +
              (C10759 - C10758 + C10761 - C10760) * C50199) *
                 C50384 +
             ((C10763 - C10762 + C10765 - C10764) * C118 +
              (C10767 - C10766 + C10769 - C10768) * C50199) *
                 C50385 +
             ((C11114 - C11115 + C11116 - C11117) * C118 +
              (C11118 - C11119 + C11120 - C11121) * C50199) *
                 C7884) *
                C50344 +
            (((C11485 - C11484 + C11487 - C11486) * C118 +
              (C11489 - C11488 + C11491 - C11490) * C50199) *
                 C50384 +
             ((C11493 - C11492 + C11495 - C11494) * C118 +
              (C11497 - C11496 + C11499 - C11498) * C50199) *
                 C50385 +
             ((C10555 * C891 - C50357 * C899 + C10556 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C10555 * C900 - C50357 * C906 + C10556 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C7884) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50118 * C1018 +
           (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C50118 * C50154) *
              C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50118 * C1018 +
           (((C10755 - C10754 + C10757 - C10756) * C118 +
             (C10759 - C10758 + C10761 - C10760) * C50199) *
                C50384 +
            ((C10763 - C10762 + C10765 - C10764) * C118 +
             (C10767 - C10766 + C10769 - C10768) * C50199) *
                C50385 +
            ((C11114 - C11115 + C11116 - C11117) * C118 +
             (C11118 - C11119 + C11120 - C11121) * C50199) *
                C7884) *
               C50118 * C50154) *
              C1021 +
          ((C10606 * C50384 +
            ((C10575 - C10574 + C10577 - C10576) * C118 +
             (C10579 - C10578 + C10581 - C10580) * C50199) *
                C50385 +
            ((C10582 - C10583 + C10584 - C10585) * C118 +
             (C10586 - C10587 + C10588 - C10589) * C50199) *
                C7884) *
               C50118 * C1018 +
           (C11126 * C50384 +
            ((C11115 - C11114 + C11117 - C11116) * C118 +
             (C11119 - C11118 + C11121 - C11120) * C50199) *
                C50385 +
            ((C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                 C118 +
             (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                 C50199) *
                C7884) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C118 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50199) *
               C50384 +
           ((C10558 - C10559 + C10560 - C10561) * C118 +
            (C10562 - C10563 + C10564 - C10565) * C50199) *
               C50385 +
           C10606 * C7884) *
              C50118 * C1089 +
          (((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                C118 +
            (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                C50199) *
               C50384 +
           ((C10754 - C10755 + C10756 - C10757) * C118 +
            (C10758 - C10759 + C10760 - C10761) * C50199) *
               C50385 +
           C11126 * C7884) *
              C50118 * C1090 +
          (((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                C118 +
            (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                C50199) *
               C50384 +
           ((C10770 - C10771 + C10772 - C10773) * C118 +
            (C10774 - C10775 + C10776 - C10777) * C50199) *
               C50385 +
           ((C10778 - C10779 + C10780 - C10781) * C118 +
            (C10782 - C10783 + C10784 - C10785) * C50199) *
               C7884) *
              C50118 * C1091 +
          (((C10555 * C1094 - C50357 * C1098 + C10556 * C3152 -
             C50278 * C3155) *
                C118 +
            (C10555 * C1099 - C50357 * C1106 + C10556 * C3156 -
             C50278 * C3161) *
                C50199) *
               C50384 +
           ((C10555 * C1095 - C50357 * C1100 + C10556 * C3153 -
             C50278 * C3157) *
                C118 +
            (C10555 * C1101 - C50357 * C1107 + C10556 * C3158 -
             C50278 * C3162) *
                C50199) *
               C50385 +
           ((C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
             C50278 * C3159) *
                C118 +
            (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
             C50278 * C3163) *
                C50199) *
               C7884) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C118 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C50199) *
                 C50384 +
             ((C10558 - C10559 + C10560 - C10561) * C118 +
              (C10562 - C10563 + C10564 - C10565) * C50199) *
                 C50385 +
             C10606 * C7884) *
                C1669 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C118 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C50199) *
                 C50384 +
             ((C10932 - C10933 + C10934 - C10935) * C118 +
              (C10936 - C10937 + C10938 - C10939) * C50199) *
                 C50385 +
             C11289 * C7884) *
                C50182) *
               C50343 +
           ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                  C118 +
              (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                  C50199) *
                 C50384 +
             ((C10754 - C10755 + C10756 - C10757) * C118 +
              (C10758 - C10759 + C10760 - C10761) * C50199) *
                 C50385 +
             C11126 * C7884) *
                C1669 +
            (((C50357 * C893 - C10555 * C888 + C50278 * C1212 -
               C10556 * C1208) *
                  C118 +
              (C50357 * C903 - C10555 * C894 + C50278 * C1220 -
               C10556 * C1213) *
                  C50199) *
                 C50384 +
             ((C11484 - C11485 + C11486 - C11487) * C118 +
              (C11488 - C11489 + C11490 - C11491) * C50199) *
                 C50385 +
             ((C11492 - C11493 + C11494 - C11495) * C118 +
              (C11496 - C11497 + C11498 - C11499) * C50199) *
                 C7884) *
                C50182) *
               C50154) *
              C50335 +
          (((((C10559 - C10558 + C10561 - C10560) * C118 +
              (C10563 - C10562 + C10565 - C10564) * C50199) *
                 C50384 +
             ((C10567 - C10566 + C10569 - C10568) * C118 +
              (C10571 - C10570 + C10573 - C10572) * C50199) *
                 C50385 +
             C10607 * C7884) *
                C1669 +
            (((C10933 - C10932 + C10935 - C10934) * C118 +
              (C10937 - C10936 + C10939 - C10938) * C50199) *
                 C50384 +
             ((C10941 - C10940 + C10943 - C10942) * C118 +
              (C10945 - C10944 + C10947 - C10946) * C50199) *
                 C50385 +
             ((C11277 - C11278 + C11279 - C11280) * C118 +
              (C11281 - C11282 + C11283 - C11284) * C50199) *
                 C7884) *
                C50182) *
               C50343 +
           ((((C10755 - C10754 + C10757 - C10756) * C118 +
              (C10759 - C10758 + C10761 - C10760) * C50199) *
                 C50384 +
             ((C10763 - C10762 + C10765 - C10764) * C118 +
              (C10767 - C10766 + C10769 - C10768) * C50199) *
                 C50385 +
             ((C11114 - C11115 + C11116 - C11117) * C118 +
              (C11118 - C11119 + C11120 - C11121) * C50199) *
                 C7884) *
                C1669 +
            (((C11485 - C11484 + C11487 - C11486) * C118 +
              (C11489 - C11488 + C11491 - C11490) * C50199) *
                 C50384 +
             ((C11493 - C11492 + C11495 - C11494) * C118 +
              (C11497 - C11496 + C11499 - C11498) * C50199) *
                 C50385 +
             ((C10555 * C891 - C50357 * C899 + C10556 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C10555 * C900 - C50357 * C906 + C10556 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C7884) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50390 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50391 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C118 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50199) *
                C50384 +
            ((C10948 - C10949 + C10950 - C10951) * C118 +
             (C10952 - C10953 + C10954 - C10955) * C50199) *
                C50385 +
            ((C10956 - C10957 + C10958 - C10959) * C118 +
             (C10960 - C10961 + C10962 - C10963) * C50199) *
                C7884) *
               C2085) *
              C50343 +
          ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C50390 +
           (((C50357 * C893 - C10555 * C888 + C50278 * C1212 - C10556 * C1208) *
                 C118 +
             (C50357 * C903 - C10555 * C894 + C50278 * C1220 - C10556 * C1213) *
                 C50199) *
                C50384 +
            ((C11484 - C11485 + C11486 - C11487) * C118 +
             (C11488 - C11489 + C11490 - C11491) * C50199) *
                C50385 +
            ((C11492 - C11493 + C11494 - C11495) * C118 +
             (C11496 - C11497 + C11498 - C11499) * C50199) *
                C7884) *
               C50391 +
           (((C10555 * C1208 - C50357 * C1212 + C10556 * C4494 -
              C50278 * C4498) *
                 C118 +
             (C10555 * C1213 - C50357 * C1220 + C10556 * C4499 -
              C50278 * C4506) *
                 C50199) *
                C50384 +
            ((C10555 * C1209 - C50357 * C1214 + C10556 * C4496 -
              C50278 * C4502) *
                 C118 +
             (C10555 * C1215 - C50357 * C1221 + C10556 * C4503 -
              C50278 * C4508) *
                 C50199) *
                C50385 +
            ((C10555 * C1210 - C50357 * C1216 + C10556 * C5998 -
              C50278 * C5999) *
                 C118 +
             (C10555 * C1217 - C50357 * C1222 + C10556 * C6000 -
              C50278 * C6001) *
                 C50199) *
                C7884) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50182) *
              C285 +
          ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C1669 +
           (((C50357 * C893 - C10555 * C888 + C50278 * C1212 - C10556 * C1208) *
                 C118 +
             (C50357 * C903 - C10555 * C894 + C50278 * C1220 - C10556 * C1213) *
                 C50199) *
                C50384 +
            ((C11484 - C11485 + C11486 - C11487) * C118 +
             (C11488 - C11489 + C11490 - C11491) * C50199) *
                C50385 +
            ((C11492 - C11493 + C11494 - C11495) * C118 +
             (C11496 - C11497 + C11498 - C11499) * C50199) *
                C7884) *
               C50182) *
              C286 +
          ((((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                 C118 +
             (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                 C50199) *
                C50384 +
            ((C10770 - C10771 + C10772 - C10773) * C118 +
             (C10774 - C10775 + C10776 - C10777) * C50199) *
                C50385 +
            ((C10778 - C10779 + C10780 - C10781) * C118 +
             (C10782 - C10783 + C10784 - C10785) * C50199) *
                C7884) *
               C1669 +
           (((C10555 * C1555 - C50357 * C1559 + C10556 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C10555 * C1560 - C50357 * C1567 + C10556 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C50384 +
            ((C10555 * C1556 - C50357 * C1561 + C10556 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C10555 * C1562 - C50357 * C1568 + C10556 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C50385 +
            ((C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C7884) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50182) *
              C50102 * C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C1669 +
           (((C10933 - C10932 + C10935 - C10934) * C118 +
             (C10937 - C10936 + C10939 - C10938) * C50199) *
                C50384 +
            ((C10941 - C10940 + C10943 - C10942) * C118 +
             (C10945 - C10944 + C10947 - C10946) * C50199) *
                C50385 +
            ((C11277 - C11278 + C11279 - C11280) * C118 +
             (C11281 - C11282 + C11283 - C11284) * C50199) *
                C7884) *
               C50182) *
              C50102 * C1021 +
          ((C10606 * C50384 +
            ((C10575 - C10574 + C10577 - C10576) * C118 +
             (C10579 - C10578 + C10581 - C10580) * C50199) *
                C50385 +
            ((C10582 - C10583 + C10584 - C10585) * C118 +
             (C10586 - C10587 + C10588 - C10589) * C50199) *
                C7884) *
               C1669 +
           (C11289 * C50384 +
            ((C11278 - C11277 + C11280 - C11279) * C118 +
             (C11282 - C11281 + C11284 - C11283) * C50199) *
                C50385 +
            ((C10555 * C463 - C50357 * C481 + C10556 * C464 - C50278 * C483) *
                 C118 +
             (C10555 * C482 - C50357 * C493 + C10556 * C484 - C50278 * C494) *
                 C50199) *
                C7884) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C118 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50199) *
               C50384 +
           ((C10558 - C10559 + C10560 - C10561) * C118 +
            (C10562 - C10563 + C10564 - C10565) * C50199) *
               C50385 +
           C10606 * C7884) *
              C1835 +
          (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C118 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50199) *
               C50384 +
           ((C10932 - C10933 + C10934 - C10935) * C118 +
            (C10936 - C10937 + C10938 - C10939) * C50199) *
               C50385 +
           C11289 * C7884) *
              C1836 +
          (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C118 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C50199) *
               C50384 +
           ((C10948 - C10949 + C10950 - C10951) * C118 +
            (C10952 - C10953 + C10954 - C10955) * C50199) *
               C50385 +
           ((C10956 - C10957 + C10958 - C10959) * C118 +
            (C10960 - C10961 + C10962 - C10963) * C50199) *
               C7884) *
              C1837 +
          (((C10555 * C1839 - C50357 * C1843 + C10556 * C5452 -
             C50278 * C5455) *
                C118 +
            (C10555 * C1844 - C50357 * C1851 + C10556 * C5456 -
             C50278 * C5461) *
                C50199) *
               C50384 +
           ((C10555 * C1840 - C50357 * C1845 + C10556 * C5453 -
             C50278 * C5457) *
                C118 +
            (C10555 * C1846 - C50357 * C1852 + C10556 * C5458 -
             C50278 * C5462) *
                C50199) *
               C50385 +
           ((C10555 * C1841 - C50357 * C1847 + C10556 * C5454 -
             C50278 * C5459) *
                C118 +
            (C10555 * C1848 - C50357 * C1853 + C10556 * C5460 -
             C50278 * C5463) *
                C50199) *
               C7884) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C50390 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50391 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C118 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C50199) *
                C50384 +
            ((C10948 - C10949 + C10950 - C10951) * C118 +
             (C10952 - C10953 + C10954 - C10955) * C50199) *
                C50385 +
            ((C10956 - C10957 + C10958 - C10959) * C118 +
             (C10960 - C10961 + C10962 - C10963) * C50199) *
                C7884) *
               C2085) *
              C50102 * C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C50390 +
           (((C10933 - C10932 + C10935 - C10934) * C118 +
             (C10937 - C10936 + C10939 - C10938) * C50199) *
                C50384 +
            ((C10941 - C10940 + C10943 - C10942) * C118 +
             (C10945 - C10944 + C10947 - C10946) * C50199) *
                C50385 +
            ((C11277 - C11278 + C11279 - C11280) * C118 +
             (C11281 - C11282 + C11283 - C11284) * C50199) *
                C7884) *
               C50391 +
           (((C10949 - C10948 + C10951 - C10950) * C118 +
             (C10953 - C10952 + C10955 - C10954) * C50199) *
                C50384 +
            ((C10957 - C10956 + C10959 - C10958) * C118 +
             (C10961 - C10960 + C10963 - C10962) * C50199) *
                C50385 +
            ((C10555 * C462 - C50357 * C479 + C10556 * C1842 - C50278 * C1849) *
                 C118 +
             (C10555 * C480 - C50357 * C492 + C10556 * C1850 - C50278 * C1854) *
                 C50199) *
                C7884) *
               C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50182) *
              C50102 * C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C118 +
             (C10563 - C10562 + C10565 - C10564) * C50199) *
                C50384 +
            ((C10567 - C10566 + C10569 - C10568) * C118 +
             (C10571 - C10570 + C10573 - C10572) * C50199) *
                C50385 +
            C10607 * C7884) *
               C1669 +
           (((C10933 - C10932 + C10935 - C10934) * C118 +
             (C10937 - C10936 + C10939 - C10938) * C50199) *
                C50384 +
            ((C10941 - C10940 + C10943 - C10942) * C118 +
             (C10945 - C10944 + C10947 - C10946) * C50199) *
                C50385 +
            ((C11277 - C11278 + C11279 - C11280) * C118 +
             (C11281 - C11282 + C11283 - C11284) * C50199) *
                C7884) *
               C50182) *
              C50102 * C1021 +
          ((C10606 * C50384 +
            ((C10575 - C10574 + C10577 - C10576) * C118 +
             (C10579 - C10578 + C10581 - C10580) * C50199) *
                C50385 +
            ((C10582 - C10583 + C10584 - C10585) * C118 +
             (C10586 - C10587 + C10588 - C10589) * C50199) *
                C7884) *
               C1669 +
           (C11289 * C50384 +
            ((C11278 - C11277 + C11280 - C11279) * C118 +
             (C11282 - C11281 + C11284 - C11283) * C50199) *
                C50385 +
            ((C10555 * C463 - C50357 * C481 + C10556 * C464 - C50278 * C483) *
                 C118 +
             (C10555 * C482 - C50357 * C493 + C10556 * C484 - C50278 * C494) *
                 C50199) *
                C7884) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C118 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50199) *
                C50384 +
            ((C10558 - C10559 + C10560 - C10561) * C118 +
             (C10562 - C10563 + C10564 - C10565) * C50199) *
                C50385 +
            C10606 * C7884) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C118 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50199) *
                C50384 +
            ((C10932 - C10933 + C10934 - C10935) * C118 +
             (C10936 - C10937 + C10938 - C10939) * C50199) *
                C50385 +
            C11289 * C7884) *
               C50182) *
              C285 +
          ((((C10555 * C290 - C50357 * C300 + C10556 * C888 - C50278 * C893) *
                 C118 +
             (C10555 * C301 - C50357 * C320 + C10556 * C894 - C50278 * C903) *
                 C50199) *
                C50384 +
            ((C10754 - C10755 + C10756 - C10757) * C118 +
             (C10758 - C10759 + C10760 - C10761) * C50199) *
                C50385 +
            C11126 * C7884) *
               C1669 +
           (((C50357 * C893 - C10555 * C888 + C50278 * C1212 - C10556 * C1208) *
                 C118 +
             (C50357 * C903 - C10555 * C894 + C50278 * C1220 - C10556 * C1213) *
                 C50199) *
                C50384 +
            ((C11484 - C11485 + C11486 - C11487) * C118 +
             (C11488 - C11489 + C11490 - C11491) * C50199) *
                C50385 +
            ((C11492 - C11493 + C11494 - C11495) * C118 +
             (C11496 - C11497 + C11498 - C11499) * C50199) *
                C7884) *
               C50182) *
              C286 +
          ((((C50357 * C308 - C10555 * C294 + C50278 * C1559 - C10556 * C1555) *
                 C118 +
             (C50357 * C324 - C10555 * C309 + C50278 * C1567 - C10556 * C1560) *
                 C50199) *
                C50384 +
            ((C10770 - C10771 + C10772 - C10773) * C118 +
             (C10774 - C10775 + C10776 - C10777) * C50199) *
                C50385 +
            ((C10778 - C10779 + C10780 - C10781) * C118 +
             (C10782 - C10783 + C10784 - C10785) * C50199) *
                C7884) *
               C1669 +
           (((C10555 * C1555 - C50357 * C1559 + C10556 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C10555 * C1560 - C50357 * C1567 + C10556 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C50384 +
            ((C10555 * C1556 - C50357 * C1561 + C10556 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C10555 * C1562 - C50357 * C1568 + C10556 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C50385 +
            ((C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C7884) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C50343 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C50343 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50154) *
              C50387 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50118 * C50343 +
           (C639 * C107 + C640 * C108 +
            ((C632 - C631) * C118 + (C634 - C633) * C50199) * C109 +
            ((C117 * C622 - C50214 * C623) * C118 +
             (C117 * C624 - C50214 * C625) * C50199) *
                C110) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C50343 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C50343 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50118 * C50343 +
           ((C627 * C2287 + C628 * C2282 + C2477 * C2288 + C2478 * C2283 +
             (C2480 - C2479) * C2289 + (C2482 - C2481) * C2284) *
                C2285 +
            (C629 * C2287 + C630 * C2282 + (C352 - C351) * C2288 +
             (C354 - C353) * C2283 + (C117 * C1097 - C50214 * C1104) * C2289 +
             (C117 * C1105 - C50214 * C1109) * C2284) *
                C50062) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C118 +
              (C50214 * C140 - C117 * C127) * C50199) *
                 C107 +
             ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
             C184 * C109 + C185 * C110) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C118 +
              (C117 * C466 - C50214 * C485) * C50199) *
                 C107 +
             ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
             C757 * C109 + C758 * C110) *
                C50182) *
               C50343 +
           ((((C117 * C290 - C50214 * C300) * C118 +
              (C117 * C301 - C50214 * C320) * C50199) *
                 C107 +
             ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
             C639 * C109 + C640 * C110) *
                C50344 +
            (((C50214 * C893 - C117 * C888) * C118 +
              (C50214 * C903 - C117 * C894) * C50199) *
                 C107 +
             ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
             ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
             ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
             ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
             C186 * C109 + C187 * C110) *
                C50344 +
            (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
             ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
             ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
             ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                C50182) *
               C50343 +
           ((((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
             ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
             ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
             ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                C50344 +
            (((C910 - C909) * C118 + (C912 - C911) * C50199) * C107 +
             ((C914 - C913) * C118 + (C916 - C915) * C50199) * C108 +
             ((C918 - C917) * C118 + (C920 - C919) * C50199) * C109 +
             ((C117 * C892 - C50214 * C901) * C118 +
              (C117 * C902 - C50214 * C907) * C50199) *
                 C110) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C2287 +
              (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
              (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                 C2285 +
             ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
              C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                 C50062) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C2287 +
              (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
              (C3167 - C3168) * C2283 + (C3169 - C3170) * C2289 +
              (C3171 - C3172) * C2284) *
                 C2285 +
             ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
              C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
              (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
              (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                 C2285 +
             (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
              C2485 * C2289 + C2486 * C2284) *
                 C50062) *
                C50344 +
            (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
              (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
              (C50214 * C3155 - C117 * C3152) * C2289 +
              (C50214 * C3161 - C117 * C3156) * C2284) *
                 C2285 +
             (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
              (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
              C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                 C2285 +
             ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
              C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                 C50062) *
                C50344 +
            (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
              C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                 C2285 +
             ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
              (C913 - C914) * C2288 + (C915 - C916) * C2283 +
              (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           (((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
              C2487 * C2289 + C2488 * C2284) *
                 C2285 +
             (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
              (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                 C50062) *
                C50344 +
            ((C3173 * C2287 + C3174 * C2282 + C3175 * C2288 + C3176 * C2283 +
              (C3182 - C3181) * C2289 + (C3184 - C3183) * C2284) *
                 C2285 +
             ((C914 - C913) * C2287 + (C916 - C915) * C2282 +
              (C2956 - C2955) * C2288 + (C2958 - C2957) * C2283 +
              (C117 * C3154 - C50214 * C3159) * C2289 +
              (C117 * C3160 - C50214 * C3163) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C285 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            ((C335 - C336) * C118 + (C337 - C338) * C50199) * C109 +
            ((C339 - C340) * C118 + (C341 - C342) * C50199) * C110) *
               C50118 * C286 +
           (((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C285 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C50214 * C316 - C117 * C298) * C118 +
             (C50214 * C328 - C117 * C317) * C50199) *
                C110) *
               C50118 * C286 +
           (((C344 - C343) * C118 + (C346 - C345) * C50199) * C107 +
            ((C348 - C347) * C118 + (C350 - C349) * C50199) * C108 +
            ((C352 - C351) * C118 + (C354 - C353) * C50199) * C109 +
            ((C117 * C299 - C50214 * C318) * C118 +
             (C117 * C319 - C50214 * C329) * C50199) *
                C110) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
           ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
           C186 * C109 + C187 * C110) *
              C50118 * C50102 * C114 +
          (C184 * C107 + C185 * C108 +
           ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
           ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
              C50118 * C50102 * C115 +
          (C186 * C107 + C187 * C108 +
           ((C165 - C164) * C118 + (C167 - C166) * C50199) * C109 +
           ((C117 * C125 - C50214 * C138) * C118 +
            (C117 * C139 - C50214 * C146) * C50199) *
               C110) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            ((C500 - C501) * C118 + (C502 - C503) * C50199) * C109 +
            ((C504 - C505) * C118 + (C506 - C507) * C50199) * C110) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C452 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C50214 * C481 - C117 * C463) * C118 +
             (C50214 * C493 - C117 * C482) * C50199) *
                C110) *
               C453 +
           (((C509 - C508) * C118 + (C511 - C510) * C50199) * C107 +
            ((C513 - C512) * C118 + (C515 - C514) * C50199) * C108 +
            ((C517 - C516) * C118 + (C519 - C518) * C50199) * C109 +
            ((C117 * C464 - C50214 * C483) * C118 +
             (C117 * C484 - C50214 * C494) * C50199) *
                C110) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 +
            (C50214 * C300 - C117 * C290) * C2288 +
            (C50214 * C320 - C117 * C301) * C2283 +
            (C50214 * C308 - C117 * C294) * C2289 +
            (C50214 * C324 - C117 * C309) * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 +
            (C332 - C331) * C2288 + (C334 - C333) * C2283 +
            (C343 - C344) * C2289 + (C345 - C346) * C2284) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C2287 + (C151 - C150) * C2282 +
            (C331 - C332) * C2288 + (C333 - C334) * C2283 +
            (C344 - C343) * C2289 + (C346 - C345) * C2284) *
               C2285 +
           ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
            C628 * C2283 + (C348 - C347) * C2289 + (C350 - C349) * C2284) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C168 * C2287 + C169 * C2282 + (C336 - C335) * C2288 +
            (C338 - C337) * C2283 + (C347 - C348) * C2289 +
            (C349 - C350) * C2284) *
               C2285 +
           (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
            (C342 - C341) * C2283 + (C351 - C352) * C2289 +
            (C353 - C354) * C2284) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C172 * C2287 + C173 * C2282 + C629 * C2288 + C630 * C2283 +
            (C352 - C351) * C2289 + (C354 - C353) * C2284) *
               C2285 +
           (C174 * C2287 + C175 * C2282 + (C632 - C631) * C2288 +
            (C634 - C633) * C2283 + (C117 * C299 - C50214 * C318) * C2289 +
            (C117 * C319 - C50214 * C329) * C2284) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C285 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C50214 * C2439 - C117 * C2436) * C2289 +
             (C50214 * C2445 - C117 * C2440) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C285 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            ((C336 - C335) * C2287 + (C338 - C337) * C2282 +
             (C347 - C348) * C2288 + (C349 - C350) * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2467 * C2287 + C2468 * C2282 + C2485 * C2288 + C2486 * C2283 +
             (C2474 - C2473) * C2289 + (C2476 - C2475) * C2284) *
                C2285 +
            (C2477 * C2287 + C2478 * C2282 + (C2480 - C2479) * C2288 +
             (C2482 - C2481) * C2283 + (C117 * C2438 - C50214 * C2443) * C2289 +
             (C117 * C2444 - C50214 * C2447) * C2284) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 +
             (C117 * C888 - C50214 * C893) * C2288 +
             (C117 * C894 - C50214 * C903) * C2283 +
             (C117 * C1555 - C50214 * C1559) * C2289 +
             (C117 * C1560 - C50214 * C1567) * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 +
             (C910 - C909) * C2288 + (C912 - C911) * C2283 +
             (C2647 - C2648) * C2289 + (C2649 - C2650) * C2284) *
                C50062) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 +
             (C50214 * C1212 - C117 * C1208) * C2288 +
             (C50214 * C1220 - C117 * C1213) * C2283 +
             (C50214 * C2637 - C117 * C2634) * C2289 +
             (C50214 * C2643 - C117 * C2638) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C452 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 +
             (C909 - C910) * C2288 + (C911 - C912) * C2283 +
             (C2648 - C2647) * C2289 + (C2650 - C2649) * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C50214 * C1563 - C117 * C1557) * C2289 +
             (C50214 * C1569 - C117 * C1564) * C2284) *
                C50062) *
               C453 +
           (((C509 - C508) * C2287 + (C511 - C510) * C2282 +
             (C2652 - C2651) * C2288 + (C2654 - C2653) * C2283 +
             (C2656 - C2655) * C2289 + (C2658 - C2657) * C2284) *
                C2285 +
            ((C513 - C512) * C2287 + (C515 - C514) * C2282 +
             (C117 * C1210 - C50214 * C1216) * C2288 +
             (C117 * C1217 - C50214 * C1222) * C2283 +
             (C117 * C2636 - C50214 * C2641) * C2289 +
             (C117 * C2642 - C50214 * C2645) * C2284) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50344 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50182) *
              C50102 * C50387 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50344 +
           (C757 * C107 + C758 * C108 +
            ((C750 - C749) * C118 + (C752 - C751) * C50199) * C109 +
            ((C117 * C740 - C50214 * C741) * C118 +
             (C117 * C742 - C50214 * C743) * C50199) *
                C110) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 +
             (C117 * C888 - C50214 * C893) * C2288 +
             (C117 * C894 - C50214 * C903) * C2283 +
             (C117 * C1555 - C50214 * C1559) * C2289 +
             (C117 * C1560 - C50214 * C1567) * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 +
             (C910 - C909) * C2288 + (C912 - C911) * C2283 +
             (C2647 - C2648) * C2289 + (C2649 - C2650) * C2284) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50344 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 +
             (C909 - C910) * C2288 + (C911 - C912) * C2283 +
             (C2648 - C2647) * C2289 + (C2650 - C2649) * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50344 +
           ((C745 * C2287 + C746 * C2282 + (C914 - C913) * C2288 +
             (C916 - C915) * C2283 + (C2956 - C2955) * C2289 +
             (C2958 - C2957) * C2284) *
                C2285 +
            (C747 * C2287 + C748 * C2282 + (C918 - C917) * C2288 +
             (C920 - C919) * C2283 + (C117 * C1558 - C50214 * C1565) * C2289 +
             (C117 * C1566 - C50214 * C1570) * C2284) *
                C50062) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
           ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
           C186 * C109 + C187 * C110) *
              C50118 * C50102 * C114 +
          (C184 * C107 + C185 * C108 +
           ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
           ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
              C50118 * C50102 * C115 +
          (C186 * C107 + C187 * C108 +
           ((C165 - C164) * C118 + (C167 - C166) * C50199) * C109 +
           ((C117 * C125 - C50214 * C138) * C118 +
            (C117 * C139 - C50214 * C146) * C50199) *
               C110) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C285 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            ((C335 - C336) * C118 + (C337 - C338) * C50199) * C109 +
            ((C339 - C340) * C118 + (C341 - C342) * C50199) * C110) *
               C50118 * C286 +
           (((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C285 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C50214 * C316 - C117 * C298) * C118 +
             (C50214 * C328 - C117 * C317) * C50199) *
                C110) *
               C50118 * C286 +
           (((C344 - C343) * C118 + (C346 - C345) * C50199) * C107 +
            ((C348 - C347) * C118 + (C350 - C349) * C50199) * C108 +
            ((C352 - C351) * C118 + (C354 - C353) * C50199) * C109 +
            ((C117 * C299 - C50214 * C318) * C118 +
             (C117 * C319 - C50214 * C329) * C50199) *
                C110) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 +
            (C50214 * C300 - C117 * C290) * C2288 +
            (C50214 * C320 - C117 * C301) * C2283 +
            (C50214 * C308 - C117 * C294) * C2289 +
            (C50214 * C324 - C117 * C309) * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 +
            (C332 - C331) * C2288 + (C334 - C333) * C2283 +
            (C343 - C344) * C2289 + (C345 - C346) * C2284) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C2287 + (C151 - C150) * C2282 +
            (C331 - C332) * C2288 + (C333 - C334) * C2283 +
            (C344 - C343) * C2289 + (C346 - C345) * C2284) *
               C2285 +
           ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
            C628 * C2283 + (C348 - C347) * C2289 + (C350 - C349) * C2284) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C168 * C2287 + C169 * C2282 + (C336 - C335) * C2288 +
            (C338 - C337) * C2283 + (C347 - C348) * C2289 +
            (C349 - C350) * C2284) *
               C2285 +
           (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
            (C342 - C341) * C2283 + (C351 - C352) * C2289 +
            (C353 - C354) * C2284) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C172 * C2287 + C173 * C2282 + C629 * C2288 + C630 * C2283 +
            (C352 - C351) * C2289 + (C354 - C353) * C2284) *
               C2285 +
           (C174 * C2287 + C175 * C2282 + (C632 - C631) * C2288 +
            (C634 - C633) * C2283 + (C117 * C299 - C50214 * C318) * C2289 +
            (C117 * C319 - C50214 * C329) * C2284) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C285 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C50214 * C2439 - C117 * C2436) * C2289 +
             (C50214 * C2445 - C117 * C2440) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C285 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            ((C336 - C335) * C2287 + (C338 - C337) * C2282 +
             (C347 - C348) * C2288 + (C349 - C350) * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C286 +
           ((C2467 * C2287 + C2468 * C2282 + C2485 * C2288 + C2486 * C2283 +
             (C2474 - C2473) * C2289 + (C2476 - C2475) * C2284) *
                C2285 +
            (C2477 * C2287 + C2478 * C2282 + (C2480 - C2479) * C2288 +
             (C2482 - C2481) * C2283 + (C117 * C2438 - C50214 * C2443) * C2289 +
             (C117 * C2444 - C50214 * C2447) * C2284) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C50388 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50389 +
           (((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C50388 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50389 +
           (((C344 - C343) * C118 + (C346 - C345) * C50199) * C107 +
            ((C348 - C347) * C118 + (C350 - C349) * C50199) * C108 +
            ((C352 - C351) * C118 + (C354 - C353) * C50199) * C109 +
            ((C117 * C299 - C50214 * C318) * C118 +
             (C117 * C319 - C50214 * C329) * C50199) *
                C110) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C50388 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50389 +
           ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C50388 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50389 +
           ((C2467 * C2287 + C2468 * C2282 + C2485 * C2288 + C2486 * C2283 +
             (C2474 - C2473) * C2289 + (C2476 - C2475) * C2284) *
                C2285 +
            (C2477 * C2287 + C2478 * C2282 + (C2480 - C2479) * C2288 +
             (C2482 - C2481) * C2283 + (C117 * C2438 - C50214 * C2443) * C2289 +
             (C117 * C2444 - C50214 * C2447) * C2284) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50388 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50344 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50182) *
              C50389 +
          ((((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C50344 +
           (((C117 * C1555 - C50214 * C1559) * C118 +
             (C117 * C1560 - C50214 * C1567) * C50199) *
                C107 +
            ((C117 * C1556 - C50214 * C1561) * C118 +
             (C117 * C1562 - C50214 * C1568) * C50199) *
                C108 +
            ((C117 * C1557 - C50214 * C1563) * C118 +
             (C117 * C1564 - C50214 * C1569) * C50199) *
                C109 +
            ((C117 * C1558 - C50214 * C1565) * C118 +
             (C117 * C1566 - C50214 * C1570) * C50199) *
                C110) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C50388 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50344 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50182) *
              C50389 +
          (((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C50344 +
           ((C4099 * C2287 + C4100 * C2282 + (C4102 - C4101) * C2288 +
             (C4104 - C4103) * C2283 + (C117 * C4090 - C50214 * C4092) * C2289 +
             (C117 * C4093 - C50214 * C4096) * C2284) *
                C2285 +
            (C3175 * C2287 + C3176 * C2282 + (C3182 - C3181) * C2288 +
             (C3184 - C3183) * C2283 + (C117 * C4091 - C50214 * C4094) * C2289 +
             (C117 * C4095 - C50214 * C4097) * C2284) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C50118 * C1089 +
          (((C117 * C290 - C50214 * C300) * C118 +
            (C117 * C301 - C50214 * C320) * C50199) *
               C107 +
           ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
           C639 * C109 + C640 * C110) *
              C50118 * C1090 +
          (((C50214 * C308 - C117 * C294) * C118 +
            (C50214 * C324 - C117 * C309) * C50199) *
               C107 +
           ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
           ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
           ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
              C50118 * C1091 +
          (((C117 * C1094 - C50214 * C1098) * C118 +
            (C117 * C1099 - C50214 * C1106) * C50199) *
               C107 +
           ((C117 * C1095 - C50214 * C1100) * C118 +
            (C117 * C1101 - C50214 * C1107) * C50199) *
               C108 +
           ((C117 * C1096 - C50214 * C1102) * C118 +
            (C117 * C1103 - C50214 * C1108) * C50199) *
               C109 +
           ((C117 * C1097 - C50214 * C1104) * C118 +
            (C117 * C1105 - C50214 * C1109) * C50199) *
               C110) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C1018 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C1018 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50154) *
              C1021 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50118 * C1018 +
           (C639 * C107 + C640 * C108 +
            ((C632 - C631) * C118 + (C634 - C633) * C50199) * C109 +
            ((C117 * C622 - C50214 * C623) * C118 +
             (C117 * C624 - C50214 * C625) * C50199) *
                C110) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C454) *
              C1018 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C452 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C453 +
           (((C117 * C1208 - C50214 * C1212) * C118 +
             (C117 * C1213 - C50214 * C1220) * C50199) *
                C107 +
            ((C117 * C1209 - C50214 * C1214) * C118 +
             (C117 * C1215 - C50214 * C1221) * C50199) *
                C108 +
            ((C117 * C1210 - C50214 * C1216) * C118 +
             (C117 * C1217 - C50214 * C1222) * C50199) *
                C109 +
            ((C117 * C1211 - C50214 * C1218) * C118 +
             (C117 * C1219 - C50214 * C1223) * C50199) *
                C110) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C1018 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C627 * C2287 + C628 * C2282 + C2477 * C2288 + C2478 * C2283 +
             (C2480 - C2479) * C2289 + (C2482 - C2481) * C2284) *
                C2285 +
            (C629 * C2287 + C630 * C2282 + (C352 - C351) * C2288 +
             (C354 - C353) * C2283 + (C117 * C1097 - C50214 * C1104) * C2289 +
             (C117 * C1105 - C50214 * C1109) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
            (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
            C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
               C50062) *
              C50118 * C1089 +
          (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
            (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
            C3438 * C2284) *
               C2285 +
           (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
            C2485 * C2289 + C2486 * C2284) *
               C50062) *
              C50118 * C1090 +
          ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
            (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
            (C3441 - C3442) * C2284) *
               C2285 +
           (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
            (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
               C50062) *
              C50118 * C1091 +
          ((C3437 * C2287 + C3438 * C2282 + (C3440 - C3439) * C2288 +
            (C3442 - C3441) * C2283 + (C117 * C3428 - C50214 * C3430) * C2289 +
            (C117 * C3431 - C50214 * C3434) * C2284) *
               C2285 +
           (C2485 * C2287 + C2486 * C2282 + (C2474 - C2473) * C2288 +
            (C2476 - C2475) * C2283 + (C117 * C3429 - C50214 * C3432) * C2289 +
            (C117 * C3433 - C50214 * C3435) * C2284) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + (C3169 - C3170) * C2289 +
             (C3171 - C3172) * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
             (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
             (C3603 - C3604) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C454) *
              C1018 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C452 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C50214 * C3155 - C117 * C3152) * C2289 +
             (C50214 * C3161 - C117 * C3156) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C453 +
           (((C3598 - C3597) * C2287 + (C3600 - C3599) * C2282 +
             (C3602 - C3601) * C2288 + (C3604 - C3603) * C2283 +
             (C117 * C3588 - C50214 * C3590) * C2289 +
             (C117 * C3591 - C50214 * C3594) * C2284) *
                C2285 +
            ((C2652 - C2651) * C2287 + (C2654 - C2653) * C2282 +
             (C2656 - C2655) * C2288 + (C2658 - C2657) * C2283 +
             (C117 * C3589 - C50214 * C3592) * C2289 +
             (C117 * C3593 - C50214 * C3595) * C2284) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C118 +
              (C50214 * C140 - C117 * C127) * C50199) *
                 C107 +
             ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
             C184 * C109 + C185 * C110) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C118 +
              (C117 * C466 - C50214 * C485) * C50199) *
                 C107 +
             ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
             C757 * C109 + C758 * C110) *
                C50182) *
               C1018 +
           ((((C117 * C290 - C50214 * C300) * C118 +
              (C117 * C301 - C50214 * C320) * C50199) *
                 C107 +
             ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
             C639 * C109 + C640 * C110) *
                C50344 +
            (((C50214 * C893 - C117 * C888) * C118 +
              (C50214 * C903 - C117 * C894) * C50199) *
                 C107 +
             ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
             ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
             ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
             ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
             C186 * C109 + C187 * C110) *
                C50344 +
            (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
             ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
             ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
             ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                C50182) *
               C1018 +
           ((((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
             ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
             ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
             ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                C50344 +
            (((C910 - C909) * C118 + (C912 - C911) * C50199) * C107 +
             ((C914 - C913) * C118 + (C916 - C915) * C50199) * C108 +
             ((C918 - C917) * C118 + (C920 - C919) * C50199) * C109 +
             ((C117 * C892 - C50214 * C901) * C118 +
              (C117 * C902 - C50214 * C907) * C50199) *
                 C110) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C2287 +
              (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
              (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                 C2285 +
             ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
              C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                 C50062) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C2287 +
              (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
              (C3167 - C3168) * C2283 + (C3169 - C3170) * C2289 +
              (C3171 - C3172) * C2284) *
                 C2285 +
             ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
              C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
              (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
              C3437 * C2289 + C3438 * C2284) *
                 C2285 +
             (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
              C2485 * C2289 + C2486 * C2284) *
                 C50062) *
                C50344 +
            (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
              (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
              (C50214 * C3155 - C117 * C3152) * C2289 +
              (C50214 * C3161 - C117 * C3156) * C2284) *
                 C2285 +
             (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
              (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
              C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                 C2285 +
             ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
              C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                 C50062) *
                C50344 +
            (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
              C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                 C2285 +
             ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
              (C913 - C914) * C2288 + (C915 - C916) * C2283 +
              (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                 C50062) *
                C50182) *
               C1018 +
           (((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
              C2487 * C2289 + C2488 * C2284) *
                 C2285 +
             (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
              (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                 C50062) *
                C50344 +
            ((C3173 * C2287 + C3174 * C2282 + C3175 * C2288 + C3176 * C2283 +
              (C3182 - C3181) * C2289 + (C3184 - C3183) * C2284) *
                 C2285 +
             ((C914 - C913) * C2287 + (C916 - C915) * C2282 +
              (C2956 - C2955) * C2288 + (C2958 - C2957) * C2283 +
              (C117 * C3154 - C50214 * C3159) * C2289 +
              (C117 * C3160 - C50214 * C3163) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50118 * C1018 +
           (((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50118 * C1018 +
           (((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
            ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
            ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
            ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
               C50118 * C50154) *
              C1021 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C50118 * C1018 +
           (C639 * C107 + C640 * C108 +
            ((C632 - C631) * C118 + (C634 - C633) * C50199) * C109 +
            ((C117 * C622 - C50214 * C623) * C118 +
             (C117 * C624 - C50214 * C625) * C50199) *
                C110) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C50118 * C1089 +
          (((C117 * C290 - C50214 * C300) * C118 +
            (C117 * C301 - C50214 * C320) * C50199) *
               C107 +
           ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
           C639 * C109 + C640 * C110) *
              C50118 * C1090 +
          (((C50214 * C308 - C117 * C294) * C118 +
            (C50214 * C324 - C117 * C309) * C50199) *
               C107 +
           ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
           ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
           ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
              C50118 * C1091 +
          (((C117 * C1094 - C50214 * C1098) * C118 +
            (C117 * C1099 - C50214 * C1106) * C50199) *
               C107 +
           ((C117 * C1095 - C50214 * C1100) * C118 +
            (C117 * C1101 - C50214 * C1107) * C50199) *
               C108 +
           ((C117 * C1096 - C50214 * C1102) * C118 +
            (C117 * C1103 - C50214 * C1108) * C50199) *
               C109 +
           ((C117 * C1097 - C50214 * C1104) * C118 +
            (C117 * C1105 - C50214 * C1109) * C50199) *
               C110) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50118 * C1018 +
           (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
             (C2461 - C2462) * C2289 + (C2463 - C2464) * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
             C2487 * C2289 + C2488 * C2284) *
                C2285 +
            (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
             (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C50118 * C1018 +
           ((C627 * C2287 + C628 * C2282 + C2477 * C2288 + C2478 * C2283 +
             (C2480 - C2479) * C2289 + (C2482 - C2481) * C2284) *
                C2285 +
            (C629 * C2287 + C630 * C2282 + (C352 - C351) * C2288 +
             (C354 - C353) * C2283 + (C117 * C1097 - C50214 * C1104) * C2289 +
             (C117 * C1105 - C50214 * C1109) * C2284) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
            (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
            C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
               C50062) *
              C50118 * C1089 +
          (((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
            (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
            C3438 * C2284) *
               C2285 +
           (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
            C2485 * C2289 + C2486 * C2284) *
               C50062) *
              C50118 * C1090 +
          ((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
            (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
            (C3441 - C3442) * C2284) *
               C2285 +
           (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
            (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
               C50062) *
              C50118 * C1091 +
          ((C3437 * C2287 + C3438 * C2282 + (C3440 - C3439) * C2288 +
            (C3442 - C3441) * C2283 + (C117 * C3428 - C50214 * C3430) * C2289 +
            (C117 * C3431 - C50214 * C3434) * C2284) *
               C2285 +
           (C2485 * C2287 + C2486 * C2282 + (C2474 - C2473) * C2288 +
            (C2476 - C2475) * C2283 + (C117 * C3429 - C50214 * C3432) * C2289 +
            (C117 * C3433 - C50214 * C3435) * C2284) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C118 +
              (C50214 * C140 - C117 * C127) * C50199) *
                 C107 +
             ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
             C184 * C109 + C185 * C110) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C118 +
              (C117 * C466 - C50214 * C485) * C50199) *
                 C107 +
             ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
             C757 * C109 + C758 * C110) *
                C50182) *
               C50343 +
           ((((C117 * C290 - C50214 * C300) * C118 +
              (C117 * C301 - C50214 * C320) * C50199) *
                 C107 +
             ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
             C639 * C109 + C640 * C110) *
                C1669 +
            (((C50214 * C893 - C117 * C888) * C118 +
              (C50214 * C903 - C117 * C894) * C50199) *
                 C107 +
             ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
             ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
             ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
             ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
             C186 * C109 + C187 * C110) *
                C1669 +
            (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
             ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
             ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
             ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
                C50182) *
               C50343 +
           ((((C332 - C331) * C118 + (C334 - C333) * C50199) * C107 +
             ((C336 - C335) * C118 + (C338 - C337) * C50199) * C108 +
             ((C340 - C339) * C118 + (C342 - C341) * C50199) * C109 +
             ((C631 - C632) * C118 + (C633 - C634) * C50199) * C110) *
                C1669 +
            (((C910 - C909) * C118 + (C912 - C911) * C50199) * C107 +
             ((C914 - C913) * C118 + (C916 - C915) * C50199) * C108 +
             ((C918 - C917) * C118 + (C920 - C919) * C50199) * C109 +
             ((C117 * C892 - C50214 * C901) * C118 +
              (C117 * C902 - C50214 * C907) * C50199) *
                 C110) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C2287 +
              (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
              (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                 C2285 +
             ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
              C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                 C50062) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C2287 +
              (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
              (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                 C2285 +
             ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
              C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
              (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 +
              C3437 * C2289 + C3438 * C2284) *
                 C2285 +
             (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
              C2485 * C2289 + C2486 * C2284) *
                 C50062) *
                C1669 +
            (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
              (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
              (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                 C2285 +
             (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
              (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
              C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                 C2285 +
             ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
              C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                 C50062) *
                C1669 +
            (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
              C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                 C2285 +
             ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
              (C913 - C914) * C2288 + (C915 - C916) * C2283 +
              (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                 C50062) *
                C50182) *
               C50343 +
           (((C2457 * C2287 + C2458 * C2282 + C2459 * C2288 + C2460 * C2283 +
              C2487 * C2289 + C2488 * C2284) *
                 C2285 +
             (C2805 * C2287 + C2806 * C2282 + C2807 * C2288 + C2808 * C2283 +
              (C2479 - C2480) * C2289 + (C2481 - C2482) * C2284) *
                 C50062) *
                C1669 +
            ((C3173 * C2287 + C3174 * C2282 + C3175 * C2288 + C3176 * C2283 +
              (C3182 - C3181) * C2289 + (C3184 - C3183) * C2284) *
                 C2285 +
             ((C914 - C913) * C2287 + (C916 - C915) * C2282 +
              (C2956 - C2955) * C2288 + (C2958 - C2957) * C2283 +
              (C117 * C3154 - C50214 * C3159) * C2289 +
              (C117 * C3160 - C50214 * C3163) * C2284) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C2085) *
              C50343 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C50390 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50391 +
           (((C117 * C1208 - C50214 * C1212) * C118 +
             (C117 * C1213 - C50214 * C1220) * C50199) *
                C107 +
            ((C117 * C1209 - C50214 * C1214) * C118 +
             (C117 * C1215 - C50214 * C1221) * C50199) *
                C108 +
            ((C117 * C1210 - C50214 * C1216) * C118 +
             (C117 * C1217 - C50214 * C1222) * C50199) *
                C109 +
            ((C117 * C1211 - C50214 * C1218) * C118 +
             (C117 * C1219 - C50214 * C1223) * C50199) *
                C110) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
             (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
             (C3603 - C3604) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C2085) *
              C50343 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C50390 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50391 +
           (((C3598 - C3597) * C2287 + (C3600 - C3599) * C2282 +
             (C3602 - C3601) * C2288 + (C3604 - C3603) * C2283 +
             (C117 * C3588 - C50214 * C3590) * C2289 +
             (C117 * C3591 - C50214 * C3594) * C2284) *
                C2285 +
            ((C2652 - C2651) * C2287 + (C2654 - C2653) * C2282 +
             (C2656 - C2655) * C2288 + (C2658 - C2657) * C2283 +
             (C117 * C3589 - C50214 * C3592) * C2289 +
             (C117 * C3593 - C50214 * C3595) * C2284) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C285 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C1669 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50182) *
              C286 +
          ((((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C1669 +
           (((C117 * C1555 - C50214 * C1559) * C118 +
             (C117 * C1560 - C50214 * C1567) * C50199) *
                C107 +
            ((C117 * C1556 - C50214 * C1561) * C118 +
             (C117 * C1562 - C50214 * C1568) * C50199) *
                C108 +
            ((C117 * C1557 - C50214 * C1563) * C118 +
             (C117 * C1564 - C50214 * C1569) * C50199) *
                C109 +
            ((C117 * C1558 - C50214 * C1565) * C118 +
             (C117 * C1566 - C50214 * C1570) * C50199) *
                C110) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C1669 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50182) *
              C50102 * C1021 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C1669 +
           (C757 * C107 + C758 * C108 +
            ((C750 - C749) * C118 + (C752 - C751) * C50199) * C109 +
            ((C117 * C740 - C50214 * C741) * C118 +
             (C117 * C742 - C50214 * C743) * C50199) *
                C110) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C118 +
            (C50214 * C140 - C117 * C127) * C50199) *
               C107 +
           ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
           C184 * C109 + C185 * C110) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C118 +
            (C117 * C466 - C50214 * C485) * C50199) *
               C107 +
           ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
           C757 * C109 + C758 * C110) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C118 +
            (C50214 * C489 - C117 * C474) * C50199) *
               C107 +
           ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
           ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
           ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C118 +
            (C117 * C1844 - C50214 * C1851) * C50199) *
               C107 +
           ((C117 * C1840 - C50214 * C1845) * C118 +
            (C117 * C1846 - C50214 * C1852) * C50199) *
               C108 +
           ((C117 * C1841 - C50214 * C1847) * C118 +
            (C117 * C1848 - C50214 * C1853) * C50199) *
               C109 +
           ((C117 * C1842 - C50214 * C1849) * C118 +
            (C117 * C1850 - C50214 * C1854) * C50199) *
               C110) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C1669 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
             C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C1669 +
           ((C745 * C2287 + C746 * C2282 + (C914 - C913) * C2288 +
             (C916 - C915) * C2283 + (C2956 - C2955) * C2289 +
             (C2958 - C2957) * C2284) *
                C2285 +
            (C747 * C2287 + C748 * C2282 + (C918 - C917) * C2288 +
             (C920 - C919) * C2283 + (C117 * C1558 - C50214 * C1565) * C2289 +
             (C117 * C1566 - C50214 * C1570) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C1669 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50182) *
              C286 +
          (((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C1669 +
           ((C4099 * C2287 + C4100 * C2282 + (C4102 - C4101) * C2288 +
             (C4104 - C4103) * C2283 + (C117 * C4090 - C50214 * C4092) * C2289 +
             (C117 * C4093 - C50214 * C4096) * C2284) *
                C2285 +
            (C3175 * C2287 + C3176 * C2282 + (C3182 - C3181) * C2288 +
             (C3184 - C3183) * C2283 + (C117 * C4091 - C50214 * C4094) * C2289 +
             (C117 * C4095 - C50214 * C4097) * C2284) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C2287 +
            (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
            (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
               C2285 +
           ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
            C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
               C50062) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C2287 +
            (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
            (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
               C2285 +
           ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
            C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
               C50062) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C2287 +
            (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
            (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
            (C3603 - C3604) * C2284) *
               C2285 +
           ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
            (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
            (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
               C50062) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C2287 +
            (C117 * C1844 - C50214 * C1851) * C2282 +
            (C117 * C4494 - C50214 * C4498) * C2288 +
            (C117 * C4499 - C50214 * C4506) * C2283 +
            (C117 * C4495 - C50214 * C4500) * C2289 +
            (C117 * C4501 - C50214 * C4507) * C2284) *
               C2285 +
           ((C117 * C1840 - C50214 * C1845) * C2287 +
            (C117 * C1846 - C50214 * C1852) * C2282 +
            (C117 * C4496 - C50214 * C4502) * C2288 +
            (C117 * C4503 - C50214 * C4508) * C2283 +
            (C117 * C4497 - C50214 * C4504) * C2289 +
            (C117 * C4505 - C50214 * C4509) * C2284) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C118 +
             (C50214 * C489 - C117 * C474) * C50199) *
                C107 +
            ((C508 - C509) * C118 + (C510 - C511) * C50199) * C108 +
            ((C512 - C513) * C118 + (C514 - C515) * C50199) * C109 +
            ((C516 - C517) * C118 + (C518 - C519) * C50199) * C110) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C50390 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50391 +
           (((C509 - C508) * C118 + (C511 - C510) * C50199) * C107 +
            ((C513 - C512) * C118 + (C515 - C514) * C50199) * C108 +
            ((C517 - C516) * C118 + (C519 - C518) * C50199) * C109 +
            ((C117 * C464 - C50214 * C483) * C118 +
             (C117 * C484 - C50214 * C494) * C50199) *
                C110) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C2287 +
             (C50214 * C489 - C117 * C474) * C2282 + (C3597 - C3598) * C2288 +
             (C3599 - C3600) * C2283 + (C3601 - C3602) * C2289 +
             (C3603 - C3604) * C2284) *
                C2285 +
            ((C508 - C509) * C2287 + (C510 - C511) * C2282 +
             (C2651 - C2652) * C2288 + (C2653 - C2654) * C2283 +
             (C2655 - C2656) * C2289 + (C2657 - C2658) * C2284) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C50390 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
             C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50391 +
           (((C509 - C508) * C2287 + (C511 - C510) * C2282 +
             (C2652 - C2651) * C2288 + (C2654 - C2653) * C2283 +
             (C2656 - C2655) * C2289 + (C2658 - C2657) * C2284) *
                C2285 +
            ((C513 - C512) * C2287 + (C515 - C514) * C2282 +
             (C117 * C1210 - C50214 * C1216) * C2288 +
             (C117 * C1217 - C50214 * C1222) * C2283 +
             (C117 * C2636 - C50214 * C2641) * C2289 +
             (C117 * C2642 - C50214 * C2645) * C2284) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C118 + (C151 - C150) * C50199) * C107 +
            ((C153 - C152) * C118 + (C155 - C154) * C50199) * C108 +
            C186 * C109 + C187 * C110) *
               C1669 +
           (((C497 - C496) * C118 + (C499 - C498) * C50199) * C107 +
            ((C501 - C500) * C118 + (C503 - C502) * C50199) * C108 +
            ((C505 - C504) * C118 + (C507 - C506) * C50199) * C109 +
            ((C749 - C750) * C118 + (C751 - C752) * C50199) * C110) *
               C50182) *
              C50102 * C1021 +
          ((C184 * C107 + C185 * C108 +
            ((C161 - C160) * C118 + (C163 - C162) * C50199) * C109 +
            ((C164 - C165) * C118 + (C166 - C167) * C50199) * C110) *
               C1669 +
           (C757 * C107 + C758 * C108 +
            ((C750 - C749) * C118 + (C752 - C751) * C50199) * C109 +
            ((C117 * C740 - C50214 * C741) * C118 +
             (C117 * C742 - C50214 * C743) * C50199) *
                C110) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C118 +
             (C50214 * C140 - C117 * C127) * C50199) *
                C107 +
            ((C148 - C149) * C118 + (C150 - C151) * C50199) * C108 +
            C184 * C109 + C185 * C110) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C118 +
             (C117 * C466 - C50214 * C485) * C50199) *
                C107 +
            ((C496 - C497) * C118 + (C498 - C499) * C50199) * C108 +
            C757 * C109 + C758 * C110) *
               C50182) *
              C285 +
          ((((C117 * C290 - C50214 * C300) * C118 +
             (C117 * C301 - C50214 * C320) * C50199) *
                C107 +
            ((C331 - C332) * C118 + (C333 - C334) * C50199) * C108 +
            C639 * C109 + C640 * C110) *
               C1669 +
           (((C50214 * C893 - C117 * C888) * C118 +
             (C50214 * C903 - C117 * C894) * C50199) *
                C107 +
            ((C909 - C910) * C118 + (C911 - C912) * C50199) * C108 +
            ((C913 - C914) * C118 + (C915 - C916) * C50199) * C109 +
            ((C917 - C918) * C118 + (C919 - C920) * C50199) * C110) *
               C50182) *
              C286 +
          ((((C50214 * C308 - C117 * C294) * C118 +
             (C50214 * C324 - C117 * C309) * C50199) *
                C107 +
            ((C343 - C344) * C118 + (C345 - C346) * C50199) * C108 +
            ((C347 - C348) * C118 + (C349 - C350) * C50199) * C109 +
            ((C351 - C352) * C118 + (C353 - C354) * C50199) * C110) *
               C1669 +
           (((C117 * C1555 - C50214 * C1559) * C118 +
             (C117 * C1560 - C50214 * C1567) * C50199) *
                C107 +
            ((C117 * C1556 - C50214 * C1561) * C118 +
             (C117 * C1562 - C50214 * C1568) * C50199) *
                C108 +
            ((C117 * C1557 - C50214 * C1563) * C118 +
             (C117 * C1564 - C50214 * C1569) * C50199) *
                C109 +
            ((C117 * C1558 - C50214 * C1565) * C118 +
             (C117 * C1566 - C50214 * C1570) * C50199) *
                C110) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C2287 + (C151 - C150) * C2282 + C2465 * C2288 +
             C2466 * C2283 + C2467 * C2289 + C2468 * C2284) *
                C2285 +
            ((C153 - C152) * C2287 + (C155 - C154) * C2282 + C627 * C2288 +
             C628 * C2283 + C2477 * C2289 + C2478 * C2284) *
                C50062) *
               C1669 +
           (((C497 - C496) * C2287 + (C499 - C498) * C2282 + C3177 * C2288 +
             C3178 * C2283 + C3179 * C2289 + C3180 * C2284) *
                C2285 +
            ((C501 - C500) * C2287 + (C503 - C502) * C2282 +
             (C913 - C914) * C2288 + (C915 - C916) * C2283 +
             (C2955 - C2956) * C2289 + (C2957 - C2958) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C168 * C2287 + C169 * C2282 + C2805 * C2288 + C2806 * C2283 +
             C2807 * C2289 + C2808 * C2284) *
                C2285 +
            (C170 * C2287 + C171 * C2282 + (C340 - C339) * C2288 +
             (C342 - C341) * C2283 + (C351 - C352) * C2289 +
             (C353 - C354) * C2284) *
                C50062) *
               C1669 +
           ((C745 * C2287 + C746 * C2282 + (C914 - C913) * C2288 +
             (C916 - C915) * C2283 + (C2956 - C2955) * C2289 +
             (C2958 - C2957) * C2284) *
                C2285 +
            (C747 * C2287 + C748 * C2282 + (C918 - C917) * C2288 +
             (C920 - C919) * C2283 + (C117 * C1558 - C50214 * C1565) * C2289 +
             (C117 * C1566 - C50214 * C1570) * C2284) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C2287 +
             (C50214 * C140 - C117 * C127) * C2282 + (C2449 - C2450) * C2288 +
             (C2451 - C2452) * C2283 + C2483 * C2289 + C2484 * C2284) *
                C2285 +
            ((C148 - C149) * C2287 + (C150 - C151) * C2282 + C2457 * C2288 +
             C2458 * C2283 + C2459 * C2289 + C2460 * C2284) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C2287 +
             (C117 * C466 - C50214 * C485) * C2282 + (C3165 - C3166) * C2288 +
             (C3167 - C3168) * C2283 + C4099 * C2289 + C4100 * C2284) *
                C2285 +
            ((C496 - C497) * C2287 + (C498 - C499) * C2282 + C3173 * C2288 +
             C3174 * C2283 + C3175 * C2289 + C3176 * C2284) *
                C50062) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C2287 + (C2452 - C2451) * C2282 +
             (C2454 - C2453) * C2288 + (C2456 - C2455) * C2283 + C3437 * C2289 +
             C3438 * C2284) *
                C2285 +
            (C2465 * C2287 + C2466 * C2282 + C2467 * C2288 + C2468 * C2283 +
             C2485 * C2289 + C2486 * C2284) *
                C50062) *
               C1669 +
           (((C3166 - C3165) * C2287 + (C3168 - C3167) * C2282 +
             (C3170 - C3169) * C2288 + (C3172 - C3171) * C2283 +
             (C4101 - C4102) * C2289 + (C4103 - C4104) * C2284) *
                C2285 +
            (C3177 * C2287 + C3178 * C2282 + C3179 * C2288 + C3180 * C2283 +
             (C3181 - C3182) * C2289 + (C3183 - C3184) * C2284) *
                C50062) *
               C50182) *
              C286 +
          (((C2483 * C2287 + C2484 * C2282 + (C2462 - C2461) * C2288 +
             (C2464 - C2463) * C2283 + (C3439 - C3440) * C2289 +
             (C3441 - C3442) * C2284) *
                C2285 +
            (C2459 * C2287 + C2460 * C2282 + C2487 * C2288 + C2488 * C2283 +
             (C2473 - C2474) * C2289 + (C2475 - C2476) * C2284) *
                C50062) *
               C1669 +
           ((C4099 * C2287 + C4100 * C2282 + (C4102 - C4101) * C2288 +
             (C4104 - C4103) * C2283 + (C117 * C4090 - C50214 * C4092) * C2289 +
             (C117 * C4093 - C50214 * C4096) * C2284) *
                C2285 +
            (C3175 * C2287 + C3176 * C2282 + (C3182 - C3181) * C2288 +
             (C3184 - C3183) * C2283 + (C117 * C4091 - C50214 * C4094) * C2289 +
             (C117 * C4095 - C50214 * C4097) * C2284) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50118 * C50343 +
           (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50118 * C50343 +
           ((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 + C2460 * C50393 +
             C2487 * C24140 + C2488 * C24135) *
                C50328 +
            (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 + C2808 * C50393 +
             (C2479 - C2480) * C24140 + (C2481 - C2482) * C24135) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          (((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
             C2807 * C24140 + C2808 * C24135) *
                C50328 +
            (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
             (C351 - C352) * C24140 + (C353 - C354) * C24135) *
                C50062) *
               C50118 * C50343 +
           ((C627 * C24138 + C628 * C50392 + C2477 * C24139 + C2478 * C50393 +
             (C2480 - C2479) * C24140 + (C2482 - C2481) * C24135) *
                C50328 +
            (C629 * C24138 + C630 * C50392 + (C352 - C351) * C24139 +
             (C354 - C353) * C50393 + (C117 * C1097 - C50214 * C1104) * C24140 +
             (C117 * C1105 - C50214 * C1109) * C24135) *
                C50062) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C24138 +
              (C50214 * C140 - C117 * C127) * C50392 +
              (C2449 - C2450) * C24139 + (C2451 - C2452) * C50393 +
              C2483 * C24140 + C2484 * C24135) *
                 C50328 +
             ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
              C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                 C50062) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C24138 +
              (C117 * C466 - C50214 * C485) * C50392 +
              (C3165 - C3166) * C24139 + (C3167 - C3168) * C50393 +
              C4099 * C24140 + C4100 * C24135) *
                 C50328 +
             ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
              C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
              (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
              C3437 * C24140 + C3438 * C24135) *
                 C50328 +
             (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 +
              C2468 * C50393 + C2485 * C24140 + C2486 * C24135) *
                 C50062) *
                C50344 +
            (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
              (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
              (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                 C50328 +
             (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 +
              C3180 * C50393 + (C3181 - C3182) * C24140 +
              (C3183 - C3184) * C24135) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
              C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                 C50328 +
             ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
              C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                 C50062) *
                C50344 +
            (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
              C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                 C50328 +
             ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
              C8703 * C50393 + (C2955 - C2956) * C24140 +
              (C2957 - C2958) * C24135) *
                 C50062) *
                C50182) *
               C50343 +
           (((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 +
              C2460 * C50393 + C2487 * C24140 + C2488 * C24135) *
                 C50328 +
             (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 +
              C2808 * C50393 + (C2479 - C2480) * C24140 +
              (C2481 - C2482) * C24135) *
                 C50062) *
                C50344 +
            ((C3173 * C24138 + C3174 * C50392 + C3175 * C24139 +
              C3176 * C50393 + (C3182 - C3181) * C24140 +
              (C3184 - C3183) * C24135) *
                 C50328 +
             (C8501 * C24138 + C8502 * C50392 + (C2956 - C2955) * C24139 +
              (C2958 - C2957) * C50393 +
              (C117 * C3154 - C50214 * C3159) * C24140 +
              (C117 * C3160 - C50214 * C3163) * C24135) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50118 * C285 +
           (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50118 * C286 +
           ((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
             C19695 * C50393 + (C3439 - C3440) * C24140 +
             (C3441 - C3442) * C24135) *
                C50328 +
            (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
             (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50118 * C285 +
           ((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 + C2460 * C50393 +
             C2487 * C24140 + C2488 * C24135) *
                C50328 +
            (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 + C2808 * C50393 +
             (C2479 - C2480) * C24140 + (C2481 - C2482) * C24135) *
                C50062) *
               C50118 * C286 +
           ((C2467 * C24138 + C2468 * C50392 + C2485 * C24139 + C2486 * C50393 +
             (C2474 - C2473) * C24140 + (C2476 - C2475) * C24135) *
                C50328 +
            (C2477 * C24138 + C2478 * C50392 + (C2480 - C2479) * C24139 +
             (C2482 - C2481) * C50393 +
             (C117 * C2438 - C50214 * C2443) * C24140 +
             (C117 * C2444 - C50214 * C2447) * C24135) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C24138 +
            (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
            (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
               C50328 +
           ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
            C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
            C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
               C50328 +
           ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
            C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
            C2807 * C24140 + C2808 * C24135) *
               C50328 +
           (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
            (C351 - C352) * C24140 + (C353 - C354) * C24135) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C172 * C24138 + C173 * C50392 + C629 * C24139 + C630 * C50393 +
            (C352 - C351) * C24140 + (C354 - C353) * C24135) *
               C50328 +
           (C174 * C24138 + C175 * C50392 + (C632 - C631) * C24139 +
            (C634 - C633) * C50393 + (C117 * C299 - C50214 * C318) * C24140 +
            (C117 * C319 - C50214 * C329) * C24135) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C24138 +
             (C50214 * C489 - C117 * C474) * C50392 + (C3597 - C3598) * C24139 +
             (C3599 - C3600) * C50393 + (C3601 - C3602) * C24140 +
             (C3603 - C3604) * C24135) *
                C50328 +
            ((C508 - C509) * C24138 + (C510 - C511) * C50392 +
             (C2651 - C2652) * C24139 + (C2653 - C2654) * C50393 +
             (C2655 - C2656) * C24140 + (C2657 - C2658) * C24135) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C452 +
           (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
             C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                C50328 +
            ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
             C8703 * C50393 + (C2955 - C2956) * C24140 +
             (C2957 - C2958) * C24135) *
                C50062) *
               C453 +
           (((C509 - C508) * C24138 + (C511 - C510) * C50392 +
             (C2652 - C2651) * C24139 + (C2654 - C2653) * C50393 +
             (C2656 - C2655) * C24140 + (C2658 - C2657) * C24135) *
                C50328 +
            ((C513 - C512) * C24138 + (C515 - C514) * C50392 +
             (C8195 - C8194) * C24139 + (C8197 - C8196) * C50393 +
             (C117 * C2636 - C50214 * C2641) * C24140 +
             (C117 * C2642 - C50214 * C2645) * C24135) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50344 +
           (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
             C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                C50328 +
            ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
             C8703 * C50393 + (C2955 - C2956) * C24140 +
             (C2957 - C2958) * C24135) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          (((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
             C2807 * C24140 + C2808 * C24135) *
                C50328 +
            (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
             (C351 - C352) * C24140 + (C353 - C354) * C24135) *
                C50062) *
               C50344 +
           ((C745 * C24138 + C746 * C50392 + C8501 * C24139 + C8502 * C50393 +
             (C2956 - C2955) * C24140 + (C2958 - C2957) * C24135) *
                C50328 +
            (C747 * C24138 + C748 * C50392 + (C918 - C917) * C24139 +
             (C920 - C919) * C50393 + (C117 * C1558 - C50214 * C1565) * C24140 +
             (C117 * C1566 - C50214 * C1570) * C24135) *
                C50062) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C24138 +
            (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
            (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
               C50328 +
           ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
            C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
            C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
               C50328 +
           ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
            C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
            C2807 * C24140 + C2808 * C24135) *
               C50328 +
           (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
            (C351 - C352) * C24140 + (C353 - C354) * C24135) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C172 * C24138 + C173 * C50392 + C629 * C24139 + C630 * C50393 +
            (C352 - C351) * C24140 + (C354 - C353) * C24135) *
               C50328 +
           (C174 * C24138 + C175 * C50392 + (C632 - C631) * C24139 +
            (C634 - C633) * C50393 + (C117 * C299 - C50214 * C318) * C24140 +
            (C117 * C319 - C50214 * C329) * C24135) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50118 * C285 +
           (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50118 * C286 +
           ((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
             C19695 * C50393 + (C3439 - C3440) * C24140 +
             (C3441 - C3442) * C24135) *
                C50328 +
            (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
             (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50118 * C285 +
           ((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 + C2460 * C50393 +
             C2487 * C24140 + C2488 * C24135) *
                C50328 +
            (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 + C2808 * C50393 +
             (C2479 - C2480) * C24140 + (C2481 - C2482) * C24135) *
                C50062) *
               C50118 * C286 +
           ((C2467 * C24138 + C2468 * C50392 + C2485 * C24139 + C2486 * C50393 +
             (C2474 - C2473) * C24140 + (C2476 - C2475) * C24135) *
                C50328 +
            (C2477 * C24138 + C2478 * C50392 + (C2480 - C2479) * C24139 +
             (C2482 - C2481) * C50393 +
             (C117 * C2438 - C50214 * C2443) * C24140 +
             (C117 * C2444 - C50214 * C2447) * C24135) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50118 * C50388 +
           (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50118 * C50389 +
           ((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
             C19695 * C50393 + (C3439 - C3440) * C24140 +
             (C3441 - C3442) * C24135) *
                C50328 +
            (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
             (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50118 * C50388 +
           ((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 + C2460 * C50393 +
             C2487 * C24140 + C2488 * C24135) *
                C50328 +
            (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 + C2808 * C50393 +
             (C2479 - C2480) * C24140 + (C2481 - C2482) * C24135) *
                C50062) *
               C50118 * C50389 +
           ((C2467 * C24138 + C2468 * C50392 + C2485 * C24139 + C2486 * C50393 +
             (C2474 - C2473) * C24140 + (C2476 - C2475) * C24135) *
                C50328 +
            (C2477 * C24138 + C2478 * C50392 + (C2480 - C2479) * C24139 +
             (C2482 - C2481) * C50393 +
             (C117 * C2438 - C50214 * C2443) * C24140 +
             (C117 * C2444 - C50214 * C2447) * C24135) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50182) *
              C50388 +
          ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50344 +
           (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
             (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
             (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                C50328 +
            (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 + C3180 * C50393 +
             (C3181 - C3182) * C24140 + (C3183 - C3184) * C24135) *
                C50062) *
               C50182) *
              C50389 +
          (((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
             C19695 * C50393 + (C3439 - C3440) * C24140 +
             (C3441 - C3442) * C24135) *
                C50328 +
            (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
             (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
                C50062) *
               C50344 +
           ((C4099 * C24138 + C4100 * C50392 + C20730 * C24139 +
             C20731 * C50393 + (C20733 - C20732) * C24140 +
             (C20735 - C20734) * C24135) *
                C50328 +
            (C3175 * C24138 + C3176 * C50392 + (C3182 - C3181) * C24139 +
             (C3184 - C3183) * C50393 +
             (C117 * C4091 - C50214 * C4094) * C24140 +
             (C117 * C4095 - C50214 * C4097) * C24135) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C24138 +
            (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
            (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
               C50328 +
           ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
            C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
               C50062) *
              C50118 * C1089 +
          (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
            (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
            C3437 * C24140 + C3438 * C24135) *
               C50328 +
           (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
            C2485 * C24140 + C2486 * C24135) *
               C50062) *
              C50118 * C1090 +
          ((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
            C19695 * C50393 + (C3439 - C3440) * C24140 +
            (C3441 - C3442) * C24135) *
               C50328 +
           (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
            (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
               C50062) *
              C50118 * C1091 +
          ((C3437 * C24138 + C3438 * C50392 + C20288 * C24139 +
            C20289 * C50393 + (C20291 - C20290) * C24140 +
            (C20293 - C20292) * C24135) *
               C50328 +
           (C2485 * C24138 + C2486 * C50392 + (C2474 - C2473) * C24139 +
            (C2476 - C2475) * C50393 +
            (C117 * C3429 - C50214 * C3432) * C24140 +
            (C117 * C3433 - C50214 * C3435) * C24135) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50118 * C1018 +
           (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50118 * C1018 +
           ((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 + C2460 * C50393 +
             C2487 * C24140 + C2488 * C24135) *
                C50328 +
            (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 + C2808 * C50393 +
             (C2479 - C2480) * C24140 + (C2481 - C2482) * C24135) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
             C2807 * C24140 + C2808 * C24135) *
                C50328 +
            (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
             (C351 - C352) * C24140 + (C353 - C354) * C24135) *
                C50062) *
               C50118 * C1018 +
           ((C627 * C24138 + C628 * C50392 + C2477 * C24139 + C2478 * C50393 +
             (C2480 - C2479) * C24140 + (C2482 - C2481) * C24135) *
                C50328 +
            (C629 * C24138 + C630 * C50392 + (C352 - C351) * C24139 +
             (C354 - C353) * C50393 + (C117 * C1097 - C50214 * C1104) * C24140 +
             (C117 * C1105 - C50214 * C1109) * C24135) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C24138 +
             (C50214 * C489 - C117 * C474) * C50392 + (C3597 - C3598) * C24139 +
             (C3599 - C3600) * C50393 + (C3601 - C3602) * C24140 +
             (C3603 - C3604) * C24135) *
                C50328 +
            ((C508 - C509) * C24138 + (C510 - C511) * C50392 +
             (C2651 - C2652) * C24139 + (C2653 - C2654) * C50393 +
             (C2655 - C2656) * C24140 + (C2657 - C2658) * C24135) *
                C50062) *
               C454) *
              C1018 +
          ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C452 +
           (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
             (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
             (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                C50328 +
            (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 + C3180 * C50393 +
             (C3181 - C3182) * C24140 + (C3183 - C3184) * C24135) *
                C50062) *
               C453 +
           (((C3598 - C3597) * C24138 + (C3600 - C3599) * C50392 +
             (C3602 - C3601) * C24139 + (C3604 - C3603) * C50393 +
             (C20397 - C20396) * C24140 + (C20399 - C20398) * C24135) *
                C50328 +
            ((C2652 - C2651) * C24138 + (C2654 - C2653) * C50392 +
             (C2656 - C2655) * C24139 + (C2658 - C2657) * C50393 +
             (C117 * C3589 - C50214 * C3592) * C24140 +
             (C117 * C3593 - C50214 * C3595) * C24135) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C24138 +
              (C50214 * C140 - C117 * C127) * C50392 +
              (C2449 - C2450) * C24139 + (C2451 - C2452) * C50393 +
              C2483 * C24140 + C2484 * C24135) *
                 C50328 +
             ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
              C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                 C50062) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C24138 +
              (C117 * C466 - C50214 * C485) * C50392 +
              (C3165 - C3166) * C24139 + (C3167 - C3168) * C50393 +
              C4099 * C24140 + C4100 * C24135) *
                 C50328 +
             ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
              C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
              (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
              C3437 * C24140 + C3438 * C24135) *
                 C50328 +
             (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 +
              C2468 * C50393 + C2485 * C24140 + C2486 * C24135) *
                 C50062) *
                C50344 +
            (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
              (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
              (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                 C50328 +
             (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 +
              C3180 * C50393 + (C3181 - C3182) * C24140 +
              (C3183 - C3184) * C24135) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
              C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                 C50328 +
             ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
              C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                 C50062) *
                C50344 +
            (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
              C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                 C50328 +
             ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
              C8703 * C50393 + (C2955 - C2956) * C24140 +
              (C2957 - C2958) * C24135) *
                 C50062) *
                C50182) *
               C1018 +
           (((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 +
              C2460 * C50393 + C2487 * C24140 + C2488 * C24135) *
                 C50328 +
             (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 +
              C2808 * C50393 + (C2479 - C2480) * C24140 +
              (C2481 - C2482) * C24135) *
                 C50062) *
                C50344 +
            ((C3173 * C24138 + C3174 * C50392 + C3175 * C24139 +
              C3176 * C50393 + (C3182 - C3181) * C24140 +
              (C3184 - C3183) * C24135) *
                 C50328 +
             (C8501 * C24138 + C8502 * C50392 + (C2956 - C2955) * C24139 +
              (C2958 - C2957) * C50393 +
              (C117 * C3154 - C50214 * C3159) * C24140 +
              (C117 * C3160 - C50214 * C3163) * C24135) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50118 * C1018 +
           (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50118 * C1018 +
           ((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 + C2460 * C50393 +
             C2487 * C24140 + C2488 * C24135) *
                C50328 +
            (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 + C2808 * C50393 +
             (C2479 - C2480) * C24140 + (C2481 - C2482) * C24135) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
             C2807 * C24140 + C2808 * C24135) *
                C50328 +
            (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
             (C351 - C352) * C24140 + (C353 - C354) * C24135) *
                C50062) *
               C50118 * C1018 +
           ((C627 * C24138 + C628 * C50392 + C2477 * C24139 + C2478 * C50393 +
             (C2480 - C2479) * C24140 + (C2482 - C2481) * C24135) *
                C50328 +
            (C629 * C24138 + C630 * C50392 + (C352 - C351) * C24139 +
             (C354 - C353) * C50393 + (C117 * C1097 - C50214 * C1104) * C24140 +
             (C117 * C1105 - C50214 * C1109) * C24135) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C24138 +
            (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
            (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
               C50328 +
           ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
            C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
               C50062) *
              C50118 * C1089 +
          (((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
            (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
            C3437 * C24140 + C3438 * C24135) *
               C50328 +
           (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
            C2485 * C24140 + C2486 * C24135) *
               C50062) *
              C50118 * C1090 +
          ((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
            C19695 * C50393 + (C3439 - C3440) * C24140 +
            (C3441 - C3442) * C24135) *
               C50328 +
           (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
            (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
               C50062) *
              C50118 * C1091 +
          ((C3437 * C24138 + C3438 * C50392 + C20288 * C24139 +
            C20289 * C50393 + (C20291 - C20290) * C24140 +
            (C20293 - C20292) * C24135) *
               C50328 +
           (C2485 * C24138 + C2486 * C50392 + (C2474 - C2473) * C24139 +
            (C2476 - C2475) * C50393 +
            (C117 * C3429 - C50214 * C3432) * C24140 +
            (C117 * C3433 - C50214 * C3435) * C24135) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C24138 +
              (C50214 * C140 - C117 * C127) * C50392 +
              (C2449 - C2450) * C24139 + (C2451 - C2452) * C50393 +
              C2483 * C24140 + C2484 * C24135) *
                 C50328 +
             ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
              C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                 C50062) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C24138 +
              (C117 * C466 - C50214 * C485) * C50392 +
              (C3165 - C3166) * C24139 + (C3167 - C3168) * C50393 +
              C4099 * C24140 + C4100 * C24135) *
                 C50328 +
             ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
              C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
              (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
              C3437 * C24140 + C3438 * C24135) *
                 C50328 +
             (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 +
              C2468 * C50393 + C2485 * C24140 + C2486 * C24135) *
                 C50062) *
                C1669 +
            (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
              (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
              (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                 C50328 +
             (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 +
              C3180 * C50393 + (C3181 - C3182) * C24140 +
              (C3183 - C3184) * C24135) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
              C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                 C50328 +
             ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
              C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                 C50062) *
                C1669 +
            (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
              C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                 C50328 +
             ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
              C8703 * C50393 + (C2955 - C2956) * C24140 +
              (C2957 - C2958) * C24135) *
                 C50062) *
                C50182) *
               C50343 +
           (((C2457 * C24138 + C2458 * C50392 + C2459 * C24139 +
              C2460 * C50393 + C2487 * C24140 + C2488 * C24135) *
                 C50328 +
             (C2805 * C24138 + C2806 * C50392 + C2807 * C24139 +
              C2808 * C50393 + (C2479 - C2480) * C24140 +
              (C2481 - C2482) * C24135) *
                 C50062) *
                C1669 +
            ((C3173 * C24138 + C3174 * C50392 + C3175 * C24139 +
              C3176 * C50393 + (C3182 - C3181) * C24140 +
              (C3184 - C3183) * C24135) *
                 C50328 +
             (C8501 * C24138 + C8502 * C50392 + (C2956 - C2955) * C24139 +
              (C2958 - C2957) * C50393 +
              (C117 * C3154 - C50214 * C3159) * C24140 +
              (C117 * C3160 - C50214 * C3163) * C24135) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C24138 +
             (C50214 * C489 - C117 * C474) * C50392 + (C3597 - C3598) * C24139 +
             (C3599 - C3600) * C50393 + (C3601 - C3602) * C24140 +
             (C3603 - C3604) * C24135) *
                C50328 +
            ((C508 - C509) * C24138 + (C510 - C511) * C50392 +
             (C2651 - C2652) * C24139 + (C2653 - C2654) * C50393 +
             (C2655 - C2656) * C24140 + (C2657 - C2658) * C24135) *
                C50062) *
               C2085) *
              C50343 +
          ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C50390 +
           (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
             (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
             (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                C50328 +
            (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 + C3180 * C50393 +
             (C3181 - C3182) * C24140 + (C3183 - C3184) * C24135) *
                C50062) *
               C50391 +
           (((C3598 - C3597) * C24138 + (C3600 - C3599) * C50392 +
             (C3602 - C3601) * C24139 + (C3604 - C3603) * C50393 +
             (C20397 - C20396) * C24140 + (C20399 - C20398) * C24135) *
                C50328 +
            ((C2652 - C2651) * C24138 + (C2654 - C2653) * C50392 +
             (C2656 - C2655) * C24139 + (C2658 - C2657) * C50393 +
             (C117 * C3589 - C50214 * C3592) * C24140 +
             (C117 * C3593 - C50214 * C3595) * C24135) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C1669 +
           (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
             (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
             (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                C50328 +
            (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 + C3180 * C50393 +
             (C3181 - C3182) * C24140 + (C3183 - C3184) * C24135) *
                C50062) *
               C50182) *
              C286 +
          (((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
             C19695 * C50393 + (C3439 - C3440) * C24140 +
             (C3441 - C3442) * C24135) *
                C50328 +
            (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
             (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
                C50062) *
               C1669 +
           ((C4099 * C24138 + C4100 * C50392 + C20730 * C24139 +
             C20731 * C50393 + (C20733 - C20732) * C24140 +
             (C20735 - C20734) * C24135) *
                C50328 +
            (C3175 * C24138 + C3176 * C50392 + (C3182 - C3181) * C24139 +
             (C3184 - C3183) * C50393 +
             (C117 * C4091 - C50214 * C4094) * C24140 +
             (C117 * C4095 - C50214 * C4097) * C24135) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C1669 +
           (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
             C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                C50328 +
            ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
             C8703 * C50393 + (C2955 - C2956) * C24140 +
             (C2957 - C2958) * C24135) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
             C2807 * C24140 + C2808 * C24135) *
                C50328 +
            (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
             (C351 - C352) * C24140 + (C353 - C354) * C24135) *
                C50062) *
               C1669 +
           ((C745 * C24138 + C746 * C50392 + C8501 * C24139 + C8502 * C50393 +
             (C2956 - C2955) * C24140 + (C2958 - C2957) * C24135) *
                C50328 +
            (C747 * C24138 + C748 * C50392 + (C918 - C917) * C24139 +
             (C920 - C919) * C50393 + (C117 * C1558 - C50214 * C1565) * C24140 +
             (C117 * C1566 - C50214 * C1570) * C24135) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C24138 +
            (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
            (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
               C50328 +
           ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
            C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
               C50062) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C24138 +
            (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
            (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
               C50328 +
           ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
            C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
               C50062) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C24138 +
            (C50214 * C489 - C117 * C474) * C50392 + (C3597 - C3598) * C24139 +
            (C3599 - C3600) * C50393 + (C3601 - C3602) * C24140 +
            (C3603 - C3604) * C24135) *
               C50328 +
           ((C508 - C509) * C24138 + (C510 - C511) * C50392 +
            (C2651 - C2652) * C24139 + (C2653 - C2654) * C50393 +
            (C2655 - C2656) * C24140 + (C2657 - C2658) * C24135) *
               C50062) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C24138 +
            (C117 * C1844 - C50214 * C1851) * C50392 +
            (C117 * C4494 - C50214 * C4498) * C24139 +
            (C117 * C4499 - C50214 * C4506) * C50393 +
            (C117 * C4495 - C50214 * C4500) * C24140 +
            (C117 * C4501 - C50214 * C4507) * C24135) *
               C50328 +
           ((C117 * C1840 - C50214 * C1845) * C24138 +
            (C117 * C1846 - C50214 * C1852) * C50392 +
            (C117 * C4496 - C50214 * C4502) * C24139 +
            (C117 * C4503 - C50214 * C4508) * C50393 +
            (C117 * C4497 - C50214 * C4504) * C24140 +
            (C117 * C4505 - C50214 * C4509) * C24135) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C24138 +
             (C50214 * C489 - C117 * C474) * C50392 + (C3597 - C3598) * C24139 +
             (C3599 - C3600) * C50393 + (C3601 - C3602) * C24140 +
             (C3603 - C3604) * C24135) *
                C50328 +
            ((C508 - C509) * C24138 + (C510 - C511) * C50392 +
             (C2651 - C2652) * C24139 + (C2653 - C2654) * C50393 +
             (C2655 - C2656) * C24140 + (C2657 - C2658) * C24135) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C50390 +
           (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
             C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                C50328 +
            ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
             C8703 * C50393 + (C2955 - C2956) * C24140 +
             (C2957 - C2958) * C24135) *
                C50062) *
               C50391 +
           (((C509 - C508) * C24138 + (C511 - C510) * C50392 +
             (C2652 - C2651) * C24139 + (C2654 - C2653) * C50393 +
             (C2656 - C2655) * C24140 + (C2658 - C2657) * C24135) *
                C50328 +
            ((C513 - C512) * C24138 + (C515 - C514) * C50392 +
             (C8195 - C8194) * C24139 + (C8197 - C8196) * C50393 +
             (C117 * C2636 - C50214 * C2641) * C24140 +
             (C117 * C2642 - C50214 * C2645) * C24135) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C24138 + (C151 - C150) * C50392 + C2465 * C24139 +
             C2466 * C50393 + C2467 * C24140 + C2468 * C24135) *
                C50328 +
            ((C153 - C152) * C24138 + (C155 - C154) * C50392 + C627 * C24139 +
             C628 * C50393 + C2477 * C24140 + C2478 * C24135) *
                C50062) *
               C1669 +
           (((C497 - C496) * C24138 + (C499 - C498) * C50392 + C3177 * C24139 +
             C3178 * C50393 + C3179 * C24140 + C3180 * C24135) *
                C50328 +
            ((C501 - C500) * C24138 + (C503 - C502) * C50392 + C8702 * C24139 +
             C8703 * C50393 + (C2955 - C2956) * C24140 +
             (C2957 - C2958) * C24135) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C168 * C24138 + C169 * C50392 + C2805 * C24139 + C2806 * C50393 +
             C2807 * C24140 + C2808 * C24135) *
                C50328 +
            (C170 * C24138 + C171 * C50392 + C8348 * C24139 + C8349 * C50393 +
             (C351 - C352) * C24140 + (C353 - C354) * C24135) *
                C50062) *
               C1669 +
           ((C745 * C24138 + C746 * C50392 + C8501 * C24139 + C8502 * C50393 +
             (C2956 - C2955) * C24140 + (C2958 - C2957) * C24135) *
                C50328 +
            (C747 * C24138 + C748 * C50392 + (C918 - C917) * C24139 +
             (C920 - C919) * C50393 + (C117 * C1558 - C50214 * C1565) * C24140 +
             (C117 * C1566 - C50214 * C1570) * C24135) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C24138 +
             (C50214 * C140 - C117 * C127) * C50392 + (C2449 - C2450) * C24139 +
             (C2451 - C2452) * C50393 + C2483 * C24140 + C2484 * C24135) *
                C50328 +
            ((C148 - C149) * C24138 + (C150 - C151) * C50392 + C2457 * C24139 +
             C2458 * C50393 + C2459 * C24140 + C2460 * C24135) *
                C50062) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C24138 +
             (C117 * C466 - C50214 * C485) * C50392 + (C3165 - C3166) * C24139 +
             (C3167 - C3168) * C50393 + C4099 * C24140 + C4100 * C24135) *
                C50328 +
            ((C496 - C497) * C24138 + (C498 - C499) * C50392 + C3173 * C24139 +
             C3174 * C50393 + C3175 * C24140 + C3176 * C24135) *
                C50062) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C24138 + (C2452 - C2451) * C50392 +
             (C2454 - C2453) * C24139 + (C2456 - C2455) * C50393 +
             C3437 * C24140 + C3438 * C24135) *
                C50328 +
            (C2465 * C24138 + C2466 * C50392 + C2467 * C24139 + C2468 * C50393 +
             C2485 * C24140 + C2486 * C24135) *
                C50062) *
               C1669 +
           (((C3166 - C3165) * C24138 + (C3168 - C3167) * C50392 +
             (C3170 - C3169) * C24139 + (C3172 - C3171) * C50393 +
             (C4101 - C4102) * C24140 + (C4103 - C4104) * C24135) *
                C50328 +
            (C3177 * C24138 + C3178 * C50392 + C3179 * C24139 + C3180 * C50393 +
             (C3181 - C3182) * C24140 + (C3183 - C3184) * C24135) *
                C50062) *
               C50182) *
              C286 +
          (((C2483 * C24138 + C2484 * C50392 + C19694 * C24139 +
             C19695 * C50393 + (C3439 - C3440) * C24140 +
             (C3441 - C3442) * C24135) *
                C50328 +
            (C2459 * C24138 + C2460 * C50392 + C2487 * C24139 + C2488 * C50393 +
             (C2473 - C2474) * C24140 + (C2475 - C2476) * C24135) *
                C50062) *
               C1669 +
           ((C4099 * C24138 + C4100 * C50392 + C20730 * C24139 +
             C20731 * C50393 + (C20733 - C20732) * C24140 +
             (C20735 - C20734) * C24135) *
                C50328 +
            (C3175 * C24138 + C3176 * C50392 + (C3182 - C3181) * C24139 +
             (C3184 - C3183) * C50393 +
             (C117 * C4091 - C50214 * C4094) * C24140 +
             (C117 * C4095 - C50214 * C4097) * C24135) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50118 * C50343 +
           ((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 +
            (C14831 - C14830 + C14833 - C14832) * C24140 +
            (C14835 - C14834 + C14837 - C14836) * C24135) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50118 * C50343 +
           (C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
            C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
            (C13612 - C13613 + C13614 - C13615) * C24135) *
               C50057 * C50118 * C50154) *
              C50387 +
          ((C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
            C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
            (C10782 - C10783 + C10784 - C10785) * C24135) *
               C50057 * C50118 * C50343 +
           (C11122 * C24138 + C11123 * C50392 +
            (C10779 - C10778 + C10781 - C10780) * C24139 +
            (C10783 - C10782 + C10785 - C10784) * C50393 +
            (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
             C50278 * C3159) *
                C24140 +
            (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
             C50278 * C3163) *
                C24135) *
               C50057 * C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C24138 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50392 +
             (C13576 - C13577 + C13578 - C13579) * C24139 +
             (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
             C30413 * C24135) *
                C50057 * C50344 +
            ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C24138 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50392 +
             (C14478 - C14479 + C14480 - C14481) * C24139 +
             (C14482 - C14483 + C14484 - C14485) * C50393 +
             (C15687 - C15686 + C15689 - C15688) * C24140 +
             (C15691 - C15690 + C15693 - C15692) * C24135) *
                C50057 * C50182) *
               C50343 +
           (((C13577 - C13576 + C13579 - C13578) * C24138 +
             (C13581 - C13580 + C13583 - C13582) * C50392 +
             (C13588 - C13589 + C13590 - C13591) * C24139 +
             (C13592 - C13593 + C13594 - C13595) * C50393 +
             (C14831 - C14830 + C14833 - C14832) * C24140 +
             (C14835 - C14834 + C14837 - C14836) * C24135) *
                C50057 * C50344 +
            ((C14479 - C14478 + C14481 - C14480) * C24138 +
             (C14483 - C14482 + C14485 - C14484) * C50392 +
             (C15686 - C15687 + C15688 - C15689) * C24139 +
             (C15690 - C15691 + C15692 - C15693) * C50393 +
             (C50357 * C3155 - C10555 * C3152 + C50278 * C3590 -
              C10556 * C3588) *
                 C24140 +
             (C50357 * C3161 - C10555 * C3156 + C50278 * C3594 -
              C10556 * C3591) *
                 C24135) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C24138 +
             (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
             C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
                C50057 * C50344 +
            ((C10933 - C10932 + C10935 - C10934) * C24138 +
             (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
             C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
             (C14498 - C14499 + C14500 - C14501) * C24135) *
                C50057 * C50182) *
               C50343 +
           ((C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
             C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
             (C13612 - C13613 + C13614 - C13615) * C24135) *
                C50057 * C50344 +
            (C14502 * C24138 + C14503 * C50392 +
             (C14495 - C14494 + C14497 - C14496) * C24139 +
             (C14499 - C14498 + C14501 - C14500) * C50393 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C24140 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C24135) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50118 * C285 +
           ((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 +
            (C14831 - C14830 + C14833 - C14832) * C24140 +
            (C14835 - C14834 + C14837 - C14836) * C24135) *
               C50057 * C50118 * C286 +
           (C30412 * C24138 + C30413 * C50392 +
            (C14830 - C14831 + C14832 - C14833) * C24139 +
            (C14834 - C14835 + C14836 - C14837) * C50393 +
            (C50357 * C2439 - C10555 * C2436 + C50278 * C4092 -
             C10556 * C4090) *
                C24140 +
            (C50357 * C2445 - C10555 * C2440 + C50278 * C4096 -
             C10556 * C4093) *
                C24135) *
               C50057 * C50118 * C287) *
              C288 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50118 * C285 +
           (C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
            C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
            (C13612 - C13613 + C13614 - C13615) * C24135) *
               C50057 * C50118 * C286 +
           (C13620 * C24138 + C13621 * C50392 +
            (C13609 - C13608 + C13611 - C13610) * C24139 +
            (C13613 - C13612 + C13615 - C13614) * C50393 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C24140 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C24135) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
               C24138 +
           (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
               C50392 +
           (C13576 - C13577 + C13578 - C13579) * C24139 +
           (C13580 - C13581 + C13582 - C13583) * C50393 +
           (C13589 - C13588 + C13591 - C13590) * C24140 +
           (C13593 - C13592 + C13595 - C13594) * C24135) *
              C50057 * C50118 * C50102 * C113 +
          ((C10559 - C10558 + C10561 - C10560) * C24138 +
           (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
           C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
              C50057 * C50118 * C50102 * C114 +
          (C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
           C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
           (C10782 - C10783 + C10784 - C10785) * C24135) *
              C50057 * C50118 * C50102 * C115 +
          (C10600 * C24138 + C10601 * C50392 +
           (C11115 - C11114 + C11117 - C11116) * C24139 +
           (C11119 - C11118 + C11121 - C11120) * C50393 +
           (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
               C24140 +
           (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
               C24135) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C452 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 +
            (C15687 - C15686 + C15689 - C15688) * C24140 +
            (C15691 - C15690 + C15693 - C15692) * C24135) *
               C50057 * C453 +
           ((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C24138 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C50392 +
            (C15032 - C15033 + C15034 - C15035) * C24139 +
            (C15036 - C15037 + C15038 - C15039) * C50393 +
            (C50357 * C2637 - C10555 * C2634 + C50278 * C4500 -
             C10556 * C4495) *
                C24140 +
            (C50357 * C2643 - C10555 * C2638 + C50278 * C4507 -
             C10556 * C4501) *
                C24135) *
               C50057 * C454) *
              C50102 * C288 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C452 +
           ((C10933 - C10932 + C10935 - C10934) * C24138 +
            (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
            C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
            (C14498 - C14499 + C14500 - C14501) * C24135) *
               C50057 * C453 +
           ((C10949 - C10948 + C10951 - C10950) * C24138 +
            (C10953 - C10952 + C10955 - C10954) * C50392 +
            (C13819 - C13818 + C13821 - C13820) * C24139 +
            (C13823 - C13822 + C13825 - C13824) * C50393 +
            (C10555 * C2635 - C50357 * C2639 + C10556 * C4497 -
             C50278 * C4504) *
                C24140 +
            (C10555 * C2640 - C50357 * C2644 + C10556 * C4505 -
             C50278 * C4509) *
                C24135) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50344 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 +
            (C15687 - C15686 + C15689 - C15688) * C24140 +
            (C15691 - C15690 + C15693 - C15692) * C24135) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50344 +
           ((C10933 - C10932 + C10935 - C10934) * C24138 +
            (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
            C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
            (C14498 - C14499 + C14500 - C14501) * C24135) *
               C50057 * C50182) *
              C50102 * C50387 +
          ((C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
            C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
            (C10782 - C10783 + C10784 - C10785) * C24135) *
               C50057 * C50344 +
           (C11285 * C24138 + C11286 * C50392 +
            (C11493 - C11492 + C11495 - C11494) * C24139 +
            (C11497 - C11496 + C11499 - C11498) * C50393 +
            (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
             C50278 * C2641) *
                C24140 +
            (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
             C50278 * C2645) *
                C24135) *
               C50057 * C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
               C24138 +
           (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
               C50392 +
           (C13576 - C13577 + C13578 - C13579) * C24139 +
           (C13580 - C13581 + C13582 - C13583) * C50393 +
           (C13589 - C13588 + C13591 - C13590) * C24140 +
           (C13593 - C13592 + C13595 - C13594) * C24135) *
              C50057 * C50118 * C50102 * C113 +
          ((C10559 - C10558 + C10561 - C10560) * C24138 +
           (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
           C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
              C50057 * C50118 * C50102 * C114 +
          (C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
           C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
           (C10782 - C10783 + C10784 - C10785) * C24135) *
              C50057 * C50118 * C50102 * C115 +
          (C10600 * C24138 + C10601 * C50392 +
           (C11115 - C11114 + C11117 - C11116) * C24139 +
           (C11119 - C11118 + C11121 - C11120) * C50393 +
           (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
               C24140 +
           (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
               C24135) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50118 * C285 +
           ((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 +
            (C14831 - C14830 + C14833 - C14832) * C24140 +
            (C14835 - C14834 + C14837 - C14836) * C24135) *
               C50057 * C50118 * C286 +
           (C30412 * C24138 + C30413 * C50392 +
            (C14830 - C14831 + C14832 - C14833) * C24139 +
            (C14834 - C14835 + C14836 - C14837) * C50393 +
            (C50357 * C2439 - C10555 * C2436 + C50278 * C4092 -
             C10556 * C4090) *
                C24140 +
            (C50357 * C2445 - C10555 * C2440 + C50278 * C4096 -
             C10556 * C4093) *
                C24135) *
               C50057 * C50118 * C287) *
              C288 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50118 * C285 +
           (C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
            C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
            (C13612 - C13613 + C13614 - C13615) * C24135) *
               C50057 * C50118 * C286 +
           (C13620 * C24138 + C13621 * C50392 +
            (C13609 - C13608 + C13611 - C13610) * C24139 +
            (C13613 - C13612 + C13615 - C13614) * C50393 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C24140 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C24135) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50118 * C50388 +
           ((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
            C31303 * C24135) *
               C50057 * C50118 * C50389 +
           (C30412 * C24138 + C30413 * C50392 +
            (C14830 - C14831 + C14832 - C14833) * C24139 +
            (C14834 - C14835 + C14836 - C14837) * C50393 +
            (C31294 - C31295 + C31296 - C31297) * C24140 +
            (C31298 - C31299 + C31300 - C31301) * C24135) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50118 * C50388 +
           (C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
            C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
            (C13612 - C13613 + C13614 - C13615) * C24135) *
               C50057 * C50118 * C50389 +
           (C13620 * C24138 + C13621 * C50392 +
            (C13609 - C13608 + C13611 - C13610) * C24139 +
            (C13613 - C13612 + C13615 - C13614) * C50393 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C24140 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C24135) *
               C50057 * C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50344 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50182) *
              C50388 +
          (((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
            C31303 * C24135) *
               C50057 * C50344 +
           ((C14479 - C14478 + C14481 - C14480) * C24138 +
            (C14483 - C14482 + C14485 - C14484) * C50392 +
            (C15686 - C15687 + C15688 - C15689) * C24139 +
            (C15690 - C15691 + C15692 - C15693) * C50393 +
            (C31948 - C31949 + C31950 - C31951) * C24140 +
            (C31952 - C31953 + C31954 - C31955) * C24135) *
               C50057 * C50182) *
              C50389 +
          ((C30412 * C24138 + C30413 * C50392 +
            (C14830 - C14831 + C14832 - C14833) * C24139 +
            (C14834 - C14835 + C14836 - C14837) * C50393 +
            (C31294 - C31295 + C31296 - C31297) * C24140 +
            (C31298 - C31299 + C31300 - C31301) * C24135) *
               C50057 * C50344 +
           (C31956 * C24138 + C31957 * C50392 +
            (C31949 - C31948 + C31951 - C31950) * C24139 +
            (C31953 - C31952 + C31955 - C31954) * C50393 +
            (C10555 * C4090 - C50357 * C4092 + C10556 * C20391 -
             C50278 * C20392) *
                C24140 +
            (C10555 * C4093 - C50357 * C4096 + C10556 * C20393 -
             C50278 * C20394) *
                C24135) *
               C50057 * C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
               C24138 +
           (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
               C50392 +
           (C13576 - C13577 + C13578 - C13579) * C24139 +
           (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
           C30413 * C24135) *
              C50057 * C50118 * C1089 +
          ((C13577 - C13576 + C13579 - C13578) * C24138 +
           (C13581 - C13580 + C13583 - C13582) * C50392 +
           (C13588 - C13589 + C13590 - C13591) * C24139 +
           (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
           C31303 * C24135) *
              C50057 * C50118 * C1090 +
          (C30412 * C24138 + C30413 * C50392 +
           (C14830 - C14831 + C14832 - C14833) * C24139 +
           (C14834 - C14835 + C14836 - C14837) * C50393 +
           (C31294 - C31295 + C31296 - C31297) * C24140 +
           (C31298 - C31299 + C31300 - C31301) * C24135) *
              C50057 * C50118 * C1091 +
          (C31302 * C24138 + C31303 * C50392 +
           (C31295 - C31294 + C31297 - C31296) * C24139 +
           (C31299 - C31298 + C31301 - C31300) * C50393 +
           (C10555 * C3428 - C50357 * C3430 + C10556 * C20725 -
            C50278 * C20726) *
               C24140 +
           (C10555 * C3431 - C50357 * C3434 + C10556 * C20727 -
            C50278 * C20728) *
               C24135) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50118 * C1018 +
           ((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 +
            (C14831 - C14830 + C14833 - C14832) * C24140 +
            (C14835 - C14834 + C14837 - C14836) * C24135) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50118 * C1018 +
           (C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
            C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
            (C13612 - C13613 + C13614 - C13615) * C24135) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
            C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
            (C10782 - C10783 + C10784 - C10785) * C24135) *
               C50057 * C50118 * C1018 +
           (C11122 * C24138 + C11123 * C50392 +
            (C10779 - C10778 + C10781 - C10780) * C24139 +
            (C10783 - C10782 + C10785 - C10784) * C50393 +
            (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
             C50278 * C3159) *
                C24140 +
            (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
             C50278 * C3163) *
                C24135) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C452 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 +
            (C15687 - C15686 + C15689 - C15688) * C24140 +
            (C15691 - C15690 + C15693 - C15692) * C24135) *
               C50057 * C453 +
           ((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C24138 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C50392 +
            (C15032 - C15033 + C15034 - C15035) * C24139 +
            (C15036 - C15037 + C15038 - C15039) * C50393 +
            (C31450 - C31451 + C31452 - C31453) * C24140 +
            (C31454 - C31455 + C31456 - C31457) * C24135) *
               C50057 * C454) *
              C1018 +
          (((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
            C31303 * C24135) *
               C50057 * C452 +
           ((C14479 - C14478 + C14481 - C14480) * C24138 +
            (C14483 - C14482 + C14485 - C14484) * C50392 +
            (C15686 - C15687 + C15688 - C15689) * C24139 +
            (C15690 - C15691 + C15692 - C15693) * C50393 +
            (C50357 * C3155 - C10555 * C3152 + C50278 * C3590 -
             C10556 * C3588) *
                C24140 +
            (C50357 * C3161 - C10555 * C3156 + C50278 * C3594 -
             C10556 * C3591) *
                C24135) *
               C50057 * C453 +
           ((C15033 - C15032 + C15035 - C15034) * C24138 +
            (C15037 - C15036 + C15039 - C15038) * C50392 +
            (C31451 - C31450 + C31453 - C31452) * C24139 +
            (C31455 - C31454 + C31457 - C31456) * C50393 +
            (C10555 * C3588 - C50357 * C3590 + C10556 * C20997 -
             C50278 * C20998) *
                C24140 +
            (C10555 * C3591 - C50357 * C3594 + C10556 * C20999 -
             C50278 * C21000) *
                C24135) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C24138 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50392 +
             (C13576 - C13577 + C13578 - C13579) * C24139 +
             (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
             C30413 * C24135) *
                C50057 * C50344 +
            ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C24138 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50392 +
             (C14478 - C14479 + C14480 - C14481) * C24139 +
             (C14482 - C14483 + C14484 - C14485) * C50393 +
             (C15687 - C15686 + C15689 - C15688) * C24140 +
             (C15691 - C15690 + C15693 - C15692) * C24135) *
                C50057 * C50182) *
               C1018 +
           (((C13577 - C13576 + C13579 - C13578) * C24138 +
             (C13581 - C13580 + C13583 - C13582) * C50392 +
             (C13588 - C13589 + C13590 - C13591) * C24139 +
             (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
             C31303 * C24135) *
                C50057 * C50344 +
            ((C14479 - C14478 + C14481 - C14480) * C24138 +
             (C14483 - C14482 + C14485 - C14484) * C50392 +
             (C15686 - C15687 + C15688 - C15689) * C24139 +
             (C15690 - C15691 + C15692 - C15693) * C50393 +
             (C50357 * C3155 - C10555 * C3152 + C50278 * C3590 -
              C10556 * C3588) *
                 C24140 +
             (C50357 * C3161 - C10555 * C3156 + C50278 * C3594 -
              C10556 * C3591) *
                 C24135) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C24138 +
             (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
             C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
                C50057 * C50344 +
            ((C10933 - C10932 + C10935 - C10934) * C24138 +
             (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
             C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
             (C14498 - C14499 + C14500 - C14501) * C24135) *
                C50057 * C50182) *
               C1018 +
           ((C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
             C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
             (C13612 - C13613 + C13614 - C13615) * C24135) *
                C50057 * C50344 +
            (C14502 * C24138 + C14503 * C50392 +
             (C14495 - C14494 + C14497 - C14496) * C24139 +
             (C14499 - C14498 + C14501 - C14500) * C50393 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C24140 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C24135) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50118 * C1018 +
           ((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 +
            (C14831 - C14830 + C14833 - C14832) * C24140 +
            (C14835 - C14834 + C14837 - C14836) * C24135) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50118 * C1018 +
           (C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
            C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
            (C13612 - C13613 + C13614 - C13615) * C24135) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
            C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
            (C10782 - C10783 + C10784 - C10785) * C24135) *
               C50057 * C50118 * C1018 +
           (C11122 * C24138 + C11123 * C50392 +
            (C10779 - C10778 + C10781 - C10780) * C24139 +
            (C10783 - C10782 + C10785 - C10784) * C50393 +
            (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
             C50278 * C3159) *
                C24140 +
            (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
             C50278 * C3163) *
                C24135) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
               C24138 +
           (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
               C50392 +
           (C13576 - C13577 + C13578 - C13579) * C24139 +
           (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
           C30413 * C24135) *
              C50057 * C50118 * C1089 +
          ((C13577 - C13576 + C13579 - C13578) * C24138 +
           (C13581 - C13580 + C13583 - C13582) * C50392 +
           (C13588 - C13589 + C13590 - C13591) * C24139 +
           (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
           C31303 * C24135) *
              C50057 * C50118 * C1090 +
          (C30412 * C24138 + C30413 * C50392 +
           (C14830 - C14831 + C14832 - C14833) * C24139 +
           (C14834 - C14835 + C14836 - C14837) * C50393 +
           (C31294 - C31295 + C31296 - C31297) * C24140 +
           (C31298 - C31299 + C31300 - C31301) * C24135) *
              C50057 * C50118 * C1091 +
          (C31302 * C24138 + C31303 * C50392 +
           (C31295 - C31294 + C31297 - C31296) * C24139 +
           (C31299 - C31298 + C31301 - C31300) * C50393 +
           (C10555 * C3428 - C50357 * C3430 + C10556 * C20725 -
            C50278 * C20726) *
               C24140 +
           (C10555 * C3431 - C50357 * C3434 + C10556 * C20727 -
            C50278 * C20728) *
               C24135) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C24138 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C50392 +
             (C13576 - C13577 + C13578 - C13579) * C24139 +
             (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
             C30413 * C24135) *
                C50057 * C1669 +
            ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C24138 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C50392 +
             (C14478 - C14479 + C14480 - C14481) * C24139 +
             (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
             C31957 * C24135) *
                C50057 * C50182) *
               C50343 +
           (((C13577 - C13576 + C13579 - C13578) * C24138 +
             (C13581 - C13580 + C13583 - C13582) * C50392 +
             (C13588 - C13589 + C13590 - C13591) * C24139 +
             (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
             C31303 * C24135) *
                C50057 * C1669 +
            ((C14479 - C14478 + C14481 - C14480) * C24138 +
             (C14483 - C14482 + C14485 - C14484) * C50392 +
             (C15686 - C15687 + C15688 - C15689) * C24139 +
             (C15690 - C15691 + C15692 - C15693) * C50393 +
             (C31948 - C31949 + C31950 - C31951) * C24140 +
             (C31952 - C31953 + C31954 - C31955) * C24135) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C24138 +
             (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
             C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
                C50057 * C1669 +
            ((C10933 - C10932 + C10935 - C10934) * C24138 +
             (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
             C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
             (C14498 - C14499 + C14500 - C14501) * C24135) *
                C50057 * C50182) *
               C50343 +
           ((C13616 * C24138 + C13617 * C50392 + C13622 * C24139 +
             C13623 * C50393 + (C13608 - C13609 + C13610 - C13611) * C24140 +
             (C13612 - C13613 + C13614 - C13615) * C24135) *
                C50057 * C1669 +
            (C14502 * C24138 + C14503 * C50392 +
             (C14495 - C14494 + C14497 - C14496) * C24139 +
             (C14499 - C14498 + C14501 - C14500) * C50393 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C24140 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C24135) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50390 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50391 +
           ((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C24138 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C50392 +
            (C15032 - C15033 + C15034 - C15035) * C24139 +
            (C15036 - C15037 + C15038 - C15039) * C50393 +
            (C31450 - C31451 + C31452 - C31453) * C24140 +
            (C31454 - C31455 + C31456 - C31457) * C24135) *
               C50057 * C2085) *
              C50343 +
          (((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
            C31303 * C24135) *
               C50057 * C50390 +
           ((C14479 - C14478 + C14481 - C14480) * C24138 +
            (C14483 - C14482 + C14485 - C14484) * C50392 +
            (C15686 - C15687 + C15688 - C15689) * C24139 +
            (C15690 - C15691 + C15692 - C15693) * C50393 +
            (C31948 - C31949 + C31950 - C31951) * C24140 +
            (C31952 - C31953 + C31954 - C31955) * C24135) *
               C50057 * C50391 +
           ((C15033 - C15032 + C15035 - C15034) * C24138 +
            (C15037 - C15036 + C15039 - C15038) * C50392 +
            (C31451 - C31450 + C31453 - C31452) * C24139 +
            (C31455 - C31454 + C31457 - C31456) * C50393 +
            (C10555 * C3588 - C50357 * C3590 + C10556 * C20997 -
             C50278 * C20998) *
                C24140 +
            (C10555 * C3591 - C50357 * C3594 + C10556 * C20999 -
             C50278 * C21000) *
                C24135) *
               C50057 * C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C1669 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50182) *
              C285 +
          (((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
            C31303 * C24135) *
               C50057 * C1669 +
           ((C14479 - C14478 + C14481 - C14480) * C24138 +
            (C14483 - C14482 + C14485 - C14484) * C50392 +
            (C15686 - C15687 + C15688 - C15689) * C24139 +
            (C15690 - C15691 + C15692 - C15693) * C50393 +
            (C31948 - C31949 + C31950 - C31951) * C24140 +
            (C31952 - C31953 + C31954 - C31955) * C24135) *
               C50057 * C50182) *
              C286 +
          ((C30412 * C24138 + C30413 * C50392 +
            (C14830 - C14831 + C14832 - C14833) * C24139 +
            (C14834 - C14835 + C14836 - C14837) * C50393 +
            (C31294 - C31295 + C31296 - C31297) * C24140 +
            (C31298 - C31299 + C31300 - C31301) * C24135) *
               C50057 * C1669 +
           (C31956 * C24138 + C31957 * C50392 +
            (C31949 - C31948 + C31951 - C31950) * C24139 +
            (C31953 - C31952 + C31955 - C31954) * C50393 +
            (C10555 * C4090 - C50357 * C4092 + C10556 * C20391 -
             C50278 * C20392) *
                C24140 +
            (C10555 * C4093 - C50357 * C4096 + C10556 * C20393 -
             C50278 * C20394) *
                C24135) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C1669 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C1669 +
           ((C10933 - C10932 + C10935 - C10934) * C24138 +
            (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
            C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
            (C14498 - C14499 + C14500 - C14501) * C24135) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
            C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
            (C10782 - C10783 + C10784 - C10785) * C24135) *
               C50057 * C1669 +
           (C11285 * C24138 + C11286 * C50392 +
            (C11493 - C11492 + C11495 - C11494) * C24139 +
            (C11497 - C11496 + C11499 - C11498) * C50393 +
            (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
             C50278 * C2641) *
                C24140 +
            (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
             C50278 * C2645) *
                C24135) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
               C24138 +
           (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
               C50392 +
           (C13576 - C13577 + C13578 - C13579) * C24139 +
           (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
           C30413 * C24135) *
              C50057 * C1835 +
          ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
               C24138 +
           (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
               C50392 +
           (C14478 - C14479 + C14480 - C14481) * C24139 +
           (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
           C31957 * C24135) *
              C50057 * C1836 +
          ((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
               C24138 +
           (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
               C50392 +
           (C15032 - C15033 + C15034 - C15035) * C24139 +
           (C15036 - C15037 + C15038 - C15039) * C50393 +
           (C31450 - C31451 + C31452 - C31453) * C24140 +
           (C31454 - C31455 + C31456 - C31457) * C24135) *
              C50057 * C1837 +
          ((C10555 * C1839 - C50357 * C1843 + C10556 * C5452 - C50278 * C5455) *
               C24138 +
           (C10555 * C1844 - C50357 * C1851 + C10556 * C5456 - C50278 * C5461) *
               C50392 +
           (C10555 * C4494 - C50357 * C4498 + C10556 * C6404 - C50278 * C6406) *
               C24139 +
           (C10555 * C4499 - C50357 * C4506 + C10556 * C6407 - C50278 * C6410) *
               C50393 +
           (C10555 * C4495 - C50357 * C4500 + C10556 * C22641 -
            C50278 * C22642) *
               C24140 +
           (C10555 * C4501 - C50357 * C4507 + C10556 * C22643 -
            C50278 * C22644) *
               C24135) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C50390 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50391 +
           ((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C24138 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C50392 +
            (C15032 - C15033 + C15034 - C15035) * C24139 +
            (C15036 - C15037 + C15038 - C15039) * C50393 +
            (C31450 - C31451 + C31452 - C31453) * C24140 +
            (C31454 - C31455 + C31456 - C31457) * C24135) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C50390 +
           ((C10933 - C10932 + C10935 - C10934) * C24138 +
            (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
            C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
            (C14498 - C14499 + C14500 - C14501) * C24135) *
               C50057 * C50391 +
           ((C10949 - C10948 + C10951 - C10950) * C24138 +
            (C10953 - C10952 + C10955 - C10954) * C50392 +
            (C13819 - C13818 + C13821 - C13820) * C24139 +
            (C13823 - C13822 + C13825 - C13824) * C50393 +
            (C10555 * C2635 - C50357 * C2639 + C10556 * C4497 -
             C50278 * C4504) *
                C24140 +
            (C10555 * C2640 - C50357 * C2644 + C10556 * C4505 -
             C50278 * C4509) *
                C24135) *
               C50057 * C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C1669 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C10559 - C10558 + C10561 - C10560) * C24138 +
            (C10563 - C10562 + C10565 - C10564) * C50392 + C13618 * C24139 +
            C13619 * C50393 + C13620 * C24140 + C13621 * C24135) *
               C50057 * C1669 +
           ((C10933 - C10932 + C10935 - C10934) * C24138 +
            (C10937 - C10936 + C10939 - C10938) * C50392 + C14504 * C24139 +
            C14505 * C50393 + (C14494 - C14495 + C14496 - C14497) * C24140 +
            (C14498 - C14499 + C14500 - C14501) * C24135) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C10598 * C24138 + C10599 * C50392 + C14024 * C24139 +
            C14025 * C50393 + (C10778 - C10779 + C10780 - C10781) * C24140 +
            (C10782 - C10783 + C10784 - C10785) * C24135) *
               C50057 * C1669 +
           (C11285 * C24138 + C11286 * C50392 +
            (C11493 - C11492 + C11495 - C11494) * C24139 +
            (C11497 - C11496 + C11499 - C11498) * C50393 +
            (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
             C50278 * C2641) *
                C24140 +
            (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
             C50278 * C2645) *
                C24135) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C24138 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C50392 +
            (C13576 - C13577 + C13578 - C13579) * C24139 +
            (C13580 - C13581 + C13582 - C13583) * C50393 + C30412 * C24140 +
            C30413 * C24135) *
               C50057 * C1669 +
           ((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C24138 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C50392 +
            (C14478 - C14479 + C14480 - C14481) * C24139 +
            (C14482 - C14483 + C14484 - C14485) * C50393 + C31956 * C24140 +
            C31957 * C24135) *
               C50057 * C50182) *
              C285 +
          (((C13577 - C13576 + C13579 - C13578) * C24138 +
            (C13581 - C13580 + C13583 - C13582) * C50392 +
            (C13588 - C13589 + C13590 - C13591) * C24139 +
            (C13592 - C13593 + C13594 - C13595) * C50393 + C31302 * C24140 +
            C31303 * C24135) *
               C50057 * C1669 +
           ((C14479 - C14478 + C14481 - C14480) * C24138 +
            (C14483 - C14482 + C14485 - C14484) * C50392 +
            (C15686 - C15687 + C15688 - C15689) * C24139 +
            (C15690 - C15691 + C15692 - C15693) * C50393 +
            (C31948 - C31949 + C31950 - C31951) * C24140 +
            (C31952 - C31953 + C31954 - C31955) * C24135) *
               C50057 * C50182) *
              C286 +
          ((C30412 * C24138 + C30413 * C50392 +
            (C14830 - C14831 + C14832 - C14833) * C24139 +
            (C14834 - C14835 + C14836 - C14837) * C50393 +
            (C31294 - C31295 + C31296 - C31297) * C24140 +
            (C31298 - C31299 + C31300 - C31301) * C24135) *
               C50057 * C1669 +
           (C31956 * C24138 + C31957 * C50392 +
            (C31949 - C31948 + C31951 - C31950) * C24139 +
            (C31953 - C31952 + C31955 - C31954) * C50393 +
            (C10555 * C4090 - C50357 * C4092 + C10556 * C20391 -
             C50278 * C20392) *
                C24140 +
            (C10555 * C4093 - C50357 * C4096 + C10556 * C20393 -
             C50278 * C20394) *
                C24135) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C50343 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C50343 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50154) *
              C50387 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50118 * C50343 +
           (C627 * C19591 + C628 * C19586 + C2477 * C19592 + C2478 * C19587 +
            (C2480 - C2479) * C19593 + (C2482 - C2481) * C19588 +
            (C117 * C2438 - C50214 * C2443) * C19594 +
            (C117 * C2444 - C50214 * C2447) * C19589) *
               C50057 * C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C50343 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C50343 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50154) *
              C50387 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50118 * C50343 +
           (C17421 * C16957 +
            (C629 * C16960 + C630 * C16955 + (C352 - C351) * C16961 +
             (C354 - C353) * C50250) *
                C16958 +
            ((C632 - C631) * C16960 + (C634 - C633) * C16955 +
             (C117 * C299 - C50214 * C318) * C16961 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C16959) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50118 * C50343 +
           ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50118 * C50343 +
           ((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
            (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
               C50057 * C50118 * C50154) *
              C50387 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
            (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
               C50057 * C50118 * C50343 +
           ((C5636 - C5635 + C5638 - C5637 + C5640 - C5639) * C16960 +
            (C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C16955 +
            (C5097 * C296 - C5094 * C312 + C5098 * C1557 - C5095 * C1563 +
             C5099 * C2636 - C5096 * C2641) *
                C16961 +
            (C5097 * C313 - C5094 * C326 + C5098 * C1564 - C5095 * C1569 +
             C5099 * C2642 - C5096 * C2645) *
                C50250) *
               C50057 * C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C19591 +
             (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
             (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
             C19694 * C19594 + C19695 * C19589) *
                C50057 * C50344 +
            ((C117 * C455 - C50214 * C465) * C19591 +
             (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
             (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
             (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
                C50057 * C50182) *
               C50343 +
           (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
             (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
             C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
             (C3442 - C3441) * C19589) *
                C50057 * C50344 +
            ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
             (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
             (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
             (C50214 * C4092 - C117 * C4090) * C19594 +
             (C50214 * C4096 - C117 * C4093) * C19589) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
             C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
             C2486 * C19589) *
                C50057 * C50344 +
            ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
             C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
             (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
                C50057 * C50182) *
               C50343 +
           ((C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
             C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
             (C2475 - C2476) * C19589) *
                C50057 * C50344 +
            (C3173 * C19591 + C3174 * C19586 + C3175 * C19592 + C3176 * C19587 +
             (C3182 - C3181) * C19593 + (C3184 - C3183) * C19588 +
             (C117 * C4091 - C50214 * C4094) * C19594 +
             (C117 * C4095 - C50214 * C4097) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C16960 +
              (C50214 * C140 - C117 * C127) * C16955 +
              (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                 C16957 +
             ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
              C2458 * C50250) *
                 C16958 +
             C16975 * C16959) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C16960 +
              (C117 * C466 - C50214 * C485) * C16955 +
              (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                 C16957 +
             ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
              C3174 * C50250) *
                 C16958 +
             C17574 * C16959) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
              (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                 C16957 +
             (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
              C2468 * C50250) *
                 C16958 +
             C17421 * C16959) *
                C50344 +
            (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
              (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                 C16957 +
             (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
              C3180 * C50250) *
                 C16958 +
             (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
              (C2957 - C2958) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
              C2466 * C50250) *
                 C16957 +
             ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
              C628 * C50250) *
                 C16958 +
             C16976 * C16959) *
                C50344 +
            (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
              C3178 * C50250) *
                 C16957 +
             ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
              C8703 * C50250) *
                 C16958 +
             ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
              (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                 C16959) *
                C50182) *
               C50343 +
           (((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
              C2460 * C50250) *
                 C16957 +
             (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
              C2808 * C50250) *
                 C16958 +
             (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
              (C353 - C354) * C50250) *
                 C16959) *
                C50344 +
            ((C3173 * C16960 + C3174 * C16955 + C3175 * C16961 +
              C3176 * C50250) *
                 C16957 +
             (C8501 * C16960 + C8502 * C16955 + (C2956 - C2955) * C16961 +
              (C2958 - C2957) * C50250) *
                 C16958 +
             ((C918 - C917) * C16960 + (C920 - C919) * C16955 +
              (C117 * C1558 - C50214 * C1565) * C16961 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C16960 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C16955 +
             (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
             (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
                C50057 * C50344 +
            ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C16960 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C16955 +
             (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
             (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
             (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
             (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
             (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
                C50057 * C50344 +
            ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
             (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
             (C5094 * C1559 - C5097 * C1555 + C5095 * C2637 - C5098 * C2634 +
              C5096 * C4500 - C5099 * C4495) *
                 C16961 +
             (C5094 * C1567 - C5097 * C1560 + C5095 * C2643 - C5098 * C2638 +
              C5096 * C4507 - C5099 * C4501) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
             (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
                C50057 * C50344 +
            ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
             (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
                C50057 * C50344 +
            ((C6004 - C6003 + C6006 - C6005 + C6008 - C6007) * C16960 +
             (C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C16955 +
             (C5097 * C1556 - C5094 * C1561 + C5098 * C2635 - C5095 * C2639 +
              C5099 * C4497 - C5096 * C4504) *
                 C16961 +
             (C5097 * C1562 - C5094 * C1568 + C5098 * C2640 - C5095 * C2644 +
              C5099 * C4505 - C5096 * C4509) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50214 * C126 - C117 * C119) * C16960 +
                (C50214 * C140 - C117 * C127) * C16955 +
                (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                   C16957 +
               ((C148 - C149) * C16960 + (C150 - C151) * C16955 +
                C2457 * C16961 + C2458 * C50250) *
                   C16958 +
               C16975 * C16959) *
                  C50118 * C50102 * C113 +
              (((C149 - C148) * C16960 + (C151 - C150) * C16955 +
                C2465 * C16961 + C2466 * C50250) *
                   C16957 +
               ((C153 - C152) * C16960 + (C155 - C154) * C16955 +
                C627 * C16961 + C628 * C50250) *
                   C16958 +
               C16976 * C16959) *
                  C50118 * C50102 * C114 +
              (C16975 * C16957 +
               (C170 * C16960 + C171 * C16955 + C8348 * C16961 +
                C8349 * C50250) *
                   C16958 +
               ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
                (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                   C16959) *
                  C50118 * C50102 * C115 +
              (C16976 * C16957 +
               (C174 * C16960 + C175 * C16955 + (C632 - C631) * C16961 +
                (C634 - C633) * C50250) *
                   C16958 +
               ((C165 - C164) * C16960 + (C167 - C166) * C16955 +
                (C117 * C622 - C50214 * C623) * C16961 +
                (C117 * C624 - C50214 * C625) * C50250) *
                   C16959) *
                  C50118 * C50102 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C16960 +
                 (C50214 * C140 - C117 * C127) * C16955 +
                 (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                    C16957 +
                ((C148 - C149) * C16960 + (C150 - C151) * C16955 +
                 C2457 * C16961 + C2458 * C50250) *
                    C16958 +
                C16975 * C16959) *
                   C50118 * C285 +
               (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
                 (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                    C16957 +
                (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
                 C2468 * C50250) *
                    C16958 +
                (C627 * C16960 + C628 * C16955 + C2477 * C16961 +
                 C2478 * C50250) *
                    C16959) *
                   C50118 * C286 +
               ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
                 (C2464 - C2463) * C50250) *
                    C16957 +
                (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
                 C2488 * C50250) *
                    C16958 +
                (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
                 (C2481 - C2482) * C50250) *
                    C16959) *
                   C50118 * C287) *
                  C288 +
              ((((C149 - C148) * C16960 + (C151 - C150) * C16955 +
                 C2465 * C16961 + C2466 * C50250) *
                    C16957 +
                ((C153 - C152) * C16960 + (C155 - C154) * C16955 +
                 C627 * C16961 + C628 * C50250) *
                    C16958 +
                C16976 * C16959) *
                   C50118 * C285 +
               ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
                 C2460 * C50250) *
                    C16957 +
                (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
                 C2808 * C50250) *
                    C16958 +
                (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
                 (C353 - C354) * C50250) *
                    C16959) *
                   C50118 * C286 +
               ((C2467 * C16960 + C2468 * C16955 + C2485 * C16961 +
                 C2486 * C50250) *
                    C16957 +
                (C2477 * C16960 + C2478 * C16955 + (C2480 - C2479) * C16961 +
                 (C2482 - C2481) * C50250) *
                    C16958 +
                ((C352 - C351) * C16960 + (C354 - C353) * C16955 +
                 (C117 * C1097 - C50214 * C1104) * C16961 +
                 (C117 * C1105 - C50214 * C1109) * C50250) *
                    C16959) *
                   C50118 * C287) *
                  C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            (C745 * C16960 + C746 * C16955 + C8501 * C16961 + C8502 * C50250) *
                C16959) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C452 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C453 +
           (((C509 - C508) * C16960 + (C511 - C510) * C16955 +
             (C2652 - C2651) * C16961 + (C2654 - C2653) * C50250) *
                C16957 +
            ((C513 - C512) * C16960 + (C515 - C514) * C16955 +
             (C8195 - C8194) * C16961 + (C8197 - C8196) * C50250) *
                C16958 +
            ((C517 - C516) * C16960 + (C519 - C518) * C16955 +
             (C117 * C1211 - C50214 * C1218) * C16961 +
             (C117 * C1219 - C50214 * C1223) * C50250) *
                C16959) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           (C2462 - C2461) * C19594 + (C2464 - C2463) * C19589) *
              C50057 * C50118 * C50102 * C113 +
          ((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
           C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
           C2486 * C19589) *
              C50057 * C50118 * C50102 * C114 +
          (C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
           C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
           (C2481 - C2482) * C19589) *
              C50057 * C50118 * C50102 * C115 +
          (C172 * C19591 + C173 * C19586 + C629 * C19592 + C630 * C19587 +
           (C352 - C351) * C19593 + (C354 - C353) * C19588 +
           (C117 * C1097 - C50214 * C1104) * C19594 +
           (C117 * C1105 - C50214 * C1109) * C19589) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C285 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C286 +
           (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 +
            (C50214 * C3430 - C117 * C3428) * C19594 +
            (C50214 * C3434 - C117 * C3431) * C19589) *
               C50057 * C50118 * C287) *
              C288 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C285 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C286 +
           (C2467 * C19591 + C2468 * C19586 + C2485 * C19592 + C2486 * C19587 +
            (C2474 - C2473) * C19593 + (C2476 - C2475) * C19588 +
            (C117 * C3429 - C50214 * C3432) * C19594 +
            (C117 * C3433 - C50214 * C3435) * C19589) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C452 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
               C50057 * C453 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 +
            (C50214 * C3590 - C117 * C3588) * C19594 +
            (C50214 * C3594 - C117 * C3591) * C19589) *
               C50057 * C454) *
              C50102 * C288 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C452 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C453 +
           ((C509 - C508) * C19591 + (C511 - C510) * C19586 +
            (C2652 - C2651) * C19592 + (C2654 - C2653) * C19587 +
            (C2656 - C2655) * C19593 + (C2658 - C2657) * C19588 +
            (C117 * C3589 - C50214 * C3592) * C19594 +
            (C117 * C3593 - C50214 * C3595) * C19589) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
            C5096 * C473 - C5099 * C459) *
               C16960 +
           (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
            C5096 * C489 - C5099 * C474) *
               C16955 +
           (C5094 * C300 - C5097 * C290 + C5095 * C893 - C5098 * C888 +
            C5096 * C1212 - C5099 * C1208) *
               C16961 +
           (C5094 * C320 - C5097 * C301 + C5095 * C903 - C5098 * C894 +
            C5096 * C1220 - C5099 * C1213) *
               C50250) *
              C50057 * C50118 * C50102 * C113 +
          ((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
           (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
           (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
           (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
              C50057 * C50118 * C50102 * C114 +
          ((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
           (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
           (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
           (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
              C50057 * C50118 * C50102 * C115 +
          ((C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C16960 +
           (C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C16955 +
           (C5097 * C293 - C5094 * C306 + C5098 * C891 - C5095 * C899 +
            C5099 * C1211 - C5096 * C1218) *
               C16961 +
           (C5097 * C307 - C5094 * C323 + C5098 * C900 - C5095 * C906 +
            C5099 * C1219 - C5096 * C1223) *
               C50250) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50118 * C285 +
           ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50118 * C286 +
           ((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
            (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
            (C5094 * C1098 - C5097 * C1094 + C5095 * C3155 - C5098 * C3152 +
             C5096 * C3590 - C5099 * C3588) *
                C16961 +
            (C5094 * C1106 - C5097 * C1099 + C5095 * C3161 - C5098 * C3156 +
             C5096 * C3594 - C5099 * C3591) *
                C50250) *
               C50057 * C50118 * C287) *
              C288 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50118 * C285 +
           ((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
            (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
               C50057 * C50118 * C286 +
           ((C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C16960 +
            (C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C16955 +
            (C5097 * C1095 - C5094 * C1100 + C5098 * C3153 - C5095 * C3157 +
             C5099 * C3589 - C5096 * C3592) *
                C16961 +
            (C5097 * C1101 - C5094 * C1107 + C5098 * C3158 - C5095 * C3162 +
             C5099 * C3593 - C5096 * C3595) *
                C50250) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C452 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C5097 * C888 - C5094 * C893 + C5098 * C1208 - C5095 * C1212 +
             C5099 * C4494 - C5096 * C4498) *
                C16961 +
            (C5097 * C894 - C5094 * C903 + C5098 * C1213 - C5095 * C1220 +
             C5099 * C4499 - C5096 * C4506) *
                C50250) *
               C50057 * C453 +
           ((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
             C5096 * C5455 - C5099 * C5452) *
                C16960 +
            (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
             C5096 * C5461 - C5099 * C5456) *
                C16955 +
            (C5094 * C1212 - C5097 * C1208 + C5095 * C4498 - C5098 * C4494 +
             C5096 * C6406 - C5099 * C6404) *
                C16961 +
            (C5094 * C1220 - C5097 * C1213 + C5095 * C4506 - C5098 * C4499 +
             C5096 * C6410 - C5099 * C6407) *
                C50250) *
               C50057 * C454) *
              C50102 * C288 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C452 +
           ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
            (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
            (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
               C50057 * C453 +
           ((C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C16960 +
            (C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C16955 +
            (C5097 * C1209 - C5094 * C1214 + C5098 * C4496 - C5095 * C4502 +
             C5099 * C6405 - C5096 * C6408) *
                C16961 +
            (C5097 * C1215 - C5094 * C1221 + C5098 * C4503 - C5095 * C4508 +
             C5099 * C6409 - C5096 * C6411) *
                C50250) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50344 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50344 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50182) *
              C50102 * C50387 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50344 +
           (C745 * C19591 + C746 * C19586 + C8501 * C19592 + C8502 * C19587 +
            (C2956 - C2955) * C19593 + (C2958 - C2957) * C19588 +
            (C117 * C3154 - C50214 * C3159) * C19594 +
            (C117 * C3160 - C50214 * C3163) * C19589) *
               C50057 * C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50344 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50182) *
              C50102 * C50387 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50344 +
           (C17574 * C16957 +
            (C747 * C16960 + C748 * C16955 + (C918 - C917) * C16961 +
             (C920 - C919) * C50250) *
                C16958 +
            ((C750 - C749) * C16960 + (C752 - C751) * C16955 +
             (C117 * C892 - C50214 * C901) * C16961 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C16959) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50344 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C5097 * C888 - C5094 * C893 + C5098 * C1208 - C5095 * C1212 +
             C5099 * C4494 - C5096 * C4498) *
                C16961 +
            (C5097 * C894 - C5094 * C903 + C5098 * C1213 - C5095 * C1220 +
             C5099 * C4499 - C5096 * C4506) *
                C50250) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50344 +
           ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
            (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
            (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
               C50057 * C50182) *
              C50102 * C50387 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
            (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
               C50057 * C50344 +
           ((C5794 - C5793 + C5796 - C5795 + C5798 - C5797) * C16960 +
            (C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C16955 +
            (C5097 * C890 - C5094 * C897 + C5098 * C1210 - C5095 * C1216 +
             C5099 * C5998 - C5096 * C5999) *
                C16961 +
            (C5097 * C898 - C5094 * C905 + C5098 * C1217 - C5095 * C1222 +
             C5099 * C6000 - C5096 * C6001) *
                C50250) *
               C50057 * C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C285 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            (C627 * C16960 + C628 * C16955 + C2477 * C16961 + C2478 * C50250) *
                C16959) *
               C50118 * C286 +
           ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C285 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C286 +
           ((C2467 * C16960 + C2468 * C16955 + C2485 * C16961 +
             C2486 * C50250) *
                C16957 +
            (C2477 * C16960 + C2478 * C16955 + (C2480 - C2479) * C16961 +
             (C2482 - C2481) * C50250) *
                C16958 +
            ((C352 - C351) * C16960 + (C354 - C353) * C16955 +
             (C117 * C1097 - C50214 * C1104) * C16961 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C16959) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
            C2466 * C50250) *
               C16957 +
           ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
            C628 * C50250) *
               C16958 +
           C16976 * C16959) *
              C50118 * C50102 * C114 +
          (C16975 * C16957 +
           (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
               C16958 +
           ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
            (C631 - C632) * C16961 + (C633 - C634) * C50250) *
               C16959) *
              C50118 * C50102 * C115 +
          (C16976 * C16957 +
           (C174 * C16960 + C175 * C16955 + (C632 - C631) * C16961 +
            (C634 - C633) * C50250) *
               C16958 +
           ((C165 - C164) * C16960 + (C167 - C166) * C16955 +
            (C117 * C622 - C50214 * C623) * C16961 +
            (C117 * C624 - C50214 * C625) * C50250) *
               C16959) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           (C2462 - C2461) * C19594 + (C2464 - C2463) * C19589) *
              C50057 * C50118 * C50102 * C113 +
          ((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
           C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
           C2486 * C19589) *
              C50057 * C50118 * C50102 * C114 +
          (C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
           C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
           (C2481 - C2482) * C19589) *
              C50057 * C50118 * C50102 * C115 +
          (C172 * C19591 + C173 * C19586 + C629 * C19592 + C630 * C19587 +
           (C352 - C351) * C19593 + (C354 - C353) * C19588 +
           (C117 * C1097 - C50214 * C1104) * C19594 +
           (C117 * C1105 - C50214 * C1109) * C19589) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C285 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C286 +
           (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 +
            (C50214 * C3430 - C117 * C3428) * C19594 +
            (C50214 * C3434 - C117 * C3431) * C19589) *
               C50057 * C50118 * C287) *
              C288 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C285 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C286 +
           (C2467 * C19591 + C2468 * C19586 + C2485 * C19592 + C2486 * C19587 +
            (C2474 - C2473) * C19593 + (C2476 - C2475) * C19588 +
            (C117 * C3429 - C50214 * C3432) * C19594 +
            (C117 * C3433 - C50214 * C3435) * C19589) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
            C5096 * C473 - C5099 * C459) *
               C16960 +
           (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
            C5096 * C489 - C5099 * C474) *
               C16955 +
           (C5094 * C300 - C5097 * C290 + C5095 * C893 - C5098 * C888 +
            C5096 * C1212 - C5099 * C1208) *
               C16961 +
           (C5094 * C320 - C5097 * C301 + C5095 * C903 - C5098 * C894 +
            C5096 * C1220 - C5099 * C1213) *
               C50250) *
              C50057 * C50118 * C50102 * C113 +
          ((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
           (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
           (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
           (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
              C50057 * C50118 * C50102 * C114 +
          ((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
           (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
           (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
           (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
              C50057 * C50118 * C50102 * C115 +
          ((C5126 - C5125 + C5128 - C5127 + C5130 - C5129) * C16960 +
           (C5132 - C5131 + C5134 - C5133 + C5136 - C5135) * C16955 +
           (C5097 * C293 - C5094 * C306 + C5098 * C891 - C5095 * C899 +
            C5099 * C1211 - C5096 * C1218) *
               C16961 +
           (C5097 * C307 - C5094 * C323 + C5098 * C900 - C5095 * C906 +
            C5099 * C1219 - C5096 * C1223) *
               C50250) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50118 * C285 +
           ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50118 * C286 +
           ((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
            (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
            (C5094 * C1098 - C5097 * C1094 + C5095 * C3155 - C5098 * C3152 +
             C5096 * C3590 - C5099 * C3588) *
                C16961 +
            (C5094 * C1106 - C5097 * C1099 + C5095 * C3161 - C5098 * C3156 +
             C5096 * C3594 - C5099 * C3591) *
                C50250) *
               C50057 * C50118 * C287) *
              C288 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50118 * C285 +
           ((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
            (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
               C50057 * C50118 * C286 +
           ((C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C16960 +
            (C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C16955 +
            (C5097 * C1095 - C5094 * C1100 + C5098 * C3153 - C5095 * C3157 +
             C5099 * C3589 - C5096 * C3592) *
                C16961 +
            (C5097 * C1101 - C5094 * C1107 + C5098 * C3158 - C5095 * C3162 +
             C5099 * C3593 - C5096 * C3595) *
                C50250) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C50388 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C50118 * C50389 +
           (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C50388 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50389 +
           (C2467 * C19591 + C2468 * C19586 + C2485 * C19592 + C2486 * C19587 +
            (C2474 - C2473) * C19593 + (C2476 - C2475) * C19588 +
            (C117 * C3429 - C50214 * C3432) * C19594 +
            (C117 * C3433 - C50214 * C3435) * C19589) *
               C50057 * C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C50388 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50389 +
           ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C50388 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50389 +
           ((C2467 * C16960 + C2468 * C16955 + C2485 * C16961 +
             C2486 * C50250) *
                C16957 +
            (C2477 * C16960 + C2478 * C16955 + (C2480 - C2479) * C16961 +
             (C2482 - C2481) * C50250) *
                C16958 +
            ((C352 - C351) * C16960 + (C354 - C353) * C16955 +
             (C117 * C1097 - C50214 * C1104) * C16961 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C16959) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50118 * C50388 +
           ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50118 * C50389 +
           ((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
            (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
            (C22484 - C22485 + C22486 - C22487 + C22488 - C22489) * C16961 +
            (C22490 - C22491 + C22492 - C22493 + C22494 - C22495) * C50250) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50118 * C50388 +
           ((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
            (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
               C50057 * C50118 * C50389 +
           ((C5296 - C5295 + C5298 - C5297 + C5300 - C5299) * C16960 +
            (C5302 - C5301 + C5304 - C5303 + C5306 - C5305) * C16955 +
            (C5097 * C1095 - C5094 * C1100 + C5098 * C3153 - C5095 * C3157 +
             C5099 * C3589 - C5096 * C3592) *
                C16961 +
            (C5097 * C1101 - C5094 * C1107 + C5098 * C3158 - C5095 * C3162 +
             C5099 * C3593 - C5096 * C3595) *
                C50250) *
               C50057 * C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50344 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C50388 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C50344 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50182) *
              C50389 +
          ((C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C50344 +
           (C4099 * C19591 + C4100 * C19586 + C20730 * C19592 +
            C20731 * C19587 + (C20733 - C20732) * C19593 +
            (C20735 - C20734) * C19588 +
            (C117 * C20725 - C50214 * C20726) * C19594 +
            (C117 * C20727 - C50214 * C20728) * C19589) *
               C50057 * C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50388 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50344 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50182) *
              C50389 +
          (((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50344 +
           ((C4099 * C16960 + C4100 * C16955 + (C4102 - C4101) * C16961 +
             (C4104 - C4103) * C50250) *
                C16957 +
            (C3175 * C16960 + C3176 * C16955 + (C3182 - C3181) * C16961 +
             (C3184 - C3183) * C50250) *
                C16958 +
            ((C2956 - C2955) * C16960 + (C2958 - C2957) * C16955 +
             (C117 * C3154 - C50214 * C3159) * C16961 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C16959) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50344 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50182) *
              C50388 +
          (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50344 +
           ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
            (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
            (C23144 - C23145 + C23146 - C23147 + C23148 - C23149) * C16961 +
            (C23150 - C23151 + C23152 - C23153 + C23154 - C23155) * C50250) *
               C50057 * C50182) *
              C50389 +
          (((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
            (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
            (C22484 - C22485 + C22486 - C22487 + C22488 - C22489) * C16961 +
            (C22490 - C22491 + C22492 - C22493 + C22494 - C22495) * C50250) *
               C50057 * C50344 +
           ((C23145 - C23144 + C23147 - C23146 + C23149 - C23148) * C16960 +
            (C23151 - C23150 + C23153 - C23152 + C23155 - C23154) * C16955 +
            (C5097 * C3152 - C5094 * C3155 + C5098 * C3588 - C5095 * C3590 +
             C5099 * C20997 - C5096 * C20998) *
                C16961 +
            (C5097 * C3156 - C5094 * C3161 + C5098 * C3591 - C5095 * C3594 +
             C5099 * C20999 - C5096 * C21000) *
                C50250) *
               C50057 * C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C16960 +
                 (C50214 * C140 - C117 * C127) * C16955 +
                 (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                    C16957 +
                ((C148 - C149) * C16960 + (C150 - C151) * C16955 +
                 C2457 * C16961 + C2458 * C50250) *
                    C16958 +
                C16975 * C16959) *
                   C50118 * C1018 +
               (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
                 (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                    C16957 +
                (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
                 C2468 * C50250) *
                    C16958 +
                C17421 * C16959) *
                   C50118 * C50154) *
                  C1020 +
              ((((C149 - C148) * C16960 + (C151 - C150) * C16955 +
                 C2465 * C16961 + C2466 * C50250) *
                    C16957 +
                ((C153 - C152) * C16960 + (C155 - C154) * C16955 +
                 C627 * C16961 + C628 * C50250) *
                    C16958 +
                C16976 * C16959) *
                   C50118 * C1018 +
               ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
                 C2460 * C50250) *
                    C16957 +
                (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
                 C2808 * C50250) *
                    C16958 +
                (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
                 (C353 - C354) * C50250) *
                    C16959) *
                   C50118 * C50154) *
                  C1021 +
              ((C16975 * C16957 +
                (C170 * C16960 + C171 * C16955 + C8348 * C16961 +
                 C8349 * C50250) *
                    C16958 +
                ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
                 (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                    C16959) *
                   C50118 * C1018 +
               (C17421 * C16957 +
                (C629 * C16960 + C630 * C16955 + (C352 - C351) * C16961 +
                 (C354 - C353) * C50250) *
                    C16958 +
                ((C632 - C631) * C16960 + (C634 - C633) * C16955 +
                 (C117 * C299 - C50214 * C318) * C16961 +
                 (C117 * C319 - C50214 * C329) * C50250) *
                    C16959) *
                   C50118 * C50154) *
                  C1022) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50214 * C126 - C117 * C119) * C16960 +
                (C50214 * C140 - C117 * C127) * C16955 +
                (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                   C16957 +
               ((C148 - C149) * C16960 + (C150 - C151) * C16955 +
                C2457 * C16961 + C2458 * C50250) *
                   C16958 +
               C16975 * C16959) *
                  C50118 * C1089 +
              (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
                (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                   C16957 +
               (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
                C2468 * C50250) *
                   C16958 +
               C17421 * C16959) *
                  C50118 * C1090 +
              ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
                (C2464 - C2463) * C50250) *
                   C16957 +
               (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
                C2488 * C50250) *
                   C16958 +
               (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
                (C2481 - C2482) * C50250) *
                   C16959) *
                  C50118 * C1091 +
              ((C3437 * C16960 + C3438 * C16955 + (C3440 - C3439) * C16961 +
                (C3442 - C3441) * C50250) *
                   C16957 +
               (C2485 * C16960 + C2486 * C16955 + (C2474 - C2473) * C16961 +
                (C2476 - C2475) * C50250) *
                   C16958 +
               ((C2480 - C2479) * C16960 + (C2482 - C2481) * C16955 +
                (C117 * C2438 - C50214 * C2443) * C16961 +
                (C117 * C2444 - C50214 * C2447) * C50250) *
                   C16959) *
                  C50118 * C1092) *
             C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C454) *
              C1018 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C452 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C453 +
           (((C3598 - C3597) * C16960 + (C3600 - C3599) * C16955 +
             (C3602 - C3601) * C16961 + (C3604 - C3603) * C50250) *
                C16957 +
            ((C2652 - C2651) * C16960 + (C2654 - C2653) * C16955 +
             (C2656 - C2655) * C16961 + (C2658 - C2657) * C50250) *
                C16958 +
            ((C8195 - C8194) * C16960 + (C8197 - C8196) * C16955 +
             (C117 * C2636 - C50214 * C2641) * C16961 +
             (C117 * C2642 - C50214 * C2645) * C50250) *
                C16959) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C1018 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C1018 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50118 * C1018 +
           (C627 * C19591 + C628 * C19586 + C2477 * C19592 + C2478 * C19587 +
            (C2480 - C2479) * C19593 + (C2482 - C2481) * C19588 +
            (C117 * C2438 - C50214 * C2443) * C19594 +
            (C117 * C2444 - C50214 * C2447) * C19589) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           C19694 * C19594 + C19695 * C19589) *
              C50057 * C50118 * C1089 +
          ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
           (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
           C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
           C20289 * C19589) *
              C50057 * C50118 * C1090 +
          (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 + C19695 * C19587 +
           (C3439 - C3440) * C19593 + (C3441 - C3442) * C19588 +
           (C20290 - C20291) * C19594 + (C20292 - C20293) * C19589) *
              C50057 * C50118 * C1091 +
          (C3437 * C19591 + C3438 * C19586 + C20288 * C19592 + C20289 * C19587 +
           (C20291 - C20290) * C19593 + (C20293 - C20292) * C19588 +
           (C117 * C20283 - C50214 * C20284) * C19594 +
           (C117 * C20285 - C50214 * C20286) * C19589) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C452 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
               C50057 * C453 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
            (C20398 - C20399) * C19589) *
               C50057 * C454) *
              C1018 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C452 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C50214 * C4092 - C117 * C4090) * C19594 +
            (C50214 * C4096 - C117 * C4093) * C19589) *
               C50057 * C453 +
           ((C3598 - C3597) * C19591 + (C3600 - C3599) * C19586 +
            (C3602 - C3601) * C19592 + (C3604 - C3603) * C19587 +
            (C20397 - C20396) * C19593 + (C20399 - C20398) * C19588 +
            (C117 * C20391 - C50214 * C20392) * C19594 +
            (C117 * C20393 - C50214 * C20394) * C19589) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50118 * C1018 +
           ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50118 * C1018 +
           ((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
            (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
               C50057 * C50118 * C50154) *
              C1021 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
            (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
               C50057 * C50118 * C1018 +
           ((C5636 - C5635 + C5638 - C5637 + C5640 - C5639) * C16960 +
            (C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C16955 +
            (C5097 * C296 - C5094 * C312 + C5098 * C1557 - C5095 * C1563 +
             C5099 * C2636 - C5096 * C2641) *
                C16961 +
            (C5097 * C313 - C5094 * C326 + C5098 * C1564 - C5095 * C1569 +
             C5099 * C2642 - C5096 * C2645) *
                C50250) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
            C5096 * C473 - C5099 * C459) *
               C16960 +
           (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
            C5096 * C489 - C5099 * C474) *
               C16955 +
           (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
           (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
              C50057 * C50118 * C1089 +
          ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
           (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
           (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
           (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
              C50057 * C50118 * C1090 +
          ((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
           (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
           (C22484 - C22485 + C22486 - C22487 + C22488 - C22489) * C16961 +
           (C22490 - C22491 + C22492 - C22493 + C22494 - C22495) * C50250) *
              C50057 * C50118 * C1091 +
          ((C22485 - C22484 + C22487 - C22486 + C22489 - C22488) * C16960 +
           (C22491 - C22490 + C22493 - C22492 + C22495 - C22494) * C16955 +
           (C5097 * C2436 - C5094 * C2439 + C5098 * C4090 - C5095 * C4092 +
            C5099 * C20391 - C5096 * C20392) *
               C16961 +
           (C5097 * C2440 - C5094 * C2445 + C5098 * C4093 - C5095 * C4096 +
            C5099 * C20393 - C5096 * C20394) *
               C50250) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C452 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C453 +
           ((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
             C5096 * C5455 - C5099 * C5452) *
                C16960 +
            (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
             C5096 * C5461 - C5099 * C5456) *
                C16955 +
            (C22646 - C22647 + C22648 - C22649 + C22650 - C22651) * C16961 +
            (C22652 - C22653 + C22654 - C22655 + C22656 - C22657) * C50250) *
               C50057 * C454) *
              C1018 +
          (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C452 +
           ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
            (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
            (C5094 * C1559 - C5097 * C1555 + C5095 * C2637 - C5098 * C2634 +
             C5096 * C4500 - C5099 * C4495) *
                C16961 +
            (C5094 * C1567 - C5097 * C1560 + C5095 * C2643 - C5098 * C2638 +
             C5096 * C4507 - C5099 * C4501) *
                C50250) *
               C50057 * C453 +
           ((C22647 - C22646 + C22649 - C22648 + C22651 - C22650) * C16960 +
            (C22653 - C22652 + C22655 - C22654 + C22657 - C22656) * C16955 +
            (C5097 * C2634 - C5094 * C2637 + C5098 * C4495 - C5095 * C4500 +
             C5099 * C22641 - C5096 * C22642) *
                C16961 +
            (C5097 * C2638 - C5094 * C2643 + C5098 * C4501 - C5095 * C4507 +
             C5099 * C22643 - C5096 * C22644) *
                C50250) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C19591 +
             (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
             (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
             C19694 * C19594 + C19695 * C19589) *
                C50057 * C50344 +
            ((C117 * C455 - C50214 * C465) * C19591 +
             (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
             (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
             (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
                C50057 * C50182) *
               C1018 +
           (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
             (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
             C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
             C20289 * C19589) *
                C50057 * C50344 +
            ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
             (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
             (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
             (C50214 * C4092 - C117 * C4090) * C19594 +
             (C50214 * C4096 - C117 * C4093) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
             C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
             C2486 * C19589) *
                C50057 * C50344 +
            ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
             C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
             (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
                C50057 * C50182) *
               C1018 +
           ((C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
             C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
             (C2475 - C2476) * C19589) *
                C50057 * C50344 +
            (C3173 * C19591 + C3174 * C19586 + C3175 * C19592 + C3176 * C19587 +
             (C3182 - C3181) * C19593 + (C3184 - C3183) * C19588 +
             (C117 * C4091 - C50214 * C4094) * C19594 +
             (C117 * C4095 - C50214 * C4097) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C16960 +
              (C50214 * C140 - C117 * C127) * C16955 +
              (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                 C16957 +
             ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
              C2458 * C50250) *
                 C16958 +
             C16975 * C16959) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C16960 +
              (C117 * C466 - C50214 * C485) * C16955 +
              (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                 C16957 +
             ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
              C3174 * C50250) *
                 C16958 +
             C17574 * C16959) *
                C50182) *
               C1018 +
           ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
              (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                 C16957 +
             (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
              C2468 * C50250) *
                 C16958 +
             C17421 * C16959) *
                C50344 +
            (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
              (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                 C16957 +
             (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
              C3180 * C50250) *
                 C16958 +
             (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
              (C2957 - C2958) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
              C2466 * C50250) *
                 C16957 +
             ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
              C628 * C50250) *
                 C16958 +
             C16976 * C16959) *
                C50344 +
            (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
              C3178 * C50250) *
                 C16957 +
             ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
              C8703 * C50250) *
                 C16958 +
             ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
              (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                 C16959) *
                C50182) *
               C1018 +
           (((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
              C2460 * C50250) *
                 C16957 +
             (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
              C2808 * C50250) *
                 C16958 +
             (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
              (C353 - C354) * C50250) *
                 C16959) *
                C50344 +
            ((C3173 * C16960 + C3174 * C16955 + C3175 * C16961 +
              C3176 * C50250) *
                 C16957 +
             (C8501 * C16960 + C8502 * C16955 + (C2956 - C2955) * C16961 +
              (C2958 - C2957) * C50250) *
                 C16958 +
             ((C918 - C917) * C16960 + (C920 - C919) * C16955 +
              (C117 * C1558 - C50214 * C1565) * C16961 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C16960 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C16955 +
             (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
             (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
                C50057 * C50344 +
            ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C16960 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C16955 +
             (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
             (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
                C50057 * C50182) *
               C1018 +
           (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
             (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
             (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
             (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
                C50057 * C50344 +
            ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
             (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
             (C5094 * C1559 - C5097 * C1555 + C5095 * C2637 - C5098 * C2634 +
              C5096 * C4500 - C5099 * C4495) *
                 C16961 +
             (C5094 * C1567 - C5097 * C1560 + C5095 * C2643 - C5098 * C2638 +
              C5096 * C4507 - C5099 * C4501) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
             (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
                C50057 * C50344 +
            ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
             (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
                C50057 * C50182) *
               C1018 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
                C50057 * C50344 +
            ((C6004 - C6003 + C6006 - C6005 + C6008 - C6007) * C16960 +
             (C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C16955 +
             (C5097 * C1556 - C5094 * C1561 + C5098 * C2635 - C5095 * C2639 +
              C5099 * C4497 - C5096 * C4504) *
                 C16961 +
             (C5097 * C1562 - C5094 * C1568 + C5098 * C2640 - C5095 * C2644 +
              C5099 * C4505 - C5096 * C4509) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C50118 * C1089 +
          (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
            (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
               C16957 +
           (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 + C2468 * C50250) *
               C16958 +
           C17421 * C16959) *
              C50118 * C1090 +
          ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
            (C2464 - C2463) * C50250) *
               C16957 +
           (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 + C2488 * C50250) *
               C16958 +
           (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
            (C2481 - C2482) * C50250) *
               C16959) *
              C50118 * C1091 +
          ((C3437 * C16960 + C3438 * C16955 + (C3440 - C3439) * C16961 +
            (C3442 - C3441) * C50250) *
               C16957 +
           (C2485 * C16960 + C2486 * C16955 + (C2474 - C2473) * C16961 +
            (C2476 - C2475) * C50250) *
               C16958 +
           ((C2480 - C2479) * C16960 + (C2482 - C2481) * C16955 +
            (C117 * C2438 - C50214 * C2443) * C16961 +
            (C117 * C2444 - C50214 * C2447) * C50250) *
               C16959) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C1018 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C1018 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50154) *
              C1021 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50118 * C1018 +
           (C17421 * C16957 +
            (C629 * C16960 + C630 * C16955 + (C352 - C351) * C16961 +
             (C354 - C353) * C50250) *
                C16958 +
            ((C632 - C631) * C16960 + (C634 - C633) * C16955 +
             (C117 * C299 - C50214 * C318) * C16961 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C16959) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C1018 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C1018 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50118 * C1018 +
           (C627 * C19591 + C628 * C19586 + C2477 * C19592 + C2478 * C19587 +
            (C2480 - C2479) * C19593 + (C2482 - C2481) * C19588 +
            (C117 * C2438 - C50214 * C2443) * C19594 +
            (C117 * C2444 - C50214 * C2447) * C19589) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           C19694 * C19594 + C19695 * C19589) *
              C50057 * C50118 * C1089 +
          ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
           (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
           C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
           C20289 * C19589) *
              C50057 * C50118 * C1090 +
          (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 + C19695 * C19587 +
           (C3439 - C3440) * C19593 + (C3441 - C3442) * C19588 +
           (C20290 - C20291) * C19594 + (C20292 - C20293) * C19589) *
              C50057 * C50118 * C1091 +
          (C3437 * C19591 + C3438 * C19586 + C20288 * C19592 + C20289 * C19587 +
           (C20291 - C20290) * C19593 + (C20293 - C20292) * C19588 +
           (C117 * C20283 - C50214 * C20284) * C19594 +
           (C117 * C20285 - C50214 * C20286) * C19589) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50118 * C1018 +
           ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50118 * C1018 +
           ((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
            (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
            (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
            (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
               C50057 * C50118 * C50154) *
              C1021 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
            (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
               C50057 * C50118 * C1018 +
           ((C5636 - C5635 + C5638 - C5637 + C5640 - C5639) * C16960 +
            (C5642 - C5641 + C5644 - C5643 + C5646 - C5645) * C16955 +
            (C5097 * C296 - C5094 * C312 + C5098 * C1557 - C5095 * C1563 +
             C5099 * C2636 - C5096 * C2641) *
                C16961 +
            (C5097 * C313 - C5094 * C326 + C5098 * C1564 - C5095 * C1569 +
             C5099 * C2642 - C5096 * C2645) *
                C50250) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
            C5096 * C473 - C5099 * C459) *
               C16960 +
           (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
            C5096 * C489 - C5099 * C474) *
               C16955 +
           (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
           (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
              C50057 * C50118 * C1089 +
          ((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
           (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
           (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
           (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
              C50057 * C50118 * C1090 +
          ((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
           (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
           (C22484 - C22485 + C22486 - C22487 + C22488 - C22489) * C16961 +
           (C22490 - C22491 + C22492 - C22493 + C22494 - C22495) * C50250) *
              C50057 * C50118 * C1091 +
          ((C22485 - C22484 + C22487 - C22486 + C22489 - C22488) * C16960 +
           (C22491 - C22490 + C22493 - C22492 + C22495 - C22494) * C16955 +
           (C5097 * C2436 - C5094 * C2439 + C5098 * C4090 - C5095 * C4092 +
            C5099 * C20391 - C5096 * C20392) *
               C16961 +
           (C5097 * C2440 - C5094 * C2445 + C5098 * C4093 - C5095 * C4096 +
            C5099 * C20393 - C5096 * C20394) *
               C50250) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C19591 +
             (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
             (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
             C19694 * C19594 + C19695 * C19589) *
                C50057 * C1669 +
            ((C117 * C455 - C50214 * C465) * C19591 +
             (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
             (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
             C20730 * C19594 + C20731 * C19589) *
                C50057 * C50182) *
               C50343 +
           (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
             (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
             C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
             C20289 * C19589) *
                C50057 * C1669 +
            ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
             (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
             (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
             (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
             C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
             C2486 * C19589) *
                C50057 * C1669 +
            ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
             C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
             (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
                C50057 * C50182) *
               C50343 +
           ((C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
             C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
             (C2475 - C2476) * C19589) *
                C50057 * C1669 +
            (C3173 * C19591 + C3174 * C19586 + C3175 * C19592 + C3176 * C19587 +
             (C3182 - C3181) * C19593 + (C3184 - C3183) * C19588 +
             (C117 * C4091 - C50214 * C4094) * C19594 +
             (C117 * C4095 - C50214 * C4097) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C16960 +
              (C50214 * C140 - C117 * C127) * C16955 +
              (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                 C16957 +
             ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
              C2458 * C50250) *
                 C16958 +
             C16975 * C16959) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C16960 +
              (C117 * C466 - C50214 * C485) * C16955 +
              (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                 C16957 +
             ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
              C3174 * C50250) *
                 C16958 +
             C17574 * C16959) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
              (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                 C16957 +
             (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
              C2468 * C50250) *
                 C16958 +
             C17421 * C16959) *
                C1669 +
            (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
              (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                 C16957 +
             (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
              C3180 * C50250) *
                 C16958 +
             (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
              (C2957 - C2958) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
              C2466 * C50250) *
                 C16957 +
             ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
              C628 * C50250) *
                 C16958 +
             C16976 * C16959) *
                C1669 +
            (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
              C3178 * C50250) *
                 C16957 +
             ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
              C8703 * C50250) *
                 C16958 +
             ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
              (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                 C16959) *
                C50182) *
               C50343 +
           (((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
              C2460 * C50250) *
                 C16957 +
             (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
              C2808 * C50250) *
                 C16958 +
             (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
              (C353 - C354) * C50250) *
                 C16959) *
                C1669 +
            ((C3173 * C16960 + C3174 * C16955 + C3175 * C16961 +
              C3176 * C50250) *
                 C16957 +
             (C8501 * C16960 + C8502 * C16955 + (C2956 - C2955) * C16961 +
              (C2958 - C2957) * C50250) *
                 C16958 +
             ((C918 - C917) * C16960 + (C920 - C919) * C16955 +
              (C117 * C1558 - C50214 * C1565) * C16961 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
              C5096 * C473 - C5099 * C459) *
                 C16960 +
             (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
              C5096 * C489 - C5099 * C474) *
                 C16955 +
             (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
             (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
                C50057 * C1669 +
            ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
              C5099 * C1839 - C5096 * C1843) *
                 C16960 +
             (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
              C5099 * C1844 - C5096 * C1851) *
                 C16955 +
             (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
             (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
             (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
             (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
             (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
                C50057 * C1669 +
            ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
             (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
             (C23144 - C23145 + C23146 - C23147 + C23148 - C23149) * C16961 +
             (C23150 - C23151 + C23152 - C23153 + C23154 - C23155) * C50250) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
             (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
             (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
             (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
                C50057 * C1669 +
            ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
             (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
             (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
             (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C5284 - C5283 + C5286 - C5285 + C5288 - C5287) * C16960 +
             (C5290 - C5289 + C5292 - C5291 + C5294 - C5293) * C16955 +
             (C5295 - C5296 + C5297 - C5298 + C5299 - C5300) * C16961 +
             (C5301 - C5302 + C5303 - C5304 + C5305 - C5306) * C50250) *
                C50057 * C1669 +
            ((C6004 - C6003 + C6006 - C6005 + C6008 - C6007) * C16960 +
             (C6010 - C6009 + C6012 - C6011 + C6014 - C6013) * C16955 +
             (C5097 * C1556 - C5094 * C1561 + C5098 * C2635 - C5095 * C2639 +
              C5099 * C4497 - C5096 * C4504) *
                 C16961 +
             (C5097 * C1562 - C5094 * C1568 + C5098 * C2640 - C5095 * C2644 +
              C5099 * C4505 - C5096 * C4509) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50390 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50391 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
            (C20398 - C20399) * C19589) *
               C50057 * C2085) *
              C50343 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C50390 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50391 +
           ((C3598 - C3597) * C19591 + (C3600 - C3599) * C19586 +
            (C3602 - C3601) * C19592 + (C3604 - C3603) * C19587 +
            (C20397 - C20396) * C19593 + (C20399 - C20398) * C19588 +
            (C117 * C20391 - C50214 * C20392) * C19594 +
            (C117 * C20393 - C50214 * C20394) * C19589) *
               C50057 * C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C2085) *
              C50343 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50390 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50391 +
           (((C3598 - C3597) * C16960 + (C3600 - C3599) * C16955 +
             (C3602 - C3601) * C16961 + (C3604 - C3603) * C50250) *
                C16957 +
            ((C2652 - C2651) * C16960 + (C2654 - C2653) * C16955 +
             (C2656 - C2655) * C16961 + (C2658 - C2657) * C50250) *
                C16958 +
            ((C8195 - C8194) * C16960 + (C8197 - C8196) * C16955 +
             (C117 * C2636 - C50214 * C2641) * C16961 +
             (C117 * C2642 - C50214 * C2645) * C50250) *
                C16959) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50390 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50391 +
           ((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
             C5096 * C5455 - C5099 * C5452) *
                C16960 +
            (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
             C5096 * C5461 - C5099 * C5456) *
                C16955 +
            (C22646 - C22647 + C22648 - C22649 + C22650 - C22651) * C16961 +
            (C22652 - C22653 + C22654 - C22655 + C22656 - C22657) * C50250) *
               C50057 * C2085) *
              C50343 +
          (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C50390 +
           ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
            (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
            (C23144 - C23145 + C23146 - C23147 + C23148 - C23149) * C16961 +
            (C23150 - C23151 + C23152 - C23153 + C23154 - C23155) * C50250) *
               C50057 * C50391 +
           ((C22647 - C22646 + C22649 - C22648 + C22651 - C22650) * C16960 +
            (C22653 - C22652 + C22655 - C22654 + C22657 - C22656) * C16955 +
            (C5097 * C2634 - C5094 * C2637 + C5098 * C4495 - C5095 * C4500 +
             C5099 * C22641 - C5096 * C22642) *
                C16961 +
            (C5097 * C2638 - C5094 * C2643 + C5098 * C4501 - C5095 * C4507 +
             C5099 * C22643 - C5096 * C22644) *
                C50250) *
               C50057 * C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C16960 +
                 (C50214 * C140 - C117 * C127) * C16955 +
                 (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                    C16957 +
                ((C148 - C149) * C16960 + (C150 - C151) * C16955 +
                 C2457 * C16961 + C2458 * C50250) *
                    C16958 +
                C16975 * C16959) *
                   C1669 +
               (((C117 * C455 - C50214 * C465) * C16960 +
                 (C117 * C466 - C50214 * C485) * C16955 +
                 (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                    C16957 +
                ((C496 - C497) * C16960 + (C498 - C499) * C16955 +
                 C3173 * C16961 + C3174 * C50250) *
                    C16958 +
                C17574 * C16959) *
                   C50182) *
                  C50102 * C1020 +
              ((((C149 - C148) * C16960 + (C151 - C150) * C16955 +
                 C2465 * C16961 + C2466 * C50250) *
                    C16957 +
                ((C153 - C152) * C16960 + (C155 - C154) * C16955 +
                 C627 * C16961 + C628 * C50250) *
                    C16958 +
                C16976 * C16959) *
                   C1669 +
               (((C497 - C496) * C16960 + (C499 - C498) * C16955 +
                 C3177 * C16961 + C3178 * C50250) *
                    C16957 +
                ((C501 - C500) * C16960 + (C503 - C502) * C16955 +
                 C8702 * C16961 + C8703 * C50250) *
                    C16958 +
                ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
                 (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                    C16959) *
                   C50182) *
                  C50102 * C1021 +
              ((C16975 * C16957 +
                (C170 * C16960 + C171 * C16955 + C8348 * C16961 +
                 C8349 * C50250) *
                    C16958 +
                ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
                 (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                    C16959) *
                   C1669 +
               (C17574 * C16957 +
                (C747 * C16960 + C748 * C16955 + (C918 - C917) * C16961 +
                 (C920 - C919) * C50250) *
                    C16958 +
                ((C750 - C749) * C16960 + (C752 - C751) * C16955 +
                 (C117 * C892 - C50214 * C901) * C16961 +
                 (C117 * C902 - C50214 * C907) * C50250) *
                    C16959) *
                   C50182) *
                  C50102 * C1022) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50214 * C126 - C117 * C119) * C16960 +
                 (C50214 * C140 - C117 * C127) * C16955 +
                 (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                    C16957 +
                ((C148 - C149) * C16960 + (C150 - C151) * C16955 +
                 C2457 * C16961 + C2458 * C50250) *
                    C16958 +
                C16975 * C16959) *
                   C1669 +
               (((C117 * C455 - C50214 * C465) * C16960 +
                 (C117 * C466 - C50214 * C485) * C16955 +
                 (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                    C16957 +
                ((C496 - C497) * C16960 + (C498 - C499) * C16955 +
                 C3173 * C16961 + C3174 * C50250) *
                    C16958 +
                C17574 * C16959) *
                   C50182) *
                  C285 +
              ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
                 (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                    C16957 +
                (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
                 C2468 * C50250) *
                    C16958 +
                C17421 * C16959) *
                   C1669 +
               (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
                 (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                    C16957 +
                (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
                 C3180 * C50250) *
                    C16958 +
                (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
                 (C2957 - C2958) * C50250) *
                    C16959) *
                   C50182) *
                  C286 +
              (((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
                 (C2464 - C2463) * C50250) *
                    C16957 +
                (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
                 C2488 * C50250) *
                    C16958 +
                (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
                 (C2481 - C2482) * C50250) *
                    C16959) *
                   C1669 +
               ((C4099 * C16960 + C4100 * C16955 + (C4102 - C4101) * C16961 +
                 (C4104 - C4103) * C50250) *
                    C16957 +
                (C3175 * C16960 + C3176 * C16955 + (C3182 - C3181) * C16961 +
                 (C3184 - C3183) * C50250) *
                    C16958 +
                ((C2956 - C2955) * C16960 + (C2958 - C2957) * C16955 +
                 (C117 * C3154 - C50214 * C3159) * C16961 +
                 (C117 * C3160 - C50214 * C3163) * C50250) *
                    C16959) *
                   C50182) *
                  C287) *
             C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C16960 +
            (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
            (C3167 - C3168) * C50250) *
               C16957 +
           ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
            C3174 * C50250) *
               C16958 +
           C17574 * C16959) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C16960 +
            (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
            (C3599 - C3600) * C50250) *
               C16957 +
           ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
            (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
               C16958 +
           ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
            (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
               C16959) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C16960 +
            (C117 * C1844 - C50214 * C1851) * C16955 +
            (C117 * C4494 - C50214 * C4498) * C16961 +
            (C117 * C4499 - C50214 * C4506) * C50250) *
               C16957 +
           ((C117 * C1840 - C50214 * C1845) * C16960 +
            (C117 * C1846 - C50214 * C1852) * C16955 +
            (C117 * C4496 - C50214 * C4502) * C16961 +
            (C117 * C4503 - C50214 * C4508) * C50250) *
               C16958 +
           ((C117 * C1841 - C50214 * C1847) * C16960 +
            (C117 * C1848 - C50214 * C1853) * C16955 +
            (C117 * C5998 - C50214 * C5999) * C16961 +
            (C117 * C6000 - C50214 * C6001) * C50250) *
               C16959) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C1669 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C1669 +
           (C745 * C19591 + C746 * C19586 + C8501 * C19592 + C8502 * C19587 +
            (C2956 - C2955) * C19593 + (C2958 - C2957) * C19588 +
            (C117 * C3154 - C50214 * C3159) * C19594 +
            (C117 * C3160 - C50214 * C3163) * C19589) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C285 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C1669 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50182) *
              C286 +
          ((C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C1669 +
           (C4099 * C19591 + C4100 * C19586 + C20730 * C19592 +
            C20731 * C19587 + (C20733 - C20732) * C19593 +
            (C20735 - C20734) * C19588 +
            (C117 * C20725 - C50214 * C20726) * C19594 +
            (C117 * C20727 - C50214 * C20728) * C19589) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           C19694 * C19594 + C19695 * C19589) *
              C50057 * C1835 +
          ((C117 * C455 - C50214 * C465) * C19591 +
           (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
           (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
           C20730 * C19594 + C20731 * C19589) *
              C50057 * C1836 +
          ((C50214 * C473 - C117 * C459) * C19591 +
           (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
           (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
           (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
           (C20398 - C20399) * C19589) *
              C50057 * C1837 +
          ((C117 * C1839 - C50214 * C1843) * C19591 +
           (C117 * C1844 - C50214 * C1851) * C19586 +
           (C117 * C4494 - C50214 * C4498) * C19592 +
           (C117 * C4499 - C50214 * C4506) * C19587 +
           (C117 * C4495 - C50214 * C4500) * C19593 +
           (C117 * C4501 - C50214 * C4507) * C19588 +
           (C117 * C20997 - C50214 * C20998) * C19594 +
           (C117 * C20999 - C50214 * C21000) * C19589) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C1669 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C1669 +
           ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
            (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
            (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
               C50057 * C50182) *
              C50102 * C1021 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
            (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
               C50057 * C1669 +
           ((C5794 - C5793 + C5796 - C5795 + C5798 - C5797) * C16960 +
            (C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C16955 +
            (C5097 * C890 - C5094 * C897 + C5098 * C1210 - C5095 * C1216 +
             C5099 * C5998 - C5096 * C5999) *
                C16961 +
            (C5097 * C898 - C5094 * C905 + C5098 * C1217 - C5095 * C1222 +
             C5099 * C6000 - C5096 * C6001) *
                C50250) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C1669 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50182) *
              C285 +
          (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C1669 +
           ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
            (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
            (C23144 - C23145 + C23146 - C23147 + C23148 - C23149) * C16961 +
            (C23150 - C23151 + C23152 - C23153 + C23154 - C23155) * C50250) *
               C50057 * C50182) *
              C286 +
          (((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
            (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
            (C22484 - C22485 + C22486 - C22487 + C22488 - C22489) * C16961 +
            (C22490 - C22491 + C22492 - C22493 + C22494 - C22495) * C50250) *
               C50057 * C1669 +
           ((C23145 - C23144 + C23147 - C23146 + C23149 - C23148) * C16960 +
            (C23151 - C23150 + C23153 - C23152 + C23155 - C23154) * C16955 +
            (C5097 * C3152 - C5094 * C3155 + C5098 * C3588 - C5095 * C3590 +
             C5099 * C20997 - C5096 * C20998) *
                C16961 +
            (C5097 * C3156 - C5094 * C3161 + C5098 * C3591 - C5095 * C3594 +
             C5099 * C20999 - C5096 * C21000) *
                C50250) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
            C5096 * C473 - C5099 * C459) *
               C16960 +
           (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
            C5096 * C489 - C5099 * C474) *
               C16955 +
           (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
           (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
              C50057 * C1835 +
          ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
            C5099 * C1839 - C5096 * C1843) *
               C16960 +
           (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
            C5099 * C1844 - C5096 * C1851) *
               C16955 +
           (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
           (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
              C50057 * C1836 +
          ((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
            C5096 * C5455 - C5099 * C5452) *
               C16960 +
           (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
            C5096 * C5461 - C5099 * C5456) *
               C16955 +
           (C22646 - C22647 + C22648 - C22649 + C22650 - C22651) * C16961 +
           (C22652 - C22653 + C22654 - C22655 + C22656 - C22657) * C50250) *
              C50057 * C1837 +
          ((C5097 * C1839 - C5094 * C1843 + C5098 * C5452 - C5095 * C5455 +
            C5099 * C7288 - C5096 * C7290) *
               C16960 +
           (C5097 * C1844 - C5094 * C1851 + C5098 * C5456 - C5095 * C5461 +
            C5099 * C7291 - C5096 * C7294) *
               C16955 +
           (C5097 * C4494 - C5094 * C4498 + C5098 * C6404 - C5095 * C6406 +
            C5099 * C23545 - C5096 * C23546) *
               C16961 +
           (C5097 * C4499 - C5094 * C4506 + C5098 * C6407 - C5095 * C6410 +
            C5099 * C23547 - C5096 * C23548) *
               C50250) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50390 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50391 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
            (C20398 - C20399) * C19589) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50390 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50391 +
           ((C509 - C508) * C19591 + (C511 - C510) * C19586 +
            (C2652 - C2651) * C19592 + (C2654 - C2653) * C19587 +
            (C2656 - C2655) * C19593 + (C2658 - C2657) * C19588 +
            (C117 * C3589 - C50214 * C3592) * C19594 +
            (C117 * C3593 - C50214 * C3595) * C19589) *
               C50057 * C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50390 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50391 +
           (((C509 - C508) * C16960 + (C511 - C510) * C16955 +
             (C2652 - C2651) * C16961 + (C2654 - C2653) * C50250) *
                C16957 +
            ((C513 - C512) * C16960 + (C515 - C514) * C16955 +
             (C8195 - C8194) * C16961 + (C8197 - C8196) * C50250) *
                C16958 +
            ((C517 - C516) * C16960 + (C519 - C518) * C16955 +
             (C117 * C1211 - C50214 * C1218) * C16961 +
             (C117 * C1219 - C50214 * C1223) * C50250) *
                C16959) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C50390 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50391 +
           ((C5094 * C473 - C5097 * C459 + C5095 * C1843 - C5098 * C1839 +
             C5096 * C5455 - C5099 * C5452) *
                C16960 +
            (C5094 * C489 - C5097 * C474 + C5095 * C1851 - C5098 * C1844 +
             C5096 * C5461 - C5099 * C5456) *
                C16955 +
            (C22646 - C22647 + C22648 - C22649 + C22650 - C22651) * C16961 +
            (C22652 - C22653 + C22654 - C22655 + C22656 - C22657) * C50250) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C50390 +
           ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
            (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
            (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
               C50057 * C50391 +
           ((C5478 - C5477 + C5480 - C5479 + C5482 - C5481) * C16960 +
            (C5484 - C5483 + C5486 - C5485 + C5488 - C5487) * C16955 +
            (C5097 * C1209 - C5094 * C1214 + C5098 * C4496 - C5095 * C4502 +
             C5099 * C6405 - C5096 * C6408) *
                C16961 +
            (C5097 * C1215 - C5094 * C1221 + C5098 * C4503 - C5095 * C4508 +
             C5099 * C6409 - C5096 * C6411) *
                C50250) *
               C50057 * C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C1669 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50182) *
              C286 +
          (((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C1669 +
           ((C4099 * C16960 + C4100 * C16955 + (C4102 - C4101) * C16961 +
             (C4104 - C4103) * C50250) *
                C16957 +
            (C3175 * C16960 + C3176 * C16955 + (C3182 - C3181) * C16961 +
             (C3184 - C3183) * C50250) *
                C16958 +
            ((C2956 - C2955) * C16960 + (C2958 - C2957) * C16955 +
             (C117 * C3154 - C50214 * C3159) * C16961 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C16959) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C1669 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50182) *
              C50102 * C1021 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C1669 +
           (C17574 * C16957 +
            (C747 * C16960 + C748 * C16955 + (C918 - C917) * C16961 +
             (C920 - C919) * C50250) *
                C16958 +
            ((C750 - C749) * C16960 + (C752 - C751) * C16955 +
             (C117 * C892 - C50214 * C901) * C16961 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C16959) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C1669 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C1669 +
           (C745 * C19591 + C746 * C19586 + C8501 * C19592 + C8502 * C19587 +
            (C2956 - C2955) * C19593 + (C2958 - C2957) * C19588 +
            (C117 * C3154 - C50214 * C3159) * C19594 +
            (C117 * C3160 - C50214 * C3163) * C19589) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C285 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C1669 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50182) *
              C286 +
          ((C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C1669 +
           (C4099 * C19591 + C4100 * C19586 + C20730 * C19592 +
            C20731 * C19587 + (C20733 - C20732) * C19593 +
            (C20735 - C20734) * C19588 +
            (C117 * C20725 - C50214 * C20726) * C19594 +
            (C117 * C20727 - C50214 * C20728) * C19589) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C1669 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C5102 - C5101 + C5104 - C5103 + C5106 - C5105) * C16960 +
            (C5108 - C5107 + C5110 - C5109 + C5112 - C5111) * C16955 +
            (C5283 - C5284 + C5285 - C5286 + C5287 - C5288) * C16961 +
            (C5289 - C5290 + C5291 - C5292 + C5293 - C5294) * C50250) *
               C50057 * C1669 +
           ((C5466 - C5465 + C5468 - C5467 + C5470 - C5469) * C16960 +
            (C5472 - C5471 + C5474 - C5473 + C5476 - C5475) * C16955 +
            (C6003 - C6004 + C6005 - C6006 + C6007 - C6008) * C16961 +
            (C6009 - C6010 + C6011 - C6012 + C6013 - C6014) * C50250) *
               C50057 * C50182) *
              C50102 * C1021 +
          (((C5114 - C5113 + C5116 - C5115 + C5118 - C5117) * C16960 +
            (C5120 - C5119 + C5122 - C5121 + C5124 - C5123) * C16955 +
            (C5635 - C5636 + C5637 - C5638 + C5639 - C5640) * C16961 +
            (C5641 - C5642 + C5643 - C5644 + C5645 - C5646) * C50250) *
               C50057 * C1669 +
           ((C5794 - C5793 + C5796 - C5795 + C5798 - C5797) * C16960 +
            (C5800 - C5799 + C5802 - C5801 + C5804 - C5803) * C16955 +
            (C5097 * C890 - C5094 * C897 + C5098 * C1210 - C5095 * C1216 +
             C5099 * C5998 - C5096 * C5999) *
                C16961 +
            (C5097 * C898 - C5094 * C905 + C5098 * C1217 - C5095 * C1222 +
             C5099 * C6000 - C5096 * C6001) *
                C50250) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5094 * C126 - C5097 * C119 + C5095 * C465 - C5098 * C455 +
             C5096 * C473 - C5099 * C459) *
                C16960 +
            (C5094 * C140 - C5097 * C127 + C5095 * C485 - C5098 * C466 +
             C5096 * C489 - C5099 * C474) *
                C16955 +
            (C21572 - C21573 + C21574 - C21575 + C21576 - C21577) * C16961 +
            (C21578 - C21579 + C21580 - C21581 + C21582 - C21583) * C50250) *
               C50057 * C1669 +
           ((C5097 * C455 - C5094 * C465 + C5098 * C459 - C5095 * C473 +
             C5099 * C1839 - C5096 * C1843) *
                C16960 +
            (C5097 * C466 - C5094 * C485 + C5098 * C474 - C5095 * C489 +
             C5099 * C1844 - C5096 * C1851) *
                C16955 +
            (C22228 - C22229 + C22230 - C22231 + C22232 - C22233) * C16961 +
            (C22234 - C22235 + C22236 - C22237 + C22238 - C22239) * C50250) *
               C50057 * C50182) *
              C285 +
          (((C21573 - C21572 + C21575 - C21574 + C21577 - C21576) * C16960 +
            (C21579 - C21578 + C21581 - C21580 + C21583 - C21582) * C16955 +
            (C21584 - C21585 + C21586 - C21587 + C21588 - C21589) * C16961 +
            (C21590 - C21591 + C21592 - C21593 + C21594 - C21595) * C50250) *
               C50057 * C1669 +
           ((C22229 - C22228 + C22231 - C22230 + C22233 - C22232) * C16960 +
            (C22235 - C22234 + C22237 - C22236 + C22239 - C22238) * C16955 +
            (C23144 - C23145 + C23146 - C23147 + C23148 - C23149) * C16961 +
            (C23150 - C23151 + C23152 - C23153 + C23154 - C23155) * C50250) *
               C50057 * C50182) *
              C286 +
          (((C21585 - C21584 + C21587 - C21586 + C21589 - C21588) * C16960 +
            (C21591 - C21590 + C21593 - C21592 + C21595 - C21594) * C16955 +
            (C22484 - C22485 + C22486 - C22487 + C22488 - C22489) * C16961 +
            (C22490 - C22491 + C22492 - C22493 + C22494 - C22495) * C50250) *
               C50057 * C1669 +
           ((C23145 - C23144 + C23147 - C23146 + C23149 - C23148) * C16960 +
            (C23151 - C23150 + C23153 - C23152 + C23155 - C23154) * C16955 +
            (C5097 * C3152 - C5094 * C3155 + C5098 * C3588 - C5095 * C3590 +
             C5099 * C20997 - C5096 * C20998) *
                C16961 +
            (C5097 * C3156 - C5094 * C3161 + C5098 * C3591 - C5095 * C3594 +
             C5099 * C20999 - C5096 * C21000) *
                C50250) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50118 * C50343 +
           (((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50118 * C50343 +
           ((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
             C13623 * C50250) *
                C50328 +
            (C14024 * C16960 + C14025 * C16955 +
             (C10778 - C10779 + C10780 - C10781) * C16961 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          (((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
             C14025 * C50250) *
                C50328 +
            ((C10575 - C10574 + C10577 - C10576) * C16960 +
             (C10579 - C10578 + C10581 - C10580) * C16955 +
             (C11114 - C11115 + C11116 - C11117) * C16961 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50118 * C50343 +
           ((C11122 * C16960 + C11123 * C16955 +
             (C10779 - C10778 + C10781 - C10780) * C16961 +
             (C10783 - C10782 + C10785 - C10784) * C50250) *
                C50328 +
            ((C11115 - C11114 + C11117 - C11116) * C16960 +
             (C11119 - C11118 + C11121 - C11120) * C16955 +
             (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C16961 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C16960 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C16955 +
              (C13576 - C13577 + C13578 - C13579) * C16961 +
              (C13580 - C13581 + C13582 - C13583) * C50250) *
                 C50328 +
             ((C10558 - C10559 + C10560 - C10561) * C16960 +
              (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
              C13617 * C50250) *
                 C50062) *
                C50344 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C16960 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C16955 +
              (C14478 - C14479 + C14480 - C14481) * C16961 +
              (C14482 - C14483 + C14484 - C14485) * C50250) *
                 C50328 +
             ((C10932 - C10933 + C10934 - C10935) * C16960 +
              (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
              C14503 * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C13577 - C13576 + C13579 - C13578) * C16960 +
              (C13581 - C13580 + C13583 - C13582) * C16955 +
              (C13588 - C13589 + C13590 - C13591) * C16961 +
              (C13592 - C13593 + C13594 - C13595) * C50250) *
                 C50328 +
             (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
              C13621 * C50250) *
                 C50062) *
                C50344 +
            (((C14479 - C14478 + C14481 - C14480) * C16960 +
              (C14483 - C14482 + C14485 - C14484) * C16955 +
              (C15686 - C15687 + C15688 - C15689) * C16961 +
              (C15690 - C15691 + C15692 - C15693) * C50250) *
                 C50328 +
             (C14504 * C16960 + C14505 * C16955 +
              (C14494 - C14495 + C14496 - C14497) * C16961 +
              (C14498 - C14499 + C14500 - C14501) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C10559 - C10558 + C10561 - C10560) * C16960 +
              (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
              C13619 * C50250) *
                 C50328 +
             ((C10567 - C10566 + C10569 - C10568) * C16960 +
              (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
              C11123 * C50250) *
                 C50062) *
                C50344 +
            (((C10933 - C10932 + C10935 - C10934) * C16960 +
              (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
              C14505 * C50250) *
                 C50328 +
             ((C10941 - C10940 + C10943 - C10942) * C16960 +
              (C10945 - C10944 + C10947 - C10946) * C16955 +
              (C11492 - C11493 + C11494 - C11495) * C16961 +
              (C11496 - C11497 + C11498 - C11499) * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           (((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
              C13623 * C50250) *
                 C50328 +
             (C14024 * C16960 + C14025 * C16955 +
              (C10778 - C10779 + C10780 - C10781) * C16961 +
              (C10782 - C10783 + C10784 - C10785) * C50250) *
                 C50062) *
                C50344 +
            ((C14502 * C16960 + C14503 * C16955 +
              (C14495 - C14494 + C14497 - C14496) * C16961 +
              (C14499 - C14498 + C14501 - C14500) * C50250) *
                 C50328 +
             ((C11493 - C11492 + C11495 - C11494) * C16960 +
              (C11497 - C11496 + C11499 - C11498) * C16955 +
              (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
               C50278 * C2641) *
                  C16961 +
              (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50118 * C285 +
           (((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50118 * C286 +
           (((C13589 - C13588 + C13591 - C13590) * C16960 +
             (C13593 - C13592 + C13595 - C13594) * C16955 +
             (C14830 - C14831 + C14832 - C14833) * C16961 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C50328 +
            (C13622 * C16960 + C13623 * C16955 +
             (C13608 - C13609 + C13610 - C13611) * C16961 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50118 * C285 +
           ((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
             C13623 * C50250) *
                C50328 +
            (C14024 * C16960 + C14025 * C16955 +
             (C10778 - C10779 + C10780 - C10781) * C16961 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C286 +
           ((C13620 * C16960 + C13621 * C16955 +
             (C13609 - C13608 + C13611 - C13610) * C16961 +
             (C13613 - C13612 + C13615 - C13614) * C50250) *
                C50328 +
            ((C10779 - C10778 + C10781 - C10780) * C16960 +
             (C10783 - C10782 + C10785 - C10784) * C16955 +
             (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
              C50278 * C3159) *
                 C16961 +
             (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C16960 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C16955 +
            (C13576 - C13577 + C13578 - C13579) * C16961 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C50328 +
           ((C10558 - C10559 + C10560 - C10561) * C16960 +
            (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
            C13617 * C50250) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C10559 - C10558 + C10561 - C10560) * C16960 +
            (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
            C13619 * C50250) *
               C50328 +
           ((C10567 - C10566 + C10569 - C10568) * C16960 +
            (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
            C11123 * C50250) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
            C14025 * C50250) *
               C50328 +
           ((C10575 - C10574 + C10577 - C10576) * C16960 +
            (C10579 - C10578 + C10581 - C10580) * C16955 +
            (C11114 - C11115 + C11116 - C11117) * C16961 +
            (C11118 - C11119 + C11120 - C11121) * C50250) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C10600 * C16960 + C10601 * C16955 +
            (C11115 - C11114 + C11117 - C11116) * C16961 +
            (C11119 - C11118 + C11121 - C11120) * C50250) *
               C50328 +
           ((C10583 - C10582 + C10585 - C10584) * C16960 +
            (C10587 - C10586 + C10589 - C10588) * C16955 +
            (C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                C16961 +
            (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                C50250) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C452 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C453 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C16960 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C16955 +
             (C15032 - C15033 + C15034 - C15035) * C16961 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C50328 +
            ((C10948 - C10949 + C10950 - C10951) * C16960 +
             (C10952 - C10953 + C10954 - C10955) * C16955 +
             (C13818 - C13819 + C13820 - C13821) * C16961 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C452 +
           (((C10933 - C10932 + C10935 - C10934) * C16960 +
             (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
             C14505 * C50250) *
                C50328 +
            ((C10941 - C10940 + C10943 - C10942) * C16960 +
             (C10945 - C10944 + C10947 - C10946) * C16955 +
             (C11492 - C11493 + C11494 - C11495) * C16961 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C453 +
           (((C10949 - C10948 + C10951 - C10950) * C16960 +
             (C10953 - C10952 + C10955 - C10954) * C16955 +
             (C13819 - C13818 + C13821 - C13820) * C16961 +
             (C13823 - C13822 + C13825 - C13824) * C50250) *
                C50328 +
            ((C10957 - C10956 + C10959 - C10958) * C16960 +
             (C10961 - C10960 + C10963 - C10962) * C16955 +
             (C10555 * C1210 - C50357 * C1216 + C10556 * C5998 -
              C50278 * C5999) *
                 C16961 +
             (C10555 * C1217 - C50357 * C1222 + C10556 * C6000 -
              C50278 * C6001) *
                 C50250) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50344 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50344 +
           (((C10933 - C10932 + C10935 - C10934) * C16960 +
             (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
             C14505 * C50250) *
                C50328 +
            ((C10941 - C10940 + C10943 - C10942) * C16960 +
             (C10945 - C10944 + C10947 - C10946) * C16955 +
             (C11492 - C11493 + C11494 - C11495) * C16961 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          (((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
             C14025 * C50250) *
                C50328 +
            ((C10575 - C10574 + C10577 - C10576) * C16960 +
             (C10579 - C10578 + C10581 - C10580) * C16955 +
             (C11114 - C11115 + C11116 - C11117) * C16961 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50344 +
           ((C11285 * C16960 + C11286 * C16955 +
             (C11493 - C11492 + C11495 - C11494) * C16961 +
             (C11497 - C11496 + C11499 - C11498) * C50250) *
                C50328 +
            ((C11278 - C11277 + C11280 - C11279) * C16960 +
             (C11282 - C11281 + C11284 - C11283) * C16955 +
             (C10555 * C891 - C50357 * C899 + C10556 * C1211 - C50278 * C1218) *
                 C16961 +
             (C10555 * C900 - C50357 * C906 + C10556 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C16960 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C16955 +
            (C13576 - C13577 + C13578 - C13579) * C16961 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C50328 +
           ((C10558 - C10559 + C10560 - C10561) * C16960 +
            (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
            C13617 * C50250) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C10559 - C10558 + C10561 - C10560) * C16960 +
            (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
            C13619 * C50250) *
               C50328 +
           ((C10567 - C10566 + C10569 - C10568) * C16960 +
            (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
            C11123 * C50250) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
            C14025 * C50250) *
               C50328 +
           ((C10575 - C10574 + C10577 - C10576) * C16960 +
            (C10579 - C10578 + C10581 - C10580) * C16955 +
            (C11114 - C11115 + C11116 - C11117) * C16961 +
            (C11118 - C11119 + C11120 - C11121) * C50250) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C10600 * C16960 + C10601 * C16955 +
            (C11115 - C11114 + C11117 - C11116) * C16961 +
            (C11119 - C11118 + C11121 - C11120) * C50250) *
               C50328 +
           ((C10583 - C10582 + C10585 - C10584) * C16960 +
            (C10587 - C10586 + C10589 - C10588) * C16955 +
            (C10555 * C298 - C50357 * C316 + C10556 * C892 - C50278 * C901) *
                C16961 +
            (C10555 * C317 - C50357 * C328 + C10556 * C902 - C50278 * C907) *
                C50250) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50118 * C285 +
           (((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50118 * C286 +
           (((C13589 - C13588 + C13591 - C13590) * C16960 +
             (C13593 - C13592 + C13595 - C13594) * C16955 +
             (C14830 - C14831 + C14832 - C14833) * C16961 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C50328 +
            (C13622 * C16960 + C13623 * C16955 +
             (C13608 - C13609 + C13610 - C13611) * C16961 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50118 * C285 +
           ((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
             C13623 * C50250) *
                C50328 +
            (C14024 * C16960 + C14025 * C16955 +
             (C10778 - C10779 + C10780 - C10781) * C16961 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C286 +
           ((C13620 * C16960 + C13621 * C16955 +
             (C13609 - C13608 + C13611 - C13610) * C16961 +
             (C13613 - C13612 + C13615 - C13614) * C50250) *
                C50328 +
            ((C10779 - C10778 + C10781 - C10780) * C16960 +
             (C10783 - C10782 + C10785 - C10784) * C16955 +
             (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
              C50278 * C3159) *
                 C16961 +
             (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50118 * C50388 +
           (((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50389 +
           (((C13589 - C13588 + C13591 - C13590) * C16960 +
             (C13593 - C13592 + C13595 - C13594) * C16955 +
             (C14830 - C14831 + C14832 - C14833) * C16961 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C50328 +
            (C13622 * C16960 + C13623 * C16955 +
             (C13608 - C13609 + C13610 - C13611) * C16961 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50118 * C50388 +
           ((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
             C13623 * C50250) *
                C50328 +
            (C14024 * C16960 + C14025 * C16955 +
             (C10778 - C10779 + C10780 - C10781) * C16961 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50389 +
           ((C13620 * C16960 + C13621 * C16955 +
             (C13609 - C13608 + C13611 - C13610) * C16961 +
             (C13613 - C13612 + C13615 - C13614) * C50250) *
                C50328 +
            ((C10779 - C10778 + C10781 - C10780) * C16960 +
             (C10783 - C10782 + C10785 - C10784) * C16955 +
             (C10555 * C1096 - C50357 * C1102 + C10556 * C3154 -
              C50278 * C3159) *
                 C16961 +
             (C10555 * C1103 - C50357 * C1108 + C10556 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50344 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50388 +
          ((((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50344 +
           (((C14479 - C14478 + C14481 - C14480) * C16960 +
             (C14483 - C14482 + C14485 - C14484) * C16955 +
             (C15686 - C15687 + C15688 - C15689) * C16961 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C50328 +
            (C14504 * C16960 + C14505 * C16955 +
             (C14494 - C14495 + C14496 - C14497) * C16961 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50182) *
              C50389 +
          ((((C13589 - C13588 + C13591 - C13590) * C16960 +
             (C13593 - C13592 + C13595 - C13594) * C16955 +
             (C14830 - C14831 + C14832 - C14833) * C16961 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C50328 +
            (C13622 * C16960 + C13623 * C16955 +
             (C13608 - C13609 + C13610 - C13611) * C16961 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C50344 +
           (((C15687 - C15686 + C15689 - C15688) * C16960 +
             (C15691 - C15690 + C15693 - C15692) * C16955 +
             (C10555 * C3152 - C50357 * C3155 + C10556 * C3588 -
              C50278 * C3590) *
                 C16961 +
             (C10555 * C3156 - C50357 * C3161 + C10556 * C3591 -
              C50278 * C3594) *
                 C50250) *
                C50328 +
            ((C14495 - C14494 + C14497 - C14496) * C16960 +
             (C14499 - C14498 + C14501 - C14500) * C16955 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C16961 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C16960 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C16955 +
            (C13576 - C13577 + C13578 - C13579) * C16961 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C50328 +
           ((C10558 - C10559 + C10560 - C10561) * C16960 +
            (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
            C13617 * C50250) *
               C50062) *
              C50118 * C1089 +
          (((C13577 - C13576 + C13579 - C13578) * C16960 +
            (C13581 - C13580 + C13583 - C13582) * C16955 +
            (C13588 - C13589 + C13590 - C13591) * C16961 +
            (C13592 - C13593 + C13594 - C13595) * C50250) *
               C50328 +
           (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
            C13621 * C50250) *
               C50062) *
              C50118 * C1090 +
          (((C13589 - C13588 + C13591 - C13590) * C16960 +
            (C13593 - C13592 + C13595 - C13594) * C16955 +
            (C14830 - C14831 + C14832 - C14833) * C16961 +
            (C14834 - C14835 + C14836 - C14837) * C50250) *
               C50328 +
           (C13622 * C16960 + C13623 * C16955 +
            (C13608 - C13609 + C13610 - C13611) * C16961 +
            (C13612 - C13613 + C13614 - C13615) * C50250) *
               C50062) *
              C50118 * C1091 +
          (((C14831 - C14830 + C14833 - C14832) * C16960 +
            (C14835 - C14834 + C14837 - C14836) * C16955 +
            (C10555 * C2436 - C50357 * C2439 + C10556 * C4090 -
             C50278 * C4092) *
                C16961 +
            (C10555 * C2440 - C50357 * C2445 + C10556 * C4093 -
             C50278 * C4096) *
                C50250) *
               C50328 +
           ((C13609 - C13608 + C13611 - C13610) * C16960 +
            (C13613 - C13612 + C13615 - C13614) * C16955 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C16961 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C50250) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50118 * C1018 +
           (((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
             C13623 * C50250) *
                C50328 +
            (C14024 * C16960 + C14025 * C16955 +
             (C10778 - C10779 + C10780 - C10781) * C16961 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
             C14025 * C50250) *
                C50328 +
            ((C10575 - C10574 + C10577 - C10576) * C16960 +
             (C10579 - C10578 + C10581 - C10580) * C16955 +
             (C11114 - C11115 + C11116 - C11117) * C16961 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C11122 * C16960 + C11123 * C16955 +
             (C10779 - C10778 + C10781 - C10780) * C16961 +
             (C10783 - C10782 + C10785 - C10784) * C50250) *
                C50328 +
            ((C11115 - C11114 + C11117 - C11116) * C16960 +
             (C11119 - C11118 + C11121 - C11120) * C16955 +
             (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C16961 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C452 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C453 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C16960 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C16955 +
             (C15032 - C15033 + C15034 - C15035) * C16961 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C50328 +
            ((C10948 - C10949 + C10950 - C10951) * C16960 +
             (C10952 - C10953 + C10954 - C10955) * C16955 +
             (C13818 - C13819 + C13820 - C13821) * C16961 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C454) *
              C1018 +
          ((((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C452 +
           (((C14479 - C14478 + C14481 - C14480) * C16960 +
             (C14483 - C14482 + C14485 - C14484) * C16955 +
             (C15686 - C15687 + C15688 - C15689) * C16961 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C50328 +
            (C14504 * C16960 + C14505 * C16955 +
             (C14494 - C14495 + C14496 - C14497) * C16961 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C453 +
           (((C15033 - C15032 + C15035 - C15034) * C16960 +
             (C15037 - C15036 + C15039 - C15038) * C16955 +
             (C10555 * C2634 - C50357 * C2637 + C10556 * C4495 -
              C50278 * C4500) *
                 C16961 +
             (C10555 * C2638 - C50357 * C2643 + C10556 * C4501 -
              C50278 * C4507) *
                 C50250) *
                C50328 +
            ((C13819 - C13818 + C13821 - C13820) * C16960 +
             (C13823 - C13822 + C13825 - C13824) * C16955 +
             (C10555 * C2635 - C50357 * C2639 + C10556 * C4497 -
              C50278 * C4504) *
                 C16961 +
             (C10555 * C2640 - C50357 * C2644 + C10556 * C4505 -
              C50278 * C4509) *
                 C50250) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C16960 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C16955 +
              (C13576 - C13577 + C13578 - C13579) * C16961 +
              (C13580 - C13581 + C13582 - C13583) * C50250) *
                 C50328 +
             ((C10558 - C10559 + C10560 - C10561) * C16960 +
              (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
              C13617 * C50250) *
                 C50062) *
                C50344 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C16960 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C16955 +
              (C14478 - C14479 + C14480 - C14481) * C16961 +
              (C14482 - C14483 + C14484 - C14485) * C50250) *
                 C50328 +
             ((C10932 - C10933 + C10934 - C10935) * C16960 +
              (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
              C14503 * C50250) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C13577 - C13576 + C13579 - C13578) * C16960 +
              (C13581 - C13580 + C13583 - C13582) * C16955 +
              (C13588 - C13589 + C13590 - C13591) * C16961 +
              (C13592 - C13593 + C13594 - C13595) * C50250) *
                 C50328 +
             (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
              C13621 * C50250) *
                 C50062) *
                C50344 +
            (((C14479 - C14478 + C14481 - C14480) * C16960 +
              (C14483 - C14482 + C14485 - C14484) * C16955 +
              (C15686 - C15687 + C15688 - C15689) * C16961 +
              (C15690 - C15691 + C15692 - C15693) * C50250) *
                 C50328 +
             (C14504 * C16960 + C14505 * C16955 +
              (C14494 - C14495 + C14496 - C14497) * C16961 +
              (C14498 - C14499 + C14500 - C14501) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C10559 - C10558 + C10561 - C10560) * C16960 +
              (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
              C13619 * C50250) *
                 C50328 +
             ((C10567 - C10566 + C10569 - C10568) * C16960 +
              (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
              C11123 * C50250) *
                 C50062) *
                C50344 +
            (((C10933 - C10932 + C10935 - C10934) * C16960 +
              (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
              C14505 * C50250) *
                 C50328 +
             ((C10941 - C10940 + C10943 - C10942) * C16960 +
              (C10945 - C10944 + C10947 - C10946) * C16955 +
              (C11492 - C11493 + C11494 - C11495) * C16961 +
              (C11496 - C11497 + C11498 - C11499) * C50250) *
                 C50062) *
                C50182) *
               C1018 +
           (((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
              C13623 * C50250) *
                 C50328 +
             (C14024 * C16960 + C14025 * C16955 +
              (C10778 - C10779 + C10780 - C10781) * C16961 +
              (C10782 - C10783 + C10784 - C10785) * C50250) *
                 C50062) *
                C50344 +
            ((C14502 * C16960 + C14503 * C16955 +
              (C14495 - C14494 + C14497 - C14496) * C16961 +
              (C14499 - C14498 + C14501 - C14500) * C50250) *
                 C50328 +
             ((C11493 - C11492 + C11495 - C11494) * C16960 +
              (C11497 - C11496 + C11499 - C11498) * C16955 +
              (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
               C50278 * C2641) *
                  C16961 +
              (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50118 * C1018 +
           (((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
             C13623 * C50250) *
                C50328 +
            (C14024 * C16960 + C14025 * C16955 +
             (C10778 - C10779 + C10780 - C10781) * C16961 +
             (C10782 - C10783 + C10784 - C10785) * C50250) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
             C14025 * C50250) *
                C50328 +
            ((C10575 - C10574 + C10577 - C10576) * C16960 +
             (C10579 - C10578 + C10581 - C10580) * C16955 +
             (C11114 - C11115 + C11116 - C11117) * C16961 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C11122 * C16960 + C11123 * C16955 +
             (C10779 - C10778 + C10781 - C10780) * C16961 +
             (C10783 - C10782 + C10785 - C10784) * C50250) *
                C50328 +
            ((C11115 - C11114 + C11117 - C11116) * C16960 +
             (C11119 - C11118 + C11121 - C11120) * C16955 +
             (C10555 * C297 - C50357 * C314 + C10556 * C1558 - C50278 * C1565) *
                 C16961 +
             (C10555 * C315 - C50357 * C327 + C10556 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C16960 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C16955 +
            (C13576 - C13577 + C13578 - C13579) * C16961 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C50328 +
           ((C10558 - C10559 + C10560 - C10561) * C16960 +
            (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
            C13617 * C50250) *
               C50062) *
              C50118 * C1089 +
          (((C13577 - C13576 + C13579 - C13578) * C16960 +
            (C13581 - C13580 + C13583 - C13582) * C16955 +
            (C13588 - C13589 + C13590 - C13591) * C16961 +
            (C13592 - C13593 + C13594 - C13595) * C50250) *
               C50328 +
           (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
            C13621 * C50250) *
               C50062) *
              C50118 * C1090 +
          (((C13589 - C13588 + C13591 - C13590) * C16960 +
            (C13593 - C13592 + C13595 - C13594) * C16955 +
            (C14830 - C14831 + C14832 - C14833) * C16961 +
            (C14834 - C14835 + C14836 - C14837) * C50250) *
               C50328 +
           (C13622 * C16960 + C13623 * C16955 +
            (C13608 - C13609 + C13610 - C13611) * C16961 +
            (C13612 - C13613 + C13614 - C13615) * C50250) *
               C50062) *
              C50118 * C1091 +
          (((C14831 - C14830 + C14833 - C14832) * C16960 +
            (C14835 - C14834 + C14837 - C14836) * C16955 +
            (C10555 * C2436 - C50357 * C2439 + C10556 * C4090 -
             C50278 * C4092) *
                C16961 +
            (C10555 * C2440 - C50357 * C2445 + C10556 * C4093 -
             C50278 * C4096) *
                C50250) *
               C50328 +
           ((C13609 - C13608 + C13611 - C13610) * C16960 +
            (C13613 - C13612 + C13615 - C13614) * C16955 +
            (C10555 * C2437 - C50357 * C2441 + C10556 * C4091 -
             C50278 * C4094) *
                C16961 +
            (C10555 * C2442 - C50357 * C2446 + C10556 * C4095 -
             C50278 * C4097) *
                C50250) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                  C16960 +
              (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                  C16955 +
              (C13576 - C13577 + C13578 - C13579) * C16961 +
              (C13580 - C13581 + C13582 - C13583) * C50250) *
                 C50328 +
             ((C10558 - C10559 + C10560 - C10561) * C16960 +
              (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
              C13617 * C50250) *
                 C50062) *
                C1669 +
            (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                  C16960 +
              (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                  C16955 +
              (C14478 - C14479 + C14480 - C14481) * C16961 +
              (C14482 - C14483 + C14484 - C14485) * C50250) *
                 C50328 +
             ((C10932 - C10933 + C10934 - C10935) * C16960 +
              (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
              C14503 * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C13577 - C13576 + C13579 - C13578) * C16960 +
              (C13581 - C13580 + C13583 - C13582) * C16955 +
              (C13588 - C13589 + C13590 - C13591) * C16961 +
              (C13592 - C13593 + C13594 - C13595) * C50250) *
                 C50328 +
             (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
              C13621 * C50250) *
                 C50062) *
                C1669 +
            (((C14479 - C14478 + C14481 - C14480) * C16960 +
              (C14483 - C14482 + C14485 - C14484) * C16955 +
              (C15686 - C15687 + C15688 - C15689) * C16961 +
              (C15690 - C15691 + C15692 - C15693) * C50250) *
                 C50328 +
             (C14504 * C16960 + C14505 * C16955 +
              (C14494 - C14495 + C14496 - C14497) * C16961 +
              (C14498 - C14499 + C14500 - C14501) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C10559 - C10558 + C10561 - C10560) * C16960 +
              (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
              C13619 * C50250) *
                 C50328 +
             ((C10567 - C10566 + C10569 - C10568) * C16960 +
              (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
              C11123 * C50250) *
                 C50062) *
                C1669 +
            (((C10933 - C10932 + C10935 - C10934) * C16960 +
              (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
              C14505 * C50250) *
                 C50328 +
             ((C10941 - C10940 + C10943 - C10942) * C16960 +
              (C10945 - C10944 + C10947 - C10946) * C16955 +
              (C11492 - C11493 + C11494 - C11495) * C16961 +
              (C11496 - C11497 + C11498 - C11499) * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           (((C13616 * C16960 + C13617 * C16955 + C13622 * C16961 +
              C13623 * C50250) *
                 C50328 +
             (C14024 * C16960 + C14025 * C16955 +
              (C10778 - C10779 + C10780 - C10781) * C16961 +
              (C10782 - C10783 + C10784 - C10785) * C50250) *
                 C50062) *
                C1669 +
            ((C14502 * C16960 + C14503 * C16955 +
              (C14495 - C14494 + C14497 - C14496) * C16961 +
              (C14499 - C14498 + C14501 - C14500) * C50250) *
                 C50328 +
             ((C11493 - C11492 + C11495 - C11494) * C16960 +
              (C11497 - C11496 + C11499 - C11498) * C16955 +
              (C10555 * C1557 - C50357 * C1563 + C10556 * C2636 -
               C50278 * C2641) *
                  C16961 +
              (C10555 * C1564 - C50357 * C1569 + C10556 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50390 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50391 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C16960 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C16955 +
             (C15032 - C15033 + C15034 - C15035) * C16961 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C50328 +
            ((C10948 - C10949 + C10950 - C10951) * C16960 +
             (C10952 - C10953 + C10954 - C10955) * C16955 +
             (C13818 - C13819 + C13820 - C13821) * C16961 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C2085) *
              C50343 +
          ((((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C50390 +
           (((C14479 - C14478 + C14481 - C14480) * C16960 +
             (C14483 - C14482 + C14485 - C14484) * C16955 +
             (C15686 - C15687 + C15688 - C15689) * C16961 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C50328 +
            (C14504 * C16960 + C14505 * C16955 +
             (C14494 - C14495 + C14496 - C14497) * C16961 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50391 +
           (((C15033 - C15032 + C15035 - C15034) * C16960 +
             (C15037 - C15036 + C15039 - C15038) * C16955 +
             (C10555 * C2634 - C50357 * C2637 + C10556 * C4495 -
              C50278 * C4500) *
                 C16961 +
             (C10555 * C2638 - C50357 * C2643 + C10556 * C4501 -
              C50278 * C4507) *
                 C50250) *
                C50328 +
            ((C13819 - C13818 + C13821 - C13820) * C16960 +
             (C13823 - C13822 + C13825 - C13824) * C16955 +
             (C10555 * C2635 - C50357 * C2639 + C10556 * C4497 -
              C50278 * C4504) *
                 C16961 +
             (C10555 * C2640 - C50357 * C2644 + C10556 * C4505 -
              C50278 * C4509) *
                 C50250) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C285 +
          ((((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C1669 +
           (((C14479 - C14478 + C14481 - C14480) * C16960 +
             (C14483 - C14482 + C14485 - C14484) * C16955 +
             (C15686 - C15687 + C15688 - C15689) * C16961 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C50328 +
            (C14504 * C16960 + C14505 * C16955 +
             (C14494 - C14495 + C14496 - C14497) * C16961 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50182) *
              C286 +
          ((((C13589 - C13588 + C13591 - C13590) * C16960 +
             (C13593 - C13592 + C13595 - C13594) * C16955 +
             (C14830 - C14831 + C14832 - C14833) * C16961 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C50328 +
            (C13622 * C16960 + C13623 * C16955 +
             (C13608 - C13609 + C13610 - C13611) * C16961 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C1669 +
           (((C15687 - C15686 + C15689 - C15688) * C16960 +
             (C15691 - C15690 + C15693 - C15692) * C16955 +
             (C10555 * C3152 - C50357 * C3155 + C10556 * C3588 -
              C50278 * C3590) *
                 C16961 +
             (C10555 * C3156 - C50357 * C3161 + C10556 * C3591 -
              C50278 * C3594) *
                 C50250) *
                C50328 +
            ((C14495 - C14494 + C14497 - C14496) * C16960 +
             (C14499 - C14498 + C14501 - C14500) * C16955 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C16961 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C1669 +
           (((C10933 - C10932 + C10935 - C10934) * C16960 +
             (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
             C14505 * C50250) *
                C50328 +
            ((C10941 - C10940 + C10943 - C10942) * C16960 +
             (C10945 - C10944 + C10947 - C10946) * C16955 +
             (C11492 - C11493 + C11494 - C11495) * C16961 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
             C14025 * C50250) *
                C50328 +
            ((C10575 - C10574 + C10577 - C10576) * C16960 +
             (C10579 - C10578 + C10581 - C10580) * C16955 +
             (C11114 - C11115 + C11116 - C11117) * C16961 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C1669 +
           ((C11285 * C16960 + C11286 * C16955 +
             (C11493 - C11492 + C11495 - C11494) * C16961 +
             (C11497 - C11496 + C11499 - C11498) * C50250) *
                C50328 +
            ((C11278 - C11277 + C11280 - C11279) * C16960 +
             (C11282 - C11281 + C11284 - C11283) * C16955 +
             (C10555 * C891 - C50357 * C899 + C10556 * C1211 - C50278 * C1218) *
                 C16961 +
             (C10555 * C900 - C50357 * C906 + C10556 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                C16960 +
            (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                C16955 +
            (C13576 - C13577 + C13578 - C13579) * C16961 +
            (C13580 - C13581 + C13582 - C13583) * C50250) *
               C50328 +
           ((C10558 - C10559 + C10560 - C10561) * C16960 +
            (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
            C13617 * C50250) *
               C50062) *
              C1835 +
          (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                C16960 +
            (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                C16955 +
            (C14478 - C14479 + C14480 - C14481) * C16961 +
            (C14482 - C14483 + C14484 - C14485) * C50250) *
               C50328 +
           ((C10932 - C10933 + C10934 - C10935) * C16960 +
            (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
            C14503 * C50250) *
               C50062) *
              C1836 +
          (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                C16960 +
            (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                C16955 +
            (C15032 - C15033 + C15034 - C15035) * C16961 +
            (C15036 - C15037 + C15038 - C15039) * C50250) *
               C50328 +
           ((C10948 - C10949 + C10950 - C10951) * C16960 +
            (C10952 - C10953 + C10954 - C10955) * C16955 +
            (C13818 - C13819 + C13820 - C13821) * C16961 +
            (C13822 - C13823 + C13824 - C13825) * C50250) *
               C50062) *
              C1837 +
          (((C10555 * C1839 - C50357 * C1843 + C10556 * C5452 -
             C50278 * C5455) *
                C16960 +
            (C10555 * C1844 - C50357 * C1851 + C10556 * C5456 -
             C50278 * C5461) *
                C16955 +
            (C10555 * C4494 - C50357 * C4498 + C10556 * C6404 -
             C50278 * C6406) *
                C16961 +
            (C10555 * C4499 - C50357 * C4506 + C10556 * C6407 -
             C50278 * C6410) *
                C50250) *
               C50328 +
           ((C10555 * C1840 - C50357 * C1845 + C10556 * C5453 -
             C50278 * C5457) *
                C16960 +
            (C10555 * C1846 - C50357 * C1852 + C10556 * C5458 -
             C50278 * C5462) *
                C16955 +
            (C10555 * C4496 - C50357 * C4502 + C10556 * C6405 -
             C50278 * C6408) *
                C16961 +
            (C10555 * C4503 - C50357 * C4508 + C10556 * C6409 -
             C50278 * C6411) *
                C50250) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C50390 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50391 +
           (((C50357 * C473 - C10555 * C459 + C50278 * C1843 - C10556 * C1839) *
                 C16960 +
             (C50357 * C489 - C10555 * C474 + C50278 * C1851 - C10556 * C1844) *
                 C16955 +
             (C15032 - C15033 + C15034 - C15035) * C16961 +
             (C15036 - C15037 + C15038 - C15039) * C50250) *
                C50328 +
            ((C10948 - C10949 + C10950 - C10951) * C16960 +
             (C10952 - C10953 + C10954 - C10955) * C16955 +
             (C13818 - C13819 + C13820 - C13821) * C16961 +
             (C13822 - C13823 + C13824 - C13825) * C50250) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C50390 +
           (((C10933 - C10932 + C10935 - C10934) * C16960 +
             (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
             C14505 * C50250) *
                C50328 +
            ((C10941 - C10940 + C10943 - C10942) * C16960 +
             (C10945 - C10944 + C10947 - C10946) * C16955 +
             (C11492 - C11493 + C11494 - C11495) * C16961 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50391 +
           (((C10949 - C10948 + C10951 - C10950) * C16960 +
             (C10953 - C10952 + C10955 - C10954) * C16955 +
             (C13819 - C13818 + C13821 - C13820) * C16961 +
             (C13823 - C13822 + C13825 - C13824) * C50250) *
                C50328 +
            ((C10957 - C10956 + C10959 - C10958) * C16960 +
             (C10961 - C10960 + C10963 - C10962) * C16955 +
             (C10555 * C1210 - C50357 * C1216 + C10556 * C5998 -
              C50278 * C5999) *
                 C16961 +
             (C10555 * C1217 - C50357 * C1222 + C10556 * C6000 -
              C50278 * C6001) *
                 C50250) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C10559 - C10558 + C10561 - C10560) * C16960 +
             (C10563 - C10562 + C10565 - C10564) * C16955 + C13618 * C16961 +
             C13619 * C50250) *
                C50328 +
            ((C10567 - C10566 + C10569 - C10568) * C16960 +
             (C10571 - C10570 + C10573 - C10572) * C16955 + C11122 * C16961 +
             C11123 * C50250) *
                C50062) *
               C1669 +
           (((C10933 - C10932 + C10935 - C10934) * C16960 +
             (C10937 - C10936 + C10939 - C10938) * C16955 + C14504 * C16961 +
             C14505 * C50250) *
                C50328 +
            ((C10941 - C10940 + C10943 - C10942) * C16960 +
             (C10945 - C10944 + C10947 - C10946) * C16955 +
             (C11492 - C11493 + C11494 - C11495) * C16961 +
             (C11496 - C11497 + C11498 - C11499) * C50250) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C10598 * C16960 + C10599 * C16955 + C14024 * C16961 +
             C14025 * C50250) *
                C50328 +
            ((C10575 - C10574 + C10577 - C10576) * C16960 +
             (C10579 - C10578 + C10581 - C10580) * C16955 +
             (C11114 - C11115 + C11116 - C11117) * C16961 +
             (C11118 - C11119 + C11120 - C11121) * C50250) *
                C50062) *
               C1669 +
           ((C11285 * C16960 + C11286 * C16955 +
             (C11493 - C11492 + C11495 - C11494) * C16961 +
             (C11497 - C11496 + C11499 - C11498) * C50250) *
                C50328 +
            ((C11278 - C11277 + C11280 - C11279) * C16960 +
             (C11282 - C11281 + C11284 - C11283) * C16955 +
             (C10555 * C891 - C50357 * C899 + C10556 * C1211 - C50278 * C1218) *
                 C16961 +
             (C10555 * C900 - C50357 * C906 + C10556 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50357 * C126 - C10555 * C119 + C50278 * C465 - C10556 * C455) *
                 C16960 +
             (C50357 * C140 - C10555 * C127 + C50278 * C485 - C10556 * C466) *
                 C16955 +
             (C13576 - C13577 + C13578 - C13579) * C16961 +
             (C13580 - C13581 + C13582 - C13583) * C50250) *
                C50328 +
            ((C10558 - C10559 + C10560 - C10561) * C16960 +
             (C10562 - C10563 + C10564 - C10565) * C16955 + C13616 * C16961 +
             C13617 * C50250) *
                C50062) *
               C1669 +
           (((C10555 * C455 - C50357 * C465 + C10556 * C459 - C50278 * C473) *
                 C16960 +
             (C10555 * C466 - C50357 * C485 + C10556 * C474 - C50278 * C489) *
                 C16955 +
             (C14478 - C14479 + C14480 - C14481) * C16961 +
             (C14482 - C14483 + C14484 - C14485) * C50250) *
                C50328 +
            ((C10932 - C10933 + C10934 - C10935) * C16960 +
             (C10936 - C10937 + C10938 - C10939) * C16955 + C14502 * C16961 +
             C14503 * C50250) *
                C50062) *
               C50182) *
              C285 +
          ((((C13577 - C13576 + C13579 - C13578) * C16960 +
             (C13581 - C13580 + C13583 - C13582) * C16955 +
             (C13588 - C13589 + C13590 - C13591) * C16961 +
             (C13592 - C13593 + C13594 - C13595) * C50250) *
                C50328 +
            (C13618 * C16960 + C13619 * C16955 + C13620 * C16961 +
             C13621 * C50250) *
                C50062) *
               C1669 +
           (((C14479 - C14478 + C14481 - C14480) * C16960 +
             (C14483 - C14482 + C14485 - C14484) * C16955 +
             (C15686 - C15687 + C15688 - C15689) * C16961 +
             (C15690 - C15691 + C15692 - C15693) * C50250) *
                C50328 +
            (C14504 * C16960 + C14505 * C16955 +
             (C14494 - C14495 + C14496 - C14497) * C16961 +
             (C14498 - C14499 + C14500 - C14501) * C50250) *
                C50062) *
               C50182) *
              C286 +
          ((((C13589 - C13588 + C13591 - C13590) * C16960 +
             (C13593 - C13592 + C13595 - C13594) * C16955 +
             (C14830 - C14831 + C14832 - C14833) * C16961 +
             (C14834 - C14835 + C14836 - C14837) * C50250) *
                C50328 +
            (C13622 * C16960 + C13623 * C16955 +
             (C13608 - C13609 + C13610 - C13611) * C16961 +
             (C13612 - C13613 + C13614 - C13615) * C50250) *
                C50062) *
               C1669 +
           (((C15687 - C15686 + C15689 - C15688) * C16960 +
             (C15691 - C15690 + C15693 - C15692) * C16955 +
             (C10555 * C3152 - C50357 * C3155 + C10556 * C3588 -
              C50278 * C3590) *
                 C16961 +
             (C10555 * C3156 - C50357 * C3161 + C10556 * C3591 -
              C50278 * C3594) *
                 C50250) *
                C50328 +
            ((C14495 - C14494 + C14497 - C14496) * C16960 +
             (C14499 - C14498 + C14501 - C14500) * C16955 +
             (C10555 * C3153 - C50357 * C3157 + C10556 * C3589 -
              C50278 * C3592) *
                 C16961 +
             (C10555 * C3158 - C50357 * C3162 + C10556 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C50343 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50154) *
              C50386 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C50343 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50154) *
              C50387 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50118 * C50343 +
           (C17421 * C16957 +
            (C629 * C16960 + C630 * C16955 + (C352 - C351) * C16961 +
             (C354 - C353) * C50250) *
                C16958 +
            ((C632 - C631) * C16960 + (C634 - C633) * C16955 +
             (C117 * C299 - C50214 * C318) * C16961 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C16959) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C50343 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C50343 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50154) *
              C50387 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50118 * C50343 +
           (C627 * C19591 + C628 * C19586 + C2477 * C19592 + C2478 * C19587 +
            (C2480 - C2479) * C19593 + (C2482 - C2481) * C19588 +
            (C117 * C2438 - C50214 * C2443) * C19594 +
            (C117 * C2444 - C50214 * C2447) * C19589) *
               C50057 * C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C16960 +
              (C50214 * C140 - C117 * C127) * C16955 +
              (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                 C16957 +
             ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
              C2458 * C50250) *
                 C16958 +
             C16975 * C16959) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C16960 +
              (C117 * C466 - C50214 * C485) * C16955 +
              (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                 C16957 +
             ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
              C3174 * C50250) *
                 C16958 +
             C17574 * C16959) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
              (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                 C16957 +
             (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
              C2468 * C50250) *
                 C16958 +
             C17421 * C16959) *
                C50344 +
            (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
              (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                 C16957 +
             (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
              C3180 * C50250) *
                 C16958 +
             (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
              (C2957 - C2958) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C288 +
          (((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
              C2466 * C50250) *
                 C16957 +
             ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
              C628 * C50250) *
                 C16958 +
             C16976 * C16959) *
                C50344 +
            (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
              C3178 * C50250) *
                 C16957 +
             ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
              C8703 * C50250) *
                 C16958 +
             ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
              (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                 C16959) *
                C50182) *
               C50343 +
           (((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
              C2460 * C50250) *
                 C16957 +
             (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
              C2808 * C50250) *
                 C16958 +
             (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
              (C353 - C354) * C50250) *
                 C16959) *
                C50344 +
            ((C3173 * C16960 + C3174 * C16955 + C3175 * C16961 +
              C3176 * C50250) *
                 C16957 +
             (C8501 * C16960 + C8502 * C16955 + (C2956 - C2955) * C16961 +
              (C2958 - C2957) * C50250) *
                 C16958 +
             ((C918 - C917) * C16960 + (C920 - C919) * C16955 +
              (C117 * C1558 - C50214 * C1565) * C16961 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C19591 +
             (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
             (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
             C19694 * C19594 + C19695 * C19589) *
                C50057 * C50344 +
            ((C117 * C455 - C50214 * C465) * C19591 +
             (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
             (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
             (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
                C50057 * C50182) *
               C50343 +
           (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
             (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
             C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
             (C3442 - C3441) * C19589) *
                C50057 * C50344 +
            ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
             (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
             (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
             (C50214 * C4092 - C117 * C4090) * C19594 +
             (C50214 * C4096 - C117 * C4093) * C19589) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
             C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
             C2486 * C19589) *
                C50057 * C50344 +
            ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
             C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
             (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
                C50057 * C50182) *
               C50343 +
           ((C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
             C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
             (C2475 - C2476) * C19589) *
                C50057 * C50344 +
            (C3173 * C19591 + C3174 * C19586 + C3175 * C19592 + C3176 * C19587 +
             (C3182 - C3181) * C19593 + (C3184 - C3183) * C19588 +
             (C117 * C4091 - C50214 * C4094) * C19594 +
             (C117 * C4095 - C50214 * C4097) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C285 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            (C627 * C16960 + C628 * C16955 + C2477 * C16961 + C2478 * C50250) *
                C16959) *
               C50118 * C286 +
           ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C285 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C286 +
           ((C2467 * C16960 + C2468 * C16955 + C2485 * C16961 +
             C2486 * C50250) *
                C16957 +
            (C2477 * C16960 + C2478 * C16955 + (C2480 - C2479) * C16961 +
             (C2482 - C2481) * C50250) *
                C16958 +
            ((C352 - C351) * C16960 + (C354 - C353) * C16955 +
             (C117 * C1097 - C50214 * C1104) * C16961 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C16959) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
            C2466 * C50250) *
               C16957 +
           ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
            C628 * C50250) *
               C16958 +
           C16976 * C16959) *
              C50118 * C50102 * C114 +
          (C16975 * C16957 +
           (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
               C16958 +
           ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
            (C631 - C632) * C16961 + (C633 - C634) * C50250) *
               C16959) *
              C50118 * C50102 * C115 +
          (C16976 * C16957 +
           (C174 * C16960 + C175 * C16955 + (C632 - C631) * C16961 +
            (C634 - C633) * C50250) *
               C16958 +
           ((C165 - C164) * C16960 + (C167 - C166) * C16955 +
            (C117 * C622 - C50214 * C623) * C16961 +
            (C117 * C624 - C50214 * C625) * C50250) *
               C16959) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            (C745 * C16960 + C746 * C16955 + C8501 * C16961 + C8502 * C50250) *
                C16959) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C454) *
              C50102 * C288 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C452 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C453 +
           (((C509 - C508) * C16960 + (C511 - C510) * C16955 +
             (C2652 - C2651) * C16961 + (C2654 - C2653) * C50250) *
                C16957 +
            ((C513 - C512) * C16960 + (C515 - C514) * C16955 +
             (C8195 - C8194) * C16961 + (C8197 - C8196) * C50250) *
                C16958 +
            ((C517 - C516) * C16960 + (C519 - C518) * C16955 +
             (C117 * C1211 - C50214 * C1218) * C16961 +
             (C117 * C1219 - C50214 * C1223) * C50250) *
                C16959) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           (C2462 - C2461) * C19594 + (C2464 - C2463) * C19589) *
              C50057 * C50118 * C50102 * C113 +
          ((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
           C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
           C2486 * C19589) *
              C50057 * C50118 * C50102 * C114 +
          (C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
           C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
           (C2481 - C2482) * C19589) *
              C50057 * C50118 * C50102 * C115 +
          (C172 * C19591 + C173 * C19586 + C629 * C19592 + C630 * C19587 +
           (C352 - C351) * C19593 + (C354 - C353) * C19588 +
           (C117 * C1097 - C50214 * C1104) * C19594 +
           (C117 * C1105 - C50214 * C1109) * C19589) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C285 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C286 +
           (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 +
            (C50214 * C3430 - C117 * C3428) * C19594 +
            (C50214 * C3434 - C117 * C3431) * C19589) *
               C50057 * C50118 * C287) *
              C288 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C285 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C286 +
           (C2467 * C19591 + C2468 * C19586 + C2485 * C19592 + C2486 * C19587 +
            (C2474 - C2473) * C19593 + (C2476 - C2475) * C19588 +
            (C117 * C3429 - C50214 * C3432) * C19594 +
            (C117 * C3433 - C50214 * C3435) * C19589) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C452 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
               C50057 * C453 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 +
            (C50214 * C3590 - C117 * C3588) * C19594 +
            (C50214 * C3594 - C117 * C3591) * C19589) *
               C50057 * C454) *
              C50102 * C288 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C452 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C453 +
           ((C509 - C508) * C19591 + (C511 - C510) * C19586 +
            (C2652 - C2651) * C19592 + (C2654 - C2653) * C19587 +
            (C2656 - C2655) * C19593 + (C2658 - C2657) * C19588 +
            (C117 * C3589 - C50214 * C3592) * C19594 +
            (C117 * C3593 - C50214 * C3595) * C19589) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50102 * C50386 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50344 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50182) *
              C50102 * C50387 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50344 +
           (C17574 * C16957 +
            (C747 * C16960 + C748 * C16955 + (C918 - C917) * C16961 +
             (C920 - C919) * C50250) *
                C16958 +
            ((C750 - C749) * C16960 + (C752 - C751) * C16955 +
             (C117 * C892 - C50214 * C901) * C16961 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C16959) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50344 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50344 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50182) *
              C50102 * C50387 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50344 +
           (C745 * C19591 + C746 * C19586 + C8501 * C19592 + C8502 * C19587 +
            (C2956 - C2955) * C19593 + (C2958 - C2957) * C19588 +
            (C117 * C3154 - C50214 * C3159) * C19594 +
            (C117 * C3160 - C50214 * C3163) * C19589) *
               C50057 * C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C50118 * C50102 * C113 +
          (((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
            C2466 * C50250) *
               C16957 +
           ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
            C628 * C50250) *
               C16958 +
           C16976 * C16959) *
              C50118 * C50102 * C114 +
          (C16975 * C16957 +
           (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
               C16958 +
           ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
            (C631 - C632) * C16961 + (C633 - C634) * C50250) *
               C16959) *
              C50118 * C50102 * C115 +
          (C16976 * C16957 +
           (C174 * C16960 + C175 * C16955 + (C632 - C631) * C16961 +
            (C634 - C633) * C50250) *
               C16958 +
           ((C165 - C164) * C16960 + (C167 - C166) * C16955 +
            (C117 * C622 - C50214 * C623) * C16961 +
            (C117 * C624 - C50214 * C625) * C50250) *
               C16959) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C285 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            (C627 * C16960 + C628 * C16955 + C2477 * C16961 + C2478 * C50250) *
                C16959) *
               C50118 * C286 +
           ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50118 * C287) *
              C288 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C285 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C286 +
           ((C2467 * C16960 + C2468 * C16955 + C2485 * C16961 +
             C2486 * C50250) *
                C16957 +
            (C2477 * C16960 + C2478 * C16955 + (C2480 - C2479) * C16961 +
             (C2482 - C2481) * C50250) *
                C16958 +
            ((C352 - C351) * C16960 + (C354 - C353) * C16955 +
             (C117 * C1097 - C50214 * C1104) * C16961 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C16959) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           (C2462 - C2461) * C19594 + (C2464 - C2463) * C19589) *
              C50057 * C50118 * C50102 * C113 +
          ((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
           C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
           C2486 * C19589) *
              C50057 * C50118 * C50102 * C114 +
          (C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
           C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
           (C2481 - C2482) * C19589) *
              C50057 * C50118 * C50102 * C115 +
          (C172 * C19591 + C173 * C19586 + C629 * C19592 + C630 * C19587 +
           (C352 - C351) * C19593 + (C354 - C353) * C19588 +
           (C117 * C1097 - C50214 * C1104) * C19594 +
           (C117 * C1105 - C50214 * C1109) * C19589) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C285 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C286 +
           (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 +
            (C50214 * C3430 - C117 * C3428) * C19594 +
            (C50214 * C3434 - C117 * C3431) * C19589) *
               C50057 * C50118 * C287) *
              C288 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C285 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C286 +
           (C2467 * C19591 + C2468 * C19586 + C2485 * C19592 + C2486 * C19587 +
            (C2474 - C2473) * C19593 + (C2476 - C2475) * C19588 +
            (C117 * C3429 - C50214 * C3432) * C19594 +
            (C117 * C3433 - C50214 * C3435) * C19589) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C50388 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50389 +
           ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50118 * C1324) *
              C50335 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C50388 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50389 +
           ((C2467 * C16960 + C2468 * C16955 + C2485 * C16961 +
             C2486 * C50250) *
                C16957 +
            (C2477 * C16960 + C2478 * C16955 + (C2480 - C2479) * C16961 +
             (C2482 - C2481) * C50250) *
                C16958 +
            ((C352 - C351) * C16960 + (C354 - C353) * C16955 +
             (C117 * C1097 - C50214 * C1104) * C16961 +
             (C117 * C1105 - C50214 * C1109) * C50250) *
                C16959) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C50388 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C50118 * C50389 +
           (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C50388 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50389 +
           (C2467 * C19591 + C2468 * C19586 + C2485 * C19592 + C2486 * C19587 +
            (C2474 - C2473) * C19593 + (C2476 - C2475) * C19588 +
            (C117 * C3429 - C50214 * C3432) * C19594 +
            (C117 * C3433 - C50214 * C3435) * C19589) *
               C50057 * C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50344 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50388 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50344 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50182) *
              C50389 +
          (((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C50344 +
           ((C4099 * C16960 + C4100 * C16955 + (C4102 - C4101) * C16961 +
             (C4104 - C4103) * C50250) *
                C16957 +
            (C3175 * C16960 + C3176 * C16955 + (C3182 - C3181) * C16961 +
             (C3184 - C3183) * C50250) *
                C16958 +
            ((C2956 - C2955) * C16960 + (C2958 - C2957) * C16955 +
             (C117 * C3154 - C50214 * C3159) * C16961 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C16959) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50344 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C50388 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C50344 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50182) *
              C50389 +
          ((C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C50344 +
           (C4099 * C19591 + C4100 * C19586 + C20730 * C19592 +
            C20731 * C19587 + (C20733 - C20732) * C19593 +
            (C20735 - C20734) * C19588 +
            (C117 * C20725 - C50214 * C20726) * C19594 +
            (C117 * C20727 - C50214 * C20728) * C19589) *
               C50057 * C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C50118 * C1089 +
          (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
            (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
               C16957 +
           (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 + C2468 * C50250) *
               C16958 +
           C17421 * C16959) *
              C50118 * C1090 +
          ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
            (C2464 - C2463) * C50250) *
               C16957 +
           (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 + C2488 * C50250) *
               C16958 +
           (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
            (C2481 - C2482) * C50250) *
               C16959) *
              C50118 * C1091 +
          ((C3437 * C16960 + C3438 * C16955 + (C3440 - C3439) * C16961 +
            (C3442 - C3441) * C50250) *
               C16957 +
           (C2485 * C16960 + C2486 * C16955 + (C2474 - C2473) * C16961 +
            (C2476 - C2475) * C50250) *
               C16958 +
           ((C2480 - C2479) * C16960 + (C2482 - C2481) * C16955 +
            (C117 * C2438 - C50214 * C2443) * C16961 +
            (C117 * C2444 - C50214 * C2447) * C50250) *
               C16959) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C1018 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C1018 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50154) *
              C1021 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50118 * C1018 +
           (C17421 * C16957 +
            (C629 * C16960 + C630 * C16955 + (C352 - C351) * C16961 +
             (C354 - C353) * C50250) *
                C16958 +
            ((C632 - C631) * C16960 + (C634 - C633) * C16955 +
             (C117 * C299 - C50214 * C318) * C16961 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C16959) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C452 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C453 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C454) *
              C1018 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C452 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C453 +
           (((C3598 - C3597) * C16960 + (C3600 - C3599) * C16955 +
             (C3602 - C3601) * C16961 + (C3604 - C3603) * C50250) *
                C16957 +
            ((C2652 - C2651) * C16960 + (C2654 - C2653) * C16955 +
             (C2656 - C2655) * C16961 + (C2658 - C2657) * C50250) *
                C16958 +
            ((C8195 - C8194) * C16960 + (C8197 - C8196) * C16955 +
             (C117 * C2636 - C50214 * C2641) * C16961 +
             (C117 * C2642 - C50214 * C2645) * C50250) *
                C16959) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C1018 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C1018 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50118 * C1018 +
           (C627 * C19591 + C628 * C19586 + C2477 * C19592 + C2478 * C19587 +
            (C2480 - C2479) * C19593 + (C2482 - C2481) * C19588 +
            (C117 * C2438 - C50214 * C2443) * C19594 +
            (C117 * C2444 - C50214 * C2447) * C19589) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           C19694 * C19594 + C19695 * C19589) *
              C50057 * C50118 * C1089 +
          ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
           (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
           C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
           C20289 * C19589) *
              C50057 * C50118 * C1090 +
          (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 + C19695 * C19587 +
           (C3439 - C3440) * C19593 + (C3441 - C3442) * C19588 +
           (C20290 - C20291) * C19594 + (C20292 - C20293) * C19589) *
              C50057 * C50118 * C1091 +
          (C3437 * C19591 + C3438 * C19586 + C20288 * C19592 + C20289 * C19587 +
           (C20291 - C20290) * C19593 + (C20293 - C20292) * C19588 +
           (C117 * C20283 - C50214 * C20284) * C19594 +
           (C117 * C20285 - C50214 * C20286) * C19589) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C452 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
               C50057 * C453 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
            (C20398 - C20399) * C19589) *
               C50057 * C454) *
              C1018 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C452 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C50214 * C4092 - C117 * C4090) * C19594 +
            (C50214 * C4096 - C117 * C4093) * C19589) *
               C50057 * C453 +
           ((C3598 - C3597) * C19591 + (C3600 - C3599) * C19586 +
            (C3602 - C3601) * C19592 + (C3604 - C3603) * C19587 +
            (C20397 - C20396) * C19593 + (C20399 - C20398) * C19588 +
            (C117 * C20391 - C50214 * C20392) * C19594 +
            (C117 * C20393 - C50214 * C20394) * C19589) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C16960 +
              (C50214 * C140 - C117 * C127) * C16955 +
              (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                 C16957 +
             ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
              C2458 * C50250) *
                 C16958 +
             C16975 * C16959) *
                C50344 +
            (((C117 * C455 - C50214 * C465) * C16960 +
              (C117 * C466 - C50214 * C485) * C16955 +
              (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                 C16957 +
             ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
              C3174 * C50250) *
                 C16958 +
             C17574 * C16959) *
                C50182) *
               C1018 +
           ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
              (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                 C16957 +
             (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
              C2468 * C50250) *
                 C16958 +
             C17421 * C16959) *
                C50344 +
            (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
              (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                 C16957 +
             (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
              C3180 * C50250) *
                 C16958 +
             (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
              (C2957 - C2958) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
              C2466 * C50250) *
                 C16957 +
             ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
              C628 * C50250) *
                 C16958 +
             C16976 * C16959) *
                C50344 +
            (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
              C3178 * C50250) *
                 C16957 +
             ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
              C8703 * C50250) *
                 C16958 +
             ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
              (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                 C16959) *
                C50182) *
               C1018 +
           (((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
              C2460 * C50250) *
                 C16957 +
             (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
              C2808 * C50250) *
                 C16958 +
             (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
              (C353 - C354) * C50250) *
                 C16959) *
                C50344 +
            ((C3173 * C16960 + C3174 * C16955 + C3175 * C16961 +
              C3176 * C50250) *
                 C16957 +
             (C8501 * C16960 + C8502 * C16955 + (C2956 - C2955) * C16961 +
              (C2958 - C2957) * C50250) *
                 C16958 +
             ((C918 - C917) * C16960 + (C920 - C919) * C16955 +
              (C117 * C1558 - C50214 * C1565) * C16961 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C19591 +
             (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
             (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
             C19694 * C19594 + C19695 * C19589) *
                C50057 * C50344 +
            ((C117 * C455 - C50214 * C465) * C19591 +
             (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
             (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
             (C4102 - C4101) * C19594 + (C4104 - C4103) * C19589) *
                C50057 * C50182) *
               C1018 +
           (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
             (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
             C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
             C20289 * C19589) *
                C50057 * C50344 +
            ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
             (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
             (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
             (C50214 * C4092 - C117 * C4090) * C19594 +
             (C50214 * C4096 - C117 * C4093) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
             C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
             C2486 * C19589) *
                C50057 * C50344 +
            ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
             C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
             (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
                C50057 * C50182) *
               C1018 +
           ((C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
             C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
             (C2475 - C2476) * C19589) *
                C50057 * C50344 +
            (C3173 * C19591 + C3174 * C19586 + C3175 * C19592 + C3176 * C19587 +
             (C3182 - C3181) * C19593 + (C3184 - C3183) * C19588 +
             (C117 * C4091 - C50214 * C4094) * C19594 +
             (C117 * C4095 - C50214 * C4097) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50118 * C1018 +
           (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50118 * C50154) *
              C1020 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50118 * C1018 +
           ((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
             C2460 * C50250) *
                C16957 +
            (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
             C2808 * C50250) *
                C16958 +
            (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
             (C353 - C354) * C50250) *
                C16959) *
               C50118 * C50154) *
              C1021 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C50118 * C1018 +
           (C17421 * C16957 +
            (C629 * C16960 + C630 * C16955 + (C352 - C351) * C16961 +
             (C354 - C353) * C50250) *
                C16958 +
            ((C632 - C631) * C16960 + (C634 - C633) * C16955 +
             (C117 * C299 - C50214 * C318) * C16961 +
             (C117 * C319 - C50214 * C329) * C50250) *
                C16959) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C50118 * C1089 +
          (((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
            (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
               C16957 +
           (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 + C2468 * C50250) *
               C16958 +
           C17421 * C16959) *
              C50118 * C1090 +
          ((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
            (C2464 - C2463) * C50250) *
               C16957 +
           (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 + C2488 * C50250) *
               C16958 +
           (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
            (C2481 - C2482) * C50250) *
               C16959) *
              C50118 * C1091 +
          ((C3437 * C16960 + C3438 * C16955 + (C3440 - C3439) * C16961 +
            (C3442 - C3441) * C50250) *
               C16957 +
           (C2485 * C16960 + C2486 * C16955 + (C2474 - C2473) * C16961 +
            (C2476 - C2475) * C50250) *
               C16958 +
           ((C2480 - C2479) * C16960 + (C2482 - C2481) * C16955 +
            (C117 * C2438 - C50214 * C2443) * C16961 +
            (C117 * C2444 - C50214 * C2447) * C50250) *
               C16959) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50118 * C1018 +
           ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + (C3440 - C3439) * C19594 +
            (C3442 - C3441) * C19589) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50118 * C1018 +
           (C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
            C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
            (C2475 - C2476) * C19589) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C50118 * C1018 +
           (C627 * C19591 + C628 * C19586 + C2477 * C19592 + C2478 * C19587 +
            (C2480 - C2479) * C19593 + (C2482 - C2481) * C19588 +
            (C117 * C2438 - C50214 * C2443) * C19594 +
            (C117 * C2444 - C50214 * C2447) * C19589) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           C19694 * C19594 + C19695 * C19589) *
              C50057 * C50118 * C1089 +
          ((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
           (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
           C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
           C20289 * C19589) *
              C50057 * C50118 * C1090 +
          (C2483 * C19591 + C2484 * C19586 + C19694 * C19592 + C19695 * C19587 +
           (C3439 - C3440) * C19593 + (C3441 - C3442) * C19588 +
           (C20290 - C20291) * C19594 + (C20292 - C20293) * C19589) *
              C50057 * C50118 * C1091 +
          (C3437 * C19591 + C3438 * C19586 + C20288 * C19592 + C20289 * C19587 +
           (C20291 - C20290) * C19593 + (C20293 - C20292) * C19588 +
           (C117 * C20283 - C50214 * C20284) * C19594 +
           (C117 * C20285 - C50214 * C20286) * C19589) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50214 * C126 - C117 * C119) * C16960 +
              (C50214 * C140 - C117 * C127) * C16955 +
              (C2449 - C2450) * C16961 + (C2451 - C2452) * C50250) *
                 C16957 +
             ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
              C2458 * C50250) *
                 C16958 +
             C16975 * C16959) *
                C1669 +
            (((C117 * C455 - C50214 * C465) * C16960 +
              (C117 * C466 - C50214 * C485) * C16955 +
              (C3165 - C3166) * C16961 + (C3167 - C3168) * C50250) *
                 C16957 +
             ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
              C3174 * C50250) *
                 C16958 +
             C17574 * C16959) *
                C50182) *
               C50343 +
           ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
              (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                 C16957 +
             (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
              C2468 * C50250) *
                 C16958 +
             C17421 * C16959) *
                C1669 +
            (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
              (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                 C16957 +
             (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
              C3180 * C50250) *
                 C16958 +
             (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
              (C2957 - C2958) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
              C2466 * C50250) *
                 C16957 +
             ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
              C628 * C50250) *
                 C16958 +
             C16976 * C16959) *
                C1669 +
            (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
              C3178 * C50250) *
                 C16957 +
             ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
              C8703 * C50250) *
                 C16958 +
             ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
              (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                 C16959) *
                C50182) *
               C50343 +
           (((C2457 * C16960 + C2458 * C16955 + C2459 * C16961 +
              C2460 * C50250) *
                 C16957 +
             (C2805 * C16960 + C2806 * C16955 + C2807 * C16961 +
              C2808 * C50250) *
                 C16958 +
             (C8348 * C16960 + C8349 * C16955 + (C351 - C352) * C16961 +
              (C353 - C354) * C50250) *
                 C16959) *
                C1669 +
            ((C3173 * C16960 + C3174 * C16955 + C3175 * C16961 +
              C3176 * C50250) *
                 C16957 +
             (C8501 * C16960 + C8502 * C16955 + (C2956 - C2955) * C16961 +
              (C2958 - C2957) * C50250) *
                 C16958 +
             ((C918 - C917) * C16960 + (C920 - C919) * C16955 +
              (C117 * C1558 - C50214 * C1565) * C16961 +
              (C117 * C1566 - C50214 * C1570) * C50250) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C19591 +
             (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
             (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
             C19694 * C19594 + C19695 * C19589) *
                C50057 * C1669 +
            ((C117 * C455 - C50214 * C465) * C19591 +
             (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
             (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
             C20730 * C19594 + C20731 * C19589) *
                C50057 * C50182) *
               C50343 +
           (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
             (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
             C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
             C20289 * C19589) *
                C50057 * C1669 +
            ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
             (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
             (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
             (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
             C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
             C2486 * C19589) *
                C50057 * C1669 +
            ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
             C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
             (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
                C50057 * C50182) *
               C50343 +
           ((C2457 * C19591 + C2458 * C19586 + C2459 * C19592 + C2460 * C19587 +
             C2487 * C19593 + C2488 * C19588 + (C2473 - C2474) * C19594 +
             (C2475 - C2476) * C19589) *
                C50057 * C1669 +
            (C3173 * C19591 + C3174 * C19586 + C3175 * C19592 + C3176 * C19587 +
             (C3182 - C3181) * C19593 + (C3184 - C3183) * C19588 +
             (C117 * C4091 - C50214 * C4094) * C19594 +
             (C117 * C4095 - C50214 * C4097) * C19589) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C2085) *
              C50343 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C50390 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50391 +
           (((C3598 - C3597) * C16960 + (C3600 - C3599) * C16955 +
             (C3602 - C3601) * C16961 + (C3604 - C3603) * C50250) *
                C16957 +
            ((C2652 - C2651) * C16960 + (C2654 - C2653) * C16955 +
             (C2656 - C2655) * C16961 + (C2658 - C2657) * C50250) *
                C16958 +
            ((C8195 - C8194) * C16960 + (C8197 - C8196) * C16955 +
             (C117 * C2636 - C50214 * C2641) * C16961 +
             (C117 * C2642 - C50214 * C2645) * C50250) *
                C16959) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50390 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50391 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
            (C20398 - C20399) * C19589) *
               C50057 * C2085) *
              C50343 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C50390 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50391 +
           ((C3598 - C3597) * C19591 + (C3600 - C3599) * C19586 +
            (C3602 - C3601) * C19592 + (C3604 - C3603) * C19587 +
            (C20397 - C20396) * C19593 + (C20399 - C20398) * C19588 +
            (C117 * C20391 - C50214 * C20392) * C19594 +
            (C117 * C20393 - C50214 * C20394) * C19589) *
               C50057 * C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C1669 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50182) *
              C286 +
          (((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C1669 +
           ((C4099 * C16960 + C4100 * C16955 + (C4102 - C4101) * C16961 +
             (C4104 - C4103) * C50250) *
                C16957 +
            (C3175 * C16960 + C3176 * C16955 + (C3182 - C3181) * C16961 +
             (C3184 - C3183) * C50250) *
                C16958 +
            ((C2956 - C2955) * C16960 + (C2958 - C2957) * C16955 +
             (C117 * C3154 - C50214 * C3159) * C16961 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C16959) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C1669 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50182) *
              C50102 * C1021 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C1669 +
           (C17574 * C16957 +
            (C747 * C16960 + C748 * C16955 + (C918 - C917) * C16961 +
             (C920 - C919) * C50250) *
                C16958 +
            ((C750 - C749) * C16960 + (C752 - C751) * C16955 +
             (C117 * C892 - C50214 * C901) * C16961 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C16959) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C16960 +
            (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
            (C2451 - C2452) * C50250) *
               C16957 +
           ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
            C2458 * C50250) *
               C16958 +
           C16975 * C16959) *
              C1835 +
          (((C117 * C455 - C50214 * C465) * C16960 +
            (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
            (C3167 - C3168) * C50250) *
               C16957 +
           ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
            C3174 * C50250) *
               C16958 +
           C17574 * C16959) *
              C1836 +
          (((C50214 * C473 - C117 * C459) * C16960 +
            (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
            (C3599 - C3600) * C50250) *
               C16957 +
           ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
            (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
               C16958 +
           ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
            (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
               C16959) *
              C1837 +
          (((C117 * C1839 - C50214 * C1843) * C16960 +
            (C117 * C1844 - C50214 * C1851) * C16955 +
            (C117 * C4494 - C50214 * C4498) * C16961 +
            (C117 * C4499 - C50214 * C4506) * C50250) *
               C16957 +
           ((C117 * C1840 - C50214 * C1845) * C16960 +
            (C117 * C1846 - C50214 * C1852) * C16955 +
            (C117 * C4496 - C50214 * C4502) * C16961 +
            (C117 * C4503 - C50214 * C4508) * C50250) *
               C16958 +
           ((C117 * C1841 - C50214 * C1847) * C16960 +
            (C117 * C1848 - C50214 * C1853) * C16955 +
            (C117 * C5998 - C50214 * C5999) * C16961 +
            (C117 * C6000 - C50214 * C6001) * C50250) *
               C16959) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C1669 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C1669 +
           (C745 * C19591 + C746 * C19586 + C8501 * C19592 + C8502 * C19587 +
            (C2956 - C2955) * C19593 + (C2958 - C2957) * C19588 +
            (C117 * C3154 - C50214 * C3159) * C19594 +
            (C117 * C3160 - C50214 * C3163) * C19589) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C285 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C1669 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50182) *
              C286 +
          ((C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C1669 +
           (C4099 * C19591 + C4100 * C19586 + C20730 * C19592 +
            C20731 * C19587 + (C20733 - C20732) * C19593 +
            (C20735 - C20734) * C19588 +
            (C117 * C20725 - C50214 * C20726) * C19594 +
            (C117 * C20727 - C50214 * C20728) * C19589) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50214 * C126 - C117 * C119) * C19591 +
           (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
           (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
           C19694 * C19594 + C19695 * C19589) *
              C50057 * C1835 +
          ((C117 * C455 - C50214 * C465) * C19591 +
           (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
           (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
           C20730 * C19594 + C20731 * C19589) *
              C50057 * C1836 +
          ((C50214 * C473 - C117 * C459) * C19591 +
           (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
           (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
           (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
           (C20398 - C20399) * C19589) *
              C50057 * C1837 +
          ((C117 * C1839 - C50214 * C1843) * C19591 +
           (C117 * C1844 - C50214 * C1851) * C19586 +
           (C117 * C4494 - C50214 * C4498) * C19592 +
           (C117 * C4499 - C50214 * C4506) * C19587 +
           (C117 * C4495 - C50214 * C4500) * C19593 +
           (C117 * C4501 - C50214 * C4507) * C19588 +
           (C117 * C20997 - C50214 * C20998) * C19594 +
           (C117 * C20999 - C50214 * C21000) * C19589) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C50390 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50391 +
           (((C50214 * C473 - C117 * C459) * C16960 +
             (C50214 * C489 - C117 * C474) * C16955 + (C3597 - C3598) * C16961 +
             (C3599 - C3600) * C50250) *
                C16957 +
            ((C508 - C509) * C16960 + (C510 - C511) * C16955 +
             (C2651 - C2652) * C16961 + (C2653 - C2654) * C50250) *
                C16958 +
            ((C512 - C513) * C16960 + (C514 - C515) * C16955 +
             (C8194 - C8195) * C16961 + (C8196 - C8197) * C50250) *
                C16959) *
               C2085) *
              C50102 * C50335 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C50390 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50391 +
           (((C509 - C508) * C16960 + (C511 - C510) * C16955 +
             (C2652 - C2651) * C16961 + (C2654 - C2653) * C50250) *
                C16957 +
            ((C513 - C512) * C16960 + (C515 - C514) * C16955 +
             (C8195 - C8194) * C16961 + (C8197 - C8196) * C50250) *
                C16958 +
            ((C517 - C516) * C16960 + (C519 - C518) * C16955 +
             (C117 * C1211 - C50214 * C1218) * C16961 +
             (C117 * C1219 - C50214 * C1223) * C50250) *
                C16959) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C50390 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50391 +
           ((C50214 * C473 - C117 * C459) * C19591 +
            (C50214 * C489 - C117 * C474) * C19586 + (C3597 - C3598) * C19592 +
            (C3599 - C3600) * C19587 + (C3601 - C3602) * C19593 +
            (C3603 - C3604) * C19588 + (C20396 - C20397) * C19594 +
            (C20398 - C20399) * C19589) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C50390 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50391 +
           ((C509 - C508) * C19591 + (C511 - C510) * C19586 +
            (C2652 - C2651) * C19592 + (C2654 - C2653) * C19587 +
            (C2656 - C2655) * C19593 + (C2658 - C2657) * C19588 +
            (C117 * C3589 - C50214 * C3592) * C19594 +
            (C117 * C3593 - C50214 * C3595) * C19589) *
               C50057 * C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C50102 * C1020 +
          ((((C149 - C148) * C16960 + (C151 - C150) * C16955 + C2465 * C16961 +
             C2466 * C50250) *
                C16957 +
            ((C153 - C152) * C16960 + (C155 - C154) * C16955 + C627 * C16961 +
             C628 * C50250) *
                C16958 +
            C16976 * C16959) *
               C1669 +
           (((C497 - C496) * C16960 + (C499 - C498) * C16955 + C3177 * C16961 +
             C3178 * C50250) *
                C16957 +
            ((C501 - C500) * C16960 + (C503 - C502) * C16955 + C8702 * C16961 +
             C8703 * C50250) *
                C16958 +
            ((C505 - C504) * C16960 + (C507 - C506) * C16955 +
             (C917 - C918) * C16961 + (C919 - C920) * C50250) *
                C16959) *
               C50182) *
              C50102 * C1021 +
          ((C16975 * C16957 +
            (C170 * C16960 + C171 * C16955 + C8348 * C16961 + C8349 * C50250) *
                C16958 +
            ((C161 - C160) * C16960 + (C163 - C162) * C16955 +
             (C631 - C632) * C16961 + (C633 - C634) * C50250) *
                C16959) *
               C1669 +
           (C17574 * C16957 +
            (C747 * C16960 + C748 * C16955 + (C918 - C917) * C16961 +
             (C920 - C919) * C50250) *
                C16958 +
            ((C750 - C749) * C16960 + (C752 - C751) * C16955 +
             (C117 * C892 - C50214 * C901) * C16961 +
             (C117 * C902 - C50214 * C907) * C50250) *
                C16959) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50214 * C126 - C117 * C119) * C16960 +
             (C50214 * C140 - C117 * C127) * C16955 + (C2449 - C2450) * C16961 +
             (C2451 - C2452) * C50250) *
                C16957 +
            ((C148 - C149) * C16960 + (C150 - C151) * C16955 + C2457 * C16961 +
             C2458 * C50250) *
                C16958 +
            C16975 * C16959) *
               C1669 +
           (((C117 * C455 - C50214 * C465) * C16960 +
             (C117 * C466 - C50214 * C485) * C16955 + (C3165 - C3166) * C16961 +
             (C3167 - C3168) * C50250) *
                C16957 +
            ((C496 - C497) * C16960 + (C498 - C499) * C16955 + C3173 * C16961 +
             C3174 * C50250) *
                C16958 +
            C17574 * C16959) *
               C50182) *
              C285 +
          ((((C2450 - C2449) * C16960 + (C2452 - C2451) * C16955 +
             (C2454 - C2453) * C16961 + (C2456 - C2455) * C50250) *
                C16957 +
            (C2465 * C16960 + C2466 * C16955 + C2467 * C16961 +
             C2468 * C50250) *
                C16958 +
            C17421 * C16959) *
               C1669 +
           (((C3166 - C3165) * C16960 + (C3168 - C3167) * C16955 +
             (C3170 - C3169) * C16961 + (C3172 - C3171) * C50250) *
                C16957 +
            (C3177 * C16960 + C3178 * C16955 + C3179 * C16961 +
             C3180 * C50250) *
                C16958 +
            (C8702 * C16960 + C8703 * C16955 + (C2955 - C2956) * C16961 +
             (C2957 - C2958) * C50250) *
                C16959) *
               C50182) *
              C286 +
          (((C2483 * C16960 + C2484 * C16955 + (C2462 - C2461) * C16961 +
             (C2464 - C2463) * C50250) *
                C16957 +
            (C2459 * C16960 + C2460 * C16955 + C2487 * C16961 +
             C2488 * C50250) *
                C16958 +
            (C2807 * C16960 + C2808 * C16955 + (C2479 - C2480) * C16961 +
             (C2481 - C2482) * C50250) *
                C16959) *
               C1669 +
           ((C4099 * C16960 + C4100 * C16955 + (C4102 - C4101) * C16961 +
             (C4104 - C4103) * C50250) *
                C16957 +
            (C3175 * C16960 + C3176 * C16955 + (C3182 - C3181) * C16961 +
             (C3184 - C3183) * C50250) *
                C16958 +
            ((C2956 - C2955) * C16960 + (C2958 - C2957) * C16955 +
             (C117 * C3154 - C50214 * C3159) * C16961 +
             (C117 * C3160 - C50214 * C3163) * C50250) *
                C16959) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C149 - C148) * C19591 + (C151 - C150) * C19586 + C2465 * C19592 +
            C2466 * C19587 + C2467 * C19593 + C2468 * C19588 + C2485 * C19594 +
            C2486 * C19589) *
               C50057 * C1669 +
           ((C497 - C496) * C19591 + (C499 - C498) * C19586 + C3177 * C19592 +
            C3178 * C19587 + C3179 * C19593 + C3180 * C19588 +
            (C3181 - C3182) * C19594 + (C3183 - C3184) * C19589) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C168 * C19591 + C169 * C19586 + C2805 * C19592 + C2806 * C19587 +
            C2807 * C19593 + C2808 * C19588 + (C2479 - C2480) * C19594 +
            (C2481 - C2482) * C19589) *
               C50057 * C1669 +
           (C745 * C19591 + C746 * C19586 + C8501 * C19592 + C8502 * C19587 +
            (C2956 - C2955) * C19593 + (C2958 - C2957) * C19588 +
            (C117 * C3154 - C50214 * C3159) * C19594 +
            (C117 * C3160 - C50214 * C3163) * C19589) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50214 * C126 - C117 * C119) * C19591 +
            (C50214 * C140 - C117 * C127) * C19586 + (C2449 - C2450) * C19592 +
            (C2451 - C2452) * C19587 + C2483 * C19593 + C2484 * C19588 +
            C19694 * C19594 + C19695 * C19589) *
               C50057 * C1669 +
           ((C117 * C455 - C50214 * C465) * C19591 +
            (C117 * C466 - C50214 * C485) * C19586 + (C3165 - C3166) * C19592 +
            (C3167 - C3168) * C19587 + C4099 * C19593 + C4100 * C19588 +
            C20730 * C19594 + C20731 * C19589) *
               C50057 * C50182) *
              C285 +
          (((C2450 - C2449) * C19591 + (C2452 - C2451) * C19586 +
            (C2454 - C2453) * C19592 + (C2456 - C2455) * C19587 +
            C3437 * C19593 + C3438 * C19588 + C20288 * C19594 +
            C20289 * C19589) *
               C50057 * C1669 +
           ((C3166 - C3165) * C19591 + (C3168 - C3167) * C19586 +
            (C3170 - C3169) * C19592 + (C3172 - C3171) * C19587 +
            (C4101 - C4102) * C19593 + (C4103 - C4104) * C19588 +
            (C20732 - C20733) * C19594 + (C20734 - C20735) * C19589) *
               C50057 * C50182) *
              C286 +
          ((C2483 * C19591 + C2484 * C19586 + C19694 * C19592 +
            C19695 * C19587 + (C3439 - C3440) * C19593 +
            (C3441 - C3442) * C19588 + (C20290 - C20291) * C19594 +
            (C20292 - C20293) * C19589) *
               C50057 * C1669 +
           (C4099 * C19591 + C4100 * C19586 + C20730 * C19592 +
            C20731 * C19587 + (C20733 - C20732) * C19593 +
            (C20735 - C20734) * C19588 +
            (C117 * C20725 - C50214 * C20726) * C19594 +
            (C117 * C20727 - C50214 * C20728) * C19589) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50118 * C50343 +
           (((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50118 * C50343 +
           ((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
             C40487 * C50250) *
                C50328 +
            (C40888 * C7885 + C40889 * C50356 +
             (C33156 - C33157 + C33158 - C33159) * C7886 +
             (C33160 - C33161 + C33162 - C33163) * C50250) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          (((C32976 * C7885 + C32977 * C50356 + C40888 * C7886 +
             C40889 * C50250) *
                C50328 +
            ((C32953 - C32952 + C32955 - C32954) * C7885 +
             (C32957 - C32956 + C32959 - C32958) * C50356 +
             (C33492 - C33493 + C33494 - C33495) * C7886 +
             (C33496 - C33497 + C33498 - C33499) * C50250) *
                C50062) *
               C50118 * C50343 +
           ((C33500 * C7885 + C33501 * C50356 +
             (C33157 - C33156 + C33159 - C33158) * C7886 +
             (C33161 - C33160 + C33163 - C33162) * C50250) *
                C50328 +
            ((C33493 - C33492 + C33495 - C33494) * C7885 +
             (C33497 - C33496 + C33499 - C33498) * C50356 +
             (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C7886 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C7885 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50356 +
              (C35874 - C35875 + C35876 - C35877) * C7886 +
              (C35878 - C35879 + C35880 - C35881) * C50250) *
                 C50328 +
             ((C32936 - C32937 + C32938 - C32939) * C7885 +
              (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
              C40483 * C50250) *
                 C50062) *
                C50344 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C7885 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50356 +
              (C36550 - C36551 + C36552 - C36553) * C7886 +
              (C36554 - C36555 + C36556 - C36557) * C50250) *
                 C50328 +
             ((C33310 - C33311 + C33312 - C33313) * C7885 +
              (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
              C41351 * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C35875 - C35874 + C35877 - C35876) * C7885 +
              (C35879 - C35878 + C35881 - C35880) * C50356 +
              (C35883 - C35882 + C35885 - C35884) * C7886 +
              (C35887 - C35886 + C35889 - C35888) * C50250) *
                 C50328 +
             (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
              C35915 * C50250) *
                 C50062) *
                C50344 +
            (((C36551 - C36550 + C36553 - C36552) * C7885 +
              (C36555 - C36554 + C36557 - C36556) * C50356 +
              (C36559 - C36558 + C36561 - C36560) * C7886 +
              (C36563 - C36562 + C36565 - C36564) * C50250) *
                 C50328 +
             (C41352 * C7885 + C41353 * C50356 +
              (C36566 - C36567 + C36568 - C36569) * C7886 +
              (C36570 - C36571 + C36572 - C36573) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C32937 - C32936 + C32939 - C32938) * C7885 +
              (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
              C40485 * C50250) *
                 C50328 +
             ((C32945 - C32944 + C32947 - C32946) * C7885 +
              (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
              C33501 * C50250) *
                 C50062) *
                C50344 +
            (((C33311 - C33310 + C33313 - C33312) * C7885 +
              (C33315 - C33314 + C33317 - C33316) * C50356 + C41352 * C7886 +
              C41353 * C50250) *
                 C50328 +
             ((C33319 - C33318 + C33321 - C33320) * C7885 +
              (C33323 - C33322 + C33325 - C33324) * C50356 +
              (C33870 - C33871 + C33872 - C33873) * C7886 +
              (C33874 - C33875 + C33876 - C33877) * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           (((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
              C40487 * C50250) *
                 C50328 +
             (C40888 * C7885 + C40889 * C50356 +
              (C33156 - C33157 + C33158 - C33159) * C7886 +
              (C33160 - C33161 + C33162 - C33163) * C50250) *
                 C50062) *
                C50344 +
            ((C41350 * C7885 + C41351 * C50356 +
              (C36567 - C36566 + C36569 - C36568) * C7886 +
              (C36571 - C36570 + C36573 - C36572) * C50250) *
                 C50328 +
             ((C33871 - C33870 + C33873 - C33872) * C7885 +
              (C33875 - C33874 + C33877 - C33876) * C50356 +
              (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
               C50278 * C2641) *
                  C7886 +
              (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50118 * C285 +
           (((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50118 * C286 +
           ((C35916 * C7885 + C35917 * C50356 +
             (C35891 - C35890 + C35893 - C35892) * C7886 +
             (C35895 - C35894 + C35897 - C35896) * C50250) *
                C50328 +
            (C40486 * C7885 + C40487 * C50356 +
             (C35902 - C35903 + C35904 - C35905) * C7886 +
             (C35906 - C35907 + C35908 - C35909) * C50250) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50118 * C285 +
           ((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
             C40487 * C50250) *
                C50328 +
            ((C33141 - C33140 + C33143 - C33142) * C7885 +
             (C33145 - C33144 + C33147 - C33146) * C50356 +
             (C33156 - C33157 + C33158 - C33159) * C7886 +
             (C33160 - C33161 + C33162 - C33163) * C50250) *
                C50062) *
               C50118 * C286 +
           ((C35914 * C7885 + C35915 * C50356 +
             (C35903 - C35902 + C35905 - C35904) * C7886 +
             (C35907 - C35906 + C35909 - C35908) * C50250) *
                C50328 +
            ((C33157 - C33156 + C33159 - C33158) * C7885 +
             (C33161 - C33160 + C33163 - C33162) * C50356 +
             (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
              C50278 * C3159) *
                 C7886 +
             (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C7885 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50356 +
            (C35874 - C35875 + C35876 - C35877) * C7886 +
            (C35878 - C35879 + C35880 - C35881) * C50250) *
               C50328 +
           ((C32936 - C32937 + C32938 - C32939) * C7885 +
            (C32940 - C32941 + C32942 - C32943) * C50356 +
            (C33133 - C33132 + C33135 - C33134) * C7886 +
            (C33137 - C33136 + C33139 - C33138) * C50250) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C7885 +
            (C32941 - C32940 + C32943 - C32942) * C50356 +
            (C33132 - C33133 + C33134 - C33135) * C7886 +
            (C33136 - C33137 + C33138 - C33139) * C50250) *
               C50328 +
           ((C32945 - C32944 + C32947 - C32946) * C7885 +
            (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
            C33501 * C50250) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C32976 * C7885 + C32977 * C50356 +
            (C33141 - C33140 + C33143 - C33142) * C7886 +
            (C33145 - C33144 + C33147 - C33146) * C50250) *
               C50328 +
           ((C32953 - C32952 + C32955 - C32954) * C7885 +
            (C32957 - C32956 + C32959 - C32958) * C50356 +
            (C33492 - C33493 + C33494 - C33495) * C7886 +
            (C33496 - C33497 + C33498 - C33499) * C50250) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C32978 * C7885 + C32979 * C50356 +
            (C33493 - C33492 + C33495 - C33494) * C7886 +
            (C33497 - C33496 + C33499 - C33498) * C50250) *
               C50328 +
           ((C32961 - C32960 + C32963 - C32962) * C7885 +
            (C32965 - C32964 + C32967 - C32966) * C50356 +
            (C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                C7886 +
            (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                C50250) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C452 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 +
             (C33863 - C33862 + C33865 - C33864) * C7886 +
             (C33867 - C33866 + C33869 - C33868) * C50250) *
                C50062) *
               C453 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C7885 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50356 +
             (C36978 - C36979 + C36980 - C36981) * C7886 +
             (C36982 - C36983 + C36984 - C36985) * C50250) *
                C50328 +
            ((C33326 - C33327 + C33328 - C33329) * C7885 +
             (C33330 - C33331 + C33332 - C33333) * C50356 +
             (C40682 - C40683 + C40684 - C40685) * C7886 +
             (C40686 - C40687 + C40688 - C40689) * C50250) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C452 +
           (((C33311 - C33310 + C33313 - C33312) * C7885 +
             (C33315 - C33314 + C33317 - C33316) * C50356 +
             (C33862 - C33863 + C33864 - C33865) * C7886 +
             (C33866 - C33867 + C33868 - C33869) * C50250) *
                C50328 +
            ((C33319 - C33318 + C33321 - C33320) * C7885 +
             (C33323 - C33322 + C33325 - C33324) * C50356 +
             (C33870 - C33871 + C33872 - C33873) * C7886 +
             (C33874 - C33875 + C33876 - C33877) * C50250) *
                C50062) *
               C453 +
           (((C33327 - C33326 + C33329 - C33328) * C7885 +
             (C33331 - C33330 + C33333 - C33332) * C50356 +
             (C40683 - C40682 + C40685 - C40684) * C7886 +
             (C40687 - C40686 + C40689 - C40688) * C50250) *
                C50328 +
            ((C33335 - C33334 + C33337 - C33336) * C7885 +
             (C33339 - C33338 + C33341 - C33340) * C50356 +
             (C32933 * C1210 - C32931 * C1216 + C32934 * C5998 -
              C50278 * C5999) *
                 C7886 +
             (C32933 * C1217 - C32931 * C1222 + C32934 * C6000 -
              C50278 * C6001) *
                 C50250) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50344 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 +
             (C33863 - C33862 + C33865 - C33864) * C7886 +
             (C33867 - C33866 + C33869 - C33868) * C50250) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50344 +
           (((C33311 - C33310 + C33313 - C33312) * C7885 +
             (C33315 - C33314 + C33317 - C33316) * C50356 +
             (C33862 - C33863 + C33864 - C33865) * C7886 +
             (C33866 - C33867 + C33868 - C33869) * C50250) *
                C50328 +
            ((C33319 - C33318 + C33321 - C33320) * C7885 +
             (C33323 - C33322 + C33325 - C33324) * C50356 +
             (C33870 - C33871 + C33872 - C33873) * C7886 +
             (C33874 - C33875 + C33876 - C33877) * C50250) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          (((C32976 * C7885 + C32977 * C50356 + C40888 * C7886 +
             C40889 * C50250) *
                C50328 +
            ((C32953 - C32952 + C32955 - C32954) * C7885 +
             (C32957 - C32956 + C32959 - C32958) * C50356 +
             (C33492 - C33493 + C33494 - C33495) * C7886 +
             (C33496 - C33497 + C33498 - C33499) * C50250) *
                C50062) *
               C50344 +
           ((C33663 * C7885 + C33664 * C50356 +
             (C33871 - C33870 + C33873 - C33872) * C7886 +
             (C33875 - C33874 + C33877 - C33876) * C50250) *
                C50328 +
            ((C33656 - C33655 + C33658 - C33657) * C7885 +
             (C33660 - C33659 + C33662 - C33661) * C50356 +
             (C32933 * C891 - C32931 * C899 + C32934 * C1211 - C50278 * C1218) *
                 C7886 +
             (C32933 * C900 - C32931 * C906 + C32934 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C7885 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50356 +
            (C35874 - C35875 + C35876 - C35877) * C7886 +
            (C35878 - C35879 + C35880 - C35881) * C50250) *
               C50328 +
           ((C32936 - C32937 + C32938 - C32939) * C7885 +
            (C32940 - C32941 + C32942 - C32943) * C50356 +
            (C33133 - C33132 + C33135 - C33134) * C7886 +
            (C33137 - C33136 + C33139 - C33138) * C50250) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C7885 +
            (C32941 - C32940 + C32943 - C32942) * C50356 +
            (C33132 - C33133 + C33134 - C33135) * C7886 +
            (C33136 - C33137 + C33138 - C33139) * C50250) *
               C50328 +
           ((C32945 - C32944 + C32947 - C32946) * C7885 +
            (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
            C33501 * C50250) *
               C50062) *
              C50118 * C50102 * C114 +
          ((C32976 * C7885 + C32977 * C50356 +
            (C33141 - C33140 + C33143 - C33142) * C7886 +
            (C33145 - C33144 + C33147 - C33146) * C50250) *
               C50328 +
           ((C32953 - C32952 + C32955 - C32954) * C7885 +
            (C32957 - C32956 + C32959 - C32958) * C50356 +
            (C33492 - C33493 + C33494 - C33495) * C7886 +
            (C33496 - C33497 + C33498 - C33499) * C50250) *
               C50062) *
              C50118 * C50102 * C115 +
          ((C32978 * C7885 + C32979 * C50356 +
            (C33493 - C33492 + C33495 - C33494) * C7886 +
            (C33497 - C33496 + C33499 - C33498) * C50250) *
               C50328 +
           ((C32961 - C32960 + C32963 - C32962) * C7885 +
            (C32965 - C32964 + C32967 - C32966) * C50356 +
            (C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                C7886 +
            (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                C50250) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50118 * C285 +
           (((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50118 * C286 +
           ((C35916 * C7885 + C35917 * C50356 +
             (C35891 - C35890 + C35893 - C35892) * C7886 +
             (C35895 - C35894 + C35897 - C35896) * C50250) *
                C50328 +
            (C40486 * C7885 + C40487 * C50356 +
             (C35902 - C35903 + C35904 - C35905) * C7886 +
             (C35906 - C35907 + C35908 - C35909) * C50250) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50118 * C285 +
           ((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
             C40487 * C50250) *
                C50328 +
            ((C33141 - C33140 + C33143 - C33142) * C7885 +
             (C33145 - C33144 + C33147 - C33146) * C50356 +
             (C33156 - C33157 + C33158 - C33159) * C7886 +
             (C33160 - C33161 + C33162 - C33163) * C50250) *
                C50062) *
               C50118 * C286 +
           ((C35914 * C7885 + C35915 * C50356 +
             (C35903 - C35902 + C35905 - C35904) * C7886 +
             (C35907 - C35906 + C35909 - C35908) * C50250) *
                C50328 +
            ((C33157 - C33156 + C33159 - C33158) * C7885 +
             (C33161 - C33160 + C33163 - C33162) * C50356 +
             (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
              C50278 * C3159) *
                 C7886 +
             (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50118 * C50388 +
           (((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50118 * C50389 +
           ((C35916 * C7885 + C35917 * C50356 +
             (C35891 - C35890 + C35893 - C35892) * C7886 +
             (C35895 - C35894 + C35897 - C35896) * C50250) *
                C50328 +
            (C40486 * C7885 + C40487 * C50356 +
             (C35902 - C35903 + C35904 - C35905) * C7886 +
             (C35906 - C35907 + C35908 - C35909) * C50250) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50118 * C50388 +
           ((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
             C40487 * C50250) *
                C50328 +
            (C40888 * C7885 + C40889 * C50356 +
             (C33156 - C33157 + C33158 - C33159) * C7886 +
             (C33160 - C33161 + C33162 - C33163) * C50250) *
                C50062) *
               C50118 * C50389 +
           ((C35914 * C7885 + C35915 * C50356 +
             (C35903 - C35902 + C35905 - C35904) * C7886 +
             (C35907 - C35906 + C35909 - C35908) * C50250) *
                C50328 +
            ((C33157 - C33156 + C33159 - C33158) * C7885 +
             (C33161 - C33160 + C33163 - C33162) * C50356 +
             (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
              C50278 * C3159) *
                 C7886 +
             (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
              C50278 * C3163) *
                 C50250) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50344 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50182) *
              C50388 +
          ((((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50344 +
           (((C36551 - C36550 + C36553 - C36552) * C7885 +
             (C36555 - C36554 + C36557 - C36556) * C50356 +
             (C36559 - C36558 + C36561 - C36560) * C7886 +
             (C36563 - C36562 + C36565 - C36564) * C50250) *
                C50328 +
            (C41352 * C7885 + C41353 * C50356 +
             (C36566 - C36567 + C36568 - C36569) * C7886 +
             (C36570 - C36571 + C36572 - C36573) * C50250) *
                C50062) *
               C50182) *
              C50389 +
          (((C35916 * C7885 + C35917 * C50356 +
             (C35891 - C35890 + C35893 - C35892) * C7886 +
             (C35895 - C35894 + C35897 - C35896) * C50250) *
                C50328 +
            (C40486 * C7885 + C40487 * C50356 +
             (C35902 - C35903 + C35904 - C35905) * C7886 +
             (C35906 - C35907 + C35908 - C35909) * C50250) *
                C50062) *
               C50344 +
           ((C37492 * C7885 + C37493 * C50356 +
             (C37485 - C37484 + C37487 - C37486) * C7886 +
             (C37489 - C37488 + C37491 - C37490) * C50250) *
                C50328 +
            ((C36567 - C36566 + C36569 - C36568) * C7885 +
             (C36571 - C36570 + C36573 - C36572) * C50356 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C7886 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C7885 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50356 +
            (C35874 - C35875 + C35876 - C35877) * C7886 +
            (C35878 - C35879 + C35880 - C35881) * C50250) *
               C50328 +
           ((C32936 - C32937 + C32938 - C32939) * C7885 +
            (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
            C40483 * C50250) *
               C50062) *
              C50118 * C1089 +
          (((C35875 - C35874 + C35877 - C35876) * C7885 +
            (C35879 - C35878 + C35881 - C35880) * C50356 +
            (C35883 - C35882 + C35885 - C35884) * C7886 +
            (C35887 - C35886 + C35889 - C35888) * C50250) *
               C50328 +
           (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
            C35915 * C50250) *
               C50062) *
              C50118 * C1090 +
          ((C35916 * C7885 + C35917 * C50356 +
            (C35891 - C35890 + C35893 - C35892) * C7886 +
            (C35895 - C35894 + C35897 - C35896) * C50250) *
               C50328 +
           (C40486 * C7885 + C40487 * C50356 +
            (C35902 - C35903 + C35904 - C35905) * C7886 +
            (C35906 - C35907 + C35908 - C35909) * C50250) *
               C50062) *
              C50118 * C1091 +
          ((C36830 * C7885 + C36831 * C50356 +
            (C36823 - C36822 + C36825 - C36824) * C7886 +
            (C36827 - C36826 + C36829 - C36828) * C50250) *
               C50328 +
           ((C35903 - C35902 + C35905 - C35904) * C7885 +
            (C35907 - C35906 + C35909 - C35908) * C50356 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C7886 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C50250) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50118 * C1018 +
           (((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
             C40487 * C50250) *
                C50328 +
            (C40888 * C7885 + C40889 * C50356 +
             (C33156 - C33157 + C33158 - C33159) * C7886 +
             (C33160 - C33161 + C33162 - C33163) * C50250) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C32976 * C7885 + C32977 * C50356 + C40888 * C7886 +
             C40889 * C50250) *
                C50328 +
            ((C32953 - C32952 + C32955 - C32954) * C7885 +
             (C32957 - C32956 + C32959 - C32958) * C50356 +
             (C33492 - C33493 + C33494 - C33495) * C7886 +
             (C33496 - C33497 + C33498 - C33499) * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C33500 * C7885 + C33501 * C50356 +
             (C33157 - C33156 + C33159 - C33158) * C7886 +
             (C33161 - C33160 + C33163 - C33162) * C50250) *
                C50328 +
            ((C33493 - C33492 + C33495 - C33494) * C7885 +
             (C33497 - C33496 + C33499 - C33498) * C50356 +
             (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C7886 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C452 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C453 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C7885 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50356 +
             (C36978 - C36979 + C36980 - C36981) * C7886 +
             (C36982 - C36983 + C36984 - C36985) * C50250) *
                C50328 +
            ((C33326 - C33327 + C33328 - C33329) * C7885 +
             (C33330 - C33331 + C33332 - C33333) * C50356 +
             (C40682 - C40683 + C40684 - C40685) * C7886 +
             (C40686 - C40687 + C40688 - C40689) * C50250) *
                C50062) *
               C454) *
              C1018 +
          ((((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C452 +
           (((C36551 - C36550 + C36553 - C36552) * C7885 +
             (C36555 - C36554 + C36557 - C36556) * C50356 +
             (C36559 - C36558 + C36561 - C36560) * C7886 +
             (C36563 - C36562 + C36565 - C36564) * C50250) *
                C50328 +
            (C41352 * C7885 + C41353 * C50356 +
             (C36566 - C36567 + C36568 - C36569) * C7886 +
             (C36570 - C36571 + C36572 - C36573) * C50250) *
                C50062) *
               C453 +
           (((C36979 - C36978 + C36981 - C36980) * C7885 +
             (C36983 - C36982 + C36985 - C36984) * C50356 +
             (C36987 - C36986 + C36989 - C36988) * C7886 +
             (C36991 - C36990 + C36993 - C36992) * C50250) *
                C50328 +
            ((C40683 - C40682 + C40685 - C40684) * C7885 +
             (C40687 - C40686 + C40689 - C40688) * C50356 +
             (C32933 * C2635 - C32931 * C2639 + C32934 * C4497 -
              C50278 * C4504) *
                 C7886 +
             (C32933 * C2640 - C32931 * C2644 + C32934 * C4505 -
              C50278 * C4509) *
                 C50250) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C7885 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50356 +
              (C35874 - C35875 + C35876 - C35877) * C7886 +
              (C35878 - C35879 + C35880 - C35881) * C50250) *
                 C50328 +
             ((C32936 - C32937 + C32938 - C32939) * C7885 +
              (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
              C40483 * C50250) *
                 C50062) *
                C50344 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C7885 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50356 +
              (C36550 - C36551 + C36552 - C36553) * C7886 +
              (C36554 - C36555 + C36556 - C36557) * C50250) *
                 C50328 +
             ((C33310 - C33311 + C33312 - C33313) * C7885 +
              (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
              C41351 * C50250) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C35875 - C35874 + C35877 - C35876) * C7885 +
              (C35879 - C35878 + C35881 - C35880) * C50356 +
              (C35883 - C35882 + C35885 - C35884) * C7886 +
              (C35887 - C35886 + C35889 - C35888) * C50250) *
                 C50328 +
             (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
              C35915 * C50250) *
                 C50062) *
                C50344 +
            (((C36551 - C36550 + C36553 - C36552) * C7885 +
              (C36555 - C36554 + C36557 - C36556) * C50356 +
              (C36559 - C36558 + C36561 - C36560) * C7886 +
              (C36563 - C36562 + C36565 - C36564) * C50250) *
                 C50328 +
             (C41352 * C7885 + C41353 * C50356 +
              (C36566 - C36567 + C36568 - C36569) * C7886 +
              (C36570 - C36571 + C36572 - C36573) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C32937 - C32936 + C32939 - C32938) * C7885 +
              (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
              C40485 * C50250) *
                 C50328 +
             ((C32945 - C32944 + C32947 - C32946) * C7885 +
              (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
              C33501 * C50250) *
                 C50062) *
                C50344 +
            (((C33311 - C33310 + C33313 - C33312) * C7885 +
              (C33315 - C33314 + C33317 - C33316) * C50356 + C41352 * C7886 +
              C41353 * C50250) *
                 C50328 +
             ((C33319 - C33318 + C33321 - C33320) * C7885 +
              (C33323 - C33322 + C33325 - C33324) * C50356 +
              (C33870 - C33871 + C33872 - C33873) * C7886 +
              (C33874 - C33875 + C33876 - C33877) * C50250) *
                 C50062) *
                C50182) *
               C1018 +
           (((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
              C40487 * C50250) *
                 C50328 +
             (C40888 * C7885 + C40889 * C50356 +
              (C33156 - C33157 + C33158 - C33159) * C7886 +
              (C33160 - C33161 + C33162 - C33163) * C50250) *
                 C50062) *
                C50344 +
            ((C41350 * C7885 + C41351 * C50356 +
              (C36567 - C36566 + C36569 - C36568) * C7886 +
              (C36571 - C36570 + C36573 - C36572) * C50250) *
                 C50328 +
             ((C33871 - C33870 + C33873 - C33872) * C7885 +
              (C33875 - C33874 + C33877 - C33876) * C50356 +
              (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
               C50278 * C2641) *
                  C7886 +
              (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50118 * C1018 +
           (((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
             C40487 * C50250) *
                C50328 +
            (C40888 * C7885 + C40889 * C50356 +
             (C33156 - C33157 + C33158 - C33159) * C7886 +
             (C33160 - C33161 + C33162 - C33163) * C50250) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          (((C32976 * C7885 + C32977 * C50356 + C40888 * C7886 +
             C40889 * C50250) *
                C50328 +
            ((C32953 - C32952 + C32955 - C32954) * C7885 +
             (C32957 - C32956 + C32959 - C32958) * C50356 +
             (C33492 - C33493 + C33494 - C33495) * C7886 +
             (C33496 - C33497 + C33498 - C33499) * C50250) *
                C50062) *
               C50118 * C1018 +
           ((C33500 * C7885 + C33501 * C50356 +
             (C33157 - C33156 + C33159 - C33158) * C7886 +
             (C33161 - C33160 + C33163 - C33162) * C50250) *
                C50328 +
            ((C33493 - C33492 + C33495 - C33494) * C7885 +
             (C33497 - C33496 + C33499 - C33498) * C50356 +
             (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C7886 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50250) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C7885 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50356 +
            (C35874 - C35875 + C35876 - C35877) * C7886 +
            (C35878 - C35879 + C35880 - C35881) * C50250) *
               C50328 +
           ((C32936 - C32937 + C32938 - C32939) * C7885 +
            (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
            C40483 * C50250) *
               C50062) *
              C50118 * C1089 +
          (((C35875 - C35874 + C35877 - C35876) * C7885 +
            (C35879 - C35878 + C35881 - C35880) * C50356 +
            (C35883 - C35882 + C35885 - C35884) * C7886 +
            (C35887 - C35886 + C35889 - C35888) * C50250) *
               C50328 +
           (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
            C35915 * C50250) *
               C50062) *
              C50118 * C1090 +
          ((C35916 * C7885 + C35917 * C50356 +
            (C35891 - C35890 + C35893 - C35892) * C7886 +
            (C35895 - C35894 + C35897 - C35896) * C50250) *
               C50328 +
           (C40486 * C7885 + C40487 * C50356 +
            (C35902 - C35903 + C35904 - C35905) * C7886 +
            (C35906 - C35907 + C35908 - C35909) * C50250) *
               C50062) *
              C50118 * C1091 +
          ((C36830 * C7885 + C36831 * C50356 +
            (C36823 - C36822 + C36825 - C36824) * C7886 +
            (C36827 - C36826 + C36829 - C36828) * C50250) *
               C50328 +
           ((C35903 - C35902 + C35905 - C35904) * C7885 +
            (C35907 - C35906 + C35909 - C35908) * C50356 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C7886 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C50250) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C7885 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50356 +
              (C35874 - C35875 + C35876 - C35877) * C7886 +
              (C35878 - C35879 + C35880 - C35881) * C50250) *
                 C50328 +
             ((C32936 - C32937 + C32938 - C32939) * C7885 +
              (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
              C40483 * C50250) *
                 C50062) *
                C1669 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C7885 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50356 +
              (C36550 - C36551 + C36552 - C36553) * C7886 +
              (C36554 - C36555 + C36556 - C36557) * C50250) *
                 C50328 +
             ((C33310 - C33311 + C33312 - C33313) * C7885 +
              (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
              C41351 * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C35875 - C35874 + C35877 - C35876) * C7885 +
              (C35879 - C35878 + C35881 - C35880) * C50356 +
              (C35883 - C35882 + C35885 - C35884) * C7886 +
              (C35887 - C35886 + C35889 - C35888) * C50250) *
                 C50328 +
             (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
              C35915 * C50250) *
                 C50062) *
                C1669 +
            (((C36551 - C36550 + C36553 - C36552) * C7885 +
              (C36555 - C36554 + C36557 - C36556) * C50356 +
              (C36559 - C36558 + C36561 - C36560) * C7886 +
              (C36563 - C36562 + C36565 - C36564) * C50250) *
                 C50328 +
             (C41352 * C7885 + C41353 * C50356 +
              (C36566 - C36567 + C36568 - C36569) * C7886 +
              (C36570 - C36571 + C36572 - C36573) * C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C32937 - C32936 + C32939 - C32938) * C7885 +
              (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
              C40485 * C50250) *
                 C50328 +
             ((C32945 - C32944 + C32947 - C32946) * C7885 +
              (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
              C33501 * C50250) *
                 C50062) *
                C1669 +
            (((C33311 - C33310 + C33313 - C33312) * C7885 +
              (C33315 - C33314 + C33317 - C33316) * C50356 + C41352 * C7886 +
              C41353 * C50250) *
                 C50328 +
             ((C33319 - C33318 + C33321 - C33320) * C7885 +
              (C33323 - C33322 + C33325 - C33324) * C50356 +
              (C33870 - C33871 + C33872 - C33873) * C7886 +
              (C33874 - C33875 + C33876 - C33877) * C50250) *
                 C50062) *
                C50182) *
               C50343 +
           (((C40482 * C7885 + C40483 * C50356 + C40486 * C7886 +
              C40487 * C50250) *
                 C50328 +
             (C40888 * C7885 + C40889 * C50356 +
              (C33156 - C33157 + C33158 - C33159) * C7886 +
              (C33160 - C33161 + C33162 - C33163) * C50250) *
                 C50062) *
                C1669 +
            ((C41350 * C7885 + C41351 * C50356 +
              (C36567 - C36566 + C36569 - C36568) * C7886 +
              (C36571 - C36570 + C36573 - C36572) * C50250) *
                 C50328 +
             ((C33871 - C33870 + C33873 - C33872) * C7885 +
              (C33875 - C33874 + C33877 - C33876) * C50356 +
              (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
               C50278 * C2641) *
                  C7886 +
              (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
               C50278 * C2645) *
                  C50250) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50390 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50391 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C7885 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50356 +
             (C36978 - C36979 + C36980 - C36981) * C7886 +
             (C36982 - C36983 + C36984 - C36985) * C50250) *
                C50328 +
            ((C33326 - C33327 + C33328 - C33329) * C7885 +
             (C33330 - C33331 + C33332 - C33333) * C50356 +
             (C40682 - C40683 + C40684 - C40685) * C7886 +
             (C40686 - C40687 + C40688 - C40689) * C50250) *
                C50062) *
               C2085) *
              C50343 +
          ((((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C50390 +
           (((C36551 - C36550 + C36553 - C36552) * C7885 +
             (C36555 - C36554 + C36557 - C36556) * C50356 +
             (C36559 - C36558 + C36561 - C36560) * C7886 +
             (C36563 - C36562 + C36565 - C36564) * C50250) *
                C50328 +
            (C41352 * C7885 + C41353 * C50356 +
             (C36566 - C36567 + C36568 - C36569) * C7886 +
             (C36570 - C36571 + C36572 - C36573) * C50250) *
                C50062) *
               C50391 +
           (((C36979 - C36978 + C36981 - C36980) * C7885 +
             (C36983 - C36982 + C36985 - C36984) * C50356 +
             (C36987 - C36986 + C36989 - C36988) * C7886 +
             (C36991 - C36990 + C36993 - C36992) * C50250) *
                C50328 +
            ((C40683 - C40682 + C40685 - C40684) * C7885 +
             (C40687 - C40686 + C40689 - C40688) * C50356 +
             (C32933 * C2635 - C32931 * C2639 + C32934 * C4497 -
              C50278 * C4504) *
                 C7886 +
             (C32933 * C2640 - C32931 * C2644 + C32934 * C4505 -
              C50278 * C4509) *
                 C50250) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50182) *
              C285 +
          ((((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C1669 +
           (((C36551 - C36550 + C36553 - C36552) * C7885 +
             (C36555 - C36554 + C36557 - C36556) * C50356 +
             (C36559 - C36558 + C36561 - C36560) * C7886 +
             (C36563 - C36562 + C36565 - C36564) * C50250) *
                C50328 +
            (C41352 * C7885 + C41353 * C50356 +
             (C36566 - C36567 + C36568 - C36569) * C7886 +
             (C36570 - C36571 + C36572 - C36573) * C50250) *
                C50062) *
               C50182) *
              C286 +
          (((C35916 * C7885 + C35917 * C50356 +
             (C35891 - C35890 + C35893 - C35892) * C7886 +
             (C35895 - C35894 + C35897 - C35896) * C50250) *
                C50328 +
            (C40486 * C7885 + C40487 * C50356 +
             (C35902 - C35903 + C35904 - C35905) * C7886 +
             (C35906 - C35907 + C35908 - C35909) * C50250) *
                C50062) *
               C1669 +
           ((C37492 * C7885 + C37493 * C50356 +
             (C37485 - C37484 + C37487 - C37486) * C7886 +
             (C37489 - C37488 + C37491 - C37490) * C50250) *
                C50328 +
            ((C36567 - C36566 + C36569 - C36568) * C7885 +
             (C36571 - C36570 + C36573 - C36572) * C50356 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C7886 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C1669 +
           (((C33311 - C33310 + C33313 - C33312) * C7885 +
             (C33315 - C33314 + C33317 - C33316) * C50356 + C41352 * C7886 +
             C41353 * C50250) *
                C50328 +
            ((C33319 - C33318 + C33321 - C33320) * C7885 +
             (C33323 - C33322 + C33325 - C33324) * C50356 +
             (C33870 - C33871 + C33872 - C33873) * C7886 +
             (C33874 - C33875 + C33876 - C33877) * C50250) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C32976 * C7885 + C32977 * C50356 + C40888 * C7886 +
             C40889 * C50250) *
                C50328 +
            ((C32953 - C32952 + C32955 - C32954) * C7885 +
             (C32957 - C32956 + C32959 - C32958) * C50356 +
             (C33492 - C33493 + C33494 - C33495) * C7886 +
             (C33496 - C33497 + C33498 - C33499) * C50250) *
                C50062) *
               C1669 +
           ((C33663 * C7885 + C33664 * C50356 +
             (C33871 - C33870 + C33873 - C33872) * C7886 +
             (C33875 - C33874 + C33877 - C33876) * C50250) *
                C50328 +
            ((C33656 - C33655 + C33658 - C33657) * C7885 +
             (C33660 - C33659 + C33662 - C33661) * C50356 +
             (C32933 * C891 - C32931 * C899 + C32934 * C1211 - C50278 * C1218) *
                 C7886 +
             (C32933 * C900 - C32931 * C906 + C32934 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C7885 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50356 +
            (C35874 - C35875 + C35876 - C35877) * C7886 +
            (C35878 - C35879 + C35880 - C35881) * C50250) *
               C50328 +
           ((C32936 - C32937 + C32938 - C32939) * C7885 +
            (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
            C40483 * C50250) *
               C50062) *
              C1835 +
          (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C7885 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C50356 +
            (C36550 - C36551 + C36552 - C36553) * C7886 +
            (C36554 - C36555 + C36556 - C36557) * C50250) *
               C50328 +
           ((C33310 - C33311 + C33312 - C33313) * C7885 +
            (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
            C41351 * C50250) *
               C50062) *
              C1836 +
          (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C7885 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C50356 +
            (C36978 - C36979 + C36980 - C36981) * C7886 +
            (C36982 - C36983 + C36984 - C36985) * C50250) *
               C50328 +
           ((C33326 - C33327 + C33328 - C33329) * C7885 +
            (C33330 - C33331 + C33332 - C33333) * C50356 +
            (C40682 - C40683 + C40684 - C40685) * C7886 +
            (C40686 - C40687 + C40688 - C40689) * C50250) *
               C50062) *
              C1837 +
          (((C32933 * C1839 - C32931 * C1843 + C32934 * C5452 -
             C50278 * C5455) *
                C7885 +
            (C32933 * C1844 - C32931 * C1851 + C32934 * C5456 -
             C50278 * C5461) *
                C50356 +
            (C32933 * C4494 - C32931 * C4498 + C32934 * C6404 -
             C50278 * C6406) *
                C7886 +
            (C32933 * C4499 - C32931 * C4506 + C32934 * C6407 -
             C50278 * C6410) *
                C50250) *
               C50328 +
           ((C32933 * C1840 - C32931 * C1845 + C32934 * C5453 -
             C50278 * C5457) *
                C7885 +
            (C32933 * C1846 - C32931 * C1852 + C32934 * C5458 -
             C50278 * C5462) *
                C50356 +
            (C32933 * C4496 - C32931 * C4502 + C32934 * C6405 -
             C50278 * C6408) *
                C7886 +
            (C32933 * C4503 - C32931 * C4508 + C32934 * C6409 -
             C50278 * C6411) *
                C50250) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C50390 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50391 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C7885 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50356 +
             (C36978 - C36979 + C36980 - C36981) * C7886 +
             (C36982 - C36983 + C36984 - C36985) * C50250) *
                C50328 +
            ((C33326 - C33327 + C33328 - C33329) * C7885 +
             (C33330 - C33331 + C33332 - C33333) * C50356 +
             (C40682 - C40683 + C40684 - C40685) * C7886 +
             (C40686 - C40687 + C40688 - C40689) * C50250) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C50390 +
           (((C33311 - C33310 + C33313 - C33312) * C7885 +
             (C33315 - C33314 + C33317 - C33316) * C50356 + C41352 * C7886 +
             C41353 * C50250) *
                C50328 +
            ((C33319 - C33318 + C33321 - C33320) * C7885 +
             (C33323 - C33322 + C33325 - C33324) * C50356 +
             (C33870 - C33871 + C33872 - C33873) * C7886 +
             (C33874 - C33875 + C33876 - C33877) * C50250) *
                C50062) *
               C50391 +
           (((C33327 - C33326 + C33329 - C33328) * C7885 +
             (C33331 - C33330 + C33333 - C33332) * C50356 +
             (C40683 - C40682 + C40685 - C40684) * C7886 +
             (C40687 - C40686 + C40689 - C40688) * C50250) *
                C50328 +
            ((C33335 - C33334 + C33337 - C33336) * C7885 +
             (C33339 - C33338 + C33341 - C33340) * C50356 +
             (C32933 * C1210 - C32931 * C1216 + C32934 * C5998 -
              C50278 * C5999) *
                 C7886 +
             (C32933 * C1217 - C32931 * C1222 + C32934 * C6000 -
              C50278 * C6001) *
                 C50250) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C7885 +
             (C32941 - C32940 + C32943 - C32942) * C50356 + C40484 * C7886 +
             C40485 * C50250) *
                C50328 +
            ((C32945 - C32944 + C32947 - C32946) * C7885 +
             (C32949 - C32948 + C32951 - C32950) * C50356 + C33500 * C7886 +
             C33501 * C50250) *
                C50062) *
               C1669 +
           (((C33311 - C33310 + C33313 - C33312) * C7885 +
             (C33315 - C33314 + C33317 - C33316) * C50356 + C41352 * C7886 +
             C41353 * C50250) *
                C50328 +
            ((C33319 - C33318 + C33321 - C33320) * C7885 +
             (C33323 - C33322 + C33325 - C33324) * C50356 +
             (C33870 - C33871 + C33872 - C33873) * C7886 +
             (C33874 - C33875 + C33876 - C33877) * C50250) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          (((C32976 * C7885 + C32977 * C50356 + C40888 * C7886 +
             C40889 * C50250) *
                C50328 +
            ((C32953 - C32952 + C32955 - C32954) * C7885 +
             (C32957 - C32956 + C32959 - C32958) * C50356 +
             (C33492 - C33493 + C33494 - C33495) * C7886 +
             (C33496 - C33497 + C33498 - C33499) * C50250) *
                C50062) *
               C1669 +
           ((C33663 * C7885 + C33664 * C50356 +
             (C33871 - C33870 + C33873 - C33872) * C7886 +
             (C33875 - C33874 + C33877 - C33876) * C50250) *
                C50328 +
            ((C33656 - C33655 + C33658 - C33657) * C7885 +
             (C33660 - C33659 + C33662 - C33661) * C50356 +
             (C32933 * C891 - C32931 * C899 + C32934 * C1211 - C50278 * C1218) *
                 C7886 +
             (C32933 * C900 - C32931 * C906 + C32934 * C1219 - C50278 * C1223) *
                 C50250) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C7885 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50356 +
             (C35874 - C35875 + C35876 - C35877) * C7886 +
             (C35878 - C35879 + C35880 - C35881) * C50250) *
                C50328 +
            ((C32936 - C32937 + C32938 - C32939) * C7885 +
             (C32940 - C32941 + C32942 - C32943) * C50356 + C40482 * C7886 +
             C40483 * C50250) *
                C50062) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C7885 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50356 +
             (C36550 - C36551 + C36552 - C36553) * C7886 +
             (C36554 - C36555 + C36556 - C36557) * C50250) *
                C50328 +
            ((C33310 - C33311 + C33312 - C33313) * C7885 +
             (C33314 - C33315 + C33316 - C33317) * C50356 + C41350 * C7886 +
             C41351 * C50250) *
                C50062) *
               C50182) *
              C285 +
          ((((C35875 - C35874 + C35877 - C35876) * C7885 +
             (C35879 - C35878 + C35881 - C35880) * C50356 +
             (C35883 - C35882 + C35885 - C35884) * C7886 +
             (C35887 - C35886 + C35889 - C35888) * C50250) *
                C50328 +
            (C40484 * C7885 + C40485 * C50356 + C35914 * C7886 +
             C35915 * C50250) *
                C50062) *
               C1669 +
           (((C36551 - C36550 + C36553 - C36552) * C7885 +
             (C36555 - C36554 + C36557 - C36556) * C50356 +
             (C36559 - C36558 + C36561 - C36560) * C7886 +
             (C36563 - C36562 + C36565 - C36564) * C50250) *
                C50328 +
            (C41352 * C7885 + C41353 * C50356 +
             (C36566 - C36567 + C36568 - C36569) * C7886 +
             (C36570 - C36571 + C36572 - C36573) * C50250) *
                C50062) *
               C50182) *
              C286 +
          (((C35916 * C7885 + C35917 * C50356 +
             (C35891 - C35890 + C35893 - C35892) * C7886 +
             (C35895 - C35894 + C35897 - C35896) * C50250) *
                C50328 +
            (C40486 * C7885 + C40487 * C50356 +
             (C35902 - C35903 + C35904 - C35905) * C7886 +
             (C35906 - C35907 + C35908 - C35909) * C50250) *
                C50062) *
               C1669 +
           ((C37492 * C7885 + C37493 * C50356 +
             (C37485 - C37484 + C37487 - C37486) * C7886 +
             (C37489 - C37488 + C37491 - C37490) * C50250) *
                C50328 +
            ((C36567 - C36566 + C36569 - C36568) * C7885 +
             (C36571 - C36570 + C36573 - C36572) * C50356 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C7886 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C50250) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50118 * C50343 +
           ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50118 * C50343 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
               C50057 * C50118 * C50154) *
              C50387 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
               C50057 * C50118 * C50343 +
           ((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C7885 +
            (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50356 +
            (C43782 * C296 - C50394 * C312 + C43783 * C1557 - C50395 * C1563 +
             C43784 * C2636 - C43781 * C2641) *
                C7886 +
            (C43782 * C313 - C50394 * C326 + C43783 * C1564 - C50395 * C1569 +
             C43784 * C2642 - C43781 * C2645) *
                C50250) *
               C50057 * C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C7885 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50356 +
             (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
                C50057 * C50344 +
            ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C7885 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50356 +
             (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
             (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
                C50057 * C50344 +
            ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
             (C50394 * C1559 - C43782 * C1555 + C50395 * C2637 -
              C43783 * C2634 + C43781 * C4500 - C43784 * C4495) *
                 C7886 +
             (C50394 * C1567 - C43782 * C1560 + C50395 * C2643 -
              C43783 * C2638 + C43781 * C4507 - C43784 * C4501) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
             (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
                C50057 * C50344 +
            ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
             (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
             (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
                C50057 * C50344 +
            ((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C7885 +
             (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50356 +
             (C43782 * C1556 - C50394 * C1561 + C43783 * C2635 -
              C50395 * C2639 + C43784 * C4497 - C43781 * C4504) *
                 C7886 +
             (C43782 * C1562 - C50394 * C1568 + C43783 * C2640 -
              C50395 * C2644 + C43784 * C4505 - C43781 * C4509) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50118 * C285 +
           ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50118 * C286 +
           ((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
            (C50394 * C1098 - C43782 * C1094 + C50395 * C3155 - C43783 * C3152 +
             C43781 * C3590 - C43784 * C3588) *
                C7886 +
            (C50394 * C1106 - C43782 * C1099 + C50395 * C3161 - C43783 * C3156 +
             C43781 * C3594 - C43784 * C3591) *
                C50250) *
               C50057 * C50118 * C287) *
              C288 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50118 * C285 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
               C50057 * C50118 * C286 +
           ((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C7885 +
            (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50356 +
            (C43782 * C1095 - C50394 * C1100 + C43783 * C3153 - C50395 * C3157 +
             C43784 * C3589 - C43781 * C3592) *
                C7886 +
            (C43782 * C1101 - C50394 * C1107 + C43783 * C3158 - C50395 * C3162 +
             C43784 * C3593 - C43781 * C3595) *
                C50250) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
            C43781 * C473 - C43784 * C459) *
               C7885 +
           (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
            C43781 * C489 - C43784 * C474) *
               C50356 +
           (C50394 * C300 - C43782 * C290 + C50395 * C893 - C43783 * C888 +
            C43781 * C1212 - C43784 * C1208) *
               C7886 +
           (C50394 * C320 - C43782 * C301 + C50395 * C903 - C43783 * C894 +
            C43781 * C1220 - C43784 * C1213) *
               C50250) *
              C50057 * C50118 * C50102 * C113 +
          ((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
           (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
           (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
           (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
              C50057 * C50118 * C50102 * C114 +
          ((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
           (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
           (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
           (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
              C50057 * C50118 * C50102 * C115 +
          ((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C7885 +
           (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50356 +
           (C43782 * C293 - C50394 * C306 + C43783 * C891 - C50395 * C899 +
            C43784 * C1211 - C43781 * C1218) *
               C7886 +
           (C43782 * C307 - C50394 * C323 + C43783 * C900 - C50395 * C906 +
            C43784 * C1219 - C43781 * C1223) *
               C50250) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C452 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C43782 * C888 - C50394 * C893 + C43783 * C1208 - C50395 * C1212 +
             C43784 * C4494 - C43781 * C4498) *
                C7886 +
            (C43782 * C894 - C50394 * C903 + C43783 * C1213 - C50395 * C1220 +
             C43784 * C4499 - C43781 * C4506) *
                C50250) *
               C50057 * C453 +
           ((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
             C43781 * C5455 - C43784 * C5452) *
                C7885 +
            (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
             C43781 * C5461 - C43784 * C5456) *
                C50356 +
            (C50394 * C1212 - C43782 * C1208 + C50395 * C4498 - C43783 * C4494 +
             C43781 * C6406 - C43784 * C6404) *
                C7886 +
            (C50394 * C1220 - C43782 * C1213 + C50395 * C4506 - C43783 * C4499 +
             C43781 * C6410 - C43784 * C6407) *
                C50250) *
               C50057 * C454) *
              C50102 * C288 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C452 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
               C50057 * C453 +
           ((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C7885 +
            (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50356 +
            (C43782 * C1209 - C50394 * C1214 + C43783 * C4496 - C50395 * C4502 +
             C43784 * C6405 - C43781 * C6408) *
                C7886 +
            (C43782 * C1215 - C50394 * C1221 + C43783 * C4503 - C50395 * C4508 +
             C43784 * C6409 - C43781 * C6411) *
                C50250) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50344 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C43782 * C888 - C50394 * C893 + C43783 * C1208 - C50395 * C1212 +
             C43784 * C4494 - C43781 * C4498) *
                C7886 +
            (C43782 * C894 - C50394 * C903 + C43783 * C1213 - C50395 * C1220 +
             C43784 * C4499 - C43781 * C4506) *
                C50250) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50344 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
               C50057 * C50182) *
              C50102 * C50387 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
               C50057 * C50344 +
           ((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C7885 +
            (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50356 +
            (C43782 * C890 - C50394 * C897 + C43783 * C1210 - C50395 * C1216 +
             C43784 * C5998 - C43781 * C5999) *
                C7886 +
            (C43782 * C898 - C50394 * C905 + C43783 * C1217 - C50395 * C1222 +
             C43784 * C6000 - C43781 * C6001) *
                C50250) *
               C50057 * C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
            C43781 * C473 - C43784 * C459) *
               C7885 +
           (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
            C43781 * C489 - C43784 * C474) *
               C50356 +
           (C50394 * C300 - C43782 * C290 + C50395 * C893 - C43783 * C888 +
            C43781 * C1212 - C43784 * C1208) *
               C7886 +
           (C50394 * C320 - C43782 * C301 + C50395 * C903 - C43783 * C894 +
            C43781 * C1220 - C43784 * C1213) *
               C50250) *
              C50057 * C50118 * C50102 * C113 +
          ((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
           (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
           (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
           (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
              C50057 * C50118 * C50102 * C114 +
          ((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
           (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
           (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
           (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
              C50057 * C50118 * C50102 * C115 +
          ((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C7885 +
           (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50356 +
           (C43782 * C293 - C50394 * C306 + C43783 * C891 - C50395 * C899 +
            C43784 * C1211 - C43781 * C1218) *
               C7886 +
           (C43782 * C307 - C50394 * C323 + C43783 * C900 - C50395 * C906 +
            C43784 * C1219 - C43781 * C1223) *
               C50250) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50118 * C285 +
           ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50118 * C286 +
           ((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
            (C50394 * C1098 - C43782 * C1094 + C50395 * C3155 - C43783 * C3152 +
             C43781 * C3590 - C43784 * C3588) *
                C7886 +
            (C50394 * C1106 - C43782 * C1099 + C50395 * C3161 - C43783 * C3156 +
             C43781 * C3594 - C43784 * C3591) *
                C50250) *
               C50057 * C50118 * C287) *
              C288 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50118 * C285 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
               C50057 * C50118 * C286 +
           ((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C7885 +
            (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50356 +
            (C43782 * C1095 - C50394 * C1100 + C43783 * C3153 - C50395 * C3157 +
             C43784 * C3589 - C43781 * C3592) *
                C7886 +
            (C43782 * C1101 - C50394 * C1107 + C43783 * C3158 - C50395 * C3162 +
             C43784 * C3593 - C43781 * C3595) *
                C50250) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50118 * C50388 +
           ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50118 * C50389 +
           ((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
            (C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C7886 +
            (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50250) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50118 * C50388 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
               C50057 * C50118 * C50389 +
           ((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C7885 +
            (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50356 +
            (C43782 * C1095 - C50394 * C1100 + C43783 * C3153 - C50395 * C3157 +
             C43784 * C3589 - C43781 * C3592) *
                C7886 +
            (C43782 * C1101 - C50394 * C1107 + C43783 * C3158 - C50395 * C3162 +
             C43784 * C3593 - C43781 * C3595) *
                C50250) *
               C50057 * C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50344 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50182) *
              C50388 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50344 +
           ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
            (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
            (C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C7886 +
            (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50250) *
               C50057 * C50182) *
              C50389 +
          (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
            (C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C7886 +
            (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50250) *
               C50057 * C50344 +
           ((C48249 - C48248 + C48251 - C48250 + C48253 - C48252) * C7885 +
            (C48255 - C48254 + C48257 - C48256 + C48259 - C48258) * C50356 +
            (C43782 * C3152 - C50394 * C3155 + C43783 * C3588 - C50395 * C3590 +
             C43784 * C20997 - C43781 * C20998) *
                C7886 +
            (C43782 * C3156 - C50394 * C3161 + C43783 * C3591 - C50395 * C3594 +
             C43784 * C20999 - C43781 * C21000) *
                C50250) *
               C50057 * C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
            C43781 * C473 - C43784 * C459) *
               C7885 +
           (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
            C43781 * C489 - C43784 * C474) *
               C50356 +
           (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
           (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
              C50057 * C50118 * C1089 +
          ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
           (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
           (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
           (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
              C50057 * C50118 * C1090 +
          ((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
           (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
           (C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C7886 +
           (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50250) *
              C50057 * C50118 * C1091 +
          ((C47593 - C47592 + C47595 - C47594 + C47597 - C47596) * C7885 +
           (C47599 - C47598 + C47601 - C47600 + C47603 - C47602) * C50356 +
           (C43782 * C2436 - C50394 * C2439 + C43783 * C4090 - C50395 * C4092 +
            C43784 * C20391 - C43781 * C20392) *
               C7886 +
           (C43782 * C2440 - C50394 * C2445 + C43783 * C4093 - C50395 * C4096 +
            C43784 * C20393 - C43781 * C20394) *
               C50250) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50118 * C1018 +
           ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50118 * C1018 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
               C50057 * C50118 * C50154) *
              C1021 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
               C50057 * C50118 * C1018 +
           ((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C7885 +
            (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50356 +
            (C43782 * C296 - C50394 * C312 + C43783 * C1557 - C50395 * C1563 +
             C43784 * C2636 - C43781 * C2641) *
                C7886 +
            (C43782 * C313 - C50394 * C326 + C43783 * C1564 - C50395 * C1569 +
             C43784 * C2642 - C43781 * C2645) *
                C50250) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C452 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C453 +
           ((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
             C43781 * C5455 - C43784 * C5452) *
                C7885 +
            (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
             C43781 * C5461 - C43784 * C5456) *
                C50356 +
            (C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C7886 +
            (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50250) *
               C50057 * C454) *
              C1018 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C452 +
           ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
            (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
            (C50394 * C1559 - C43782 * C1555 + C50395 * C2637 - C43783 * C2634 +
             C43781 * C4500 - C43784 * C4495) *
                C7886 +
            (C50394 * C1567 - C43782 * C1560 + C50395 * C2643 - C43783 * C2638 +
             C43781 * C4507 - C43784 * C4501) *
                C50250) *
               C50057 * C453 +
           ((C47751 - C47750 + C47753 - C47752 + C47755 - C47754) * C7885 +
            (C47757 - C47756 + C47759 - C47758 + C47761 - C47760) * C50356 +
            (C43782 * C2634 - C50394 * C2637 + C43783 * C4495 - C50395 * C4500 +
             C43784 * C22641 - C43781 * C22642) *
                C7886 +
            (C43782 * C2638 - C50394 * C2643 + C43783 * C4501 - C50395 * C4507 +
             C43784 * C22643 - C43781 * C22644) *
                C50250) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C7885 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50356 +
             (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
                C50057 * C50344 +
            ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C7885 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50356 +
             (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
                C50057 * C50182) *
               C1018 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
             (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
                C50057 * C50344 +
            ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
             (C50394 * C1559 - C43782 * C1555 + C50395 * C2637 -
              C43783 * C2634 + C43781 * C4500 - C43784 * C4495) *
                 C7886 +
             (C50394 * C1567 - C43782 * C1560 + C50395 * C2643 -
              C43783 * C2638 + C43781 * C4507 - C43784 * C4501) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
             (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
                C50057 * C50344 +
            ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
             (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
                C50057 * C50182) *
               C1018 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
             (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
                C50057 * C50344 +
            ((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C7885 +
             (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50356 +
             (C43782 * C1556 - C50394 * C1561 + C43783 * C2635 -
              C50395 * C2639 + C43784 * C4497 - C43781 * C4504) *
                 C7886 +
             (C43782 * C1562 - C50394 * C1568 + C43783 * C2640 -
              C50395 * C2644 + C43784 * C4505 - C43781 * C4509) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50118 * C1018 +
           ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50118 * C1018 +
           ((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
            (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
            (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
               C50057 * C50118 * C50154) *
              C1021 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
               C50057 * C50118 * C1018 +
           ((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C7885 +
            (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50356 +
            (C43782 * C296 - C50394 * C312 + C43783 * C1557 - C50395 * C1563 +
             C43784 * C2636 - C43781 * C2641) *
                C7886 +
            (C43782 * C313 - C50394 * C326 + C43783 * C1564 - C50395 * C1569 +
             C43784 * C2642 - C43781 * C2645) *
                C50250) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
            C43781 * C473 - C43784 * C459) *
               C7885 +
           (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
            C43781 * C489 - C43784 * C474) *
               C50356 +
           (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
           (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
              C50057 * C50118 * C1089 +
          ((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
           (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
           (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
           (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
              C50057 * C50118 * C1090 +
          ((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
           (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
           (C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C7886 +
           (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50250) *
              C50057 * C50118 * C1091 +
          ((C47593 - C47592 + C47595 - C47594 + C47597 - C47596) * C7885 +
           (C47599 - C47598 + C47601 - C47600 + C47603 - C47602) * C50356 +
           (C43782 * C2436 - C50394 * C2439 + C43783 * C4090 - C50395 * C4092 +
            C43784 * C20391 - C43781 * C20392) *
               C7886 +
           (C43782 * C2440 - C50394 * C2445 + C43783 * C4093 - C50395 * C4096 +
            C43784 * C20393 - C43781 * C20394) *
               C50250) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C7885 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50356 +
             (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
             (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
                C50057 * C1669 +
            ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C7885 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50356 +
             (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
             (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
             (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
             (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
             (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
                C50057 * C1669 +
            ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
             (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
             (C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C7886 +
             (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50250) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
             (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
                C50057 * C1669 +
            ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
             (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
                C50057 * C50182) *
               C50343 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C7885 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50356 +
             (C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C7886 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50250) *
                C50057 * C1669 +
            ((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C7885 +
             (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50356 +
             (C43782 * C1556 - C50394 * C1561 + C43783 * C2635 -
              C50395 * C2639 + C43784 * C4497 - C43781 * C4504) *
                 C7886 +
             (C43782 * C1562 - C50394 * C1568 + C43783 * C2640 -
              C50395 * C2644 + C43784 * C4505 - C43781 * C4509) *
                 C50250) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50390 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50391 +
           ((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
             C43781 * C5455 - C43784 * C5452) *
                C7885 +
            (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
             C43781 * C5461 - C43784 * C5456) *
                C50356 +
            (C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C7886 +
            (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50250) *
               C50057 * C2085) *
              C50343 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C50390 +
           ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
            (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
            (C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C7886 +
            (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50250) *
               C50057 * C50391 +
           ((C47751 - C47750 + C47753 - C47752 + C47755 - C47754) * C7885 +
            (C47757 - C47756 + C47759 - C47758 + C47761 - C47760) * C50356 +
            (C43782 * C2634 - C50394 * C2637 + C43783 * C4495 - C50395 * C4500 +
             C43784 * C22641 - C43781 * C22642) *
                C7886 +
            (C43782 * C2638 - C50394 * C2643 + C43783 * C4501 - C50395 * C4507 +
             C43784 * C22643 - C43781 * C22644) *
                C50250) *
               C50057 * C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C1669 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50182) *
              C285 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C1669 +
           ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
            (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
            (C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C7886 +
            (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50250) *
               C50057 * C50182) *
              C286 +
          (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
            (C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C7886 +
            (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50250) *
               C50057 * C1669 +
           ((C48249 - C48248 + C48251 - C48250 + C48253 - C48252) * C7885 +
            (C48255 - C48254 + C48257 - C48256 + C48259 - C48258) * C50356 +
            (C43782 * C3152 - C50394 * C3155 + C43783 * C3588 - C50395 * C3590 +
             C43784 * C20997 - C43781 * C20998) *
                C7886 +
            (C43782 * C3156 - C50394 * C3161 + C43783 * C3591 - C50395 * C3594 +
             C43784 * C20999 - C43781 * C21000) *
                C50250) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C1669 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C1669 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
               C50057 * C50182) *
              C50102 * C1021 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
               C50057 * C1669 +
           ((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C7885 +
            (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50356 +
            (C43782 * C890 - C50394 * C897 + C43783 * C1210 - C50395 * C1216 +
             C43784 * C5998 - C43781 * C5999) *
                C7886 +
            (C43782 * C898 - C50394 * C905 + C43783 * C1217 - C50395 * C1222 +
             C43784 * C6000 - C43781 * C6001) *
                C50250) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
            C43781 * C473 - C43784 * C459) *
               C7885 +
           (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
            C43781 * C489 - C43784 * C474) *
               C50356 +
           (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
           (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
              C50057 * C1835 +
          ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
            C43784 * C1839 - C43781 * C1843) *
               C7885 +
           (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
            C43784 * C1844 - C43781 * C1851) *
               C50356 +
           (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
           (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
              C50057 * C1836 +
          ((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
            C43781 * C5455 - C43784 * C5452) *
               C7885 +
           (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
            C43781 * C5461 - C43784 * C5456) *
               C50356 +
           (C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C7886 +
           (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50250) *
              C50057 * C1837 +
          ((C43782 * C1839 - C50394 * C1843 + C43783 * C5452 - C50395 * C5455 +
            C43784 * C7288 - C43781 * C7290) *
               C7885 +
           (C43782 * C1844 - C50394 * C1851 + C43783 * C5456 - C50395 * C5461 +
            C43784 * C7291 - C43781 * C7294) *
               C50356 +
           (C43782 * C4494 - C50394 * C4498 + C43783 * C6404 - C50395 * C6406 +
            C43784 * C23545 - C43781 * C23546) *
               C7886 +
           (C43782 * C4499 - C50394 * C4506 + C43783 * C6407 - C50395 * C6410 +
            C43784 * C23547 - C43781 * C23548) *
               C50250) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C50390 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50391 +
           ((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
             C43781 * C5455 - C43784 * C5452) *
                C7885 +
            (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
             C43781 * C5461 - C43784 * C5456) *
                C50356 +
            (C47750 - C47751 + C47752 - C47753 + C47754 - C47755) * C7886 +
            (C47756 - C47757 + C47758 - C47759 + C47760 - C47761) * C50250) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C50390 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
               C50057 * C50391 +
           ((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C7885 +
            (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50356 +
            (C43782 * C1209 - C50394 * C1214 + C43783 * C4496 - C50395 * C4502 +
             C43784 * C6405 - C43781 * C6408) *
                C7886 +
            (C43782 * C1215 - C50394 * C1221 + C43783 * C4503 - C50395 * C4508 +
             C43784 * C6409 - C43781 * C6411) *
                C50250) *
               C50057 * C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C1669 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C7885 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50356 +
            (C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C7886 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50250) *
               C50057 * C1669 +
           ((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C7885 +
            (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50356 +
            (C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C7886 +
            (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50250) *
               C50057 * C50182) *
              C50102 * C1021 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C7885 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50356 +
            (C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C7886 +
            (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50250) *
               C50057 * C1669 +
           ((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C7885 +
            (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50356 +
            (C43782 * C890 - C50394 * C897 + C43783 * C1210 - C50395 * C1216 +
             C43784 * C5998 - C43781 * C5999) *
                C7886 +
            (C43782 * C898 - C50394 * C905 + C43783 * C1217 - C50395 * C1222 +
             C43784 * C6000 - C43781 * C6001) *
                C50250) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C7885 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50356 +
            (C46680 - C46681 + C46682 - C46683 + C46684 - C46685) * C7886 +
            (C46686 - C46687 + C46688 - C46689 + C46690 - C46691) * C50250) *
               C50057 * C1669 +
           ((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C7885 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50356 +
            (C47336 - C47337 + C47338 - C47339 + C47340 - C47341) * C7886 +
            (C47342 - C47343 + C47344 - C47345 + C47346 - C47347) * C50250) *
               C50057 * C50182) *
              C285 +
          (((C46681 - C46680 + C46683 - C46682 + C46685 - C46684) * C7885 +
            (C46687 - C46686 + C46689 - C46688 + C46691 - C46690) * C50356 +
            (C46692 - C46693 + C46694 - C46695 + C46696 - C46697) * C7886 +
            (C46698 - C46699 + C46700 - C46701 + C46702 - C46703) * C50250) *
               C50057 * C1669 +
           ((C47337 - C47336 + C47339 - C47338 + C47341 - C47340) * C7885 +
            (C47343 - C47342 + C47345 - C47344 + C47347 - C47346) * C50356 +
            (C48248 - C48249 + C48250 - C48251 + C48252 - C48253) * C7886 +
            (C48254 - C48255 + C48256 - C48257 + C48258 - C48259) * C50250) *
               C50057 * C50182) *
              C286 +
          (((C46693 - C46692 + C46695 - C46694 + C46697 - C46696) * C7885 +
            (C46699 - C46698 + C46701 - C46700 + C46703 - C46702) * C50356 +
            (C47592 - C47593 + C47594 - C47595 + C47596 - C47597) * C7886 +
            (C47598 - C47599 + C47600 - C47601 + C47602 - C47603) * C50250) *
               C50057 * C1669 +
           ((C48249 - C48248 + C48251 - C48250 + C48253 - C48252) * C7885 +
            (C48255 - C48254 + C48257 - C48256 + C48259 - C48258) * C50356 +
            (C43782 * C3152 - C50394 * C3155 + C43783 * C3588 - C50395 * C3590 +
             C43784 * C20997 - C43781 * C20998) *
                C7886 +
            (C43782 * C3156 - C50394 * C3161 + C43783 * C3591 - C50395 * C3594 +
             C43784 * C20999 - C43781 * C21000) *
                C50250) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C50343 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C50343 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50154) *
              C50387 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50118 * C50343 +
           (C33500 * C2287 + C33501 * C2282 +
            (C33157 - C33156 + C33159 - C33158) * C2288 +
            (C33161 - C33160 + C33163 - C33162) * C2283 +
            (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C2289 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C2284) *
               C50057 * C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C50343 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50154) *
              C50386 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C50343 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50154) *
              C50387 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50118 * C50343 +
           (C33504 * C16957 +
            ((C33493 - C33492 + C33495 - C33494) * C118 +
             (C33497 - C33496 + C33499 - C33498) * C50199) *
                C16958 +
            ((C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                 C118 +
             (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                 C50199) *
                C16959) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50118 * C50343 +
           ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50118 * C50343 +
           ((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
             C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
             C38442 * C4496) *
                C118 +
            (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
             C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
             C38442 * C4503) *
                C50199) *
               C50057 * C50118 * C50154) *
              C50387 +
          (((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
             C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
                C118 +
            (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
             C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
                C50199) *
               C50057 * C50118 * C50343 +
           ((C38439 * C292 - C38435 * C304 + C38440 * C890 - C38436 * C897 +
             C38441 * C1210 - C38437 * C1216 + C38442 * C5998 -
             C38438 * C5999) *
                C118 +
            (C38439 * C305 - C38435 * C322 + C38440 * C898 - C38436 * C905 +
             C38441 * C1217 - C38437 * C1222 + C38442 * C6000 -
             C38438 * C6001) *
                C50199) *
               C50057 * C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C2287 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C2282 +
             (C35874 - C35875 + C35876 - C35877) * C2288 +
             (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
             C35917 * C2284) *
                C50057 * C50344 +
            ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C2287 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C2282 +
             (C36550 - C36551 + C36552 - C36553) * C2288 +
             (C36554 - C36555 + C36556 - C36557) * C2283 +
             (C36558 - C36559 + C36560 - C36561) * C2289 +
             (C36562 - C36563 + C36564 - C36565) * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C35875 - C35874 + C35877 - C35876) * C2287 +
             (C35879 - C35878 + C35881 - C35880) * C2282 +
             (C35883 - C35882 + C35885 - C35884) * C2288 +
             (C35887 - C35886 + C35889 - C35888) * C2283 +
             (C35890 - C35891 + C35892 - C35893) * C2289 +
             (C35894 - C35895 + C35896 - C35897) * C2284) *
                C50057 * C50344 +
            ((C36551 - C36550 + C36553 - C36552) * C2287 +
             (C36555 - C36554 + C36557 - C36556) * C2282 +
             (C36559 - C36558 + C36561 - C36560) * C2288 +
             (C36563 - C36562 + C36565 - C36564) * C2283 +
             (C32931 * C3155 - C32933 * C3152 + C50278 * C3590 -
              C32934 * C3588) *
                 C2289 +
             (C32931 * C3161 - C32933 * C3156 + C50278 * C3594 -
              C32934 * C3591) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C2287 +
             (C32941 - C32940 + C32943 - C32942) * C2282 +
             (C33132 - C33133 + C33134 - C33135) * C2288 +
             (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
             C35915 * C2284) *
                C50057 * C50344 +
            ((C33311 - C33310 + C33313 - C33312) * C2287 +
             (C33315 - C33314 + C33317 - C33316) * C2282 +
             (C33862 - C33863 + C33864 - C33865) * C2288 +
             (C33866 - C33867 + C33868 - C33869) * C2283 +
             (C36566 - C36567 + C36568 - C36569) * C2289 +
             (C36570 - C36571 + C36572 - C36573) * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C33133 - C33132 + C33135 - C33134) * C2287 +
             (C33137 - C33136 + C33139 - C33138) * C2282 +
             (C33148 - C33149 + C33150 - C33151) * C2288 +
             (C33152 - C33153 + C33154 - C33155) * C2283 +
             (C35902 - C35903 + C35904 - C35905) * C2289 +
             (C35906 - C35907 + C35908 - C35909) * C2284) *
                C50057 * C50344 +
            ((C33863 - C33862 + C33865 - C33864) * C2287 +
             (C33867 - C33866 + C33869 - C33868) * C2282 +
             (C36567 - C36566 + C36569 - C36568) * C2288 +
             (C36571 - C36570 + C36573 - C36572) * C2283 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C2289 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C118 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50199) *
                 C16957 +
             ((C32936 - C32937 + C32938 - C32939) * C118 +
              (C32940 - C32941 + C32942 - C32943) * C50199) *
                 C16958 +
             C32984 * C16959) *
                C50344 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C118 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50199) *
                 C16957 +
             ((C33310 - C33311 + C33312 - C33313) * C118 +
              (C33314 - C33315 + C33316 - C33317) * C50199) *
                 C16958 +
             C33667 * C16959) *
                C50182) *
               C50343 +
           ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                  C118 +
              (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                  C50199) *
                 C16957 +
             ((C33132 - C33133 + C33134 - C33135) * C118 +
              (C33136 - C33137 + C33138 - C33139) * C50199) *
                 C16958 +
             C33504 * C16959) *
                C50344 +
            (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
               C32934 * C1208) *
                  C118 +
              (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
               C32934 * C1213) *
                  C50199) *
                 C16957 +
             ((C33862 - C33863 + C33864 - C33865) * C118 +
              (C33866 - C33867 + C33868 - C33869) * C50199) *
                 C16958 +
             ((C33870 - C33871 + C33872 - C33873) * C118 +
              (C33874 - C33875 + C33876 - C33877) * C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C288 +
          (((((C32937 - C32936 + C32939 - C32938) * C118 +
              (C32941 - C32940 + C32943 - C32942) * C50199) *
                 C16957 +
             ((C32945 - C32944 + C32947 - C32946) * C118 +
              (C32949 - C32948 + C32951 - C32950) * C50199) *
                 C16958 +
             C32985 * C16959) *
                C50344 +
            (((C33311 - C33310 + C33313 - C33312) * C118 +
              (C33315 - C33314 + C33317 - C33316) * C50199) *
                 C16957 +
             ((C33319 - C33318 + C33321 - C33320) * C118 +
              (C33323 - C33322 + C33325 - C33324) * C50199) *
                 C16958 +
             ((C33655 - C33656 + C33657 - C33658) * C118 +
              (C33659 - C33660 + C33661 - C33662) * C50199) *
                 C16959) *
                C50182) *
               C50343 +
           ((((C33133 - C33132 + C33135 - C33134) * C118 +
              (C33137 - C33136 + C33139 - C33138) * C50199) *
                 C16957 +
             ((C33141 - C33140 + C33143 - C33142) * C118 +
              (C33145 - C33144 + C33147 - C33146) * C50199) *
                 C16958 +
             ((C33492 - C33493 + C33494 - C33495) * C118 +
              (C33496 - C33497 + C33498 - C33499) * C50199) *
                 C16959) *
                C50344 +
            (((C33863 - C33862 + C33865 - C33864) * C118 +
              (C33867 - C33866 + C33869 - C33868) * C50199) *
                 C16957 +
             ((C33871 - C33870 + C33873 - C33872) * C118 +
              (C33875 - C33874 + C33877 - C33876) * C50199) *
                 C16958 +
             ((C32933 * C891 - C32931 * C899 + C32934 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C32933 * C900 - C32931 * C906 + C32934 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
              C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                 C118 +
             (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
              C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                 C50199) *
                C50057 * C50344 +
            ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
              C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
              C38438 * C5455) *
                 C118 +
             (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
              C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
              C38438 * C5461) *
                 C50199) *
                C50057 * C50182) *
               C50343 +
           (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
              C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
              C38438 * C4498) *
                 C118 +
             (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
              C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
              C38438 * C4506) *
                 C50199) *
                C50057 * C50344 +
            ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
              C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
              C38442 * C6404) *
                 C118 +
             (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
              C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
              C38442 * C6407) *
                 C50199) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
              C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                 C118 +
             (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
              C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                 C50199) *
                C50057 * C50344 +
            ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
              C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
              C38442 * C5453) *
                 C118 +
             (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
              C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
              C38442 * C5458) *
                 C50199) *
                C50057 * C50182) *
               C50343 +
           (((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
              C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
              C38442 * C4496) *
                 C118 +
             (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
              C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
              C38442 * C4503) *
                 C50199) *
                C50057 * C50344 +
            ((C38439 * C889 - C38435 * C895 + C38440 * C1209 - C38436 * C1214 +
              C38441 * C4496 - C38437 * C4502 + C38442 * C6405 -
              C38438 * C6408) *
                 C118 +
             (C38439 * C896 - C38435 * C904 + C38440 * C1215 - C38436 * C1221 +
              C38441 * C4503 - C38437 * C4508 + C38442 * C6409 -
              C38438 * C6411) *
                 C50199) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C32931 * C126 - C32933 * C119 + C50278 * C465 -
                 C32934 * C455) *
                    C118 +
                (C32931 * C140 - C32933 * C127 + C50278 * C485 -
                 C32934 * C466) *
                    C50199) *
                   C16957 +
               ((C32936 - C32937 + C32938 - C32939) * C118 +
                (C32940 - C32941 + C32942 - C32943) * C50199) *
                   C16958 +
               C32984 * C16959) *
                  C50118 * C50102 * C113 +
              (((C32937 - C32936 + C32939 - C32938) * C118 +
                (C32941 - C32940 + C32943 - C32942) * C50199) *
                   C16957 +
               ((C32945 - C32944 + C32947 - C32946) * C118 +
                (C32949 - C32948 + C32951 - C32950) * C50199) *
                   C16958 +
               C32985 * C16959) *
                  C50118 * C50102 * C114 +
              (C32984 * C16957 +
               ((C32953 - C32952 + C32955 - C32954) * C118 +
                (C32957 - C32956 + C32959 - C32958) * C50199) *
                   C16958 +
               ((C32960 - C32961 + C32962 - C32963) * C118 +
                (C32964 - C32965 + C32966 - C32967) * C50199) *
                   C16959) *
                  C50118 * C50102 * C115 +
              (C32985 * C16957 +
               ((C32961 - C32960 + C32963 - C32962) * C118 +
                (C32965 - C32964 + C32967 - C32966) * C50199) *
                   C16958 +
               ((C32933 * C124 - C32931 * C136 + C32934 * C740 -
                 C50278 * C741) *
                    C118 +
                (C32933 * C137 - C32931 * C145 + C32934 * C742 -
                 C50278 * C743) *
                    C50199) *
                   C16959) *
                  C50118 * C50102 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C32931 * C126 - C32933 * C119 + C50278 * C465 -
                  C32934 * C455) *
                     C118 +
                 (C32931 * C140 - C32933 * C127 + C50278 * C485 -
                  C32934 * C466) *
                     C50199) *
                    C16957 +
                ((C32936 - C32937 + C32938 - C32939) * C118 +
                 (C32940 - C32941 + C32942 - C32943) * C50199) *
                    C16958 +
                C32984 * C16959) *
                   C50118 * C285 +
               (((C32933 * C290 - C32931 * C300 + C32934 * C888 -
                  C50278 * C893) *
                     C118 +
                 (C32933 * C301 - C32931 * C320 + C32934 * C894 -
                  C50278 * C903) *
                     C50199) *
                    C16957 +
                ((C33132 - C33133 + C33134 - C33135) * C118 +
                 (C33136 - C33137 + C33138 - C33139) * C50199) *
                    C16958 +
                ((C33140 - C33141 + C33142 - C33143) * C118 +
                 (C33144 - C33145 + C33146 - C33147) * C50199) *
                    C16959) *
                   C50118 * C286 +
               (((C32931 * C308 - C32933 * C294 + C50278 * C1559 -
                  C32934 * C1555) *
                     C118 +
                 (C32931 * C324 - C32933 * C309 + C50278 * C1567 -
                  C32934 * C1560) *
                     C50199) *
                    C16957 +
                ((C33148 - C33149 + C33150 - C33151) * C118 +
                 (C33152 - C33153 + C33154 - C33155) * C50199) *
                    C16958 +
                ((C33156 - C33157 + C33158 - C33159) * C118 +
                 (C33160 - C33161 + C33162 - C33163) * C50199) *
                    C16959) *
                   C50118 * C287) *
                  C288 +
              ((((C32937 - C32936 + C32939 - C32938) * C118 +
                 (C32941 - C32940 + C32943 - C32942) * C50199) *
                    C16957 +
                ((C32945 - C32944 + C32947 - C32946) * C118 +
                 (C32949 - C32948 + C32951 - C32950) * C50199) *
                    C16958 +
                C32985 * C16959) *
                   C50118 * C285 +
               (((C33133 - C33132 + C33135 - C33134) * C118 +
                 (C33137 - C33136 + C33139 - C33138) * C50199) *
                    C16957 +
                ((C33141 - C33140 + C33143 - C33142) * C118 +
                 (C33145 - C33144 + C33147 - C33146) * C50199) *
                    C16958 +
                ((C32931 * C306 - C32933 * C293 + C50278 * C899 -
                  C32934 * C891) *
                     C118 +
                 (C32931 * C323 - C32933 * C307 + C50278 * C906 -
                  C32934 * C900) *
                     C50199) *
                    C16959) *
                   C50118 * C286 +
               (((C33149 - C33148 + C33151 - C33150) * C118 +
                 (C33153 - C33152 + C33155 - C33154) * C50199) *
                    C16957 +
                ((C33157 - C33156 + C33159 - C33158) * C118 +
                 (C33161 - C33160 + C33163 - C33162) * C50199) *
                    C16958 +
                ((C32933 * C297 - C32931 * C314 + C32934 * C1558 -
                  C50278 * C1565) *
                     C118 +
                 (C32933 * C315 - C32931 * C327 + C32934 * C1566 -
                  C50278 * C1570) *
                     C50199) *
                    C16959) *
                   C50118 * C287) *
                  C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C452 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            ((C33318 - C33319 + C33320 - C33321) * C118 +
             (C33322 - C33323 + C33324 - C33325) * C50199) *
                C16959) *
               C453 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C454) *
              C50102 * C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C452 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C32931 * C471 - C32933 * C458 + C50278 * C479 - C32934 * C462) *
                 C118 +
             (C32931 * C488 - C32933 * C472 + C50278 * C492 - C32934 * C480) *
                 C50199) *
                C16959) *
               C453 +
           (((C33327 - C33326 + C33329 - C33328) * C118 +
             (C33331 - C33330 + C33333 - C33332) * C50199) *
                C16957 +
            ((C33335 - C33334 + C33337 - C33336) * C118 +
             (C33339 - C33338 + C33341 - C33340) * C50199) *
                C16958 +
            ((C32933 * C462 - C32931 * C479 + C32934 * C1842 - C50278 * C1849) *
                 C118 +
             (C32933 * C480 - C32931 * C492 + C32934 * C1850 - C50278 * C1854) *
                 C50199) *
                C16959) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C32931 * C300 - C32933 * C290 + C50278 * C893 - C32934 * C888) *
               C2288 +
           (C32931 * C320 - C32933 * C301 + C50278 * C903 - C32934 * C894) *
               C2283 +
           (C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
               C2289 +
           (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
               C2284) *
              C50057 * C50118 * C50102 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C2287 +
           (C32941 - C32940 + C32943 - C32942) * C2282 +
           (C33132 - C33133 + C33134 - C33135) * C2288 +
           (C33136 - C33137 + C33138 - C33139) * C2283 +
           (C33149 - C33148 + C33151 - C33150) * C2289 +
           (C33153 - C33152 + C33155 - C33154) * C2284) *
              C50057 * C50118 * C50102 * C114 +
          (C32976 * C2287 + C32977 * C2282 +
           (C33141 - C33140 + C33143 - C33142) * C2288 +
           (C33145 - C33144 + C33147 - C33146) * C2283 +
           (C33156 - C33157 + C33158 - C33159) * C2289 +
           (C33160 - C33161 + C33162 - C33163) * C2284) *
              C50057 * C50118 * C50102 * C115 +
          (C32978 * C2287 + C32979 * C2282 +
           (C33493 - C33492 + C33495 - C33494) * C2288 +
           (C33497 - C33496 + C33499 - C33498) * C2283 +
           (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
               C2289 +
           (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
               C2284) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C285 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C286 +
           (C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C32931 * C2439 - C32933 * C2436 + C50278 * C4092 -
             C32934 * C4090) *
                C2289 +
            (C32931 * C2445 - C32933 * C2440 + C50278 * C4096 -
             C32934 * C4093) *
                C2284) *
               C50057 * C50118 * C287) *
              C288 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C285 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C286 +
           (C35914 * C2287 + C35915 * C2282 +
            (C35903 - C35902 + C35905 - C35904) * C2288 +
            (C35907 - C35906 + C35909 - C35908) * C2283 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C2289 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C2284) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C452 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C32933 * C888 - C32931 * C893 + C32934 * C1208 - C50278 * C1212) *
                C2288 +
            (C32933 * C894 - C32931 * C903 + C32934 * C1213 - C50278 * C1220) *
                C2283 +
            (C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
             C50278 * C2637) *
                C2289 +
            (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
             C50278 * C2643) *
                C2284) *
               C50057 * C453 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C32931 * C1212 - C32933 * C1208 + C50278 * C4498 -
             C32934 * C4494) *
                C2288 +
            (C32931 * C1220 - C32933 * C1213 + C50278 * C4506 -
             C32934 * C4499) *
                C2283 +
            (C32931 * C2637 - C32933 * C2634 + C50278 * C4500 -
             C32934 * C4495) *
                C2289 +
            (C32931 * C2643 - C32933 * C2638 + C50278 * C4507 -
             C32934 * C4501) *
                C2284) *
               C50057 * C454) *
              C50102 * C288 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C452 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C32931 * C1561 - C32933 * C1556 + C50278 * C2639 -
             C32934 * C2635) *
                C2289 +
            (C32931 * C1568 - C32933 * C1562 + C50278 * C2644 -
             C32934 * C2640) *
                C2284) *
               C50057 * C453 +
           ((C33327 - C33326 + C33329 - C33328) * C2287 +
            (C33331 - C33330 + C33333 - C33332) * C2282 +
            (C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
             C50278 * C4502) *
                C2288 +
            (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
             C50278 * C4508) *
                C2283 +
            (C32933 * C2635 - C32931 * C2639 + C32934 * C4497 -
             C50278 * C4504) *
                C2289 +
            (C32933 * C2640 - C32931 * C2644 + C32934 * C4505 -
             C50278 * C4509) *
                C2284) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
            C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
               C118 +
           (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
            C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
               C50199) *
              C50057 * C50118 * C50102 * C113 +
          ((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
            C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
               C118 +
           (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
            C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
               C50199) *
              C50057 * C50118 * C50102 * C114 +
          ((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
            C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
               C118 +
           (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
            C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
               C50199) *
              C50057 * C50118 * C50102 * C115 +
          ((C38439 * C122 - C38435 * C132 + C38440 * C458 - C38436 * C471 +
            C38441 * C462 - C38437 * C479 + C38442 * C1842 - C38438 * C1849) *
               C118 +
           (C38439 * C133 - C38435 * C143 + C38440 * C472 - C38436 * C488 +
            C38441 * C480 - C38437 * C492 + C38442 * C1850 - C38438 * C1854) *
               C50199) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50118 * C285 +
           ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50118 * C286 +
           ((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
             C38437 * C2637 - C38441 * C2634 + C38438 * C4500 -
             C38442 * C4495) *
                C118 +
            (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
             C38437 * C2643 - C38441 * C2638 + C38438 * C4507 -
             C38442 * C4501) *
                C50199) *
               C50057 * C50118 * C287) *
              C288 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50118 * C285 +
           ((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
             C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
             C38442 * C4496) *
                C118 +
            (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
             C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
             C38442 * C4503) *
                C50199) *
               C50057 * C50118 * C286 +
           ((C38439 * C295 - C38435 * C310 + C38440 * C1556 - C38436 * C1561 +
             C38441 * C2635 - C38437 * C2639 + C38442 * C4497 -
             C38438 * C4504) *
                C118 +
            (C38439 * C311 - C38435 * C325 + C38440 * C1562 - C38436 * C1568 +
             C38441 * C2640 - C38437 * C2644 + C38442 * C4505 -
             C38438 * C4509) *
                C50199) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C452 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C453 +
           ((C38435 * C473 - C38439 * C459 + C38436 * C1843 - C38440 * C1839 +
             C38437 * C5455 - C38441 * C5452 + C38438 * C7290 -
             C38442 * C7288) *
                C118 +
            (C38435 * C489 - C38439 * C474 + C38436 * C1851 - C38440 * C1844 +
             C38437 * C5461 - C38441 * C5456 + C38438 * C7294 -
             C38442 * C7291) *
                C50199) *
               C50057 * C454) *
              C50102 * C288 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C452 +
           ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
             C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
             C38442 * C5453) *
                C118 +
            (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
             C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
             C38442 * C5458) *
                C50199) *
               C50057 * C453 +
           ((C38439 * C460 - C38435 * C475 + C38440 * C1840 - C38436 * C1845 +
             C38441 * C5453 - C38437 * C5457 + C38442 * C7289 -
             C38438 * C7292) *
                C118 +
            (C38439 * C476 - C38435 * C490 + C38440 * C1846 - C38436 * C1852 +
             C38441 * C5458 - C38437 * C5462 + C38442 * C7293 -
             C38438 * C7295) *
                C50199) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50344 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C32933 * C888 - C32931 * C893 + C32934 * C1208 - C50278 * C1212) *
                C2288 +
            (C32933 * C894 - C32931 * C903 + C32934 * C1213 - C50278 * C1220) *
                C2283 +
            (C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
             C50278 * C2637) *
                C2289 +
            (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
             C50278 * C2643) *
                C2284) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50344 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C32931 * C1561 - C32933 * C1556 + C50278 * C2639 -
             C32934 * C2635) *
                C2289 +
            (C32931 * C1568 - C32933 * C1562 + C50278 * C2644 -
             C32934 * C2640) *
                C2284) *
               C50057 * C50182) *
              C50102 * C50387 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50344 +
           (C33663 * C2287 + C33664 * C2282 +
            (C33871 - C33870 + C33873 - C33872) * C2288 +
            (C33875 - C33874 + C33877 - C33876) * C2283 +
            (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
             C50278 * C2641) *
                C2289 +
            (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
             C50278 * C2645) *
                C2284) *
               C50057 * C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50344 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50102 * C50386 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50344 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50182) *
              C50102 * C50387 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50344 +
           (C33667 * C16957 +
            ((C33656 - C33655 + C33658 - C33657) * C118 +
             (C33660 - C33659 + C33662 - C33661) * C50199) *
                C16958 +
            ((C32933 * C463 - C32931 * C481 + C32934 * C464 - C50278 * C483) *
                 C118 +
             (C32933 * C482 - C32931 * C493 + C32934 * C484 - C50278 * C494) *
                 C50199) *
                C16959) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50344 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50344 +
           ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
             C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
             C38442 * C5453) *
                C118 +
            (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
             C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
             C38442 * C5458) *
                C50199) *
               C50057 * C50182) *
              C50102 * C50387 +
          (((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
             C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
                C118 +
            (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
             C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
                C50199) *
               C50057 * C50344 +
           ((C38439 * C457 - C38435 * C469 + C38440 * C461 - C38436 * C477 +
             C38441 * C1841 - C38437 * C1847 + C38442 * C5454 -
             C38438 * C5459) *
                C118 +
            (C38439 * C470 - C38435 * C487 + C38440 * C478 - C38436 * C491 +
             C38441 * C1848 - C38437 * C1853 + C38442 * C5460 -
             C38438 * C5463) *
                C50199) *
               C50057 * C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C285 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            ((C33140 - C33141 + C33142 - C33143) * C118 +
             (C33144 - C33145 + C33146 - C33147) * C50199) *
                C16959) *
               C50118 * C286 +
           (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50118 * C287) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C285 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C32931 * C306 - C32933 * C293 + C50278 * C899 - C32934 * C891) *
                 C118 +
             (C32931 * C323 - C32933 * C307 + C50278 * C906 - C32934 * C900) *
                 C50199) *
                C16959) *
               C50118 * C286 +
           (((C33149 - C33148 + C33151 - C33150) * C118 +
             (C33153 - C33152 + C33155 - C33154) * C50199) *
                C16957 +
            ((C33157 - C33156 + C33159 - C33158) * C118 +
             (C33161 - C33160 + C33163 - C33162) * C50199) *
                C16958 +
            ((C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C118 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50199) *
                C16959) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C50118 * C50102 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C118 +
            (C32941 - C32940 + C32943 - C32942) * C50199) *
               C16957 +
           ((C32945 - C32944 + C32947 - C32946) * C118 +
            (C32949 - C32948 + C32951 - C32950) * C50199) *
               C16958 +
           C32985 * C16959) *
              C50118 * C50102 * C114 +
          (C32984 * C16957 +
           ((C32953 - C32952 + C32955 - C32954) * C118 +
            (C32957 - C32956 + C32959 - C32958) * C50199) *
               C16958 +
           ((C32960 - C32961 + C32962 - C32963) * C118 +
            (C32964 - C32965 + C32966 - C32967) * C50199) *
               C16959) *
              C50118 * C50102 * C115 +
          (C32985 * C16957 +
           ((C32961 - C32960 + C32963 - C32962) * C118 +
            (C32965 - C32964 + C32967 - C32966) * C50199) *
               C16958 +
           ((C32933 * C124 - C32931 * C136 + C32934 * C740 - C50278 * C741) *
                C118 +
            (C32933 * C137 - C32931 * C145 + C32934 * C742 - C50278 * C743) *
                C50199) *
               C16959) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C32931 * C300 - C32933 * C290 + C50278 * C893 - C32934 * C888) *
               C2288 +
           (C32931 * C320 - C32933 * C301 + C50278 * C903 - C32934 * C894) *
               C2283 +
           (C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
               C2289 +
           (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
               C2284) *
              C50057 * C50118 * C50102 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C2287 +
           (C32941 - C32940 + C32943 - C32942) * C2282 +
           (C33132 - C33133 + C33134 - C33135) * C2288 +
           (C33136 - C33137 + C33138 - C33139) * C2283 +
           (C33149 - C33148 + C33151 - C33150) * C2289 +
           (C33153 - C33152 + C33155 - C33154) * C2284) *
              C50057 * C50118 * C50102 * C114 +
          (C32976 * C2287 + C32977 * C2282 +
           (C33141 - C33140 + C33143 - C33142) * C2288 +
           (C33145 - C33144 + C33147 - C33146) * C2283 +
           (C33156 - C33157 + C33158 - C33159) * C2289 +
           (C33160 - C33161 + C33162 - C33163) * C2284) *
              C50057 * C50118 * C50102 * C115 +
          (C32978 * C2287 + C32979 * C2282 +
           (C33493 - C33492 + C33495 - C33494) * C2288 +
           (C33497 - C33496 + C33499 - C33498) * C2283 +
           (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
               C2289 +
           (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
               C2284) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C285 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C286 +
           (C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C32931 * C2439 - C32933 * C2436 + C50278 * C4092 -
             C32934 * C4090) *
                C2289 +
            (C32931 * C2445 - C32933 * C2440 + C50278 * C4096 -
             C32934 * C4093) *
                C2284) *
               C50057 * C50118 * C287) *
              C288 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C285 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C286 +
           (C35914 * C2287 + C35915 * C2282 +
            (C35903 - C35902 + C35905 - C35904) * C2288 +
            (C35907 - C35906 + C35909 - C35908) * C2283 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C2289 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C2284) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
            C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
               C118 +
           (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
            C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
               C50199) *
              C50057 * C50118 * C50102 * C113 +
          ((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
            C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
               C118 +
           (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
            C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
               C50199) *
              C50057 * C50118 * C50102 * C114 +
          ((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
            C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
               C118 +
           (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
            C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
               C50199) *
              C50057 * C50118 * C50102 * C115 +
          ((C38439 * C122 - C38435 * C132 + C38440 * C458 - C38436 * C471 +
            C38441 * C462 - C38437 * C479 + C38442 * C1842 - C38438 * C1849) *
               C118 +
           (C38439 * C133 - C38435 * C143 + C38440 * C472 - C38436 * C488 +
            C38441 * C480 - C38437 * C492 + C38442 * C1850 - C38438 * C1854) *
               C50199) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50118 * C285 +
           ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50118 * C286 +
           ((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
             C38437 * C2637 - C38441 * C2634 + C38438 * C4500 -
             C38442 * C4495) *
                C118 +
            (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
             C38437 * C2643 - C38441 * C2638 + C38438 * C4507 -
             C38442 * C4501) *
                C50199) *
               C50057 * C50118 * C287) *
              C288 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50118 * C285 +
           ((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
             C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
             C38442 * C4496) *
                C118 +
            (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
             C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
             C38442 * C4503) *
                C50199) *
               C50057 * C50118 * C286 +
           ((C38439 * C295 - C38435 * C310 + C38440 * C1556 - C38436 * C1561 +
             C38441 * C2635 - C38437 * C2639 + C38442 * C4497 -
             C38438 * C4504) *
                C118 +
            (C38439 * C311 - C38435 * C325 + C38440 * C1562 - C38436 * C1568 +
             C38441 * C2640 - C38437 * C2644 + C38442 * C4505 -
             C38438 * C4509) *
                C50199) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C50388 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C50118 * C50389 +
           (C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C50388 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50389 +
           (C35914 * C2287 + C35915 * C2282 +
            (C35903 - C35902 + C35905 - C35904) * C2288 +
            (C35907 - C35906 + C35909 - C35908) * C2283 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C2289 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C2284) *
               C50057 * C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C50388 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50389 +
           (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50118 * C1324) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C50388 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50389 +
           (((C33149 - C33148 + C33151 - C33150) * C118 +
             (C33153 - C33152 + C33155 - C33154) * C50199) *
                C16957 +
            ((C33157 - C33156 + C33159 - C33158) * C118 +
             (C33161 - C33160 + C33163 - C33162) * C50199) *
                C16958 +
            ((C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C118 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50199) *
                C16959) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50118 * C50388 +
           ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50118 * C50389 +
           ((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
             C38437 * C2637 - C38441 * C2634 + C38438 * C4500 -
             C38442 * C4495) *
                C118 +
            (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
             C38437 * C2643 - C38441 * C2638 + C38438 * C4507 -
             C38442 * C4501) *
                C50199) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50118 * C50388 +
           ((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
             C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
             C38442 * C4496) *
                C118 +
            (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
             C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
             C38442 * C4503) *
                C50199) *
               C50057 * C50118 * C50389 +
           ((C38439 * C295 - C38435 * C310 + C38440 * C1556 - C38436 * C1561 +
             C38441 * C2635 - C38437 * C2639 + C38442 * C4497 -
             C38438 * C4504) *
                C118 +
            (C38439 * C311 - C38435 * C325 + C38440 * C1562 - C38436 * C1568 +
             C38441 * C2640 - C38437 * C2644 + C38442 * C4505 -
             C38438 * C4509) *
                C50199) *
               C50057 * C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50344 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C50388 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C50344 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50182) *
              C50389 +
          ((C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C50344 +
           (C37492 * C2287 + C37493 * C2282 +
            (C37485 - C37484 + C37487 - C37486) * C2288 +
            (C37489 - C37488 + C37491 - C37490) * C2283 +
            (C32933 * C4090 - C32931 * C4092 + C32934 * C20391 -
             C50278 * C20392) *
                C2289 +
            (C32933 * C4093 - C32931 * C4096 + C32934 * C20393 -
             C50278 * C20394) *
                C2284) *
               C50057 * C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50344 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50388 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50344 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50182) *
              C50389 +
          ((((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50344 +
           (((C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C16957 +
            ((C32933 * C1556 - C32931 * C1561 + C32934 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C32933 * C1562 - C32931 * C1568 + C32934 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C16958 +
            ((C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C16959) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50344 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50182) *
              C50388 +
          (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50344 +
           ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
             C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
             C38442 * C6404) *
                C118 +
            (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
             C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
             C38442 * C6407) *
                C50199) *
               C50057 * C50182) *
              C50389 +
          (((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
             C38437 * C2637 - C38441 * C2634 + C38438 * C4500 -
             C38442 * C4495) *
                C118 +
            (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
             C38437 * C2643 - C38441 * C2638 + C38438 * C4507 -
             C38442 * C4501) *
                C50199) *
               C50057 * C50344 +
           ((C38439 * C1555 - C38435 * C1559 + C38440 * C2634 - C38436 * C2637 +
             C38441 * C4495 - C38437 * C4500 + C38442 * C22641 -
             C38438 * C22642) *
                C118 +
            (C38439 * C1560 - C38435 * C1567 + C38440 * C2638 - C38436 * C2643 +
             C38441 * C4501 - C38437 * C4507 + C38442 * C22643 -
             C38438 * C22644) *
                C50199) *
               C50057 * C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C32931 * C126 - C32933 * C119 + C50278 * C465 -
                  C32934 * C455) *
                     C118 +
                 (C32931 * C140 - C32933 * C127 + C50278 * C485 -
                  C32934 * C466) *
                     C50199) *
                    C16957 +
                ((C32936 - C32937 + C32938 - C32939) * C118 +
                 (C32940 - C32941 + C32942 - C32943) * C50199) *
                    C16958 +
                C32984 * C16959) *
                   C50118 * C1018 +
               (((C32933 * C290 - C32931 * C300 + C32934 * C888 -
                  C50278 * C893) *
                     C118 +
                 (C32933 * C301 - C32931 * C320 + C32934 * C894 -
                  C50278 * C903) *
                     C50199) *
                    C16957 +
                ((C33132 - C33133 + C33134 - C33135) * C118 +
                 (C33136 - C33137 + C33138 - C33139) * C50199) *
                    C16958 +
                C33504 * C16959) *
                   C50118 * C50154) *
                  C1020 +
              ((((C32937 - C32936 + C32939 - C32938) * C118 +
                 (C32941 - C32940 + C32943 - C32942) * C50199) *
                    C16957 +
                ((C32945 - C32944 + C32947 - C32946) * C118 +
                 (C32949 - C32948 + C32951 - C32950) * C50199) *
                    C16958 +
                C32985 * C16959) *
                   C50118 * C1018 +
               (((C33133 - C33132 + C33135 - C33134) * C118 +
                 (C33137 - C33136 + C33139 - C33138) * C50199) *
                    C16957 +
                ((C33141 - C33140 + C33143 - C33142) * C118 +
                 (C33145 - C33144 + C33147 - C33146) * C50199) *
                    C16958 +
                ((C33492 - C33493 + C33494 - C33495) * C118 +
                 (C33496 - C33497 + C33498 - C33499) * C50199) *
                    C16959) *
                   C50118 * C50154) *
                  C1021 +
              ((C32984 * C16957 +
                ((C32953 - C32952 + C32955 - C32954) * C118 +
                 (C32957 - C32956 + C32959 - C32958) * C50199) *
                    C16958 +
                ((C32960 - C32961 + C32962 - C32963) * C118 +
                 (C32964 - C32965 + C32966 - C32967) * C50199) *
                    C16959) *
                   C50118 * C1018 +
               (C33504 * C16957 +
                ((C33493 - C33492 + C33495 - C33494) * C118 +
                 (C33497 - C33496 + C33499 - C33498) * C50199) *
                    C16958 +
                ((C32933 * C298 - C32931 * C316 + C32934 * C892 -
                  C50278 * C901) *
                     C118 +
                 (C32933 * C317 - C32931 * C328 + C32934 * C902 -
                  C50278 * C907) *
                     C50199) *
                    C16959) *
                   C50118 * C50154) *
                  C1022) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C32931 * C126 - C32933 * C119 + C50278 * C465 -
                 C32934 * C455) *
                    C118 +
                (C32931 * C140 - C32933 * C127 + C50278 * C485 -
                 C32934 * C466) *
                    C50199) *
                   C16957 +
               ((C32936 - C32937 + C32938 - C32939) * C118 +
                (C32940 - C32941 + C32942 - C32943) * C50199) *
                   C16958 +
               C32984 * C16959) *
                  C50118 * C1089 +
              (((C32933 * C290 - C32931 * C300 + C32934 * C888 -
                 C50278 * C893) *
                    C118 +
                (C32933 * C301 - C32931 * C320 + C32934 * C894 -
                 C50278 * C903) *
                    C50199) *
                   C16957 +
               ((C33132 - C33133 + C33134 - C33135) * C118 +
                (C33136 - C33137 + C33138 - C33139) * C50199) *
                   C16958 +
               C33504 * C16959) *
                  C50118 * C1090 +
              (((C32931 * C308 - C32933 * C294 + C50278 * C1559 -
                 C32934 * C1555) *
                    C118 +
                (C32931 * C324 - C32933 * C309 + C50278 * C1567 -
                 C32934 * C1560) *
                    C50199) *
                   C16957 +
               ((C33148 - C33149 + C33150 - C33151) * C118 +
                (C33152 - C33153 + C33154 - C33155) * C50199) *
                   C16958 +
               ((C33156 - C33157 + C33158 - C33159) * C118 +
                (C33160 - C33161 + C33162 - C33163) * C50199) *
                   C16959) *
                  C50118 * C1091 +
              (((C32933 * C1094 - C32931 * C1098 + C32934 * C3152 -
                 C50278 * C3155) *
                    C118 +
                (C32933 * C1099 - C32931 * C1106 + C32934 * C3156 -
                 C50278 * C3161) *
                    C50199) *
                   C16957 +
               ((C32933 * C1095 - C32931 * C1100 + C32934 * C3153 -
                 C50278 * C3157) *
                    C118 +
                (C32933 * C1101 - C32931 * C1107 + C32934 * C3158 -
                 C50278 * C3162) *
                    C50199) *
                   C16958 +
               ((C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
                 C50278 * C3159) *
                    C118 +
                (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
                 C50278 * C3163) *
                    C50199) *
                   C16959) *
                  C50118 * C1092) *
             C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C452 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C453 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C454) *
              C1018 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C452 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C453 +
           (((C32933 * C1208 - C32931 * C1212 + C32934 * C4494 -
              C50278 * C4498) *
                 C118 +
             (C32933 * C1213 - C32931 * C1220 + C32934 * C4499 -
              C50278 * C4506) *
                 C50199) *
                C16957 +
            ((C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
              C50278 * C4502) *
                 C118 +
             (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
              C50278 * C4508) *
                 C50199) *
                C16958 +
            ((C32933 * C1210 - C32931 * C1216 + C32934 * C5998 -
              C50278 * C5999) *
                 C118 +
             (C32933 * C1217 - C32931 * C1222 + C32934 * C6000 -
              C50278 * C6001) *
                 C50199) *
                C16959) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C1018 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C1018 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50118 * C1018 +
           (C33500 * C2287 + C33501 * C2282 +
            (C33157 - C33156 + C33159 - C33158) * C2288 +
            (C33161 - C33160 + C33163 - C33162) * C2283 +
            (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C2289 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C2284) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C35874 - C35875 + C35876 - C35877) * C2288 +
           (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
           C35917 * C2284) *
              C50057 * C50118 * C1089 +
          ((C35875 - C35874 + C35877 - C35876) * C2287 +
           (C35879 - C35878 + C35881 - C35880) * C2282 +
           (C35883 - C35882 + C35885 - C35884) * C2288 +
           (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
           C36831 * C2284) *
              C50057 * C50118 * C1090 +
          (C35916 * C2287 + C35917 * C2282 +
           (C35891 - C35890 + C35893 - C35892) * C2288 +
           (C35895 - C35894 + C35897 - C35896) * C2283 +
           (C36822 - C36823 + C36824 - C36825) * C2289 +
           (C36826 - C36827 + C36828 - C36829) * C2284) *
              C50057 * C50118 * C1091 +
          (C36830 * C2287 + C36831 * C2282 +
           (C36823 - C36822 + C36825 - C36824) * C2288 +
           (C36827 - C36826 + C36829 - C36828) * C2283 +
           (C32933 * C3428 - C32931 * C3430 + C32934 * C20725 -
            C50278 * C20726) *
               C2289 +
           (C32933 * C3431 - C32931 * C3434 + C32934 * C20727 -
            C50278 * C20728) *
               C2284) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C452 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 +
            (C36558 - C36559 + C36560 - C36561) * C2289 +
            (C36562 - C36563 + C36564 - C36565) * C2284) *
               C50057 * C453 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C36978 - C36979 + C36980 - C36981) * C2288 +
            (C36982 - C36983 + C36984 - C36985) * C2283 +
            (C36986 - C36987 + C36988 - C36989) * C2289 +
            (C36990 - C36991 + C36992 - C36993) * C2284) *
               C50057 * C454) *
              C1018 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C452 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C32931 * C3155 - C32933 * C3152 + C50278 * C3590 -
             C32934 * C3588) *
                C2289 +
            (C32931 * C3161 - C32933 * C3156 + C50278 * C3594 -
             C32934 * C3591) *
                C2284) *
               C50057 * C453 +
           ((C36979 - C36978 + C36981 - C36980) * C2287 +
            (C36983 - C36982 + C36985 - C36984) * C2282 +
            (C36987 - C36986 + C36989 - C36988) * C2288 +
            (C36991 - C36990 + C36993 - C36992) * C2283 +
            (C32933 * C3588 - C32931 * C3590 + C32934 * C20997 -
             C50278 * C20998) *
                C2289 +
            (C32933 * C3591 - C32931 * C3594 + C32934 * C20999 -
             C50278 * C21000) *
                C2284) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50118 * C1018 +
           ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50118 * C1018 +
           ((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
             C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
             C38442 * C4496) *
                C118 +
            (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
             C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
             C38442 * C4503) *
                C50199) *
               C50057 * C50118 * C50154) *
              C1021 +
          (((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
             C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
                C118 +
            (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
             C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
                C50199) *
               C50057 * C50118 * C1018 +
           ((C38439 * C292 - C38435 * C304 + C38440 * C890 - C38436 * C897 +
             C38441 * C1210 - C38437 * C1216 + C38442 * C5998 -
             C38438 * C5999) *
                C118 +
            (C38439 * C305 - C38435 * C322 + C38440 * C898 - C38436 * C905 +
             C38441 * C1217 - C38437 * C1222 + C38442 * C6000 -
             C38438 * C6001) *
                C50199) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
            C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
               C118 +
           (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
            C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
               C50199) *
              C50057 * C50118 * C1089 +
          ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
            C38441 * C1208 - C38437 * C1212 + C38442 * C4494 - C38438 * C4498) *
               C118 +
           (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
            C38441 * C1213 - C38437 * C1220 + C38442 * C4499 - C38438 * C4506) *
               C50199) *
              C50057 * C50118 * C1090 +
          ((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
            C38437 * C2637 - C38441 * C2634 + C38438 * C4500 - C38442 * C4495) *
               C118 +
           (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
            C38437 * C2643 - C38441 * C2638 + C38438 * C4507 - C38442 * C4501) *
               C50199) *
              C50057 * C50118 * C1091 +
          ((C38439 * C1094 - C38435 * C1098 + C38440 * C3152 - C38436 * C3155 +
            C38441 * C3588 - C38437 * C3590 + C38442 * C20997 -
            C38438 * C20998) *
               C118 +
           (C38439 * C1099 - C38435 * C1106 + C38440 * C3156 - C38436 * C3161 +
            C38441 * C3591 - C38437 * C3594 + C38442 * C20999 -
            C38438 * C21000) *
               C50199) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C452 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C453 +
           ((C38435 * C473 - C38439 * C459 + C38436 * C1843 - C38440 * C1839 +
             C38437 * C5455 - C38441 * C5452 + C38438 * C7290 -
             C38442 * C7288) *
                C118 +
            (C38435 * C489 - C38439 * C474 + C38436 * C1851 - C38440 * C1844 +
             C38437 * C5461 - C38441 * C5456 + C38438 * C7294 -
             C38442 * C7291) *
                C50199) *
               C50057 * C454) *
              C1018 +
          (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C452 +
           ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
             C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
             C38442 * C6404) *
                C118 +
            (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
             C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
             C38442 * C6407) *
                C50199) *
               C50057 * C453 +
           ((C38439 * C1208 - C38435 * C1212 + C38440 * C4494 - C38436 * C4498 +
             C38441 * C6404 - C38437 * C6406 + C38442 * C23545 -
             C38438 * C23546) *
                C118 +
            (C38439 * C1213 - C38435 * C1220 + C38440 * C4499 - C38436 * C4506 +
             C38441 * C6407 - C38437 * C6410 + C38442 * C23547 -
             C38438 * C23548) *
                C50199) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C2287 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C2282 +
             (C35874 - C35875 + C35876 - C35877) * C2288 +
             (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
             C35917 * C2284) *
                C50057 * C50344 +
            ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C2287 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C2282 +
             (C36550 - C36551 + C36552 - C36553) * C2288 +
             (C36554 - C36555 + C36556 - C36557) * C2283 +
             (C36558 - C36559 + C36560 - C36561) * C2289 +
             (C36562 - C36563 + C36564 - C36565) * C2284) *
                C50057 * C50182) *
               C1018 +
           (((C35875 - C35874 + C35877 - C35876) * C2287 +
             (C35879 - C35878 + C35881 - C35880) * C2282 +
             (C35883 - C35882 + C35885 - C35884) * C2288 +
             (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
             C36831 * C2284) *
                C50057 * C50344 +
            ((C36551 - C36550 + C36553 - C36552) * C2287 +
             (C36555 - C36554 + C36557 - C36556) * C2282 +
             (C36559 - C36558 + C36561 - C36560) * C2288 +
             (C36563 - C36562 + C36565 - C36564) * C2283 +
             (C32931 * C3155 - C32933 * C3152 + C50278 * C3590 -
              C32934 * C3588) *
                 C2289 +
             (C32931 * C3161 - C32933 * C3156 + C50278 * C3594 -
              C32934 * C3591) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C2287 +
             (C32941 - C32940 + C32943 - C32942) * C2282 +
             (C33132 - C33133 + C33134 - C33135) * C2288 +
             (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
             C35915 * C2284) *
                C50057 * C50344 +
            ((C33311 - C33310 + C33313 - C33312) * C2287 +
             (C33315 - C33314 + C33317 - C33316) * C2282 +
             (C33862 - C33863 + C33864 - C33865) * C2288 +
             (C33866 - C33867 + C33868 - C33869) * C2283 +
             (C36566 - C36567 + C36568 - C36569) * C2289 +
             (C36570 - C36571 + C36572 - C36573) * C2284) *
                C50057 * C50182) *
               C1018 +
           (((C33133 - C33132 + C33135 - C33134) * C2287 +
             (C33137 - C33136 + C33139 - C33138) * C2282 +
             (C33148 - C33149 + C33150 - C33151) * C2288 +
             (C33152 - C33153 + C33154 - C33155) * C2283 +
             (C35902 - C35903 + C35904 - C35905) * C2289 +
             (C35906 - C35907 + C35908 - C35909) * C2284) *
                C50057 * C50344 +
            ((C33863 - C33862 + C33865 - C33864) * C2287 +
             (C33867 - C33866 + C33869 - C33868) * C2282 +
             (C36567 - C36566 + C36569 - C36568) * C2288 +
             (C36571 - C36570 + C36573 - C36572) * C2283 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C2289 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C118 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50199) *
                 C16957 +
             ((C32936 - C32937 + C32938 - C32939) * C118 +
              (C32940 - C32941 + C32942 - C32943) * C50199) *
                 C16958 +
             C32984 * C16959) *
                C50344 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C118 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50199) *
                 C16957 +
             ((C33310 - C33311 + C33312 - C33313) * C118 +
              (C33314 - C33315 + C33316 - C33317) * C50199) *
                 C16958 +
             C33667 * C16959) *
                C50182) *
               C1018 +
           ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                  C118 +
              (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                  C50199) *
                 C16957 +
             ((C33132 - C33133 + C33134 - C33135) * C118 +
              (C33136 - C33137 + C33138 - C33139) * C50199) *
                 C16958 +
             C33504 * C16959) *
                C50344 +
            (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
               C32934 * C1208) *
                  C118 +
              (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
               C32934 * C1213) *
                  C50199) *
                 C16957 +
             ((C33862 - C33863 + C33864 - C33865) * C118 +
              (C33866 - C33867 + C33868 - C33869) * C50199) *
                 C16958 +
             ((C33870 - C33871 + C33872 - C33873) * C118 +
              (C33874 - C33875 + C33876 - C33877) * C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C32937 - C32936 + C32939 - C32938) * C118 +
              (C32941 - C32940 + C32943 - C32942) * C50199) *
                 C16957 +
             ((C32945 - C32944 + C32947 - C32946) * C118 +
              (C32949 - C32948 + C32951 - C32950) * C50199) *
                 C16958 +
             C32985 * C16959) *
                C50344 +
            (((C33311 - C33310 + C33313 - C33312) * C118 +
              (C33315 - C33314 + C33317 - C33316) * C50199) *
                 C16957 +
             ((C33319 - C33318 + C33321 - C33320) * C118 +
              (C33323 - C33322 + C33325 - C33324) * C50199) *
                 C16958 +
             ((C33655 - C33656 + C33657 - C33658) * C118 +
              (C33659 - C33660 + C33661 - C33662) * C50199) *
                 C16959) *
                C50182) *
               C1018 +
           ((((C33133 - C33132 + C33135 - C33134) * C118 +
              (C33137 - C33136 + C33139 - C33138) * C50199) *
                 C16957 +
             ((C33141 - C33140 + C33143 - C33142) * C118 +
              (C33145 - C33144 + C33147 - C33146) * C50199) *
                 C16958 +
             ((C33492 - C33493 + C33494 - C33495) * C118 +
              (C33496 - C33497 + C33498 - C33499) * C50199) *
                 C16959) *
                C50344 +
            (((C33863 - C33862 + C33865 - C33864) * C118 +
              (C33867 - C33866 + C33869 - C33868) * C50199) *
                 C16957 +
             ((C33871 - C33870 + C33873 - C33872) * C118 +
              (C33875 - C33874 + C33877 - C33876) * C50199) *
                 C16958 +
             ((C32933 * C891 - C32931 * C899 + C32934 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C32933 * C900 - C32931 * C906 + C32934 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
              C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                 C118 +
             (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
              C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                 C50199) *
                C50057 * C50344 +
            ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
              C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
              C38438 * C5455) *
                 C118 +
             (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
              C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
              C38438 * C5461) *
                 C50199) *
                C50057 * C50182) *
               C1018 +
           (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
              C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
              C38438 * C4498) *
                 C118 +
             (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
              C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
              C38438 * C4506) *
                 C50199) *
                C50057 * C50344 +
            ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
              C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
              C38442 * C6404) *
                 C118 +
             (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
              C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
              C38442 * C6407) *
                 C50199) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
              C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                 C118 +
             (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
              C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                 C50199) *
                C50057 * C50344 +
            ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
              C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
              C38442 * C5453) *
                 C118 +
             (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
              C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
              C38442 * C5458) *
                 C50199) *
                C50057 * C50182) *
               C1018 +
           (((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
              C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
              C38442 * C4496) *
                 C118 +
             (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
              C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
              C38442 * C4503) *
                 C50199) *
                C50057 * C50344 +
            ((C38439 * C889 - C38435 * C895 + C38440 * C1209 - C38436 * C1214 +
              C38441 * C4496 - C38437 * C4502 + C38442 * C6405 -
              C38438 * C6408) *
                 C118 +
             (C38439 * C896 - C38435 * C904 + C38440 * C1215 - C38436 * C1221 +
              C38441 * C4503 - C38437 * C4508 + C38442 * C6409 -
              C38438 * C6411) *
                 C50199) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C50118 * C1089 +
          (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                C118 +
            (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                C50199) *
               C16957 +
           ((C33132 - C33133 + C33134 - C33135) * C118 +
            (C33136 - C33137 + C33138 - C33139) * C50199) *
               C16958 +
           C33504 * C16959) *
              C50118 * C1090 +
          (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                C118 +
            (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                C50199) *
               C16957 +
           ((C33148 - C33149 + C33150 - C33151) * C118 +
            (C33152 - C33153 + C33154 - C33155) * C50199) *
               C16958 +
           ((C33156 - C33157 + C33158 - C33159) * C118 +
            (C33160 - C33161 + C33162 - C33163) * C50199) *
               C16959) *
              C50118 * C1091 +
          (((C32933 * C1094 - C32931 * C1098 + C32934 * C3152 -
             C50278 * C3155) *
                C118 +
            (C32933 * C1099 - C32931 * C1106 + C32934 * C3156 -
             C50278 * C3161) *
                C50199) *
               C16957 +
           ((C32933 * C1095 - C32931 * C1100 + C32934 * C3153 -
             C50278 * C3157) *
                C118 +
            (C32933 * C1101 - C32931 * C1107 + C32934 * C3158 -
             C50278 * C3162) *
                C50199) *
               C16958 +
           ((C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C118 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C50199) *
               C16959) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C1018 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50154) *
              C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C1018 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50154) *
              C1021 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50118 * C1018 +
           (C33504 * C16957 +
            ((C33493 - C33492 + C33495 - C33494) * C118 +
             (C33497 - C33496 + C33499 - C33498) * C50199) *
                C16958 +
            ((C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                 C118 +
             (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                 C50199) *
                C16959) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C1018 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C1018 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50118 * C1018 +
           (C33500 * C2287 + C33501 * C2282 +
            (C33157 - C33156 + C33159 - C33158) * C2288 +
            (C33161 - C33160 + C33163 - C33162) * C2283 +
            (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C2289 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C2284) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C35874 - C35875 + C35876 - C35877) * C2288 +
           (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
           C35917 * C2284) *
              C50057 * C50118 * C1089 +
          ((C35875 - C35874 + C35877 - C35876) * C2287 +
           (C35879 - C35878 + C35881 - C35880) * C2282 +
           (C35883 - C35882 + C35885 - C35884) * C2288 +
           (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
           C36831 * C2284) *
              C50057 * C50118 * C1090 +
          (C35916 * C2287 + C35917 * C2282 +
           (C35891 - C35890 + C35893 - C35892) * C2288 +
           (C35895 - C35894 + C35897 - C35896) * C2283 +
           (C36822 - C36823 + C36824 - C36825) * C2289 +
           (C36826 - C36827 + C36828 - C36829) * C2284) *
              C50057 * C50118 * C1091 +
          (C36830 * C2287 + C36831 * C2282 +
           (C36823 - C36822 + C36825 - C36824) * C2288 +
           (C36827 - C36826 + C36829 - C36828) * C2283 +
           (C32933 * C3428 - C32931 * C3430 + C32934 * C20725 -
            C50278 * C20726) *
               C2289 +
           (C32933 * C3431 - C32931 * C3434 + C32934 * C20727 -
            C50278 * C20728) *
               C2284) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50118 * C1018 +
           ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50118 * C1018 +
           ((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
             C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
             C38442 * C4496) *
                C118 +
            (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
             C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
             C38442 * C4503) *
                C50199) *
               C50057 * C50118 * C50154) *
              C1021 +
          (((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
             C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
                C118 +
            (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
             C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
                C50199) *
               C50057 * C50118 * C1018 +
           ((C38439 * C292 - C38435 * C304 + C38440 * C890 - C38436 * C897 +
             C38441 * C1210 - C38437 * C1216 + C38442 * C5998 -
             C38438 * C5999) *
                C118 +
            (C38439 * C305 - C38435 * C322 + C38440 * C898 - C38436 * C905 +
             C38441 * C1217 - C38437 * C1222 + C38442 * C6000 -
             C38438 * C6001) *
                C50199) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
            C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
               C118 +
           (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
            C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
               C50199) *
              C50057 * C50118 * C1089 +
          ((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
            C38441 * C1208 - C38437 * C1212 + C38442 * C4494 - C38438 * C4498) *
               C118 +
           (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
            C38441 * C1213 - C38437 * C1220 + C38442 * C4499 - C38438 * C4506) *
               C50199) *
              C50057 * C50118 * C1090 +
          ((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
            C38437 * C2637 - C38441 * C2634 + C38438 * C4500 - C38442 * C4495) *
               C118 +
           (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
            C38437 * C2643 - C38441 * C2638 + C38438 * C4507 - C38442 * C4501) *
               C50199) *
              C50057 * C50118 * C1091 +
          ((C38439 * C1094 - C38435 * C1098 + C38440 * C3152 - C38436 * C3155 +
            C38441 * C3588 - C38437 * C3590 + C38442 * C20997 -
            C38438 * C20998) *
               C118 +
           (C38439 * C1099 - C38435 * C1106 + C38440 * C3156 - C38436 * C3161 +
            C38441 * C3591 - C38437 * C3594 + C38442 * C20999 -
            C38438 * C21000) *
               C50199) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C2287 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C2282 +
             (C35874 - C35875 + C35876 - C35877) * C2288 +
             (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
             C35917 * C2284) *
                C50057 * C1669 +
            ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C2287 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C2282 +
             (C36550 - C36551 + C36552 - C36553) * C2288 +
             (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
             C37493 * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C35875 - C35874 + C35877 - C35876) * C2287 +
             (C35879 - C35878 + C35881 - C35880) * C2282 +
             (C35883 - C35882 + C35885 - C35884) * C2288 +
             (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
             C36831 * C2284) *
                C50057 * C1669 +
            ((C36551 - C36550 + C36553 - C36552) * C2287 +
             (C36555 - C36554 + C36557 - C36556) * C2282 +
             (C36559 - C36558 + C36561 - C36560) * C2288 +
             (C36563 - C36562 + C36565 - C36564) * C2283 +
             (C37484 - C37485 + C37486 - C37487) * C2289 +
             (C37488 - C37489 + C37490 - C37491) * C2284) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C2287 +
             (C32941 - C32940 + C32943 - C32942) * C2282 +
             (C33132 - C33133 + C33134 - C33135) * C2288 +
             (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
             C35915 * C2284) *
                C50057 * C1669 +
            ((C33311 - C33310 + C33313 - C33312) * C2287 +
             (C33315 - C33314 + C33317 - C33316) * C2282 +
             (C33862 - C33863 + C33864 - C33865) * C2288 +
             (C33866 - C33867 + C33868 - C33869) * C2283 +
             (C36566 - C36567 + C36568 - C36569) * C2289 +
             (C36570 - C36571 + C36572 - C36573) * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C33133 - C33132 + C33135 - C33134) * C2287 +
             (C33137 - C33136 + C33139 - C33138) * C2282 +
             (C33148 - C33149 + C33150 - C33151) * C2288 +
             (C33152 - C33153 + C33154 - C33155) * C2283 +
             (C35902 - C35903 + C35904 - C35905) * C2289 +
             (C35906 - C35907 + C35908 - C35909) * C2284) *
                C50057 * C1669 +
            ((C33863 - C33862 + C33865 - C33864) * C2287 +
             (C33867 - C33866 + C33869 - C33868) * C2282 +
             (C36567 - C36566 + C36569 - C36568) * C2288 +
             (C36571 - C36570 + C36573 - C36572) * C2283 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C2289 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C118 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50199) *
                 C16957 +
             ((C32936 - C32937 + C32938 - C32939) * C118 +
              (C32940 - C32941 + C32942 - C32943) * C50199) *
                 C16958 +
             C32984 * C16959) *
                C1669 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C118 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50199) *
                 C16957 +
             ((C33310 - C33311 + C33312 - C33313) * C118 +
              (C33314 - C33315 + C33316 - C33317) * C50199) *
                 C16958 +
             C33667 * C16959) *
                C50182) *
               C50343 +
           ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                  C118 +
              (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                  C50199) *
                 C16957 +
             ((C33132 - C33133 + C33134 - C33135) * C118 +
              (C33136 - C33137 + C33138 - C33139) * C50199) *
                 C16958 +
             C33504 * C16959) *
                C1669 +
            (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
               C32934 * C1208) *
                  C118 +
              (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
               C32934 * C1213) *
                  C50199) *
                 C16957 +
             ((C33862 - C33863 + C33864 - C33865) * C118 +
              (C33866 - C33867 + C33868 - C33869) * C50199) *
                 C16958 +
             ((C33870 - C33871 + C33872 - C33873) * C118 +
              (C33874 - C33875 + C33876 - C33877) * C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C32937 - C32936 + C32939 - C32938) * C118 +
              (C32941 - C32940 + C32943 - C32942) * C50199) *
                 C16957 +
             ((C32945 - C32944 + C32947 - C32946) * C118 +
              (C32949 - C32948 + C32951 - C32950) * C50199) *
                 C16958 +
             C32985 * C16959) *
                C1669 +
            (((C33311 - C33310 + C33313 - C33312) * C118 +
              (C33315 - C33314 + C33317 - C33316) * C50199) *
                 C16957 +
             ((C33319 - C33318 + C33321 - C33320) * C118 +
              (C33323 - C33322 + C33325 - C33324) * C50199) *
                 C16958 +
             ((C33655 - C33656 + C33657 - C33658) * C118 +
              (C33659 - C33660 + C33661 - C33662) * C50199) *
                 C16959) *
                C50182) *
               C50343 +
           ((((C33133 - C33132 + C33135 - C33134) * C118 +
              (C33137 - C33136 + C33139 - C33138) * C50199) *
                 C16957 +
             ((C33141 - C33140 + C33143 - C33142) * C118 +
              (C33145 - C33144 + C33147 - C33146) * C50199) *
                 C16958 +
             ((C33492 - C33493 + C33494 - C33495) * C118 +
              (C33496 - C33497 + C33498 - C33499) * C50199) *
                 C16959) *
                C1669 +
            (((C33863 - C33862 + C33865 - C33864) * C118 +
              (C33867 - C33866 + C33869 - C33868) * C50199) *
                 C16957 +
             ((C33871 - C33870 + C33873 - C33872) * C118 +
              (C33875 - C33874 + C33877 - C33876) * C50199) *
                 C16958 +
             ((C32933 * C891 - C32931 * C899 + C32934 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C32933 * C900 - C32931 * C906 + C32934 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
              C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                 C118 +
             (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
              C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                 C50199) *
                C50057 * C1669 +
            ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
              C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
              C38438 * C5455) *
                 C118 +
             (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
              C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
              C38438 * C5461) *
                 C50199) *
                C50057 * C50182) *
               C50343 +
           (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
              C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
              C38438 * C4498) *
                 C118 +
             (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
              C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
              C38438 * C4506) *
                 C50199) *
                C50057 * C1669 +
            ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
              C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
              C38442 * C6404) *
                 C118 +
             (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
              C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
              C38442 * C6407) *
                 C50199) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
              C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                 C118 +
             (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
              C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                 C50199) *
                C50057 * C1669 +
            ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
              C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
              C38442 * C5453) *
                 C118 +
             (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
              C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
              C38442 * C5458) *
                 C50199) *
                C50057 * C50182) *
               C50343 +
           (((C38435 * C302 - C38439 * C291 + C38436 * C895 - C38440 * C889 +
              C38437 * C1214 - C38441 * C1209 + C38438 * C4502 -
              C38442 * C4496) *
                 C118 +
             (C38435 * C321 - C38439 * C303 + C38436 * C904 - C38440 * C896 +
              C38437 * C1221 - C38441 * C1215 + C38438 * C4508 -
              C38442 * C4503) *
                 C50199) *
                C50057 * C1669 +
            ((C38439 * C889 - C38435 * C895 + C38440 * C1209 - C38436 * C1214 +
              C38441 * C4496 - C38437 * C4502 + C38442 * C6405 -
              C38438 * C6408) *
                 C118 +
             (C38439 * C896 - C38435 * C904 + C38440 * C1215 - C38436 * C1221 +
              C38441 * C4503 - C38437 * C4508 + C38442 * C6409 -
              C38438 * C6411) *
                 C50199) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50390 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50391 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C36978 - C36979 + C36980 - C36981) * C2288 +
            (C36982 - C36983 + C36984 - C36985) * C2283 +
            (C36986 - C36987 + C36988 - C36989) * C2289 +
            (C36990 - C36991 + C36992 - C36993) * C2284) *
               C50057 * C2085) *
              C50343 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C50390 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50391 +
           ((C36979 - C36978 + C36981 - C36980) * C2287 +
            (C36983 - C36982 + C36985 - C36984) * C2282 +
            (C36987 - C36986 + C36989 - C36988) * C2288 +
            (C36991 - C36990 + C36993 - C36992) * C2283 +
            (C32933 * C3588 - C32931 * C3590 + C32934 * C20997 -
             C50278 * C20998) *
                C2289 +
            (C32933 * C3591 - C32931 * C3594 + C32934 * C20999 -
             C50278 * C21000) *
                C2284) *
               C50057 * C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50390 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50391 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C2085) *
              C50343 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50390 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50391 +
           (((C32933 * C1208 - C32931 * C1212 + C32934 * C4494 -
              C50278 * C4498) *
                 C118 +
             (C32933 * C1213 - C32931 * C1220 + C32934 * C4499 -
              C50278 * C4506) *
                 C50199) *
                C16957 +
            ((C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
              C50278 * C4502) *
                 C118 +
             (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
              C50278 * C4508) *
                 C50199) *
                C16958 +
            ((C32933 * C1210 - C32931 * C1216 + C32934 * C5998 -
              C50278 * C5999) *
                 C118 +
             (C32933 * C1217 - C32931 * C1222 + C32934 * C6000 -
              C50278 * C6001) *
                 C50199) *
                C16959) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50390 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50391 +
           ((C38435 * C473 - C38439 * C459 + C38436 * C1843 - C38440 * C1839 +
             C38437 * C5455 - C38441 * C5452 + C38438 * C7290 -
             C38442 * C7288) *
                C118 +
            (C38435 * C489 - C38439 * C474 + C38436 * C1851 - C38440 * C1844 +
             C38437 * C5461 - C38441 * C5456 + C38438 * C7294 -
             C38442 * C7291) *
                C50199) *
               C50057 * C2085) *
              C50343 +
          (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C50390 +
           ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
             C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
             C38442 * C6404) *
                C118 +
            (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
             C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
             C38442 * C6407) *
                C50199) *
               C50057 * C50391 +
           ((C38439 * C1208 - C38435 * C1212 + C38440 * C4494 - C38436 * C4498 +
             C38441 * C6404 - C38437 * C6406 + C38442 * C23545 -
             C38438 * C23546) *
                C118 +
            (C38439 * C1213 - C38435 * C1220 + C38440 * C4499 - C38436 * C4506 +
             C38441 * C6407 - C38437 * C6410 + C38442 * C23547 -
             C38438 * C23548) *
                C50199) *
               C50057 * C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C32931 * C126 - C32933 * C119 + C50278 * C465 -
                  C32934 * C455) *
                     C118 +
                 (C32931 * C140 - C32933 * C127 + C50278 * C485 -
                  C32934 * C466) *
                     C50199) *
                    C16957 +
                ((C32936 - C32937 + C32938 - C32939) * C118 +
                 (C32940 - C32941 + C32942 - C32943) * C50199) *
                    C16958 +
                C32984 * C16959) *
                   C1669 +
               (((C32933 * C455 - C32931 * C465 + C32934 * C459 -
                  C50278 * C473) *
                     C118 +
                 (C32933 * C466 - C32931 * C485 + C32934 * C474 -
                  C50278 * C489) *
                     C50199) *
                    C16957 +
                ((C33310 - C33311 + C33312 - C33313) * C118 +
                 (C33314 - C33315 + C33316 - C33317) * C50199) *
                    C16958 +
                C33667 * C16959) *
                   C50182) *
                  C50102 * C1020 +
              ((((C32937 - C32936 + C32939 - C32938) * C118 +
                 (C32941 - C32940 + C32943 - C32942) * C50199) *
                    C16957 +
                ((C32945 - C32944 + C32947 - C32946) * C118 +
                 (C32949 - C32948 + C32951 - C32950) * C50199) *
                    C16958 +
                C32985 * C16959) *
                   C1669 +
               (((C33311 - C33310 + C33313 - C33312) * C118 +
                 (C33315 - C33314 + C33317 - C33316) * C50199) *
                    C16957 +
                ((C33319 - C33318 + C33321 - C33320) * C118 +
                 (C33323 - C33322 + C33325 - C33324) * C50199) *
                    C16958 +
                ((C33655 - C33656 + C33657 - C33658) * C118 +
                 (C33659 - C33660 + C33661 - C33662) * C50199) *
                    C16959) *
                   C50182) *
                  C50102 * C1021 +
              ((C32984 * C16957 +
                ((C32953 - C32952 + C32955 - C32954) * C118 +
                 (C32957 - C32956 + C32959 - C32958) * C50199) *
                    C16958 +
                ((C32960 - C32961 + C32962 - C32963) * C118 +
                 (C32964 - C32965 + C32966 - C32967) * C50199) *
                    C16959) *
                   C1669 +
               (C33667 * C16957 +
                ((C33656 - C33655 + C33658 - C33657) * C118 +
                 (C33660 - C33659 + C33662 - C33661) * C50199) *
                    C16958 +
                ((C32933 * C463 - C32931 * C481 + C32934 * C464 -
                  C50278 * C483) *
                     C118 +
                 (C32933 * C482 - C32931 * C493 + C32934 * C484 -
                  C50278 * C494) *
                     C50199) *
                    C16959) *
                   C50182) *
                  C50102 * C1022) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C32931 * C126 - C32933 * C119 + C50278 * C465 -
                  C32934 * C455) *
                     C118 +
                 (C32931 * C140 - C32933 * C127 + C50278 * C485 -
                  C32934 * C466) *
                     C50199) *
                    C16957 +
                ((C32936 - C32937 + C32938 - C32939) * C118 +
                 (C32940 - C32941 + C32942 - C32943) * C50199) *
                    C16958 +
                C32984 * C16959) *
                   C1669 +
               (((C32933 * C455 - C32931 * C465 + C32934 * C459 -
                  C50278 * C473) *
                     C118 +
                 (C32933 * C466 - C32931 * C485 + C32934 * C474 -
                  C50278 * C489) *
                     C50199) *
                    C16957 +
                ((C33310 - C33311 + C33312 - C33313) * C118 +
                 (C33314 - C33315 + C33316 - C33317) * C50199) *
                    C16958 +
                C33667 * C16959) *
                   C50182) *
                  C285 +
              ((((C32933 * C290 - C32931 * C300 + C32934 * C888 -
                  C50278 * C893) *
                     C118 +
                 (C32933 * C301 - C32931 * C320 + C32934 * C894 -
                  C50278 * C903) *
                     C50199) *
                    C16957 +
                ((C33132 - C33133 + C33134 - C33135) * C118 +
                 (C33136 - C33137 + C33138 - C33139) * C50199) *
                    C16958 +
                C33504 * C16959) *
                   C1669 +
               (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
                  C32934 * C1208) *
                     C118 +
                 (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
                  C32934 * C1213) *
                     C50199) *
                    C16957 +
                ((C33862 - C33863 + C33864 - C33865) * C118 +
                 (C33866 - C33867 + C33868 - C33869) * C50199) *
                    C16958 +
                ((C33870 - C33871 + C33872 - C33873) * C118 +
                 (C33874 - C33875 + C33876 - C33877) * C50199) *
                    C16959) *
                   C50182) *
                  C286 +
              ((((C32931 * C308 - C32933 * C294 + C50278 * C1559 -
                  C32934 * C1555) *
                     C118 +
                 (C32931 * C324 - C32933 * C309 + C50278 * C1567 -
                  C32934 * C1560) *
                     C50199) *
                    C16957 +
                ((C33148 - C33149 + C33150 - C33151) * C118 +
                 (C33152 - C33153 + C33154 - C33155) * C50199) *
                    C16958 +
                ((C33156 - C33157 + C33158 - C33159) * C118 +
                 (C33160 - C33161 + C33162 - C33163) * C50199) *
                    C16959) *
                   C1669 +
               (((C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
                  C50278 * C2637) *
                     C118 +
                 (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
                  C50278 * C2643) *
                     C50199) *
                    C16957 +
                ((C32933 * C1556 - C32931 * C1561 + C32934 * C2635 -
                  C50278 * C2639) *
                     C118 +
                 (C32933 * C1562 - C32931 * C1568 + C32934 * C2640 -
                  C50278 * C2644) *
                     C50199) *
                    C16958 +
                ((C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
                  C50278 * C2641) *
                     C118 +
                 (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
                  C50278 * C2645) *
                     C50199) *
                    C16959) *
                   C50182) *
                  C287) *
             C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C1835 +
          (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C118 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C50199) *
               C16957 +
           ((C33310 - C33311 + C33312 - C33313) * C118 +
            (C33314 - C33315 + C33316 - C33317) * C50199) *
               C16958 +
           C33667 * C16959) *
              C1836 +
          (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C118 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C50199) *
               C16957 +
           ((C33326 - C33327 + C33328 - C33329) * C118 +
            (C33330 - C33331 + C33332 - C33333) * C50199) *
               C16958 +
           ((C33334 - C33335 + C33336 - C33337) * C118 +
            (C33338 - C33339 + C33340 - C33341) * C50199) *
               C16959) *
              C1837 +
          (((C32933 * C1839 - C32931 * C1843 + C32934 * C5452 -
             C50278 * C5455) *
                C118 +
            (C32933 * C1844 - C32931 * C1851 + C32934 * C5456 -
             C50278 * C5461) *
                C50199) *
               C16957 +
           ((C32933 * C1840 - C32931 * C1845 + C32934 * C5453 -
             C50278 * C5457) *
                C118 +
            (C32933 * C1846 - C32931 * C1852 + C32934 * C5458 -
             C50278 * C5462) *
                C50199) *
               C16958 +
           ((C32933 * C1841 - C32931 * C1847 + C32934 * C5454 -
             C50278 * C5459) *
                C118 +
            (C32933 * C1848 - C32931 * C1853 + C32934 * C5460 -
             C50278 * C5463) *
                C50199) *
               C16959) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C1669 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C36566 - C36567 + C36568 - C36569) * C2289 +
            (C36570 - C36571 + C36572 - C36573) * C2284) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C1669 +
           (C33663 * C2287 + C33664 * C2282 +
            (C33871 - C33870 + C33873 - C33872) * C2288 +
            (C33875 - C33874 + C33877 - C33876) * C2283 +
            (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
             C50278 * C2641) *
                C2289 +
            (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
             C50278 * C2645) *
                C2284) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C285 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C1669 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50182) *
              C286 +
          ((C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C1669 +
           (C37492 * C2287 + C37493 * C2282 +
            (C37485 - C37484 + C37487 - C37486) * C2288 +
            (C37489 - C37488 + C37491 - C37490) * C2283 +
            (C32933 * C4090 - C32931 * C4092 + C32934 * C20391 -
             C50278 * C20392) *
                C2289 +
            (C32933 * C4093 - C32931 * C4096 + C32934 * C20393 -
             C50278 * C20394) *
                C2284) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C35874 - C35875 + C35876 - C35877) * C2288 +
           (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
           C35917 * C2284) *
              C50057 * C1835 +
          ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
               C2287 +
           (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
               C2282 +
           (C36550 - C36551 + C36552 - C36553) * C2288 +
           (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
           C37493 * C2284) *
              C50057 * C1836 +
          ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
               C2287 +
           (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
               C2282 +
           (C36978 - C36979 + C36980 - C36981) * C2288 +
           (C36982 - C36983 + C36984 - C36985) * C2283 +
           (C36986 - C36987 + C36988 - C36989) * C2289 +
           (C36990 - C36991 + C36992 - C36993) * C2284) *
              C50057 * C1837 +
          ((C32933 * C1839 - C32931 * C1843 + C32934 * C5452 - C50278 * C5455) *
               C2287 +
           (C32933 * C1844 - C32931 * C1851 + C32934 * C5456 - C50278 * C5461) *
               C2282 +
           (C32933 * C4494 - C32931 * C4498 + C32934 * C6404 - C50278 * C6406) *
               C2288 +
           (C32933 * C4499 - C32931 * C4506 + C32934 * C6407 - C50278 * C6410) *
               C2283 +
           (C32933 * C4495 - C32931 * C4500 + C32934 * C22641 -
            C50278 * C22642) *
               C2289 +
           (C32933 * C4501 - C32931 * C4507 + C32934 * C22643 -
            C50278 * C22644) *
               C2284) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C1669 +
           ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
             C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
             C38442 * C5453) *
                C118 +
            (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
             C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
             C38442 * C5458) *
                C50199) *
               C50057 * C50182) *
              C50102 * C1021 +
          (((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
             C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
                C118 +
            (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
             C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C457 - C38435 * C469 + C38440 * C461 - C38436 * C477 +
             C38441 * C1841 - C38437 * C1847 + C38442 * C5454 -
             C38438 * C5459) *
                C118 +
            (C38439 * C470 - C38435 * C487 + C38440 * C478 - C38436 * C491 +
             C38441 * C1848 - C38437 * C1853 + C38442 * C5460 -
             C38438 * C5463) *
                C50199) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50182) *
              C285 +
          (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C1669 +
           ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
             C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
             C38442 * C6404) *
                C118 +
            (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
             C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
             C38442 * C6407) *
                C50199) *
               C50057 * C50182) *
              C286 +
          (((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
             C38437 * C2637 - C38441 * C2634 + C38438 * C4500 -
             C38442 * C4495) *
                C118 +
            (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
             C38437 * C2643 - C38441 * C2638 + C38438 * C4507 -
             C38442 * C4501) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C1555 - C38435 * C1559 + C38440 * C2634 - C38436 * C2637 +
             C38441 * C4495 - C38437 * C4500 + C38442 * C22641 -
             C38438 * C22642) *
                C118 +
            (C38439 * C1560 - C38435 * C1567 + C38440 * C2638 - C38436 * C2643 +
             C38441 * C4501 - C38437 * C4507 + C38442 * C22643 -
             C38438 * C22644) *
                C50199) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
            C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
               C118 +
           (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
            C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
               C50199) *
              C50057 * C1835 +
          ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
            C38441 * C1839 - C38437 * C1843 + C38442 * C5452 - C38438 * C5455) *
               C118 +
           (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
            C38441 * C1844 - C38437 * C1851 + C38442 * C5456 - C38438 * C5461) *
               C50199) *
              C50057 * C1836 +
          ((C38435 * C473 - C38439 * C459 + C38436 * C1843 - C38440 * C1839 +
            C38437 * C5455 - C38441 * C5452 + C38438 * C7290 - C38442 * C7288) *
               C118 +
           (C38435 * C489 - C38439 * C474 + C38436 * C1851 - C38440 * C1844 +
            C38437 * C5461 - C38441 * C5456 + C38438 * C7294 - C38442 * C7291) *
               C50199) *
              C50057 * C1837 +
          ((C38439 * C1839 - C38435 * C1843 + C38440 * C5452 - C38436 * C5455 +
            C38441 * C7288 - C38437 * C7290 + C38442 * C39815 -
            C38438 * C39816) *
               C118 +
           (C38439 * C1844 - C38435 * C1851 + C38440 * C5456 - C38436 * C5461 +
            C38441 * C7291 - C38437 * C7294 + C38442 * C39817 -
            C38438 * C39818) *
               C50199) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50390 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50391 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C36978 - C36979 + C36980 - C36981) * C2288 +
            (C36982 - C36983 + C36984 - C36985) * C2283 +
            (C36986 - C36987 + C36988 - C36989) * C2289 +
            (C36990 - C36991 + C36992 - C36993) * C2284) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50390 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C36566 - C36567 + C36568 - C36569) * C2289 +
            (C36570 - C36571 + C36572 - C36573) * C2284) *
               C50057 * C50391 +
           ((C33327 - C33326 + C33329 - C33328) * C2287 +
            (C33331 - C33330 + C33333 - C33332) * C2282 +
            (C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
             C50278 * C4502) *
                C2288 +
            (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
             C50278 * C4508) *
                C2283 +
            (C32933 * C2635 - C32931 * C2639 + C32934 * C4497 -
             C50278 * C4504) *
                C2289 +
            (C32933 * C2640 - C32931 * C2644 + C32934 * C4505 -
             C50278 * C4509) *
                C2284) *
               C50057 * C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50390 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50391 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C2085) *
              C50102 * C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50390 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50391 +
           (((C33327 - C33326 + C33329 - C33328) * C118 +
             (C33331 - C33330 + C33333 - C33332) * C50199) *
                C16957 +
            ((C33335 - C33334 + C33337 - C33336) * C118 +
             (C33339 - C33338 + C33341 - C33340) * C50199) *
                C16958 +
            ((C32933 * C462 - C32931 * C479 + C32934 * C1842 - C50278 * C1849) *
                 C118 +
             (C32933 * C480 - C32931 * C492 + C32934 * C1850 - C50278 * C1854) *
                 C50199) *
                C16959) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C50390 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50391 +
           ((C38435 * C473 - C38439 * C459 + C38436 * C1843 - C38440 * C1839 +
             C38437 * C5455 - C38441 * C5452 + C38438 * C7290 -
             C38442 * C7288) *
                C118 +
            (C38435 * C489 - C38439 * C474 + C38436 * C1851 - C38440 * C1844 +
             C38437 * C5461 - C38441 * C5456 + C38438 * C7294 -
             C38442 * C7291) *
                C50199) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C50390 +
           ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
             C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
             C38442 * C5453) *
                C118 +
            (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
             C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
             C38442 * C5458) *
                C50199) *
               C50057 * C50391 +
           ((C38439 * C460 - C38435 * C475 + C38440 * C1840 - C38436 * C1845 +
             C38441 * C5453 - C38437 * C5457 + C38442 * C7289 -
             C38438 * C7292) *
                C118 +
            (C38439 * C476 - C38435 * C490 + C38440 * C1846 - C38436 * C1852 +
             C38441 * C5458 - C38437 * C5462 + C38442 * C7293 -
             C38438 * C7295) *
                C50199) *
               C50057 * C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C285 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C1669 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50182) *
              C286 +
          ((((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C1669 +
           (((C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C16957 +
            ((C32933 * C1556 - C32931 * C1561 + C32934 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C32933 * C1562 - C32931 * C1568 + C32934 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C16958 +
            ((C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C16959) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50102 * C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C1669 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50182) *
              C50102 * C1021 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C1669 +
           (C33667 * C16957 +
            ((C33656 - C33655 + C33658 - C33657) * C118 +
             (C33660 - C33659 + C33662 - C33661) * C50199) *
                C16958 +
            ((C32933 * C463 - C32931 * C481 + C32934 * C464 - C50278 * C483) *
                 C118 +
             (C32933 * C482 - C32931 * C493 + C32934 * C484 - C50278 * C494) *
                 C50199) *
                C16959) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C1669 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C36566 - C36567 + C36568 - C36569) * C2289 +
            (C36570 - C36571 + C36572 - C36573) * C2284) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C1669 +
           (C33663 * C2287 + C33664 * C2282 +
            (C33871 - C33870 + C33873 - C33872) * C2288 +
            (C33875 - C33874 + C33877 - C33876) * C2283 +
            (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
             C50278 * C2641) *
                C2289 +
            (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
             C50278 * C2645) *
                C2284) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C285 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C1669 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50182) *
              C286 +
          ((C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C1669 +
           (C37492 * C2287 + C37493 * C2282 +
            (C37485 - C37484 + C37487 - C37486) * C2288 +
            (C37489 - C37488 + C37491 - C37490) * C2283 +
            (C32933 * C4090 - C32931 * C4092 + C32934 * C20391 -
             C50278 * C20392) *
                C2289 +
            (C32933 * C4093 - C32931 * C4096 + C32934 * C20393 -
             C50278 * C20394) *
                C2284) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C38439 * C120 - C38435 * C128 + C38440 * C456 - C38436 * C467 +
             C38441 * C460 - C38437 * C475 + C38442 * C1840 - C38438 * C1845) *
                C118 +
            (C38439 * C129 - C38435 * C141 + C38440 * C468 - C38436 * C486 +
             C38441 * C476 - C38437 * C490 + C38442 * C1846 - C38438 * C1852) *
                C50199) *
               C50057 * C1669 +
           ((C38435 * C467 - C38439 * C456 + C38436 * C475 - C38440 * C460 +
             C38437 * C1845 - C38441 * C1840 + C38438 * C5457 -
             C38442 * C5453) *
                C118 +
            (C38435 * C486 - C38439 * C468 + C38436 * C490 - C38440 * C476 +
             C38437 * C1852 - C38441 * C1846 + C38438 * C5462 -
             C38442 * C5458) *
                C50199) *
               C50057 * C50182) *
              C50102 * C1021 +
          (((C38435 * C130 - C38439 * C121 + C38436 * C469 - C38440 * C457 +
             C38437 * C477 - C38441 * C461 + C38438 * C1847 - C38442 * C1841) *
                C118 +
            (C38435 * C142 - C38439 * C131 + C38436 * C487 - C38440 * C470 +
             C38437 * C491 - C38441 * C478 + C38438 * C1853 - C38442 * C1848) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C457 - C38435 * C469 + C38440 * C461 - C38436 * C477 +
             C38441 * C1841 - C38437 * C1847 + C38442 * C5454 -
             C38438 * C5459) *
                C118 +
            (C38439 * C470 - C38435 * C487 + C38440 * C478 - C38436 * C491 +
             C38441 * C1848 - C38437 * C1853 + C38442 * C5460 -
             C38438 * C5463) *
                C50199) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38435 * C126 - C38439 * C119 + C38436 * C465 - C38440 * C455 +
             C38437 * C473 - C38441 * C459 + C38438 * C1843 - C38442 * C1839) *
                C118 +
            (C38435 * C140 - C38439 * C127 + C38436 * C485 - C38440 * C466 +
             C38437 * C489 - C38441 * C474 + C38438 * C1851 - C38442 * C1844) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C455 - C38435 * C465 + C38440 * C459 - C38436 * C473 +
             C38441 * C1839 - C38437 * C1843 + C38442 * C5452 -
             C38438 * C5455) *
                C118 +
            (C38439 * C466 - C38435 * C485 + C38440 * C474 - C38436 * C489 +
             C38441 * C1844 - C38437 * C1851 + C38442 * C5456 -
             C38438 * C5461) *
                C50199) *
               C50057 * C50182) *
              C285 +
          (((C38439 * C290 - C38435 * C300 + C38440 * C888 - C38436 * C893 +
             C38441 * C1208 - C38437 * C1212 + C38442 * C4494 -
             C38438 * C4498) *
                C118 +
            (C38439 * C301 - C38435 * C320 + C38440 * C894 - C38436 * C903 +
             C38441 * C1213 - C38437 * C1220 + C38442 * C4499 -
             C38438 * C4506) *
                C50199) *
               C50057 * C1669 +
           ((C38435 * C893 - C38439 * C888 + C38436 * C1212 - C38440 * C1208 +
             C38437 * C4498 - C38441 * C4494 + C38438 * C6406 -
             C38442 * C6404) *
                C118 +
            (C38435 * C903 - C38439 * C894 + C38436 * C1220 - C38440 * C1213 +
             C38437 * C4506 - C38441 * C4499 + C38438 * C6410 -
             C38442 * C6407) *
                C50199) *
               C50057 * C50182) *
              C286 +
          (((C38435 * C308 - C38439 * C294 + C38436 * C1559 - C38440 * C1555 +
             C38437 * C2637 - C38441 * C2634 + C38438 * C4500 -
             C38442 * C4495) *
                C118 +
            (C38435 * C324 - C38439 * C309 + C38436 * C1567 - C38440 * C1560 +
             C38437 * C2643 - C38441 * C2638 + C38438 * C4507 -
             C38442 * C4501) *
                C50199) *
               C50057 * C1669 +
           ((C38439 * C1555 - C38435 * C1559 + C38440 * C2634 - C38436 * C2637 +
             C38441 * C4495 - C38437 * C4500 + C38442 * C22641 -
             C38438 * C22642) *
                C118 +
            (C38439 * C1560 - C38435 * C1567 + C38440 * C2638 - C38436 * C2643 +
             C38441 * C4501 - C38437 * C4507 + C38442 * C22643 -
             C38438 * C22644) *
                C50199) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50118 * C50343 +
           (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50118 * C50154) *
              C50386 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50118 * C50343 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                C50328 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                C50062) *
               C50118 * C50154) *
              C50387 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
                C50328 +
            ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
             (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
                C50062) *
               C50118 * C50343 +
           (((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C118 +
             (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50199) *
                C50328 +
            ((C43782 * C293 - C50394 * C306 + C43783 * C891 - C50395 * C899 +
              C43784 * C1211 - C43781 * C1218) *
                 C118 +
             (C43782 * C307 - C50394 * C323 + C43783 * C900 - C50395 * C906 +
              C43784 * C1219 - C43781 * C1223) *
                 C50199) *
                C50062) *
               C50118 * C50154) *
              C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
               C43781 * C473 - C43784 * C459) *
                  C118 +
              (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
               C43781 * C489 - C43784 * C474) *
                  C50199) *
                 C50328 +
             ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
              (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                 C50062) *
                C50344 +
            (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
               C43784 * C1839 - C43781 * C1843) *
                  C118 +
              (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
               C43784 * C1844 - C43781 * C1851) *
                  C50199) *
                 C50328 +
             ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
              (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
               C43784 * C1208 - C43781 * C1212) *
                  C118 +
              (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
               C43784 * C1213 - C43781 * C1220) *
                  C50199) *
                 C50328 +
             ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
              (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                 C50062) *
                C50344 +
            (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
               C43781 * C4498 - C43784 * C4494) *
                  C118 +
              (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
               C43781 * C4506 - C43784 * C4499) *
                  C50199) *
                 C50328 +
             ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
              (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C288 +
          (((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
              (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                 C50328 +
             ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
              (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                 C50062) *
                C50344 +
            (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
              (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                 C50328 +
             ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
              (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
              (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                 C50328 +
             ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
              (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                 C50062) *
                C50344 +
            (((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C118 +
              (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50199) *
                 C50328 +
             ((C43782 * C890 - C50394 * C897 + C43783 * C1210 - C50395 * C1216 +
               C43784 * C5998 - C43781 * C5999) *
                  C118 +
              (C43782 * C898 - C50394 * C905 + C43783 * C1217 - C50395 * C1222 +
               C43784 * C6000 - C43781 * C6001) *
                  C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50118 * C286 +
           (((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
              C43781 * C2637 - C43784 * C2634) *
                 C118 +
             (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
              C43781 * C2643 - C43784 * C2638) *
                 C50199) *
                C50328 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                C50328 +
            ((C50394 * C304 - C43782 * C292 + C50395 * C897 - C43783 * C890 +
              C43781 * C1216 - C43784 * C1210) *
                 C118 +
             (C50394 * C322 - C43782 * C305 + C50395 * C905 - C43783 * C898 +
              C43781 * C1222 - C43784 * C1217) *
                 C50199) *
                C50062) *
               C50118 * C286 +
           (((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C118 +
             (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50199) *
                C50328 +
            ((C43782 * C296 - C50394 * C312 + C43783 * C1557 - C50395 * C1563 +
              C43784 * C2636 - C43781 * C2641) *
                 C118 +
             (C43782 * C313 - C50394 * C326 + C43783 * C1564 - C50395 * C1569 +
              C43784 * C2642 - C43781 * C2645) *
                 C50199) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C118 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50199) *
               C50328 +
           ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
               C50328 +
           ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
               C50062) *
              C50118 * C50102 * C114 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
               C50328 +
           ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
               C50062) *
              C50118 * C50102 * C115 +
          (((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C118 +
            (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50199) *
               C50328 +
           ((C43782 * C123 - C50394 * C134 + C43783 * C463 - C50395 * C481 +
             C43784 * C464 - C43781 * C483) *
                C118 +
            (C43782 * C135 - C50394 * C144 + C43783 * C482 - C50395 * C493 +
             C43784 * C484 - C43781 * C494) *
                C50199) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C452 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C453 +
           (((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
              C43781 * C5455 - C43784 * C5452) *
                 C118 +
             (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
              C43781 * C5461 - C43784 * C5456) *
                 C50199) *
                C50328 +
            ((C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C118 +
             (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50199) *
                C50062) *
               C454) *
              C50102 * C288 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C452 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                C50328 +
            ((C50394 * C469 - C43782 * C457 + C50395 * C477 - C43783 * C461 +
              C43781 * C1847 - C43784 * C1841) *
                 C118 +
             (C50394 * C487 - C43782 * C470 + C50395 * C491 - C43783 * C478 +
              C43781 * C1853 - C43784 * C1848) *
                 C50199) *
                C50062) *
               C453 +
           (((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C118 +
             (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50199) *
                C50328 +
            ((C43782 * C461 - C50394 * C477 + C43783 * C1841 - C50395 * C1847 +
              C43784 * C5454 - C43781 * C5459) *
                 C118 +
             (C43782 * C478 - C50394 * C491 + C43783 * C1848 - C50395 * C1853 +
              C43784 * C5460 - C43781 * C5463) *
                 C50199) *
                C50062) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50344 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50182) *
              C50102 * C50386 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50344 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                C50328 +
            ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                C50062) *
               C50182) *
              C50102 * C50387 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
                C50328 +
            ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
             (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
                C50062) *
               C50344 +
           (((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C118 +
             (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50199) *
                C50328 +
            ((C43782 * C458 - C50394 * C471 + C43783 * C462 - C50395 * C479 +
              C43784 * C1842 - C43781 * C1849) *
                 C118 +
             (C43782 * C472 - C50394 * C488 + C43783 * C480 - C50395 * C492 +
              C43784 * C1850 - C43781 * C1854) *
                 C50199) *
                C50062) *
               C50182) *
              C50102 * C621)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C118 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50199) *
               C50328 +
           ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
               C50062) *
              C50118 * C50102 * C113 +
          (((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
            (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
               C50328 +
           ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
            (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
               C50062) *
              C50118 * C50102 * C114 +
          (((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
            (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
               C50328 +
           ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
            (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
               C50062) *
              C50118 * C50102 * C115 +
          (((C43811 - C43810 + C43813 - C43812 + C43815 - C43814) * C118 +
            (C43817 - C43816 + C43819 - C43818 + C43821 - C43820) * C50199) *
               C50328 +
           ((C43782 * C123 - C50394 * C134 + C43783 * C463 - C50395 * C481 +
             C43784 * C464 - C43781 * C483) *
                C118 +
            (C43782 * C135 - C50394 * C144 + C43783 * C482 - C50395 * C493 +
             C43784 * C484 - C43781 * C494) *
                C50199) *
               C50062) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50118 * C286 +
           (((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
              C43781 * C2637 - C43784 * C2634) *
                 C118 +
             (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
              C43781 * C2643 - C43784 * C2638) *
                 C50199) *
                C50328 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
                C50062) *
               C50118 * C287) *
              C288 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50118 * C285 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                C50328 +
            ((C50394 * C304 - C43782 * C292 + C50395 * C897 - C43783 * C890 +
              C43781 * C1216 - C43784 * C1210) *
                 C118 +
             (C50394 * C322 - C43782 * C305 + C50395 * C905 - C43783 * C898 +
              C43781 * C1222 - C43784 * C1217) *
                 C50199) *
                C50062) *
               C50118 * C286 +
           (((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C118 +
             (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50199) *
                C50328 +
            ((C43782 * C296 - C50394 * C312 + C43783 * C1557 - C50395 * C1563 +
              C43784 * C2636 - C43781 * C2641) *
                 C118 +
             (C43782 * C313 - C50394 * C326 + C43783 * C1564 - C50395 * C1569 +
              C43784 * C2642 - C43781 * C2645) *
                 C50199) *
                C50062) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50118 * C50388 +
           (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50118 * C50389 +
           (((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
              C43781 * C2637 - C43784 * C2634) *
                 C118 +
             (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
              C43781 * C2643 - C43784 * C2638) *
                 C50199) *
                C50328 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
                C50062) *
               C50118 * C1324) *
              C50335 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50118 * C50388 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                C50328 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                C50062) *
               C50118 * C50389 +
           (((C43981 - C43980 + C43983 - C43982 + C43985 - C43984) * C118 +
             (C43987 - C43986 + C43989 - C43988 + C43991 - C43990) * C50199) *
                C50328 +
            ((C43782 * C296 - C50394 * C312 + C43783 * C1557 - C50395 * C1563 +
              C43784 * C2636 - C43781 * C2641) *
                 C118 +
             (C43782 * C313 - C50394 * C326 + C43783 * C1564 - C50395 * C1569 +
              C43784 * C2642 - C43781 * C2645) *
                 C50199) *
                C50062) *
               C50118 * C1324) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50344 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50182) *
              C50388 +
          ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50344 +
           (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
              C43781 * C4498 - C43784 * C4494) *
                 C118 +
             (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
              C43781 * C4506 - C43784 * C4499) *
                 C50199) *
                C50328 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                C50062) *
               C50182) *
              C50389 +
          ((((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
              C43781 * C2637 - C43784 * C2634) *
                 C118 +
             (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
              C43781 * C2643 - C43784 * C2638) *
                 C50199) *
                C50328 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
                C50062) *
               C50344 +
           (((C43782 * C1555 - C50394 * C1559 + C43783 * C2634 -
              C50395 * C2637 + C43784 * C4495 - C43781 * C4500) *
                 C118 +
             (C43782 * C1560 - C50394 * C1567 + C43783 * C2638 -
              C50395 * C2643 + C43784 * C4501 - C43781 * C4507) *
                 C50199) *
                C50328 +
            ((C43782 * C1556 - C50394 * C1561 + C43783 * C2635 -
              C50395 * C2639 + C43784 * C4497 - C43781 * C4504) *
                 C118 +
             (C43782 * C1562 - C50394 * C1568 + C43783 * C2640 -
              C50395 * C2644 + C43784 * C4505 - C43781 * C4509) *
                 C50199) *
                C50062) *
               C50182) *
              C1324) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C118 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50199) *
               C50328 +
           ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
               C50062) *
              C50118 * C1089 +
          (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
             C43784 * C1208 - C43781 * C1212) *
                C118 +
            (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
             C43784 * C1213 - C43781 * C1220) *
                C50199) *
               C50328 +
           ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
               C50062) *
              C50118 * C1090 +
          (((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
             C43781 * C2637 - C43784 * C2634) *
                C118 +
            (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
             C43781 * C2643 - C43784 * C2638) *
                C50199) *
               C50328 +
           ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
               C50062) *
              C50118 * C1091 +
          (((C43782 * C1094 - C50394 * C1098 + C43783 * C3152 - C50395 * C3155 +
             C43784 * C3588 - C43781 * C3590) *
                C118 +
            (C43782 * C1099 - C50394 * C1106 + C43783 * C3156 - C50395 * C3161 +
             C43784 * C3591 - C43781 * C3594) *
                C50199) *
               C50328 +
           ((C43782 * C1095 - C50394 * C1100 + C43783 * C3153 - C50395 * C3157 +
             C43784 * C3589 - C43781 * C3592) *
                C118 +
            (C43782 * C1101 - C50394 * C1107 + C43783 * C3158 - C50395 * C3162 +
             C43784 * C3593 - C43781 * C3595) *
                C50199) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                C50328 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
                C50328 +
            ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
             (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C118 +
             (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50199) *
                C50328 +
            ((C43782 * C293 - C50394 * C306 + C43783 * C891 - C50395 * C899 +
              C43784 * C1211 - C43781 * C1218) *
                 C118 +
             (C43782 * C307 - C50394 * C323 + C43783 * C900 - C50395 * C906 +
              C43784 * C1219 - C43781 * C1223) *
                 C50199) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C452 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C453 +
           (((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
              C43781 * C5455 - C43784 * C5452) *
                 C118 +
             (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
              C43781 * C5461 - C43784 * C5456) *
                 C50199) *
                C50328 +
            ((C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C118 +
             (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50199) *
                C50062) *
               C454) *
              C1018 +
          ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C452 +
           (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
              C43781 * C4498 - C43784 * C4494) *
                 C118 +
             (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
              C43781 * C4506 - C43784 * C4499) *
                 C50199) *
                C50328 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                C50062) *
               C453 +
           (((C43782 * C1208 - C50394 * C1212 + C43783 * C4494 -
              C50395 * C4498 + C43784 * C6404 - C43781 * C6406) *
                 C118 +
             (C43782 * C1213 - C50394 * C1220 + C43783 * C4499 -
              C50395 * C4506 + C43784 * C6407 - C43781 * C6410) *
                 C50199) *
                C50328 +
            ((C43782 * C1209 - C50394 * C1214 + C43783 * C4496 -
              C50395 * C4502 + C43784 * C6405 - C43781 * C6408) *
                 C118 +
             (C43782 * C1215 - C50394 * C1221 + C43783 * C4503 -
              C50395 * C4508 + C43784 * C6409 - C43781 * C6411) *
                 C50199) *
                C50062) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
               C43781 * C473 - C43784 * C459) *
                  C118 +
              (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
               C43781 * C489 - C43784 * C474) *
                  C50199) *
                 C50328 +
             ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
              (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                 C50062) *
                C50344 +
            (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
               C43784 * C1839 - C43781 * C1843) *
                  C118 +
              (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
               C43784 * C1844 - C43781 * C1851) *
                  C50199) *
                 C50328 +
             ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
              (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
               C43784 * C1208 - C43781 * C1212) *
                  C118 +
              (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
               C43784 * C1213 - C43781 * C1220) *
                  C50199) *
                 C50328 +
             ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
              (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                 C50062) *
                C50344 +
            (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
               C43781 * C4498 - C43784 * C4494) *
                  C118 +
              (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
               C43781 * C4506 - C43784 * C4499) *
                  C50199) *
                 C50328 +
             ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
              (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
              (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                 C50328 +
             ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
              (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                 C50062) *
                C50344 +
            (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
              (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                 C50328 +
             ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
              (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                 C50062) *
                C50182) *
               C1018 +
           ((((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
              (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                 C50328 +
             ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
              (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                 C50062) *
                C50344 +
            (((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C118 +
              (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50199) *
                 C50328 +
             ((C43782 * C890 - C50394 * C897 + C43783 * C1210 - C50395 * C1216 +
               C43784 * C5998 - C43781 * C5999) *
                  C118 +
              (C43782 * C898 - C50394 * C905 + C43783 * C1217 - C50395 * C1222 +
               C43784 * C6000 - C43781 * C6001) *
                  C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1020 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
             (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                C50328 +
            ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
             (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                C50062) *
               C50118 * C50154) *
              C1021 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
                C50328 +
            ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
             (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
                C50062) *
               C50118 * C1018 +
           (((C44309 - C44308 + C44311 - C44310 + C44313 - C44312) * C118 +
             (C44315 - C44314 + C44317 - C44316 + C44319 - C44318) * C50199) *
                C50328 +
            ((C43782 * C293 - C50394 * C306 + C43783 * C891 - C50395 * C899 +
              C43784 * C1211 - C43781 * C1218) *
                 C118 +
             (C43782 * C307 - C50394 * C323 + C43783 * C900 - C50395 * C906 +
              C43784 * C1219 - C43781 * C1223) *
                 C50199) *
                C50062) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C118 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50199) *
               C50328 +
           ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
               C50062) *
              C50118 * C1089 +
          (((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
             C43784 * C1208 - C43781 * C1212) *
                C118 +
            (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
             C43784 * C1213 - C43781 * C1220) *
                C50199) *
               C50328 +
           ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
            (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
               C50062) *
              C50118 * C1090 +
          (((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
             C43781 * C2637 - C43784 * C2634) *
                C118 +
            (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
             C43781 * C2643 - C43784 * C2638) *
                C50199) *
               C50328 +
           ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
            (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
               C50062) *
              C50118 * C1091 +
          (((C43782 * C1094 - C50394 * C1098 + C43783 * C3152 - C50395 * C3155 +
             C43784 * C3588 - C43781 * C3590) *
                C118 +
            (C43782 * C1099 - C50394 * C1106 + C43783 * C3156 - C50395 * C3161 +
             C43784 * C3591 - C43781 * C3594) *
                C50199) *
               C50328 +
           ((C43782 * C1095 - C50394 * C1100 + C43783 * C3153 - C50395 * C3157 +
             C43784 * C3589 - C43781 * C3592) *
                C118 +
            (C43782 * C1101 - C50394 * C1107 + C43783 * C3158 - C50395 * C3162 +
             C43784 * C3593 - C43781 * C3595) *
                C50199) *
               C50062) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
               C43781 * C473 - C43784 * C459) *
                  C118 +
              (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
               C43781 * C489 - C43784 * C474) *
                  C50199) *
                 C50328 +
             ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
              (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                 C50062) *
                C1669 +
            (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
               C43784 * C1839 - C43781 * C1843) *
                  C118 +
              (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
               C43784 * C1844 - C43781 * C1851) *
                  C50199) *
                 C50328 +
             ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
              (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
               C43784 * C1208 - C43781 * C1212) *
                  C118 +
              (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
               C43784 * C1213 - C43781 * C1220) *
                  C50199) *
                 C50328 +
             ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
              (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                 C50062) *
                C1669 +
            (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
               C43781 * C4498 - C43784 * C4494) *
                  C118 +
              (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
               C43781 * C4506 - C43784 * C4499) *
                  C50199) *
                 C50328 +
             ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
              (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50335 +
          (((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
              (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                 C50328 +
             ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
              (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                 C50062) *
                C1669 +
            (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
              (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                 C50328 +
             ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
              (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                 C50062) *
                C50182) *
               C50343 +
           ((((C43969 - C43968 + C43971 - C43970 + C43973 - C43972) * C118 +
              (C43975 - C43974 + C43977 - C43976 + C43979 - C43978) * C50199) *
                 C50328 +
             ((C44308 - C44309 + C44310 - C44311 + C44312 - C44313) * C118 +
              (C44314 - C44315 + C44316 - C44317 + C44318 - C44319) * C50199) *
                 C50062) *
                C1669 +
            (((C44673 - C44672 + C44675 - C44674 + C44677 - C44676) * C118 +
              (C44679 - C44678 + C44681 - C44680 + C44683 - C44682) * C50199) *
                 C50328 +
             ((C43782 * C890 - C50394 * C897 + C43783 * C1210 - C50395 * C1216 +
               C43784 * C5998 - C43781 * C5999) *
                  C118 +
              (C43782 * C898 - C50394 * C905 + C43783 * C1217 - C50395 * C1222 +
               C43784 * C6000 - C43781 * C6001) *
                  C50199) *
                 C50062) *
                C50182) *
               C50154) *
              C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50390 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50391 +
           (((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
              C43781 * C5455 - C43784 * C5452) *
                 C118 +
             (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
              C43781 * C5461 - C43784 * C5456) *
                 C50199) *
                C50328 +
            ((C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C118 +
             (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50199) *
                C50062) *
               C2085) *
              C50343 +
          ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C50390 +
           (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
              C43781 * C4498 - C43784 * C4494) *
                 C118 +
             (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
              C43781 * C4506 - C43784 * C4499) *
                 C50199) *
                C50328 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                C50062) *
               C50391 +
           (((C43782 * C1208 - C50394 * C1212 + C43783 * C4494 -
              C50395 * C4498 + C43784 * C6404 - C43781 * C6406) *
                 C118 +
             (C43782 * C1213 - C50394 * C1220 + C43783 * C4499 -
              C50395 * C4506 + C43784 * C6407 - C43781 * C6410) *
                 C50199) *
                C50328 +
            ((C43782 * C1209 - C50394 * C1214 + C43783 * C4496 -
              C50395 * C4502 + C43784 * C6405 - C43781 * C6408) *
                 C118 +
             (C43782 * C1215 - C50394 * C1221 + C43783 * C4503 -
              C50395 * C4508 + C43784 * C6409 - C43781 * C6411) *
                 C50199) *
                C50062) *
               C2085) *
              C50154) *
         C50083) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C1669 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50182) *
              C285 +
          ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C1669 +
           (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
              C43781 * C4498 - C43784 * C4494) *
                 C118 +
             (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
              C43781 * C4506 - C43784 * C4499) *
                 C50199) *
                C50328 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                C50062) *
               C50182) *
              C286 +
          ((((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
              C43781 * C2637 - C43784 * C2634) *
                 C118 +
             (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
              C43781 * C2643 - C43784 * C2638) *
                 C50199) *
                C50328 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
                C50062) *
               C1669 +
           (((C43782 * C1555 - C50394 * C1559 + C43783 * C2634 -
              C50395 * C2637 + C43784 * C4495 - C43781 * C4500) *
                 C118 +
             (C43782 * C1560 - C50394 * C1567 + C43783 * C2638 -
              C50395 * C2643 + C43784 * C4501 - C43781 * C4507) *
                 C50199) *
                C50328 +
            ((C43782 * C1556 - C50394 * C1561 + C43783 * C2635 -
              C50395 * C2639 + C43784 * C4497 - C43781 * C4504) *
                 C118 +
             (C43782 * C1562 - C50394 * C1568 + C43783 * C2640 -
              C50395 * C2644 + C43784 * C4505 - C43781 * C4509) *
                 C50199) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C1669 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C1669 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                C50328 +
            ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
                C50328 +
            ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
             (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
                C50062) *
               C1669 +
           (((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C118 +
             (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50199) *
                C50328 +
            ((C43782 * C458 - C50394 * C471 + C43783 * C462 - C50395 * C479 +
              C43784 * C1842 - C43781 * C1849) *
                 C118 +
             (C43782 * C472 - C50394 * C488 + C43783 * C480 - C50395 * C492 +
              C43784 * C1850 - C43781 * C1854) *
                 C50199) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
             C43781 * C473 - C43784 * C459) *
                C118 +
            (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
             C43781 * C489 - C43784 * C474) *
                C50199) *
               C50328 +
           ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
            (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
               C50062) *
              C1835 +
          (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
             C43784 * C1839 - C43781 * C1843) *
                C118 +
            (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
             C43784 * C1844 - C43781 * C1851) *
                C50199) *
               C50328 +
           ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
            (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
               C50062) *
              C1836 +
          (((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
             C43781 * C5455 - C43784 * C5452) *
                C118 +
            (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
             C43781 * C5461 - C43784 * C5456) *
                C50199) *
               C50328 +
           ((C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C118 +
            (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50199) *
               C50062) *
              C1837 +
          (((C43782 * C1839 - C50394 * C1843 + C43783 * C5452 - C50395 * C5455 +
             C43784 * C7288 - C43781 * C7290) *
                C118 +
            (C43782 * C1844 - C50394 * C1851 + C43783 * C5456 - C50395 * C5461 +
             C43784 * C7291 - C43781 * C7294) *
                C50199) *
               C50328 +
           ((C43782 * C1840 - C50394 * C1845 + C43783 * C5453 - C50395 * C5457 +
             C43784 * C7289 - C43781 * C7292) *
                C118 +
            (C43782 * C1846 - C50394 * C1852 + C43783 * C5458 - C50395 * C5462 +
             C43784 * C7293 - C43781 * C7295) *
                C50199) *
               C50062) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C50390 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50391 +
           (((C50394 * C473 - C43782 * C459 + C50395 * C1843 - C43783 * C1839 +
              C43781 * C5455 - C43784 * C5452) *
                 C118 +
             (C50394 * C489 - C43782 * C474 + C50395 * C1851 - C43783 * C1844 +
              C43781 * C5461 - C43784 * C5456) *
                 C50199) *
                C50328 +
            ((C44150 - C44151 + C44152 - C44153 + C44154 - C44155) * C118 +
             (C44156 - C44157 + C44158 - C44159 + C44160 - C44161) * C50199) *
                C50062) *
               C2085) *
              C50102 * C50335 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C50390 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                C50328 +
            ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                C50062) *
               C50391 +
           (((C44151 - C44150 + C44153 - C44152 + C44155 - C44154) * C118 +
             (C44157 - C44156 + C44159 - C44158 + C44161 - C44160) * C50199) *
                C50328 +
            ((C43782 * C461 - C50394 * C477 + C43783 * C1841 - C50395 * C1847 +
              C43784 * C5454 - C43781 * C5459) *
                 C118 +
             (C43782 * C478 - C50394 * C491 + C43783 * C1848 - C50395 * C1853 +
              C43784 * C5460 - C43781 * C5463) *
                 C50199) *
                C50062) *
               C2085) *
              C50102 * C50089)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C1669 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1020 +
          ((((C43787 - C43786 + C43789 - C43788 + C43791 - C43790) * C118 +
             (C43793 - C43792 + C43795 - C43794 + C43797 - C43796) * C50199) *
                C50328 +
            ((C43798 - C43799 + C43800 - C43801 + C43802 - C43803) * C118 +
             (C43804 - C43805 + C43806 - C43807 + C43808 - C43809) * C50199) *
                C50062) *
               C1669 +
           (((C44139 - C44138 + C44141 - C44140 + C44143 - C44142) * C118 +
             (C44145 - C44144 + C44147 - C44146 + C44149 - C44148) * C50199) *
                C50328 +
            ((C44466 - C44467 + C44468 - C44469 + C44470 - C44471) * C118 +
             (C44472 - C44473 + C44474 - C44475 + C44476 - C44477) * C50199) *
                C50062) *
               C50182) *
              C50102 * C1021 +
          ((((C43799 - C43798 + C43801 - C43800 + C43803 - C43802) * C118 +
             (C43805 - C43804 + C43807 - C43806 + C43809 - C43808) * C50199) *
                C50328 +
            ((C43810 - C43811 + C43812 - C43813 + C43814 - C43815) * C118 +
             (C43816 - C43817 + C43818 - C43819 + C43820 - C43821) * C50199) *
                C50062) *
               C1669 +
           (((C44467 - C44466 + C44469 - C44468 + C44471 - C44470) * C118 +
             (C44473 - C44472 + C44475 - C44474 + C44477 - C44476) * C50199) *
                C50328 +
            ((C43782 * C458 - C50394 * C471 + C43783 * C462 - C50395 * C479 +
              C43784 * C1842 - C43781 * C1849) *
                 C118 +
             (C43782 * C472 - C50394 * C488 + C43783 * C480 - C50395 * C492 +
              C43784 * C1850 - C43781 * C1854) *
                 C50199) *
                C50062) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50394 * C126 - C43782 * C119 + C50395 * C465 - C43783 * C455 +
              C43781 * C473 - C43784 * C459) *
                 C118 +
             (C50394 * C140 - C43782 * C127 + C50395 * C485 - C43783 * C466 +
              C43781 * C489 - C43784 * C474) *
                 C50199) *
                C50328 +
            ((C43786 - C43787 + C43788 - C43789 + C43790 - C43791) * C118 +
             (C43792 - C43793 + C43794 - C43795 + C43796 - C43797) * C50199) *
                C50062) *
               C1669 +
           (((C43782 * C455 - C50394 * C465 + C43783 * C459 - C50395 * C473 +
              C43784 * C1839 - C43781 * C1843) *
                 C118 +
             (C43782 * C466 - C50394 * C485 + C43783 * C474 - C50395 * C489 +
              C43784 * C1844 - C43781 * C1851) *
                 C50199) *
                C50328 +
            ((C44138 - C44139 + C44140 - C44141 + C44142 - C44143) * C118 +
             (C44144 - C44145 + C44146 - C44147 + C44148 - C44149) * C50199) *
                C50062) *
               C50182) *
              C285 +
          ((((C43782 * C290 - C50394 * C300 + C43783 * C888 - C50395 * C893 +
              C43784 * C1208 - C43781 * C1212) *
                 C118 +
             (C43782 * C301 - C50394 * C320 + C43783 * C894 - C50395 * C903 +
              C43784 * C1213 - C43781 * C1220) *
                 C50199) *
                C50328 +
            ((C43968 - C43969 + C43970 - C43971 + C43972 - C43973) * C118 +
             (C43974 - C43975 + C43976 - C43977 + C43978 - C43979) * C50199) *
                C50062) *
               C1669 +
           (((C50394 * C893 - C43782 * C888 + C50395 * C1212 - C43783 * C1208 +
              C43781 * C4498 - C43784 * C4494) *
                 C118 +
             (C50394 * C903 - C43782 * C894 + C50395 * C1220 - C43783 * C1213 +
              C43781 * C4506 - C43784 * C4499) *
                 C50199) *
                C50328 +
            ((C44672 - C44673 + C44674 - C44675 + C44676 - C44677) * C118 +
             (C44678 - C44679 + C44680 - C44681 + C44682 - C44683) * C50199) *
                C50062) *
               C50182) *
              C286 +
          ((((C50394 * C308 - C43782 * C294 + C50395 * C1559 - C43783 * C1555 +
              C43781 * C2637 - C43784 * C2634) *
                 C118 +
             (C50394 * C324 - C43782 * C309 + C50395 * C1567 - C43783 * C1560 +
              C43781 * C2643 - C43784 * C2638) *
                 C50199) *
                C50328 +
            ((C43980 - C43981 + C43982 - C43983 + C43984 - C43985) * C118 +
             (C43986 - C43987 + C43988 - C43989 + C43990 - C43991) * C50199) *
                C50062) *
               C1669 +
           (((C43782 * C1555 - C50394 * C1559 + C43783 * C2634 -
              C50395 * C2637 + C43784 * C4495 - C43781 * C4500) *
                 C118 +
             (C43782 * C1560 - C50394 * C1567 + C43783 * C2638 -
              C50395 * C2643 + C43784 * C4501 - C43781 * C4507) *
                 C50199) *
                C50328 +
            ((C43782 * C1556 - C50394 * C1561 + C43783 * C2635 -
              C50395 * C2639 + C43784 * C4497 - C43781 * C4504) *
                 C118 +
             (C43782 * C1562 - C50394 * C1568 + C43783 * C2640 -
              C50395 * C2644 + C43784 * C4505 - C43781 * C4509) *
                 C50199) *
                C50062) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C50343 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50154) *
              C50386 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C50343 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50154) *
              C50387 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50118 * C50343 +
           (C33504 * C16957 +
            ((C33493 - C33492 + C33495 - C33494) * C118 +
             (C33497 - C33496 + C33499 - C33498) * C50199) *
                C16958 +
            ((C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                 C118 +
             (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                 C50199) *
                C16959) *
               C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C50343 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C50154) *
              C50386 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C50343 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50154) *
              C50387 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50118 * C50343 +
           (C33500 * C2287 + C33501 * C2282 +
            (C33157 - C33156 + C33159 - C33158) * C2288 +
            (C33161 - C33160 + C33163 - C33162) * C2283 +
            (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C2289 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C2284) *
               C50057 * C50118 * C50154) *
              C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C118 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50199) *
                 C16957 +
             ((C32936 - C32937 + C32938 - C32939) * C118 +
              (C32940 - C32941 + C32942 - C32943) * C50199) *
                 C16958 +
             C32984 * C16959) *
                C50344 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C118 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50199) *
                 C16957 +
             ((C33310 - C33311 + C33312 - C33313) * C118 +
              (C33314 - C33315 + C33316 - C33317) * C50199) *
                 C16958 +
             C33667 * C16959) *
                C50182) *
               C50343 +
           ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                  C118 +
              (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                  C50199) *
                 C16957 +
             ((C33132 - C33133 + C33134 - C33135) * C118 +
              (C33136 - C33137 + C33138 - C33139) * C50199) *
                 C16958 +
             C33504 * C16959) *
                C50344 +
            (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
               C32934 * C1208) *
                  C118 +
              (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
               C32934 * C1213) *
                  C50199) *
                 C16957 +
             ((C33862 - C33863 + C33864 - C33865) * C118 +
              (C33866 - C33867 + C33868 - C33869) * C50199) *
                 C16958 +
             ((C33870 - C33871 + C33872 - C33873) * C118 +
              (C33874 - C33875 + C33876 - C33877) * C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C288 +
          (((((C32937 - C32936 + C32939 - C32938) * C118 +
              (C32941 - C32940 + C32943 - C32942) * C50199) *
                 C16957 +
             ((C32945 - C32944 + C32947 - C32946) * C118 +
              (C32949 - C32948 + C32951 - C32950) * C50199) *
                 C16958 +
             C32985 * C16959) *
                C50344 +
            (((C33311 - C33310 + C33313 - C33312) * C118 +
              (C33315 - C33314 + C33317 - C33316) * C50199) *
                 C16957 +
             ((C33319 - C33318 + C33321 - C33320) * C118 +
              (C33323 - C33322 + C33325 - C33324) * C50199) *
                 C16958 +
             ((C33655 - C33656 + C33657 - C33658) * C118 +
              (C33659 - C33660 + C33661 - C33662) * C50199) *
                 C16959) *
                C50182) *
               C50343 +
           ((((C33133 - C33132 + C33135 - C33134) * C118 +
              (C33137 - C33136 + C33139 - C33138) * C50199) *
                 C16957 +
             ((C33141 - C33140 + C33143 - C33142) * C118 +
              (C33145 - C33144 + C33147 - C33146) * C50199) *
                 C16958 +
             ((C33492 - C33493 + C33494 - C33495) * C118 +
              (C33496 - C33497 + C33498 - C33499) * C50199) *
                 C16959) *
                C50344 +
            (((C33863 - C33862 + C33865 - C33864) * C118 +
              (C33867 - C33866 + C33869 - C33868) * C50199) *
                 C16957 +
             ((C33871 - C33870 + C33873 - C33872) * C118 +
              (C33875 - C33874 + C33877 - C33876) * C50199) *
                 C16958 +
             ((C32933 * C891 - C32931 * C899 + C32934 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C32933 * C900 - C32931 * C906 + C32934 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C2287 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C2282 +
             (C35874 - C35875 + C35876 - C35877) * C2288 +
             (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
             C35917 * C2284) *
                C50057 * C50344 +
            ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C2287 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C2282 +
             (C36550 - C36551 + C36552 - C36553) * C2288 +
             (C36554 - C36555 + C36556 - C36557) * C2283 +
             (C36558 - C36559 + C36560 - C36561) * C2289 +
             (C36562 - C36563 + C36564 - C36565) * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C35875 - C35874 + C35877 - C35876) * C2287 +
             (C35879 - C35878 + C35881 - C35880) * C2282 +
             (C35883 - C35882 + C35885 - C35884) * C2288 +
             (C35887 - C35886 + C35889 - C35888) * C2283 +
             (C35890 - C35891 + C35892 - C35893) * C2289 +
             (C35894 - C35895 + C35896 - C35897) * C2284) *
                C50057 * C50344 +
            ((C36551 - C36550 + C36553 - C36552) * C2287 +
             (C36555 - C36554 + C36557 - C36556) * C2282 +
             (C36559 - C36558 + C36561 - C36560) * C2288 +
             (C36563 - C36562 + C36565 - C36564) * C2283 +
             (C32931 * C3155 - C32933 * C3152 + C50278 * C3590 -
              C32934 * C3588) *
                 C2289 +
             (C32931 * C3161 - C32933 * C3156 + C50278 * C3594 -
              C32934 * C3591) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C2287 +
             (C32941 - C32940 + C32943 - C32942) * C2282 +
             (C33132 - C33133 + C33134 - C33135) * C2288 +
             (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
             C35915 * C2284) *
                C50057 * C50344 +
            ((C33311 - C33310 + C33313 - C33312) * C2287 +
             (C33315 - C33314 + C33317 - C33316) * C2282 +
             (C33862 - C33863 + C33864 - C33865) * C2288 +
             (C33866 - C33867 + C33868 - C33869) * C2283 +
             (C36566 - C36567 + C36568 - C36569) * C2289 +
             (C36570 - C36571 + C36572 - C36573) * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C33133 - C33132 + C33135 - C33134) * C2287 +
             (C33137 - C33136 + C33139 - C33138) * C2282 +
             (C33148 - C33149 + C33150 - C33151) * C2288 +
             (C33152 - C33153 + C33154 - C33155) * C2283 +
             (C35902 - C35903 + C35904 - C35905) * C2289 +
             (C35906 - C35907 + C35908 - C35909) * C2284) *
                C50057 * C50344 +
            ((C33863 - C33862 + C33865 - C33864) * C2287 +
             (C33867 - C33866 + C33869 - C33868) * C2282 +
             (C36567 - C36566 + C36569 - C36568) * C2288 +
             (C36571 - C36570 + C36573 - C36572) * C2283 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C2289 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C285 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            ((C33140 - C33141 + C33142 - C33143) * C118 +
             (C33144 - C33145 + C33146 - C33147) * C50199) *
                C16959) *
               C50118 * C286 +
           (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50118 * C287) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C285 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C32931 * C306 - C32933 * C293 + C50278 * C899 - C32934 * C891) *
                 C118 +
             (C32931 * C323 - C32933 * C307 + C50278 * C906 - C32934 * C900) *
                 C50199) *
                C16959) *
               C50118 * C286 +
           (((C33149 - C33148 + C33151 - C33150) * C118 +
             (C33153 - C33152 + C33155 - C33154) * C50199) *
                C16957 +
            ((C33157 - C33156 + C33159 - C33158) * C118 +
             (C33161 - C33160 + C33163 - C33162) * C50199) *
                C16958 +
            ((C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C118 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50199) *
                C16959) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C50118 * C50102 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C118 +
            (C32941 - C32940 + C32943 - C32942) * C50199) *
               C16957 +
           ((C32945 - C32944 + C32947 - C32946) * C118 +
            (C32949 - C32948 + C32951 - C32950) * C50199) *
               C16958 +
           C32985 * C16959) *
              C50118 * C50102 * C114 +
          (C32984 * C16957 +
           ((C32953 - C32952 + C32955 - C32954) * C118 +
            (C32957 - C32956 + C32959 - C32958) * C50199) *
               C16958 +
           ((C32960 - C32961 + C32962 - C32963) * C118 +
            (C32964 - C32965 + C32966 - C32967) * C50199) *
               C16959) *
              C50118 * C50102 * C115 +
          (C32985 * C16957 +
           ((C32961 - C32960 + C32963 - C32962) * C118 +
            (C32965 - C32964 + C32967 - C32966) * C50199) *
               C16958 +
           ((C32933 * C124 - C32931 * C136 + C32934 * C740 - C50278 * C741) *
                C118 +
            (C32933 * C137 - C32931 * C145 + C32934 * C742 - C50278 * C743) *
                C50199) *
               C16959) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C452 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            ((C33318 - C33319 + C33320 - C33321) * C118 +
             (C33322 - C33323 + C33324 - C33325) * C50199) *
                C16959) *
               C453 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C454) *
              C50102 * C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C452 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C32931 * C471 - C32933 * C458 + C50278 * C479 - C32934 * C462) *
                 C118 +
             (C32931 * C488 - C32933 * C472 + C50278 * C492 - C32934 * C480) *
                 C50199) *
                C16959) *
               C453 +
           (((C33327 - C33326 + C33329 - C33328) * C118 +
             (C33331 - C33330 + C33333 - C33332) * C50199) *
                C16957 +
            ((C33335 - C33334 + C33337 - C33336) * C118 +
             (C33339 - C33338 + C33341 - C33340) * C50199) *
                C16958 +
            ((C32933 * C462 - C32931 * C479 + C32934 * C1842 - C50278 * C1849) *
                 C118 +
             (C32933 * C480 - C32931 * C492 + C32934 * C1850 - C50278 * C1854) *
                 C50199) *
                C16959) *
               C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C32931 * C300 - C32933 * C290 + C50278 * C893 - C32934 * C888) *
               C2288 +
           (C32931 * C320 - C32933 * C301 + C50278 * C903 - C32934 * C894) *
               C2283 +
           (C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
               C2289 +
           (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
               C2284) *
              C50057 * C50118 * C50102 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C2287 +
           (C32941 - C32940 + C32943 - C32942) * C2282 +
           (C33132 - C33133 + C33134 - C33135) * C2288 +
           (C33136 - C33137 + C33138 - C33139) * C2283 +
           (C33149 - C33148 + C33151 - C33150) * C2289 +
           (C33153 - C33152 + C33155 - C33154) * C2284) *
              C50057 * C50118 * C50102 * C114 +
          (C32976 * C2287 + C32977 * C2282 +
           (C33141 - C33140 + C33143 - C33142) * C2288 +
           (C33145 - C33144 + C33147 - C33146) * C2283 +
           (C33156 - C33157 + C33158 - C33159) * C2289 +
           (C33160 - C33161 + C33162 - C33163) * C2284) *
              C50057 * C50118 * C50102 * C115 +
          (C32978 * C2287 + C32979 * C2282 +
           (C33493 - C33492 + C33495 - C33494) * C2288 +
           (C33497 - C33496 + C33499 - C33498) * C2283 +
           (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
               C2289 +
           (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
               C2284) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C285 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C286 +
           (C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C32931 * C2439 - C32933 * C2436 + C50278 * C4092 -
             C32934 * C4090) *
                C2289 +
            (C32931 * C2445 - C32933 * C2440 + C50278 * C4096 -
             C32934 * C4093) *
                C2284) *
               C50057 * C50118 * C287) *
              C288 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C285 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C286 +
           (C35914 * C2287 + C35915 * C2282 +
            (C35903 - C35902 + C35905 - C35904) * C2288 +
            (C35907 - C35906 + C35909 - C35908) * C2283 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C2289 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C2284) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C452 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C32933 * C888 - C32931 * C893 + C32934 * C1208 - C50278 * C1212) *
                C2288 +
            (C32933 * C894 - C32931 * C903 + C32934 * C1213 - C50278 * C1220) *
                C2283 +
            (C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
             C50278 * C2637) *
                C2289 +
            (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
             C50278 * C2643) *
                C2284) *
               C50057 * C453 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C32931 * C1212 - C32933 * C1208 + C50278 * C4498 -
             C32934 * C4494) *
                C2288 +
            (C32931 * C1220 - C32933 * C1213 + C50278 * C4506 -
             C32934 * C4499) *
                C2283 +
            (C32931 * C2637 - C32933 * C2634 + C50278 * C4500 -
             C32934 * C4495) *
                C2289 +
            (C32931 * C2643 - C32933 * C2638 + C50278 * C4507 -
             C32934 * C4501) *
                C2284) *
               C50057 * C454) *
              C50102 * C288 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C452 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C32931 * C1561 - C32933 * C1556 + C50278 * C2639 -
             C32934 * C2635) *
                C2289 +
            (C32931 * C1568 - C32933 * C1562 + C50278 * C2644 -
             C32934 * C2640) *
                C2284) *
               C50057 * C453 +
           ((C33327 - C33326 + C33329 - C33328) * C2287 +
            (C33331 - C33330 + C33333 - C33332) * C2282 +
            (C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
             C50278 * C4502) *
                C2288 +
            (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
             C50278 * C4508) *
                C2283 +
            (C32933 * C2635 - C32931 * C2639 + C32934 * C4497 -
             C50278 * C4504) *
                C2289 +
            (C32933 * C2640 - C32931 * C2644 + C32934 * C4505 -
             C50278 * C4509) *
                C2284) *
               C50057 * C454) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50344 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50102 * C50386 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50344 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50182) *
              C50102 * C50387 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50344 +
           (C33667 * C16957 +
            ((C33656 - C33655 + C33658 - C33657) * C118 +
             (C33660 - C33659 + C33662 - C33661) * C50199) *
                C16958 +
            ((C32933 * C463 - C32931 * C481 + C32934 * C464 - C50278 * C483) *
                 C118 +
             (C32933 * C482 - C32931 * C493 + C32934 * C484 - C50278 * C494) *
                 C50199) *
                C16959) *
               C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50344 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C32933 * C888 - C32931 * C893 + C32934 * C1208 - C50278 * C1212) *
                C2288 +
            (C32933 * C894 - C32931 * C903 + C32934 * C1213 - C50278 * C1220) *
                C2283 +
            (C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
             C50278 * C2637) *
                C2289 +
            (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
             C50278 * C2643) *
                C2284) *
               C50057 * C50182) *
              C50102 * C50386 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50344 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C32931 * C1561 - C32933 * C1556 + C50278 * C2639 -
             C32934 * C2635) *
                C2289 +
            (C32931 * C1568 - C32933 * C1562 + C50278 * C2644 -
             C32934 * C2640) *
                C2284) *
               C50057 * C50182) *
              C50102 * C50387 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50344 +
           (C33663 * C2287 + C33664 * C2282 +
            (C33871 - C33870 + C33873 - C33872) * C2288 +
            (C33875 - C33874 + C33877 - C33876) * C2283 +
            (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
             C50278 * C2641) *
                C2289 +
            (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
             C50278 * C2645) *
                C2284) *
               C50057 * C50182) *
              C50102 * C621)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C50118 * C50102 * C113 +
          (((C32937 - C32936 + C32939 - C32938) * C118 +
            (C32941 - C32940 + C32943 - C32942) * C50199) *
               C16957 +
           ((C32945 - C32944 + C32947 - C32946) * C118 +
            (C32949 - C32948 + C32951 - C32950) * C50199) *
               C16958 +
           C32985 * C16959) *
              C50118 * C50102 * C114 +
          (C32984 * C16957 +
           ((C32953 - C32952 + C32955 - C32954) * C118 +
            (C32957 - C32956 + C32959 - C32958) * C50199) *
               C16958 +
           ((C32960 - C32961 + C32962 - C32963) * C118 +
            (C32964 - C32965 + C32966 - C32967) * C50199) *
               C16959) *
              C50118 * C50102 * C115 +
          (C32985 * C16957 +
           ((C32961 - C32960 + C32963 - C32962) * C118 +
            (C32965 - C32964 + C32967 - C32966) * C50199) *
               C16958 +
           ((C32933 * C124 - C32931 * C136 + C32934 * C740 - C50278 * C741) *
                C118 +
            (C32933 * C137 - C32931 * C145 + C32934 * C742 - C50278 * C743) *
                C50199) *
               C16959) *
              C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C285 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            ((C33140 - C33141 + C33142 - C33143) * C118 +
             (C33144 - C33145 + C33146 - C33147) * C50199) *
                C16959) *
               C50118 * C286 +
           (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50118 * C287) *
              C288 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C285 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C32931 * C306 - C32933 * C293 + C50278 * C899 - C32934 * C891) *
                 C118 +
             (C32931 * C323 - C32933 * C307 + C50278 * C906 - C32934 * C900) *
                 C50199) *
                C16959) *
               C50118 * C286 +
           (((C33149 - C33148 + C33151 - C33150) * C118 +
             (C33153 - C33152 + C33155 - C33154) * C50199) *
                C16957 +
            ((C33157 - C33156 + C33159 - C33158) * C118 +
             (C33161 - C33160 + C33163 - C33162) * C50199) *
                C16958 +
            ((C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C118 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50199) *
                C16959) *
               C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C32931 * C300 - C32933 * C290 + C50278 * C893 - C32934 * C888) *
               C2288 +
           (C32931 * C320 - C32933 * C301 + C50278 * C903 - C32934 * C894) *
               C2283 +
           (C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
               C2289 +
           (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
               C2284) *
              C50057 * C50118 * C50102 * C113 +
          ((C32937 - C32936 + C32939 - C32938) * C2287 +
           (C32941 - C32940 + C32943 - C32942) * C2282 +
           (C33132 - C33133 + C33134 - C33135) * C2288 +
           (C33136 - C33137 + C33138 - C33139) * C2283 +
           (C33149 - C33148 + C33151 - C33150) * C2289 +
           (C33153 - C33152 + C33155 - C33154) * C2284) *
              C50057 * C50118 * C50102 * C114 +
          (C32976 * C2287 + C32977 * C2282 +
           (C33141 - C33140 + C33143 - C33142) * C2288 +
           (C33145 - C33144 + C33147 - C33146) * C2283 +
           (C33156 - C33157 + C33158 - C33159) * C2289 +
           (C33160 - C33161 + C33162 - C33163) * C2284) *
              C50057 * C50118 * C50102 * C115 +
          (C32978 * C2287 + C32979 * C2282 +
           (C33493 - C33492 + C33495 - C33494) * C2288 +
           (C33497 - C33496 + C33499 - C33498) * C2283 +
           (C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
               C2289 +
           (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
               C2284) *
              C50057 * C50118 * C50102 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C285 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C286 +
           (C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C32931 * C2439 - C32933 * C2436 + C50278 * C4092 -
             C32934 * C4090) *
                C2289 +
            (C32931 * C2445 - C32933 * C2440 + C50278 * C4096 -
             C32934 * C4093) *
                C2284) *
               C50057 * C50118 * C287) *
              C288 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C285 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C286 +
           (C35914 * C2287 + C35915 * C2282 +
            (C35903 - C35902 + C35905 - C35904) * C2288 +
            (C35907 - C35906 + C35909 - C35908) * C2283 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C2289 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C2284) *
               C50057 * C50118 * C287) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C50388 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50389 +
           (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50118 * C1324) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C50388 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50389 +
           (((C33149 - C33148 + C33151 - C33150) * C118 +
             (C33153 - C33152 + C33155 - C33154) * C50199) *
                C16957 +
            ((C33157 - C33156 + C33159 - C33158) * C118 +
             (C33161 - C33160 + C33163 - C33162) * C50199) *
                C16958 +
            ((C32933 * C297 - C32931 * C314 + C32934 * C1558 - C50278 * C1565) *
                 C118 +
             (C32933 * C315 - C32931 * C327 + C32934 * C1566 - C50278 * C1570) *
                 C50199) *
                C16959) *
               C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C50388 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C50118 * C50389 +
           (C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C50118 * C1324) *
              C50335 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C50388 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50389 +
           (C35914 * C2287 + C35915 * C2282 +
            (C35903 - C35902 + C35905 - C35904) * C2288 +
            (C35907 - C35906 + C35909 - C35908) * C2283 +
            (C32933 * C2437 - C32931 * C2441 + C32934 * C4091 -
             C50278 * C4094) *
                C2289 +
            (C32933 * C2442 - C32931 * C2446 + C32934 * C4095 -
             C50278 * C4097) *
                C2284) *
               C50057 * C50118 * C1324) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50344 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50388 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50344 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50182) *
              C50389 +
          ((((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C50344 +
           (((C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C16957 +
            ((C32933 * C1556 - C32931 * C1561 + C32934 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C32933 * C1562 - C32931 * C1568 + C32934 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C16958 +
            ((C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C16959) *
               C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50344 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C50388 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C50344 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50182) *
              C50389 +
          ((C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C50344 +
           (C37492 * C2287 + C37493 * C2282 +
            (C37485 - C37484 + C37487 - C37486) * C2288 +
            (C37489 - C37488 + C37491 - C37490) * C2283 +
            (C32933 * C4090 - C32931 * C4092 + C32934 * C20391 -
             C50278 * C20392) *
                C2289 +
            (C32933 * C4093 - C32931 * C4096 + C32934 * C20393 -
             C50278 * C20394) *
                C2284) *
               C50057 * C50182) *
              C1324) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C50118 * C1089 +
          (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                C118 +
            (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                C50199) *
               C16957 +
           ((C33132 - C33133 + C33134 - C33135) * C118 +
            (C33136 - C33137 + C33138 - C33139) * C50199) *
               C16958 +
           C33504 * C16959) *
              C50118 * C1090 +
          (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                C118 +
            (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                C50199) *
               C16957 +
           ((C33148 - C33149 + C33150 - C33151) * C118 +
            (C33152 - C33153 + C33154 - C33155) * C50199) *
               C16958 +
           ((C33156 - C33157 + C33158 - C33159) * C118 +
            (C33160 - C33161 + C33162 - C33163) * C50199) *
               C16959) *
              C50118 * C1091 +
          (((C32933 * C1094 - C32931 * C1098 + C32934 * C3152 -
             C50278 * C3155) *
                C118 +
            (C32933 * C1099 - C32931 * C1106 + C32934 * C3156 -
             C50278 * C3161) *
                C50199) *
               C16957 +
           ((C32933 * C1095 - C32931 * C1100 + C32934 * C3153 -
             C50278 * C3157) *
                C118 +
            (C32933 * C1101 - C32931 * C1107 + C32934 * C3158 -
             C50278 * C3162) *
                C50199) *
               C16958 +
           ((C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C118 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C50199) *
               C16959) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C1018 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50154) *
              C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C1018 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50154) *
              C1021 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50118 * C1018 +
           (C33504 * C16957 +
            ((C33493 - C33492 + C33495 - C33494) * C118 +
             (C33497 - C33496 + C33499 - C33498) * C50199) *
                C16958 +
            ((C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                 C118 +
             (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                 C50199) *
                C16959) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C452 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C453 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C454) *
              C1018 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C452 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C453 +
           (((C32933 * C1208 - C32931 * C1212 + C32934 * C4494 -
              C50278 * C4498) *
                 C118 +
             (C32933 * C1213 - C32931 * C1220 + C32934 * C4499 -
              C50278 * C4506) *
                 C50199) *
                C16957 +
            ((C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
              C50278 * C4502) *
                 C118 +
             (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
              C50278 * C4508) *
                 C50199) *
                C16958 +
            ((C32933 * C1210 - C32931 * C1216 + C32934 * C5998 -
              C50278 * C5999) *
                 C118 +
             (C32933 * C1217 - C32931 * C1222 + C32934 * C6000 -
              C50278 * C6001) *
                 C50199) *
                C16959) *
               C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C1018 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C1018 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50118 * C1018 +
           (C33500 * C2287 + C33501 * C2282 +
            (C33157 - C33156 + C33159 - C33158) * C2288 +
            (C33161 - C33160 + C33163 - C33162) * C2283 +
            (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C2289 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C2284) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C35874 - C35875 + C35876 - C35877) * C2288 +
           (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
           C35917 * C2284) *
              C50057 * C50118 * C1089 +
          ((C35875 - C35874 + C35877 - C35876) * C2287 +
           (C35879 - C35878 + C35881 - C35880) * C2282 +
           (C35883 - C35882 + C35885 - C35884) * C2288 +
           (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
           C36831 * C2284) *
              C50057 * C50118 * C1090 +
          (C35916 * C2287 + C35917 * C2282 +
           (C35891 - C35890 + C35893 - C35892) * C2288 +
           (C35895 - C35894 + C35897 - C35896) * C2283 +
           (C36822 - C36823 + C36824 - C36825) * C2289 +
           (C36826 - C36827 + C36828 - C36829) * C2284) *
              C50057 * C50118 * C1091 +
          (C36830 * C2287 + C36831 * C2282 +
           (C36823 - C36822 + C36825 - C36824) * C2288 +
           (C36827 - C36826 + C36829 - C36828) * C2283 +
           (C32933 * C3428 - C32931 * C3430 + C32934 * C20725 -
            C50278 * C20726) *
               C2289 +
           (C32933 * C3431 - C32931 * C3434 + C32934 * C20727 -
            C50278 * C20728) *
               C2284) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C452 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 +
            (C36558 - C36559 + C36560 - C36561) * C2289 +
            (C36562 - C36563 + C36564 - C36565) * C2284) *
               C50057 * C453 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C36978 - C36979 + C36980 - C36981) * C2288 +
            (C36982 - C36983 + C36984 - C36985) * C2283 +
            (C36986 - C36987 + C36988 - C36989) * C2289 +
            (C36990 - C36991 + C36992 - C36993) * C2284) *
               C50057 * C454) *
              C1018 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C452 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C32931 * C3155 - C32933 * C3152 + C50278 * C3590 -
             C32934 * C3588) *
                C2289 +
            (C32931 * C3161 - C32933 * C3156 + C50278 * C3594 -
             C32934 * C3591) *
                C2284) *
               C50057 * C453 +
           ((C36979 - C36978 + C36981 - C36980) * C2287 +
            (C36983 - C36982 + C36985 - C36984) * C2282 +
            (C36987 - C36986 + C36989 - C36988) * C2288 +
            (C36991 - C36990 + C36993 - C36992) * C2283 +
            (C32933 * C3588 - C32931 * C3590 + C32934 * C20997 -
             C50278 * C20998) *
                C2289 +
            (C32933 * C3591 - C32931 * C3594 + C32934 * C20999 -
             C50278 * C21000) *
                C2284) *
               C50057 * C454) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C118 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50199) *
                 C16957 +
             ((C32936 - C32937 + C32938 - C32939) * C118 +
              (C32940 - C32941 + C32942 - C32943) * C50199) *
                 C16958 +
             C32984 * C16959) *
                C50344 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C118 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50199) *
                 C16957 +
             ((C33310 - C33311 + C33312 - C33313) * C118 +
              (C33314 - C33315 + C33316 - C33317) * C50199) *
                 C16958 +
             C33667 * C16959) *
                C50182) *
               C1018 +
           ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                  C118 +
              (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                  C50199) *
                 C16957 +
             ((C33132 - C33133 + C33134 - C33135) * C118 +
              (C33136 - C33137 + C33138 - C33139) * C50199) *
                 C16958 +
             C33504 * C16959) *
                C50344 +
            (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
               C32934 * C1208) *
                  C118 +
              (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
               C32934 * C1213) *
                  C50199) *
                 C16957 +
             ((C33862 - C33863 + C33864 - C33865) * C118 +
              (C33866 - C33867 + C33868 - C33869) * C50199) *
                 C16958 +
             ((C33870 - C33871 + C33872 - C33873) * C118 +
              (C33874 - C33875 + C33876 - C33877) * C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C32937 - C32936 + C32939 - C32938) * C118 +
              (C32941 - C32940 + C32943 - C32942) * C50199) *
                 C16957 +
             ((C32945 - C32944 + C32947 - C32946) * C118 +
              (C32949 - C32948 + C32951 - C32950) * C50199) *
                 C16958 +
             C32985 * C16959) *
                C50344 +
            (((C33311 - C33310 + C33313 - C33312) * C118 +
              (C33315 - C33314 + C33317 - C33316) * C50199) *
                 C16957 +
             ((C33319 - C33318 + C33321 - C33320) * C118 +
              (C33323 - C33322 + C33325 - C33324) * C50199) *
                 C16958 +
             ((C33655 - C33656 + C33657 - C33658) * C118 +
              (C33659 - C33660 + C33661 - C33662) * C50199) *
                 C16959) *
                C50182) *
               C1018 +
           ((((C33133 - C33132 + C33135 - C33134) * C118 +
              (C33137 - C33136 + C33139 - C33138) * C50199) *
                 C16957 +
             ((C33141 - C33140 + C33143 - C33142) * C118 +
              (C33145 - C33144 + C33147 - C33146) * C50199) *
                 C16958 +
             ((C33492 - C33493 + C33494 - C33495) * C118 +
              (C33496 - C33497 + C33498 - C33499) * C50199) *
                 C16959) *
                C50344 +
            (((C33863 - C33862 + C33865 - C33864) * C118 +
              (C33867 - C33866 + C33869 - C33868) * C50199) *
                 C16957 +
             ((C33871 - C33870 + C33873 - C33872) * C118 +
              (C33875 - C33874 + C33877 - C33876) * C50199) *
                 C16958 +
             ((C32933 * C891 - C32931 * C899 + C32934 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C32933 * C900 - C32931 * C906 + C32934 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C2287 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C2282 +
             (C35874 - C35875 + C35876 - C35877) * C2288 +
             (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
             C35917 * C2284) *
                C50057 * C50344 +
            ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C2287 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C2282 +
             (C36550 - C36551 + C36552 - C36553) * C2288 +
             (C36554 - C36555 + C36556 - C36557) * C2283 +
             (C36558 - C36559 + C36560 - C36561) * C2289 +
             (C36562 - C36563 + C36564 - C36565) * C2284) *
                C50057 * C50182) *
               C1018 +
           (((C35875 - C35874 + C35877 - C35876) * C2287 +
             (C35879 - C35878 + C35881 - C35880) * C2282 +
             (C35883 - C35882 + C35885 - C35884) * C2288 +
             (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
             C36831 * C2284) *
                C50057 * C50344 +
            ((C36551 - C36550 + C36553 - C36552) * C2287 +
             (C36555 - C36554 + C36557 - C36556) * C2282 +
             (C36559 - C36558 + C36561 - C36560) * C2288 +
             (C36563 - C36562 + C36565 - C36564) * C2283 +
             (C32931 * C3155 - C32933 * C3152 + C50278 * C3590 -
              C32934 * C3588) *
                 C2289 +
             (C32931 * C3161 - C32933 * C3156 + C50278 * C3594 -
              C32934 * C3591) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C2287 +
             (C32941 - C32940 + C32943 - C32942) * C2282 +
             (C33132 - C33133 + C33134 - C33135) * C2288 +
             (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
             C35915 * C2284) *
                C50057 * C50344 +
            ((C33311 - C33310 + C33313 - C33312) * C2287 +
             (C33315 - C33314 + C33317 - C33316) * C2282 +
             (C33862 - C33863 + C33864 - C33865) * C2288 +
             (C33866 - C33867 + C33868 - C33869) * C2283 +
             (C36566 - C36567 + C36568 - C36569) * C2289 +
             (C36570 - C36571 + C36572 - C36573) * C2284) *
                C50057 * C50182) *
               C1018 +
           (((C33133 - C33132 + C33135 - C33134) * C2287 +
             (C33137 - C33136 + C33139 - C33138) * C2282 +
             (C33148 - C33149 + C33150 - C33151) * C2288 +
             (C33152 - C33153 + C33154 - C33155) * C2283 +
             (C35902 - C35903 + C35904 - C35905) * C2289 +
             (C35906 - C35907 + C35908 - C35909) * C2284) *
                C50057 * C50344 +
            ((C33863 - C33862 + C33865 - C33864) * C2287 +
             (C33867 - C33866 + C33869 - C33868) * C2282 +
             (C36567 - C36566 + C36569 - C36568) * C2288 +
             (C36571 - C36570 + C36573 - C36572) * C2283 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C2289 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50118 * C1018 +
           (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50118 * C50154) *
              C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50118 * C1018 +
           (((C33133 - C33132 + C33135 - C33134) * C118 +
             (C33137 - C33136 + C33139 - C33138) * C50199) *
                C16957 +
            ((C33141 - C33140 + C33143 - C33142) * C118 +
             (C33145 - C33144 + C33147 - C33146) * C50199) *
                C16958 +
            ((C33492 - C33493 + C33494 - C33495) * C118 +
             (C33496 - C33497 + C33498 - C33499) * C50199) *
                C16959) *
               C50118 * C50154) *
              C1021 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C50118 * C1018 +
           (C33504 * C16957 +
            ((C33493 - C33492 + C33495 - C33494) * C118 +
             (C33497 - C33496 + C33499 - C33498) * C50199) *
                C16958 +
            ((C32933 * C298 - C32931 * C316 + C32934 * C892 - C50278 * C901) *
                 C118 +
             (C32933 * C317 - C32931 * C328 + C32934 * C902 - C50278 * C907) *
                 C50199) *
                C16959) *
               C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C50118 * C1089 +
          (((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                C118 +
            (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                C50199) *
               C16957 +
           ((C33132 - C33133 + C33134 - C33135) * C118 +
            (C33136 - C33137 + C33138 - C33139) * C50199) *
               C16958 +
           C33504 * C16959) *
              C50118 * C1090 +
          (((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                C118 +
            (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                C50199) *
               C16957 +
           ((C33148 - C33149 + C33150 - C33151) * C118 +
            (C33152 - C33153 + C33154 - C33155) * C50199) *
               C16958 +
           ((C33156 - C33157 + C33158 - C33159) * C118 +
            (C33160 - C33161 + C33162 - C33163) * C50199) *
               C16959) *
              C50118 * C1091 +
          (((C32933 * C1094 - C32931 * C1098 + C32934 * C3152 -
             C50278 * C3155) *
                C118 +
            (C32933 * C1099 - C32931 * C1106 + C32934 * C3156 -
             C50278 * C3161) *
                C50199) *
               C16957 +
           ((C32933 * C1095 - C32931 * C1100 + C32934 * C3153 -
             C50278 * C3157) *
                C118 +
            (C32933 * C1101 - C32931 * C1107 + C32934 * C3158 -
             C50278 * C3162) *
                C50199) *
               C16958 +
           ((C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C118 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C50199) *
               C16959) *
              C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50118 * C1018 +
           ((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 +
            (C35890 - C35891 + C35892 - C35893) * C2289 +
            (C35894 - C35895 + C35896 - C35897) * C2284) *
               C50057 * C50118 * C50154) *
              C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50118 * C1018 +
           ((C33133 - C33132 + C33135 - C33134) * C2287 +
            (C33137 - C33136 + C33139 - C33138) * C2282 +
            (C33148 - C33149 + C33150 - C33151) * C2288 +
            (C33152 - C33153 + C33154 - C33155) * C2283 +
            (C35902 - C35903 + C35904 - C35905) * C2289 +
            (C35906 - C35907 + C35908 - C35909) * C2284) *
               C50057 * C50118 * C50154) *
              C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C50118 * C1018 +
           (C33500 * C2287 + C33501 * C2282 +
            (C33157 - C33156 + C33159 - C33158) * C2288 +
            (C33161 - C33160 + C33163 - C33162) * C2283 +
            (C32933 * C1096 - C32931 * C1102 + C32934 * C3154 -
             C50278 * C3159) *
                C2289 +
            (C32933 * C1103 - C32931 * C1108 + C32934 * C3160 -
             C50278 * C3163) *
                C2284) *
               C50057 * C50118 * C50154) *
              C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C35874 - C35875 + C35876 - C35877) * C2288 +
           (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
           C35917 * C2284) *
              C50057 * C50118 * C1089 +
          ((C35875 - C35874 + C35877 - C35876) * C2287 +
           (C35879 - C35878 + C35881 - C35880) * C2282 +
           (C35883 - C35882 + C35885 - C35884) * C2288 +
           (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
           C36831 * C2284) *
              C50057 * C50118 * C1090 +
          (C35916 * C2287 + C35917 * C2282 +
           (C35891 - C35890 + C35893 - C35892) * C2288 +
           (C35895 - C35894 + C35897 - C35896) * C2283 +
           (C36822 - C36823 + C36824 - C36825) * C2289 +
           (C36826 - C36827 + C36828 - C36829) * C2284) *
              C50057 * C50118 * C1091 +
          (C36830 * C2287 + C36831 * C2282 +
           (C36823 - C36822 + C36825 - C36824) * C2288 +
           (C36827 - C36826 + C36829 - C36828) * C2283 +
           (C32933 * C3428 - C32931 * C3430 + C32934 * C20725 -
            C50278 * C20726) *
               C2289 +
           (C32933 * C3431 - C32931 * C3434 + C32934 * C20727 -
            C50278 * C20728) *
               C2284) *
              C50057 * C50118 * C1092) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                  C118 +
              (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                  C50199) *
                 C16957 +
             ((C32936 - C32937 + C32938 - C32939) * C118 +
              (C32940 - C32941 + C32942 - C32943) * C50199) *
                 C16958 +
             C32984 * C16959) *
                C1669 +
            (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                  C118 +
              (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                  C50199) *
                 C16957 +
             ((C33310 - C33311 + C33312 - C33313) * C118 +
              (C33314 - C33315 + C33316 - C33317) * C50199) *
                 C16958 +
             C33667 * C16959) *
                C50182) *
               C50343 +
           ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                  C118 +
              (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                  C50199) *
                 C16957 +
             ((C33132 - C33133 + C33134 - C33135) * C118 +
              (C33136 - C33137 + C33138 - C33139) * C50199) *
                 C16958 +
             C33504 * C16959) *
                C1669 +
            (((C32931 * C893 - C32933 * C888 + C50278 * C1212 -
               C32934 * C1208) *
                  C118 +
              (C32931 * C903 - C32933 * C894 + C50278 * C1220 -
               C32934 * C1213) *
                  C50199) *
                 C16957 +
             ((C33862 - C33863 + C33864 - C33865) * C118 +
              (C33866 - C33867 + C33868 - C33869) * C50199) *
                 C16958 +
             ((C33870 - C33871 + C33872 - C33873) * C118 +
              (C33874 - C33875 + C33876 - C33877) * C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50335 +
          (((((C32937 - C32936 + C32939 - C32938) * C118 +
              (C32941 - C32940 + C32943 - C32942) * C50199) *
                 C16957 +
             ((C32945 - C32944 + C32947 - C32946) * C118 +
              (C32949 - C32948 + C32951 - C32950) * C50199) *
                 C16958 +
             C32985 * C16959) *
                C1669 +
            (((C33311 - C33310 + C33313 - C33312) * C118 +
              (C33315 - C33314 + C33317 - C33316) * C50199) *
                 C16957 +
             ((C33319 - C33318 + C33321 - C33320) * C118 +
              (C33323 - C33322 + C33325 - C33324) * C50199) *
                 C16958 +
             ((C33655 - C33656 + C33657 - C33658) * C118 +
              (C33659 - C33660 + C33661 - C33662) * C50199) *
                 C16959) *
                C50182) *
               C50343 +
           ((((C33133 - C33132 + C33135 - C33134) * C118 +
              (C33137 - C33136 + C33139 - C33138) * C50199) *
                 C16957 +
             ((C33141 - C33140 + C33143 - C33142) * C118 +
              (C33145 - C33144 + C33147 - C33146) * C50199) *
                 C16958 +
             ((C33492 - C33493 + C33494 - C33495) * C118 +
              (C33496 - C33497 + C33498 - C33499) * C50199) *
                 C16959) *
                C1669 +
            (((C33863 - C33862 + C33865 - C33864) * C118 +
              (C33867 - C33866 + C33869 - C33868) * C50199) *
                 C16957 +
             ((C33871 - C33870 + C33873 - C33872) * C118 +
              (C33875 - C33874 + C33877 - C33876) * C50199) *
                 C16958 +
             ((C32933 * C891 - C32931 * C899 + C32934 * C1211 -
               C50278 * C1218) *
                  C118 +
              (C32933 * C900 - C32931 * C906 + C32934 * C1219 -
               C50278 * C1223) *
                  C50199) *
                 C16959) *
                C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C2287 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C2282 +
             (C35874 - C35875 + C35876 - C35877) * C2288 +
             (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
             C35917 * C2284) *
                C50057 * C1669 +
            ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C2287 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C2282 +
             (C36550 - C36551 + C36552 - C36553) * C2288 +
             (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
             C37493 * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C35875 - C35874 + C35877 - C35876) * C2287 +
             (C35879 - C35878 + C35881 - C35880) * C2282 +
             (C35883 - C35882 + C35885 - C35884) * C2288 +
             (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
             C36831 * C2284) *
                C50057 * C1669 +
            ((C36551 - C36550 + C36553 - C36552) * C2287 +
             (C36555 - C36554 + C36557 - C36556) * C2282 +
             (C36559 - C36558 + C36561 - C36560) * C2288 +
             (C36563 - C36562 + C36565 - C36564) * C2283 +
             (C37484 - C37485 + C37486 - C37487) * C2289 +
             (C37488 - C37489 + C37490 - C37491) * C2284) *
                C50057 * C50182) *
               C50154) *
              C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C2287 +
             (C32941 - C32940 + C32943 - C32942) * C2282 +
             (C33132 - C33133 + C33134 - C33135) * C2288 +
             (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
             C35915 * C2284) *
                C50057 * C1669 +
            ((C33311 - C33310 + C33313 - C33312) * C2287 +
             (C33315 - C33314 + C33317 - C33316) * C2282 +
             (C33862 - C33863 + C33864 - C33865) * C2288 +
             (C33866 - C33867 + C33868 - C33869) * C2283 +
             (C36566 - C36567 + C36568 - C36569) * C2289 +
             (C36570 - C36571 + C36572 - C36573) * C2284) *
                C50057 * C50182) *
               C50343 +
           (((C33133 - C33132 + C33135 - C33134) * C2287 +
             (C33137 - C33136 + C33139 - C33138) * C2282 +
             (C33148 - C33149 + C33150 - C33151) * C2288 +
             (C33152 - C33153 + C33154 - C33155) * C2283 +
             (C35902 - C35903 + C35904 - C35905) * C2289 +
             (C35906 - C35907 + C35908 - C35909) * C2284) *
                C50057 * C1669 +
            ((C33863 - C33862 + C33865 - C33864) * C2287 +
             (C33867 - C33866 + C33869 - C33868) * C2282 +
             (C36567 - C36566 + C36569 - C36568) * C2288 +
             (C36571 - C36570 + C36573 - C36572) * C2283 +
             (C32933 * C3153 - C32931 * C3157 + C32934 * C3589 -
              C50278 * C3592) *
                 C2289 +
             (C32933 * C3158 - C32931 * C3162 + C32934 * C3593 -
              C50278 * C3595) *
                 C2284) *
                C50057 * C50182) *
               C50154) *
              C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50390 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50391 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C2085) *
              C50343 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C50390 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50391 +
           (((C32933 * C1208 - C32931 * C1212 + C32934 * C4494 -
              C50278 * C4498) *
                 C118 +
             (C32933 * C1213 - C32931 * C1220 + C32934 * C4499 -
              C50278 * C4506) *
                 C50199) *
                C16957 +
            ((C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
              C50278 * C4502) *
                 C118 +
             (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
              C50278 * C4508) *
                 C50199) *
                C16958 +
            ((C32933 * C1210 - C32931 * C1216 + C32934 * C5998 -
              C50278 * C5999) *
                 C118 +
             (C32933 * C1217 - C32931 * C1222 + C32934 * C6000 -
              C50278 * C6001) *
                 C50199) *
                C16959) *
               C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50390 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50391 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C36978 - C36979 + C36980 - C36981) * C2288 +
            (C36982 - C36983 + C36984 - C36985) * C2283 +
            (C36986 - C36987 + C36988 - C36989) * C2289 +
            (C36990 - C36991 + C36992 - C36993) * C2284) *
               C50057 * C2085) *
              C50343 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C50390 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50391 +
           ((C36979 - C36978 + C36981 - C36980) * C2287 +
            (C36983 - C36982 + C36985 - C36984) * C2282 +
            (C36987 - C36986 + C36989 - C36988) * C2288 +
            (C36991 - C36990 + C36993 - C36992) * C2283 +
            (C32933 * C3588 - C32931 * C3590 + C32934 * C20997 -
             C50278 * C20998) *
                C2289 +
            (C32933 * C3591 - C32931 * C3594 + C32934 * C20999 -
             C50278 * C21000) *
                C2284) *
               C50057 * C2085) *
              C50154) *
         C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C285 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C1669 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50182) *
              C286 +
          ((((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C1669 +
           (((C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C16957 +
            ((C32933 * C1556 - C32931 * C1561 + C32934 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C32933 * C1562 - C32931 * C1568 + C32934 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C16958 +
            ((C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C16959) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50102 * C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C1669 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50182) *
              C50102 * C1021 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C1669 +
           (C33667 * C16957 +
            ((C33656 - C33655 + C33658 - C33657) * C118 +
             (C33660 - C33659 + C33662 - C33661) * C50199) *
                C16958 +
            ((C32933 * C463 - C32931 * C481 + C32934 * C464 - C50278 * C483) *
                 C118 +
             (C32933 * C482 - C32931 * C493 + C32934 * C484 - C50278 * C494) *
                 C50199) *
                C16959) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C118 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C50199) *
               C16957 +
           ((C32936 - C32937 + C32938 - C32939) * C118 +
            (C32940 - C32941 + C32942 - C32943) * C50199) *
               C16958 +
           C32984 * C16959) *
              C1835 +
          (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C118 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C50199) *
               C16957 +
           ((C33310 - C33311 + C33312 - C33313) * C118 +
            (C33314 - C33315 + C33316 - C33317) * C50199) *
               C16958 +
           C33667 * C16959) *
              C1836 +
          (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C118 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C50199) *
               C16957 +
           ((C33326 - C33327 + C33328 - C33329) * C118 +
            (C33330 - C33331 + C33332 - C33333) * C50199) *
               C16958 +
           ((C33334 - C33335 + C33336 - C33337) * C118 +
            (C33338 - C33339 + C33340 - C33341) * C50199) *
               C16959) *
              C1837 +
          (((C32933 * C1839 - C32931 * C1843 + C32934 * C5452 -
             C50278 * C5455) *
                C118 +
            (C32933 * C1844 - C32931 * C1851 + C32934 * C5456 -
             C50278 * C5461) *
                C50199) *
               C16957 +
           ((C32933 * C1840 - C32931 * C1845 + C32934 * C5453 -
             C50278 * C5457) *
                C118 +
            (C32933 * C1846 - C32931 * C1852 + C32934 * C5458 -
             C50278 * C5462) *
                C50199) *
               C16958 +
           ((C32933 * C1841 - C32931 * C1847 + C32934 * C5454 -
             C50278 * C5459) *
                C118 +
            (C32933 * C1848 - C32931 * C1853 + C32934 * C5460 -
             C50278 * C5463) *
                C50199) *
               C16959) *
              C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C1669 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C36566 - C36567 + C36568 - C36569) * C2289 +
            (C36570 - C36571 + C36572 - C36573) * C2284) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C1669 +
           (C33663 * C2287 + C33664 * C2282 +
            (C33871 - C33870 + C33873 - C33872) * C2288 +
            (C33875 - C33874 + C33877 - C33876) * C2283 +
            (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
             C50278 * C2641) *
                C2289 +
            (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
             C50278 * C2645) *
                C2284) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C285 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C1669 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50182) *
              C286 +
          ((C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C1669 +
           (C37492 * C2287 + C37493 * C2282 +
            (C37485 - C37484 + C37487 - C37486) * C2288 +
            (C37489 - C37488 + C37491 - C37490) * C2283 +
            (C32933 * C4090 - C32931 * C4092 + C32934 * C20391 -
             C50278 * C20392) *
                C2289 +
            (C32933 * C4093 - C32931 * C4096 + C32934 * C20393 -
             C50278 * C20394) *
                C2284) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
               C2287 +
           (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
               C2282 +
           (C35874 - C35875 + C35876 - C35877) * C2288 +
           (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
           C35917 * C2284) *
              C50057 * C1835 +
          ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
               C2287 +
           (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
               C2282 +
           (C36550 - C36551 + C36552 - C36553) * C2288 +
           (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
           C37493 * C2284) *
              C50057 * C1836 +
          ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
               C2287 +
           (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
               C2282 +
           (C36978 - C36979 + C36980 - C36981) * C2288 +
           (C36982 - C36983 + C36984 - C36985) * C2283 +
           (C36986 - C36987 + C36988 - C36989) * C2289 +
           (C36990 - C36991 + C36992 - C36993) * C2284) *
              C50057 * C1837 +
          ((C32933 * C1839 - C32931 * C1843 + C32934 * C5452 - C50278 * C5455) *
               C2287 +
           (C32933 * C1844 - C32931 * C1851 + C32934 * C5456 - C50278 * C5461) *
               C2282 +
           (C32933 * C4494 - C32931 * C4498 + C32934 * C6404 - C50278 * C6406) *
               C2288 +
           (C32933 * C4499 - C32931 * C4506 + C32934 * C6407 - C50278 * C6410) *
               C2283 +
           (C32933 * C4495 - C32931 * C4500 + C32934 * C22641 -
            C50278 * C22642) *
               C2289 +
           (C32933 * C4501 - C32931 * C4507 + C32934 * C22643 -
            C50278 * C22644) *
               C2284) *
              C50057 * C1838) *
         C50102 * C50083) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C50390 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50391 +
           (((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                 C118 +
             (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                 C50199) *
                C16957 +
            ((C33326 - C33327 + C33328 - C33329) * C118 +
             (C33330 - C33331 + C33332 - C33333) * C50199) *
                C16958 +
            ((C33334 - C33335 + C33336 - C33337) * C118 +
             (C33338 - C33339 + C33340 - C33341) * C50199) *
                C16959) *
               C2085) *
              C50102 * C50335 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C50390 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50391 +
           (((C33327 - C33326 + C33329 - C33328) * C118 +
             (C33331 - C33330 + C33333 - C33332) * C50199) *
                C16957 +
            ((C33335 - C33334 + C33337 - C33336) * C118 +
             (C33339 - C33338 + C33341 - C33340) * C50199) *
                C16958 +
            ((C32933 * C462 - C32931 * C479 + C32934 * C1842 - C50278 * C1849) *
                 C118 +
             (C32933 * C480 - C32931 * C492 + C32934 * C1850 - C50278 * C1854) *
                 C50199) *
                C16959) *
               C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C50390 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50391 +
           ((C32931 * C473 - C32933 * C459 + C50278 * C1843 - C32934 * C1839) *
                C2287 +
            (C32931 * C489 - C32933 * C474 + C50278 * C1851 - C32934 * C1844) *
                C2282 +
            (C36978 - C36979 + C36980 - C36981) * C2288 +
            (C36982 - C36983 + C36984 - C36985) * C2283 +
            (C36986 - C36987 + C36988 - C36989) * C2289 +
            (C36990 - C36991 + C36992 - C36993) * C2284) *
               C50057 * C2085) *
              C50102 * C50335 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C50390 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C36566 - C36567 + C36568 - C36569) * C2289 +
            (C36570 - C36571 + C36572 - C36573) * C2284) *
               C50057 * C50391 +
           ((C33327 - C33326 + C33329 - C33328) * C2287 +
            (C33331 - C33330 + C33333 - C33332) * C2282 +
            (C32933 * C1209 - C32931 * C1214 + C32934 * C4496 -
             C50278 * C4502) *
                C2288 +
            (C32933 * C1215 - C32931 * C1221 + C32934 * C4503 -
             C50278 * C4508) *
                C2283 +
            (C32933 * C2635 - C32931 * C2639 + C32934 * C4497 -
             C50278 * C4504) *
                C2289 +
            (C32933 * C2640 - C32931 * C2644 + C32934 * C4505 -
             C50278 * C4509) *
                C2284) *
               C50057 * C2085) *
              C50102 * C50089)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C50102 * C1020 +
          ((((C32937 - C32936 + C32939 - C32938) * C118 +
             (C32941 - C32940 + C32943 - C32942) * C50199) *
                C16957 +
            ((C32945 - C32944 + C32947 - C32946) * C118 +
             (C32949 - C32948 + C32951 - C32950) * C50199) *
                C16958 +
            C32985 * C16959) *
               C1669 +
           (((C33311 - C33310 + C33313 - C33312) * C118 +
             (C33315 - C33314 + C33317 - C33316) * C50199) *
                C16957 +
            ((C33319 - C33318 + C33321 - C33320) * C118 +
             (C33323 - C33322 + C33325 - C33324) * C50199) *
                C16958 +
            ((C33655 - C33656 + C33657 - C33658) * C118 +
             (C33659 - C33660 + C33661 - C33662) * C50199) *
                C16959) *
               C50182) *
              C50102 * C1021 +
          ((C32984 * C16957 +
            ((C32953 - C32952 + C32955 - C32954) * C118 +
             (C32957 - C32956 + C32959 - C32958) * C50199) *
                C16958 +
            ((C32960 - C32961 + C32962 - C32963) * C118 +
             (C32964 - C32965 + C32966 - C32967) * C50199) *
                C16959) *
               C1669 +
           (C33667 * C16957 +
            ((C33656 - C33655 + C33658 - C33657) * C118 +
             (C33660 - C33659 + C33662 - C33661) * C50199) *
                C16958 +
            ((C32933 * C463 - C32931 * C481 + C32934 * C464 - C50278 * C483) *
                 C118 +
             (C32933 * C482 - C32931 * C493 + C32934 * C484 - C50278 * C494) *
                 C50199) *
                C16959) *
               C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                 C118 +
             (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                 C50199) *
                C16957 +
            ((C32936 - C32937 + C32938 - C32939) * C118 +
             (C32940 - C32941 + C32942 - C32943) * C50199) *
                C16958 +
            C32984 * C16959) *
               C1669 +
           (((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                 C118 +
             (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                 C50199) *
                C16957 +
            ((C33310 - C33311 + C33312 - C33313) * C118 +
             (C33314 - C33315 + C33316 - C33317) * C50199) *
                C16958 +
            C33667 * C16959) *
               C50182) *
              C285 +
          ((((C32933 * C290 - C32931 * C300 + C32934 * C888 - C50278 * C893) *
                 C118 +
             (C32933 * C301 - C32931 * C320 + C32934 * C894 - C50278 * C903) *
                 C50199) *
                C16957 +
            ((C33132 - C33133 + C33134 - C33135) * C118 +
             (C33136 - C33137 + C33138 - C33139) * C50199) *
                C16958 +
            C33504 * C16959) *
               C1669 +
           (((C32931 * C893 - C32933 * C888 + C50278 * C1212 - C32934 * C1208) *
                 C118 +
             (C32931 * C903 - C32933 * C894 + C50278 * C1220 - C32934 * C1213) *
                 C50199) *
                C16957 +
            ((C33862 - C33863 + C33864 - C33865) * C118 +
             (C33866 - C33867 + C33868 - C33869) * C50199) *
                C16958 +
            ((C33870 - C33871 + C33872 - C33873) * C118 +
             (C33874 - C33875 + C33876 - C33877) * C50199) *
                C16959) *
               C50182) *
              C286 +
          ((((C32931 * C308 - C32933 * C294 + C50278 * C1559 - C32934 * C1555) *
                 C118 +
             (C32931 * C324 - C32933 * C309 + C50278 * C1567 - C32934 * C1560) *
                 C50199) *
                C16957 +
            ((C33148 - C33149 + C33150 - C33151) * C118 +
             (C33152 - C33153 + C33154 - C33155) * C50199) *
                C16958 +
            ((C33156 - C33157 + C33158 - C33159) * C118 +
             (C33160 - C33161 + C33162 - C33163) * C50199) *
                C16959) *
               C1669 +
           (((C32933 * C1555 - C32931 * C1559 + C32934 * C2634 -
              C50278 * C2637) *
                 C118 +
             (C32933 * C1560 - C32931 * C1567 + C32934 * C2638 -
              C50278 * C2643) *
                 C50199) *
                C16957 +
            ((C32933 * C1556 - C32931 * C1561 + C32934 * C2635 -
              C50278 * C2639) *
                 C118 +
             (C32933 * C1562 - C32931 * C1568 + C32934 * C2640 -
              C50278 * C2644) *
                 C50199) *
                C16958 +
            ((C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
              C50278 * C2641) *
                 C118 +
             (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
              C50278 * C2645) *
                 C50199) *
                C16959) *
               C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C50102 * C1020 +
          (((C32937 - C32936 + C32939 - C32938) * C2287 +
            (C32941 - C32940 + C32943 - C32942) * C2282 +
            (C33132 - C33133 + C33134 - C33135) * C2288 +
            (C33136 - C33137 + C33138 - C33139) * C2283 + C35914 * C2289 +
            C35915 * C2284) *
               C50057 * C1669 +
           ((C33311 - C33310 + C33313 - C33312) * C2287 +
            (C33315 - C33314 + C33317 - C33316) * C2282 +
            (C33862 - C33863 + C33864 - C33865) * C2288 +
            (C33866 - C33867 + C33868 - C33869) * C2283 +
            (C36566 - C36567 + C36568 - C36569) * C2289 +
            (C36570 - C36571 + C36572 - C36573) * C2284) *
               C50057 * C50182) *
              C50102 * C1021 +
          ((C32976 * C2287 + C32977 * C2282 +
            (C33141 - C33140 + C33143 - C33142) * C2288 +
            (C33145 - C33144 + C33147 - C33146) * C2283 +
            (C33156 - C33157 + C33158 - C33159) * C2289 +
            (C33160 - C33161 + C33162 - C33163) * C2284) *
               C50057 * C1669 +
           (C33663 * C2287 + C33664 * C2282 +
            (C33871 - C33870 + C33873 - C33872) * C2288 +
            (C33875 - C33874 + C33877 - C33876) * C2283 +
            (C32933 * C1557 - C32931 * C1563 + C32934 * C2636 -
             C50278 * C2641) *
                C2289 +
            (C32933 * C1564 - C32931 * C1569 + C32934 * C2642 -
             C50278 * C2645) *
                C2284) *
               C50057 * C50182) *
              C50102 * C1022)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32931 * C126 - C32933 * C119 + C50278 * C465 - C32934 * C455) *
                C2287 +
            (C32931 * C140 - C32933 * C127 + C50278 * C485 - C32934 * C466) *
                C2282 +
            (C35874 - C35875 + C35876 - C35877) * C2288 +
            (C35878 - C35879 + C35880 - C35881) * C2283 + C35916 * C2289 +
            C35917 * C2284) *
               C50057 * C1669 +
           ((C32933 * C455 - C32931 * C465 + C32934 * C459 - C50278 * C473) *
                C2287 +
            (C32933 * C466 - C32931 * C485 + C32934 * C474 - C50278 * C489) *
                C2282 +
            (C36550 - C36551 + C36552 - C36553) * C2288 +
            (C36554 - C36555 + C36556 - C36557) * C2283 + C37492 * C2289 +
            C37493 * C2284) *
               C50057 * C50182) *
              C285 +
          (((C35875 - C35874 + C35877 - C35876) * C2287 +
            (C35879 - C35878 + C35881 - C35880) * C2282 +
            (C35883 - C35882 + C35885 - C35884) * C2288 +
            (C35887 - C35886 + C35889 - C35888) * C2283 + C36830 * C2289 +
            C36831 * C2284) *
               C50057 * C1669 +
           ((C36551 - C36550 + C36553 - C36552) * C2287 +
            (C36555 - C36554 + C36557 - C36556) * C2282 +
            (C36559 - C36558 + C36561 - C36560) * C2288 +
            (C36563 - C36562 + C36565 - C36564) * C2283 +
            (C37484 - C37485 + C37486 - C37487) * C2289 +
            (C37488 - C37489 + C37490 - C37491) * C2284) *
               C50057 * C50182) *
              C286 +
          ((C35916 * C2287 + C35917 * C2282 +
            (C35891 - C35890 + C35893 - C35892) * C2288 +
            (C35895 - C35894 + C35897 - C35896) * C2283 +
            (C36822 - C36823 + C36824 - C36825) * C2289 +
            (C36826 - C36827 + C36828 - C36829) * C2284) *
               C50057 * C1669 +
           (C37492 * C2287 + C37493 * C2282 +
            (C37485 - C37484 + C37487 - C37486) * C2288 +
            (C37489 - C37488 + C37491 - C37490) * C2283 +
            (C32933 * C4090 - C32931 * C4092 + C32934 * C20391 -
             C50278 * C20392) *
                C2289 +
            (C32933 * C4093 - C32931 * C4096 + C32934 * C20393 -
             C50278 * C20394) *
                C2284) *
               C50057 * C50182) *
              C287) *
         C50083) /
            (p * q * std::sqrt(p + q));
}
