/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AB_zx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_12_31(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49150 = 0 * ae;
    const double C49149 = ae * be;
    const double C49148 = 0 * be;
    const double C49147 = ae + be;
    const double C49146 = 0 * be;
    const double C49145 = xA - xB;
    const double C49195 = 0 * be;
    const double C49194 = zA - zB;
    const double C49238 = 0 * ae;
    const double C49234 = 0 * be;
    const double C49272 = xP - xQ;
    const double C49271 = zP - zQ;
    const double C49270 = p + q;
    const double C49269 = p * q;
    const double C49277 = bs[3];
    const double C49287 = bs[4];
    const double C49296 = bs[5];
    const double C49310 = bs[6];
    const double C49332 = bs[7];
    const double C49441 = yP - yQ;
    const double C49647 = bs[2];
    const double C122 = bs[0];
    const double C50082 = ce + de;
    const double C50081 = ce * de;
    const double C50080 = xC - xD;
    const double C50104 = yC - yD;
    const double C50120 = zC - zD;
    const double C50206 = yA - yB;
    const double C49155 = C49150 / C49147;
    const double C49152 = 2 * C49147;
    const double C49151 = std::pow(C49147, 2);
    const double C49154 = C49149 * C49145;
    const double C49153 = C49145 * C49148;
    const double C50056 = C49145 * be;
    const double C50055 = C49145 * ae;
    const double C50054 = std::pow(C49145, 2);
    const double C49196 = C49149 * C49194;
    const double C49235 = C49194 * C49195;
    const double C50218 = std::pow(C49194, 2);
    const double C50282 = C49194 * be;
    const double C50281 = C49194 * ae;
    const double C49243 = C49238 / C49147;
    const double C49297 = std::pow(C49272, 2);
    const double C49367 = C49272 * be;
    const double C49279 = C49271 * ae;
    const double C49278 = C49271 * C49272;
    const double C49514 = std::pow(C49271, 2);
    const double C49273 = 2 * C49269;
    const double C49459 = std::pow(C49441, 2);
    const double C50084 = 2 * C50082;
    const double C50094 = std::pow(C50082, 2);
    const double C50086 = C50080 * de;
    const double C50085 = C50080 * ce;
    const double C50083 = std::pow(C50080, 2);
    const double C50105 = std::pow(C50104, 2);
    const double C50157 = C50104 * de;
    const double C50156 = C50104 * ce;
    const double C50121 = std::pow(C50120, 2);
    const double C50185 = C50120 * de;
    const double C50184 = C50120 * ce;
    const double C50207 = std::pow(C50206, 2);
    const double C50256 = C50206 * be;
    const double C50255 = C50206 * ae;
    const double C50064 = std::pow(C49152, -1);
    const double C50362 = std::pow(C49152, -2);
    const double C49156 = 2 * C49151;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (xP - xQ) * ae * be) /
                        C49151;
    const double C50340 = 4 * C49151;
    const double C49157 = C49153 / C49147;
    const double C50057 = C50054 * C49149;
    const double C49240 = C49235 / C49147;
    const double C50219 = C50218 * C49149;
    const double C49370 = C49287 * C49367;
    const double C49374 = C49277 * C49367;
    const double C49381 = C49296 * C49367;
    const double C49393 = C49310 * C49367;
    const double C49414 = C49332 * C49367;
    const double C49282 = C49277 * C49279;
    const double C49289 = C49287 * C49279;
    const double C49299 = C49296 * C49279;
    const double C49314 = C49310 * C49279;
    const double C49338 = C49332 * C49279;
    const double C49281 = C49278 * ae;
    const double C49274 = C49273 / C49270;
    const double C129 = (-(bs[1] * C49367 * C49273) / C49270) / C49147;
    const double C133 = (-(bs[1] * C49279 * C49273) / C49270) / C49147;
    const double C123 = -(C49272 * bs[1] * C49273) / C49270;
    const double C253 = -(C49441 * bs[1] * C49273) / C49270;
    const double C394 = -(C49271 * bs[1] * C49273) / C49270;
    const double C50095 = std::pow(C50084, -1);
    const double C50349 = std::pow(C50084, -2);
    const double C50099 = 2 * C50094;
    const double C50347 = 4 * C50094;
    const double C50087 = C50083 * C50081;
    const double C50106 = C50105 * C50081;
    const double C50122 = C50121 * C50081;
    const double C50208 = C50207 * C49149;
    const double C49162 = C49148 / C49156;
    const double C49160 = C49146 / C49156;
    const double C49237 = C49195 / C49156;
    const double C49241 = C49234 / C49156;
    const double C49159 = 0 - C49157;
    const double C50058 = C50057 / C49147;
    const double C49244 = 0 - C49240;
    const double C50220 = C50219 / C49147;
    const double C49283 = C49281 * be;
    const double C49276 = -C49274;
    const double C49286 = std::pow(C49274, 4);
    const double C49309 = std::pow(C49274, 6);
    const double C144 =
        (be * std::pow(C49274, 2) * bs[2] * C49271 * ae +
         C49272 * std::pow(-C49274, 3) * bs[3] * C49271 * C49272 * ae * be) /
        C49151;
    const double C49646 = std::pow(C49274, 2);
    const double C130 =
        (C49272 * std::pow(C49274, 2) * bs[2] * C49367) / C49147 -
        (be * bs[1] * C49273) / (C49270 * C49147);
    const double C50088 = C50087 / C50082;
    const double C50107 = C50106 / C50082;
    const double C50123 = C50122 / C50082;
    const double C50209 = C50208 / C49147;
    const double C49164 = C49159 * ae;
    const double C50059 = -C50058;
    const double C49247 = C49244 * ae;
    const double C50221 = -C50220;
    const double C49288 = C49287 * C49283;
    const double C49298 = C49296 * C49283;
    const double C49312 = C49310 * C49283;
    const double C49336 = C49332 * C49283;
    const double C49280 = std::pow(C49276, 3);
    const double C49295 = std::pow(C49276, 5);
    const double C49331 = std::pow(C49276, 7);
    const double C49291 = C49286 * C49289;
    const double C49371 = C49287 * C49286;
    const double C49372 = C49286 * C49370;
    const double C49317 = C49309 * C49314;
    const double C49395 = C49309 * C49393;
    const double C49415 = C49310 * C49309;
    const double C49648 = C49647 * C49646;
    const double C134 = (C49272 * C49646 * C49647 * C49279) / C49147;
    const double C263 = (C49441 * C49646 * C49647 * C49367) / C49147;
    const double C267 = (C49441 * C49646 * C49647 * C49279) / C49147;
    const double C404 = (C49271 * C49646 * C49647 * C49367) / C49147;
    const double C408 = (C49271 * C49646 * C49647 * C49279) / C49147 -
                        (ae * bs[1] * C49273) / (C49270 * C49147);
    const double C50089 = -C50088;
    const double C50108 = -C50107;
    const double C50124 = -C50123;
    const double C50210 = -C50209;
    const double C49167 = C49164 / C49147;
    const double C50060 = std::exp(C50059);
    const double C49249 = C49247 / C49147;
    const double C50222 = std::exp(C50221);
    const double C49290 = C49286 * C49288;
    const double C49316 = C49309 * C49312;
    const double C49284 = C49280 * C49282;
    const double C49368 = C49277 * C49280;
    const double C49375 = C49280 * C49374;
    const double C283 = ((yP - yQ) * C49280 * C49277 * C49283) / C49151;
    const double C424 = (ae * std::pow(C49274, 2) * bs[2] * C49272 * be +
                         C49271 * C49280 * C49277 * C49283) /
                        C49151;
    const double C49301 = C49295 * C49299;
    const double C49300 = C49295 * C49298;
    const double C49384 = C49295 * C49381;
    const double C49394 = C49296 * C49295;
    const double C49341 = C49331 * C49338;
    const double C49340 = C49331 * C49336;
    const double C49417 = C49331 * C49414;
    const double C49294 = be * C49291;
    const double C49293 = C49272 * C49291;
    const double C49814 = C49441 * C49291;
    const double C49824 = C49271 * C49291;
    const double C49383 = C49272 * C49371;
    const double C49382 = C49371 * be;
    const double C49656 = C49371 * C49297;
    const double C49768 = C49371 * C49459;
    const double C49794 = C49441 * C49371;
    const double C49827 = C49371 * C49514;
    const double C49874 = C49271 * C49371;
    const double C49873 = C49371 * ae;
    const double C49377 = C49272 * C49372;
    const double C49451 = C49441 * C49372;
    const double C49512 = ae * C49372;
    const double C49511 = C49271 * C49372;
    const double C49319 = C49317 * C49297;
    const double C49330 = be * C49317;
    const double C49329 = C49272 * C49317;
    const double C49902 = C49317 * C49459;
    const double C49930 = C49441 * C49317;
    const double C49948 = C49271 * C49317;
    const double C49399 = C49272 * C49395;
    const double C49490 = C49395 * C49459;
    const double C49539 = C49441 * C49395;
    const double C49557 = C49395 * C49514;
    const double C49625 = ae * C49395;
    const double C49624 = C49271 * C49395;
    const double C49420 = C49415 * C49297;
    const double C49419 = C49272 * C49415;
    const double C49418 = C49415 * be;
    const double C49910 = C49415 * C49459;
    const double C49933 = C49441 * C49415;
    const double C49952 = C49415 * C49514;
    const double C124 = C49648 * C49297 - (bs[1] * C49273) / C49270;
    const double C254 = C49441 * C49272 * C49648;
    const double C257 = C49648 * C49459 - (bs[1] * C49273) / C49270;
    const double C395 = C49271 * C49272 * C49648;
    const double C398 = C49648 * C49514 - (bs[1] * C49273) / C49270;
    const double C775 = C49271 * C49441 * C49648;
    const double C50090 = std::exp(C50089);
    const double C50109 = std::exp(C50108);
    const double C50125 = std::exp(C50124);
    const double C50211 = std::exp(C50210);
    const double C49169 = C49167 - C49160;
    const double C19635 = C50060 * C263;
    const double C21777 = C50060 * C404;
    const double C49158 = C49154 * C50060;
    const double C50061 = C50060 * C50055;
    const double C50065 = C50064 * C50060;
    const double C50337 = C50060 * C50056;
    const double C50334 = C50060 / C49152;
    const double C16808 = C50362 * C50060;
    const double C49251 = C49249 - C49241;
    const double C49197 = C49196 * C50222;
    const double C121 = -(2 * C49149 * (zA - zB) * C50222) / C49147;
    const double C50283 = C50222 * C50281;
    const double C50286 = C50064 * C50222;
    const double C50370 = C50222 * C50282;
    const double C50363 = C50222 / C49152;
    const double C5034 = C50362 * C50222;
    const double C287 =
        (C49280 * C49277 * C49283 + C49290 * std::pow(yP - yQ, 2)) / C49151;
    const double C49318 = C49272 * C49316;
    const double C49483 = C49316 * C49459;
    const double C49538 = C49441 * C49316;
    const double C49556 = C49271 * C49316;
    const double C145 = (C49280 * C49277 * C49283 + be * C49272 * C49284 +
                         C49272 * (be * C49284 + C49272 * std::pow(C49274, 4) *
                                                     bs[4] * C49283)) /
                        C49151;
    const double C146 =
        (2 * (be * C49284 + C49272 * C49290) +
         be * (C49284 + C49291 * std::pow(C49272, 2)) +
         C49272 * (C49290 + be * C49272 * C49291 +
                   C49272 * (be * C49291 +
                             C49272 * std::pow(C49276, 5) * bs[5] * C49283))) /
        C49151;
    const double C284 = ((yP - yQ) * (be * C49284 + C49272 * C49290)) / C49151;
    const double C425 = (ae * (C49272 * C49280 * C49277 * C49272 * be +
                               bs[2] * std::pow(C49274, 2) * be) +
                         C49271 * (be * C49284 + C49272 * C49290)) /
                        C49151;
    const double C135 = (C49646 * C49647 * C49279 + C49284 * C49297) / C49147;
    const double C136 =
        (2 * C49272 * C49284 + C49272 * (C49284 + C49291 * C49297)) / C49147;
    const double C268 = (C49441 * C49272 * C49284) / C49147;
    const double C269 = (C49441 * (C49284 + C49291 * C49297)) / C49147;
    const double C275 = (C49646 * C49647 * C49279 + C49284 * C49459) / C49147;
    const double C409 =
        (C49271 * C49272 * C49284 + C49272 * C49648 * ae) / C49147;
    const double C416 =
        (C49646 * C49647 * C49279 + C49271 * (C49271 * C49284 + C49648 * ae) +
         C49271 * C49648 * ae) /
        C49147;
    const double C784 =
        (C49271 * C49441 * C49284 + C49441 * C49648 * ae) / C49147;
    const double C977 =
        (2 * C49441 * C49284 + C49441 * (C49284 + C49291 * C49459)) / C49147;
    const double C49378 = C49368 * be;
    const double C49655 = C49272 * C49368;
    const double C49736 = C49441 * C49368;
    const double C49826 = C49271 * C49368;
    const double C49825 = C49368 * ae;
    const double C410 = (C49271 * (C49284 + C49291 * C49297) +
                         (C49648 + C49368 * C49297) * ae) /
                        C49147;
    const double C1438 = (C49271 * (C49284 + C49291 * C49459) +
                          (C49648 + C49368 * C49459) * ae) /
                         C49147;
    const double C1722 =
        (2 * (C49271 * C49284 + C49648 * ae) +
         C49271 * (C49284 + C49271 * (C49271 * C49291 + C49368 * ae) +
                   C49271 * C49368 * ae) +
         (C49648 + C49368 * C49514) * ae) /
        C49147;
    const double C125 =
        2 * C49272 * C49648 + C49272 * (C49648 + C49368 * C49297);
    const double C255 = C49441 * (C49648 + C49368 * C49297);
    const double C396 = C49271 * (C49648 + C49368 * C49297);
    const double C969 =
        2 * C49441 * C49648 + C49441 * (C49648 + C49368 * C49459);
    const double C1430 = C49271 * (C49648 + C49368 * C49459);
    const double C1714 =
        2 * C49271 * C49648 + C49271 * (C49648 + C49368 * C49514);
    const double C428 = (C49280 * C49277 * C49283 + ae * C49271 * C49375 +
                         C49271 * (ae * C49375 + C49271 * C49290)) /
                        C49151;
    const double C790 =
        (ae * C49441 * C49375 + C49271 * C49441 * C49290) / C49151;
    const double C131 =
        (C49646 * C49647 * C49367 + C49272 * (C49272 * C49375 + C49648 * be) +
         C49272 * C49648 * be) /
        C49147;
    const double C264 = (C49441 * (C49272 * C49375 + C49648 * be)) / C49147;
    const double C271 = (C49646 * C49647 * C49367 + C49375 * C49459) / C49147;
    const double C405 = (C49271 * (C49272 * C49375 + C49648 * be)) / C49147;
    const double C412 = (C49646 * C49647 * C49367 + C49375 * C49514) / C49147;
    const double C780 = (C49271 * C49441 * C49375) / C49147;
    const double C973 =
        (2 * C49441 * C49375 + C49441 * (C49375 + C49372 * C49459)) / C49147;
    const double C1434 = (C49271 * (C49375 + C49372 * C49459)) / C49147;
    const double C1718 =
        (2 * C49271 * C49375 + C49271 * (C49375 + C49372 * C49514)) / C49147;
    const double C19637 = C50060 * C283;
    const double C21779 = C50060 * C424;
    const double C49303 = C49301 * C49297;
    const double C49308 = be * C49301;
    const double C49307 = C49272 * C49301;
    const double C49786 = C49301 * C49459;
    const double C49852 = C49441 * C49301;
    const double C49872 = C49271 * C49301;
    const double C2315 =
        (3 * (C49284 + C49291 * C49459) +
         C49441 * (2 * C49441 * C49291 + C49441 * (C49291 + C49301 * C49459))) /
        C49147;
    const double C49302 = C49272 * C49300;
    const double C49505 = C49441 * C49300;
    const double C49513 = C49271 * C49300;
    const double C981 = (2 * C49441 * C49290 +
                         C49441 * (C49290 + C49300 * std::pow(C49441, 2))) /
                        C49151;
    const double C1442 = (ae * (C49375 + C49372 * C49459) +
                          C49271 * (C49290 + C49300 * C49459)) /
                         C49151;
    const double C1726 = (2 * (ae * C49375 + C49271 * C49290) +
                          ae * (C49375 + C49372 * std::pow(C49271, 2)) +
                          C49271 * (C49290 + ae * C49271 * C49372 +
                                    C49271 * (ae * C49372 + C49271 * C49300))) /
                         C49151;
    const double C2319 =
        (3 * (C49290 + C49300 * C49459) +
         C49441 * (2 * C49441 * C49300 + C49441 * (C49300 + C49316 * C49459))) /
        C49151;
    const double C49386 = C49272 * C49384;
    const double C49471 = C49384 * C49459;
    const double C49489 = C49441 * C49384;
    const double C49516 = C49384 * C49514;
    const double C49555 = ae * C49384;
    const double C49554 = C49271 * C49384;
    const double C49398 = C49394 * C49297;
    const double C49397 = C49272 * C49394;
    const double C49396 = C49394 * be;
    const double C49795 = C49394 * C49459;
    const double C49855 = C49441 * C49394;
    const double C49875 = C49394 * C49514;
    const double C49950 = C49271 * C49394;
    const double C49949 = C49394 * ae;
    const double C49343 = C49341 * C49297;
    const double C49342 = C49272 * C49340;
    const double C49583 = C49340 * C49459;
    const double C49608 = C49441 * C49340;
    const double C49626 = C49271 * C49340;
    const double C49421 = C49272 * C49417;
    const double C49590 = C49417 * C49459;
    const double C49609 = C49441 * C49417;
    const double C49628 = C49417 * C49514;
    const double C276 = (C49272 * C49284 + C49293 * C49459) / C49147;
    const double C49385 = C49383 * be;
    const double C49660 = 2 * C49383;
    const double C49738 = C49441 * C49383;
    const double C49833 = C49271 * C49383;
    const double C49832 = C49383 * ae;
    const double C49657 = C49368 + C49656;
    const double C49769 = C49368 + C49768;
    const double C49796 = 2 * C49794;
    const double C49854 = C49271 * C49794;
    const double C49853 = C49794 * ae;
    const double C49829 = C49368 + C49827;
    const double C49879 = 2 * C49874;
    const double C49877 = C49874 * ae;
    const double C1095 = (C49441 * C49290 + ae * C49271 * C49451 +
                          C49271 * (ae * C49451 + C49271 * C49441 * C49300)) /
                         C49151;
    const double C1087 = (C49441 * C49375 + C49451 * C49514) / C49147;
    const double C49321 = C49301 + C49319;
    const double C49337 = 2 * C49329;
    const double C49335 = be * C49329;
    const double C49789 = C49329 * C49459;
    const double C49861 = C49441 * C49329;
    const double C49886 = C49271 * C49329;
    const double C49903 = C49301 + C49902;
    const double C49934 = C49271 * C49930;
    const double C49492 = C49384 + C49490;
    const double C49541 = C49539 * C49514;
    const double C49589 = 2 * C49539;
    const double C49607 = ae * C49539;
    const double C49606 = C49271 * C49539;
    const double C49561 = C49384 + C49557;
    const double C49632 = 2 * C49624;
    const double C49630 = ae * C49624;
    const double C49423 = C49394 + C49420;
    const double C49422 = C49419 * be;
    const double C49802 = C49419 * C49459;
    const double C49864 = C49441 * C49419;
    const double C49889 = C49419 * C49514;
    const double C49911 = C49394 + C49910;
    const double C49936 = C49933 * C49514;
    const double C49956 = C49394 + C49952;
    const double C50091 = C50090 * C50085;
    const double C50096 = C50095 * C50090;
    const double C50344 = C50090 * C50086;
    const double C50341 = C50090 / C50084;
    const double C897 = C50349 * C50090;
    const double C50158 = C50109 * C50156;
    const double C50161 = C50095 * C50109;
    const double C50353 = C50109 * C50157;
    const double C50348 = C50109 / C50084;
    const double C250 = C50349 * C50109;
    const double C50186 = C50125 * C50184;
    const double C50189 = C50095 * C50125;
    const double C50357 = C50125 * C50185;
    const double C50350 = C50125 / C50084;
    const double C393 = C50349 * C50125;
    const double C50257 = C50211 * C50255;
    const double C50260 = C50064 * C50211;
    const double C50366 = C50211 * C50256;
    const double C50361 = C50211 / C49152;
    const double C2161 = C50362 * C50211;
    const double C49163 = C49158 / C49151;
    const double C49161 = 2 * C49158;
    const double C50338 = C50061 / C49156;
    const double C50336 = C50061 / C49147;
    const double C50335 = C50061 * C50056;
    const double C16807 = (2 * C50064 * C50061) / C49147;
    const double C50339 = C50065 * C50056;
    const double C108 = C50065 / C50340;
    const double C7812 = C50065 / C49152;
    const double C50375 = C50337 / C49147;
    const double C16806 = (C50060 * std::pow(C50055, 2)) / C49151 + C50334;
    const double C49239 = C49197 / C49151;
    const double C49236 = 2 * C49197;
    const double C5037 =
        ((0 * ae) / C49147 - C49197 / C49151) / C49152 + (0 * ae) / C49147;
    const double C10568 =
        ((C50222 - (C49194 * 2 * C49197) / C49147) * ae) / C49147 -
        C49195 / C49156;
    const double C10569 = (0 * ae) / C49147 - C49197 / C49151;
    const double C33285 =
        (-C49195 / C49147) / C49152 -
        ((C50222 - (C49194 * 2 * C49197) / C49147) * be) / C49147;
    const double C33286 = (-(2 * C49197) / C49147) / C49152 - (0 * be) / C49147;
    const double C50372 = C50283 / C49156;
    const double C50371 = C50283 * C50282;
    const double C50365 = C50283 / C49147;
    const double C5033 = (2 * C50064 * C50283) / C49147;
    const double C5036 =
        (((C50222 - (C49194 * 2 * C49197) / C49147) * ae) / C49147 -
         C49195 / C49156) /
            C49152 +
        ((C49194 * ((0 * ae) / C49147 - C49197 / C49151) + C50286) * ae) /
            C49147;
    const double C50373 = C50286 * C50282;
    const double C38614 = C50286 / C50340;
    const double C43931 = C50286 / C49152;
    const double C50389 = C50370 / C49147;
    const double C5032 = (C50222 * std::pow(C50281, 2)) / C49151 + C50363;
    const double C19641 = C50060 * C287;
    const double C49484 = C49300 + C49483;
    const double C49540 = C49271 * C49538;
    const double C49582 = 2 * C49538;
    const double C2329 = C50065 * C284;
    const double C19654 = C50060 * C284;
    const double C24372 = C50065 * C284;
    const double C5349 = C50065 * C425;
    const double C21798 = C50060 * C425;
    const double C27438 = C50065 * C425;
    const double C49379 = C49377 + C49378;
    const double C417 =
        (C49272 * C49284 + C49271 * (C49271 * C49293 + C49655 * ae) +
         C49271 * C49655 * ae) /
        C49147;
    const double C785 =
        (C49271 * C49441 * C49293 + C49441 * C49655 * ae) / C49147;
    const double C258 = C49272 * C49648 + C49655 * C49459;
    const double C399 = C49272 * C49648 + C49655 * C49514;
    const double C776 = C49271 * C49441 * C49655;
    const double C970 =
        2 * C49441 * C49655 + C49441 * (C49655 + C49383 * C49459);
    const double C1431 = C49271 * (C49655 + C49383 * C49459);
    const double C1715 =
        2 * C49271 * C49655 + C49271 * (C49655 + C49383 * C49514);
    const double C1091 =
        (C49441 * C49284 + C49271 * (C49271 * C49441 * C49291 + C49736 * ae) +
         C49271 * C49736 * ae) /
        C49147;
    const double C4438 =
        (2 * (C49271 * C49814 + C49736 * ae) +
         C49271 * (C49814 + C49271 * (C49271 * C49441 * C49301 + C49794 * ae) +
                   C49271 * C49794 * ae) +
         (C49736 + C49794 * C49514) * ae) /
        C49147;
    const double C1083 = C49441 * C49648 + C49736 * C49514;
    const double C4432 =
        2 * C49271 * C49736 + C49271 * (C49736 + C49794 * C49514);
    const double C49828 = C49824 + C49825;
    const double C21783 = C50060 * C428;
    const double C20126 = C50060 * C790;
    const double C2325 = C50065 * C264;
    const double C19652 = C50060 * C264;
    const double C24368 = C50065 * C264;
    const double C19639 = C50060 * C271;
    const double C5345 = C50065 * C405;
    const double C21796 = C50060 * C405;
    const double C27434 = C50065 * C405;
    const double C21781 = C50060 * C412;
    const double C20124 = C50060 * C780;
    const double C19643 = C50060 * C973;
    const double C20128 = C50060 * C1434;
    const double C21788 = C50060 * C1718;
    const double C49305 = C49291 + C49303;
    const double C49320 = C49308 + C49318;
    const double C49313 = 2 * C49307;
    const double C49311 = be * C49307;
    const double C49816 = C49441 * C49307;
    const double C49831 = C49271 * C49307;
    const double C978 =
        (2 * C49441 * C49293 + C49441 * (C49293 + C49307 * C49459)) / C49147;
    const double C1439 = (C49271 * (C49293 + C49307 * C49459) +
                          (C49655 + C49383 * C49459) * ae) /
                         C49147;
    const double C1723 =
        (2 * (C49271 * C49293 + C49655 * ae) +
         C49271 * (C49293 + C49271 * (C49271 * C49307 + C49383 * ae) +
                   C49271 * C49383 * ae) +
         (C49655 + C49383 * C49514) * ae) /
        C49147;
    const double C2316 =
        (3 * (C49293 + C49307 * C49459) +
         C49441 * (2 * C49441 * C49307 + C49441 * (C49307 + C49329 * C49459))) /
        C49147;
    const double C49787 = C49291 + C49786;
    const double C49856 = C49271 * C49852;
    const double C49901 = 2 * C49852;
    const double C49876 = C49872 + C49873;
    const double C49304 = C49294 + C49302;
    const double C49515 = C49512 + C49513;
    const double C19645 = C50060 * C981;
    const double C20130 = C50060 * C1442;
    const double C21790 = C50060 * C1726;
    const double C19650 = C50060 * C2319;
    const double C49387 = C49386 + C49382;
    const double C49472 = C49372 + C49471;
    const double C49491 = 2 * C49489;
    const double C49537 = ae * C49489;
    const double C49536 = C49271 * C49489;
    const double C4444 =
        (2 * (ae * C49451 + C49271 * C49505) +
         ae * (C49451 + C49489 * std::pow(C49271, 2)) +
         C49271 * (C49505 + ae * C49271 * C49489 +
                   C49271 * (ae * C49489 + C49271 * C49441 * C49316))) /
        C49151;
    const double C4436 =
        (2 * C49271 * C49451 + C49271 * (C49451 + C49489 * C49514)) / C49147;
    const double C49517 = C49372 + C49516;
    const double C49559 = C49555 + C49556;
    const double C49560 = 2 * C49554;
    const double C49558 = ae * C49554;
    const double C49401 = C49371 + C49398;
    const double C49400 = C49397 * be;
    const double C49416 = 2 * C49397;
    const double C49771 = C49397 * C49459;
    const double C49801 = C49441 * C49397;
    const double C49834 = C49397 * C49514;
    const double C49888 = C49271 * C49397;
    const double C49887 = C49397 * ae;
    const double C49402 = C49399 + C49396;
    const double C49797 = C49371 + C49795;
    const double C49857 = C49855 * C49514;
    const double C49909 = 2 * C49855;
    const double C49932 = C49271 * C49855;
    const double C49931 = C49855 * ae;
    const double C49878 = C49371 + C49875;
    const double C49957 = 2 * C49950;
    const double C49955 = C49950 * ae;
    const double C49954 = C49948 + C49949;
    const double C49345 = C49317 + C49343;
    const double C49344 = C49330 + C49342;
    const double C49584 = C49316 + C49583;
    const double C49611 = C49271 * C49608;
    const double C49631 = C49625 + C49626;
    const double C49424 = C49421 + C49418;
    const double C49591 = C49395 + C49590;
    const double C49613 = C49609 * C49514;
    const double C49633 = C49395 + C49628;
    const double C1092 =
        (C49441 * C49293 + C49271 * (C49271 * C49441 * C49307 + C49738 * ae) +
         C49271 * C49738 * ae) /
        C49147;
    const double C1084 = C49441 * C49655 + C49738 * C49514;
    const double C126 = 3 * (C49648 + C49368 * C49297) +
                        C49272 * (2 * C49655 + C49272 * C49657);
    const double C256 = C49441 * (2 * C49655 + C49272 * C49657);
    const double C259 = C49648 + C49368 * C49297 + C49657 * C49459;
    const double C397 = C49271 * (2 * C49655 + C49272 * C49657);
    const double C400 = C49648 + C49368 * C49297 + C49657 * C49514;
    const double C777 = C49271 * C49441 * C49657;
    const double C2539 =
        (C49284 + C49291 * C49459 +
         C49271 * (C49271 * (C49291 + C49301 * C49459) + C49769 * ae) +
         C49271 * C49769 * ae) /
        C49147;
    const double C3053 =
        (C49271 * (2 * C49441 * C49291 + C49441 * (C49291 + C49301 * C49459)) +
         (2 * C49736 + C49441 * C49769) * ae) /
        C49147;
    const double C2310 = 3 * (C49648 + C49368 * C49459) +
                         C49441 * (2 * C49736 + C49441 * C49769);
    const double C2534 = C49648 + C49368 * C49459 + C49769 * C49514;
    const double C3048 = C49271 * (2 * C49736 + C49441 * C49769);
    const double C5330 = 3 * (C49648 + C49368 * C49514) +
                         C49271 * (2 * C49826 + C49271 * C49829);
    const double C20433 = C50060 * C1095;
    const double C20431 = C50060 * C1087;
    const double C49323 = C49272 * C49321;
    const double C49333 = 3 * C49321;
    const double C49328 = be * C49321;
    const double C49839 = C49271 * C49321;
    const double C49847 = C49441 * C49321;
    const double C49339 = C49316 + C49335;
    const double C49790 = C49307 + C49789;
    const double C49865 = C49271 * C49861;
    const double C49904 = C49441 * C49903;
    const double C49922 = C49271 * C49903;
    const double C49493 = C49441 * C49492;
    const double C49588 = 3 * C49492;
    const double C49600 = ae * C49492;
    const double C49599 = C49271 * C49492;
    const double C49543 = C49489 + C49541;
    const double C49612 = 2 * C49606;
    const double C49610 = ae * C49606;
    const double C49564 = C49271 * C49561;
    const double C49627 = 3 * C49561;
    const double C49623 = ae * C49561;
    const double C49634 = C49316 + C49630;
    const double C49426 = C49272 * C49423;
    const double C49425 = C49423 * be;
    const double C49775 = C49423 * C49459;
    const double C49842 = C49423 * C49514;
    const double C49848 = C49441 * C49423;
    const double C49804 = C49397 + C49802;
    const double C49866 = C49864 * C49514;
    const double C49892 = C49397 + C49889;
    const double C49912 = C49441 * C49911;
    const double C49925 = C49911 * C49514;
    const double C49939 = C49855 + C49936;
    const double C49959 = C49271 * C49956;
    const double C50345 = C50091 / C50099;
    const double C50343 = C50091 / C50082;
    const double C50342 = C50091 * C50086;
    const double C896 = (2 * C50095 * C50091) / C50082;
    const double C50346 = C50096 * C50086;
    const double C116 = C50096 / C50347;
    const double C536 = C50096 / C50084;
    const double C50378 = C50344 / C50082;
    const double C895 = (C50090 * std::pow(C50085, 2)) / C50094 + C50341;
    const double C50355 = C50158 / C50099;
    const double C50354 = C50158 * C50157;
    const double C50351 = C50158 / C50082;
    const double C249 = (2 * C50095 * C50158) / C50082;
    const double C50356 = C50161 * C50157;
    const double C967 = C50161 / C50347;
    const double C1199 = C50161 / C50084;
    const double C50380 = C50353 / C50082;
    const double C248 = (C50109 * std::pow(C50156, 2)) / C50094 + C50348;
    const double C50359 = C50186 / C50099;
    const double C50358 = C50186 * C50185;
    const double C50352 = C50186 / C50082;
    const double C392 = (2 * C50095 * C50186) / C50082;
    const double C50360 = C50189 * C50185;
    const double C1713 = C50189 / C50347;
    const double C1960 = C50189 / C50084;
    const double C50383 = C50357 / C50082;
    const double C391 = (C50125 * std::pow(C50184, 2)) / C50094 + C50350;
    const double C50368 = C50257 / C49156;
    const double C50367 = C50257 * C50256;
    const double C50364 = C50257 / C49147;
    const double C2160 = (2 * C50064 * C50257) / C49147;
    const double C50369 = C50260 * C50256;
    const double C19534 = C50260 / C50340;
    const double C24216 = C50260 / C49152;
    const double C50386 = C50366 / C49147;
    const double C2159 = (C50211 * std::pow(C50255, 2)) / C49151 + C50361;
    const double C49166 = C49155 - C49163;
    const double C49165 = C49145 * C49161;
    const double C2163 = (-C49161 / C49147) / C49152 - (0 * be) / C49147;
    const double C19535 = -C49161 / C49147;
    const double C24395 = C50336 * C284;
    const double C24391 = C50336 * C264;
    const double C24387 = C50336 * C981;
    const double C24383 = C50336 * C973;
    const double C24378 = C50336 * C287;
    const double C24374 = C50336 * C271;
    const double C24370 = C50336 * C283;
    const double C24366 = C50336 * C263;
    const double C25093 = C50336 * C1442;
    const double C25089 = C50336 * C1434;
    const double C25085 = C50336 * C790;
    const double C25081 = C50336 * C780;
    const double C25364 = C50336 * C2319;
    const double C25523 = C50336 * C1095;
    const double C25519 = C50336 * C1087;
    const double C27453 = C50336 * C425;
    const double C27449 = C50336 * C405;
    const double C27445 = C50336 * C428;
    const double C27441 = C50336 * C412;
    const double C27436 = C50336 * C424;
    const double C27432 = C50336 * C404;
    const double C29870 = C50336 * C1726;
    const double C29866 = C50336 * C1718;
    const double C50374 = C50335 / C49151;
    const double C16969 = C16807 * C284;
    const double C16963 = C16807 * C264;
    const double C33588 = C16807 * C425;
    const double C33582 = C16807 * C405;
    const double C50376 = C50339 / C49147;
    const double C2157 = -C50375;
    const double C16992 = C16806 * C284;
    const double C16986 = C16806 * C264;
    const double C16980 = C16806 * C287;
    const double C16974 = C16806 * C271;
    const double C16967 = C16806 * C283;
    const double C16961 = C16806 * C263;
    const double C17660 = C16806 * C790;
    const double C17654 = C16806 * C780;
    const double C17927 = C16806 * C981;
    const double C17921 = C16806 * C973;
    const double C18085 = C16806 * C1095;
    const double C18079 = C16806 * C1087;
    const double C18583 = C16806 * C1442;
    const double C18577 = C16806 * C1434;
    const double C33611 = C16806 * C425;
    const double C33605 = C16806 * C405;
    const double C33599 = C16806 * C428;
    const double C33593 = C16806 * C412;
    const double C33586 = C16806 * C424;
    const double C33580 = C16806 * C404;
    const double C35398 = C16806 * C1726;
    const double C35392 = C16806 * C1718;
    const double C49246 = C49243 - C49239;
    const double C49242 = C49194 * C49236;
    const double C50390 = C50371 / C49151;
    const double C5035 =
        (((0 - (C49194 * C49195) / C49147) * ae) / C49147 - (0 * be) / C49156) /
            C49152 +
        ((C49194 * (((C50222 - (C49194 * 2 * C49197) / C49147) * ae) / C49147 -
                    C49195 / C49156) +
          C50365) *
         ae) /
            C49147 +
        (0 * ae) / C49147 - C49197 / C49151;
    const double C50391 = C50373 / C49147;
    const double C33283 = -C50389;
    const double C3342 =
        (4 * (2 * C49441 * C49300 + C49441 * C49484) +
         C49441 *
             (3 * C49484 + C49441 * (2 * C49441 * C49316 +
                                     C49441 * (C49316 + C49340 * C49459)))) /
        C49151;
    const double C132 =
        (2 * (C49272 * C49375 + C49648 * be) +
         C49272 * (C49375 + C49272 * C49379 + C49272 * C49368 * be) +
         (C49648 + C49368 * C49297) * be) /
        C49147;
    const double C265 =
        (C49441 * (C49375 + C49272 * C49379 + C49655 * be)) / C49147;
    const double C272 =
        (C49272 * C49375 + C49648 * be + C49379 * C49459) / C49147;
    const double C406 =
        (C49271 * (C49375 + C49272 * C49379 + C49655 * be)) / C49147;
    const double C413 =
        (C49272 * C49375 + C49648 * be + C49379 * C49514) / C49147;
    const double C781 = (C49271 * C49441 * C49379) / C49147;
    const double C5335 =
        (3 * (C49284 + C49271 * C49828 + C49826 * ae) +
         C49271 * (2 * C49828 +
                   C49271 * (C49291 + C49271 * (C49271 * C49301 + C49371 * ae) +
                             C49271 * C49371 * ae) +
                   C49829 * ae) +
         (2 * C49826 + C49271 * C49829) * ae) /
        C49147;
    const double C138 = (3 * (C49284 + C49291 * C49297) +
                         C49272 * (2 * C49293 + C49272 * C49305)) /
                        C49147;
    const double C270 = (C49441 * (2 * C49293 + C49272 * C49305)) / C49147;
    const double C277 = (C49284 + C49291 * C49297 + C49305 * C49459) / C49147;
    const double C411 = (C49271 * (2 * C49293 + C49272 * C49305) +
                         (2 * C49655 + C49272 * C49657) * ae) /
                        C49147;
    const double C418 =
        (C49284 + C49291 * C49297 + C49271 * (C49271 * C49305 + C49657 * ae) +
         C49271 * C49657 * ae) /
        C49147;
    const double C786 =
        (C49271 * C49441 * C49305 + C49441 * C49657 * ae) / C49147;
    const double C979 =
        (2 * C49441 * C49305 + C49441 * (C49305 + C49321 * C49459)) / C49147;
    const double C49322 = C49272 * C49320;
    const double C49327 = 2 * C49320;
    const double C49507 = C49441 * C49320;
    const double C49521 = C49271 * C49320;
    const double C49315 = C49300 + C49311;
    const double C49835 = C49831 + C49832;
    const double C3340 =
        (4 * (2 * C49441 * C49291 + C49441 * C49787) +
         C49441 *
             (3 * C49787 + C49441 * (2 * C49441 * C49301 +
                                     C49441 * (C49301 + C49317 * C49459)))) /
        C49147;
    const double C49858 = C49856 + C49853;
    const double C49880 = C49271 * C49876;
    const double C49947 = 2 * C49876;
    const double C147 =
        (3 * (C49290 + be * C49293 + C49272 * C49304) +
         be * (2 * C49293 + C49272 * C49305) +
         C49272 *
             (2 * C49304 + be * C49305 +
              C49272 * (C49300 + be * C49272 * C49301 +
                        C49272 * (be * C49301 + C49272 * std::pow(C49274, 6) *
                                                    bs[6] * C49283)))) /
        C49151;
    const double C285 =
        ((yP - yQ) * (C49290 + be * C49293 + C49272 * C49304)) / C49151;
    const double C288 =
        (be * C49284 + C49272 * C49290 + C49304 * std::pow(yP - yQ, 2)) /
        C49151;
    const double C426 =
        (ae * (C49280 * C49277 * C49367 +
               C49272 * (C49272 * C49286 * C49287 * C49367 + C49368 * be) +
               C49272 * C49368 * be) +
         C49271 * (C49290 + be * C49293 + C49272 * C49304)) /
        C49151;
    const double C429 = (be * C49284 + C49272 * C49290 + ae * C49271 * C49379 +
                         C49271 * (ae * C49379 + C49271 * C49304)) /
                        C49151;
    const double C791 =
        (ae * C49441 * C49379 + C49271 * C49441 * C49304) / C49151;
    const double C982 = (2 * C49441 * C49304 +
                         C49441 * (C49304 + C49320 * std::pow(C49441, 2))) /
                        C49151;
    const double C49388 = C49272 * C49387;
    const double C49392 = 2 * C49387;
    const double C49453 = C49441 * C49387;
    const double C49520 = ae * C49387;
    const double C49519 = C49271 * C49387;
    const double C1443 = (ae * (C49379 + C49387 * C49459) +
                          C49271 * (C49304 + C49320 * C49459)) /
                         C49151;
    const double C1727 = (2 * (ae * C49379 + C49271 * C49304) +
                          ae * (C49379 + C49387 * std::pow(C49271, 2)) +
                          C49271 * (C49304 + ae * C49271 * C49387 +
                                    C49271 * (ae * C49387 + C49271 * C49320))) /
                         C49151;
    const double C974 =
        (2 * C49441 * C49379 + C49441 * (C49379 + C49387 * C49459)) / C49147;
    const double C1435 = (C49271 * (C49379 + C49387 * C49459)) / C49147;
    const double C1719 =
        (2 * C49271 * C49379 + C49271 * (C49379 + C49387 * C49514)) / C49147;
    const double C2543 =
        (C49290 + C49300 * C49459 + ae * C49271 * C49472 +
         C49271 * (ae * C49472 + C49271 * (C49300 + C49316 * C49459))) /
        C49151;
    const double C3057 =
        (ae * (2 * C49451 + C49441 * C49472) +
         C49271 * (2 * C49441 * C49300 + C49441 * (C49300 + C49316 * C49459))) /
        C49151;
    const double C4446 =
        (2 * (ae * C49472 + C49271 * C49484) +
         ae * (C49472 + C49492 * std::pow(C49271, 2)) +
         C49271 *
             (C49484 + ae * C49271 * C49492 +
              C49271 * (ae * C49492 + C49271 * (C49316 + C49340 * C49459)))) /
        C49151;
    const double C2313 = (3 * (C49375 + C49372 * C49459) +
                          C49441 * (2 * C49451 + C49441 * C49472)) /
                         C49147;
    const double C2537 = (C49375 + C49372 * C49459 + C49472 * C49514) / C49147;
    const double C3051 = (C49271 * (2 * C49451 + C49441 * C49472)) / C49147;
    const double C4440 =
        (2 * C49271 * C49472 + C49271 * (C49472 + C49492 * C49514)) / C49147;
    const double C49542 = C49537 + C49540;
    const double C21794 = C50060 * C4444;
    const double C28688 = C50336 * C4444;
    const double C21792 = C50060 * C4436;
    const double C28684 = C50336 * C4436;
    const double C5339 =
        (3 * (C49290 + ae * C49511 + C49271 * C49515) +
         ae * (2 * C49511 + C49271 * C49517) +
         C49271 * (2 * C49515 + ae * C49517 +
                   C49271 * (C49300 + ae * C49271 * C49384 +
                             C49271 * (ae * C49384 + C49271 * C49316)))) /
        C49151;
    const double C5333 = (3 * (C49375 + C49372 * C49514) +
                          C49271 * (2 * C49511 + C49271 * C49517)) /
                         C49147;
    const double C49563 = C49271 * C49559;
    const double C49622 = 2 * C49559;
    const double C49562 = C49300 + C49558;
    const double C49403 = C49401 * be;
    const double C49661 = C49272 * C49401;
    const double C49665 = 3 * C49401;
    const double C49740 = C49441 * C49401;
    const double C49841 = C49271 * C49401;
    const double C49840 = C49401 * ae;
    const double C1440 = (C49271 * (C49305 + C49321 * C49459) +
                          (C49657 + C49401 * C49459) * ae) /
                         C49147;
    const double C1724 =
        (2 * (C49271 * C49305 + C49657 * ae) +
         C49271 * (C49305 + C49271 * (C49271 * C49321 + C49401 * ae) +
                   C49271 * C49401 * ae) +
         (C49657 + C49401 * C49514) * ae) /
        C49147;
    const double C971 =
        2 * C49441 * C49657 + C49441 * (C49657 + C49401 * C49459);
    const double C1432 = C49271 * (C49657 + C49401 * C49459);
    const double C1716 =
        2 * C49271 * C49657 + C49271 * (C49657 + C49401 * C49514);
    const double C49772 = C49383 + C49771;
    const double C49803 = 2 * C49801;
    const double C49863 = C49271 * C49801;
    const double C49862 = C49801 * ae;
    const double C4439 =
        (2 * (C49271 * C49816 + C49738 * ae) +
         C49271 * (C49816 + C49271 * (C49271 * C49441 * C49329 + C49801 * ae) +
                   C49271 * C49801 * ae) +
         (C49738 + C49801 * C49514) * ae) /
        C49147;
    const double C4433 =
        2 * C49271 * C49738 + C49271 * (C49738 + C49801 * C49514);
    const double C49836 = C49383 + C49834;
    const double C49893 = 2 * C49888;
    const double C49891 = C49888 * ae;
    const double C49890 = C49886 + C49887;
    const double C49404 = C49272 * C49402;
    const double C49413 = 2 * C49402;
    const double C49474 = C49402 * C49459;
    const double C49496 = C49441 * C49402;
    const double C49522 = C49402 * C49514;
    const double C49569 = ae * C49402;
    const double C49568 = C49271 * C49402;
    const double C49798 = C49441 * C49797;
    const double C49908 = 3 * C49797;
    const double C49924 = C49271 * C49797;
    const double C49923 = C49797 * ae;
    const double C4442 =
        (2 * (C49271 * C49787 + C49769 * ae) +
         C49271 *
             (C49787 +
              C49271 * (C49271 * (C49301 + C49317 * C49459) + C49797 * ae) +
              C49271 * C49797 * ae) +
         (C49769 + C49797 * C49514) * ae) /
        C49147;
    const double C4434 =
        2 * C49271 * C49769 + C49271 * (C49769 + C49797 * C49514);
    const double C49859 = C49794 + C49857;
    const double C49937 = 2 * C49932;
    const double C49935 = C49932 * ae;
    const double C49938 = C49934 + C49931;
    const double C49881 = C49271 * C49878;
    const double C49953 = 3 * C49878;
    const double C49951 = C49878 * ae;
    const double C49958 = C49271 * C49954;
    const double C49347 = C49272 * C49345;
    const double C2318 =
        (3 * (C49305 + C49321 * C49459) +
         C49441 * (2 * C49441 * C49321 + C49441 * (C49321 + C49345 * C49459))) /
        C49147;
    const double C49346 = C49272 * C49344;
    const double C49486 = C49344 * C49459;
    const double C49547 = C49441 * C49344;
    const double C49570 = C49271 * C49344;
    const double C2320 =
        (3 * (C49304 + C49320 * C49459) +
         C49441 * (2 * C49441 * C49320 + C49441 * (C49320 + C49344 * C49459))) /
        C49151;
    const double C49585 = C49441 * C49584;
    const double C49601 = C49271 * C49584;
    const double C49615 = C49607 + C49611;
    const double C49635 = C49271 * C49631;
    const double C49427 = C49272 * C49424;
    const double C49497 = C49424 * C49459;
    const double C49548 = C49441 * C49424;
    const double C49571 = C49424 * C49514;
    const double C49592 = C49441 * C49591;
    const double C49602 = C49591 * C49514;
    const double C49616 = C49539 + C49613;
    const double C49636 = C49271 * C49633;
    const double C49325 = C49313 + C49323;
    const double C3341 =
        (4 * (2 * C49441 * C49307 + C49441 * C49790) +
         C49441 * (3 * C49790 +
                   C49441 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49459)))) /
        C49147;
    const double C49905 = C49901 + C49904;
    const double C49494 = C49491 + C49493;
    const double C6308 = (3 * (C49451 + C49489 * C49514) +
                          C49271 * (2 * C49536 + C49271 * C49543)) /
                         C49147;
    const double C49614 = C49538 + C49610;
    const double C49566 = C49560 + C49564;
    const double C49428 = C49416 + C49426;
    const double C49776 = C49401 + C49775;
    const double C49844 = C49401 + C49842;
    const double C49805 = C49441 * C49804;
    const double C49868 = C49801 + C49866;
    const double C49895 = C49271 * C49892;
    const double C49913 = C49909 + C49912;
    const double C49927 = C49797 + C49925;
    const double C49941 = C49271 * C49939;
    const double C49961 = C49957 + C49959;
    const double C50377 = C50342 / C50094;
    const double C50379 = C50346 / C50082;
    const double C251 = -C50378;
    const double C50381 = C50354 / C50094;
    const double C50382 = C50356 / C50082;
    const double C893 = -C50380;
    const double C50384 = C50358 / C50094;
    const double C50385 = C50360 / C50082;
    const double C1544 = -C50383;
    const double C50387 = C50367 / C49151;
    const double C50388 = C50369 / C49147;
    const double C16809 = -C50386;
    const double C24400 = C49166 * C259;
    const double C24396 = C49166 * C269;
    const double C24392 = C49166 * C255;
    const double C24388 = C49166 * C978;
    const double C24384 = C49166 * C970;
    const double C24381 = C49166 * C276;
    const double C24377 = C49166 * C258;
    const double C24373 = C49166 * C268;
    const double C24369 = C49166 * C254;
    const double C24727 = C49166 * C256;
    const double C25099 = C49166 * C777;
    const double C25094 = C49166 * C1439;
    const double C25090 = C49166 * C1431;
    const double C25086 = C49166 * C785;
    const double C25082 = C49166 * C776;
    const double C25367 = C49166 * C2316;
    const double C25526 = C49166 * C1092;
    const double C25522 = C49166 * C1084;
    const double C27459 = C49166 * C400;
    const double C27454 = C49166 * C410;
    const double C27450 = C49166 * C396;
    const double C27446 = C49166 * C417;
    const double C27442 = C49166 * C399;
    const double C27439 = C49166 * C409;
    const double C27435 = C49166 * C395;
    const double C27871 = C49166 * C397;
    const double C29873 = C49166 * C1723;
    const double C29869 = C49166 * C1715;
    const double C120 =
        (C49166 / C49152 - (0 * be) / C49147) / C49152 + (0 * ae) / C49147;
    const double C7817 = C49166 / C49152 - (0 * be) / C49147;
    const double C16813 = C49166 / C49152 + (0 * ae) / C49147;
    const double C49168 = C49165 / C49147;
    const double C2357 = C2163 * C259;
    const double C2353 = C2163 * C269;
    const double C2349 = C2163 * C255;
    const double C2345 = C2163 * C978;
    const double C2341 = C2163 * C970;
    const double C2338 = C2163 * C276;
    const double C2334 = C2163 * C258;
    const double C2330 = C2163 * C268;
    const double C2326 = C2163 * C254;
    const double C2696 = C2163 * C256;
    const double C3080 = C2163 * C777;
    const double C3075 = C2163 * C1439;
    const double C3071 = C2163 * C1431;
    const double C3067 = C2163 * C785;
    const double C3063 = C2163 * C776;
    const double C3356 = C2163 * C2316;
    const double C3523 = C2163 * C1092;
    const double C3519 = C2163 * C1084;
    const double C5377 = C2163 * C400;
    const double C5373 = C2163 * C410;
    const double C5369 = C2163 * C396;
    const double C5365 = C2163 * C1723;
    const double C5361 = C2163 * C1715;
    const double C5358 = C2163 * C417;
    const double C5354 = C2163 * C399;
    const double C5350 = C2163 * C409;
    const double C5346 = C2163 * C395;
    const double C5698 = C2163 * C397;
    const double C19666 = C19535 * C2316;
    const double C19661 = C19535 * C978;
    const double C19659 = C19535 * C970;
    const double C19657 = C19535 * C276;
    const double C19655 = C19535 * C258;
    const double C19653 = C19535 * C268;
    const double C19651 = C19535 * C254;
    const double C19649 = C19535 * C2315;
    const double C19647 = C19535 * C2310;
    const double C19646 = C19535 * C977;
    const double C19644 = C19535 * C969;
    const double C19642 = C19535 * C275;
    const double C19640 = C19535 * C257;
    const double C19638 = C19535 * C267;
    const double C19636 = C19535 * C253;
    const double C19888 = C19535 * C259;
    const double C19886 = C19535 * C269;
    const double C19884 = C19535 * C255;
    const double C20142 = C19535 * C1439;
    const double C20140 = C19535 * C1431;
    const double C20138 = C19535 * C785;
    const double C20136 = C19535 * C776;
    const double C20133 = C19535 * C3053;
    const double C20131 = C19535 * C3048;
    const double C20129 = C19535 * C1438;
    const double C20127 = C19535 * C1430;
    const double C20125 = C19535 * C784;
    const double C20123 = C19535 * C775;
    const double C20438 = C19535 * C2539;
    const double C20436 = C19535 * C2534;
    const double C20434 = C19535 * C1091;
    const double C20432 = C19535 * C1083;
    const double C21625 = C19535 * C1092;
    const double C21623 = C19535 * C1084;
    const double C21808 = C19535 * C1723;
    const double C21806 = C19535 * C1715;
    const double C21801 = C19535 * C417;
    const double C21799 = C19535 * C399;
    const double C21797 = C19535 * C409;
    const double C21795 = C19535 * C395;
    const double C21793 = C19535 * C4438;
    const double C21791 = C19535 * C4432;
    const double C21789 = C19535 * C1722;
    const double C21787 = C19535 * C1714;
    const double C21784 = C19535 * C416;
    const double C21782 = C19535 * C398;
    const double C21780 = C19535 * C408;
    const double C21778 = C19535 * C394;
    const double C21964 = C19535 * C777;
    const double C22122 = C19535 * C400;
    const double C22120 = C19535 * C410;
    const double C22118 = C19535 * C396;
    const double C23626 = C19535 * C5330;
    const double C50392 = C50334 - C50374;
    const double C50393 = C50338 - C50376;
    const double C2352 = C2157 * C284;
    const double C2348 = C2157 * C264;
    const double C2344 = C2157 * C981;
    const double C2340 = C2157 * C973;
    const double C2335 = C2157 * C287;
    const double C2331 = C2157 * C271;
    const double C2327 = C2157 * C283;
    const double C2323 = C2157 * C263;
    const double C3074 = C2157 * C1442;
    const double C3070 = C2157 * C1434;
    const double C3066 = C2157 * C790;
    const double C3062 = C2157 * C780;
    const double C3353 = C2157 * C2319;
    const double C3520 = C2157 * C1095;
    const double C3516 = C2157 * C1087;
    const double C5372 = C2157 * C425;
    const double C5368 = C2157 * C405;
    const double C5364 = C2157 * C1726;
    const double C5360 = C2157 * C1718;
    const double C5355 = C2157 * C428;
    const double C5351 = C2157 * C412;
    const double C5347 = C2157 * C424;
    const double C5343 = C2157 * C404;
    const double C6323 = C2157 * C4444;
    const double C6319 = C2157 * C4436;
    const double C38618 =
        (C49246 / C49152 - (0 * be) / C49147) / C49152 + (0 * ae) / C49147;
    const double C43934 = C49246 / C49152 - (0 * be) / C49147;
    const double C49245 = C49242 / C49147;
    const double C50402 = C50363 - C50390;
    const double C50403 = C50372 - C50391;
    const double C20321 = C50060 * C3342;
    const double C2350 = C50065 * C265;
    const double C2693 = C2157 * C265;
    const double C7969 = C7812 * C265;
    const double C16988 = C16807 * C265;
    const double C16965 = C16808 * C265;
    const double C17301 = C16806 * C265;
    const double C19883 = C50060 * C265;
    const double C24393 = C50065 * C265;
    const double C24724 = C50336 * C265;
    const double C2356 = C2157 * C272;
    const double C2333 = C50065 * C272;
    const double C16997 = C16806 * C272;
    const double C16976 = C16807 * C272;
    const double C19656 = C50060 * C272;
    const double C24399 = C50336 * C272;
    const double C24376 = C50065 * C272;
    const double C5370 = C50065 * C406;
    const double C5695 = C2157 * C406;
    const double C10867 = C7812 * C406;
    const double C22117 = C50060 * C406;
    const double C27451 = C50065 * C406;
    const double C27868 = C50336 * C406;
    const double C33607 = C16807 * C406;
    const double C33584 = C16808 * C406;
    const double C33920 = C16806 * C406;
    const double C5376 = C2157 * C413;
    const double C5353 = C50065 * C413;
    const double C21800 = C50060 * C413;
    const double C27456 = C50336 * C413;
    const double C27443 = C50065 * C413;
    const double C33616 = C16806 * C413;
    const double C33595 = C16807 * C413;
    const double C3077 = C2157 * C781;
    const double C3064 = C50065 * C781;
    const double C17665 = C16806 * C781;
    const double C17656 = C16807 * C781;
    const double C20135 = C50060 * C781;
    const double C25096 = C50336 * C781;
    const double C25083 = C50065 * C781;
    const double C23628 = C19535 * C5335;
    const double C2700 = C2163 * C270;
    const double C24731 = C49166 * C270;
    const double C2361 = C2163 * C277;
    const double C19890 = C19535 * C277;
    const double C24404 = C49166 * C277;
    const double C5702 = C2163 * C411;
    const double C27875 = C49166 * C411;
    const double C5381 = C2163 * C418;
    const double C22124 = C19535 * C418;
    const double C27463 = C49166 * C418;
    const double C3084 = C2163 * C786;
    const double C21966 = C19535 * C786;
    const double C25103 = C49166 * C786;
    const double C2370 = C2163 * C979;
    const double C19894 = C19535 * C979;
    const double C24413 = C49166 * C979;
    const double C49334 = C49327 + C49328;
    const double C49324 = C49315 + C49322;
    const double C20322 = C19535 * C3340;
    const double C49882 = C49291 + C49880;
    const double C2354 = C50065 * C285;
    const double C2697 = C2157 * C285;
    const double C7975 = C7812 * C285;
    const double C16994 = C16807 * C285;
    const double C16971 = C16808 * C285;
    const double C17307 = C16806 * C285;
    const double C19885 = C50060 * C285;
    const double C24397 = C50065 * C285;
    const double C24728 = C50336 * C285;
    const double C2360 = C2157 * C288;
    const double C2337 = C50065 * C288;
    const double C17003 = C16806 * C288;
    const double C16982 = C16807 * C288;
    const double C19658 = C50060 * C288;
    const double C24403 = C50336 * C288;
    const double C24380 = C50065 * C288;
    const double C5374 = C50065 * C426;
    const double C5699 = C2157 * C426;
    const double C10873 = C7812 * C426;
    const double C22119 = C50060 * C426;
    const double C27455 = C50065 * C426;
    const double C27872 = C50336 * C426;
    const double C33613 = C16807 * C426;
    const double C33590 = C16808 * C426;
    const double C33926 = C16806 * C426;
    const double C5380 = C2157 * C429;
    const double C5357 = C50065 * C429;
    const double C21802 = C50060 * C429;
    const double C27460 = C50336 * C429;
    const double C27447 = C50065 * C429;
    const double C33622 = C16806 * C429;
    const double C33601 = C16807 * C429;
    const double C3081 = C2157 * C791;
    const double C3068 = C50065 * C791;
    const double C17671 = C16806 * C791;
    const double C17662 = C16807 * C791;
    const double C20137 = C50060 * C791;
    const double C25100 = C50336 * C791;
    const double C25087 = C50065 * C791;
    const double C2367 = C2157 * C982;
    const double C2346 = C50065 * C982;
    const double C17929 = C16807 * C982;
    const double C19662 = C50060 * C982;
    const double C24410 = C50336 * C982;
    const double C24389 = C50065 * C982;
    const double C49389 = C49372 + C49388;
    const double C1096 = (C49441 * C49304 + ae * C49271 * C49453 +
                          C49271 * (ae * C49453 + C49271 * C49441 * C49320)) /
                         C49151;
    const double C1088 = (C49441 * C49379 + C49453 * C49514) / C49147;
    const double C49523 = C49520 + C49521;
    const double C3089 = C2157 * C1443;
    const double C3076 = C50065 * C1443;
    const double C18585 = C16807 * C1443;
    const double C20141 = C50060 * C1443;
    const double C25108 = C50336 * C1443;
    const double C25095 = C50065 * C1443;
    const double C5387 = C2157 * C1727;
    const double C5366 = C50065 * C1727;
    const double C21807 = C50060 * C1727;
    const double C29872 = C50065 * C1727;
    const double C35400 = C16807 * C1727;
    const double C44240 = C50336 * C1727;
    const double C2363 = C2157 * C974;
    const double C2342 = C50065 * C974;
    const double C17923 = C16807 * C974;
    const double C19660 = C50060 * C974;
    const double C24406 = C50336 * C974;
    const double C24385 = C50065 * C974;
    const double C3085 = C2157 * C1435;
    const double C3072 = C50065 * C1435;
    const double C18579 = C16807 * C1435;
    const double C20139 = C50060 * C1435;
    const double C25104 = C50336 * C1435;
    const double C25091 = C50065 * C1435;
    const double C5383 = C2157 * C1719;
    const double C5362 = C50065 * C1719;
    const double C21805 = C50060 * C1719;
    const double C29868 = C50065 * C1719;
    const double C35394 = C16807 * C1719;
    const double C44236 = C50336 * C1719;
    const double C3528 = C2157 * C2543;
    const double C20437 = C50060 * C2543;
    const double C25531 = C50336 * C2543;
    const double C4034 = C2157 * C3057;
    const double C20134 = C50060 * C3057;
    const double C26029 = C50336 * C3057;
    const double C22737 = C50060 * C4446;
    const double C3349 = C2157 * C2313;
    const double C19648 = C50060 * C2313;
    const double C25360 = C50336 * C2313;
    const double C3524 = C2157 * C2537;
    const double C20435 = C50060 * C2537;
    const double C25527 = C50336 * C2537;
    const double C4030 = C2157 * C3051;
    const double C20132 = C50060 * C3051;
    const double C26025 = C50336 * C3051;
    const double C22735 = C50060 * C4440;
    const double C6312 =
        (3 * (C49505 + ae * C49536 + C49271 * C49542) +
         ae * (2 * C49536 + C49271 * C49543) +
         C49271 *
             (2 * C49542 + ae * C49543 +
              C49271 * (C49538 + ae * C49271 * C49539 +
                        C49271 * (ae * C49539 + C49271 * C49441 * C49340)))) /
        C49151;
    const double C7221 = C2157 * C5339;
    const double C23627 = C50060 * C5339;
    const double C46016 = C50336 * C5339;
    const double C7217 = C2157 * C5333;
    const double C23625 = C50060 * C5333;
    const double C46012 = C50336 * C5333;
    const double C49629 = C49622 + C49623;
    const double C49565 = C49562 + C49563;
    const double C49662 = C49660 + C49661;
    const double C1093 =
        (C49441 * C49305 + C49271 * (C49271 * C49441 * C49321 + C49740 * ae) +
         C49271 * C49740 * ae) /
        C49147;
    const double C5906 =
        (2 * (C49271 * C49847 + C49740 * ae) +
         C49271 * (C49847 + C49271 * (C49271 * C49441 * C49345 + C49848 * ae) +
                   C49271 * C49848 * ae) +
         (C49740 + C49848 * C49514) * ae) /
        C49147;
    const double C1085 = C49441 * C49657 + C49740 * C49514;
    const double C5904 =
        2 * C49271 * C49740 + C49271 * (C49740 + C49848 * C49514);
    const double C49843 = C49839 + C49840;
    const double C3092 = C2163 * C1440;
    const double C25111 = C49166 * C1440;
    const double C31075 = C19535 * C1440;
    const double C5390 = C2163 * C1724;
    const double C39023 = C19535 * C1724;
    const double C44243 = C49166 * C1724;
    const double C2366 = C2163 * C971;
    const double C19892 = C19535 * C971;
    const double C24409 = C49166 * C971;
    const double C3088 = C2163 * C1432;
    const double C25107 = C49166 * C1432;
    const double C31073 = C19535 * C1432;
    const double C5386 = C2163 * C1716;
    const double C39021 = C19535 * C1716;
    const double C44239 = C49166 * C1716;
    const double C2540 =
        (C49293 + C49307 * C49459 +
         C49271 * (C49271 * (C49307 + C49329 * C49459) + C49772 * ae) +
         C49271 * C49772 * ae) /
        C49147;
    const double C3054 =
        (C49271 * (2 * C49441 * C49307 + C49441 * (C49307 + C49329 * C49459)) +
         (2 * C49738 + C49441 * C49772) * ae) /
        C49147;
    const double C4443 =
        (2 * (C49271 * C49790 + C49772 * ae) +
         C49271 * (C49790 +
                   C49271 * (C49271 * (C49329 + C49272 * C49341 * C49459) +
                             C49804 * ae) +
                   C49271 * C49804 * ae) +
         (C49772 + C49804 * C49514) * ae) /
        C49147;
    const double C2311 = 3 * (C49655 + C49383 * C49459) +
                         C49441 * (2 * C49738 + C49441 * C49772);
    const double C2535 = C49655 + C49383 * C49459 + C49772 * C49514;
    const double C3049 = C49271 * (2 * C49738 + C49441 * C49772);
    const double C4435 =
        2 * C49271 * C49772 + C49271 * (C49772 + C49804 * C49514);
    const double C49867 = C49865 + C49862;
    const double C6326 = C2163 * C4439;
    const double C21812 = C19535 * C4439;
    const double C28691 = C49166 * C4439;
    const double C6322 = C2163 * C4433;
    const double C21810 = C19535 * C4433;
    const double C28687 = C49166 * C4433;
    const double C5336 =
        (3 * (C49293 + C49271 * C49835 + C49833 * ae) +
         C49271 * (2 * C49835 +
                   C49271 * (C49307 + C49271 * (C49271 * C49329 + C49397 * ae) +
                             C49271 * C49397 * ae) +
                   C49836 * ae) +
         (2 * C49833 + C49271 * C49836) * ae) /
        C49147;
    const double C5331 = 3 * (C49655 + C49383 * C49514) +
                         C49271 * (2 * C49833 + C49271 * C49836);
    const double C49894 = C49271 * C49890;
    const double C49405 = C49384 + C49404;
    const double C49475 = C49387 + C49474;
    const double C49498 = 2 * C49496;
    const double C49546 = ae * C49496;
    const double C49545 = C49271 * C49496;
    const double C4445 =
        (2 * (ae * C49453 + C49271 * C49507) +
         ae * (C49453 + C49496 * std::pow(C49271, 2)) +
         C49271 * (C49507 + ae * C49271 * C49496 +
                   C49271 * (ae * C49496 + C49271 * C49441 * C49344))) /
        C49151;
    const double C4437 =
        (2 * C49271 * C49453 + C49271 * (C49453 + C49496 * C49514)) / C49147;
    const double C49524 = C49387 + C49522;
    const double C49574 = 2 * C49568;
    const double C49572 = ae * C49568;
    const double C49799 = C49796 + C49798;
    const double C49926 = C49922 + C49923;
    const double C22738 = C19535 * C4442;
    const double C22736 = C19535 * C4434;
    const double C6310 =
        (3 * (C49814 + C49271 * C49858 + C49854 * ae) +
         C49271 * (2 * C49858 +
                   C49271 * (C49852 +
                             C49271 * (C49271 * C49441 * C49317 + C49855 * ae) +
                             C49271 * C49855 * ae) +
                   C49859 * ae) +
         (2 * C49854 + C49271 * C49859) * ae) /
        C49147;
    const double C6306 = 3 * (C49736 + C49794 * C49514) +
                         C49271 * (2 * C49854 + C49271 * C49859);
    const double C49940 = C49271 * C49938;
    const double C49883 = C49879 + C49881;
    const double C49960 = C49301 + C49958;
    const double C49349 = C49337 + C49347;
    const double C49348 = C49339 + C49346;
    const double C49487 = C49320 + C49486;
    const double C49549 = C49271 * C49547;
    const double C49573 = C49569 + C49570;
    const double C3355 = C50065 * C2320;
    const double C19665 = C50060 * C2320;
    const double C25366 = C50065 * C2320;
    const double C49586 = C49582 + C49585;
    const double C49603 = C49600 + C49601;
    const double C49617 = C49271 * C49615;
    const double C49637 = C49634 + C49635;
    const double C49429 = C49395 + C49427;
    const double C49499 = C49402 + C49497;
    const double C49550 = C49548 * C49514;
    const double C49575 = C49402 + C49571;
    const double C49593 = C49589 + C49592;
    const double C49604 = C49492 + C49602;
    const double C49618 = C49271 * C49616;
    const double C49638 = C49632 + C49636;
    const double C140 = (4 * (2 * C49293 + C49272 * C49305) +
                         C49272 * (3 * C49305 + C49272 * C49325)) /
                        C49147;
    const double C278 =
        (2 * C49293 + C49272 * C49305 + C49325 * C49459) / C49147;
    const double C280 = (C49441 * (3 * C49305 + C49272 * C49325)) / C49147;
    const double C20312 =
        (5 * (3 * C49787 + C49441 * C49905) +
         C49441 * (4 * C49905 +
                   C49441 * (3 * C49903 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459))))) /
        C49147;
    const double C3513 =
        (2 * C49441 * C49300 + C49441 * C49484 + ae * C49271 * C49494 +
         C49271 *
             (ae * C49494 + C49271 * (2 * C49441 * C49316 +
                                      C49441 * (C49316 + C49340 * C49459)))) /
        C49151;
    const double C4023 =
        (ae * (3 * C49472 + C49441 * C49494) +
         C49271 *
             (3 * C49484 + C49441 * (2 * C49441 * C49316 +
                                     C49441 * (C49316 + C49340 * C49459)))) /
        C49151;
    const double C3338 = (4 * (2 * C49451 + C49441 * C49472) +
                          C49441 * (3 * C49472 + C49441 * C49494)) /
                         C49147;
    const double C3509 =
        (2 * C49451 + C49441 * C49472 + C49494 * C49514) / C49147;
    const double C4019 = (C49271 * (3 * C49472 + C49441 * C49494)) / C49147;
    const double C22729 = C50060 * C6308;
    const double C7206 = (4 * (2 * C49511 + C49271 * C49517) +
                          C49271 * (3 * C49517 + C49271 * C49566)) /
                         C49147;
    const double C49430 = C49428 * be;
    const double C49666 = C49272 * C49428;
    const double C49742 = C49441 * C49428;
    const double C2542 =
        (C49305 + C49321 * C49459 +
         C49271 * (C49271 * (C49321 + C49345 * C49459) + C49776 * ae) +
         C49271 * C49776 * ae) /
        C49147;
    const double C3056 =
        (C49271 * (2 * C49441 * C49321 + C49441 * (C49321 + C49345 * C49459)) +
         (2 * C49740 + C49441 * C49776) * ae) /
        C49147;
    const double C2312 = 3 * (C49657 + C49401 * C49459) +
                         C49441 * (2 * C49740 + C49441 * C49776);
    const double C2536 = C49657 + C49401 * C49459 + C49776 * C49514;
    const double C3050 = C49271 * (2 * C49740 + C49441 * C49776);
    const double C5332 = 3 * (C49657 + C49401 * C49514) +
                         C49271 * (2 * C49841 + C49271 * C49844);
    const double C49806 = C49803 + C49805;
    const double C6307 = 3 * (C49738 + C49801 * C49514) +
                         C49271 * (2 * C49863 + C49271 * C49868);
    const double C49897 = C49893 + C49895;
    const double C49914 = C49441 * C49913;
    const double C22720 = 3 * (C49769 + C49797 * C49514) +
                          C49271 * (2 * C49924 + C49271 * C49927);
    const double C49943 = C49937 + C49941;
    const double C49963 = C49271 * C49961;
    const double C50394 = C50341 - C50377;
    const double C50395 = C50345 - C50379;
    const double C50396 = C50348 - C50381;
    const double C50397 = C50355 - C50382;
    const double C50398 = C50350 - C50384;
    const double C50399 = C50359 - C50385;
    const double C50400 = C50361 - C50387;
    const double C50401 = C50368 - C50388;
    const double C7999 = C7817 * C270;
    const double C7993 = C7817 * C256;
    const double C7987 = C7817 * C277;
    const double C7981 = C7817 * C259;
    const double C7976 = C7817 * C269;
    const double C7970 = C7817 * C255;
    const double C8667 = C7817 * C786;
    const double C8661 = C7817 * C777;
    const double C8936 = C7817 * C979;
    const double C8930 = C7817 * C971;
    const double C9592 = C7817 * C1440;
    const double C9586 = C7817 * C1432;
    const double C10897 = C7817 * C411;
    const double C10891 = C7817 * C397;
    const double C10885 = C7817 * C418;
    const double C10879 = C7817 * C400;
    const double C10874 = C7817 * C410;
    const double C10868 = C7817 * C396;
    const double C12686 = C7817 * C1724;
    const double C12680 = C7817 * C1716;
    const double C16995 = C16813 * C270;
    const double C16989 = C16813 * C256;
    const double C16983 = C16813 * C277;
    const double C16977 = C16813 * C259;
    const double C16972 = C16813 * C269;
    const double C16966 = C16813 * C255;
    const double C17663 = C16813 * C786;
    const double C17657 = C16813 * C777;
    const double C17932 = C16813 * C979;
    const double C17926 = C16813 * C971;
    const double C18588 = C16813 * C1440;
    const double C18582 = C16813 * C1432;
    const double C33614 = C16813 * C411;
    const double C33608 = C16813 * C397;
    const double C33602 = C16813 * C418;
    const double C33596 = C16813 * C400;
    const double C33591 = C16813 * C410;
    const double C33585 = C16813 * C396;
    const double C35403 = C16813 * C1724;
    const double C35397 = C16813 * C1716;
    const double C49170 = C50060 - C49168;
    const double C20318 = C19649 - C19650;
    const double C19670 = C19645 - C19646;
    const double C20316 = C19646 - C19645;
    const double C19669 = C19643 - C19644;
    const double C20315 = C19644 - C19643;
    const double C19668 = C19641 - C19642;
    const double C19667 = C19639 - C19640;
    const double C20774 = C20129 - C20130;
    const double C23226 = C20130 - C20129;
    const double C20773 = C20127 - C20128;
    const double C23225 = C20128 - C20127;
    const double C22322 = C20125 - C20126;
    const double C22320 = C20126 - C20125;
    const double C22321 = C20123 - C20124;
    const double C22319 = C20124 - C20123;
    const double C21786 = C20433 - C20434;
    const double C22324 = C20434 - C20433;
    const double C21785 = C20431 - C20432;
    const double C22323 = C20432 - C20431;
    const double C22728 = C21794 - C21793;
    const double C22726 = C21793 - C21794;
    const double C22727 = C21792 - C21791;
    const double C22725 = C21791 - C21792;
    const double C23624 = C21789 - C21790;
    const double C38817 = C21790 - C21789;
    const double C23623 = C21787 - C21788;
    const double C38816 = C21788 - C21787;
    const double C21814 = C21783 - C21784;
    const double C21813 = C21781 - C21782;
    const double C8007 = C50392 * C288;
    const double C8001 = C50392 * C272;
    const double C7996 = C50392 * C284;
    const double C7990 = C50392 * C264;
    const double C7984 = C50392 * C287;
    const double C7978 = C50392 * C271;
    const double C7971 = C50392 * C283;
    const double C7965 = C50392 * C263;
    const double C8311 = C50392 * C285;
    const double C8305 = C50392 * C265;
    const double C8675 = C50392 * C791;
    const double C8669 = C50392 * C781;
    const double C8664 = C50392 * C790;
    const double C8658 = C50392 * C780;
    const double C8931 = C50392 * C981;
    const double C8925 = C50392 * C973;
    const double C9089 = C50392 * C1095;
    const double C9083 = C50392 * C1087;
    const double C9587 = C50392 * C1442;
    const double C9581 = C50392 * C1434;
    const double C10905 = C50392 * C429;
    const double C10899 = C50392 * C413;
    const double C10894 = C50392 * C425;
    const double C10888 = C50392 * C405;
    const double C10882 = C50392 * C428;
    const double C10876 = C50392 * C412;
    const double C10869 = C50392 * C424;
    const double C10863 = C50392 * C404;
    const double C11209 = C50392 * C426;
    const double C11203 = C50392 * C406;
    const double C12681 = C50392 * C1726;
    const double C12675 = C50392 * C1718;
    const double C105 = (C50392 * C50055) / C49147 + (C50336 - C50375) / C49152;
    const double C7998 = C50393 * C285;
    const double C7992 = C50393 * C265;
    const double C7986 = C50393 * C288;
    const double C7980 = C50393 * C272;
    const double C7973 = C50393 * C284;
    const double C7967 = C50393 * C264;
    const double C8666 = C50393 * C791;
    const double C8660 = C50393 * C781;
    const double C8933 = C50393 * C982;
    const double C8927 = C50393 * C974;
    const double C9589 = C50393 * C1443;
    const double C9583 = C50393 * C1435;
    const double C10896 = C50393 * C426;
    const double C10890 = C50393 * C406;
    const double C10884 = C50393 * C429;
    const double C10878 = C50393 * C413;
    const double C10871 = C50393 * C425;
    const double C10865 = C50393 * C405;
    const double C12683 = C50393 * C1727;
    const double C12677 = C50393 * C1719;
    const double C106 =
        (C50393 * C50055) / C49147 + (2 * C50065 + C50392) / C49152;
    const double C107 = (C50055 * C50065) / C49156 + C50393 / C49152;
    const double C49248 = C50222 - C49245;
    const double C38611 =
        (C50402 * C50281) / C49147 + (C50365 - C50389) / C49152;
    const double C38612 =
        (C50403 * C50281) / C49147 + (2 * C50286 + C50402) / C49152;
    const double C38613 = (C50281 * C50286) / C49156 + C50403 / C49152;
    const double C2372 = C2333 - C2334;
    const double C19671 = C19655 - C19656;
    const double C24415 = C24376 - C24377;
    const double C5392 = C5353 - C5354;
    const double C21815 = C21799 - C21800;
    const double C44229 = C27443 - C27442;
    const double C14350 = C3063 - C3064;
    const double C14346 = C3064 - C3063;
    const double C22327 = C20135 - C20136;
    const double C22325 = C20136 - C20135;
    const double C28139 = C25082 - C25083;
    const double C28135 = C25083 - C25082;
    const double C148 =
        (4 * (2 * C49304 + be * C49305 + C49272 * C49324) +
         be * (3 * C49305 + C49272 * C49325) +
         C49272 * (3 * C49324 + be * C49325 +
                   C49272 * (2 * C49320 + be * C49321 +
                             C49272 * (C49316 + be * C49272 * C49317 +
                                       C49272 * (be * C49317 +
                                                 C49272 * std::pow(C49276, 7) *
                                                     bs[7] * C49283))))) /
        C49151;
    const double C286 =
        ((yP - yQ) * (2 * C49304 + be * C49305 + C49272 * C49324)) / C49151;
    const double C289 = (C49290 + be * C49293 + C49272 * C49304 +
                         C49324 * std::pow(yP - yQ, 2)) /
                        C49151;
    const double C427 =
        (ae * (2 * (C49272 * C49372 + C49368 * be) +
               C49272 *
                   (C49372 +
                    C49272 * (C49272 * C49295 * C49296 * C49367 + C49371 * be) +
                    C49272 * C49371 * be) +
               (C49368 + C49371 * C49297) * be) +
         C49271 * (2 * C49304 + be * C49305 + C49272 * C49324)) /
        C49151;
    const double C49884 = C49882 + C49877;
    const double C2374 = C2337 - C2338;
    const double C19672 = C19657 - C19658;
    const double C24417 = C24380 - C24381;
    const double C5394 = C5357 - C5358;
    const double C21816 = C21801 - C21802;
    const double C44231 = C27447 - C27446;
    const double C14352 = C3067 - C3068;
    const double C14348 = C3068 - C3067;
    const double C22328 = C20137 - C20138;
    const double C22326 = C20138 - C20137;
    const double C28141 = C25086 - C25087;
    const double C28137 = C25087 - C25086;
    const double C3348 = C2345 - C2346;
    const double C19674 = C19661 - C19662;
    const double C25359 = C24388 - C24389;
    const double C49390 = C49389 + C49385;
    const double C3522 = C50065 * C1096;
    const double C5913 = C2157 * C1096;
    const double C9091 = C50393 * C1096;
    const double C18087 = C16807 * C1096;
    const double C21626 = C50060 * C1096;
    const double C25525 = C50065 * C1096;
    const double C27468 = C50336 * C1096;
    const double C3518 = C50065 * C1088;
    const double C5909 = C2157 * C1088;
    const double C9085 = C50393 * C1088;
    const double C18081 = C16807 * C1088;
    const double C21624 = C50060 * C1088;
    const double C25521 = C50065 * C1088;
    const double C27464 = C50336 * C1088;
    const double C4029 = C3075 - C3076;
    const double C15542 = C3076 - C3075;
    const double C30771 = C20142 - C20141;
    const double C31417 = C20141 - C20142;
    const double C26024 = C25094 - C25095;
    const double C29345 = C25095 - C25094;
    const double C7216 = C5365 - C5366;
    const double C38819 = C21808 - C21807;
    const double C46011 = C29873 - C29872;
    const double C3346 = C2341 - C2342;
    const double C19673 = C19659 - C19660;
    const double C25357 = C24384 - C24385;
    const double C4027 = C3071 - C3072;
    const double C15540 = C3072 - C3071;
    const double C30770 = C20140 - C20139;
    const double C31416 = C20139 - C20140;
    const double C26022 = C25090 - C25091;
    const double C29343 = C25091 - C25090;
    const double C7214 = C5361 - C5362;
    const double C38818 = C21806 - C21805;
    const double C46009 = C29869 - C29868;
    const double C22734 = C20438 - C20437;
    const double C23228 = C20437 - C20438;
    const double C20776 = C20133 - C20134;
    const double C32306 = C20134 - C20133;
    const double C20317 = C19647 - C19648;
    const double C22733 = C20436 - C20435;
    const double C23227 = C20435 - C20436;
    const double C20775 = C20131 - C20132;
    const double C32305 = C20132 - C20131;
    const double C22731 = C50060 * C6312;
    const double C40009 = C23628 - C23627;
    const double C40008 = C23626 - C23625;
    const double C7210 =
        (4 * (2 * C49515 + ae * C49517 + C49271 * C49565) +
         ae * (3 * C49517 + C49271 * C49566) +
         C49271 *
             (3 * C49565 + ae * C49566 +
              C49271 * (2 * C49559 + ae * C49561 +
                        C49271 * (C49316 + ae * C49271 * C49395 +
                                  C49271 * (ae * C49395 + C49271 * C49340))))) /
        C49151;
    const double C419 =
        (2 * C49293 + C49272 * C49305 +
         C49271 * (C49271 * C49325 + C49662 * ae) + C49271 * C49662 * ae) /
        C49147;
    const double C421 = (C49271 * (3 * C49305 + C49272 * C49325) +
                         (3 * C49657 + C49272 * C49662) * ae) /
                        C49147;
    const double C787 =
        (C49271 * C49441 * C49325 + C49441 * C49662 * ae) / C49147;
    const double C127 = 4 * (2 * C49655 + C49272 * C49657) +
                        C49272 * (3 * C49657 + C49272 * C49662);
    const double C260 = 2 * C49655 + C49272 * C49657 + C49662 * C49459;
    const double C261 = C49441 * (3 * C49657 + C49272 * C49662);
    const double C401 = 2 * C49655 + C49272 * C49657 + C49662 * C49514;
    const double C402 = C49271 * (3 * C49657 + C49272 * C49662);
    const double C778 = C49271 * C49441 * C49662;
    const double C972 =
        2 * C49441 * C49662 + C49441 * (C49662 + C49428 * C49459);
    const double C1433 = C49271 * (C49662 + C49428 * C49459);
    const double C1717 =
        2 * C49271 * C49662 + C49271 * (C49662 + C49428 * C49514);
    const double C5916 = C2163 * C1093;
    const double C9094 = C7817 * C1093;
    const double C18090 = C16813 * C1093;
    const double C21970 = C19535 * C1093;
    const double C27471 = C49166 * C1093;
    const double C5912 = C2163 * C1085;
    const double C9088 = C7817 * C1085;
    const double C18084 = C16813 * C1085;
    const double C21968 = C19535 * C1085;
    const double C27467 = C49166 * C1085;
    const double C5338 =
        (3 * (C49305 + C49271 * C49843 + C49841 * ae) +
         C49271 * (2 * C49843 +
                   C49271 * (C49321 + C49271 * (C49271 * C49345 + C49423 * ae) +
                             C49271 * C49423 * ae) +
                   C49844 * ae) +
         (2 * C49841 + C49271 * C49844) * ae) /
        C49147;
    const double C3531 = C2163 * C2540;
    const double C21630 = C19535 * C2540;
    const double C25534 = C49166 * C2540;
    const double C4037 = C2163 * C3054;
    const double C20146 = C19535 * C3054;
    const double C26032 = C49166 * C3054;
    const double C3352 = C2163 * C2311;
    const double C19664 = C19535 * C2311;
    const double C25363 = C49166 * C2311;
    const double C3527 = C2163 * C2535;
    const double C21628 = C19535 * C2535;
    const double C25530 = C49166 * C2535;
    const double C4033 = C2163 * C3049;
    const double C20144 = C19535 * C3049;
    const double C26028 = C49166 * C3049;
    const double C6311 =
        (3 * (C49816 + C49271 * C49867 + C49863 * ae) +
         C49271 * (2 * C49867 +
                   C49271 * (C49861 +
                             C49271 * (C49271 * C49441 * C49272 * C49341 +
                                       C49864 * ae) +
                             C49271 * C49864 * ae) +
                   C49868 * ae) +
         (2 * C49863 + C49271 * C49868) * ae) /
        C49147;
    const double C7224 = C2163 * C5336;
    const double C38823 = C19535 * C5336;
    const double C46019 = C49166 * C5336;
    const double C7220 = C2163 * C5331;
    const double C38821 = C19535 * C5331;
    const double C46015 = C49166 * C5331;
    const double C49896 = C49307 + C49894;
    const double C49406 = C49405 + C49400;
    const double C2544 =
        (C49304 + C49320 * C49459 + ae * C49271 * C49475 +
         C49271 * (ae * C49475 + C49271 * (C49320 + C49344 * C49459))) /
        C49151;
    const double C3058 =
        (ae * (2 * C49453 + C49441 * C49475) +
         C49271 * (2 * C49441 * C49320 + C49441 * (C49320 + C49344 * C49459))) /
        C49151;
    const double C2314 = (3 * (C49379 + C49387 * C49459) +
                          C49441 * (2 * C49453 + C49441 * C49475)) /
                         C49147;
    const double C2538 = (C49379 + C49387 * C49459 + C49475 * C49514) / C49147;
    const double C3052 = (C49271 * (2 * C49453 + C49441 * C49475)) / C49147;
    const double C6325 = C50065 * C4445;
    const double C21811 = C50060 * C4445;
    const double C28690 = C50065 * C4445;
    const double C6321 = C50065 * C4437;
    const double C21809 = C50060 * C4437;
    const double C28686 = C50065 * C4437;
    const double C5340 =
        (3 * (C49304 + ae * C49519 + C49271 * C49523) +
         ae * (2 * C49519 + C49271 * C49524) +
         C49271 * (2 * C49523 + ae * C49524 +
                   C49271 * (C49320 + ae * C49271 * C49402 +
                             C49271 * (ae * C49402 + C49271 * C49344)))) /
        C49151;
    const double C5334 = (3 * (C49379 + C49387 * C49514) +
                          C49271 * (2 * C49519 + C49271 * C49524)) /
                         C49147;
    const double C49576 = C49320 + C49572;
    const double C3511 =
        (2 * C49441 * C49291 + C49441 * C49787 +
         C49271 * (C49271 * (2 * C49441 * C49301 +
                             C49441 * (C49301 + C49317 * C49459)) +
                   C49799 * ae) +
         C49271 * C49799 * ae) /
        C49147;
    const double C4021 =
        (C49271 *
             (3 * C49787 + C49441 * (2 * C49441 * C49301 +
                                     C49441 * (C49301 + C49317 * C49459))) +
         (3 * C49769 + C49441 * C49799) * ae) /
        C49147;
    const double C21050 =
        (2 * (C49271 * C49905 + C49799 * ae) +
         C49271 * (C49905 +
                   C49271 * (C49271 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459)) +
                             C49913 * ae) +
                   C49271 * C49913 * ae) +
         (C49799 + C49913 * C49514) * ae) /
        C49147;
    const double C3336 = 4 * (2 * C49736 + C49441 * C49769) +
                         C49441 * (3 * C49769 + C49441 * C49799);
    const double C3507 = 2 * C49736 + C49441 * C49769 + C49799 * C49514;
    const double C4017 = C49271 * (3 * C49769 + C49441 * C49799);
    const double C21048 =
        2 * C49271 * C49799 + C49271 * (C49799 + C49913 * C49514);
    const double C22722 =
        (3 * (C49787 + C49271 * C49926 + C49924 * ae) +
         C49271 * (2 * C49926 +
                   C49271 * (C49903 +
                             C49271 * (C49271 * (C49317 + C49341 * C49459) +
                                       C49911 * ae) +
                             C49271 * C49911 * ae) +
                   C49927 * ae) +
         (2 * C49924 + C49271 * C49927) * ae) /
        C49147;
    const double C22732 = C19535 * C6310;
    const double C22730 = C19535 * C6306;
    const double C49942 = C49852 + C49940;
    const double C7204 = 4 * (2 * C49826 + C49271 * C49829) +
                         C49271 * (3 * C49829 + C49271 * C49883);
    const double C49962 = C49960 + C49955;
    const double C49351 = C49272 * C49349;
    const double C980 =
        (2 * C49441 * C49325 + C49441 * (C49325 + C49349 * C49459)) / C49147;
    const double C1441 = (C49271 * (C49325 + C49349 * C49459) +
                          (C49662 + C49428 * C49459) * ae) /
                         C49147;
    const double C1725 =
        (2 * (C49271 * C49325 + C49662 * ae) +
         C49271 * (C49325 + C49271 * (C49271 * C49349 + C49428 * ae) +
                   C49271 * C49428 * ae) +
         (C49662 + C49428 * C49514) * ae) /
        C49147;
    const double C49350 = C49272 * C49348;
    const double C49528 = C49271 * C49348;
    const double C49533 = C49441 * C49348;
    const double C983 = (2 * C49441 * C49324 +
                         C49441 * (C49324 + C49348 * std::pow(C49441, 2))) /
                        C49151;
    const double C2321 =
        (3 * (C49324 + C49348 * C49459) +
         C49441 * (2 * C49441 * C49348 +
                   C49441 * (C49348 + (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49459))) /
        C49151;
    const double C3343 =
        (4 * (2 * C49441 * C49320 + C49441 * C49487) +
         C49441 * (3 * C49487 +
                   C49441 * (2 * C49441 * C49344 +
                             C49441 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49151;
    const double C49551 = C49546 + C49549;
    const double C49577 = C49271 * C49573;
    const double C20313 =
        (5 * (3 * C49484 + C49441 * C49586) +
         C49441 * (4 * C49586 +
                   C49441 * (3 * C49584 +
                             C49441 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49151;
    const double C49619 = C49614 + C49617;
    const double C49639 = C49271 * C49637;
    const double C49431 = C49429 + C49422;
    const double C49500 = C49441 * C49499;
    const double C4447 =
        (2 * (ae * C49475 + C49271 * C49487) +
         ae * (C49475 + C49499 * std::pow(C49271, 2)) +
         C49271 * (C49487 + ae * C49271 * C49499 +
                   C49271 * (ae * C49499 +
                             C49271 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49151;
    const double C4441 =
        (2 * C49271 * C49475 + C49271 * (C49475 + C49499 * C49514)) / C49147;
    const double C49552 = C49496 + C49550;
    const double C49578 = C49271 * C49575;
    const double C49594 = C49441 * C49593;
    const double C21051 =
        (2 * (ae * C49494 + C49271 * C49586) + ae * (C49494 + C49593 * C49514) +
         C49271 * (C49586 + ae * C49271 * C49593 +
                   C49271 * (ae * C49593 +
                             C49271 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49151;
    const double C21049 =
        (2 * C49271 * C49494 + C49271 * (C49494 + C49593 * C49514)) / C49147;
    const double C22723 =
        (3 * (C49484 + ae * C49599 + C49271 * C49603) +
         ae * (2 * C49599 + C49271 * C49604) +
         C49271 * (2 * C49603 + ae * C49604 +
                   C49271 * (C49584 + ae * C49271 * C49591 +
                             C49271 * (ae * C49591 +
                                       C49271 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49151;
    const double C22721 = (3 * (C49472 + C49492 * C49514) +
                           C49271 * (2 * C49599 + C49271 * C49604)) /
                          C49147;
    const double C49620 = C49612 + C49618;
    const double C49640 = C49271 * C49638;
    const double C2708 = C2163 * C278;
    const double C8012 = C7817 * C278;
    const double C17008 = C16813 * C278;
    const double C24739 = C49166 * C278;
    const double C8316 = C7817 * C280;
    const double C17312 = C16813 * C280;
    const double C20441 = C50060 * C3513;
    const double C20779 = C50060 * C4023;
    const double C20319 = C50060 * C3338;
    const double C20439 = C50060 * C3509;
    const double C20777 = C50060 * C4019;
    const double C40010 = C50060 * C7206;
    const double C49667 = C49665 + C49666;
    const double C1094 =
        (C49441 * C49325 + C49271 * (C49271 * C49441 * C49349 + C49742 * ae) +
         C49271 * C49742 * ae) /
        C49147;
    const double C1086 = C49441 * C49662 + C49742 * C49514;
    const double C3512 =
        (2 * C49441 * C49307 + C49441 * C49790 +
         C49271 * (C49271 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49459)) +
                   C49806 * ae) +
         C49271 * C49806 * ae) /
        C49147;
    const double C4022 =
        (C49271 * (3 * C49790 +
                   C49441 * (2 * C49441 * C49329 +
                             C49441 * (C49329 + C49272 * C49341 * C49459))) +
         (3 * C49772 + C49441 * C49806) * ae) /
        C49147;
    const double C3337 = 4 * (2 * C49738 + C49441 * C49772) +
                         C49441 * (3 * C49772 + C49441 * C49806);
    const double C3508 = 2 * C49738 + C49441 * C49772 + C49806 * C49514;
    const double C4018 = C49271 * (3 * C49772 + C49441 * C49806);
    const double C7205 = 4 * (2 * C49833 + C49271 * C49836) +
                         C49271 * (3 * C49836 + C49271 * C49897);
    const double C49915 = C49908 + C49914;
    const double C23618 = 4 * (2 * C49854 + C49271 * C49859) +
                          C49271 * (3 * C49859 + C49271 * C49943);
    const double C49965 = C49953 + C49963;
    const double C113 = (C50394 * C50085) / C50082 + (C50343 - C50378) / C50084;
    const double C114 =
        (C50395 * C50085) / C50082 + (2 * C50096 + C50394) / C50084;
    const double C115 = (C50085 * C50096) / C50099 + C50395 / C50084;
    const double C964 = (C50396 * C50156) / C50082 + (C50351 - C50380) / C50084;
    const double C965 =
        (C50397 * C50156) / C50082 + (2 * C50161 + C50396) / C50084;
    const double C966 = (C50156 * C50161) / C50099 + C50397 / C50084;
    const double C1710 =
        (C50398 * C50184) / C50082 + (C50352 - C50383) / C50084;
    const double C1711 =
        (C50399 * C50184) / C50082 + (2 * C50189 + C50398) / C50084;
    const double C1712 = (C50184 * C50189) / C50099 + C50399 / C50084;
    const double C19531 =
        (C50400 * C50255) / C49147 + (C50364 - C50386) / C49152;
    const double C19532 =
        (C50401 * C50255) / C49147 + (2 * C50260 + C50400) / C49152;
    const double C19533 = (C50255 * C50260) / C49156 + C50401 / C49152;
    const double C49171 = C49170 * ae;
    const double C2162 = (-C49148 / C49147) / C49152 - (C49170 * be) / C49147;
    const double C20326 = C20318 * C50222;
    const double C19678 = C19670 * C50222;
    const double C20324 = C20316 * C50222;
    const double C31663 = C20316 * C50365;
    const double C37025 = C20316 * C33283;
    const double C19677 = C19669 * C121;
    const double C20323 = C20315 * C121;
    const double C31662 = C20315 * C10568;
    const double C37024 = C20315 * C33285;
    const double C19676 = C19668 * C50222;
    const double C30765 = C19668 * C50365;
    const double C36135 = C19668 * C33283;
    const double C19675 = C19667 * C121;
    const double C30764 = C19667 * C10568;
    const double C36134 = C19667 * C33285;
    const double C20782 = C20774 * C50222;
    const double C32302 = C20774 * C50365;
    const double C37664 = C20774 * C33283;
    const double C30767 = C23226 * C50286;
    const double C36137 = C23226 * C50286;
    const double C20781 = C20773 * C121;
    const double C32301 = C20773 * C10568;
    const double C37663 = C20773 * C33285;
    const double C30766 = C23225 * C10569;
    const double C36136 = C23225 * C33286;
    const double C49250 = C49248 * ae;
    const double C19679 = C19671 * C121;
    const double C30768 = C19671 * C10568;
    const double C36138 = C19671 * C33285;
    const double C2699 = C50065 * C286;
    const double C8000 = C7812 * C286;
    const double C8313 = C50393 * C286;
    const double C16996 = C16808 * C286;
    const double C17309 = C16807 * C286;
    const double C24730 = C50065 * C286;
    const double C2362 = C50065 * C289;
    const double C2705 = C2157 * C289;
    const double C8009 = C50393 * C289;
    const double C7988 = C7812 * C289;
    const double C17005 = C16807 * C289;
    const double C16984 = C16808 * C289;
    const double C19889 = C50060 * C289;
    const double C24405 = C50065 * C289;
    const double C24736 = C50336 * C289;
    const double C5701 = C50065 * C427;
    const double C10898 = C7812 * C427;
    const double C11211 = C50393 * C427;
    const double C27874 = C50065 * C427;
    const double C33615 = C16808 * C427;
    const double C33928 = C16807 * C427;
    const double C7208 =
        (4 * (2 * C49828 + C49271 * C49884 + C49829 * ae) +
         C49271 *
             (3 * C49884 +
              C49271 *
                  (2 * C49876 +
                   C49271 * (C49301 + C49271 * (C49271 * C49317 + C49394 * ae) +
                             C49271 * C49394 * ae) +
                   C49878 * ae) +
              C49883 * ae) +
         (3 * C49829 + C49271 * C49883) * ae) /
        C49147;
    const double C19680 = C19672 * C50222;
    const double C30769 = C19672 * C50365;
    const double C36139 = C19672 * C33283;
    const double C19682 = C19674 * C50222;
    const double C430 =
        (C49290 + be * C49293 + C49272 * C49304 + ae * C49271 * C49390 +
         C49271 * (ae * C49390 + C49271 * C49324)) /
        C49151;
    const double C792 =
        (ae * C49441 * C49390 + C49271 * C49441 * C49324) / C49151;
    const double C137 = (3 * (C49375 + C49272 * C49379 + C49655 * be) +
                         C49272 * (2 * C49379 + C49272 * C49390 + C49657 * be) +
                         (2 * C49655 + C49272 * C49657) * be) /
                        C49147;
    const double C266 =
        (C49441 * (2 * C49379 + C49272 * C49390 + C49657 * be)) / C49147;
    const double C273 =
        (C49375 + C49272 * C49379 + C49655 * be + C49390 * C49459) / C49147;
    const double C407 =
        (C49271 * (2 * C49379 + C49272 * C49390 + C49657 * be)) / C49147;
    const double C414 =
        (C49375 + C49272 * C49379 + C49655 * be + C49390 * C49514) / C49147;
    const double C782 = (C49271 * C49441 * C49390) / C49147;
    const double C6318 = C3523 - C3522;
    const double C14890 = C3522 - C3523;
    const double C21804 = C21625 - C21626;
    const double C22330 = C21626 - C21625;
    const double C28683 = C25525 - C25526;
    const double C28679 = C25526 - C25525;
    const double C6316 = C3519 - C3518;
    const double C14888 = C3518 - C3519;
    const double C21803 = C21623 - C21624;
    const double C22329 = C21624 - C21623;
    const double C28681 = C25521 - C25522;
    const double C28677 = C25522 - C25521;
    const double C30775 = C30771 * C50286;
    const double C36141 = C30771 * C50286;
    const double C19681 = C19673 * C121;
    const double C30774 = C30770 * C10569;
    const double C36140 = C30770 * C33286;
    const double C32304 = C22734 * C50286;
    const double C37666 = C22734 * C50286;
    const double C20784 = C20776 * C50222;
    const double C31665 = C20776 * C50286;
    const double C37027 = C20776 * C50286;
    const double C20325 = C20317 * C121;
    const double C32303 = C22733 * C10569;
    const double C37665 = C22733 * C33286;
    const double C20783 = C20775 * C121;
    const double C31664 = C20775 * C10569;
    const double C37026 = C20775 * C33286;
    const double C40012 = C50060 * C7210;
    const double C5710 = C2163 * C419;
    const double C10910 = C7817 * C419;
    const double C33627 = C16813 * C419;
    const double C44547 = C49166 * C419;
    const double C11214 = C7817 * C421;
    const double C33931 = C16813 * C421;
    const double C8680 = C7817 * C787;
    const double C13892 = C2163 * C787;
    const double C17676 = C16813 * C787;
    const double C27673 = C49166 * C787;
    const double C2704 = C2163 * C260;
    const double C8006 = C7817 * C260;
    const double C17002 = C16813 * C260;
    const double C24735 = C49166 * C260;
    const double C8310 = C7817 * C261;
    const double C17306 = C16813 * C261;
    const double C5706 = C2163 * C401;
    const double C10904 = C7817 * C401;
    const double C33621 = C16813 * C401;
    const double C44543 = C49166 * C401;
    const double C11208 = C7817 * C402;
    const double C33925 = C16813 * C402;
    const double C8674 = C7817 * C778;
    const double C13888 = C2163 * C778;
    const double C17670 = C16813 * C778;
    const double C27669 = C49166 * C778;
    const double C49898 = C49896 + C49891;
    const double C49407 = C49272 * C49406;
    const double C49412 = 3 * C49406;
    const double C49455 = C49441 * C49406;
    const double C49527 = ae * C49406;
    const double C49526 = C49271 * C49406;
    const double C1444 = (ae * (C49390 + C49406 * C49459) +
                          C49271 * (C49324 + C49348 * C49459)) /
                         C49151;
    const double C1728 = (2 * (ae * C49390 + C49271 * C49324) +
                          ae * (C49390 + C49406 * std::pow(C49271, 2)) +
                          C49271 * (C49324 + ae * C49271 * C49406 +
                                    C49271 * (ae * C49406 + C49271 * C49348))) /
                         C49151;
    const double C975 =
        (2 * C49441 * C49390 + C49441 * (C49390 + C49406 * C49459)) / C49147;
    const double C1436 = (C49271 * (C49390 + C49406 * C49459)) / C49147;
    const double C1720 =
        (2 * C49271 * C49390 + C49271 * (C49390 + C49406 * C49514)) / C49147;
    const double C3530 = C50065 * C2544;
    const double C21629 = C50060 * C2544;
    const double C25533 = C50065 * C2544;
    const double C4036 = C50065 * C3058;
    const double C20145 = C50060 * C3058;
    const double C26031 = C50065 * C3058;
    const double C3351 = C50065 * C2314;
    const double C19663 = C50060 * C2314;
    const double C25362 = C50065 * C2314;
    const double C3526 = C50065 * C2538;
    const double C21627 = C50060 * C2538;
    const double C25529 = C50065 * C2538;
    const double C4032 = C50065 * C3052;
    const double C20143 = C50060 * C3052;
    const double C26027 = C50065 * C3052;
    const double C7223 = C50065 * C5340;
    const double C38822 = C50060 * C5340;
    const double C46018 = C50065 * C5340;
    const double C7219 = C50065 * C5334;
    const double C38820 = C50060 * C5334;
    const double C46014 = C50065 * C5334;
    const double C20442 = C19535 * C3511;
    const double C20780 = C19535 * C4021;
    const double C20320 = C19535 * C3336;
    const double C20440 = C19535 * C3507;
    const double C20778 = C19535 * C4017;
    const double C49944 = C49942 + C49935;
    const double C40011 = C19535 * C7204;
    const double C49964 = C49271 * C49962;
    const double C49353 = C49333 + C49351;
    const double C49352 = C49334 + C49350;
    const double C2369 = C50065 * C983;
    const double C8935 = C7812 * C983;
    const double C17931 = C16808 * C983;
    const double C19893 = C50060 * C983;
    const double C24412 = C50065 * C983;
    const double C49579 = C49576 + C49577;
    const double C49641 = C49629 + C49639;
    const double C49432 = C49272 * C49431;
    const double C49477 = C49431 * C49459;
    const double C49529 = C49431 * C49514;
    const double C49534 = C49441 * C49431;
    const double C49501 = C49498 + C49500;
    const double C6313 =
        (3 * (C49507 + ae * C49545 + C49271 * C49551) +
         ae * (2 * C49545 + C49271 * C49552) +
         C49271 * (2 * C49551 + ae * C49552 +
                   C49271 * (C49547 + ae * C49271 * C49548 +
                             C49271 * (ae * C49548 +
                                       C49271 * C49441 *
                                           (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C6309 = (3 * (C49453 + C49496 * C49514) +
                          C49271 * (2 * C49545 + C49271 * C49552)) /
                         C49147;
    const double C49580 = C49574 + C49578;
    const double C49595 = C49588 + C49594;
    const double C23621 =
        (4 * (2 * C49542 + ae * C49543 + C49271 * C49619) +
         ae * (3 * C49543 + C49271 * C49620) +
         C49271 * (3 * C49619 + ae * C49620 +
                   C49271 * (2 * C49615 + ae * C49616 +
                             C49271 * (C49608 + ae * C49271 * C49609 +
                                       C49271 * (ae * C49609 +
                                                 C49271 * C49441 *
                                                     std::pow(C49274, 8) *
                                                     bs[8] * C49283))))) /
        C49151;
    const double C23619 = (4 * (2 * C49536 + C49271 * C49543) +
                           C49271 * (3 * C49543 + C49271 * C49620)) /
                          C49147;
    const double C49642 = C49627 + C49640;
    const double C128 = 5 * (3 * C49657 + C49272 * C49662) +
                        C49272 * (4 * C49662 + C49272 * C49667);
    const double C262 = 3 * C49657 + C49272 * C49662 + C49667 * C49459;
    const double C403 = 3 * C49657 + C49272 * C49662 + C49667 * C49514;
    const double C537 = C49441 * (4 * C49662 + C49272 * C49667);
    const double C641 = C49271 * (4 * C49662 + C49272 * C49667);
    const double C779 = C49271 * C49441 * C49667;
    const double C20428 =
        (3 * C49787 + C49441 * C49905 +
         C49271 * (C49271 * (3 * C49903 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459))) +
                   C49915 * ae) +
         C49271 * C49915 * ae) /
        C49147;
    const double C20770 =
        (C49271 * (4 * C49905 +
                   C49441 * (3 * C49903 +
                             C49441 * (2 * C49441 * C49317 +
                                       C49441 * (C49317 + C49341 * C49459)))) +
         (4 * C49799 + C49441 * C49915) * ae) /
        C49147;
    const double C20310 = 5 * (3 * C49769 + C49441 * C49799) +
                          C49441 * (4 * C49799 + C49441 * C49915);
    const double C20426 = 3 * C49769 + C49441 * C49799 + C49915 * C49514;
    const double C20768 = C49271 * (4 * C49799 + C49441 * C49915);
    const double C40003 = 5 * (3 * C49829 + C49271 * C49883) +
                          C49271 * (4 * C49883 + C49271 * C49965);
    const double C49172 = C49171 / C49147;
    const double C2368 = C2162 * C978;
    const double C2364 = C2162 * C970;
    const double C2359 = C2162 * C276;
    const double C2355 = C2162 * C258;
    const double C2351 = C2162 * C268;
    const double C2347 = C2162 * C254;
    const double C2343 = C2162 * C977;
    const double C2339 = C2162 * C969;
    const double C2336 = C2162 * C275;
    const double C2332 = C2162 * C257;
    const double C2328 = C2162 * C267;
    const double C2324 = C2162 * C253;
    const double C2706 = C2162 * C277;
    const double C2702 = C2162 * C259;
    const double C2698 = C2162 * C269;
    const double C2694 = C2162 * C255;
    const double C3090 = C2162 * C1439;
    const double C3086 = C2162 * C1431;
    const double C3082 = C2162 * C785;
    const double C3078 = C2162 * C776;
    const double C3073 = C2162 * C1438;
    const double C3069 = C2162 * C1430;
    const double C3065 = C2162 * C784;
    const double C3061 = C2162 * C775;
    const double C3354 = C2162 * C2315;
    const double C3350 = C2162 * C2310;
    const double C3529 = C2162 * C2539;
    const double C3525 = C2162 * C2534;
    const double C3521 = C2162 * C1091;
    const double C3517 = C2162 * C1083;
    const double C4035 = C2162 * C3053;
    const double C4031 = C2162 * C3048;
    const double C5388 = C2162 * C1723;
    const double C5384 = C2162 * C1715;
    const double C5379 = C2162 * C417;
    const double C5375 = C2162 * C399;
    const double C5371 = C2162 * C409;
    const double C5367 = C2162 * C395;
    const double C5363 = C2162 * C1722;
    const double C5359 = C2162 * C1714;
    const double C5356 = C2162 * C416;
    const double C5352 = C2162 * C398;
    const double C5348 = C2162 * C408;
    const double C5344 = C2162 * C394;
    const double C5708 = C2162 * C418;
    const double C5704 = C2162 * C400;
    const double C5700 = C2162 * C410;
    const double C5696 = C2162 * C396;
    const double C5914 = C2162 * C1092;
    const double C5910 = C2162 * C1084;
    const double C6324 = C2162 * C4438;
    const double C6320 = C2162 * C4432;
    const double C7222 = C2162 * C5335;
    const double C7218 = C2162 * C5330;
    const double C13890 = C2162 * C786;
    const double C13886 = C2162 * C777;
    const double C19684 = C19677 + C19678;
    const double C20327 = C20323 + C20324;
    const double C31666 = C31662 + C31663;
    const double C37028 = C37024 + C37025;
    const double C19683 = C19675 + C19676;
    const double C30772 = C30764 + C30765;
    const double C36142 = C36134 + C36135;
    const double C20785 = C20781 + C20782;
    const double C32307 = C32301 + C32302;
    const double C37667 = C37663 + C37664;
    const double C49252 = C49250 / C49147;
    const double C2378 = C2361 - C2362;
    const double C24421 = C24404 - C24405;
    const double C40013 = C19535 * C7208;
    const double C19685 = C19679 + C19680;
    const double C30773 = C30768 + C30769;
    const double C36143 = C36138 + C36139;
    const double C5382 = C50065 * C430;
    const double C5707 = C2157 * C430;
    const double C10907 = C50393 * C430;
    const double C10886 = C7812 * C430;
    const double C22123 = C50060 * C430;
    const double C27462 = C50065 * C430;
    const double C33624 = C16807 * C430;
    const double C33603 = C16808 * C430;
    const double C44544 = C50336 * C430;
    const double C3083 = C50065 * C792;
    const double C8677 = C50393 * C792;
    const double C8668 = C7812 * C792;
    const double C13889 = C2157 * C792;
    const double C17673 = C16807 * C792;
    const double C17664 = C16808 * C792;
    const double C21965 = C50060 * C792;
    const double C25102 = C50065 * C792;
    const double C27670 = C50336 * C792;
    const double C2695 = C50065 * C266;
    const double C7994 = C7812 * C266;
    const double C8307 = C50393 * C266;
    const double C16990 = C16808 * C266;
    const double C17303 = C16807 * C266;
    const double C24726 = C50065 * C266;
    const double C2358 = C50065 * C273;
    const double C2701 = C2157 * C273;
    const double C8003 = C50393 * C273;
    const double C7982 = C7812 * C273;
    const double C16999 = C16807 * C273;
    const double C16978 = C16808 * C273;
    const double C19887 = C50060 * C273;
    const double C24401 = C50065 * C273;
    const double C24732 = C50336 * C273;
    const double C5697 = C50065 * C407;
    const double C10892 = C7812 * C407;
    const double C11205 = C50393 * C407;
    const double C27870 = C50065 * C407;
    const double C33609 = C16808 * C407;
    const double C33922 = C16807 * C407;
    const double C5378 = C50065 * C414;
    const double C5703 = C2157 * C414;
    const double C10901 = C50393 * C414;
    const double C10880 = C7812 * C414;
    const double C22121 = C50060 * C414;
    const double C27458 = C50065 * C414;
    const double C33618 = C16807 * C414;
    const double C33597 = C16808 * C414;
    const double C44540 = C50336 * C414;
    const double C3079 = C50065 * C782;
    const double C8671 = C50393 * C782;
    const double C8662 = C7812 * C782;
    const double C13885 = C2157 * C782;
    const double C17667 = C16807 * C782;
    const double C17658 = C16808 * C782;
    const double C21963 = C50060 * C782;
    const double C25098 = C50065 * C782;
    const double C27666 = C50336 * C782;
    const double C19686 = C19681 + C19682;
    const double C20328 = C20325 + C20326;
    const double C20786 = C20783 + C20784;
    const double C7209 =
        (4 * (2 * C49835 + C49271 * C49898 + C49836 * ae) +
         C49271 * (3 * C49898 +
                   C49271 * (2 * C49890 +
                             C49271 * (C49329 +
                                       C49271 * (C49271 * C49272 * C49341 +
                                                 C49419 * ae) +
                                       C49271 * C49419 * ae) +
                             C49892 * ae) +
                   C49897 * ae) +
         (3 * C49836 + C49271 * C49897) * ae) /
        C49147;
    const double C49408 = C49392 + C49407;
    const double C1097 = (C49441 * C49324 + ae * C49271 * C49455 +
                          C49271 * (ae * C49455 + C49271 * C49441 * C49348)) /
                         C49151;
    const double C1089 = (C49441 * C49390 + C49455 * C49514) / C49147;
    const double C49530 = C49527 + C49528;
    const double C3091 = C50065 * C1444;
    const double C9591 = C7812 * C1444;
    const double C18587 = C16808 * C1444;
    const double C25110 = C50065 * C1444;
    const double C31074 = C50060 * C1444;
    const double C5389 = C50065 * C1728;
    const double C12685 = C7812 * C1728;
    const double C35402 = C16808 * C1728;
    const double C39022 = C50060 * C1728;
    const double C44242 = C50065 * C1728;
    const double C2365 = C50065 * C975;
    const double C8929 = C7812 * C975;
    const double C17925 = C16808 * C975;
    const double C19891 = C50060 * C975;
    const double C24408 = C50065 * C975;
    const double C3087 = C50065 * C1436;
    const double C9585 = C7812 * C1436;
    const double C18581 = C16808 * C1436;
    const double C25106 = C50065 * C1436;
    const double C31072 = C50060 * C1436;
    const double C5385 = C50065 * C1720;
    const double C12679 = C7812 * C1720;
    const double C35396 = C16808 * C1720;
    const double C39020 = C50060 * C1720;
    const double C44238 = C50065 * C1720;
    const double C23620 =
        (4 * (2 * C49858 + C49271 * C49944 + C49859 * ae) +
         C49271 * (3 * C49944 +
                   C49271 * (2 * C49938 +
                             C49271 * (C49930 +
                                       C49271 * (C49271 * C49441 * C49341 +
                                                 C49933 * ae) +
                                       C49271 * C49933 * ae) +
                             C49939 * ae) +
                   C49943 * ae) +
         (3 * C49859 + C49271 * C49943) * ae) /
        C49147;
    const double C49966 = C49947 + C49964;
    const double C142 = (5 * (3 * C49305 + C49272 * C49325) +
                         C49272 * (4 * C49325 + C49272 * C49353)) /
                        C49147;
    const double C282 =
        (3 * C49305 + C49272 * C49325 + C49353 * C49459) / C49147;
    const double C423 =
        (3 * C49305 + C49272 * C49325 +
         C49271 * (C49271 * C49353 + C49667 * ae) + C49271 * C49667 * ae) /
        C49147;
    const double C539 = (C49441 * (4 * C49325 + C49272 * C49353)) / C49147;
    const double C643 = (C49271 * (4 * C49325 + C49272 * C49353) +
                         (4 * C49662 + C49272 * C49667) * ae) /
                        C49147;
    const double C789 =
        (C49271 * C49441 * C49353 + C49441 * C49667 * ae) / C49147;
    const double C149 =
        (5 * (3 * C49324 + be * C49325 + C49272 * C49352) +
         be * (4 * C49325 + C49272 * C49353) +
         C49272 *
             (4 * C49352 + be * C49353 +
              C49272 *
                  (3 * C49348 + be * C49349 +
                   C49272 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C290 = (2 * C49304 + be * C49305 + C49272 * C49324 +
                         C49352 * std::pow(yP - yQ, 2)) /
                        C49151;
    const double C291 =
        ((yP - yQ) * (3 * C49324 + be * C49325 + C49272 * C49352)) / C49151;
    const double C292 =
        (3 * C49324 + be * C49325 + C49272 * C49352 +
         (3 * C49348 + be * C49349 +
          C49272 *
              (2 * C49344 + be * C49345 +
               C49272 * (C49340 + be * C49272 * C49341 +
                         C49272 * (be * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(yP - yQ, 2)) /
        C49151;
    const double C540 =
        ((yP - yQ) *
         (4 * C49352 + be * C49353 +
          C49272 * (3 * C49348 + be * C49349 +
                    C49272 * (2 * C49344 + be * C49345 +
                              C49272 * (C49340 + be * C49272 * C49341 +
                                        C49272 * (be * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49151;
    const double C984 =
        (2 * C49441 * C49352 +
         C49441 * (C49352 + (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                std::pow(C49441, 2))) /
        C49151;
    const double C49433 = C49413 + C49432;
    const double C49478 = C49406 + C49477;
    const double C49531 = C49406 + C49529;
    const double C5907 =
        (2 * (ae * C49455 + C49271 * C49533) + ae * (C49455 + C49534 * C49514) +
         C49271 * (C49533 + ae * C49271 * C49534 +
                   C49271 * (ae * C49534 +
                             C49271 * C49441 *
                                 (C49340 + be * C49272 * C49341 +
                                  C49272 * (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C5905 =
        (2 * C49271 * C49455 + C49271 * (C49455 + C49534 * C49514)) / C49147;
    const double C3514 =
        (2 * C49441 * C49320 + C49441 * C49487 + ae * C49271 * C49501 +
         C49271 * (ae * C49501 +
                   C49271 * (2 * C49441 * C49344 +
                             C49441 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49151;
    const double C4024 =
        (ae * (3 * C49475 + C49441 * C49501) +
         C49271 * (3 * C49487 +
                   C49441 * (2 * C49441 * C49344 +
                             C49441 * (C49344 + (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49459)))) /
        C49151;
    const double C3339 = (4 * (2 * C49453 + C49441 * C49475) +
                          C49441 * (3 * C49475 + C49441 * C49501)) /
                         C49147;
    const double C3510 =
        (2 * C49453 + C49441 * C49475 + C49501 * C49514) / C49147;
    const double C4020 = (C49271 * (3 * C49475 + C49441 * C49501)) / C49147;
    const double C7211 =
        (4 * (2 * C49523 + ae * C49524 + C49271 * C49579) +
         ae * (3 * C49524 + C49271 * C49580) +
         C49271 *
             (3 * C49579 + ae * C49580 +
              C49271 *
                  (2 * C49573 + ae * C49575 +
                   C49271 * (C49344 + ae * C49271 * C49424 +
                             C49271 * (ae * C49424 +
                                       C49271 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C7207 = (4 * (2 * C49519 + C49271 * C49524) +
                          C49271 * (3 * C49524 + C49271 * C49580)) /
                         C49147;
    const double C20429 =
        (3 * C49484 + C49441 * C49586 + ae * C49271 * C49595 +
         C49271 * (ae * C49595 +
                   C49271 * (3 * C49584 +
                             C49441 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49151;
    const double C20771 =
        (ae * (4 * C49494 + C49441 * C49595) +
         C49271 * (4 * C49586 +
                   C49441 * (3 * C49584 +
                             C49441 * (2 * C49441 * C49340 +
                                       C49441 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49459))))) /
        C49151;
    const double C20311 = (5 * (3 * C49472 + C49441 * C49494) +
                           C49441 * (4 * C49494 + C49441 * C49595)) /
                          C49147;
    const double C20427 =
        (3 * C49472 + C49441 * C49494 + C49595 * C49514) / C49147;
    const double C20769 = (C49271 * (4 * C49494 + C49441 * C49595)) / C49147;
    const double C40006 =
        (5 * (3 * C49565 + ae * C49566 + C49271 * C49641) +
         ae * (4 * C49566 + C49271 * C49642) +
         C49271 *
             (4 * C49641 + ae * C49642 +
              C49271 *
                  (3 * C49637 + ae * C49638 +
                   C49271 * (2 * C49631 + ae * C49633 +
                             C49271 * (C49340 + ae * C49271 * C49417 +
                                       C49271 * (ae * C49417 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C40004 = (5 * (3 * C49517 + C49271 * C49566) +
                           C49271 * (4 * C49566 + C49271 * C49642)) /
                          C49147;
    const double C49173 = C49172 - C49162;
    const double C2377 = C2359 - C2360;
    const double C2375 = C2355 - C2356;
    const double C3347 = C2343 - C2344;
    const double C3345 = C2339 - C2340;
    const double C2373 = C2335 - C2336;
    const double C2371 = C2331 - C2332;
    const double C14359 = C3081 - C3082;
    const double C14355 = C3082 - C3081;
    const double C14357 = C3077 - C3078;
    const double C14353 = C3078 - C3077;
    const double C4028 = C3073 - C3074;
    const double C15541 = C3074 - C3073;
    const double C4026 = C3069 - C3070;
    const double C15539 = C3070 - C3069;
    const double C14351 = C3065 - C3066;
    const double C14347 = C3066 - C3065;
    const double C14349 = C3061 - C3062;
    const double C14345 = C3062 - C3061;
    const double C6317 = C3521 - C3520;
    const double C14889 = C3520 - C3521;
    const double C6315 = C3517 - C3516;
    const double C14887 = C3516 - C3517;
    const double C5397 = C5379 - C5380;
    const double C5395 = C5375 - C5376;
    const double C7215 = C5363 - C5364;
    const double C7213 = C5359 - C5360;
    const double C5393 = C5355 - C5356;
    const double C5391 = C5351 - C5352;
    const double C31667 = C31666 + C31664;
    const double C37029 = C37028 + C37026;
    const double C30776 = C30772 + C30766;
    const double C36144 = C36142 + C36136;
    const double C32308 = C32307 + C32303;
    const double C37668 = C37667 + C37665;
    const double C49253 = C49252 - C49237;
    const double C30777 = C30773 + C30774;
    const double C36145 = C36143 + C36140;
    const double C5398 = C5381 - C5382;
    const double C44235 = C27463 - C27462;
    const double C14360 = C3083 - C3084;
    const double C14356 = C3084 - C3083;
    const double C28149 = C25102 - C25103;
    const double C28145 = C25103 - C25102;
    const double C2376 = C2357 - C2358;
    const double C24419 = C24400 - C24401;
    const double C5396 = C5377 - C5378;
    const double C44233 = C27459 - C27458;
    const double C14358 = C3079 - C3080;
    const double C14354 = C3080 - C3079;
    const double C28147 = C25098 - C25099;
    const double C28143 = C25099 - C25098;
    const double C49409 = C49408 + C49403;
    const double C5915 = C50065 * C1097;
    const double C9093 = C7812 * C1097;
    const double C18089 = C16808 * C1097;
    const double C21969 = C50060 * C1097;
    const double C27470 = C50065 * C1097;
    const double C5911 = C50065 * C1089;
    const double C9087 = C7812 * C1089;
    const double C18083 = C16808 * C1089;
    const double C21967 = C50060 * C1089;
    const double C27466 = C50065 * C1089;
    const double C49967 = C49966 + C49951;
    const double C2707 = C50065 * C290;
    const double C8011 = C7812 * C290;
    const double C17007 = C16808 * C290;
    const double C24738 = C50065 * C290;
    const double C8315 = C7812 * C291;
    const double C17311 = C16808 * C291;
    const double C49434 = C49433 + C49425;
    const double C2545 =
        (C49324 + C49348 * C49459 + ae * C49271 * C49478 +
         C49271 * (ae * C49478 +
                   C49271 * (C49348 + (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49459))) /
        C49151;
    const double C3059 =
        (ae * (2 * C49455 + C49441 * C49478) +
         C49271 * (2 * C49441 * C49348 +
                   C49441 * (C49348 + (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49459))) /
        C49151;
    const double C2317 = (3 * (C49390 + C49406 * C49459) +
                          C49441 * (2 * C49455 + C49441 * C49478)) /
                         C49147;
    const double C2541 = (C49390 + C49406 * C49459 + C49478 * C49514) / C49147;
    const double C3055 = (C49271 * (2 * C49455 + C49441 * C49478)) / C49147;
    const double C5341 =
        (3 * (C49324 + ae * C49526 + C49271 * C49530) +
         ae * (2 * C49526 + C49271 * C49531) +
         C49271 *
             (2 * C49530 + ae * C49531 +
              C49271 *
                  (C49348 + ae * C49271 * C49431 +
                   C49271 * (ae * C49431 +
                             C49271 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C5337 = (3 * (C49390 + C49406 * C49514) +
                          C49271 * (2 * C49526 + C49271 * C49531)) /
                         C49147;
    const double C24411 = C49173 * C978;
    const double C24407 = C49173 * C970;
    const double C24402 = C49173 * C276;
    const double C24398 = C49173 * C258;
    const double C24394 = C49173 * C268;
    const double C24390 = C49173 * C254;
    const double C24386 = C49173 * C977;
    const double C24382 = C49173 * C969;
    const double C24379 = C49173 * C275;
    const double C24375 = C49173 * C257;
    const double C24371 = C49173 * C267;
    const double C24367 = C49173 * C253;
    const double C24737 = C49173 * C277;
    const double C24733 = C49173 * C259;
    const double C24729 = C49173 * C269;
    const double C24725 = C49173 * C255;
    const double C25109 = C49173 * C1439;
    const double C25105 = C49173 * C1431;
    const double C25101 = C49173 * C785;
    const double C25097 = C49173 * C776;
    const double C25092 = C49173 * C1438;
    const double C25088 = C49173 * C1430;
    const double C25084 = C49173 * C784;
    const double C25080 = C49173 * C775;
    const double C25365 = C49173 * C2315;
    const double C25361 = C49173 * C2310;
    const double C25532 = C49173 * C2539;
    const double C25528 = C49173 * C2534;
    const double C25524 = C49173 * C1091;
    const double C25520 = C49173 * C1083;
    const double C26030 = C49173 * C3053;
    const double C26026 = C49173 * C3048;
    const double C27469 = C49173 * C1092;
    const double C27465 = C49173 * C1084;
    const double C27461 = C49173 * C417;
    const double C27457 = C49173 * C399;
    const double C27452 = C49173 * C409;
    const double C27448 = C49173 * C395;
    const double C27444 = C49173 * C416;
    const double C27440 = C49173 * C398;
    const double C27437 = C49173 * C408;
    const double C27433 = C49173 * C394;
    const double C27671 = C49173 * C786;
    const double C27667 = C49173 * C777;
    const double C27873 = C49173 * C410;
    const double C27869 = C49173 * C396;
    const double C28689 = C49173 * C4438;
    const double C28685 = C49173 * C4432;
    const double C29871 = C49173 * C1722;
    const double C29867 = C49173 * C1714;
    const double C44241 = C49173 * C1723;
    const double C44237 = C49173 * C1715;
    const double C44545 = C49173 * C418;
    const double C44541 = C49173 * C400;
    const double C46017 = C49173 * C5335;
    const double C46013 = C49173 * C5330;
    const double C117 =
        ((((0 - (C49145 * C49146) / C49147) * ae) / C49147 - (0 * be) / C49156 +
          C49148 / C49147) /
             C49152 -
         ((C49145 * C49169 + 0) * be) / C49147) /
            C49152 +
        ((C49145 * (C49169 / C49152 -
                    ((C49145 * C49173 + C50336) * be) / C49147 + C49166) +
          C50392) *
         ae) /
            C49147 +
        C49173 / C49152 - ((C49145 * C49166 + C50065) * be) / C49147;
    const double C118 =
        (C49169 / C49152 - ((C49145 * C49173 + C50336) * be) / C49147 +
         C49166) /
            C49152 +
        ((C49145 *
              (C49173 / C49152 - ((C49145 * C49166 + C50065) * be) / C49147) +
          C50393) *
         ae) /
            C49147 +
        2 * (C49166 / C49152 - (0 * be) / C49147);
    const double C119 =
        (C49173 / C49152 - ((C49145 * C49166 + C50065) * be) / C49147) /
            C49152 +
        ((C49145 * (C49166 / C49152 - (0 * be) / C49147) + C7812) * ae) /
            C49147;
    const double C7815 =
        C49169 / C49152 - ((C49145 * C49173 + C50336) * be) / C49147 + C49166;
    const double C7816 =
        C49173 / C49152 - ((C49145 * C49166 + C50065) * be) / C49147;
    const double C16811 =
        C49169 / C49152 + ((C49145 * C49173 + C50336) * ae) / C49147 + C49166;
    const double C16812 =
        C49173 / C49152 + ((C49145 * C49166 + C50065) * ae) / C49147;
    const double C2382 = C2377 + C2378;
    const double C3358 = C3347 + C3348;
    const double C3357 = C3345 + C3346;
    const double C2380 = C2373 + C2374;
    const double C2379 = C2371 + C2372;
    const double C4039 = C4028 + C4029;
    const double C15544 = C15541 + C15542;
    const double C4038 = C4026 + C4027;
    const double C15543 = C15539 + C15540;
    const double C14364 = C14351 + C14352;
    const double C14362 = C14347 + C14348;
    const double C14363 = C14349 + C14350;
    const double C14361 = C14345 + C14346;
    const double C6328 = C6317 + C6318;
    const double C14892 = C14889 + C14890;
    const double C6327 = C6315 + C6316;
    const double C14891 = C14887 + C14888;
    const double C7226 = C7215 + C7216;
    const double C7225 = C7213 + C7214;
    const double C5400 = C5393 + C5394;
    const double C5399 = C5391 + C5392;
    const double C31668 = C31667 + C31665;
    const double C37030 = C37029 + C37027;
    const double C30778 = C30776 + C30767;
    const double C36146 = C36144 + C36137;
    const double C32309 = C32308 + C32304;
    const double C37669 = C37668 + C37666;
    const double C38615 =
        ((((0 - (C49194 * C49234) / C49147) * ae) / C49147 - (0 * be) / C49156 +
          C49195 / C49147) /
             C49152 -
         ((C49194 * C49251 + 0) * be) / C49147) /
            C49152 +
        ((C49194 * (C49251 / C49152 -
                    ((C49194 * C49253 + C50365) * be) / C49147 + C49246) +
          C50402) *
         ae) /
            C49147 +
        C49253 / C49152 - ((C49194 * C49246 + C50286) * be) / C49147;
    const double C38616 =
        (C49251 / C49152 - ((C49194 * C49253 + C50365) * be) / C49147 +
         C49246) /
            C49152 +
        ((C49194 *
              (C49253 / C49152 - ((C49194 * C49246 + C50286) * be) / C49147) +
          C50403) *
         ae) /
            C49147 +
        2 * (C49246 / C49152 - (0 * be) / C49147);
    const double C38617 =
        (C49253 / C49152 - ((C49194 * C49246 + C50286) * be) / C49147) /
            C49152 +
        ((C49194 * (C49246 / C49152 - (0 * be) / C49147) + C43931) * ae) /
            C49147;
    const double C43932 =
        C49251 / C49152 - ((C49194 * C49253 + C50365) * be) / C49147 + C49246;
    const double C43933 =
        C49253 / C49152 - ((C49194 * C49246 + C50286) * be) / C49147;
    const double C30779 = C30777 + C30775;
    const double C36147 = C36145 + C36141;
    const double C5402 = C5397 + C5398;
    const double C14368 = C14359 + C14360;
    const double C14366 = C14355 + C14356;
    const double C2381 = C2375 + C2376;
    const double C5401 = C5395 + C5396;
    const double C14367 = C14357 + C14358;
    const double C14365 = C14353 + C14354;
    const double C431 =
        (2 * C49304 + be * C49305 + C49272 * C49324 + ae * C49271 * C49409 +
         C49271 * (ae * C49409 + C49271 * C49352)) /
        C49151;
    const double C432 =
        (ae * (3 * C49390 + C49272 * C49409 +
               (2 * C49383 + C49272 * C49401) * be) +
         C49271 * (3 * C49324 + be * C49325 + C49272 * C49352)) /
        C49151;
    const double C793 =
        (ae * C49441 * C49409 + C49271 * C49441 * C49352) / C49151;
    const double C139 = (4 * (2 * C49379 + C49272 * C49390 + C49657 * be) +
                         C49272 * (3 * C49390 + C49272 * C49409 + C49662 * be) +
                         (3 * C49657 + C49272 * C49662) * be) /
                        C49147;
    const double C274 =
        (2 * C49379 + C49272 * C49390 + C49657 * be + C49409 * C49459) / C49147;
    const double C279 =
        (C49441 * (3 * C49390 + C49272 * C49409 + C49662 * be)) / C49147;
    const double C415 =
        (2 * C49379 + C49272 * C49390 + C49657 * be + C49409 * C49514) / C49147;
    const double C420 =
        (C49271 * (3 * C49390 + C49272 * C49409 + C49662 * be)) / C49147;
    const double C783 = (C49271 * C49441 * C49409) / C49147;
    const double C40005 =
        (5 * (3 * C49884 + C49271 * C49967 + C49883 * ae) +
         C49271 * (4 * C49967 +
                   C49271 * (3 * C49962 +
                             C49271 * (2 * C49954 +
                                       C49271 * (C49317 +
                                                 C49271 * (C49271 * C49341 +
                                                           C49415 * ae) +
                                                 C49271 * C49415 * ae) +
                                       C49956 * ae) +
                             C49961 * ae) +
                   C49965 * ae) +
         (4 * C49883 + C49271 * C49965) * ae) /
        C49147;
    const double C49435 = C49272 * C49434;
    const double C49457 = C49441 * C49434;
    const double C1445 =
        (ae * (C49409 + C49434 * C49459) +
         C49271 * (C49352 + (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                C49459)) /
        C49151;
    const double C1729 =
        (2 * (ae * C49409 + C49271 * C49352) +
         ae * (C49409 + C49434 * std::pow(C49271, 2)) +
         C49271 *
             (C49352 + ae * C49271 * C49434 +
              C49271 *
                  (ae * C49434 +
                   C49271 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C976 =
        (2 * C49441 * C49409 + C49441 * (C49409 + C49434 * C49459)) / C49147;
    const double C1437 = (C49271 * (C49409 + C49434 * C49459)) / C49147;
    const double C1721 =
        (2 * C49271 * C49409 + C49271 * (C49409 + C49434 * C49514)) / C49147;
    const double C24420 = C24402 - C24403;
    const double C24418 = C24398 - C24399;
    const double C25358 = C24386 - C24387;
    const double C25356 = C24382 - C24383;
    const double C24416 = C24378 - C24379;
    const double C24414 = C24374 - C24375;
    const double C28148 = C25100 - C25101;
    const double C28144 = C25101 - C25100;
    const double C28146 = C25096 - C25097;
    const double C28142 = C25097 - C25096;
    const double C26023 = C25092 - C25093;
    const double C29344 = C25093 - C25092;
    const double C26021 = C25088 - C25089;
    const double C29342 = C25089 - C25088;
    const double C28140 = C25084 - C25085;
    const double C28136 = C25085 - C25084;
    const double C28138 = C25080 - C25081;
    const double C28134 = C25081 - C25080;
    const double C28682 = C25523 - C25524;
    const double C28678 = C25524 - C25523;
    const double C28680 = C25519 - C25520;
    const double C28676 = C25520 - C25519;
    const double C44234 = C27461 - C27460;
    const double C44232 = C27457 - C27456;
    const double C44230 = C27445 - C27444;
    const double C44228 = C27441 - C27440;
    const double C46010 = C29871 - C29870;
    const double C46008 = C29867 - C29866;
    const double C8008 = C7815 * C276;
    const double C8002 = C7815 * C258;
    const double C7995 = C7815 * C268;
    const double C7989 = C7815 * C254;
    const double C7983 = C7815 * C275;
    const double C7977 = C7815 * C257;
    const double C7972 = C7815 * C267;
    const double C7966 = C7815 * C253;
    const double C8312 = C7815 * C269;
    const double C8306 = C7815 * C255;
    const double C8676 = C7815 * C785;
    const double C8670 = C7815 * C776;
    const double C8663 = C7815 * C784;
    const double C8657 = C7815 * C775;
    const double C8932 = C7815 * C977;
    const double C8926 = C7815 * C969;
    const double C9090 = C7815 * C1091;
    const double C9084 = C7815 * C1083;
    const double C9588 = C7815 * C1438;
    const double C9582 = C7815 * C1430;
    const double C10906 = C7815 * C417;
    const double C10900 = C7815 * C399;
    const double C10893 = C7815 * C409;
    const double C10887 = C7815 * C395;
    const double C10881 = C7815 * C416;
    const double C10875 = C7815 * C398;
    const double C10870 = C7815 * C408;
    const double C10864 = C7815 * C394;
    const double C11210 = C7815 * C410;
    const double C11204 = C7815 * C396;
    const double C12682 = C7815 * C1722;
    const double C12676 = C7815 * C1714;
    const double C8010 = C7816 * C277;
    const double C8004 = C7816 * C259;
    const double C7997 = C7816 * C269;
    const double C7991 = C7816 * C255;
    const double C7985 = C7816 * C276;
    const double C7979 = C7816 * C258;
    const double C7974 = C7816 * C268;
    const double C7968 = C7816 * C254;
    const double C8314 = C7816 * C270;
    const double C8308 = C7816 * C256;
    const double C8678 = C7816 * C786;
    const double C8672 = C7816 * C777;
    const double C8665 = C7816 * C785;
    const double C8659 = C7816 * C776;
    const double C8934 = C7816 * C978;
    const double C8928 = C7816 * C970;
    const double C9092 = C7816 * C1092;
    const double C9086 = C7816 * C1084;
    const double C9590 = C7816 * C1439;
    const double C9584 = C7816 * C1431;
    const double C10908 = C7816 * C418;
    const double C10902 = C7816 * C400;
    const double C10895 = C7816 * C410;
    const double C10889 = C7816 * C396;
    const double C10883 = C7816 * C417;
    const double C10877 = C7816 * C399;
    const double C10872 = C7816 * C409;
    const double C10866 = C7816 * C395;
    const double C11212 = C7816 * C411;
    const double C11206 = C7816 * C397;
    const double C12684 = C7816 * C1723;
    const double C12678 = C7816 * C1715;
    const double C17004 = C16811 * C276;
    const double C16998 = C16811 * C258;
    const double C16991 = C16811 * C268;
    const double C16985 = C16811 * C254;
    const double C16979 = C16811 * C275;
    const double C16973 = C16811 * C257;
    const double C16968 = C16811 * C267;
    const double C16962 = C16811 * C253;
    const double C17308 = C16811 * C269;
    const double C17302 = C16811 * C255;
    const double C17672 = C16811 * C785;
    const double C17666 = C16811 * C776;
    const double C17659 = C16811 * C784;
    const double C17653 = C16811 * C775;
    const double C17928 = C16811 * C977;
    const double C17922 = C16811 * C969;
    const double C18086 = C16811 * C1091;
    const double C18080 = C16811 * C1083;
    const double C18584 = C16811 * C1438;
    const double C18578 = C16811 * C1430;
    const double C33623 = C16811 * C417;
    const double C33617 = C16811 * C399;
    const double C33610 = C16811 * C409;
    const double C33604 = C16811 * C395;
    const double C33598 = C16811 * C416;
    const double C33592 = C16811 * C398;
    const double C33587 = C16811 * C408;
    const double C33581 = C16811 * C394;
    const double C33927 = C16811 * C410;
    const double C33921 = C16811 * C396;
    const double C35399 = C16811 * C1722;
    const double C35393 = C16811 * C1714;
    const double C17006 = C16812 * C277;
    const double C17000 = C16812 * C259;
    const double C16993 = C16812 * C269;
    const double C16987 = C16812 * C255;
    const double C16981 = C16812 * C276;
    const double C16975 = C16812 * C258;
    const double C16970 = C16812 * C268;
    const double C16964 = C16812 * C254;
    const double C17310 = C16812 * C270;
    const double C17304 = C16812 * C256;
    const double C17674 = C16812 * C786;
    const double C17668 = C16812 * C777;
    const double C17661 = C16812 * C785;
    const double C17655 = C16812 * C776;
    const double C17930 = C16812 * C978;
    const double C17924 = C16812 * C970;
    const double C18088 = C16812 * C1092;
    const double C18082 = C16812 * C1084;
    const double C18586 = C16812 * C1439;
    const double C18580 = C16812 * C1431;
    const double C33625 = C16812 * C418;
    const double C33619 = C16812 * C400;
    const double C33612 = C16812 * C410;
    const double C33606 = C16812 * C396;
    const double C33600 = C16812 * C417;
    const double C33594 = C16812 * C399;
    const double C33589 = C16812 * C409;
    const double C33583 = C16812 * C395;
    const double C33929 = C16812 * C411;
    const double C33923 = C16812 * C397;
    const double C35401 = C16812 * C1723;
    const double C35395 = C16812 * C1715;
    const double C2386 = C2382 * C50222;
    const double C3360 = C3358 * C50222;
    const double C3359 = C3357 * C121;
    const double C2384 = C2380 * C50222;
    const double C2383 = C2379 * C121;
    const double C4041 = C4039 * C50222;
    const double C4040 = C4038 * C121;
    const double C2385 = C2381 * C121;
    const double C5709 = C50065 * C431;
    const double C10909 = C7812 * C431;
    const double C33626 = C16808 * C431;
    const double C44546 = C50065 * C431;
    const double C11213 = C7812 * C432;
    const double C33930 = C16808 * C432;
    const double C8679 = C7812 * C793;
    const double C13891 = C50065 * C793;
    const double C17675 = C16808 * C793;
    const double C27672 = C50065 * C793;
    const double C2703 = C50065 * C274;
    const double C8005 = C7812 * C274;
    const double C17001 = C16808 * C274;
    const double C24734 = C50065 * C274;
    const double C8309 = C7812 * C279;
    const double C17305 = C16808 * C279;
    const double C5705 = C50065 * C415;
    const double C10903 = C7812 * C415;
    const double C33620 = C16808 * C415;
    const double C44542 = C50065 * C415;
    const double C11207 = C7812 * C420;
    const double C33924 = C16808 * C420;
    const double C8673 = C7812 * C783;
    const double C13887 = C50065 * C783;
    const double C17669 = C16808 * C783;
    const double C27668 = C50065 * C783;
    const double C49436 = C49412 + C49435;
    const double C1098 =
        (C49441 * C49352 + ae * C49271 * C49457 +
         C49271 * (ae * C49457 +
                   C49271 * C49441 *
                       (2 * C49344 + be * C49345 +
                        C49272 * (C49340 + be * C49272 * C49341 +
                                  C49272 * (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C1090 = (C49441 * C49409 + C49457 * C49514) / C49147;
    const double C24425 = C24420 + C24421;
    const double C24424 = C24418 + C24419;
    const double C25369 = C25358 + C25359;
    const double C25368 = C25356 + C25357;
    const double C24423 = C24416 + C24417;
    const double C24422 = C24414 + C24415;
    const double C28157 = C28148 + C28149;
    const double C28155 = C28144 + C28145;
    const double C28156 = C28146 + C28147;
    const double C28154 = C28142 + C28143;
    const double C26034 = C26023 + C26024;
    const double C29347 = C29344 + C29345;
    const double C26033 = C26021 + C26022;
    const double C29346 = C29342 + C29343;
    const double C28153 = C28140 + C28141;
    const double C28151 = C28136 + C28137;
    const double C28152 = C28138 + C28139;
    const double C28150 = C28134 + C28135;
    const double C28695 = C28682 + C28683;
    const double C28693 = C28678 + C28679;
    const double C28694 = C28680 + C28681;
    const double C28692 = C28676 + C28677;
    const double C44247 = C44234 + C44235;
    const double C44246 = C44232 + C44233;
    const double C44245 = C44230 + C44231;
    const double C44244 = C44228 + C44229;
    const double C46021 = C46010 + C46011;
    const double C46020 = C46008 + C46009;
    const double C3361 = C3359 + C3360;
    const double C2387 = C2383 + C2384;
    const double C4042 = C4040 + C4041;
    const double C2388 = C2385 + C2386;
    const double C49437 = C49436 + C49430;
    const double C24429 = C24425 * C50222;
    const double C24428 = C24424 * C121;
    const double C25371 = C25369 * C50222;
    const double C25370 = C25368 * C121;
    const double C24427 = C24423 * C50222;
    const double C24426 = C24422 * C121;
    const double C26036 = C26034 * C50222;
    const double C26035 = C26033 * C121;
    const double C433 =
        (3 * C49324 + be * C49325 + C49272 * C49352 + ae * C49271 * C49437 +
         C49271 *
             (ae * C49437 +
              C49271 *
                  (3 * C49348 + be * C49349 +
                   C49272 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C644 =
        (ae * (4 * C49409 + C49272 * C49437 +
               (3 * C49401 + C49272 * C49428) * be) +
         C49271 *
             (4 * C49352 + be * C49353 +
              C49272 *
                  (3 * C49348 + be * C49349 +
                   C49272 * (2 * C49344 + be * C49345 +
                             C49272 * (C49340 + be * C49272 * C49341 +
                                       C49272 * (be * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49151;
    const double C794 =
        (ae * C49441 * C49437 +
         C49271 * C49441 *
             (3 * C49348 + be * C49349 +
              C49272 * (2 * C49344 + be * C49345 +
                        C49272 * (C49340 + be * C49272 * C49341 +
                                  C49272 * (be * C49341 +
                                            C49272 * std::pow(C49274, 8) *
                                                bs[8] * C49283))))) /
        C49151;
    const double C141 = (5 * (3 * C49390 + C49272 * C49409 + C49662 * be) +
                         C49272 * (4 * C49409 + C49272 * C49437 + C49667 * be) +
                         (4 * C49662 + C49272 * C49667) * be) /
                        C49147;
    const double C281 =
        (3 * C49390 + C49272 * C49409 + C49662 * be + C49437 * C49459) / C49147;
    const double C422 =
        (3 * C49390 + C49272 * C49409 + C49662 * be + C49437 * C49514) / C49147;
    const double C538 =
        (C49441 * (4 * C49409 + C49272 * C49437 + C49667 * be)) / C49147;
    const double C642 =
        (C49271 * (4 * C49409 + C49272 * C49437 + C49667 * be)) / C49147;
    const double C788 = (C49271 * C49441 * C49437) / C49147;
    const double C24431 = C24428 + C24429;
    const double C25372 = C25370 + C25371;
    const double C24430 = C24426 + C24427;
    const double C26037 = C26035 + C26036;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50125 * C50351 +
                  (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C50394 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50125 * C50351 +
                  (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                       C50364 +
                   ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                    (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C50395 +
                 ((((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C121 +
                    (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50222) *
                       C50364 +
                   ((C8305 - C8306 + C8307 - C8308 + C8309 - C8310) * C121 +
                    (C8311 - C8312 + C8313 - C8314 + C8315 - C8316) * C50222) *
                       C50260) *
                      C50125 * C50351 +
                  (((C8306 - C8305 + C8308 - C8307 + C8310 - C8309) * C121 +
                    (C8312 - C8311 + C8314 - C8313 + C8316 - C8315) * C50222) *
                       C50364 +
                   ((C7815 * C259 - C50392 * C273 + C7816 * C260 -
                     C50393 * C274 + C7817 * C262 - C7812 * C281) *
                        C121 +
                    (C7815 * C277 - C50392 * C289 + C7816 * C278 -
                     C50393 * C290 + C7817 * C282 - C7812 * C292) *
                        C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C50352 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50189) *
                      C50351 +
                  ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                     (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                        C50364 +
                    ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                     (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                        C50260) *
                       C50352 +
                   (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                     (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                        C50364 +
                    ((C50392 * C1434 - C7815 * C1430 + C50393 * C1435 -
                      C7816 * C1431 + C7812 * C1436 - C7817 * C1432) *
                         C121 +
                     (C50392 * C1442 - C7815 * C1438 + C50393 * C1443 -
                      C7816 * C1439 + C7812 * C1444 - C7817 * C1440) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C50161) *
                     C251 +
                 (((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                      C50393 * C131 + C7817 * C125 - C7812 * C132) *
                         C121 +
                     (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                      C50393 * C145 + C7817 * C136 - C7812 * C146) *
                         C50222) *
                        C50364 +
                    ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                     (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                        C50260) *
                       C50352 +
                   (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                      C7816 * C396 + C7812 * C407 - C7817 * C397) *
                         C121 +
                     (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                      C7816 * C410 + C7812 * C427 - C7817 * C411) *
                         C50222) *
                        C50364 +
                    ((C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C121 +
                     (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50222) *
                        C50260) *
                       C50189) *
                      C50351 +
                  ((((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                     (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                        C50364 +
                    ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                     (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                        C50260) *
                       C50352 +
                   (((C8670 - C8669 + C8672 - C8671 + C8674 - C8673) * C121 +
                     (C8676 - C8675 + C8678 - C8677 + C8680 - C8679) * C50222) *
                        C50364 +
                    ((C7815 * C1431 - C50392 * C1435 + C7816 * C1432 -
                      C50393 * C1436 + C7817 * C1433 - C7812 * C1437) *
                         C121 +
                     (C7815 * C1439 - C50392 * C1443 + C7816 * C1440 -
                      C50393 * C1444 + C7817 * C1441 - C7812 * C1445) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C50161) *
                     C50096)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50125 * C248 +
                  (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50125 * C249 +
                  (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                    (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                       C50364 +
                   ((C50392 * C973 - C7815 * C969 + C50393 * C974 -
                     C7816 * C970 + C7812 * C975 - C7817 * C971) *
                        C121 +
                    (C50392 * C981 - C7815 * C977 + C50393 * C982 -
                     C7816 * C978 + C7812 * C983 - C7817 * C979) *
                        C50222) *
                       C50260) *
                      C50125 * C250) *
                     C251 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50125 * C248 +
                  (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                       C50364 +
                   ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                    (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                       C50260) *
                      C50125 * C249 +
                  (((C8002 - C8001 + C8004 - C8003 + C8006 - C8005) * C121 +
                    (C8008 - C8007 + C8010 - C8009 + C8012 - C8011) * C50222) *
                       C50364 +
                   ((C7815 * C970 - C50392 * C974 + C7816 * C971 -
                     C50393 * C975 + C7817 * C972 - C7812 * C976) *
                        C121 +
                    (C7815 * C978 - C50392 * C982 + C7816 * C979 -
                     C50393 * C983 + C7817 * C980 - C7812 * C984) *
                        C50222) *
                       C50260) *
                      C50125 * C250) *
                     C50096)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C121 +
                   (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50222) *
                      C50364 +
                  ((C50392 * C263 - C7815 * C253 + C50393 * C264 -
                    C7816 * C254 + C7812 * C265 - C7817 * C255) *
                       C121 +
                   (C50392 * C283 - C7815 * C267 + C50393 * C284 -
                    C7816 * C268 + C7812 * C285 - C7817 * C269) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C113 +
                 (((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                    C50393 * C131 + C7817 * C125 - C7812 * C132) *
                       C121 +
                   (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                    C50393 * C145 + C7817 * C136 - C7812 * C146) *
                       C50222) *
                      C50364 +
                  ((C7815 * C254 - C50392 * C264 + C7816 * C255 -
                    C50393 * C265 + C7817 * C256 - C7812 * C266) *
                       C121 +
                   (C7815 * C268 - C50392 * C284 + C7816 * C269 -
                    C50393 * C285 + C7817 * C270 - C7812 * C286) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C114 +
                 (((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C121 +
                   (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50222) *
                      C50364 +
                  ((C50392 * C265 - C7815 * C255 + C50393 * C266 -
                    C7816 * C256 + C7812 * C279 - C7817 * C261) *
                       C121 +
                   (C50392 * C285 - C7815 * C269 + C50393 * C286 -
                    C7816 * C270 + C7812 * C291 - C7817 * C280) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C115 +
                 (((C7815 * C125 - C50392 * C132 + C7816 * C126 -
                    C50393 * C137 + C7817 * C127 - C7812 * C139) *
                       C121 +
                   (C7815 * C136 - C50392 * C146 + C7816 * C138 -
                    C50393 * C147 + C7817 * C140 - C7812 * C148) *
                       C50222) *
                      C50364 +
                  ((C7815 * C256 - C50392 * C266 + C7816 * C261 -
                    C50393 * C279 + C7817 * C537 - C7812 * C538) *
                       C121 +
                   (C7815 * C270 - C50392 * C286 + C7816 * C280 -
                    C50393 * C291 + C7817 * C539 - C7812 * C540) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C391 +
                  (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                     C50393 * C405 + C7817 * C396 - C7812 * C406) *
                        C121 +
                    (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                     C50393 * C425 + C7817 * C410 - C7812 * C426) *
                        C50222) *
                       C50364 +
                   ((C7815 * C775 - C50392 * C780 + C7816 * C776 -
                     C50393 * C781 + C7817 * C777 - C7812 * C782) *
                        C121 +
                    (C7815 * C784 - C50392 * C790 + C7816 * C785 -
                     C50393 * C791 + C7817 * C786 - C7812 * C792) *
                        C50222) *
                       C50260) *
                      C392 +
                  (((C50392 * C412 - C7815 * C398 + C50393 * C413 -
                     C7816 * C399 + C7812 * C414 - C7817 * C400) *
                        C121 +
                    (C50392 * C428 - C7815 * C416 + C50393 * C429 -
                     C7816 * C417 + C7812 * C430 - C7817 * C418) *
                        C50222) *
                       C50364 +
                   ((C50392 * C1087 - C7815 * C1083 + C50393 * C1088 -
                     C7816 * C1084 + C7812 * C1089 - C7817 * C1085) *
                        C121 +
                    (C50392 * C1095 - C7815 * C1091 + C50393 * C1096 -
                     C7816 * C1092 + C7812 * C1097 - C7817 * C1093) *
                        C50222) *
                       C50260) *
                      C393) *
                     C50109 * C251 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C391 +
                  (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C121 +
                    (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50222) *
                       C50364 +
                   ((C50392 * C781 - C7815 * C776 + C50393 * C782 -
                     C7816 * C777 + C7812 * C783 - C7817 * C778) *
                        C121 +
                    (C50392 * C791 - C7815 * C785 + C50393 * C792 -
                     C7816 * C786 + C7812 * C793 - C7817 * C787) *
                        C50222) *
                       C50260) *
                      C392 +
                  (((C7815 * C399 - C50392 * C413 + C7816 * C400 -
                     C50393 * C414 + C7817 * C401 - C7812 * C415) *
                        C121 +
                    (C7815 * C417 - C50392 * C429 + C7816 * C418 -
                     C50393 * C430 + C7817 * C419 - C7812 * C431) *
                        C50222) *
                       C50364 +
                   ((C7815 * C1084 - C50392 * C1088 + C7816 * C1085 -
                     C50393 * C1089 + C7817 * C1086 - C7812 * C1090) *
                        C121 +
                    (C7815 * C1092 - C50392 * C1096 + C7816 * C1093 -
                     C50393 * C1097 + C7817 * C1094 - C7812 * C1098) *
                        C50222) *
                       C50260) *
                      C393) *
                     C50109 * C50096)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50352 +
                  (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                     C50393 * C405 + C7817 * C396 - C7812 * C406) *
                        C121 +
                    (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                     C50393 * C425 + C7817 * C410 - C7812 * C426) *
                        C50222) *
                       C50364 +
                   ((C7815 * C775 - C50392 * C780 + C7816 * C776 -
                     C50393 * C781 + C7817 * C777 - C7812 * C782) *
                        C121 +
                    (C7815 * C784 - C50392 * C790 + C7816 * C785 -
                     C50393 * C791 + C7817 * C786 - C7812 * C792) *
                        C50222) *
                       C50260) *
                      C50189) *
                     C50109 * C50394 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50352 +
                  (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                     C7816 * C396 + C7812 * C407 - C7817 * C397) *
                        C121 +
                    (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                     C7816 * C410 + C7812 * C427 - C7817 * C411) *
                        C50222) *
                       C50364 +
                   ((C50392 * C781 - C7815 * C776 + C50393 * C782 -
                     C7816 * C777 + C7812 * C783 - C7817 * C778) *
                        C121 +
                    (C50392 * C791 - C7815 * C785 + C50393 * C792 -
                     C7816 * C786 + C7812 * C793 - C7817 * C787) *
                        C50222) *
                       C50260) *
                      C50189) *
                     C50109 * C50395 +
                 ((((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C121 +
                    (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50222) *
                       C50364 +
                   ((C8305 - C8306 + C8307 - C8308 + C8309 - C8310) * C121 +
                    (C8311 - C8312 + C8313 - C8314 + C8315 - C8316) * C50222) *
                       C50260) *
                      C50352 +
                  (((C7815 * C396 - C50392 * C406 + C7816 * C397 -
                     C50393 * C407 + C7817 * C402 - C7812 * C420) *
                        C121 +
                    (C7815 * C410 - C50392 * C426 + C7816 * C411 -
                     C50393 * C427 + C7817 * C421 - C7812 * C432) *
                        C50222) *
                       C50364 +
                   ((C7815 * C777 - C50392 * C782 + C7816 * C778 -
                     C50393 * C783 + C7817 * C779 - C7812 * C788) *
                        C121 +
                    (C7815 * C786 - C50392 * C792 + C7816 * C787 -
                     C50393 * C793 + C7817 * C789 - C7812 * C794) *
                        C50222) *
                       C50260) *
                      C50189) *
                     C50109 * C536)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C121 +
                   (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50222) *
                      C50364 +
                  ((C50392 * C263 - C7815 * C253 + C50393 * C264 -
                    C7816 * C254 + C7812 * C265 - C7817 * C255) *
                       C121 +
                   (C50392 * C283 - C7815 * C267 + C50393 * C284 -
                    C7816 * C268 + C7812 * C285 - C7817 * C269) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C113 +
                 (((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                    C50393 * C131 + C7817 * C125 - C7812 * C132) *
                       C121 +
                   (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                    C50393 * C145 + C7817 * C136 - C7812 * C146) *
                       C50222) *
                      C50364 +
                  ((C7815 * C254 - C50392 * C264 + C7816 * C255 -
                    C50393 * C265 + C7817 * C256 - C7812 * C266) *
                       C121 +
                   (C7815 * C268 - C50392 * C284 + C7816 * C269 -
                    C50393 * C285 + C7817 * C270 - C7812 * C286) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C114 +
                 (((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C121 +
                   (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50222) *
                      C50364 +
                  ((C50392 * C265 - C7815 * C255 + C50393 * C266 -
                    C7816 * C256 + C7812 * C279 - C7817 * C261) *
                       C121 +
                   (C50392 * C285 - C7815 * C269 + C50393 * C286 -
                    C7816 * C270 + C7812 * C291 - C7817 * C280) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C115 +
                 (((C7815 * C125 - C50392 * C132 + C7816 * C126 -
                    C50393 * C137 + C7817 * C127 - C7812 * C139) *
                       C121 +
                   (C7815 * C136 - C50392 * C146 + C7816 * C138 -
                    C50393 * C147 + C7817 * C140 - C7812 * C148) *
                       C50222) *
                      C50364 +
                  ((C7815 * C256 - C50392 * C266 + C7816 * C261 -
                    C50393 * C279 + C7817 * C537 - C7812 * C538) *
                       C121 +
                   (C7815 * C270 - C50392 * C286 + C7816 * C280 -
                    C50393 * C291 + C7817 * C539 - C7812 * C540) *
                       C50222) *
                      C50260) *
                     C50125 * C50109 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50125 * C248 +
                  (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50125 * C249 +
                  (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                    (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                       C50364 +
                   ((C50392 * C973 - C7815 * C969 + C50393 * C974 -
                     C7816 * C970 + C7812 * C975 - C7817 * C971) *
                        C121 +
                    (C50392 * C981 - C7815 * C977 + C50393 * C982 -
                     C7816 * C978 + C7812 * C983 - C7817 * C979) *
                        C50222) *
                       C50260) *
                      C50125 * C250) *
                     C251 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50125 * C248 +
                  (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                       C50364 +
                   ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                    (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                       C50260) *
                      C50125 * C249 +
                  (((C8002 - C8001 + C8004 - C8003 + C8006 - C8005) * C121 +
                    (C8008 - C8007 + C8010 - C8009 + C8012 - C8011) * C50222) *
                       C50364 +
                   ((C7815 * C970 - C50392 * C974 + C7816 * C971 -
                     C50393 * C975 + C7817 * C972 - C7812 * C976) *
                        C121 +
                    (C7815 * C978 - C50392 * C982 + C7816 * C979 -
                     C50393 * C983 + C7817 * C980 - C7812 * C984) *
                        C50222) *
                       C50260) *
                      C50125 * C250) *
                     C50096)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50125 * C50396 +
                  (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50125 * C50397 +
                  (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                    (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                       C50364 +
                   ((C8925 - C8926 + C8927 - C8928 + C8929 - C8930) * C121 +
                    (C8931 - C8932 + C8933 - C8934 + C8935 - C8936) * C50222) *
                       C50260) *
                      C50125 * C1199) *
                     C50343 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50125 * C50396 +
                  (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                       C50364 +
                   ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                    (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                       C50260) *
                      C50125 * C50397 +
                  (((C8002 - C8001 + C8004 - C8003 + C8006 - C8005) * C121 +
                    (C8008 - C8007 + C8010 - C8009 + C8012 - C8011) * C50222) *
                       C50364 +
                   ((C7815 * C970 - C50392 * C974 + C7816 * C971 -
                     C50393 * C975 + C7817 * C972 - C7812 * C976) *
                        C121 +
                    (C7815 * C978 - C50392 * C982 + C7816 * C979 -
                     C50393 * C983 + C7817 * C980 - C7812 * C984) *
                        C50222) *
                       C50260) *
                      C50125 * C1199) *
                     C50096)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50352 +
                  (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                     C50393 * C405 + C7817 * C396 - C7812 * C406) *
                        C121 +
                    (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                     C50393 * C425 + C7817 * C410 - C7812 * C426) *
                        C50222) *
                       C50364 +
                   ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                    (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                       C50260) *
                      C50189) *
                     C50396 +
                 ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50352 +
                  (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                    (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                       C50364 +
                   ((C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C121 +
                    (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50222) *
                       C50260) *
                      C50189) *
                     C50397 +
                 ((((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                    (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                       C50364 +
                   ((C8925 - C8926 + C8927 - C8928 + C8929 - C8930) * C121 +
                    (C8931 - C8932 + C8933 - C8934 + C8935 - C8936) * C50222) *
                       C50260) *
                      C50352 +
                  (((C9582 - C9581 + C9584 - C9583 + C9586 - C9585) * C121 +
                    (C9588 - C9587 + C9590 - C9589 + C9592 - C9591) * C50222) *
                       C50364 +
                   ((C7815 * C3048 - C50392 * C3051 + C7816 * C3049 -
                     C50393 * C3052 + C7817 * C3050 - C7812 * C3055) *
                        C121 +
                    (C7815 * C3053 - C50392 * C3057 + C7816 * C3054 -
                     C50393 * C3058 + C7817 * C3056 - C7812 * C3059) *
                        C50222) *
                       C50260) *
                      C50189) *
                     C1199) *
                C50090) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C121 +
                   (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50222) *
                      C50364 +
                  ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                   (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                      C50260) *
                     C50125 * C964 +
                 (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                   (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                      C50364 +
                  ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                   (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                      C50260) *
                     C50125 * C965 +
                 (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                   (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                      C50364 +
                  ((C8925 - C8926 + C8927 - C8928 + C8929 - C8930) * C121 +
                   (C8931 - C8932 + C8933 - C8934 + C8935 - C8936) * C50222) *
                      C50260) *
                     C50125 * C966 +
                 (((C8926 - C8925 + C8928 - C8927 + C8930 - C8929) * C121 +
                   (C8932 - C8931 + C8934 - C8933 + C8936 - C8935) * C50222) *
                      C50364 +
                  ((C7815 * C2310 - C50392 * C2313 + C7816 * C2311 -
                    C50393 * C2314 + C7817 * C2312 - C7812 * C2317) *
                       C121 +
                   (C7815 * C2315 - C50392 * C2319 + C7816 * C2316 -
                    C50393 * C2320 + C7817 * C2318 - C7812 * C2321) *
                       C50222) *
                      C50260) *
                     C50125 * C967) *
                C50090) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50125 * C893 +
                  (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C895 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50125 * C893 +
                  (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                       C50364 +
                   ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                    (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C896 +
                 ((((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C121 +
                    (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50222) *
                       C50364 +
                   ((C8305 - C8306 + C8307 - C8308 + C8309 - C8310) * C121 +
                    (C8311 - C8312 + C8313 - C8314 + C8315 - C8316) * C50222) *
                       C50260) *
                      C50125 * C893 +
                  (((C8306 - C8305 + C8308 - C8307 + C8310 - C8309) * C121 +
                    (C8312 - C8311 + C8314 - C8313 + C8316 - C8315) * C50222) *
                       C50364 +
                   ((C7815 * C259 - C50392 * C273 + C7816 * C260 -
                     C50393 * C274 + C7817 * C262 - C7812 * C281) *
                        C121 +
                    (C7815 * C277 - C50392 * C289 + C7816 * C278 -
                     C50393 * C290 + C7817 * C282 - C7812 * C292) *
                        C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C391 +
                  (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                     C50393 * C405 + C7817 * C396 - C7812 * C406) *
                        C121 +
                    (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                     C50393 * C425 + C7817 * C410 - C7812 * C426) *
                        C50222) *
                       C50364 +
                   ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                    (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                       C50260) *
                      C392 +
                  (((C50392 * C412 - C7815 * C398 + C50393 * C413 -
                     C7816 * C399 + C7812 * C414 - C7817 * C400) *
                        C121 +
                    (C50392 * C428 - C7815 * C416 + C50393 * C429 -
                     C7816 * C417 + C7812 * C430 - C7817 * C418) *
                        C50222) *
                       C50364 +
                   ((C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C121 +
                    (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50222) *
                       C50260) *
                      C393) *
                     C893 +
                 ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C391 +
                  (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                    (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                       C50364 +
                   ((C50392 * C1434 - C7815 * C1430 + C50393 * C1435 -
                     C7816 * C1431 + C7812 * C1436 - C7817 * C1432) *
                        C121 +
                    (C50392 * C1442 - C7815 * C1438 + C50393 * C1443 -
                     C7816 * C1439 + C7812 * C1444 - C7817 * C1440) *
                        C50222) *
                       C50260) *
                      C392 +
                  (((C9084 - C9083 + C9086 - C9085 + C9088 - C9087) * C121 +
                    (C9090 - C9089 + C9092 - C9091 + C9094 - C9093) * C50222) *
                       C50364 +
                   ((C7815 * C2534 - C50392 * C2537 + C7816 * C2535 -
                     C50393 * C2538 + C7817 * C2536 - C7812 * C2541) *
                        C121 +
                    (C7815 * C2539 - C50392 * C2543 + C7816 * C2540 -
                     C50393 * C2544 + C7817 * C2542 - C7812 * C2545) *
                        C50222) *
                       C50260) *
                      C393) *
                     C50161) *
                C50090) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C50352 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50189) *
                      C893 +
                  ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                     (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                        C50364 +
                    ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                     (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                        C50260) *
                       C50352 +
                   (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                     (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                        C50364 +
                    ((C50392 * C1434 - C7815 * C1430 + C50393 * C1435 -
                      C7816 * C1431 + C7812 * C1436 - C7817 * C1432) *
                         C121 +
                     (C50392 * C1442 - C7815 * C1438 + C50393 * C1443 -
                      C7816 * C1439 + C7812 * C1444 - C7817 * C1440) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C50161) *
                     C50343 +
                 (((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                      C50393 * C131 + C7817 * C125 - C7812 * C132) *
                         C121 +
                     (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                      C50393 * C145 + C7817 * C136 - C7812 * C146) *
                         C50222) *
                        C50364 +
                    ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                     (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                        C50260) *
                       C50352 +
                   (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                      C7816 * C396 + C7812 * C407 - C7817 * C397) *
                         C121 +
                     (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                      C7816 * C410 + C7812 * C427 - C7817 * C411) *
                         C50222) *
                        C50364 +
                    ((C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C121 +
                     (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50222) *
                        C50260) *
                       C50189) *
                      C893 +
                  ((((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                     (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                        C50364 +
                    ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                     (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                        C50260) *
                       C50352 +
                   (((C8670 - C8669 + C8672 - C8671 + C8674 - C8673) * C121 +
                     (C8676 - C8675 + C8678 - C8677 + C8680 - C8679) * C50222) *
                        C50364 +
                    ((C7815 * C1431 - C50392 * C1435 + C7816 * C1432 -
                      C50393 * C1436 + C7817 * C1433 - C7812 * C1437) *
                         C121 +
                     (C7815 * C1439 - C50392 * C1443 + C7816 * C1440 -
                      C50393 * C1444 + C7817 * C1441 - C7812 * C1445) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C50161) *
                     C50096)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C50125 * C893 +
                  (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                       C50364 +
                   ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                    (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C895 +
                 ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C121 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50222) *
                       C50364 +
                   ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                    (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                       C50260) *
                      C50125 * C893 +
                  (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                       C50364 +
                   ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
                    (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C896 +
                 ((((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                     C7816 * C125 + C7812 * C137 - C7817 * C126) *
                        C121 +
                    (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                     C7816 * C136 + C7812 * C147 - C7817 * C138) *
                        C50222) *
                       C50364 +
                   ((C8305 - C8306 + C8307 - C8308 + C8309 - C8310) * C121 +
                    (C8311 - C8312 + C8313 - C8314 + C8315 - C8316) * C50222) *
                       C50260) *
                      C50125 * C893 +
                  (((C8306 - C8305 + C8308 - C8307 + C8310 - C8309) * C121 +
                    (C8312 - C8311 + C8314 - C8313 + C8316 - C8315) * C50222) *
                       C50364 +
                   ((C7815 * C259 - C50392 * C273 + C7816 * C260 -
                     C50393 * C274 + C7817 * C262 - C7812 * C281) *
                        C121 +
                    (C7815 * C277 - C50392 * C289 + C7816 * C278 -
                     C50393 * C290 + C7817 * C282 - C7812 * C292) *
                        C50222) *
                       C50260) *
                      C50125 * C50161) *
                     C897)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C121 +
                   (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50222) *
                      C50364 +
                  ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                   (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                      C50260) *
                     C50125 * C964 +
                 (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                   (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                      C50364 +
                  ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                   (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                      C50260) *
                     C50125 * C965 +
                 (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                   (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                      C50364 +
                  ((C8925 - C8926 + C8927 - C8928 + C8929 - C8930) * C121 +
                   (C8931 - C8932 + C8933 - C8934 + C8935 - C8936) * C50222) *
                      C50260) *
                     C50125 * C966 +
                 (((C8926 - C8925 + C8928 - C8927 + C8930 - C8929) * C121 +
                   (C8932 - C8931 + C8934 - C8933 + C8936 - C8935) * C50222) *
                      C50364 +
                  ((C7815 * C2310 - C50392 * C2313 + C7816 * C2311 -
                    C50393 * C2314 + C7817 * C2312 - C7812 * C2317) *
                       C121 +
                   (C7815 * C2315 - C50392 * C2319 + C7816 * C2316 -
                    C50393 * C2320 + C7817 * C2318 - C7812 * C2321) *
                       C50222) *
                      C50260) *
                     C50125 * C967) *
                C50090) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
               C7812 * C131 - C7817 * C124) *
                  C121 +
              (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
               C7812 * C145 - C7817 * C135) *
                  C50222) *
                 C50364 +
             ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
              (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                 C50260) *
                C1544 +
            (((C7815 * C394 - C50392 * C404 + C7816 * C395 - C50393 * C405 +
               C7817 * C396 - C7812 * C406) *
                  C121 +
              (C7815 * C408 - C50392 * C424 + C7816 * C409 - C50393 * C425 +
               C7817 * C410 - C7812 * C426) *
                  C50222) *
                 C50364 +
             ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
              (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
              (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                 C50364 +
             ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
              (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                 C50260) *
                C1544 +
            (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
              (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                 C50364 +
             ((C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C121 +
              (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
               C7817 * C125 - C7812 * C132) *
                  C121 +
              (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
               C7817 * C136 - C7812 * C146) *
                  C50222) *
                 C50364 +
             ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
              (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                 C50260) *
                C1544 +
            (((C50392 * C405 - C7815 * C395 + C50393 * C406 - C7816 * C396 +
               C7812 * C407 - C7817 * C397) *
                  C121 +
              (C50392 * C425 - C7815 * C409 + C50393 * C426 - C7816 * C410 +
               C7812 * C427 - C7817 * C411) *
                  C50222) *
                 C50364 +
             ((C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C121 +
              (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C121 +
              (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50222) *
                 C50364 +
             ((C8001 - C8002 + C8003 - C8004 + C8005 - C8006) * C121 +
              (C8007 - C8008 + C8009 - C8010 + C8011 - C8012) * C50222) *
                 C50260) *
                C1544 +
            (((C8670 - C8669 + C8672 - C8671 + C8674 - C8673) * C121 +
              (C8676 - C8675 + C8678 - C8677 + C8680 - C8679) * C50222) *
                 C50364 +
             ((C7815 * C1431 - C50392 * C1435 + C7816 * C1432 - C50393 * C1436 +
               C7817 * C1433 - C7812 * C1437) *
                  C121 +
              (C7815 * C1439 - C50392 * C1443 + C7816 * C1440 - C50393 * C1444 +
               C7817 * C1441 - C7812 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C50398 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50399 +
                   (((C50392 * C412 - C7815 * C398 + C50393 * C413 -
                      C7816 * C399 + C7812 * C414 - C7817 * C400) *
                         C121 +
                     (C50392 * C428 - C7815 * C416 + C50393 * C429 -
                      C7816 * C417 + C7812 * C430 - C7817 * C418) *
                         C50222) *
                        C50364 +
                    ((C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C121 +
                     (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50222) *
                        C50260) *
                       C1960) *
                      C50351 +
                  ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                     (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                        C50364 +
                    ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                     (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                        C50260) *
                       C50398 +
                   (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                     (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                        C50364 +
                    ((C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C121 +
                     (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50222) *
                        C50260) *
                       C50399 +
                   (((C9084 - C9083 + C9086 - C9085 + C9088 - C9087) * C121 +
                     (C9090 - C9089 + C9092 - C9091 + C9094 - C9093) * C50222) *
                        C50364 +
                    ((C7815 * C2534 - C50392 * C2537 + C7816 * C2535 -
                      C50393 * C2538 + C7817 * C2536 - C7812 * C2541) *
                         C121 +
                     (C7815 * C2539 - C50392 * C2543 + C7816 * C2540 -
                      C50393 * C2544 + C7817 * C2542 - C7812 * C2545) *
                         C50222) *
                        C50260) *
                       C1960) *
                      C50161) *
                 C50090) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C1544 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50189) *
                      C248 +
                  ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                     (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                        C50364 +
                    ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                     (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                        C50260) *
                       C1544 +
                   (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                     (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                        C50364 +
                    ((C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C121 +
                     (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50222) *
                        C50260) *
                       C50189) *
                      C249 +
                  ((((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                     (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                        C50364 +
                    ((C8925 - C8926 + C8927 - C8928 + C8929 - C8930) * C121 +
                     (C8931 - C8932 + C8933 - C8934 + C8935 - C8936) * C50222) *
                        C50260) *
                       C1544 +
                   (((C9582 - C9581 + C9584 - C9583 + C9586 - C9585) * C121 +
                     (C9588 - C9587 + C9590 - C9589 + C9592 - C9591) * C50222) *
                        C50364 +
                    ((C7815 * C3048 - C50392 * C3051 + C7816 * C3049 -
                      C50393 * C3052 + C7817 * C3050 - C7812 * C3055) *
                         C121 +
                     (C7815 * C3053 - C50392 * C3057 + C7816 * C3054 -
                      C50393 * C3058 + C7817 * C3056 - C7812 * C3059) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C250) *
                 C50090) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C1544 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50189) *
                      C50109 * C895 +
                  ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                      C50393 * C131 + C7817 * C125 - C7812 * C132) *
                         C121 +
                     (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                      C50393 * C145 + C7817 * C136 - C7812 * C146) *
                         C50222) *
                        C50364 +
                    ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                     (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                        C50260) *
                       C1544 +
                   (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                      C7816 * C396 + C7812 * C407 - C7817 * C397) *
                         C121 +
                     (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                      C7816 * C410 + C7812 * C427 - C7817 * C411) *
                         C50222) *
                        C50364 +
                    ((C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C121 +
                     (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50222) *
                        C50260) *
                       C50189) *
                      C50109 * C896 +
                  ((((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                      C7816 * C125 + C7812 * C137 - C7817 * C126) *
                         C121 +
                     (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                      C7816 * C136 + C7812 * C147 - C7817 * C138) *
                         C50222) *
                        C50364 +
                    ((C8305 - C8306 + C8307 - C8308 + C8309 - C8310) * C121 +
                     (C8311 - C8312 + C8313 - C8314 + C8315 - C8316) * C50222) *
                        C50260) *
                       C1544 +
                   (((C7815 * C396 - C50392 * C406 + C7816 * C397 -
                      C50393 * C407 + C7817 * C402 - C7812 * C420) *
                         C121 +
                     (C7815 * C410 - C50392 * C426 + C7816 * C411 -
                      C50393 * C427 + C7817 * C421 - C7812 * C432) *
                         C50222) *
                        C50364 +
                    ((C7815 * C777 - C50392 * C782 + C7816 * C778 -
                      C50393 * C783 + C7817 * C779 - C7812 * C788) *
                         C121 +
                     (C7815 * C786 - C50392 * C792 + C7816 * C787 -
                      C50393 * C793 + C7817 * C789 - C7812 * C794) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C50109 * C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C121 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50222) *
                       C50364 +
                   ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                    (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                       C50260) *
                      C1710 +
                  (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                     C50393 * C405 + C7817 * C396 - C7812 * C406) *
                        C121 +
                    (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                     C50393 * C425 + C7817 * C410 - C7812 * C426) *
                        C50222) *
                       C50364 +
                   ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                    (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                       C50260) *
                      C1711 +
                  (((C50392 * C412 - C7815 * C398 + C50393 * C413 -
                     C7816 * C399 + C7812 * C414 - C7817 * C400) *
                        C121 +
                    (C50392 * C428 - C7815 * C416 + C50393 * C429 -
                     C7816 * C417 + C7812 * C430 - C7817 * C418) *
                        C50222) *
                       C50364 +
                   ((C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C121 +
                    (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50222) *
                       C50260) *
                      C1712 +
                  (((C7815 * C1714 - C50392 * C1718 + C7816 * C1715 -
                     C50393 * C1719 + C7817 * C1716 - C7812 * C1720) *
                        C121 +
                    (C7815 * C1722 - C50392 * C1726 + C7816 * C1723 -
                     C50393 * C1727 + C7817 * C1724 - C7812 * C1728) *
                        C50222) *
                       C50364 +
                   ((C7815 * C4432 - C50392 * C4436 + C7816 * C4433 -
                     C50393 * C4437 + C7817 * C5904 - C7812 * C5905) *
                        C121 +
                    (C7815 * C4438 - C50392 * C4444 + C7816 * C4439 -
                     C50393 * C4445 + C7817 * C5906 - C7812 * C5907) *
                        C50222) *
                       C50260) *
                      C1713) *
                 C50109 * C50090) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C50398 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50399 +
                   (((C50392 * C412 - C7815 * C398 + C50393 * C413 -
                      C7816 * C399 + C7812 * C414 - C7817 * C400) *
                         C121 +
                     (C50392 * C428 - C7815 * C416 + C50393 * C429 -
                      C7816 * C417 + C7812 * C430 - C7817 * C418) *
                         C50222) *
                        C50364 +
                    ((C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C121 +
                     (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50222) *
                        C50260) *
                       C1960) *
                      C50109 * C50343 +
                  ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                      C50393 * C131 + C7817 * C125 - C7812 * C132) *
                         C121 +
                     (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                      C50393 * C145 + C7817 * C136 - C7812 * C146) *
                         C50222) *
                        C50364 +
                    ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                     (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                        C50260) *
                       C50398 +
                   (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                      C7816 * C396 + C7812 * C407 - C7817 * C397) *
                         C121 +
                     (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                      C7816 * C410 + C7812 * C427 - C7817 * C411) *
                         C50222) *
                        C50364 +
                    ((C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C121 +
                     (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50222) *
                        C50260) *
                       C50399 +
                   (((C7815 * C399 - C50392 * C413 + C7816 * C400 -
                      C50393 * C414 + C7817 * C401 - C7812 * C415) *
                         C121 +
                     (C7815 * C417 - C50392 * C429 + C7816 * C418 -
                      C50393 * C430 + C7817 * C419 - C7812 * C431) *
                         C50222) *
                        C50364 +
                    ((C7815 * C1084 - C50392 * C1088 + C7816 * C1085 -
                      C50393 * C1089 + C7817 * C1086 - C7812 * C1090) *
                         C121 +
                     (C7815 * C1092 - C50392 * C1096 + C7816 * C1093 -
                      C50393 * C1097 + C7817 * C1094 - C7812 * C1098) *
                         C50222) *
                        C50260) *
                       C1960) *
                      C50109 * C50096)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C1544 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50189) *
                      C50109 * C895 +
                  ((((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                      C50393 * C131 + C7817 * C125 - C7812 * C132) *
                         C121 +
                     (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                      C50393 * C145 + C7817 * C136 - C7812 * C146) *
                         C50222) *
                        C50364 +
                    ((C7989 - C7990 + C7991 - C7992 + C7993 - C7994) * C121 +
                     (C7995 - C7996 + C7997 - C7998 + C7999 - C8000) * C50222) *
                        C50260) *
                       C1544 +
                   (((C50392 * C405 - C7815 * C395 + C50393 * C406 -
                      C7816 * C396 + C7812 * C407 - C7817 * C397) *
                         C121 +
                     (C50392 * C425 - C7815 * C409 + C50393 * C426 -
                      C7816 * C410 + C7812 * C427 - C7817 * C411) *
                         C50222) *
                        C50364 +
                    ((C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C121 +
                     (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50222) *
                        C50260) *
                       C50189) *
                      C50109 * C896 +
                  ((((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                      C7816 * C125 + C7812 * C137 - C7817 * C126) *
                         C121 +
                     (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                      C7816 * C136 + C7812 * C147 - C7817 * C138) *
                         C50222) *
                        C50364 +
                    ((C8305 - C8306 + C8307 - C8308 + C8309 - C8310) * C121 +
                     (C8311 - C8312 + C8313 - C8314 + C8315 - C8316) * C50222) *
                        C50260) *
                       C1544 +
                   (((C7815 * C396 - C50392 * C406 + C7816 * C397 -
                      C50393 * C407 + C7817 * C402 - C7812 * C420) *
                         C121 +
                     (C7815 * C410 - C50392 * C426 + C7816 * C411 -
                      C50393 * C427 + C7817 * C421 - C7812 * C432) *
                         C50222) *
                        C50364 +
                    ((C7815 * C777 - C50392 * C782 + C7816 * C778 -
                      C50393 * C783 + C7817 * C779 - C7812 * C788) *
                         C121 +
                     (C7815 * C786 - C50392 * C792 + C7816 * C787 -
                      C50393 * C793 + C7817 * C789 - C7812 * C794) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C50109 * C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                      C7816 * C123 + C7812 * C131 - C7817 * C124) *
                         C121 +
                     (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                      C7816 * C134 + C7812 * C145 - C7817 * C135) *
                         C50222) *
                        C50364 +
                    ((C7965 - C7966 + C7967 - C7968 + C7969 - C7970) * C121 +
                     (C7971 - C7972 + C7973 - C7974 + C7975 - C7976) * C50222) *
                        C50260) *
                       C1544 +
                   (((C7815 * C394 - C50392 * C404 + C7816 * C395 -
                      C50393 * C405 + C7817 * C396 - C7812 * C406) *
                         C121 +
                     (C7815 * C408 - C50392 * C424 + C7816 * C409 -
                      C50393 * C425 + C7817 * C410 - C7812 * C426) *
                         C50222) *
                        C50364 +
                    ((C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C121 +
                     (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50222) *
                        C50260) *
                       C50189) *
                      C248 +
                  ((((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C121 +
                     (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50222) *
                        C50364 +
                    ((C7977 - C7978 + C7979 - C7980 + C7981 - C7982) * C121 +
                     (C7983 - C7984 + C7985 - C7986 + C7987 - C7988) * C50222) *
                        C50260) *
                       C1544 +
                   (((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C121 +
                     (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50222) *
                        C50364 +
                    ((C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C121 +
                     (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50222) *
                        C50260) *
                       C50189) *
                      C249 +
                  ((((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C121 +
                     (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50222) *
                        C50364 +
                    ((C8925 - C8926 + C8927 - C8928 + C8929 - C8930) * C121 +
                     (C8931 - C8932 + C8933 - C8934 + C8935 - C8936) * C50222) *
                        C50260) *
                       C1544 +
                   (((C9582 - C9581 + C9584 - C9583 + C9586 - C9585) * C121 +
                     (C9588 - C9587 + C9590 - C9589 + C9592 - C9591) * C50222) *
                        C50364 +
                    ((C7815 * C3048 - C50392 * C3051 + C7816 * C3049 -
                      C50393 * C3052 + C7817 * C3050 - C7812 * C3055) *
                         C121 +
                     (C7815 * C3053 - C50392 * C3057 + C7816 * C3054 -
                      C50393 * C3058 + C7817 * C3056 - C7812 * C3059) *
                         C50222) *
                        C50260) *
                       C50189) *
                      C250) *
                 C50090) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 +
             (C3062 - C3061 + C3064 - C3063) * C10569 +
             (C3066 - C3065 + C3068 - C3067) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 +
             (C3061 - C3062 + C3063 - C3064) * C10569 +
             (C3065 - C3066 + C3067 - C3068) * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 +
             (C3078 - C3077 + C3080 - C3079) * C10569 +
             (C3082 - C3081 + C3084 - C3083) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C2348 - C2347 + C2350 - C2349) * C10568 +
             (C2352 - C2351 + C2354 - C2353) * C50365 +
             (C3077 - C3078 + C3079 - C3080) * C10569 +
             (C3081 - C3082 + C3083 - C3084) * C50286) *
                C50364 +
            ((C2356 - C2355 + C2358 - C2357) * C10568 +
             (C2360 - C2359 + C2362 - C2361) * C50365 +
             (C3085 - C3086 + C3087 - C3088) * C10569 +
             (C3089 - C3090 + C3091 - C3092) * C50286) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C10568 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50365 +
             (C5695 - C5696 + C5697 - C5698) * C10569 +
             (C5699 - C5700 + C5701 - C5702) * C50286) *
                C50364 +
            ((C2693 - C2694 + C2695 - C2696) * C10568 +
             (C2697 - C2698 + C2699 - C2700) * C50365 +
             (C13885 - C13886 + C13887 - C13888) * C10569 +
             (C13889 - C13890 + C13891 - C13892) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C2694 - C2693 + C2696 - C2695) * C10568 +
             (C2698 - C2697 + C2700 - C2699) * C50365 +
             (C13886 - C13885 + C13888 - C13887) * C10569 +
             (C13890 - C13889 + C13892 - C13891) * C50286) *
                C50364 +
            ((C2702 - C2701 + C2704 - C2703) * C10568 +
             (C2706 - C2705 + C2708 - C2707) * C50365 +
             (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C10569 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C10568 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50365 +
              (C5343 - C5344 + C5345 - C5346) * C10569 +
              (C5347 - C5348 + C5349 - C5350) * C50286) *
                 C50364 +
             ((C2323 - C2324 + C2325 - C2326) * C10568 +
              (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
              C14362 * C50286) *
                 C50260) *
                C50352 +
            (((C5344 - C5343 + C5346 - C5345) * C10568 +
              (C5348 - C5347 + C5350 - C5349) * C50365 +
              (C5352 - C5351 + C5354 - C5353) * C10569 +
              (C5356 - C5355 + C5358 - C5357) * C50286) *
                 C50364 +
             (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
              C6328 * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2324 - C2323 + C2326 - C2325) * C10568 +
              (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
              C14364 * C50286) *
                 C50364 +
             ((C2332 - C2331 + C2334 - C2333) * C10568 +
              (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
              C4039 * C50286) *
                 C50260) *
                C50352 +
            ((C14361 * C10568 + C14362 * C50365 +
              (C3516 - C3517 + C3518 - C3519) * C10569 +
              (C3520 - C3521 + C3522 - C3523) * C50286) *
                 C50364 +
             ((C3070 - C3069 + C3072 - C3071) * C10568 +
              (C3074 - C3073 + C3076 - C3075) * C50365 +
              (C3524 - C3525 + C3526 - C3527) * C10569 +
              (C3528 - C3529 + C3530 - C3531) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C10568 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50365 +
              (C5367 - C5368 + C5369 - C5370) * C10569 +
              (C5371 - C5372 + C5373 - C5374) * C50286) *
                 C50364 +
             ((C2347 - C2348 + C2349 - C2350) * C10568 +
              (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
              C14366 * C50286) *
                 C50260) *
                C50352 +
            (((C5368 - C5367 + C5370 - C5369) * C10568 +
              (C5372 - C5371 + C5374 - C5373) * C50365 +
              (C5376 - C5375 + C5378 - C5377) * C10569 +
              (C5380 - C5379 + C5382 - C5381) * C50286) *
                 C50364 +
             (C14367 * C10568 + C14368 * C50365 +
              (C5909 - C5910 + C5911 - C5912) * C10569 +
              (C5913 - C5914 + C5915 - C5916) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2348 - C2347 + C2350 - C2349) * C10568 +
              (C2352 - C2351 + C2354 - C2353) * C50365 + C14367 * C10569 +
              C14368 * C50286) *
                 C50364 +
             ((C2356 - C2355 + C2358 - C2357) * C10568 +
              (C2360 - C2359 + C2362 - C2361) * C50365 +
              (C3085 - C3086 + C3087 - C3088) * C10569 +
              (C3089 - C3090 + C3091 - C3092) * C50286) *
                 C50260) *
                C50352 +
            ((C14365 * C10568 + C14366 * C50365 +
              (C5910 - C5909 + C5912 - C5911) * C10569 +
              (C5914 - C5913 + C5916 - C5915) * C50286) *
                 C50364 +
             ((C3086 - C3085 + C3088 - C3087) * C10568 +
              (C3090 - C3089 + C3092 - C3091) * C50365 +
              (C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                  C10569 +
              (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 +
             (C3062 - C3061 + C3064 - C3063) * C10569 +
             (C3066 - C3065 + C3068 - C3067) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 +
             (C3061 - C3062 + C3063 - C3064) * C10569 +
             (C3065 - C3066 + C3067 - C3068) * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50125 * C249 +
           ((C2379 * C10568 + C2380 * C50365 +
             (C3070 - C3069 + C3072 - C3071) * C10569 +
             (C3074 - C3073 + C3076 - C3075) * C50286) *
                C50364 +
            ((C2340 - C2339 + C2342 - C2341) * C10568 +
             (C2344 - C2343 + C2346 - C2345) * C50365 +
             (C4030 - C4031 + C4032 - C4033) * C10569 +
             (C4034 - C4035 + C4036 - C4037) * C50286) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 +
             (C3078 - C3077 + C3080 - C3079) * C10569 +
             (C3082 - C3081 + C3084 - C3083) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C2348 - C2347 + C2350 - C2349) * C10568 +
             (C2352 - C2351 + C2354 - C2353) * C50365 +
             (C3077 - C3078 + C3079 - C3080) * C10569 +
             (C3081 - C3082 + C3083 - C3084) * C50286) *
                C50364 +
            ((C2356 - C2355 + C2358 - C2357) * C10568 +
             (C2360 - C2359 + C2362 - C2361) * C50365 +
             (C3085 - C3086 + C3087 - C3088) * C10569 +
             (C3089 - C3090 + C3091 - C3092) * C50286) *
                C50260) *
               C50125 * C249 +
           ((C2381 * C10568 + C2382 * C50365 +
             (C3086 - C3085 + C3088 - C3087) * C10569 +
             (C3090 - C3089 + C3092 - C3091) * C50286) *
                C50364 +
            ((C2364 - C2363 + C2366 - C2365) * C10568 +
             (C2368 - C2367 + C2370 - C2369) * C50365 +
             (C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                 C10569 +
             (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C10568 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50365 +
            (C5343 - C5344 + C5345 - C5346) * C10569 +
            (C5347 - C5348 + C5349 - C5350) * C50286) *
               C50364 +
           ((C2323 - C2324 + C2325 - C2326) * C10568 +
            (C2327 - C2328 + C2329 - C2330) * C50365 +
            (C3062 - C3061 + C3064 - C3063) * C10569 +
            (C3066 - C3065 + C3068 - C3067) * C50286) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C10568 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C50365 +
            (C5367 - C5368 + C5369 - C5370) * C10569 +
            (C5371 - C5372 + C5373 - C5374) * C50286) *
               C50364 +
           ((C2347 - C2348 + C2349 - C2350) * C10568 +
            (C2351 - C2352 + C2353 - C2354) * C50365 +
            (C3078 - C3077 + C3080 - C3079) * C10569 +
            (C3082 - C3081 + C3084 - C3083) * C50286) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C10568 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C50365 +
            (C5695 - C5696 + C5697 - C5698) * C10569 +
            (C5699 - C5700 + C5701 - C5702) * C50286) *
               C50364 +
           ((C2693 - C2694 + C2695 - C2696) * C10568 +
            (C2697 - C2698 + C2699 - C2700) * C50365 +
            (C2157 * C782 - C2162 * C777 + C50065 * C783 - C2163 * C778) *
                C10569 +
            (C2157 * C792 - C2162 * C786 + C50065 * C793 - C2163 * C787) *
                C50286) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
                C10568 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
                C50365 +
            (C2162 * C397 - C2157 * C407 + C2163 * C402 - C50065 * C420) *
                C10569 +
            (C2162 * C411 - C2157 * C427 + C2163 * C421 - C50065 * C432) *
                C50286) *
               C50364 +
           ((C2162 * C256 - C2157 * C266 + C2163 * C261 - C50065 * C279) *
                C10568 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C50065 * C291) *
                C50365 +
            (C2162 * C778 - C2157 * C783 + C2163 * C779 - C50065 * C788) *
                C10569 +
            (C2162 * C787 - C2157 * C793 + C2163 * C789 - C50065 * C794) *
                C50286) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 +
             (C3062 - C3061 + C3064 - C3063) * C10569 +
             (C3066 - C3065 + C3068 - C3067) * C50286) *
                C50260) *
               C391 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            ((C3061 - C3062 + C3063 - C3064) * C10568 +
             (C3065 - C3066 + C3067 - C3068) * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C392 +
           ((C5399 * C10568 + C5400 * C50365 +
             (C5360 - C5359 + C5362 - C5361) * C10569 +
             (C5364 - C5363 + C5366 - C5365) * C50286) *
                C50364 +
            ((C3516 - C3517 + C3518 - C3519) * C10568 +
             (C3520 - C3521 + C3522 - C3523) * C50365 +
             (C6319 - C6320 + C6321 - C6322) * C10569 +
             (C6323 - C6324 + C6325 - C6326) * C50286) *
                C50260) *
               C393) *
              C50109 * C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 +
             (C3078 - C3077 + C3080 - C3079) * C10569 +
             (C3082 - C3081 + C3084 - C3083) * C50286) *
                C50260) *
               C391 +
           (((C5368 - C5367 + C5370 - C5369) * C10568 +
             (C5372 - C5371 + C5374 - C5373) * C50365 +
             (C5376 - C5375 + C5378 - C5377) * C10569 +
             (C5380 - C5379 + C5382 - C5381) * C50286) *
                C50364 +
            ((C3077 - C3078 + C3079 - C3080) * C10568 +
             (C3081 - C3082 + C3083 - C3084) * C50365 +
             (C5909 - C5910 + C5911 - C5912) * C10569 +
             (C5913 - C5914 + C5915 - C5916) * C50286) *
                C50260) *
               C392 +
           ((C5401 * C10568 + C5402 * C50365 +
             (C5384 - C5383 + C5386 - C5385) * C10569 +
             (C5388 - C5387 + C5390 - C5389) * C50286) *
                C50364 +
            ((C5910 - C5909 + C5912 - C5911) * C10568 +
             (C5914 - C5913 + C5916 - C5915) * C50365 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C5904 - C50065 * C5905) *
                 C10569 +
             (C2162 * C4439 - C2157 * C4445 + C2163 * C5906 - C50065 * C5907) *
                 C50286) *
                C50260) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 +
             (C3062 - C3061 + C3064 - C3063) * C10569 +
             (C3066 - C3065 + C3068 - C3067) * C50286) *
                C50260) *
               C50352 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            ((C3061 - C3062 + C3063 - C3064) * C10568 +
             (C3065 - C3066 + C3067 - C3068) * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 +
             (C3078 - C3077 + C3080 - C3079) * C10569 +
             (C3082 - C3081 + C3084 - C3083) * C50286) *
                C50260) *
               C50352 +
           (((C5368 - C5367 + C5370 - C5369) * C10568 +
             (C5372 - C5371 + C5374 - C5373) * C50365 +
             (C5376 - C5375 + C5378 - C5377) * C10569 +
             (C5380 - C5379 + C5382 - C5381) * C50286) *
                C50364 +
            ((C3077 - C3078 + C3079 - C3080) * C10568 +
             (C3081 - C3082 + C3083 - C3084) * C50365 +
             (C5909 - C5910 + C5911 - C5912) * C10569 +
             (C5913 - C5914 + C5915 - C5916) * C50286) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C10568 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50365 +
             (C5695 - C5696 + C5697 - C5698) * C10569 +
             (C5699 - C5700 + C5701 - C5702) * C50286) *
                C50364 +
            ((C2693 - C2694 + C2695 - C2696) * C10568 +
             (C2697 - C2698 + C2699 - C2700) * C50365 +
             (C13885 - C13886 + C13887 - C13888) * C10569 +
             (C13889 - C13890 + C13891 - C13892) * C50286) *
                C50260) *
               C50352 +
           (((C5696 - C5695 + C5698 - C5697) * C10568 +
             (C5700 - C5699 + C5702 - C5701) * C50365 +
             (C5704 - C5703 + C5706 - C5705) * C10569 +
             (C5708 - C5707 + C5710 - C5709) * C50286) *
                C50364 +
            ((C13886 - C13885 + C13888 - C13887) * C10568 +
             (C13890 - C13889 + C13892 - C13891) * C50365 +
             (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C50065 * C1090) *
                 C10569 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C10568 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50365 +
            (C5343 - C5344 + C5345 - C5346) * C10569 +
            (C5347 - C5348 + C5349 - C5350) * C50286) *
               C50364 +
           ((C2323 - C2324 + C2325 - C2326) * C10568 +
            (C2327 - C2328 + C2329 - C2330) * C50365 +
            (C3062 - C3061 + C3064 - C3063) * C10569 +
            (C3066 - C3065 + C3068 - C3067) * C50286) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C10568 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C50365 +
            (C5367 - C5368 + C5369 - C5370) * C10569 +
            (C5371 - C5372 + C5373 - C5374) * C50286) *
               C50364 +
           ((C2347 - C2348 + C2349 - C2350) * C10568 +
            (C2351 - C2352 + C2353 - C2354) * C50365 +
            (C3078 - C3077 + C3080 - C3079) * C10569 +
            (C3082 - C3081 + C3084 - C3083) * C50286) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C10568 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C50365 +
            (C5695 - C5696 + C5697 - C5698) * C10569 +
            (C5699 - C5700 + C5701 - C5702) * C50286) *
               C50364 +
           ((C2693 - C2694 + C2695 - C2696) * C10568 +
            (C2697 - C2698 + C2699 - C2700) * C50365 +
            (C2157 * C782 - C2162 * C777 + C50065 * C783 - C2163 * C778) *
                C10569 +
            (C2157 * C792 - C2162 * C786 + C50065 * C793 - C2163 * C787) *
                C50286) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
                C10568 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
                C50365 +
            (C2162 * C397 - C2157 * C407 + C2163 * C402 - C50065 * C420) *
                C10569 +
            (C2162 * C411 - C2157 * C427 + C2163 * C421 - C50065 * C432) *
                C50286) *
               C50364 +
           ((C2162 * C256 - C2157 * C266 + C2163 * C261 - C50065 * C279) *
                C10568 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C50065 * C291) *
                C50365 +
            (C2162 * C778 - C2157 * C783 + C2163 * C779 - C50065 * C788) *
                C10569 +
            (C2162 * C787 - C2157 * C793 + C2163 * C789 - C50065 * C794) *
                C50286) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 +
             (C3062 - C3061 + C3064 - C3063) * C10569 +
             (C3066 - C3065 + C3068 - C3067) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 +
             (C3061 - C3062 + C3063 - C3064) * C10569 +
             (C3065 - C3066 + C3067 - C3068) * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50125 * C249 +
           ((C2379 * C10568 + C2380 * C50365 +
             (C3070 - C3069 + C3072 - C3071) * C10569 +
             (C3074 - C3073 + C3076 - C3075) * C50286) *
                C50364 +
            ((C2340 - C2339 + C2342 - C2341) * C10568 +
             (C2344 - C2343 + C2346 - C2345) * C50365 +
             (C4030 - C4031 + C4032 - C4033) * C10569 +
             (C4034 - C4035 + C4036 - C4037) * C50286) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 +
             (C3078 - C3077 + C3080 - C3079) * C10569 +
             (C3082 - C3081 + C3084 - C3083) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C2348 - C2347 + C2350 - C2349) * C10568 +
             (C2352 - C2351 + C2354 - C2353) * C50365 +
             (C3077 - C3078 + C3079 - C3080) * C10569 +
             (C3081 - C3082 + C3083 - C3084) * C50286) *
                C50364 +
            ((C2356 - C2355 + C2358 - C2357) * C10568 +
             (C2360 - C2359 + C2362 - C2361) * C50365 +
             (C3085 - C3086 + C3087 - C3088) * C10569 +
             (C3089 - C3090 + C3091 - C3092) * C50286) *
                C50260) *
               C50125 * C249 +
           ((C2381 * C10568 + C2382 * C50365 +
             (C3086 - C3085 + C3088 - C3087) * C10569 +
             (C3090 - C3089 + C3092 - C3091) * C50286) *
                C50364 +
            ((C2364 - C2363 + C2366 - C2365) * C10568 +
             (C2368 - C2367 + C2370 - C2369) * C50365 +
             (C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                 C10569 +
             (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C50125 * C50396 +
           (((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50125 * C50397 +
           ((C2379 * C10568 + C2380 * C50365 +
             (C3070 - C3069 + C3072 - C3071) * C10569 +
             (C3074 - C3073 + C3076 - C3075) * C50286) *
                C50364 +
            ((C2340 - C2339 + C2342 - C2341) * C10568 +
             (C2344 - C2343 + C2346 - C2345) * C50365 +
             (C4030 - C4031 + C4032 - C4033) * C10569 +
             (C4034 - C4035 + C4036 - C4037) * C50286) *
                C50260) *
               C50125 * C1199) *
              C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
             C14366 * C50286) *
                C50260) *
               C50125 * C50396 +
           (((C2348 - C2347 + C2350 - C2349) * C10568 +
             (C2352 - C2351 + C2354 - C2353) * C50365 + C14367 * C10569 +
             C14368 * C50286) *
                C50364 +
            ((C2356 - C2355 + C2358 - C2357) * C10568 +
             (C2360 - C2359 + C2362 - C2361) * C50365 +
             (C3085 - C3086 + C3087 - C3088) * C10569 +
             (C3089 - C3090 + C3091 - C3092) * C50286) *
                C50260) *
               C50125 * C50397 +
           ((C2381 * C10568 + C2382 * C50365 +
             (C3086 - C3085 + C3088 - C3087) * C10569 +
             (C3090 - C3089 + C3092 - C3091) * C50286) *
                C50364 +
            ((C2364 - C2363 + C2366 - C2365) * C10568 +
             (C2368 - C2367 + C2370 - C2369) * C50365 +
             (C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                 C10569 +
             (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C1199) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C50352 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50189) *
              C50396 +
          ((((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50352 +
           ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
             C14892 * C50286) *
                C50364 +
            (C15543 * C10568 + C15544 * C50365 +
             (C3524 - C3525 + C3526 - C3527) * C10569 +
             (C3528 - C3529 + C3530 - C3531) * C50286) *
                C50260) *
               C50189) *
              C50397 +
          (((C2379 * C10568 + C2380 * C50365 + C15543 * C10569 +
             C15544 * C50286) *
                C50364 +
            ((C2340 - C2339 + C2342 - C2341) * C10568 +
             (C2344 - C2343 + C2346 - C2345) * C50365 +
             (C4030 - C4031 + C4032 - C4033) * C10569 +
             (C4034 - C4035 + C4036 - C4037) * C50286) *
                C50260) *
               C50352 +
           ((C4038 * C10568 + C4039 * C50365 +
             (C3525 - C3524 + C3527 - C3526) * C10569 +
             (C3529 - C3528 + C3531 - C3530) * C50286) *
                C50364 +
            ((C4031 - C4030 + C4033 - C4032) * C10568 +
             (C4035 - C4034 + C4037 - C4036) * C50365 +
             (C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C10569 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C1199) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C10568 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50365 +
            (C5343 - C5344 + C5345 - C5346) * C10569 +
            (C5347 - C5348 + C5349 - C5350) * C50286) *
               C50364 +
           ((C2323 - C2324 + C2325 - C2326) * C10568 +
            (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
            C14362 * C50286) *
               C50260) *
              C50125 * C964 +
          (((C2324 - C2323 + C2326 - C2325) * C10568 +
            (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
            C14364 * C50286) *
               C50364 +
           ((C2332 - C2331 + C2334 - C2333) * C10568 +
            (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
            C4039 * C50286) *
               C50260) *
              C50125 * C965 +
          ((C2379 * C10568 + C2380 * C50365 +
            (C3070 - C3069 + C3072 - C3071) * C10569 +
            (C3074 - C3073 + C3076 - C3075) * C50286) *
               C50364 +
           ((C2340 - C2339 + C2342 - C2341) * C10568 +
            (C2344 - C2343 + C2346 - C2345) * C50365 +
            (C4030 - C4031 + C4032 - C4033) * C10569 +
            (C4034 - C4035 + C4036 - C4037) * C50286) *
               C50260) *
              C50125 * C966 +
          ((C3357 * C10568 + C3358 * C50365 +
            (C4031 - C4030 + C4033 - C4032) * C10569 +
            (C4035 - C4034 + C4037 - C4036) * C50286) *
               C50364 +
           ((C3350 - C3349 + C3352 - C3351) * C10568 +
            (C3354 - C3353 + C3356 - C3355) * C50365 +
            (C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                C10569 +
            (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                C50286) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
             C14366 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C2348 - C2347 + C2350 - C2349) * C10568 +
             (C2352 - C2351 + C2354 - C2353) * C50365 + C14367 * C10569 +
             C14368 * C50286) *
                C50364 +
            ((C2356 - C2355 + C2358 - C2357) * C10568 +
             (C2360 - C2359 + C2362 - C2361) * C50365 +
             (C3085 - C3086 + C3087 - C3088) * C10569 +
             (C3089 - C3090 + C3091 - C3092) * C50286) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C10568 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50365 +
             (C5695 - C5696 + C5697 - C5698) * C10569 +
             (C5699 - C5700 + C5701 - C5702) * C50286) *
                C50364 +
            ((C2693 - C2694 + C2695 - C2696) * C10568 +
             (C2697 - C2698 + C2699 - C2700) * C50365 +
             (C13885 - C13886 + C13887 - C13888) * C10569 +
             (C13889 - C13890 + C13891 - C13892) * C50286) *
                C50260) *
               C50125 * C893 +
           (((C2694 - C2693 + C2696 - C2695) * C10568 +
             (C2698 - C2697 + C2700 - C2699) * C50365 +
             (C13886 - C13885 + C13888 - C13887) * C10569 +
             (C13890 - C13889 + C13892 - C13891) * C50286) *
                C50364 +
            ((C2702 - C2701 + C2704 - C2703) * C10568 +
             (C2706 - C2705 + C2708 - C2707) * C50365 +
             (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C10569 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C391 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C392 +
           ((C5399 * C10568 + C5400 * C50365 +
             (C5360 - C5359 + C5362 - C5361) * C10569 +
             (C5364 - C5363 + C5366 - C5365) * C50286) *
                C50364 +
            (C14891 * C10568 + C14892 * C50365 +
             (C6319 - C6320 + C6321 - C6322) * C10569 +
             (C6323 - C6324 + C6325 - C6326) * C50286) *
                C50260) *
               C393) *
              C893 +
          ((((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C391 +
           ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
             C14892 * C50286) *
                C50364 +
            ((C3070 - C3069 + C3072 - C3071) * C10568 +
             (C3074 - C3073 + C3076 - C3075) * C50365 +
             (C3524 - C3525 + C3526 - C3527) * C10569 +
             (C3528 - C3529 + C3530 - C3531) * C50286) *
                C50260) *
               C392 +
           ((C6327 * C10568 + C6328 * C50365 +
             (C6320 - C6319 + C6322 - C6321) * C10569 +
             (C6324 - C6323 + C6326 - C6325) * C50286) *
                C50364 +
            ((C3525 - C3524 + C3527 - C3526) * C10568 +
             (C3529 - C3528 + C3531 - C3530) * C50365 +
             (C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                 C10569 +
             (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                 C50286) *
                C50260) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C10568 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50365 +
              (C5343 - C5344 + C5345 - C5346) * C10569 +
              (C5347 - C5348 + C5349 - C5350) * C50286) *
                 C50364 +
             ((C2323 - C2324 + C2325 - C2326) * C10568 +
              (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
              C14362 * C50286) *
                 C50260) *
                C50352 +
            (((C5344 - C5343 + C5346 - C5345) * C10568 +
              (C5348 - C5347 + C5350 - C5349) * C50365 +
              (C5352 - C5351 + C5354 - C5353) * C10569 +
              (C5356 - C5355 + C5358 - C5357) * C50286) *
                 C50364 +
             (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
              C6328 * C50286) *
                 C50260) *
                C50189) *
               C893 +
           ((((C2324 - C2323 + C2326 - C2325) * C10568 +
              (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
              C14364 * C50286) *
                 C50364 +
             ((C2332 - C2331 + C2334 - C2333) * C10568 +
              (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
              C4039 * C50286) *
                 C50260) *
                C50352 +
            ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
              C14892 * C50286) *
                 C50364 +
             ((C3070 - C3069 + C3072 - C3071) * C10568 +
              (C3074 - C3073 + C3076 - C3075) * C50365 +
              (C3524 - C3525 + C3526 - C3527) * C10569 +
              (C3528 - C3529 + C3530 - C3531) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C10568 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50365 +
              (C5367 - C5368 + C5369 - C5370) * C10569 +
              (C5371 - C5372 + C5373 - C5374) * C50286) *
                 C50364 +
             ((C2347 - C2348 + C2349 - C2350) * C10568 +
              (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
              C14366 * C50286) *
                 C50260) *
                C50352 +
            (((C5368 - C5367 + C5370 - C5369) * C10568 +
              (C5372 - C5371 + C5374 - C5373) * C50365 +
              (C5376 - C5375 + C5378 - C5377) * C10569 +
              (C5380 - C5379 + C5382 - C5381) * C50286) *
                 C50364 +
             (C14367 * C10568 + C14368 * C50365 +
              (C5909 - C5910 + C5911 - C5912) * C10569 +
              (C5913 - C5914 + C5915 - C5916) * C50286) *
                 C50260) *
                C50189) *
               C893 +
           ((((C2348 - C2347 + C2350 - C2349) * C10568 +
              (C2352 - C2351 + C2354 - C2353) * C50365 + C14367 * C10569 +
              C14368 * C50286) *
                 C50364 +
             ((C2356 - C2355 + C2358 - C2357) * C10568 +
              (C2360 - C2359 + C2362 - C2361) * C50365 +
              (C3085 - C3086 + C3087 - C3088) * C10569 +
              (C3089 - C3090 + C3091 - C3092) * C50286) *
                 C50260) *
                C50352 +
            ((C14365 * C10568 + C14366 * C50365 +
              (C5910 - C5909 + C5912 - C5911) * C10569 +
              (C5914 - C5913 + C5916 - C5915) * C50286) *
                 C50364 +
             ((C3086 - C3085 + C3088 - C3087) * C10568 +
              (C3090 - C3089 + C3092 - C3091) * C50365 +
              (C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                  C10569 +
              (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
             C14366 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C2348 - C2347 + C2350 - C2349) * C10568 +
             (C2352 - C2351 + C2354 - C2353) * C50365 + C14367 * C10569 +
             C14368 * C50286) *
                C50364 +
            ((C2356 - C2355 + C2358 - C2357) * C10568 +
             (C2360 - C2359 + C2362 - C2361) * C50365 +
             (C3085 - C3086 + C3087 - C3088) * C10569 +
             (C3089 - C3090 + C3091 - C3092) * C50286) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C10568 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50365 +
             (C5695 - C5696 + C5697 - C5698) * C10569 +
             (C5699 - C5700 + C5701 - C5702) * C50286) *
                C50364 +
            ((C2693 - C2694 + C2695 - C2696) * C10568 +
             (C2697 - C2698 + C2699 - C2700) * C50365 +
             (C13885 - C13886 + C13887 - C13888) * C10569 +
             (C13889 - C13890 + C13891 - C13892) * C50286) *
                C50260) *
               C50125 * C893 +
           (((C2694 - C2693 + C2696 - C2695) * C10568 +
             (C2698 - C2697 + C2700 - C2699) * C50365 +
             (C13886 - C13885 + C13888 - C13887) * C10569 +
             (C13890 - C13889 + C13892 - C13891) * C50286) *
                C50364 +
            ((C2702 - C2701 + C2704 - C2703) * C10568 +
             (C2706 - C2705 + C2708 - C2707) * C50365 +
             (C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C10569 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C10568 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50365 +
            (C5343 - C5344 + C5345 - C5346) * C10569 +
            (C5347 - C5348 + C5349 - C5350) * C50286) *
               C50364 +
           ((C2323 - C2324 + C2325 - C2326) * C10568 +
            (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
            C14362 * C50286) *
               C50260) *
              C50125 * C964 +
          (((C2324 - C2323 + C2326 - C2325) * C10568 +
            (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
            C14364 * C50286) *
               C50364 +
           ((C2332 - C2331 + C2334 - C2333) * C10568 +
            (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
            C4039 * C50286) *
               C50260) *
              C50125 * C965 +
          ((C2379 * C10568 + C2380 * C50365 +
            (C3070 - C3069 + C3072 - C3071) * C10569 +
            (C3074 - C3073 + C3076 - C3075) * C50286) *
               C50364 +
           ((C2340 - C2339 + C2342 - C2341) * C10568 +
            (C2344 - C2343 + C2346 - C2345) * C50365 +
            (C4030 - C4031 + C4032 - C4033) * C10569 +
            (C4034 - C4035 + C4036 - C4037) * C50286) *
               C50260) *
              C50125 * C966 +
          ((C3357 * C10568 + C3358 * C50365 +
            (C4031 - C4030 + C4033 - C4032) * C10569 +
            (C4035 - C4034 + C4037 - C4036) * C50286) *
               C50364 +
           ((C3350 - C3349 + C3352 - C3351) * C10568 +
            (C3354 - C3353 + C3356 - C3355) * C50365 +
            (C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                C10569 +
            (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                C50286) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C10568 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50365 +
              (C5343 - C5344 + C5345 - C5346) * C10569 +
              (C5347 - C5348 + C5349 - C5350) * C50286) *
                 C50364 +
             ((C2323 - C2324 + C2325 - C2326) * C10568 +
              (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
              C14362 * C50286) *
                 C50260) *
                C1544 +
            (((C5344 - C5343 + C5346 - C5345) * C10568 +
              (C5348 - C5347 + C5350 - C5349) * C50365 +
              (C5352 - C5351 + C5354 - C5353) * C10569 +
              (C5356 - C5355 + C5358 - C5357) * C50286) *
                 C50364 +
             (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
              C6328 * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2324 - C2323 + C2326 - C2325) * C10568 +
              (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
              C14364 * C50286) *
                 C50364 +
             ((C2332 - C2331 + C2334 - C2333) * C10568 +
              (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
              C4039 * C50286) *
                 C50260) *
                C1544 +
            ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
              C14892 * C50286) *
                 C50364 +
             (C15543 * C10568 + C15544 * C50365 +
              (C3524 - C3525 + C3526 - C3527) * C10569 +
              (C3528 - C3529 + C3530 - C3531) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C10568 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50365 +
              (C5367 - C5368 + C5369 - C5370) * C10569 +
              (C5371 - C5372 + C5373 - C5374) * C50286) *
                 C50364 +
             ((C2347 - C2348 + C2349 - C2350) * C10568 +
              (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
              C14366 * C50286) *
                 C50260) *
                C1544 +
            (((C5368 - C5367 + C5370 - C5369) * C10568 +
              (C5372 - C5371 + C5374 - C5373) * C50365 +
              (C5376 - C5375 + C5378 - C5377) * C10569 +
              (C5380 - C5379 + C5382 - C5381) * C50286) *
                 C50364 +
             (C14367 * C10568 + C14368 * C50365 +
              (C5909 - C5910 + C5911 - C5912) * C10569 +
              (C5913 - C5914 + C5915 - C5916) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C2348 - C2347 + C2350 - C2349) * C10568 +
              (C2352 - C2351 + C2354 - C2353) * C50365 + C14367 * C10569 +
              C14368 * C50286) *
                 C50364 +
             ((C2356 - C2355 + C2358 - C2357) * C10568 +
              (C2360 - C2359 + C2362 - C2361) * C50365 +
              (C3085 - C3086 + C3087 - C3088) * C10569 +
              (C3089 - C3090 + C3091 - C3092) * C50286) *
                 C50260) *
                C1544 +
            ((C14365 * C10568 + C14366 * C50365 +
              (C5910 - C5909 + C5912 - C5911) * C10569 +
              (C5914 - C5913 + C5916 - C5915) * C50286) *
                 C50364 +
             ((C3086 - C3085 + C3088 - C3087) * C10568 +
              (C3090 - C3089 + C3092 - C3091) * C50365 +
              (C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                  C10569 +
              (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C50398 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50399 +
           ((C5399 * C10568 + C5400 * C50365 +
             (C5360 - C5359 + C5362 - C5361) * C10569 +
             (C5364 - C5363 + C5366 - C5365) * C50286) *
                C50364 +
            (C14891 * C10568 + C14892 * C50365 +
             (C6319 - C6320 + C6321 - C6322) * C10569 +
             (C6323 - C6324 + C6325 - C6326) * C50286) *
                C50260) *
               C1960) *
              C50351 +
          ((((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C50398 +
           ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
             C14892 * C50286) *
                C50364 +
            (C15543 * C10568 + C15544 * C50365 +
             (C3524 - C3525 + C3526 - C3527) * C10569 +
             (C3528 - C3529 + C3530 - C3531) * C50286) *
                C50260) *
               C50399 +
           ((C6327 * C10568 + C6328 * C50365 +
             (C6320 - C6319 + C6322 - C6321) * C10569 +
             (C6324 - C6323 + C6326 - C6325) * C50286) *
                C50364 +
            ((C3525 - C3524 + C3527 - C3526) * C10568 +
             (C3529 - C3528 + C3531 - C3530) * C50365 +
             (C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                 C10569 +
             (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                 C50286) *
                C50260) *
               C1960) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C1544 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50189) *
              C248 +
          ((((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C1544 +
           ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
             C14892 * C50286) *
                C50364 +
            (C15543 * C10568 + C15544 * C50365 +
             (C3524 - C3525 + C3526 - C3527) * C10569 +
             (C3528 - C3529 + C3530 - C3531) * C50286) *
                C50260) *
               C50189) *
              C249 +
          (((C2379 * C10568 + C2380 * C50365 + C15543 * C10569 +
             C15544 * C50286) *
                C50364 +
            ((C2340 - C2339 + C2342 - C2341) * C10568 +
             (C2344 - C2343 + C2346 - C2345) * C50365 +
             (C4030 - C4031 + C4032 - C4033) * C10569 +
             (C4034 - C4035 + C4036 - C4037) * C50286) *
                C50260) *
               C1544 +
           ((C4038 * C10568 + C4039 * C50365 +
             (C3525 - C3524 + C3527 - C3526) * C10569 +
             (C3529 - C3528 + C3531 - C3530) * C50286) *
                C50364 +
            ((C4031 - C4030 + C4033 - C4032) * C10568 +
             (C4035 - C4034 + C4037 - C4036) * C50365 +
             (C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C10569 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C1544 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
             C14366 * C50286) *
                C50260) *
               C1544 +
           (((C5368 - C5367 + C5370 - C5369) * C10568 +
             (C5372 - C5371 + C5374 - C5373) * C50365 +
             (C5376 - C5375 + C5378 - C5377) * C10569 +
             (C5380 - C5379 + C5382 - C5381) * C50286) *
                C50364 +
            (C14367 * C10568 + C14368 * C50365 +
             (C5909 - C5910 + C5911 - C5912) * C10569 +
             (C5913 - C5914 + C5915 - C5916) * C50286) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C10568 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50365 +
             (C5695 - C5696 + C5697 - C5698) * C10569 +
             (C5699 - C5700 + C5701 - C5702) * C50286) *
                C50364 +
            ((C2693 - C2694 + C2695 - C2696) * C10568 +
             (C2697 - C2698 + C2699 - C2700) * C50365 +
             (C13885 - C13886 + C13887 - C13888) * C10569 +
             (C13889 - C13890 + C13891 - C13892) * C50286) *
                C50260) *
               C1544 +
           (((C5696 - C5695 + C5698 - C5697) * C10568 +
             (C5700 - C5699 + C5702 - C5701) * C50365 +
             (C5704 - C5703 + C5706 - C5705) * C10569 +
             (C5708 - C5707 + C5710 - C5709) * C50286) *
                C50364 +
            ((C13886 - C13885 + C13888 - C13887) * C10568 +
             (C13890 - C13889 + C13892 - C13891) * C50365 +
             (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C50065 * C1090) *
                 C10569 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C10568 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50365 +
            (C5343 - C5344 + C5345 - C5346) * C10569 +
            (C5347 - C5348 + C5349 - C5350) * C50286) *
               C50364 +
           ((C2323 - C2324 + C2325 - C2326) * C10568 +
            (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
            C14362 * C50286) *
               C50260) *
              C1710 +
          (((C5344 - C5343 + C5346 - C5345) * C10568 +
            (C5348 - C5347 + C5350 - C5349) * C50365 +
            (C5352 - C5351 + C5354 - C5353) * C10569 +
            (C5356 - C5355 + C5358 - C5357) * C50286) *
               C50364 +
           (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
            C6328 * C50286) *
               C50260) *
              C1711 +
          ((C5399 * C10568 + C5400 * C50365 +
            (C5360 - C5359 + C5362 - C5361) * C10569 +
            (C5364 - C5363 + C5366 - C5365) * C50286) *
               C50364 +
           (C14891 * C10568 + C14892 * C50365 +
            (C6319 - C6320 + C6321 - C6322) * C10569 +
            (C6323 - C6324 + C6325 - C6326) * C50286) *
               C50260) *
              C1712 +
          ((C7225 * C10568 + C7226 * C50365 +
            (C7218 - C7217 + C7220 - C7219) * C10569 +
            (C7222 - C7221 + C7224 - C7223) * C50286) *
               C50364 +
           ((C6320 - C6319 + C6322 - C6321) * C10568 +
            (C6324 - C6323 + C6326 - C6325) * C50365 +
            (C2162 * C6306 - C2157 * C6308 + C2163 * C6307 - C50065 * C6309) *
                C10569 +
            (C2162 * C6310 - C2157 * C6312 + C2163 * C6311 - C50065 * C6313) *
                C50286) *
               C50260) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C50398 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50399 +
           ((C5399 * C10568 + C5400 * C50365 +
             (C5360 - C5359 + C5362 - C5361) * C10569 +
             (C5364 - C5363 + C5366 - C5365) * C50286) *
                C50364 +
            (C14891 * C10568 + C14892 * C50365 +
             (C6319 - C6320 + C6321 - C6322) * C10569 +
             (C6323 - C6324 + C6325 - C6326) * C50286) *
                C50260) *
               C1960) *
              C50109 * C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
             C14366 * C50286) *
                C50260) *
               C50398 +
           (((C5368 - C5367 + C5370 - C5369) * C10568 +
             (C5372 - C5371 + C5374 - C5373) * C50365 +
             (C5376 - C5375 + C5378 - C5377) * C10569 +
             (C5380 - C5379 + C5382 - C5381) * C50286) *
                C50364 +
            (C14367 * C10568 + C14368 * C50365 +
             (C5909 - C5910 + C5911 - C5912) * C10569 +
             (C5913 - C5914 + C5915 - C5916) * C50286) *
                C50260) *
               C50399 +
           ((C5401 * C10568 + C5402 * C50365 +
             (C5384 - C5383 + C5386 - C5385) * C10569 +
             (C5388 - C5387 + C5390 - C5389) * C50286) *
                C50364 +
            ((C5910 - C5909 + C5912 - C5911) * C10568 +
             (C5914 - C5913 + C5916 - C5915) * C50365 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C5904 - C50065 * C5905) *
                 C10569 +
             (C2162 * C4439 - C2157 * C4445 + C2163 * C5906 - C50065 * C5907) *
                 C50286) *
                C50260) *
               C1960) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C1544 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C10568 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50365 +
             (C5367 - C5368 + C5369 - C5370) * C10569 +
             (C5371 - C5372 + C5373 - C5374) * C50286) *
                C50364 +
            ((C2347 - C2348 + C2349 - C2350) * C10568 +
             (C2351 - C2352 + C2353 - C2354) * C50365 + C14365 * C10569 +
             C14366 * C50286) *
                C50260) *
               C1544 +
           (((C5368 - C5367 + C5370 - C5369) * C10568 +
             (C5372 - C5371 + C5374 - C5373) * C50365 +
             (C5376 - C5375 + C5378 - C5377) * C10569 +
             (C5380 - C5379 + C5382 - C5381) * C50286) *
                C50364 +
            (C14367 * C10568 + C14368 * C50365 +
             (C5909 - C5910 + C5911 - C5912) * C10569 +
             (C5913 - C5914 + C5915 - C5916) * C50286) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C10568 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50365 +
             (C5695 - C5696 + C5697 - C5698) * C10569 +
             (C5699 - C5700 + C5701 - C5702) * C50286) *
                C50364 +
            ((C2693 - C2694 + C2695 - C2696) * C10568 +
             (C2697 - C2698 + C2699 - C2700) * C50365 +
             (C13885 - C13886 + C13887 - C13888) * C10569 +
             (C13889 - C13890 + C13891 - C13892) * C50286) *
                C50260) *
               C1544 +
           (((C5696 - C5695 + C5698 - C5697) * C10568 +
             (C5700 - C5699 + C5702 - C5701) * C50365 +
             (C5704 - C5703 + C5706 - C5705) * C10569 +
             (C5708 - C5707 + C5710 - C5709) * C50286) *
                C50364 +
            ((C13886 - C13885 + C13888 - C13887) * C10568 +
             (C13890 - C13889 + C13892 - C13891) * C50365 +
             (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C50065 * C1090) *
                 C10569 +
             (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C10568 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50365 +
             (C5343 - C5344 + C5345 - C5346) * C10569 +
             (C5347 - C5348 + C5349 - C5350) * C50286) *
                C50364 +
            ((C2323 - C2324 + C2325 - C2326) * C10568 +
             (C2327 - C2328 + C2329 - C2330) * C50365 + C14361 * C10569 +
             C14362 * C50286) *
                C50260) *
               C1544 +
           (((C5344 - C5343 + C5346 - C5345) * C10568 +
             (C5348 - C5347 + C5350 - C5349) * C50365 +
             (C5352 - C5351 + C5354 - C5353) * C10569 +
             (C5356 - C5355 + C5358 - C5357) * C50286) *
                C50364 +
            (C14363 * C10568 + C14364 * C50365 + C6327 * C10569 +
             C6328 * C50286) *
                C50260) *
               C50189) *
              C248 +
          ((((C2324 - C2323 + C2326 - C2325) * C10568 +
             (C2328 - C2327 + C2330 - C2329) * C50365 + C14363 * C10569 +
             C14364 * C50286) *
                C50364 +
            ((C2332 - C2331 + C2334 - C2333) * C10568 +
             (C2336 - C2335 + C2338 - C2337) * C50365 + C4038 * C10569 +
             C4039 * C50286) *
                C50260) *
               C1544 +
           ((C14361 * C10568 + C14362 * C50365 + C14891 * C10569 +
             C14892 * C50286) *
                C50364 +
            (C15543 * C10568 + C15544 * C50365 +
             (C3524 - C3525 + C3526 - C3527) * C10569 +
             (C3528 - C3529 + C3530 - C3531) * C50286) *
                C50260) *
               C50189) *
              C249 +
          (((C2379 * C10568 + C2380 * C50365 + C15543 * C10569 +
             C15544 * C50286) *
                C50364 +
            ((C2340 - C2339 + C2342 - C2341) * C10568 +
             (C2344 - C2343 + C2346 - C2345) * C50365 +
             (C4030 - C4031 + C4032 - C4033) * C10569 +
             (C4034 - C4035 + C4036 - C4037) * C50286) *
                C50260) *
               C1544 +
           ((C4038 * C10568 + C4039 * C50365 +
             (C3525 - C3524 + C3527 - C3526) * C10569 +
             (C3529 - C3528 + C3531 - C3530) * C50286) *
                C50364 +
            ((C4031 - C4030 + C4033 - C4032) * C10568 +
             (C4035 - C4034 + C4037 - C4036) * C50365 +
             (C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C10569 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C50351 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C50161) *
              C50394 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C50351 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50161) *
              C50395 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50125 * C50351 +
           (((C2694 - C2693 + C2696 - C2695) * C121 +
             (C2698 - C2697 + C2700 - C2699) * C50222) *
                C2159 +
            ((C2702 - C2701 + C2704 - C2703) * C121 +
             (C2706 - C2705 + C2708 - C2707) * C50222) *
                C2160 +
            ((C2162 * C971 - C2157 * C975 + C2163 * C972 - C50065 * C976) *
                 C121 +
             (C2162 * C979 - C2157 * C983 + C2163 * C980 - C50065 * C984) *
                 C50222) *
                C2161) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C50351 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C50351 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50125 * C50351 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50222) *
               C50211 * C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50125 * C50351 +
           ((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 +
            (C3517 - C3516 + C3519 - C3518) * C5037 +
            (C3521 - C3520 + C3523 - C3522) * C5034) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C50125 * C50351 +
           ((C2348 - C2347 + C2350 - C2349) * C5035 +
            (C2352 - C2351 + C2354 - C2353) * C5032 +
            (C3077 - C3078 + C3079 - C3080) * C5036 +
            (C3081 - C3082 + C3083 - C3084) * C5033 +
            (C2157 * C1088 - C2162 * C1084 + C50065 * C1089 - C2163 * C1085) *
                C5037 +
            (C2157 * C1096 - C2162 * C1092 + C50065 * C1097 - C2163 * C1093) *
                C5034) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C5035 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C5032 +
            (C2157 * C406 - C2162 * C396 + C50065 * C407 - C2163 * C397) *
                C5036 +
            (C2157 * C426 - C2162 * C410 + C50065 * C427 - C2163 * C411) *
                C5033 +
            (C2157 * C414 - C2162 * C400 + C50065 * C415 - C2163 * C401) *
                C5037 +
            (C2157 * C430 - C2162 * C418 + C50065 * C431 - C2163 * C419) *
                C5034) *
               C50211 * C50125 * C50351 +
           ((C2694 - C2693 + C2696 - C2695) * C5035 +
            (C2698 - C2697 + C2700 - C2699) * C5032 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                C5036 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                C5033 +
            (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C50065 * C1090) *
                C5037 +
            (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C50065 * C1098) *
                C5034) *
               C50211 * C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50222) *
                 C2159 +
             ((C2323 - C2324 + C2325 - C2326) * C121 +
              (C2327 - C2328 + C2329 - C2330) * C50222) *
                 C2160 +
             C2387 * C2161) *
                C50352 +
            (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                  C121 +
              (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                  C50222) *
                 C2159 +
             ((C3061 - C3062 + C3063 - C3064) * C121 +
              (C3065 - C3066 + C3067 - C3068) * C50222) *
                 C2160 +
             ((C3069 - C3070 + C3071 - C3072) * C121 +
              (C3073 - C3074 + C3075 - C3076) * C50222) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C2324 - C2323 + C2326 - C2325) * C121 +
              (C2328 - C2327 + C2330 - C2329) * C50222) *
                 C2159 +
             ((C2332 - C2331 + C2334 - C2333) * C121 +
              (C2336 - C2335 + C2338 - C2337) * C50222) *
                 C2160 +
             ((C2339 - C2340 + C2341 - C2342) * C121 +
              (C2343 - C2344 + C2345 - C2346) * C50222) *
                 C2161) *
                C50352 +
            (((C3062 - C3061 + C3064 - C3063) * C121 +
              (C3066 - C3065 + C3068 - C3067) * C50222) *
                 C2159 +
             ((C3070 - C3069 + C3072 - C3071) * C121 +
              (C3074 - C3073 + C3076 - C3075) * C50222) *
                 C2160 +
             ((C2157 * C3051 - C2162 * C3048 + C50065 * C3052 - C2163 * C3049) *
                  C121 +
              (C2157 * C3057 - C2162 * C3053 + C50065 * C3058 - C2163 * C3054) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C251 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50222) *
                 C2159 +
             ((C2347 - C2348 + C2349 - C2350) * C121 +
              (C2351 - C2352 + C2353 - C2354) * C50222) *
                 C2160 +
             C2388 * C2161) *
                C50352 +
            (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                  C121 +
              (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                  C50222) *
                 C2159 +
             ((C3077 - C3078 + C3079 - C3080) * C121 +
              (C3081 - C3082 + C3083 - C3084) * C50222) *
                 C2160 +
             ((C3085 - C3086 + C3087 - C3088) * C121 +
              (C3089 - C3090 + C3091 - C3092) * C50222) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C2348 - C2347 + C2350 - C2349) * C121 +
              (C2352 - C2351 + C2354 - C2353) * C50222) *
                 C2159 +
             ((C2356 - C2355 + C2358 - C2357) * C121 +
              (C2360 - C2359 + C2362 - C2361) * C50222) *
                 C2160 +
             ((C2363 - C2364 + C2365 - C2366) * C121 +
              (C2367 - C2368 + C2369 - C2370) * C50222) *
                 C2161) *
                C50352 +
            (((C3078 - C3077 + C3080 - C3079) * C121 +
              (C3082 - C3081 + C3084 - C3083) * C50222) *
                 C2159 +
             ((C3086 - C3085 + C3088 - C3087) * C121 +
              (C3090 - C3089 + C3092 - C3091) * C50222) *
                 C2160 +
             ((C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                  C121 +
              (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C5035 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C5032 +
             (C5343 - C5344 + C5345 - C5346) * C5036 +
             (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
             C5400 * C5034) *
                C50211 * C50352 +
            ((C5344 - C5343 + C5346 - C5345) * C5035 +
             (C5348 - C5347 + C5350 - C5349) * C5032 +
             (C5352 - C5351 + C5354 - C5353) * C5036 +
             (C5356 - C5355 + C5358 - C5357) * C5033 +
             (C5359 - C5360 + C5361 - C5362) * C5037 +
             (C5363 - C5364 + C5365 - C5366) * C5034) *
                C50211 * C50189) *
               C50351 +
           (((C2324 - C2323 + C2326 - C2325) * C5035 +
             (C2328 - C2327 + C2330 - C2329) * C5032 +
             (C3061 - C3062 + C3063 - C3064) * C5036 +
             (C3065 - C3066 + C3067 - C3068) * C5033 +
             (C3517 - C3516 + C3519 - C3518) * C5037 +
             (C3521 - C3520 + C3523 - C3522) * C5034) *
                C50211 * C50352 +
            ((C3062 - C3061 + C3064 - C3063) * C5035 +
             (C3066 - C3065 + C3068 - C3067) * C5032 +
             (C3516 - C3517 + C3518 - C3519) * C5036 +
             (C3520 - C3521 + C3522 - C3523) * C5033 +
             (C2157 * C4436 - C2162 * C4432 + C50065 * C4437 - C2163 * C4433) *
                 C5037 +
             (C2157 * C4444 - C2162 * C4438 + C50065 * C4445 - C2163 * C4439) *
                 C5034) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C5035 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C5032 +
             (C5367 - C5368 + C5369 - C5370) * C5036 +
             (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
             C5402 * C5034) *
                C50211 * C50352 +
            ((C5368 - C5367 + C5370 - C5369) * C5035 +
             (C5372 - C5371 + C5374 - C5373) * C5032 +
             (C5376 - C5375 + C5378 - C5377) * C5036 +
             (C5380 - C5379 + C5382 - C5381) * C5033 +
             (C5383 - C5384 + C5385 - C5386) * C5037 +
             (C5387 - C5388 + C5389 - C5390) * C5034) *
                C50211 * C50189) *
               C50351 +
           (((C2348 - C2347 + C2350 - C2349) * C5035 +
             (C2352 - C2351 + C2354 - C2353) * C5032 +
             (C3077 - C3078 + C3079 - C3080) * C5036 +
             (C3081 - C3082 + C3083 - C3084) * C5033 +
             (C5909 - C5910 + C5911 - C5912) * C5037 +
             (C5913 - C5914 + C5915 - C5916) * C5034) *
                C50211 * C50352 +
            ((C3078 - C3077 + C3080 - C3079) * C5035 +
             (C3082 - C3081 + C3084 - C3083) * C5032 +
             (C5910 - C5909 + C5912 - C5911) * C5036 +
             (C5914 - C5913 + C5916 - C5915) * C5033 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C5904 - C50065 * C5905) *
                 C5037 +
             (C2162 * C4439 - C2157 * C4445 + C2163 * C5906 - C50065 * C5907) *
                 C5034) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                   C121 +
               (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                   C50222) *
                  C50211 * C50125 * C50109 * C113 +
              ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                   C121 +
               (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                   C50222) *
                  C50211 * C50125 * C50109 * C114 +
              ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
                C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                   C121 +
               (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
                C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                   C50222) *
                  C50211 * C50125 * C50109 * C115 +
              ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
                C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
                   C121 +
               (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
                C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
                   C50222) *
                  C50211 * C50125 * C50109 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50222) *
                   C50211 * C50125 * C248 +
               ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                 C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                    C121 +
                (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                 C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                    C50222) *
                   C50211 * C50125 * C249 +
               ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
                 C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                    C121 +
                (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
                 C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                    C50222) *
                   C50211 * C50125 * C250) *
                  C251 +
              (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                 C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                    C121 +
                (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                 C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                    C50222) *
                   C50211 * C50125 * C248 +
               ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
                 C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                    C121 +
                (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
                 C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                    C50222) *
                   C50211 * C50125 * C249 +
               ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
                 C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                    C121 +
                (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
                 C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                    C50222) *
                   C50211 * C50125 * C250) *
                  C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C393) *
              C50109 * C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C391 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C392 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50222) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2157 * C263 - C2162 * C253 + C50065 * C264 - C2163 * C254) *
                C121 +
            (C2157 * C283 - C2162 * C267 + C50065 * C284 - C2163 * C268) *
                C50222) *
               C2160 +
           ((C2157 * C271 - C2162 * C257 + C50065 * C272 - C2163 * C258) *
                C121 +
            (C2157 * C287 - C2162 * C275 + C50065 * C288 - C2163 * C276) *
                C50222) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C121 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C50222) *
               C2159 +
           ((C2162 * C254 - C2157 * C264 + C2163 * C255 - C50065 * C265) *
                C121 +
            (C2162 * C268 - C2157 * C284 + C2163 * C269 - C50065 * C285) *
                C50222) *
               C2160 +
           ((C2162 * C258 - C2157 * C272 + C2163 * C259 - C50065 * C273) *
                C121 +
            (C2162 * C276 - C2157 * C288 + C2163 * C277 - C50065 * C289) *
                C50222) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C121 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C50222) *
               C2159 +
           ((C2157 * C265 - C2162 * C255 + C50065 * C266 - C2163 * C256) *
                C121 +
            (C2157 * C285 - C2162 * C269 + C50065 * C286 - C2163 * C270) *
                C50222) *
               C2160 +
           ((C2157 * C273 - C2162 * C259 + C50065 * C274 - C2163 * C260) *
                C121 +
            (C2157 * C289 - C2162 * C277 + C50065 * C290 - C2163 * C278) *
                C50222) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
                C121 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
                C50222) *
               C2159 +
           ((C2162 * C256 - C2157 * C266 + C2163 * C261 - C50065 * C279) *
                C121 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C50065 * C291) *
                C50222) *
               C2160 +
           ((C2162 * C260 - C2157 * C274 + C2163 * C262 - C50065 * C281) *
                C121 +
            (C2162 * C278 - C2157 * C290 + C2163 * C282 - C50065 * C292) *
                C50222) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C248 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C2157 * C2313 - C2162 * C2310 + C50065 * C2314 - C2163 * C2311) *
                 C121 +
             (C2157 * C2319 - C2162 * C2315 + C50065 * C2320 - C2163 * C2316) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C248 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2388 * C2159 +
            ((C2364 - C2363 + C2366 - C2365) * C121 +
             (C2368 - C2367 + C2370 - C2369) * C50222) *
                C2160 +
            ((C2162 * C2311 - C2157 * C2314 + C2163 * C2312 - C50065 * C2317) *
                 C121 +
             (C2162 * C2316 - C2157 * C2320 + C2163 * C2318 - C50065 * C2321) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C391 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C2162 * C775 - C2157 * C780 + C2163 * C776 - C50065 * C781) *
                 C121 +
             (C2162 * C784 - C2157 * C790 + C2163 * C785 - C50065 * C791) *
                 C50222) *
                C2160 +
            ((C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C50065 * C1435) *
                 C121 +
             (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C50065 * C1443) *
                 C50222) *
                C2161) *
               C392 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C2157 * C1087 - C2162 * C1083 + C50065 * C1088 - C2163 * C1084) *
                 C121 +
             (C2157 * C1095 - C2162 * C1091 + C50065 * C1096 - C2163 * C1092) *
                 C50222) *
                C2160 +
            ((C2157 * C2537 - C2162 * C2534 + C50065 * C2538 - C2163 * C2535) *
                 C121 +
             (C2157 * C2543 - C2162 * C2539 + C50065 * C2544 - C2163 * C2540) *
                 C50222) *
                C2161) *
               C393) *
              C50109 * C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C391 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C2157 * C781 - C2162 * C776 + C50065 * C782 - C2163 * C777) *
                 C121 +
             (C2157 * C791 - C2162 * C785 + C50065 * C792 - C2163 * C786) *
                 C50222) *
                C2160 +
            ((C2157 * C1435 - C2162 * C1431 + C50065 * C1436 - C2163 * C1432) *
                 C121 +
             (C2157 * C1443 - C2162 * C1439 + C50065 * C1444 - C2163 * C1440) *
                 C50222) *
                C2161) *
               C392 +
           (((C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
                 C121 +
             (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
                 C50222) *
                C2159 +
            ((C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C50065 * C1089) *
                 C121 +
             (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C50065 * C1097) *
                 C50222) *
                C2160 +
            ((C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                 C121 +
             (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                 C50222) *
                C2161) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
               C5035 +
           (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
               C5032 +
           (C2157 * C404 - C2162 * C394 + C50065 * C405 - C2163 * C395) *
               C5036 +
           (C2157 * C424 - C2162 * C408 + C50065 * C425 - C2163 * C409) *
               C5033 +
           (C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
               C5037 +
           (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
               C5034) *
              C50211 * C50125 * C50109 * C113 +
          ((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
               C5035 +
           (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
               C5032 +
           (C2162 * C395 - C2157 * C405 + C2163 * C396 - C50065 * C406) *
               C5036 +
           (C2162 * C409 - C2157 * C425 + C2163 * C410 - C50065 * C426) *
               C5033 +
           (C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
               C5037 +
           (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
               C5034) *
              C50211 * C50125 * C50109 * C114 +
          ((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
               C5035 +
           (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
               C5032 +
           (C2157 * C406 - C2162 * C396 + C50065 * C407 - C2163 * C397) *
               C5036 +
           (C2157 * C426 - C2162 * C410 + C50065 * C427 - C2163 * C411) *
               C5033 +
           (C2157 * C414 - C2162 * C400 + C50065 * C415 - C2163 * C401) *
               C5037 +
           (C2157 * C430 - C2162 * C418 + C50065 * C431 - C2163 * C419) *
               C5034) *
              C50211 * C50125 * C50109 * C115 +
          ((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
               C5035 +
           (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
               C5032 +
           (C2162 * C397 - C2157 * C407 + C2163 * C402 - C50065 * C420) *
               C5036 +
           (C2162 * C411 - C2157 * C427 + C2163 * C421 - C50065 * C432) *
               C5033 +
           (C2162 * C401 - C2157 * C415 + C2163 * C403 - C50065 * C422) *
               C5037 +
           (C2162 * C419 - C2157 * C431 + C2163 * C423 - C50065 * C433) *
               C5034) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C2157 * C404 - C2162 * C394 + C50065 * C405 - C2163 * C395) *
                C5036 +
            (C2157 * C424 - C2162 * C408 + C50065 * C425 - C2163 * C409) *
                C5033 +
            (C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                C5037 +
            (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                C5034) *
               C50211 * C50125 * C248 +
           ((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 +
            (C3517 - C3516 + C3519 - C3518) * C5037 +
            (C3521 - C3520 + C3523 - C3522) * C5034) *
               C50211 * C50125 * C249 +
           (C2379 * C5035 + C2380 * C5032 +
            (C3070 - C3069 + C3072 - C3071) * C5036 +
            (C3074 - C3073 + C3076 - C3075) * C5033 +
            (C3524 - C3525 + C3526 - C3527) * C5037 +
            (C3528 - C3529 + C3530 - C3531) * C5034) *
               C50211 * C50125 * C250) *
              C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C2162 * C395 - C2157 * C405 + C2163 * C396 - C50065 * C406) *
                C5036 +
            (C2162 * C409 - C2157 * C425 + C2163 * C410 - C50065 * C426) *
                C5033 +
            (C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
                C5037 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
                C5034) *
               C50211 * C50125 * C248 +
           ((C2348 - C2347 + C2350 - C2349) * C5035 +
            (C2352 - C2351 + C2354 - C2353) * C5032 +
            (C3077 - C3078 + C3079 - C3080) * C5036 +
            (C3081 - C3082 + C3083 - C3084) * C5033 +
            (C2157 * C1088 - C2162 * C1084 + C50065 * C1089 - C2163 * C1085) *
                C5037 +
            (C2157 * C1096 - C2162 * C1092 + C50065 * C1097 - C2163 * C1093) *
                C5034) *
               C50211 * C50125 * C249 +
           (C2381 * C5035 + C2382 * C5032 +
            (C3086 - C3085 + C3088 - C3087) * C5036 +
            (C3090 - C3089 + C3092 - C3091) * C5033 +
            (C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                C5037 +
            (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                C5034) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C391 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C392 +
           (C5399 * C5035 + C5400 * C5032 +
            (C5360 - C5359 + C5362 - C5361) * C5036 +
            (C5364 - C5363 + C5366 - C5365) * C5033 +
            (C2157 * C5333 - C2162 * C5330 + C50065 * C5334 - C2163 * C5331) *
                C5037 +
            (C2157 * C5339 - C2162 * C5335 + C50065 * C5340 - C2163 * C5336) *
                C5034) *
               C50211 * C393) *
              C50109 * C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C391 +
           ((C5368 - C5367 + C5370 - C5369) * C5035 +
            (C5372 - C5371 + C5374 - C5373) * C5032 +
            (C5376 - C5375 + C5378 - C5377) * C5036 +
            (C5380 - C5379 + C5382 - C5381) * C5033 +
            (C5383 - C5384 + C5385 - C5386) * C5037 +
            (C5387 - C5388 + C5389 - C5390) * C5034) *
               C50211 * C392 +
           (C5401 * C5035 + C5402 * C5032 +
            (C5384 - C5383 + C5386 - C5385) * C5036 +
            (C5388 - C5387 + C5390 - C5389) * C5033 +
            (C2162 * C5331 - C2157 * C5334 + C2163 * C5332 - C50065 * C5337) *
                C5037 +
            (C2162 * C5336 - C2157 * C5340 + C2163 * C5338 - C50065 * C5341) *
                C5034) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50352 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C2162 * C775 - C2157 * C780 + C2163 * C776 - C50065 * C781) *
                 C121 +
             (C2162 * C784 - C2157 * C790 + C2163 * C785 - C50065 * C791) *
                 C50222) *
                C2160 +
            ((C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C50065 * C1435) *
                 C121 +
             (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C50065 * C1443) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C50394 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50352 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C2157 * C781 - C2162 * C776 + C50065 * C782 - C2163 * C777) *
                 C121 +
             (C2157 * C791 - C2162 * C785 + C50065 * C792 - C2163 * C786) *
                 C50222) *
                C2160 +
            ((C2157 * C1435 - C2162 * C1431 + C50065 * C1436 - C2163 * C1432) *
                 C121 +
             (C2157 * C1443 - C2162 * C1439 + C50065 * C1444 - C2163 * C1440) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C50395 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50352 +
           (((C2162 * C396 - C2157 * C406 + C2163 * C397 - C50065 * C407) *
                 C121 +
             (C2162 * C410 - C2157 * C426 + C2163 * C411 - C50065 * C427) *
                 C50222) *
                C2159 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                 C50222) *
                C2160 +
            ((C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C121 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50352 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50222) *
               C50211 * C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50352 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C50352 +
           ((C5368 - C5367 + C5370 - C5369) * C5035 +
            (C5372 - C5371 + C5374 - C5373) * C5032 +
            (C5376 - C5375 + C5378 - C5377) * C5036 +
            (C5380 - C5379 + C5382 - C5381) * C5033 +
            (C5383 - C5384 + C5385 - C5386) * C5037 +
            (C5387 - C5388 + C5389 - C5390) * C5034) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C5035 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C5032 +
            (C5695 - C5696 + C5697 - C5698) * C5036 +
            (C5699 - C5700 + C5701 - C5702) * C5033 +
            (C5703 - C5704 + C5705 - C5706) * C5037 +
            (C5707 - C5708 + C5709 - C5710) * C5034) *
               C50211 * C50352 +
           ((C5696 - C5695 + C5698 - C5697) * C5035 +
            (C5700 - C5699 + C5702 - C5701) * C5032 +
            (C5704 - C5703 + C5706 - C5705) * C5036 +
            (C5708 - C5707 + C5710 - C5709) * C5033 +
            (C2162 * C1716 - C2157 * C1720 + C2163 * C1717 - C50065 * C1721) *
                C5037 +
            (C2162 * C1724 - C2157 * C1728 + C2163 * C1725 - C50065 * C1729) *
                C5034) *
               C50211 * C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C248 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C249 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50125 * C250) *
              C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C248 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C249 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50222) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C50125 * C50109 * C113 +
          ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
            C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
               C121 +
           (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
            C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
               C50222) *
              C50211 * C50125 * C50109 * C114 +
          ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
            C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
               C121 +
           (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
            C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
               C50222) *
              C50211 * C50125 * C50109 * C115 +
          ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
            C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
               C121 +
           (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
            C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
               C50222) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2157 * C263 - C2162 * C253 + C50065 * C264 - C2163 * C254) *
                C121 +
            (C2157 * C283 - C2162 * C267 + C50065 * C284 - C2163 * C268) *
                C50222) *
               C2160 +
           ((C2157 * C271 - C2162 * C257 + C50065 * C272 - C2163 * C258) *
                C121 +
            (C2157 * C287 - C2162 * C275 + C50065 * C288 - C2163 * C276) *
                C50222) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C121 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C50222) *
               C2159 +
           ((C2162 * C254 - C2157 * C264 + C2163 * C255 - C50065 * C265) *
                C121 +
            (C2162 * C268 - C2157 * C284 + C2163 * C269 - C50065 * C285) *
                C50222) *
               C2160 +
           ((C2162 * C258 - C2157 * C272 + C2163 * C259 - C50065 * C273) *
                C121 +
            (C2162 * C276 - C2157 * C288 + C2163 * C277 - C50065 * C289) *
                C50222) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C121 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C50222) *
               C2159 +
           ((C2157 * C265 - C2162 * C255 + C50065 * C266 - C2163 * C256) *
                C121 +
            (C2157 * C285 - C2162 * C269 + C50065 * C286 - C2163 * C270) *
                C50222) *
               C2160 +
           ((C2157 * C273 - C2162 * C259 + C50065 * C274 - C2163 * C260) *
                C121 +
            (C2157 * C289 - C2162 * C277 + C50065 * C290 - C2163 * C278) *
                C50222) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
                C121 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
                C50222) *
               C2159 +
           ((C2162 * C256 - C2157 * C266 + C2163 * C261 - C50065 * C279) *
                C121 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C50065 * C291) *
                C50222) *
               C2160 +
           ((C2162 * C260 - C2157 * C274 + C2163 * C262 - C50065 * C281) *
                C121 +
            (C2162 * C278 - C2157 * C290 + C2163 * C282 - C50065 * C292) *
                C50222) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C248 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C2157 * C2313 - C2162 * C2310 + C50065 * C2314 - C2163 * C2311) *
                 C121 +
             (C2157 * C2319 - C2162 * C2315 + C50065 * C2320 - C2163 * C2316) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C248 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2388 * C2159 +
            ((C2364 - C2363 + C2366 - C2365) * C121 +
             (C2368 - C2367 + C2370 - C2369) * C50222) *
                C2160 +
            ((C2162 * C2311 - C2157 * C2314 + C2163 * C2312 - C50065 * C2317) *
                 C121 +
             (C2162 * C2316 - C2157 * C2320 + C2163 * C2318 - C50065 * C2321) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
               C5035 +
           (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
               C5032 +
           (C2157 * C404 - C2162 * C394 + C50065 * C405 - C2163 * C395) *
               C5036 +
           (C2157 * C424 - C2162 * C408 + C50065 * C425 - C2163 * C409) *
               C5033 +
           (C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
               C5037 +
           (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
               C5034) *
              C50211 * C50125 * C50109 * C113 +
          ((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
               C5035 +
           (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
               C5032 +
           (C2162 * C395 - C2157 * C405 + C2163 * C396 - C50065 * C406) *
               C5036 +
           (C2162 * C409 - C2157 * C425 + C2163 * C410 - C50065 * C426) *
               C5033 +
           (C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
               C5037 +
           (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
               C5034) *
              C50211 * C50125 * C50109 * C114 +
          ((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
               C5035 +
           (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
               C5032 +
           (C2157 * C406 - C2162 * C396 + C50065 * C407 - C2163 * C397) *
               C5036 +
           (C2157 * C426 - C2162 * C410 + C50065 * C427 - C2163 * C411) *
               C5033 +
           (C2157 * C414 - C2162 * C400 + C50065 * C415 - C2163 * C401) *
               C5037 +
           (C2157 * C430 - C2162 * C418 + C50065 * C431 - C2163 * C419) *
               C5034) *
              C50211 * C50125 * C50109 * C115 +
          ((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
               C5035 +
           (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
               C5032 +
           (C2162 * C397 - C2157 * C407 + C2163 * C402 - C50065 * C420) *
               C5036 +
           (C2162 * C411 - C2157 * C427 + C2163 * C421 - C50065 * C432) *
               C5033 +
           (C2162 * C401 - C2157 * C415 + C2163 * C403 - C50065 * C422) *
               C5037 +
           (C2162 * C419 - C2157 * C431 + C2163 * C423 - C50065 * C433) *
               C5034) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C2157 * C404 - C2162 * C394 + C50065 * C405 - C2163 * C395) *
                C5036 +
            (C2157 * C424 - C2162 * C408 + C50065 * C425 - C2163 * C409) *
                C5033 +
            (C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                C5037 +
            (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                C5034) *
               C50211 * C50125 * C248 +
           ((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 +
            (C3517 - C3516 + C3519 - C3518) * C5037 +
            (C3521 - C3520 + C3523 - C3522) * C5034) *
               C50211 * C50125 * C249 +
           (C2379 * C5035 + C2380 * C5032 +
            (C3070 - C3069 + C3072 - C3071) * C5036 +
            (C3074 - C3073 + C3076 - C3075) * C5033 +
            (C3524 - C3525 + C3526 - C3527) * C5037 +
            (C3528 - C3529 + C3530 - C3531) * C5034) *
               C50211 * C50125 * C250) *
              C251 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C2162 * C395 - C2157 * C405 + C2163 * C396 - C50065 * C406) *
                C5036 +
            (C2162 * C409 - C2157 * C425 + C2163 * C410 - C50065 * C426) *
                C5033 +
            (C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
                C5037 +
            (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
                C5034) *
               C50211 * C50125 * C248 +
           ((C2348 - C2347 + C2350 - C2349) * C5035 +
            (C2352 - C2351 + C2354 - C2353) * C5032 +
            (C3077 - C3078 + C3079 - C3080) * C5036 +
            (C3081 - C3082 + C3083 - C3084) * C5033 +
            (C2157 * C1088 - C2162 * C1084 + C50065 * C1089 - C2163 * C1085) *
                C5037 +
            (C2157 * C1096 - C2162 * C1092 + C50065 * C1097 - C2163 * C1093) *
                C5034) *
               C50211 * C50125 * C249 +
           (C2381 * C5035 + C2382 * C5032 +
            (C3086 - C3085 + C3088 - C3087) * C5036 +
            (C3090 - C3089 + C3092 - C3091) * C5033 +
            (C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                C5037 +
            (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                C5034) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C50396 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C50125 * C50397 +
           (C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C50125 * C1199) *
              C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C50396 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50397 +
           (C2388 * C2159 +
            ((C2364 - C2363 + C2366 - C2365) * C121 +
             (C2368 - C2367 + C2370 - C2369) * C50222) *
                C2160 +
            ((C2162 * C2311 - C2157 * C2314 + C2163 * C2312 - C50065 * C2317) *
                 C121 +
             (C2162 * C2316 - C2157 * C2320 + C2163 * C2318 - C50065 * C2321) *
                 C50222) *
                C2161) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C50396 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50397 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C50396 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50397 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50222) *
               C50211 * C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50125 * C50396 +
           ((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
            C6328 * C5034) *
               C50211 * C50125 * C50397 +
           (C2379 * C5035 + C2380 * C5032 +
            (C3070 - C3069 + C3072 - C3071) * C5036 +
            (C3074 - C3073 + C3076 - C3075) * C5033 +
            (C3524 - C3525 + C3526 - C3527) * C5037 +
            (C3528 - C3529 + C3530 - C3531) * C5034) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C50125 * C50396 +
           ((C2348 - C2347 + C2350 - C2349) * C5035 +
            (C2352 - C2351 + C2354 - C2353) * C5032 +
            (C3077 - C3078 + C3079 - C3080) * C5036 +
            (C3081 - C3082 + C3083 - C3084) * C5033 +
            (C5909 - C5910 + C5911 - C5912) * C5037 +
            (C5913 - C5914 + C5915 - C5916) * C5034) *
               C50211 * C50125 * C50397 +
           (C2381 * C5035 + C2382 * C5032 +
            (C3086 - C3085 + C3088 - C3087) * C5036 +
            (C3090 - C3089 + C3092 - C3091) * C5033 +
            (C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                C5037 +
            (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                C5034) *
               C50211 * C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50352 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C50396 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C50352 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50189) *
              C50397 +
          ((C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C50352 +
           (C4042 * C2159 +
            ((C4031 - C4030 + C4033 - C4032) * C121 +
             (C4035 - C4034 + C4037 - C4036) * C50222) *
                C2160 +
            ((C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                 C121 +
             (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                 C50222) *
                C2161) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50396 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50352 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50189) *
              C50397 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50222) *
               C50211 * C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50352 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C50189) *
              C50396 +
          (((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
            C6328 * C5034) *
               C50211 * C50352 +
           ((C3062 - C3061 + C3064 - C3063) * C5035 +
            (C3066 - C3065 + C3068 - C3067) * C5032 +
            (C3516 - C3517 + C3518 - C3519) * C5036 +
            (C3520 - C3521 + C3522 - C3523) * C5033 +
            (C6319 - C6320 + C6321 - C6322) * C5037 +
            (C6323 - C6324 + C6325 - C6326) * C5034) *
               C50211 * C50189) *
              C50397 +
          ((C2379 * C5035 + C2380 * C5032 +
            (C3070 - C3069 + C3072 - C3071) * C5036 +
            (C3074 - C3073 + C3076 - C3075) * C5033 +
            (C3524 - C3525 + C3526 - C3527) * C5037 +
            (C3528 - C3529 + C3530 - C3531) * C5034) *
               C50211 * C50352 +
           (C4038 * C5035 + C4039 * C5032 +
            (C3525 - C3524 + C3527 - C3526) * C5036 +
            (C3529 - C3528 + C3531 - C3530) * C5033 +
            (C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                C5037 +
            (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                C5034) *
               C50211 * C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50222) *
                   C50211 * C50125 * C893 +
               ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                 C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                    C121 +
                (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                 C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                    C50222) *
                   C50211 * C50125 * C50161) *
                  C895 +
              (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                 C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                    C121 +
                (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                 C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                    C50222) *
                   C50211 * C50125 * C893 +
               ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
                 C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                    C121 +
                (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
                 C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                    C50222) *
                   C50211 * C50125 * C50161) *
                  C896 +
              (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
                 C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                    C121 +
                (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
                 C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                    C50222) *
                   C50211 * C50125 * C893 +
               ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
                 C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                    C121 +
                (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
                 C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                    C50222) *
                   C50211 * C50125 * C50161) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                   C121 +
               (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                   C50222) *
                  C50211 * C50125 * C964 +
              ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                   C121 +
               (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                   C50222) *
                  C50211 * C50125 * C965 +
              ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
                C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                   C121 +
               (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
                C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                   C50222) *
                  C50211 * C50125 * C966 +
              ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
                C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
                   C121 +
               (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
                C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
                   C50222) *
                  C50211 * C50125 * C967) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C393) *
              C893 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C391 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C392 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50222) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C893 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C893 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50125 * C893 +
           (((C2694 - C2693 + C2696 - C2695) * C121 +
             (C2698 - C2697 + C2700 - C2699) * C50222) *
                C2159 +
            ((C2702 - C2701 + C2704 - C2703) * C121 +
             (C2706 - C2705 + C2708 - C2707) * C50222) *
                C2160 +
            ((C2162 * C971 - C2157 * C975 + C2163 * C972 - C50065 * C976) *
                 C121 +
             (C2162 * C979 - C2157 * C983 + C2163 * C980 - C50065 * C984) *
                 C50222) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2323 - C2324 + C2325 - C2326) * C121 +
            (C2327 - C2328 + C2329 - C2330) * C50222) *
               C2160 +
           C2387 * C2161) *
              C50125 * C964 +
          (((C2324 - C2323 + C2326 - C2325) * C121 +
            (C2328 - C2327 + C2330 - C2329) * C50222) *
               C2159 +
           ((C2332 - C2331 + C2334 - C2333) * C121 +
            (C2336 - C2335 + C2338 - C2337) * C50222) *
               C2160 +
           C3361 * C2161) *
              C50125 * C965 +
          (C2387 * C2159 +
           ((C2340 - C2339 + C2342 - C2341) * C121 +
            (C2344 - C2343 + C2346 - C2345) * C50222) *
               C2160 +
           ((C3349 - C3350 + C3351 - C3352) * C121 +
            (C3353 - C3354 + C3355 - C3356) * C50222) *
               C2161) *
              C50125 * C966 +
          (C3361 * C2159 +
           ((C3350 - C3349 + C3352 - C3351) * C121 +
            (C3354 - C3353 + C3356 - C3355) * C50222) *
               C2160 +
           ((C2162 * C3336 - C2157 * C3338 + C2163 * C3337 - C50065 * C3339) *
                C121 +
            (C2162 * C3340 - C2157 * C3342 + C2163 * C3341 - C50065 * C3343) *
                C50222) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C391 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            ((C3069 - C3070 + C3071 - C3072) * C121 +
             (C3073 - C3074 + C3075 - C3076) * C50222) *
                C2161) *
               C392 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C3516 - C3517 + C3518 - C3519) * C121 +
             (C3520 - C3521 + C3522 - C3523) * C50222) *
                C2160 +
            ((C3524 - C3525 + C3526 - C3527) * C121 +
             (C3528 - C3529 + C3530 - C3531) * C50222) *
                C2161) *
               C393) *
              C893 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C391 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C2157 * C3051 - C2162 * C3048 + C50065 * C3052 - C2163 * C3049) *
                 C121 +
             (C2157 * C3057 - C2162 * C3053 + C50065 * C3058 - C2163 * C3054) *
                 C50222) *
                C2161) *
               C392 +
           (((C3517 - C3516 + C3519 - C3518) * C121 +
             (C3521 - C3520 + C3523 - C3522) * C50222) *
                C2159 +
            ((C3525 - C3524 + C3527 - C3526) * C121 +
             (C3529 - C3528 + C3531 - C3530) * C50222) *
                C2160 +
            ((C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C121 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50222) *
                C2161) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50125 * C893 +
           ((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 +
            (C3517 - C3516 + C3519 - C3518) * C5037 +
            (C3521 - C3520 + C3523 - C3522) * C5034) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C50125 * C893 +
           ((C2348 - C2347 + C2350 - C2349) * C5035 +
            (C2352 - C2351 + C2354 - C2353) * C5032 +
            (C3077 - C3078 + C3079 - C3080) * C5036 +
            (C3081 - C3082 + C3083 - C3084) * C5033 +
            (C5909 - C5910 + C5911 - C5912) * C5037 +
            (C5913 - C5914 + C5915 - C5916) * C5034) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C5035 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C5032 +
            (C5695 - C5696 + C5697 - C5698) * C5036 +
            (C5699 - C5700 + C5701 - C5702) * C5033 +
            (C5703 - C5704 + C5705 - C5706) * C5037 +
            (C5707 - C5708 + C5709 - C5710) * C5034) *
               C50211 * C50125 * C893 +
           ((C2694 - C2693 + C2696 - C2695) * C5035 +
            (C2698 - C2697 + C2700 - C2699) * C5032 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                C5036 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                C5033 +
            (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C50065 * C1090) *
                C5037 +
            (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C50065 * C1098) *
                C5034) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
               C5035 +
           (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
               C5032 +
           (C5343 - C5344 + C5345 - C5346) * C5036 +
           (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
           C5400 * C5034) *
              C50211 * C50125 * C964 +
          ((C2324 - C2323 + C2326 - C2325) * C5035 +
           (C2328 - C2327 + C2330 - C2329) * C5032 +
           (C3061 - C3062 + C3063 - C3064) * C5036 +
           (C3065 - C3066 + C3067 - C3068) * C5033 +
           (C3517 - C3516 + C3519 - C3518) * C5037 +
           (C3521 - C3520 + C3523 - C3522) * C5034) *
              C50211 * C50125 * C965 +
          (C2379 * C5035 + C2380 * C5032 +
           (C3070 - C3069 + C3072 - C3071) * C5036 +
           (C3074 - C3073 + C3076 - C3075) * C5033 +
           (C3524 - C3525 + C3526 - C3527) * C5037 +
           (C3528 - C3529 + C3530 - C3531) * C5034) *
              C50211 * C50125 * C966 +
          (C3357 * C5035 + C3358 * C5032 +
           (C4031 - C4030 + C4033 - C4032) * C5036 +
           (C4035 - C4034 + C4037 - C4036) * C5033 +
           (C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
               C5037 +
           (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
               C5034) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C391 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C392 +
           (C5399 * C5035 + C5400 * C5032 +
            (C5360 - C5359 + C5362 - C5361) * C5036 +
            (C5364 - C5363 + C5366 - C5365) * C5033 +
            (C2157 * C5333 - C2162 * C5330 + C50065 * C5334 - C2163 * C5331) *
                C5037 +
            (C2157 * C5339 - C2162 * C5335 + C50065 * C5340 - C2163 * C5336) *
                C5034) *
               C50211 * C393) *
              C893 +
          (((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
            C6328 * C5034) *
               C50211 * C391 +
           ((C3062 - C3061 + C3064 - C3063) * C5035 +
            (C3066 - C3065 + C3068 - C3067) * C5032 +
            (C3516 - C3517 + C3518 - C3519) * C5036 +
            (C3520 - C3521 + C3522 - C3523) * C5033 +
            (C6319 - C6320 + C6321 - C6322) * C5037 +
            (C6323 - C6324 + C6325 - C6326) * C5034) *
               C50211 * C392 +
           (C6327 * C5035 + C6328 * C5032 +
            (C6320 - C6319 + C6322 - C6321) * C5036 +
            (C6324 - C6323 + C6326 - C6325) * C5033 +
            (C2162 * C6306 - C2157 * C6308 + C2163 * C6307 - C50065 * C6309) *
                C5037 +
            (C2162 * C6310 - C2157 * C6312 + C2163 * C6311 - C50065 * C6313) *
                C5034) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50222) *
                 C2159 +
             ((C2323 - C2324 + C2325 - C2326) * C121 +
              (C2327 - C2328 + C2329 - C2330) * C50222) *
                 C2160 +
             C2387 * C2161) *
                C50352 +
            (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                  C121 +
              (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                  C50222) *
                 C2159 +
             ((C3061 - C3062 + C3063 - C3064) * C121 +
              (C3065 - C3066 + C3067 - C3068) * C50222) *
                 C2160 +
             ((C3069 - C3070 + C3071 - C3072) * C121 +
              (C3073 - C3074 + C3075 - C3076) * C50222) *
                 C2161) *
                C50189) *
               C893 +
           ((((C2324 - C2323 + C2326 - C2325) * C121 +
              (C2328 - C2327 + C2330 - C2329) * C50222) *
                 C2159 +
             ((C2332 - C2331 + C2334 - C2333) * C121 +
              (C2336 - C2335 + C2338 - C2337) * C50222) *
                 C2160 +
             C3361 * C2161) *
                C50352 +
            (((C3062 - C3061 + C3064 - C3063) * C121 +
              (C3066 - C3065 + C3068 - C3067) * C50222) *
                 C2159 +
             ((C3070 - C3069 + C3072 - C3071) * C121 +
              (C3074 - C3073 + C3076 - C3075) * C50222) *
                 C2160 +
             ((C2157 * C3051 - C2162 * C3048 + C50065 * C3052 - C2163 * C3049) *
                  C121 +
              (C2157 * C3057 - C2162 * C3053 + C50065 * C3058 - C2163 * C3054) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50222) *
                 C2159 +
             ((C2347 - C2348 + C2349 - C2350) * C121 +
              (C2351 - C2352 + C2353 - C2354) * C50222) *
                 C2160 +
             C2388 * C2161) *
                C50352 +
            (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                  C121 +
              (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                  C50222) *
                 C2159 +
             ((C3077 - C3078 + C3079 - C3080) * C121 +
              (C3081 - C3082 + C3083 - C3084) * C50222) *
                 C2160 +
             ((C3085 - C3086 + C3087 - C3088) * C121 +
              (C3089 - C3090 + C3091 - C3092) * C50222) *
                 C2161) *
                C50189) *
               C893 +
           ((((C2348 - C2347 + C2350 - C2349) * C121 +
              (C2352 - C2351 + C2354 - C2353) * C50222) *
                 C2159 +
             ((C2356 - C2355 + C2358 - C2357) * C121 +
              (C2360 - C2359 + C2362 - C2361) * C50222) *
                 C2160 +
             ((C2363 - C2364 + C2365 - C2366) * C121 +
              (C2367 - C2368 + C2369 - C2370) * C50222) *
                 C2161) *
                C50352 +
            (((C3078 - C3077 + C3080 - C3079) * C121 +
              (C3082 - C3081 + C3084 - C3083) * C50222) *
                 C2159 +
             ((C3086 - C3085 + C3088 - C3087) * C121 +
              (C3090 - C3089 + C3092 - C3091) * C50222) *
                 C2160 +
             ((C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                  C121 +
              (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50222) *
                C50211 * C50189) *
               C893 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50222) *
                C50211 * C50189) *
               C893 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C5035 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C5032 +
             (C5343 - C5344 + C5345 - C5346) * C5036 +
             (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
             C5400 * C5034) *
                C50211 * C50352 +
            ((C5344 - C5343 + C5346 - C5345) * C5035 +
             (C5348 - C5347 + C5350 - C5349) * C5032 +
             (C5352 - C5351 + C5354 - C5353) * C5036 +
             (C5356 - C5355 + C5358 - C5357) * C5033 +
             (C5359 - C5360 + C5361 - C5362) * C5037 +
             (C5363 - C5364 + C5365 - C5366) * C5034) *
                C50211 * C50189) *
               C893 +
           (((C2324 - C2323 + C2326 - C2325) * C5035 +
             (C2328 - C2327 + C2330 - C2329) * C5032 +
             (C3061 - C3062 + C3063 - C3064) * C5036 +
             (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
             C6328 * C5034) *
                C50211 * C50352 +
            ((C3062 - C3061 + C3064 - C3063) * C5035 +
             (C3066 - C3065 + C3068 - C3067) * C5032 +
             (C3516 - C3517 + C3518 - C3519) * C5036 +
             (C3520 - C3521 + C3522 - C3523) * C5033 +
             (C6319 - C6320 + C6321 - C6322) * C5037 +
             (C6323 - C6324 + C6325 - C6326) * C5034) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C5035 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C5032 +
             (C5367 - C5368 + C5369 - C5370) * C5036 +
             (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
             C5402 * C5034) *
                C50211 * C50352 +
            ((C5368 - C5367 + C5370 - C5369) * C5035 +
             (C5372 - C5371 + C5374 - C5373) * C5032 +
             (C5376 - C5375 + C5378 - C5377) * C5036 +
             (C5380 - C5379 + C5382 - C5381) * C5033 +
             (C5383 - C5384 + C5385 - C5386) * C5037 +
             (C5387 - C5388 + C5389 - C5390) * C5034) *
                C50211 * C50189) *
               C893 +
           (((C2348 - C2347 + C2350 - C2349) * C5035 +
             (C2352 - C2351 + C2354 - C2353) * C5032 +
             (C3077 - C3078 + C3079 - C3080) * C5036 +
             (C3081 - C3082 + C3083 - C3084) * C5033 +
             (C5909 - C5910 + C5911 - C5912) * C5037 +
             (C5913 - C5914 + C5915 - C5916) * C5034) *
                C50211 * C50352 +
            ((C3078 - C3077 + C3080 - C3079) * C5035 +
             (C3082 - C3081 + C3084 - C3083) * C5032 +
             (C5910 - C5909 + C5912 - C5911) * C5036 +
             (C5914 - C5913 + C5916 - C5915) * C5033 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C5904 - C50065 * C5905) *
                 C5037 +
             (C2162 * C4439 - C2157 * C4445 + C2163 * C5906 - C50065 * C5907) *
                 C5034) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C50125 * C964 +
          ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
            C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
               C121 +
           (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
            C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
               C50222) *
              C50211 * C50125 * C965 +
          ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
            C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
               C121 +
           (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
            C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
               C50222) *
              C50211 * C50125 * C966 +
          ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
            C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
               C121 +
           (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
            C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
               C50222) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50222) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C893 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C893 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50125 * C893 +
           (((C2694 - C2693 + C2696 - C2695) * C121 +
             (C2698 - C2697 + C2700 - C2699) * C50222) *
                C2159 +
            ((C2702 - C2701 + C2704 - C2703) * C121 +
             (C2706 - C2705 + C2708 - C2707) * C50222) *
                C2160 +
            ((C2162 * C971 - C2157 * C975 + C2163 * C972 - C50065 * C976) *
                 C121 +
             (C2162 * C979 - C2157 * C983 + C2163 * C980 - C50065 * C984) *
                 C50222) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2323 - C2324 + C2325 - C2326) * C121 +
            (C2327 - C2328 + C2329 - C2330) * C50222) *
               C2160 +
           C2387 * C2161) *
              C50125 * C964 +
          (((C2324 - C2323 + C2326 - C2325) * C121 +
            (C2328 - C2327 + C2330 - C2329) * C50222) *
               C2159 +
           ((C2332 - C2331 + C2334 - C2333) * C121 +
            (C2336 - C2335 + C2338 - C2337) * C50222) *
               C2160 +
           C3361 * C2161) *
              C50125 * C965 +
          (C2387 * C2159 +
           ((C2340 - C2339 + C2342 - C2341) * C121 +
            (C2344 - C2343 + C2346 - C2345) * C50222) *
               C2160 +
           ((C3349 - C3350 + C3351 - C3352) * C121 +
            (C3353 - C3354 + C3355 - C3356) * C50222) *
               C2161) *
              C50125 * C966 +
          (C3361 * C2159 +
           ((C3350 - C3349 + C3352 - C3351) * C121 +
            (C3354 - C3353 + C3356 - C3355) * C50222) *
               C2160 +
           ((C2162 * C3336 - C2157 * C3338 + C2163 * C3337 - C50065 * C3339) *
                C121 +
            (C2162 * C3340 - C2157 * C3342 + C2163 * C3341 - C50065 * C3343) *
                C50222) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50125 * C893 +
           ((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 +
            (C3517 - C3516 + C3519 - C3518) * C5037 +
            (C3521 - C3520 + C3523 - C3522) * C5034) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C50125 * C893 +
           ((C2348 - C2347 + C2350 - C2349) * C5035 +
            (C2352 - C2351 + C2354 - C2353) * C5032 +
            (C3077 - C3078 + C3079 - C3080) * C5036 +
            (C3081 - C3082 + C3083 - C3084) * C5033 +
            (C5909 - C5910 + C5911 - C5912) * C5037 +
            (C5913 - C5914 + C5915 - C5916) * C5034) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C5035 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C5032 +
            (C5695 - C5696 + C5697 - C5698) * C5036 +
            (C5699 - C5700 + C5701 - C5702) * C5033 +
            (C5703 - C5704 + C5705 - C5706) * C5037 +
            (C5707 - C5708 + C5709 - C5710) * C5034) *
               C50211 * C50125 * C893 +
           ((C2694 - C2693 + C2696 - C2695) * C5035 +
            (C2698 - C2697 + C2700 - C2699) * C5032 +
            (C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                C5036 +
            (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                C5033 +
            (C2162 * C1085 - C2157 * C1089 + C2163 * C1086 - C50065 * C1090) *
                C5037 +
            (C2162 * C1093 - C2157 * C1097 + C2163 * C1094 - C50065 * C1098) *
                C5034) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
               C5035 +
           (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
               C5032 +
           (C5343 - C5344 + C5345 - C5346) * C5036 +
           (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
           C5400 * C5034) *
              C50211 * C50125 * C964 +
          ((C2324 - C2323 + C2326 - C2325) * C5035 +
           (C2328 - C2327 + C2330 - C2329) * C5032 +
           (C3061 - C3062 + C3063 - C3064) * C5036 +
           (C3065 - C3066 + C3067 - C3068) * C5033 +
           (C3517 - C3516 + C3519 - C3518) * C5037 +
           (C3521 - C3520 + C3523 - C3522) * C5034) *
              C50211 * C50125 * C965 +
          (C2379 * C5035 + C2380 * C5032 +
           (C3070 - C3069 + C3072 - C3071) * C5036 +
           (C3074 - C3073 + C3076 - C3075) * C5033 +
           (C3524 - C3525 + C3526 - C3527) * C5037 +
           (C3528 - C3529 + C3530 - C3531) * C5034) *
              C50211 * C50125 * C966 +
          (C3357 * C5035 + C3358 * C5032 +
           (C4031 - C4030 + C4033 - C4032) * C5036 +
           (C4035 - C4034 + C4037 - C4036) * C5033 +
           (C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
               C5037 +
           (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
               C5034) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50222) *
                 C2159 +
             ((C2323 - C2324 + C2325 - C2326) * C121 +
              (C2327 - C2328 + C2329 - C2330) * C50222) *
                 C2160 +
             C2387 * C2161) *
                C1544 +
            (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                  C121 +
              (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                  C50222) *
                 C2159 +
             ((C3061 - C3062 + C3063 - C3064) * C121 +
              (C3065 - C3066 + C3067 - C3068) * C50222) *
                 C2160 +
             C4042 * C2161) *
                C50189) *
               C50351 +
           ((((C2324 - C2323 + C2326 - C2325) * C121 +
              (C2328 - C2327 + C2330 - C2329) * C50222) *
                 C2159 +
             ((C2332 - C2331 + C2334 - C2333) * C121 +
              (C2336 - C2335 + C2338 - C2337) * C50222) *
                 C2160 +
             C3361 * C2161) *
                C1544 +
            (((C3062 - C3061 + C3064 - C3063) * C121 +
              (C3066 - C3065 + C3068 - C3067) * C50222) *
                 C2159 +
             ((C3070 - C3069 + C3072 - C3071) * C121 +
              (C3074 - C3073 + C3076 - C3075) * C50222) *
                 C2160 +
             ((C4030 - C4031 + C4032 - C4033) * C121 +
              (C4034 - C4035 + C4036 - C4037) * C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50222) *
                 C2159 +
             ((C2347 - C2348 + C2349 - C2350) * C121 +
              (C2351 - C2352 + C2353 - C2354) * C50222) *
                 C2160 +
             C2388 * C2161) *
                C1544 +
            (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                  C121 +
              (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                  C50222) *
                 C2159 +
             ((C3077 - C3078 + C3079 - C3080) * C121 +
              (C3081 - C3082 + C3083 - C3084) * C50222) *
                 C2160 +
             ((C3085 - C3086 + C3087 - C3088) * C121 +
              (C3089 - C3090 + C3091 - C3092) * C50222) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C2348 - C2347 + C2350 - C2349) * C121 +
              (C2352 - C2351 + C2354 - C2353) * C50222) *
                 C2159 +
             ((C2356 - C2355 + C2358 - C2357) * C121 +
              (C2360 - C2359 + C2362 - C2361) * C50222) *
                 C2160 +
             ((C2363 - C2364 + C2365 - C2366) * C121 +
              (C2367 - C2368 + C2369 - C2370) * C50222) *
                 C2161) *
                C1544 +
            (((C3078 - C3077 + C3080 - C3079) * C121 +
              (C3082 - C3081 + C3084 - C3083) * C50222) *
                 C2159 +
             ((C3086 - C3085 + C3088 - C3087) * C121 +
              (C3090 - C3089 + C3092 - C3091) * C50222) *
                 C2160 +
             ((C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                  C121 +
              (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50222) *
                C50211 * C1544 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50222) *
                C50211 * C1544 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50222) *
                C50211 * C1544 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50222) *
                C50211 * C1544 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C5035 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C5032 +
             (C5343 - C5344 + C5345 - C5346) * C5036 +
             (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
             C5400 * C5034) *
                C50211 * C1544 +
            ((C5344 - C5343 + C5346 - C5345) * C5035 +
             (C5348 - C5347 + C5350 - C5349) * C5032 +
             (C5352 - C5351 + C5354 - C5353) * C5036 +
             (C5356 - C5355 + C5358 - C5357) * C5033 + C7225 * C5037 +
             C7226 * C5034) *
                C50211 * C50189) *
               C50351 +
           (((C2324 - C2323 + C2326 - C2325) * C5035 +
             (C2328 - C2327 + C2330 - C2329) * C5032 +
             (C3061 - C3062 + C3063 - C3064) * C5036 +
             (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
             C6328 * C5034) *
                C50211 * C1544 +
            ((C3062 - C3061 + C3064 - C3063) * C5035 +
             (C3066 - C3065 + C3068 - C3067) * C5032 +
             (C3516 - C3517 + C3518 - C3519) * C5036 +
             (C3520 - C3521 + C3522 - C3523) * C5033 +
             (C6319 - C6320 + C6321 - C6322) * C5037 +
             (C6323 - C6324 + C6325 - C6326) * C5034) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C5035 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C5032 +
             (C5367 - C5368 + C5369 - C5370) * C5036 +
             (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
             C5402 * C5034) *
                C50211 * C1544 +
            ((C5368 - C5367 + C5370 - C5369) * C5035 +
             (C5372 - C5371 + C5374 - C5373) * C5032 +
             (C5376 - C5375 + C5378 - C5377) * C5036 +
             (C5380 - C5379 + C5382 - C5381) * C5033 +
             (C5383 - C5384 + C5385 - C5386) * C5037 +
             (C5387 - C5388 + C5389 - C5390) * C5034) *
                C50211 * C50189) *
               C50351 +
           (((C2348 - C2347 + C2350 - C2349) * C5035 +
             (C2352 - C2351 + C2354 - C2353) * C5032 +
             (C3077 - C3078 + C3079 - C3080) * C5036 +
             (C3081 - C3082 + C3083 - C3084) * C5033 +
             (C5909 - C5910 + C5911 - C5912) * C5037 +
             (C5913 - C5914 + C5915 - C5916) * C5034) *
                C50211 * C1544 +
            ((C3078 - C3077 + C3080 - C3079) * C5035 +
             (C3082 - C3081 + C3084 - C3083) * C5032 +
             (C5910 - C5909 + C5912 - C5911) * C5036 +
             (C5914 - C5913 + C5916 - C5915) * C5033 +
             (C2162 * C4433 - C2157 * C4437 + C2163 * C5904 - C50065 * C5905) *
                 C5037 +
             (C2162 * C4439 - C2157 * C4445 + C2163 * C5906 - C50065 * C5907) *
                 C5034) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50398 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50399 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C3516 - C3517 + C3518 - C3519) * C121 +
             (C3520 - C3521 + C3522 - C3523) * C50222) *
                C2160 +
            ((C3524 - C3525 + C3526 - C3527) * C121 +
             (C3528 - C3529 + C3530 - C3531) * C50222) *
                C2161) *
               C1960) *
              C50351 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C50398 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50399 +
           (((C3517 - C3516 + C3519 - C3518) * C121 +
             (C3521 - C3520 + C3523 - C3522) * C50222) *
                C2159 +
            ((C3525 - C3524 + C3527 - C3526) * C121 +
             (C3529 - C3528 + C3531 - C3530) * C50222) *
                C2160 +
            ((C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C121 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50222) *
                C2161) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50398 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50399 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C1960) *
              C50351 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50398 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50399 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50222) *
               C50211 * C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50398 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 + C7225 * C5037 +
            C7226 * C5034) *
               C50211 * C50399 +
           (C5399 * C5035 + C5400 * C5032 +
            (C5360 - C5359 + C5362 - C5361) * C5036 +
            (C5364 - C5363 + C5366 - C5365) * C5033 +
            (C7217 - C7218 + C7219 - C7220) * C5037 +
            (C7221 - C7222 + C7223 - C7224) * C5034) *
               C50211 * C1960) *
              C50351 +
          (((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
            C6328 * C5034) *
               C50211 * C50398 +
           ((C3062 - C3061 + C3064 - C3063) * C5035 +
            (C3066 - C3065 + C3068 - C3067) * C5032 +
            (C3516 - C3517 + C3518 - C3519) * C5036 +
            (C3520 - C3521 + C3522 - C3523) * C5033 +
            (C6319 - C6320 + C6321 - C6322) * C5037 +
            (C6323 - C6324 + C6325 - C6326) * C5034) *
               C50211 * C50399 +
           (C6327 * C5035 + C6328 * C5032 +
            (C6320 - C6319 + C6322 - C6321) * C5036 +
            (C6324 - C6323 + C6326 - C6325) * C5033 +
            (C2162 * C6306 - C2157 * C6308 + C2163 * C6307 - C50065 * C6309) *
                C5037 +
            (C2162 * C6310 - C2157 * C6312 + C2163 * C6311 - C50065 * C6313) *
                C5034) *
               C50211 * C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50222) *
                   C50211 * C1544 +
               ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
                 C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                    C121 +
                (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
                 C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                    C50222) *
                   C50211 * C50189) *
                  C50109 * C895 +
              (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
                 C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                    C121 +
                (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
                 C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                    C50222) *
                   C50211 * C1544 +
               ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
                 C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                    C121 +
                (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
                 C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                    C50222) *
                   C50211 * C50189) *
                  C50109 * C896 +
              (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
                 C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                    C121 +
                (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
                 C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                    C50222) *
                   C50211 * C1544 +
               ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
                 C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                    C121 +
                (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
                 C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                    C50222) *
                   C50211 * C50189) *
                  C50109 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
                 C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                    C121 +
                (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
                 C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                    C50222) *
                   C50211 * C1544 +
               ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
                 C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                    C121 +
                (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
                 C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                    C50222) *
                   C50211 * C50189) *
                  C248 +
              (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
                 C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                    C121 +
                (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
                 C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                    C50222) *
                   C50211 * C1544 +
               ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
                 C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                    C121 +
                (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
                 C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                    C50222) *
                   C50211 * C50189) *
                  C249 +
              (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
                 C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                    C121 +
                (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
                 C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                    C50222) *
                   C50211 * C1544 +
               ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
                 C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                    C121 +
                (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
                 C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                    C50222) *
                   C50211 * C50189) *
                  C250) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C1710 +
          ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
            C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
               C121 +
           (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
            C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
               C50222) *
              C50211 * C1711 +
          ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
            C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
               C121 +
           (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
            C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
               C50222) *
              C50211 * C1712 +
          ((C117 * C1714 - C105 * C1718 + C118 * C1715 - C106 * C1719 +
            C119 * C1716 - C107 * C1720 + C120 * C1717 - C108 * C1721) *
               C121 +
           (C117 * C1722 - C105 * C1726 + C118 * C1723 - C106 * C1727 +
            C119 * C1724 - C107 * C1728 + C120 * C1725 - C108 * C1729) *
               C50222) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C1544 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C3077 - C3078 + C3079 - C3080) * C121 +
             (C3081 - C3082 + C3083 - C3084) * C50222) *
                C2160 +
            ((C3085 - C3086 + C3087 - C3088) * C121 +
             (C3089 - C3090 + C3091 - C3092) * C50222) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C1544 +
           (((C2162 * C396 - C2157 * C406 + C2163 * C397 - C50065 * C407) *
                 C121 +
             (C2162 * C410 - C2157 * C426 + C2163 * C411 - C50065 * C427) *
                 C50222) *
                C2159 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                 C50222) *
                C2160 +
            ((C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C121 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C248 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C1544 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50189) *
              C249 +
          ((C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C1544 +
           (C4042 * C2159 +
            ((C4031 - C4030 + C4033 - C4032) * C121 +
             (C4035 - C4034 + C4037 - C4036) * C50222) *
                C2160 +
            ((C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                 C121 +
             (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                 C50222) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2323 - C2324 + C2325 - C2326) * C121 +
            (C2327 - C2328 + C2329 - C2330) * C50222) *
               C2160 +
           C2387 * C2161) *
              C1710 +
          (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                C121 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                C50222) *
               C2159 +
           ((C3061 - C3062 + C3063 - C3064) * C121 +
            (C3065 - C3066 + C3067 - C3068) * C50222) *
               C2160 +
           C4042 * C2161) *
              C1711 +
          (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                C121 +
            (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                C50222) *
               C2159 +
           ((C3516 - C3517 + C3518 - C3519) * C121 +
            (C3520 - C3521 + C3522 - C3523) * C50222) *
               C2160 +
           ((C3524 - C3525 + C3526 - C3527) * C121 +
            (C3528 - C3529 + C3530 - C3531) * C50222) *
               C2161) *
              C1712 +
          (((C2162 * C1714 - C2157 * C1718 + C2163 * C1715 - C50065 * C1719) *
                C121 +
            (C2162 * C1722 - C2157 * C1726 + C2163 * C1723 - C50065 * C1727) *
                C50222) *
               C2159 +
           ((C2162 * C4432 - C2157 * C4436 + C2163 * C4433 - C50065 * C4437) *
                C121 +
            (C2162 * C4438 - C2157 * C4444 + C2163 * C4439 - C50065 * C4445) *
                C50222) *
               C2160 +
           ((C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                C121 +
            (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                C50222) *
               C2161) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C1544 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C1544 +
           ((C5368 - C5367 + C5370 - C5369) * C5035 +
            (C5372 - C5371 + C5374 - C5373) * C5032 +
            (C5376 - C5375 + C5378 - C5377) * C5036 +
            (C5380 - C5379 + C5382 - C5381) * C5033 +
            (C5383 - C5384 + C5385 - C5386) * C5037 +
            (C5387 - C5388 + C5389 - C5390) * C5034) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C5035 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C5032 +
            (C5695 - C5696 + C5697 - C5698) * C5036 +
            (C5699 - C5700 + C5701 - C5702) * C5033 +
            (C5703 - C5704 + C5705 - C5706) * C5037 +
            (C5707 - C5708 + C5709 - C5710) * C5034) *
               C50211 * C1544 +
           ((C5696 - C5695 + C5698 - C5697) * C5035 +
            (C5700 - C5699 + C5702 - C5701) * C5032 +
            (C5704 - C5703 + C5706 - C5705) * C5036 +
            (C5708 - C5707 + C5710 - C5709) * C5033 +
            (C2162 * C1716 - C2157 * C1720 + C2163 * C1717 - C50065 * C1721) *
                C5037 +
            (C2162 * C1724 - C2157 * C1728 + C2163 * C1725 - C50065 * C1729) *
                C5034) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C1544 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C50189) *
              C248 +
          (((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
            C6328 * C5034) *
               C50211 * C1544 +
           ((C3062 - C3061 + C3064 - C3063) * C5035 +
            (C3066 - C3065 + C3068 - C3067) * C5032 +
            (C3516 - C3517 + C3518 - C3519) * C5036 +
            (C3520 - C3521 + C3522 - C3523) * C5033 +
            (C6319 - C6320 + C6321 - C6322) * C5037 +
            (C6323 - C6324 + C6325 - C6326) * C5034) *
               C50211 * C50189) *
              C249 +
          ((C2379 * C5035 + C2380 * C5032 +
            (C3070 - C3069 + C3072 - C3071) * C5036 +
            (C3074 - C3073 + C3076 - C3075) * C5033 +
            (C3524 - C3525 + C3526 - C3527) * C5037 +
            (C3528 - C3529 + C3530 - C3531) * C5034) *
               C50211 * C1544 +
           (C4038 * C5035 + C4039 * C5032 +
            (C3525 - C3524 + C3527 - C3526) * C5036 +
            (C3529 - C3528 + C3531 - C3530) * C5033 +
            (C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                C5037 +
            (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                C5034) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
               C5035 +
           (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
               C5032 +
           (C5343 - C5344 + C5345 - C5346) * C5036 +
           (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
           C5400 * C5034) *
              C50211 * C1710 +
          ((C5344 - C5343 + C5346 - C5345) * C5035 +
           (C5348 - C5347 + C5350 - C5349) * C5032 +
           (C5352 - C5351 + C5354 - C5353) * C5036 +
           (C5356 - C5355 + C5358 - C5357) * C5033 + C7225 * C5037 +
           C7226 * C5034) *
              C50211 * C1711 +
          (C5399 * C5035 + C5400 * C5032 +
           (C5360 - C5359 + C5362 - C5361) * C5036 +
           (C5364 - C5363 + C5366 - C5365) * C5033 +
           (C7217 - C7218 + C7219 - C7220) * C5037 +
           (C7221 - C7222 + C7223 - C7224) * C5034) *
              C50211 * C1712 +
          (C7225 * C5035 + C7226 * C5032 +
           (C7218 - C7217 + C7220 - C7219) * C5036 +
           (C7222 - C7221 + C7224 - C7223) * C5033 +
           (C2162 * C7204 - C2157 * C7206 + C2163 * C7205 - C50065 * C7207) *
               C5037 +
           (C2162 * C7208 - C2157 * C7210 + C2163 * C7209 - C50065 * C7211) *
               C5034) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50398 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50399 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C3516 - C3517 + C3518 - C3519) * C121 +
             (C3520 - C3521 + C3522 - C3523) * C50222) *
                C2160 +
            ((C3524 - C3525 + C3526 - C3527) * C121 +
             (C3528 - C3529 + C3530 - C3531) * C50222) *
                C2161) *
               C1960) *
              C50109 * C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50398 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C3077 - C3078 + C3079 - C3080) * C121 +
             (C3081 - C3082 + C3083 - C3084) * C50222) *
                C2160 +
            ((C3085 - C3086 + C3087 - C3088) * C121 +
             (C3089 - C3090 + C3091 - C3092) * C50222) *
                C2161) *
               C50399 +
           (((C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
                 C121 +
             (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
                 C50222) *
                C2159 +
            ((C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C50065 * C1089) *
                 C121 +
             (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C50065 * C1097) *
                 C50222) *
                C2160 +
            ((C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                 C121 +
             (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                 C50222) *
                C2161) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50398 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50399 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50398 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50399 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50222) *
               C50211 * C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C50398 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 + C7225 * C5037 +
            C7226 * C5034) *
               C50211 * C50399 +
           (C5399 * C5035 + C5400 * C5032 +
            (C5360 - C5359 + C5362 - C5361) * C5036 +
            (C5364 - C5363 + C5366 - C5365) * C5033 +
            (C7217 - C7218 + C7219 - C7220) * C5037 +
            (C7221 - C7222 + C7223 - C7224) * C5034) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C50398 +
           ((C5368 - C5367 + C5370 - C5369) * C5035 +
            (C5372 - C5371 + C5374 - C5373) * C5032 +
            (C5376 - C5375 + C5378 - C5377) * C5036 +
            (C5380 - C5379 + C5382 - C5381) * C5033 +
            (C5383 - C5384 + C5385 - C5386) * C5037 +
            (C5387 - C5388 + C5389 - C5390) * C5034) *
               C50211 * C50399 +
           (C5401 * C5035 + C5402 * C5032 +
            (C5384 - C5383 + C5386 - C5385) * C5036 +
            (C5388 - C5387 + C5390 - C5389) * C5033 +
            (C2162 * C5331 - C2157 * C5334 + C2163 * C5332 - C50065 * C5337) *
                C5037 +
            (C2162 * C5336 - C2157 * C5340 + C2163 * C5338 - C50065 * C5341) *
                C5034) *
               C50211 * C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C248 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C1544 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50189) *
              C249 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50222) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C1544 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50222) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C1544 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C3077 - C3078 + C3079 - C3080) * C121 +
             (C3081 - C3082 + C3083 - C3084) * C50222) *
                C2160 +
            ((C3085 - C3086 + C3087 - C3088) * C121 +
             (C3089 - C3090 + C3091 - C3092) * C50222) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C1544 +
           (((C2162 * C396 - C2157 * C406 + C2163 * C397 - C50065 * C407) *
                 C121 +
             (C2162 * C410 - C2157 * C426 + C2163 * C411 - C50065 * C427) *
                 C50222) *
                C2159 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                 C50222) *
                C2160 +
            ((C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C121 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C248 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C1544 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50189) *
              C249 +
          ((C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C1544 +
           (C4042 * C2159 +
            ((C4031 - C4030 + C4033 - C4032) * C121 +
             (C4035 - C4034 + C4037 - C4036) * C50222) *
                C2160 +
            ((C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                 C121 +
             (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                 C50222) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C1544 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C5035 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C5032 +
            (C5367 - C5368 + C5369 - C5370) * C5036 +
            (C5371 - C5372 + C5373 - C5374) * C5033 + C5401 * C5037 +
            C5402 * C5034) *
               C50211 * C1544 +
           ((C5368 - C5367 + C5370 - C5369) * C5035 +
            (C5372 - C5371 + C5374 - C5373) * C5032 +
            (C5376 - C5375 + C5378 - C5377) * C5036 +
            (C5380 - C5379 + C5382 - C5381) * C5033 +
            (C5383 - C5384 + C5385 - C5386) * C5037 +
            (C5387 - C5388 + C5389 - C5390) * C5034) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C5035 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C5032 +
            (C5695 - C5696 + C5697 - C5698) * C5036 +
            (C5699 - C5700 + C5701 - C5702) * C5033 +
            (C5703 - C5704 + C5705 - C5706) * C5037 +
            (C5707 - C5708 + C5709 - C5710) * C5034) *
               C50211 * C1544 +
           ((C5696 - C5695 + C5698 - C5697) * C5035 +
            (C5700 - C5699 + C5702 - C5701) * C5032 +
            (C5704 - C5703 + C5706 - C5705) * C5036 +
            (C5708 - C5707 + C5710 - C5709) * C5033 +
            (C2162 * C1716 - C2157 * C1720 + C2163 * C1717 - C50065 * C1721) *
                C5037 +
            (C2162 * C1724 - C2157 * C1728 + C2163 * C1725 - C50065 * C1729) *
                C5034) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C5035 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C5032 +
            (C5343 - C5344 + C5345 - C5346) * C5036 +
            (C5347 - C5348 + C5349 - C5350) * C5033 + C5399 * C5037 +
            C5400 * C5034) *
               C50211 * C1544 +
           ((C5344 - C5343 + C5346 - C5345) * C5035 +
            (C5348 - C5347 + C5350 - C5349) * C5032 +
            (C5352 - C5351 + C5354 - C5353) * C5036 +
            (C5356 - C5355 + C5358 - C5357) * C5033 +
            (C5359 - C5360 + C5361 - C5362) * C5037 +
            (C5363 - C5364 + C5365 - C5366) * C5034) *
               C50211 * C50189) *
              C248 +
          (((C2324 - C2323 + C2326 - C2325) * C5035 +
            (C2328 - C2327 + C2330 - C2329) * C5032 +
            (C3061 - C3062 + C3063 - C3064) * C5036 +
            (C3065 - C3066 + C3067 - C3068) * C5033 + C6327 * C5037 +
            C6328 * C5034) *
               C50211 * C1544 +
           ((C3062 - C3061 + C3064 - C3063) * C5035 +
            (C3066 - C3065 + C3068 - C3067) * C5032 +
            (C3516 - C3517 + C3518 - C3519) * C5036 +
            (C3520 - C3521 + C3522 - C3523) * C5033 +
            (C6319 - C6320 + C6321 - C6322) * C5037 +
            (C6323 - C6324 + C6325 - C6326) * C5034) *
               C50211 * C50189) *
              C249 +
          ((C2379 * C5035 + C2380 * C5032 +
            (C3070 - C3069 + C3072 - C3071) * C5036 +
            (C3074 - C3073 + C3076 - C3075) * C5033 +
            (C3524 - C3525 + C3526 - C3527) * C5037 +
            (C3528 - C3529 + C3530 - C3531) * C5034) *
               C50211 * C1544 +
           (C4038 * C5035 + C4039 * C5032 +
            (C3525 - C3524 + C3527 - C3526) * C5036 +
            (C3529 - C3528 + C3531 - C3530) * C5033 +
            (C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                C5037 +
            (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                C5034) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50125 * C50351 +
           ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C50125 * C50351 +
           ((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
            (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
            (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
            (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C10568 +
            (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50365 +
            (C50392 * C406 - C7815 * C396 + C50393 * C407 - C7816 * C397 +
             C7812 * C420 - C7817 * C402) *
                C10569 +
            (C50392 * C426 - C7815 * C410 + C50393 * C427 - C7816 * C411 +
             C7812 * C432 - C7817 * C421) *
                C50286) *
               C50211 * C50125 * C50351 +
           ((C8306 - C8305 + C8308 - C8307 + C8310 - C8309) * C10568 +
            (C8312 - C8311 + C8314 - C8313 + C8316 - C8315) * C50365 +
            (C7815 * C777 - C50392 * C782 + C7816 * C778 - C50393 * C783 +
             C7817 * C779 - C7812 * C788) *
                C10569 +
            (C7815 * C786 - C50392 * C792 + C7816 * C787 - C50393 * C793 +
             C7817 * C789 - C7812 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C10568 +
             (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50365 +
             (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
                C50211 * C50352 +
            ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
             (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
             (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
             (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
             (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
                C50211 * C50352 +
            ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
             (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
             (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
             (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C10568 +
             (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50365 +
             (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
                C50211 * C50352 +
            ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
             (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
             (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
             (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
                C50211 * C50352 +
            ((C8670 - C8669 + C8672 - C8671 + C8674 - C8673) * C10568 +
             (C8676 - C8675 + C8678 - C8677 + C8680 - C8679) * C50365 +
             (C7815 * C1084 - C50392 * C1088 + C7816 * C1085 - C50393 * C1089 +
              C7817 * C1086 - C7812 * C1090) *
                 C10569 +
             (C7815 * C1092 - C50392 * C1096 + C7816 * C1093 - C50393 * C1097 +
              C7817 * C1094 - C7812 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C50392 * C404 - C7815 * C394 + C50393 * C405 - C7816 * C395 +
             C7812 * C406 - C7817 * C396) *
                C10569 +
            (C50392 * C424 - C7815 * C408 + C50393 * C425 - C7816 * C409 +
             C7812 * C426 - C7817 * C410) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50125 * C249 +
           ((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
            (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
            (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
            (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
               C50211 * C50125 * C250) *
              C251 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C7815 * C395 - C50392 * C405 + C7816 * C396 - C50393 * C406 +
             C7817 * C397 - C7812 * C407) *
                C10569 +
            (C7815 * C409 - C50392 * C425 + C7816 * C410 - C50393 * C426 +
             C7817 * C411 - C7812 * C427) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
            (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
            (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
            (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
               C50211 * C50125 * C249 +
           ((C8002 - C8001 + C8004 - C8003 + C8006 - C8005) * C10568 +
            (C8008 - C8007 + C8010 - C8009 + C8012 - C8011) * C50365 +
            (C7815 * C1431 - C50392 * C1435 + C7816 * C1432 - C50393 * C1436 +
             C7817 * C1433 - C7812 * C1437) *
                C10569 +
            (C7815 * C1439 - C50392 * C1443 + C7816 * C1440 - C50393 * C1444 +
             C7817 * C1441 - C7812 * C1445) *
                C50286) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
            C7812 * C131 - C7817 * C124) *
               C10568 +
           (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
            C7812 * C145 - C7817 * C135) *
               C50365 +
           (C50392 * C404 - C7815 * C394 + C50393 * C405 - C7816 * C395 +
            C7812 * C406 - C7817 * C396) *
               C10569 +
           (C50392 * C424 - C7815 * C408 + C50393 * C425 - C7816 * C409 +
            C7812 * C426 - C7817 * C410) *
               C50286) *
              C50211 * C50125 * C50109 * C113 +
          ((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
            C7817 * C125 - C7812 * C132) *
               C10568 +
           (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
            C7817 * C136 - C7812 * C146) *
               C50365 +
           (C7815 * C395 - C50392 * C405 + C7816 * C396 - C50393 * C406 +
            C7817 * C397 - C7812 * C407) *
               C10569 +
           (C7815 * C409 - C50392 * C425 + C7816 * C410 - C50393 * C426 +
            C7817 * C411 - C7812 * C427) *
               C50286) *
              C50211 * C50125 * C50109 * C114 +
          ((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
            C7812 * C137 - C7817 * C126) *
               C10568 +
           (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
            C7812 * C147 - C7817 * C138) *
               C50365 +
           (C50392 * C406 - C7815 * C396 + C50393 * C407 - C7816 * C397 +
            C7812 * C420 - C7817 * C402) *
               C10569 +
           (C50392 * C426 - C7815 * C410 + C50393 * C427 - C7816 * C411 +
            C7812 * C432 - C7817 * C421) *
               C50286) *
              C50211 * C50125 * C50109 * C115 +
          ((C7815 * C125 - C50392 * C132 + C7816 * C126 - C50393 * C137 +
            C7817 * C127 - C7812 * C139) *
               C10568 +
           (C7815 * C136 - C50392 * C146 + C7816 * C138 - C50393 * C147 +
            C7817 * C140 - C7812 * C148) *
               C50365 +
           (C7815 * C397 - C50392 * C407 + C7816 * C402 - C50393 * C420 +
            C7817 * C641 - C7812 * C642) *
               C10569 +
           (C7815 * C411 - C50392 * C427 + C7816 * C421 - C50393 * C432 +
            C7817 * C643 - C7812 * C644) *
               C50286) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C391 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C392 +
           ((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C10568 +
            (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50365 +
            (C50392 * C1718 - C7815 * C1714 + C50393 * C1719 - C7816 * C1715 +
             C7812 * C1720 - C7817 * C1716) *
                C10569 +
            (C50392 * C1726 - C7815 * C1722 + C50393 * C1727 - C7816 * C1723 +
             C7812 * C1728 - C7817 * C1724) *
                C50286) *
               C50211 * C393) *
              C50109 * C251 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C391 +
           ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
            (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
            (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
               C50211 * C392 +
           ((C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C10568 +
            (C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C50365 +
            (C7815 * C1715 - C50392 * C1719 + C7816 * C1716 - C50393 * C1720 +
             C7817 * C1717 - C7812 * C1721) *
                C10569 +
            (C7815 * C1723 - C50392 * C1727 + C7816 * C1724 - C50393 * C1728 +
             C7817 * C1725 - C7812 * C1729) *
                C50286) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50352 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C50352 +
           ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
            (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
            (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C10568 +
            (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50365 +
            (C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C10569 +
            (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50286) *
               C50211 * C50352 +
           ((C11204 - C11203 + C11206 - C11205 + C11208 - C11207) * C10568 +
            (C11210 - C11209 + C11212 - C11211 + C11214 - C11213) * C50365 +
            (C7815 * C400 - C50392 * C414 + C7816 * C401 - C50393 * C415 +
             C7817 * C403 - C7812 * C422) *
                C10569 +
            (C7815 * C418 - C50392 * C430 + C7816 * C419 - C50393 * C431 +
             C7817 * C423 - C7812 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                    C7816 * C123 + C7812 * C131 - C7817 * C124) *
                       C10568 +
                   (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                    C7816 * C134 + C7812 * C145 - C7817 * C135) *
                       C50365 +
                   (C50392 * C404 - C7815 * C394 + C50393 * C405 -
                    C7816 * C395 + C7812 * C406 - C7817 * C396) *
                       C10569 +
                   (C50392 * C424 - C7815 * C408 + C50393 * C425 -
                    C7816 * C409 + C7812 * C426 - C7817 * C410) *
                       C50286) *
                      C50211 * C50125 * C50109 * C113 +
                  ((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                    C50393 * C131 + C7817 * C125 - C7812 * C132) *
                       C10568 +
                   (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                    C50393 * C145 + C7817 * C136 - C7812 * C146) *
                       C50365 +
                   (C7815 * C395 - C50392 * C405 + C7816 * C396 -
                    C50393 * C406 + C7817 * C397 - C7812 * C407) *
                       C10569 +
                   (C7815 * C409 - C50392 * C425 + C7816 * C410 -
                    C50393 * C426 + C7817 * C411 - C7812 * C427) *
                       C50286) *
                      C50211 * C50125 * C50109 * C114 +
                  ((C50392 * C131 - C7815 * C124 + C50393 * C132 -
                    C7816 * C125 + C7812 * C137 - C7817 * C126) *
                       C10568 +
                   (C50392 * C145 - C7815 * C135 + C50393 * C146 -
                    C7816 * C136 + C7812 * C147 - C7817 * C138) *
                       C50365 +
                   (C50392 * C406 - C7815 * C396 + C50393 * C407 -
                    C7816 * C397 + C7812 * C420 - C7817 * C402) *
                       C10569 +
                   (C50392 * C426 - C7815 * C410 + C50393 * C427 -
                    C7816 * C411 + C7812 * C432 - C7817 * C421) *
                       C50286) *
                      C50211 * C50125 * C50109 * C115 +
                  ((C7815 * C125 - C50392 * C132 + C7816 * C126 -
                    C50393 * C137 + C7817 * C127 - C7812 * C139) *
                       C10568 +
                   (C7815 * C136 - C50392 * C146 + C7816 * C138 -
                    C50393 * C147 + C7817 * C140 - C7812 * C148) *
                       C50365 +
                   (C7815 * C397 - C50392 * C407 + C7816 * C402 -
                    C50393 * C420 + C7817 * C641 - C7812 * C642) *
                       C10569 +
                   (C7815 * C411 - C50392 * C427 + C7816 * C421 -
                    C50393 * C432 + C7817 * C643 - C7812 * C644) *
                       C50286) *
                      C50211 * C50125 * C50109 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C50392 * C129 - C7815 * C122 + C50393 * C130 -
                     C7816 * C123 + C7812 * C131 - C7817 * C124) *
                        C10568 +
                    (C50392 * C143 - C7815 * C133 + C50393 * C144 -
                     C7816 * C134 + C7812 * C145 - C7817 * C135) *
                        C50365 +
                    (C50392 * C404 - C7815 * C394 + C50393 * C405 -
                     C7816 * C395 + C7812 * C406 - C7817 * C396) *
                        C10569 +
                    (C50392 * C424 - C7815 * C408 + C50393 * C425 -
                     C7816 * C409 + C7812 * C426 - C7817 * C410) *
                        C50286) *
                       C50211 * C50125 * C248 +
                   ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
                    (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
                    (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
                    (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
                       C50211 * C50125 * C249 +
                   ((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
                    (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
                    (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
                    (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
                       C50211 * C50125 * C250) *
                      C251 +
                  (((C7815 * C123 - C50392 * C130 + C7816 * C124 -
                     C50393 * C131 + C7817 * C125 - C7812 * C132) *
                        C10568 +
                    (C7815 * C134 - C50392 * C144 + C7816 * C135 -
                     C50393 * C145 + C7817 * C136 - C7812 * C146) *
                        C50365 +
                    (C7815 * C395 - C50392 * C405 + C7816 * C396 -
                     C50393 * C406 + C7817 * C397 - C7812 * C407) *
                        C10569 +
                    (C7815 * C409 - C50392 * C425 + C7816 * C410 -
                     C50393 * C426 + C7817 * C411 - C7812 * C427) *
                        C50286) *
                       C50211 * C50125 * C248 +
                   ((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
                    (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
                    (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
                    (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
                       C50211 * C50125 * C249 +
                   ((C8002 - C8001 + C8004 - C8003 + C8006 - C8005) * C10568 +
                    (C8008 - C8007 + C8010 - C8009 + C8012 - C8011) * C50365 +
                    (C7815 * C1431 - C50392 * C1435 + C7816 * C1432 -
                     C50393 * C1436 + C7817 * C1433 - C7812 * C1437) *
                        C10569 +
                    (C7815 * C1439 - C50392 * C1443 + C7816 * C1440 -
                     C50393 * C1444 + C7817 * C1441 - C7812 * C1445) *
                        C50286) *
                       C50211 * C50125 * C250) *
                      C50096)) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50125 * C50396 +
           ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50125 * C50397 +
           ((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
            (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
            (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
            (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C50125 * C50396 +
           ((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
            (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
            (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
            (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
               C50211 * C50125 * C50397 +
           ((C8002 - C8001 + C8004 - C8003 + C8006 - C8005) * C10568 +
            (C8008 - C8007 + C8010 - C8009 + C8012 - C8011) * C50365 +
            (C7815 * C1431 - C50392 * C1435 + C7816 * C1432 - C50393 * C1436 +
             C7817 * C1433 - C7812 * C1437) *
                C10569 +
            (C7815 * C1439 - C50392 * C1443 + C7816 * C1440 - C50393 * C1444 +
             C7817 * C1441 - C7812 * C1445) *
                C50286) *
               C50211 * C50125 * C1199) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50352 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50189) *
              C50396 +
          (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50352 +
           ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
            (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
            (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
            (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
               C50211 * C50189) *
              C50397 +
          (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
            (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
            (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
            (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
               C50211 * C50352 +
           ((C9582 - C9581 + C9584 - C9583 + C9586 - C9585) * C10568 +
            (C9588 - C9587 + C9590 - C9589 + C9592 - C9591) * C50365 +
            (C7815 * C2534 - C50392 * C2537 + C7816 * C2535 - C50393 * C2538 +
             C7817 * C2536 - C7812 * C2541) *
                C10569 +
            (C7815 * C2539 - C50392 * C2543 + C7816 * C2540 - C50393 * C2544 +
             C7817 * C2542 - C7812 * C2545) *
                C50286) *
               C50211 * C50189) *
              C1199) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
            C7812 * C131 - C7817 * C124) *
               C10568 +
           (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
            C7812 * C145 - C7817 * C135) *
               C50365 +
           (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
           (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
              C50211 * C50125 * C964 +
          ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
           (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
           (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
           (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
              C50211 * C50125 * C965 +
          ((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
           (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
           (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
           (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
              C50211 * C50125 * C966 +
          ((C8926 - C8925 + C8928 - C8927 + C8930 - C8929) * C10568 +
           (C8932 - C8931 + C8934 - C8933 + C8936 - C8935) * C50365 +
           (C7815 * C3048 - C50392 * C3051 + C7816 * C3049 - C50393 * C3052 +
            C7817 * C3050 - C7812 * C3055) *
               C10569 +
           (C7815 * C3053 - C50392 * C3057 + C7816 * C3054 - C50393 * C3058 +
            C7817 * C3056 - C7812 * C3059) *
               C50286) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50125 * C893 +
           ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C50125 * C893 +
           ((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
            (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
            (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
            (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C10568 +
            (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50365 +
            (C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C10569 +
            (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50286) *
               C50211 * C50125 * C893 +
           ((C8306 - C8305 + C8308 - C8307 + C8310 - C8309) * C10568 +
            (C8312 - C8311 + C8314 - C8313 + C8316 - C8315) * C50365 +
            (C7815 * C777 - C50392 * C782 + C7816 * C778 - C50393 * C783 +
             C7817 * C779 - C7812 * C788) *
                C10569 +
            (C7815 * C786 - C50392 * C792 + C7816 * C787 - C50393 * C793 +
             C7817 * C789 - C7812 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C391 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C392 +
           ((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C10568 +
            (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50365 +
            (C50392 * C1718 - C7815 * C1714 + C50393 * C1719 - C7816 * C1715 +
             C7812 * C1720 - C7817 * C1716) *
                C10569 +
            (C50392 * C1726 - C7815 * C1722 + C50393 * C1727 - C7816 * C1723 +
             C7812 * C1728 - C7817 * C1724) *
                C50286) *
               C50211 * C393) *
              C893 +
          (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C391 +
           ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
            (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
            (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
            (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
               C50211 * C392 +
           ((C9084 - C9083 + C9086 - C9085 + C9088 - C9087) * C10568 +
            (C9090 - C9089 + C9092 - C9091 + C9094 - C9093) * C50365 +
            (C7815 * C4432 - C50392 * C4436 + C7816 * C4433 - C50393 * C4437 +
             C7817 * C5904 - C7812 * C5905) *
                C10569 +
            (C7815 * C4438 - C50392 * C4444 + C7816 * C4439 - C50393 * C4445 +
             C7817 * C5906 - C7812 * C5907) *
                C50286) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C10568 +
             (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50365 +
             (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
                C50211 * C50352 +
            ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
             (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
                C50211 * C50189) *
               C893 +
           (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
             (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
             (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
             (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
                C50211 * C50352 +
            ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
             (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
             (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
             (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C10568 +
             (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50365 +
             (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
                C50211 * C50352 +
            ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
                C50211 * C50189) *
               C893 +
           (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
             (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
             (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
             (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
                C50211 * C50352 +
            ((C8670 - C8669 + C8672 - C8671 + C8674 - C8673) * C10568 +
             (C8676 - C8675 + C8678 - C8677 + C8680 - C8679) * C50365 +
             (C7815 * C1084 - C50392 * C1088 + C7816 * C1085 - C50393 * C1089 +
              C7817 * C1086 - C7812 * C1090) *
                 C10569 +
             (C7815 * C1092 - C50392 * C1096 + C7816 * C1093 - C50393 * C1097 +
              C7817 * C1094 - C7812 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50125 * C893 +
           ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C50125 * C893 +
           ((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
            (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
            (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
            (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C10568 +
            (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50365 +
            (C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C10569 +
            (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50286) *
               C50211 * C50125 * C893 +
           ((C8306 - C8305 + C8308 - C8307 + C8310 - C8309) * C10568 +
            (C8312 - C8311 + C8314 - C8313 + C8316 - C8315) * C50365 +
            (C7815 * C777 - C50392 * C782 + C7816 * C778 - C50393 * C783 +
             C7817 * C779 - C7812 * C788) *
                C10569 +
            (C7815 * C786 - C50392 * C792 + C7816 * C787 - C50393 * C793 +
             C7817 * C789 - C7812 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
            C7812 * C131 - C7817 * C124) *
               C10568 +
           (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
            C7812 * C145 - C7817 * C135) *
               C50365 +
           (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
           (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
              C50211 * C50125 * C964 +
          ((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
           (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
           (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
           (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
              C50211 * C50125 * C965 +
          ((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
           (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
           (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
           (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
              C50211 * C50125 * C966 +
          ((C8926 - C8925 + C8928 - C8927 + C8930 - C8929) * C10568 +
           (C8932 - C8931 + C8934 - C8933 + C8936 - C8935) * C50365 +
           (C7815 * C3048 - C50392 * C3051 + C7816 * C3049 - C50393 * C3052 +
            C7817 * C3050 - C7812 * C3055) *
               C10569 +
           (C7815 * C3053 - C50392 * C3057 + C7816 * C3054 - C50393 * C3058 +
            C7817 * C3056 - C7812 * C3059) *
               C50286) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
              C7812 * C131 - C7817 * C124) *
                 C10568 +
             (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
              C7812 * C145 - C7817 * C135) *
                 C50365 +
             (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
             (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
                C50211 * C1544 +
            ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
             (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
             (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
             (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
             (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
             (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
             (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
                C50211 * C1544 +
            ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
             (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
             (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
             (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
              C7817 * C125 - C7812 * C132) *
                 C10568 +
             (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
              C7817 * C136 - C7812 * C146) *
                 C50365 +
             (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
             (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
                C50211 * C1544 +
            ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
             (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
             (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C7990 - C7989 + C7992 - C7991 + C7994 - C7993) * C10568 +
             (C7996 - C7995 + C7998 - C7997 + C8000 - C7999) * C50365 +
             (C8669 - C8670 + C8671 - C8672 + C8673 - C8674) * C10569 +
             (C8675 - C8676 + C8677 - C8678 + C8679 - C8680) * C50286) *
                C50211 * C1544 +
            ((C8670 - C8669 + C8672 - C8671 + C8674 - C8673) * C10568 +
             (C8676 - C8675 + C8678 - C8677 + C8680 - C8679) * C50365 +
             (C7815 * C1084 - C50392 * C1088 + C7816 * C1085 - C50393 * C1089 +
              C7817 * C1086 - C7812 * C1090) *
                 C10569 +
             (C7815 * C1092 - C50392 * C1096 + C7816 * C1093 - C50393 * C1097 +
              C7817 * C1094 - C7812 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50398 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50399 +
           ((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C10568 +
            (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50365 +
            (C12675 - C12676 + C12677 - C12678 + C12679 - C12680) * C10569 +
            (C12681 - C12682 + C12683 - C12684 + C12685 - C12686) * C50286) *
               C50211 * C1960) *
              C50351 +
          (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C50398 +
           ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
            (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
            (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
            (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
               C50211 * C50399 +
           ((C9084 - C9083 + C9086 - C9085 + C9088 - C9087) * C10568 +
            (C9090 - C9089 + C9092 - C9091 + C9094 - C9093) * C50365 +
            (C7815 * C4432 - C50392 * C4436 + C7816 * C4433 - C50393 * C4437 +
             C7817 * C5904 - C7812 * C5905) *
                C10569 +
            (C7815 * C4438 - C50392 * C4444 + C7816 * C4439 - C50393 * C4445 +
             C7817 * C5906 - C7812 * C5907) *
                C50286) *
               C50211 * C1960) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C1544 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50189) *
              C248 +
          (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C1544 +
           ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
            (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
            (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
            (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
               C50211 * C50189) *
              C249 +
          (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
            (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
            (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
            (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
               C50211 * C1544 +
           ((C9582 - C9581 + C9584 - C9583 + C9586 - C9585) * C10568 +
            (C9588 - C9587 + C9590 - C9589 + C9592 - C9591) * C50365 +
            (C7815 * C2534 - C50392 * C2537 + C7816 * C2535 - C50393 * C2538 +
             C7817 * C2536 - C7812 * C2541) *
                C10569 +
            (C7815 * C2539 - C50392 * C2543 + C7816 * C2540 - C50393 * C2544 +
             C7817 * C2542 - C7812 * C2545) *
                C50286) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C1544 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C1544 +
           ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
            (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
            (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C10568 +
            (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50365 +
            (C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C10569 +
            (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50286) *
               C50211 * C1544 +
           ((C11204 - C11203 + C11206 - C11205 + C11208 - C11207) * C10568 +
            (C11210 - C11209 + C11212 - C11211 + C11214 - C11213) * C50365 +
            (C7815 * C400 - C50392 * C414 + C7816 * C401 - C50393 * C415 +
             C7817 * C403 - C7812 * C422) *
                C10569 +
            (C7815 * C418 - C50392 * C430 + C7816 * C419 - C50393 * C431 +
             C7817 * C423 - C7812 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
            C7812 * C131 - C7817 * C124) *
               C10568 +
           (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
            C7812 * C145 - C7817 * C135) *
               C50365 +
           (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
           (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
              C50211 * C1710 +
          ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
           (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
           (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
           (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
              C50211 * C1711 +
          ((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C10568 +
           (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50365 +
           (C12675 - C12676 + C12677 - C12678 + C12679 - C12680) * C10569 +
           (C12681 - C12682 + C12683 - C12684 + C12685 - C12686) * C50286) *
              C50211 * C1712 +
          ((C12676 - C12675 + C12678 - C12677 + C12680 - C12679) * C10568 +
           (C12682 - C12681 + C12684 - C12683 + C12686 - C12685) * C50365 +
           (C7815 * C5330 - C50392 * C5333 + C7816 * C5331 - C50393 * C5334 +
            C7817 * C5332 - C7812 * C5337) *
               C10569 +
           (C7815 * C5335 - C50392 * C5339 + C7816 * C5336 - C50393 * C5340 +
            C7817 * C5338 - C7812 * C5341) *
               C50286) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C50398 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50399 +
           ((C10876 - C10875 + C10878 - C10877 + C10880 - C10879) * C10568 +
            (C10882 - C10881 + C10884 - C10883 + C10886 - C10885) * C50365 +
            (C12675 - C12676 + C12677 - C12678 + C12679 - C12680) * C10569 +
            (C12681 - C12682 + C12683 - C12684 + C12685 - C12686) * C50286) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C50398 +
           ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
            (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
            (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
               C50211 * C50399 +
           ((C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C10568 +
            (C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C50365 +
            (C7815 * C1715 - C50392 * C1719 + C7816 * C1716 - C50393 * C1720 +
             C7817 * C1717 - C7812 * C1721) *
                C10569 +
            (C7815 * C1723 - C50392 * C1727 + C7816 * C1724 - C50393 * C1728 +
             C7817 * C1725 - C7812 * C1729) *
                C50286) *
               C50211 * C1960) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C1544 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C7815 * C123 - C50392 * C130 + C7816 * C124 - C50393 * C131 +
             C7817 * C125 - C7812 * C132) *
                C10568 +
            (C7815 * C134 - C50392 * C144 + C7816 * C135 - C50393 * C145 +
             C7817 * C136 - C7812 * C146) *
                C50365 +
            (C10887 - C10888 + C10889 - C10890 + C10891 - C10892) * C10569 +
            (C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C50286) *
               C50211 * C1544 +
           ((C10888 - C10887 + C10890 - C10889 + C10892 - C10891) * C10568 +
            (C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C50365 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C10569 +
            (C10905 - C10906 + C10907 - C10908 + C10909 - C10910) * C50286) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C50392 * C131 - C7815 * C124 + C50393 * C132 - C7816 * C125 +
             C7812 * C137 - C7817 * C126) *
                C10568 +
            (C50392 * C145 - C7815 * C135 + C50393 * C146 - C7816 * C136 +
             C7812 * C147 - C7817 * C138) *
                C50365 +
            (C11203 - C11204 + C11205 - C11206 + C11207 - C11208) * C10569 +
            (C11209 - C11210 + C11211 - C11212 + C11213 - C11214) * C50286) *
               C50211 * C1544 +
           ((C11204 - C11203 + C11206 - C11205 + C11208 - C11207) * C10568 +
            (C11210 - C11209 + C11212 - C11211 + C11214 - C11213) * C50365 +
            (C7815 * C400 - C50392 * C414 + C7816 * C401 - C50393 * C415 +
             C7817 * C403 - C7812 * C422) *
                C10569 +
            (C7815 * C418 - C50392 * C430 + C7816 * C419 - C50393 * C431 +
             C7817 * C423 - C7812 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50392 * C129 - C7815 * C122 + C50393 * C130 - C7816 * C123 +
             C7812 * C131 - C7817 * C124) *
                C10568 +
            (C50392 * C143 - C7815 * C133 + C50393 * C144 - C7816 * C134 +
             C7812 * C145 - C7817 * C135) *
                C50365 +
            (C10863 - C10864 + C10865 - C10866 + C10867 - C10868) * C10569 +
            (C10869 - C10870 + C10871 - C10872 + C10873 - C10874) * C50286) *
               C50211 * C1544 +
           ((C10864 - C10863 + C10866 - C10865 + C10868 - C10867) * C10568 +
            (C10870 - C10869 + C10872 - C10871 + C10874 - C10873) * C50365 +
            (C10875 - C10876 + C10877 - C10878 + C10879 - C10880) * C10569 +
            (C10881 - C10882 + C10883 - C10884 + C10885 - C10886) * C50286) *
               C50211 * C50189) *
              C248 +
          (((C7966 - C7965 + C7968 - C7967 + C7970 - C7969) * C10568 +
            (C7972 - C7971 + C7974 - C7973 + C7976 - C7975) * C50365 +
            (C8657 - C8658 + C8659 - C8660 + C8661 - C8662) * C10569 +
            (C8663 - C8664 + C8665 - C8666 + C8667 - C8668) * C50286) *
               C50211 * C1544 +
           ((C8658 - C8657 + C8660 - C8659 + C8662 - C8661) * C10568 +
            (C8664 - C8663 + C8666 - C8665 + C8668 - C8667) * C50365 +
            (C9083 - C9084 + C9085 - C9086 + C9087 - C9088) * C10569 +
            (C9089 - C9090 + C9091 - C9092 + C9093 - C9094) * C50286) *
               C50211 * C50189) *
              C249 +
          (((C7978 - C7977 + C7980 - C7979 + C7982 - C7981) * C10568 +
            (C7984 - C7983 + C7986 - C7985 + C7988 - C7987) * C50365 +
            (C9581 - C9582 + C9583 - C9584 + C9585 - C9586) * C10569 +
            (C9587 - C9588 + C9589 - C9590 + C9591 - C9592) * C50286) *
               C50211 * C1544 +
           ((C9582 - C9581 + C9584 - C9583 + C9586 - C9585) * C10568 +
            (C9588 - C9587 + C9590 - C9589 + C9592 - C9591) * C50365 +
            (C7815 * C2534 - C50392 * C2537 + C7816 * C2535 - C50393 * C2538 +
             C7817 * C2536 - C7812 * C2541) *
                C10569 +
            (C7815 * C2539 - C50392 * C2543 + C7816 * C2540 - C50393 * C2544 +
             C7817 * C2542 - C7812 * C2545) *
                C50286) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C50351 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C50351 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50125 * C50351 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50222) *
               C50211 * C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C50351 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C50161) *
              C50394 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C50351 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50161) *
              C50395 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50125 * C50351 +
           (((C2694 - C2693 + C2696 - C2695) * C121 +
             (C2698 - C2697 + C2700 - C2699) * C50222) *
                C2159 +
            ((C2702 - C2701 + C2704 - C2703) * C121 +
             (C2706 - C2705 + C2708 - C2707) * C50222) *
                C2160 +
            ((C2162 * C971 - C2157 * C975 + C2163 * C972 - C50065 * C976) *
                 C121 +
             (C2162 * C979 - C2157 * C983 + C2163 * C980 - C50065 * C984) *
                 C50222) *
                C2161) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50222) *
                 C2159 +
             ((C2323 - C2324 + C2325 - C2326) * C121 +
              (C2327 - C2328 + C2329 - C2330) * C50222) *
                 C2160 +
             C2387 * C2161) *
                C50352 +
            (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                  C121 +
              (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                  C50222) *
                 C2159 +
             ((C3061 - C3062 + C3063 - C3064) * C121 +
              (C3065 - C3066 + C3067 - C3068) * C50222) *
                 C2160 +
             ((C3069 - C3070 + C3071 - C3072) * C121 +
              (C3073 - C3074 + C3075 - C3076) * C50222) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C2324 - C2323 + C2326 - C2325) * C121 +
              (C2328 - C2327 + C2330 - C2329) * C50222) *
                 C2159 +
             ((C2332 - C2331 + C2334 - C2333) * C121 +
              (C2336 - C2335 + C2338 - C2337) * C50222) *
                 C2160 +
             ((C2339 - C2340 + C2341 - C2342) * C121 +
              (C2343 - C2344 + C2345 - C2346) * C50222) *
                 C2161) *
                C50352 +
            (((C3062 - C3061 + C3064 - C3063) * C121 +
              (C3066 - C3065 + C3068 - C3067) * C50222) *
                 C2159 +
             ((C3070 - C3069 + C3072 - C3071) * C121 +
              (C3074 - C3073 + C3076 - C3075) * C50222) *
                 C2160 +
             ((C2157 * C3051 - C2162 * C3048 + C50065 * C3052 - C2163 * C3049) *
                  C121 +
              (C2157 * C3057 - C2162 * C3053 + C50065 * C3058 - C2163 * C3054) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C251 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50222) *
                 C2159 +
             ((C2347 - C2348 + C2349 - C2350) * C121 +
              (C2351 - C2352 + C2353 - C2354) * C50222) *
                 C2160 +
             C2388 * C2161) *
                C50352 +
            (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                  C121 +
              (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                  C50222) *
                 C2159 +
             ((C3077 - C3078 + C3079 - C3080) * C121 +
              (C3081 - C3082 + C3083 - C3084) * C50222) *
                 C2160 +
             ((C3085 - C3086 + C3087 - C3088) * C121 +
              (C3089 - C3090 + C3091 - C3092) * C50222) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C2348 - C2347 + C2350 - C2349) * C121 +
              (C2352 - C2351 + C2354 - C2353) * C50222) *
                 C2159 +
             ((C2356 - C2355 + C2358 - C2357) * C121 +
              (C2360 - C2359 + C2362 - C2361) * C50222) *
                 C2160 +
             ((C2363 - C2364 + C2365 - C2366) * C121 +
              (C2367 - C2368 + C2369 - C2370) * C50222) *
                 C2161) *
                C50352 +
            (((C3078 - C3077 + C3080 - C3079) * C121 +
              (C3082 - C3081 + C3084 - C3083) * C50222) *
                 C2159 +
             ((C3086 - C3085 + C3088 - C3087) * C121 +
              (C3090 - C3089 + C3092 - C3091) * C50222) *
                 C2160 +
             ((C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                  C121 +
              (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C248 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C249 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50125 * C250) *
              C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C248 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C249 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50222) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C50125 * C50109 * C113 +
          ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
            C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
               C121 +
           (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
            C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
               C50222) *
              C50211 * C50125 * C50109 * C114 +
          ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
            C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
               C121 +
           (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
            C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
               C50222) *
              C50211 * C50125 * C50109 * C115 +
          ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
            C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
               C121 +
           (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
            C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
               C50222) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C393) *
              C50109 * C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C391 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C392 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50222) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2157 * C263 - C2162 * C253 + C50065 * C264 - C2163 * C254) *
                C121 +
            (C2157 * C283 - C2162 * C267 + C50065 * C284 - C2163 * C268) *
                C50222) *
               C2160 +
           ((C2157 * C271 - C2162 * C257 + C50065 * C272 - C2163 * C258) *
                C121 +
            (C2157 * C287 - C2162 * C275 + C50065 * C288 - C2163 * C276) *
                C50222) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C121 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C50222) *
               C2159 +
           ((C2162 * C254 - C2157 * C264 + C2163 * C255 - C50065 * C265) *
                C121 +
            (C2162 * C268 - C2157 * C284 + C2163 * C269 - C50065 * C285) *
                C50222) *
               C2160 +
           ((C2162 * C258 - C2157 * C272 + C2163 * C259 - C50065 * C273) *
                C121 +
            (C2162 * C276 - C2157 * C288 + C2163 * C277 - C50065 * C289) *
                C50222) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C121 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C50222) *
               C2159 +
           ((C2157 * C265 - C2162 * C255 + C50065 * C266 - C2163 * C256) *
                C121 +
            (C2157 * C285 - C2162 * C269 + C50065 * C286 - C2163 * C270) *
                C50222) *
               C2160 +
           ((C2157 * C273 - C2162 * C259 + C50065 * C274 - C2163 * C260) *
                C121 +
            (C2157 * C289 - C2162 * C277 + C50065 * C290 - C2163 * C278) *
                C50222) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
                C121 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
                C50222) *
               C2159 +
           ((C2162 * C256 - C2157 * C266 + C2163 * C261 - C50065 * C279) *
                C121 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C50065 * C291) *
                C50222) *
               C2160 +
           ((C2162 * C260 - C2157 * C274 + C2163 * C262 - C50065 * C281) *
                C121 +
            (C2162 * C278 - C2157 * C290 + C2163 * C282 - C50065 * C292) *
                C50222) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C248 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C2157 * C2313 - C2162 * C2310 + C50065 * C2314 - C2163 * C2311) *
                 C121 +
             (C2157 * C2319 - C2162 * C2315 + C50065 * C2320 - C2163 * C2316) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C248 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2388 * C2159 +
            ((C2364 - C2363 + C2366 - C2365) * C121 +
             (C2368 - C2367 + C2370 - C2369) * C50222) *
                C2160 +
            ((C2162 * C2311 - C2157 * C2314 + C2163 * C2312 - C50065 * C2317) *
                 C121 +
             (C2162 * C2316 - C2157 * C2320 + C2163 * C2318 - C50065 * C2321) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C391 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C2162 * C775 - C2157 * C780 + C2163 * C776 - C50065 * C781) *
                 C121 +
             (C2162 * C784 - C2157 * C790 + C2163 * C785 - C50065 * C791) *
                 C50222) *
                C2160 +
            ((C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C50065 * C1435) *
                 C121 +
             (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C50065 * C1443) *
                 C50222) *
                C2161) *
               C392 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C2157 * C1087 - C2162 * C1083 + C50065 * C1088 - C2163 * C1084) *
                 C121 +
             (C2157 * C1095 - C2162 * C1091 + C50065 * C1096 - C2163 * C1092) *
                 C50222) *
                C2160 +
            ((C2157 * C2537 - C2162 * C2534 + C50065 * C2538 - C2163 * C2535) *
                 C121 +
             (C2157 * C2543 - C2162 * C2539 + C50065 * C2544 - C2163 * C2540) *
                 C50222) *
                C2161) *
               C393) *
              C50109 * C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C391 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C2157 * C781 - C2162 * C776 + C50065 * C782 - C2163 * C777) *
                 C121 +
             (C2157 * C791 - C2162 * C785 + C50065 * C792 - C2163 * C786) *
                 C50222) *
                C2160 +
            ((C2157 * C1435 - C2162 * C1431 + C50065 * C1436 - C2163 * C1432) *
                 C121 +
             (C2157 * C1443 - C2162 * C1439 + C50065 * C1444 - C2163 * C1440) *
                 C50222) *
                C2161) *
               C392 +
           (((C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
                 C121 +
             (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
                 C50222) *
                C2159 +
            ((C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C50065 * C1089) *
                 C121 +
             (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C50065 * C1097) *
                 C50222) *
                C2160 +
            ((C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                 C121 +
             (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                 C50222) *
                C2161) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50352 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50222) *
               C50211 * C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50352 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C2162 * C775 - C2157 * C780 + C2163 * C776 - C50065 * C781) *
                 C121 +
             (C2162 * C784 - C2157 * C790 + C2163 * C785 - C50065 * C791) *
                 C50222) *
                C2160 +
            ((C2162 * C1430 - C2157 * C1434 + C2163 * C1431 - C50065 * C1435) *
                 C121 +
             (C2162 * C1438 - C2157 * C1442 + C2163 * C1439 - C50065 * C1443) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C50394 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50352 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C2157 * C781 - C2162 * C776 + C50065 * C782 - C2163 * C777) *
                 C121 +
             (C2157 * C791 - C2162 * C785 + C50065 * C792 - C2163 * C786) *
                 C50222) *
                C2160 +
            ((C2157 * C1435 - C2162 * C1431 + C50065 * C1436 - C2163 * C1432) *
                 C121 +
             (C2157 * C1443 - C2162 * C1439 + C50065 * C1444 - C2163 * C1440) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C50395 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50352 +
           (((C2162 * C396 - C2157 * C406 + C2163 * C397 - C50065 * C407) *
                 C121 +
             (C2162 * C410 - C2157 * C426 + C2163 * C411 - C50065 * C427) *
                 C50222) *
                C2159 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                 C50222) *
                C2160 +
            ((C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C121 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C50125 * C50109 * C113 +
          ((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
            C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
               C121 +
           (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
            C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
               C50222) *
              C50211 * C50125 * C50109 * C114 +
          ((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
            C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
               C121 +
           (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
            C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
               C50222) *
              C50211 * C50125 * C50109 * C115 +
          ((C117 * C125 - C105 * C132 + C118 * C126 - C106 * C137 +
            C119 * C127 - C107 * C139 + C120 * C128 - C108 * C141) *
               C121 +
           (C117 * C136 - C105 * C146 + C118 * C138 - C106 * C147 +
            C119 * C140 - C107 * C148 + C120 * C142 - C108 * C149) *
               C50222) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C248 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C249 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50125 * C250) *
              C251 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C248 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C249 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50222) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2157 * C263 - C2162 * C253 + C50065 * C264 - C2163 * C254) *
                C121 +
            (C2157 * C283 - C2162 * C267 + C50065 * C284 - C2163 * C268) *
                C50222) *
               C2160 +
           ((C2157 * C271 - C2162 * C257 + C50065 * C272 - C2163 * C258) *
                C121 +
            (C2157 * C287 - C2162 * C275 + C50065 * C288 - C2163 * C276) *
                C50222) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                C121 +
            (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                C50222) *
               C2159 +
           ((C2162 * C254 - C2157 * C264 + C2163 * C255 - C50065 * C265) *
                C121 +
            (C2162 * C268 - C2157 * C284 + C2163 * C269 - C50065 * C285) *
                C50222) *
               C2160 +
           ((C2162 * C258 - C2157 * C272 + C2163 * C259 - C50065 * C273) *
                C121 +
            (C2162 * C276 - C2157 * C288 + C2163 * C277 - C50065 * C289) *
                C50222) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                C121 +
            (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                C50222) *
               C2159 +
           ((C2157 * C265 - C2162 * C255 + C50065 * C266 - C2163 * C256) *
                C121 +
            (C2157 * C285 - C2162 * C269 + C50065 * C286 - C2163 * C270) *
                C50222) *
               C2160 +
           ((C2157 * C273 - C2162 * C259 + C50065 * C274 - C2163 * C260) *
                C121 +
            (C2157 * C289 - C2162 * C277 + C50065 * C290 - C2163 * C278) *
                C50222) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C2162 * C125 - C2157 * C132 + C2163 * C126 - C50065 * C137) *
                C121 +
            (C2162 * C136 - C2157 * C146 + C2163 * C138 - C50065 * C147) *
                C50222) *
               C2159 +
           ((C2162 * C256 - C2157 * C266 + C2163 * C261 - C50065 * C279) *
                C121 +
            (C2162 * C270 - C2157 * C286 + C2163 * C280 - C50065 * C291) *
                C50222) *
               C2160 +
           ((C2162 * C260 - C2157 * C274 + C2163 * C262 - C50065 * C281) *
                C121 +
            (C2162 * C278 - C2157 * C290 + C2163 * C282 - C50065 * C292) *
                C50222) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C248 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C2157 * C2313 - C2162 * C2310 + C50065 * C2314 - C2163 * C2311) *
                 C121 +
             (C2157 * C2319 - C2162 * C2315 + C50065 * C2320 - C2163 * C2316) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C248 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C249 +
           (C2388 * C2159 +
            ((C2364 - C2363 + C2366 - C2365) * C121 +
             (C2368 - C2367 + C2370 - C2369) * C50222) *
                C2160 +
            ((C2162 * C2311 - C2157 * C2314 + C2163 * C2312 - C50065 * C2317) *
                 C121 +
             (C2162 * C2316 - C2157 * C2320 + C2163 * C2318 - C50065 * C2321) *
                 C50222) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C50396 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50397 +
           ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C50396 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50397 +
           ((C117 * C258 - C105 * C272 + C118 * C259 - C106 * C273 +
             C119 * C260 - C107 * C274 + C120 * C262 - C108 * C281) *
                C121 +
            (C117 * C276 - C105 * C288 + C118 * C277 - C106 * C289 +
             C119 * C278 - C107 * C290 + C120 * C282 - C108 * C292) *
                C50222) *
               C50211 * C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C50396 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C50125 * C50397 +
           (C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C50125 * C1199) *
              C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C50396 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50397 +
           (C2388 * C2159 +
            ((C2364 - C2363 + C2366 - C2365) * C121 +
             (C2368 - C2367 + C2370 - C2369) * C50222) *
                C2160 +
            ((C2162 * C2311 - C2157 * C2314 + C2163 * C2312 - C50065 * C2317) *
                 C121 +
             (C2162 * C2316 - C2157 * C2320 + C2163 * C2318 - C50065 * C2321) *
                 C50222) *
                C2161) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50396 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50352 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50189) *
              C50397 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C50352 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50222) *
               C50211 * C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50352 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C50396 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C50352 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50189) *
              C50397 +
          ((C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C50352 +
           (C4042 * C2159 +
            ((C4031 - C4030 + C4033 - C4032) * C121 +
             (C4035 - C4034 + C4037 - C4036) * C50222) *
                C2160 +
            ((C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                 C121 +
             (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                 C50222) *
                C2161) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C50125 * C964 +
          ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
            C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
               C121 +
           (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
            C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
               C50222) *
              C50211 * C50125 * C965 +
          ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
            C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
               C121 +
           (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
            C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
               C50222) *
              C50211 * C50125 * C966 +
          ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
            C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
               C121 +
           (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
            C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
               C50222) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50222) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C391 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C392 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C393) *
              C893 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C391 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C392 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50222) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C893 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C893 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50125 * C893 +
           (((C2694 - C2693 + C2696 - C2695) * C121 +
             (C2698 - C2697 + C2700 - C2699) * C50222) *
                C2159 +
            ((C2702 - C2701 + C2704 - C2703) * C121 +
             (C2706 - C2705 + C2708 - C2707) * C50222) *
                C2160 +
            ((C2162 * C971 - C2157 * C975 + C2163 * C972 - C50065 * C976) *
                 C121 +
             (C2162 * C979 - C2157 * C983 + C2163 * C980 - C50065 * C984) *
                 C50222) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2323 - C2324 + C2325 - C2326) * C121 +
            (C2327 - C2328 + C2329 - C2330) * C50222) *
               C2160 +
           C2387 * C2161) *
              C50125 * C964 +
          (((C2324 - C2323 + C2326 - C2325) * C121 +
            (C2328 - C2327 + C2330 - C2329) * C50222) *
               C2159 +
           ((C2332 - C2331 + C2334 - C2333) * C121 +
            (C2336 - C2335 + C2338 - C2337) * C50222) *
               C2160 +
           C3361 * C2161) *
              C50125 * C965 +
          (C2387 * C2159 +
           ((C2340 - C2339 + C2342 - C2341) * C121 +
            (C2344 - C2343 + C2346 - C2345) * C50222) *
               C2160 +
           ((C3349 - C3350 + C3351 - C3352) * C121 +
            (C3353 - C3354 + C3355 - C3356) * C50222) *
               C2161) *
              C50125 * C966 +
          (C3361 * C2159 +
           ((C3350 - C3349 + C3352 - C3351) * C121 +
            (C3354 - C3353 + C3356 - C3355) * C50222) *
               C2160 +
           ((C2162 * C3336 - C2157 * C3338 + C2163 * C3337 - C50065 * C3339) *
                C121 +
            (C2162 * C3340 - C2157 * C3342 + C2163 * C3341 - C50065 * C3343) *
                C50222) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C391 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            ((C3069 - C3070 + C3071 - C3072) * C121 +
             (C3073 - C3074 + C3075 - C3076) * C50222) *
                C2161) *
               C392 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C3516 - C3517 + C3518 - C3519) * C121 +
             (C3520 - C3521 + C3522 - C3523) * C50222) *
                C2160 +
            ((C3524 - C3525 + C3526 - C3527) * C121 +
             (C3528 - C3529 + C3530 - C3531) * C50222) *
                C2161) *
               C393) *
              C893 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C391 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C2157 * C3051 - C2162 * C3048 + C50065 * C3052 - C2163 * C3049) *
                 C121 +
             (C2157 * C3057 - C2162 * C3053 + C50065 * C3058 - C2163 * C3054) *
                 C50222) *
                C2161) *
               C392 +
           (((C3517 - C3516 + C3519 - C3518) * C121 +
             (C3521 - C3520 + C3523 - C3522) * C50222) *
                C2159 +
            ((C3525 - C3524 + C3527 - C3526) * C121 +
             (C3529 - C3528 + C3531 - C3530) * C50222) *
                C2160 +
            ((C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C121 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50222) *
                C2161) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50222) *
                C50211 * C50189) *
               C893 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50222) *
                C50211 * C50352 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50222) *
                C50211 * C50189) *
               C893 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50222) *
                C50211 * C50352 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50222) *
                 C2159 +
             ((C2323 - C2324 + C2325 - C2326) * C121 +
              (C2327 - C2328 + C2329 - C2330) * C50222) *
                 C2160 +
             C2387 * C2161) *
                C50352 +
            (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                  C121 +
              (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                  C50222) *
                 C2159 +
             ((C3061 - C3062 + C3063 - C3064) * C121 +
              (C3065 - C3066 + C3067 - C3068) * C50222) *
                 C2160 +
             ((C3069 - C3070 + C3071 - C3072) * C121 +
              (C3073 - C3074 + C3075 - C3076) * C50222) *
                 C2161) *
                C50189) *
               C893 +
           ((((C2324 - C2323 + C2326 - C2325) * C121 +
              (C2328 - C2327 + C2330 - C2329) * C50222) *
                 C2159 +
             ((C2332 - C2331 + C2334 - C2333) * C121 +
              (C2336 - C2335 + C2338 - C2337) * C50222) *
                 C2160 +
             C3361 * C2161) *
                C50352 +
            (((C3062 - C3061 + C3064 - C3063) * C121 +
              (C3066 - C3065 + C3068 - C3067) * C50222) *
                 C2159 +
             ((C3070 - C3069 + C3072 - C3071) * C121 +
              (C3074 - C3073 + C3076 - C3075) * C50222) *
                 C2160 +
             ((C2157 * C3051 - C2162 * C3048 + C50065 * C3052 - C2163 * C3049) *
                  C121 +
              (C2157 * C3057 - C2162 * C3053 + C50065 * C3058 - C2163 * C3054) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50222) *
                 C2159 +
             ((C2347 - C2348 + C2349 - C2350) * C121 +
              (C2351 - C2352 + C2353 - C2354) * C50222) *
                 C2160 +
             C2388 * C2161) *
                C50352 +
            (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                  C121 +
              (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                  C50222) *
                 C2159 +
             ((C3077 - C3078 + C3079 - C3080) * C121 +
              (C3081 - C3082 + C3083 - C3084) * C50222) *
                 C2160 +
             ((C3085 - C3086 + C3087 - C3088) * C121 +
              (C3089 - C3090 + C3091 - C3092) * C50222) *
                 C2161) *
                C50189) *
               C893 +
           ((((C2348 - C2347 + C2350 - C2349) * C121 +
              (C2352 - C2351 + C2354 - C2353) * C50222) *
                 C2159 +
             ((C2356 - C2355 + C2358 - C2357) * C121 +
              (C2360 - C2359 + C2362 - C2361) * C50222) *
                 C2160 +
             ((C2363 - C2364 + C2365 - C2366) * C121 +
              (C2367 - C2368 + C2369 - C2370) * C50222) *
                 C2161) *
                C50352 +
            (((C3078 - C3077 + C3080 - C3079) * C121 +
              (C3082 - C3081 + C3084 - C3083) * C50222) *
                 C2159 +
             ((C3086 - C3085 + C3088 - C3087) * C121 +
              (C3090 - C3089 + C3092 - C3091) * C50222) *
                 C2160 +
             ((C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                  C121 +
              (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
             C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                C121 +
            (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
             C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                C50222) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C50125 * C893 +
           ((C117 * C255 - C105 * C265 + C118 * C256 - C106 * C266 +
             C119 * C261 - C107 * C279 + C120 * C537 - C108 * C538) *
                C121 +
            (C117 * C269 - C105 * C285 + C118 * C270 - C106 * C286 +
             C119 * C280 - C107 * C291 + C120 * C539 - C108 * C540) *
                C50222) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C50125 * C964 +
          ((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
            C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
               C121 +
           (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
            C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
               C50222) *
              C50211 * C50125 * C965 +
          ((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
            C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
               C121 +
           (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
            C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
               C50222) *
              C50211 * C50125 * C966 +
          ((C117 * C969 - C105 * C973 + C118 * C970 - C106 * C974 +
            C119 * C971 - C107 * C975 + C120 * C972 - C108 * C976) *
               C121 +
           (C117 * C977 - C105 * C981 + C118 * C978 - C106 * C982 +
            C119 * C979 - C107 * C983 + C120 * C980 - C108 * C984) *
               C50222) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50125 * C893 +
           (((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            ((C2339 - C2340 + C2341 - C2342) * C121 +
             (C2343 - C2344 + C2345 - C2346) * C50222) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50125 * C893 +
           (((C2348 - C2347 + C2350 - C2349) * C121 +
             (C2352 - C2351 + C2354 - C2353) * C50222) *
                C2159 +
            ((C2356 - C2355 + C2358 - C2357) * C121 +
             (C2360 - C2359 + C2362 - C2361) * C50222) *
                C2160 +
            ((C2363 - C2364 + C2365 - C2366) * C121 +
             (C2367 - C2368 + C2369 - C2370) * C50222) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C50125 * C893 +
           (((C2694 - C2693 + C2696 - C2695) * C121 +
             (C2698 - C2697 + C2700 - C2699) * C50222) *
                C2159 +
            ((C2702 - C2701 + C2704 - C2703) * C121 +
             (C2706 - C2705 + C2708 - C2707) * C50222) *
                C2160 +
            ((C2162 * C971 - C2157 * C975 + C2163 * C972 - C50065 * C976) *
                 C121 +
             (C2162 * C979 - C2157 * C983 + C2163 * C980 - C50065 * C984) *
                 C50222) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2323 - C2324 + C2325 - C2326) * C121 +
            (C2327 - C2328 + C2329 - C2330) * C50222) *
               C2160 +
           C2387 * C2161) *
              C50125 * C964 +
          (((C2324 - C2323 + C2326 - C2325) * C121 +
            (C2328 - C2327 + C2330 - C2329) * C50222) *
               C2159 +
           ((C2332 - C2331 + C2334 - C2333) * C121 +
            (C2336 - C2335 + C2338 - C2337) * C50222) *
               C2160 +
           C3361 * C2161) *
              C50125 * C965 +
          (C2387 * C2159 +
           ((C2340 - C2339 + C2342 - C2341) * C121 +
            (C2344 - C2343 + C2346 - C2345) * C50222) *
               C2160 +
           ((C3349 - C3350 + C3351 - C3352) * C121 +
            (C3353 - C3354 + C3355 - C3356) * C50222) *
               C2161) *
              C50125 * C966 +
          (C3361 * C2159 +
           ((C3350 - C3349 + C3352 - C3351) * C121 +
            (C3354 - C3353 + C3356 - C3355) * C50222) *
               C2160 +
           ((C2162 * C3336 - C2157 * C3338 + C2163 * C3337 - C50065 * C3339) *
                C121 +
            (C2162 * C3340 - C2157 * C3342 + C2163 * C3341 - C50065 * C3343) *
                C50222) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
              C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                 C121 +
             (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
              C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                 C50222) *
                C50211 * C1544 +
            ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
              C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                 C121 +
             (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
              C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
              C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                 C121 +
             (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
              C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                 C50222) *
                C50211 * C1544 +
            ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
              C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                 C121 +
             (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
              C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
              C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                 C121 +
             (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
              C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                 C50222) *
                C50211 * C1544 +
            ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
              C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                 C121 +
             (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
              C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                 C50222) *
                C50211 * C50189) *
               C50351 +
           (((C105 * C264 - C117 * C254 + C106 * C265 - C118 * C255 +
              C107 * C266 - C119 * C256 + C108 * C279 - C120 * C261) *
                 C121 +
             (C105 * C284 - C117 * C268 + C106 * C285 - C118 * C269 +
              C107 * C286 - C119 * C270 + C108 * C291 - C120 * C280) *
                 C50222) *
                C50211 * C1544 +
            ((C117 * C776 - C105 * C781 + C118 * C777 - C106 * C782 +
              C119 * C778 - C107 * C783 + C120 * C779 - C108 * C788) *
                 C121 +
             (C117 * C785 - C105 * C791 + C118 * C786 - C106 * C792 +
              C119 * C787 - C107 * C793 + C120 * C789 - C108 * C794) *
                 C50222) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                  C121 +
              (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                  C50222) *
                 C2159 +
             ((C2323 - C2324 + C2325 - C2326) * C121 +
              (C2327 - C2328 + C2329 - C2330) * C50222) *
                 C2160 +
             C2387 * C2161) *
                C1544 +
            (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                  C121 +
              (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                  C50222) *
                 C2159 +
             ((C3061 - C3062 + C3063 - C3064) * C121 +
              (C3065 - C3066 + C3067 - C3068) * C50222) *
                 C2160 +
             C4042 * C2161) *
                C50189) *
               C50351 +
           ((((C2324 - C2323 + C2326 - C2325) * C121 +
              (C2328 - C2327 + C2330 - C2329) * C50222) *
                 C2159 +
             ((C2332 - C2331 + C2334 - C2333) * C121 +
              (C2336 - C2335 + C2338 - C2337) * C50222) *
                 C2160 +
             C3361 * C2161) *
                C1544 +
            (((C3062 - C3061 + C3064 - C3063) * C121 +
              (C3066 - C3065 + C3068 - C3067) * C50222) *
                 C2159 +
             ((C3070 - C3069 + C3072 - C3071) * C121 +
              (C3074 - C3073 + C3076 - C3075) * C50222) *
                 C2160 +
             ((C4030 - C4031 + C4032 - C4033) * C121 +
              (C4034 - C4035 + C4036 - C4037) * C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                  C121 +
              (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                  C50222) *
                 C2159 +
             ((C2347 - C2348 + C2349 - C2350) * C121 +
              (C2351 - C2352 + C2353 - C2354) * C50222) *
                 C2160 +
             C2388 * C2161) *
                C1544 +
            (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                  C121 +
              (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                  C50222) *
                 C2159 +
             ((C3077 - C3078 + C3079 - C3080) * C121 +
              (C3081 - C3082 + C3083 - C3084) * C50222) *
                 C2160 +
             ((C3085 - C3086 + C3087 - C3088) * C121 +
              (C3089 - C3090 + C3091 - C3092) * C50222) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C2348 - C2347 + C2350 - C2349) * C121 +
              (C2352 - C2351 + C2354 - C2353) * C50222) *
                 C2159 +
             ((C2356 - C2355 + C2358 - C2357) * C121 +
              (C2360 - C2359 + C2362 - C2361) * C50222) *
                 C2160 +
             ((C2363 - C2364 + C2365 - C2366) * C121 +
              (C2367 - C2368 + C2369 - C2370) * C50222) *
                 C2161) *
                C1544 +
            (((C3078 - C3077 + C3080 - C3079) * C121 +
              (C3082 - C3081 + C3084 - C3083) * C50222) *
                 C2159 +
             ((C3086 - C3085 + C3088 - C3087) * C121 +
              (C3090 - C3089 + C3092 - C3091) * C50222) *
                 C2160 +
             ((C2162 * C3049 - C2157 * C3052 + C2163 * C3050 - C50065 * C3055) *
                  C121 +
              (C2162 * C3054 - C2157 * C3058 + C2163 * C3056 - C50065 * C3059) *
                  C50222) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50398 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50399 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C1960) *
              C50351 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C50398 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50399 +
           ((C117 * C1083 - C105 * C1087 + C118 * C1084 - C106 * C1088 +
             C119 * C1085 - C107 * C1089 + C120 * C1086 - C108 * C1090) *
                C121 +
            (C117 * C1091 - C105 * C1095 + C118 * C1092 - C106 * C1096 +
             C119 * C1093 - C107 * C1097 + C120 * C1094 - C108 * C1098) *
                C50222) *
               C50211 * C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50398 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50399 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C3516 - C3517 + C3518 - C3519) * C121 +
             (C3520 - C3521 + C3522 - C3523) * C50222) *
                C2160 +
            ((C3524 - C3525 + C3526 - C3527) * C121 +
             (C3528 - C3529 + C3530 - C3531) * C50222) *
                C2161) *
               C1960) *
              C50351 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C50398 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50399 +
           (((C3517 - C3516 + C3519 - C3518) * C121 +
             (C3521 - C3520 + C3523 - C3522) * C50222) *
                C2159 +
            ((C3525 - C3524 + C3527 - C3526) * C121 +
             (C3529 - C3528 + C3531 - C3530) * C50222) *
                C2160 +
            ((C2162 * C3507 - C2157 * C3509 + C2163 * C3508 - C50065 * C3510) *
                 C121 +
             (C2162 * C3511 - C2157 * C3513 + C2163 * C3512 - C50065 * C3514) *
                 C50222) *
                C2161) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C248 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C1544 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50189) *
              C249 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50222) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C1544 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50222) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
            C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
               C121 +
           (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
            C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
               C50222) *
              C50211 * C1710 +
          ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
            C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
               C121 +
           (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
            C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
               C50222) *
              C50211 * C1711 +
          ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
            C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
               C121 +
           (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
            C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
               C50222) *
              C50211 * C1712 +
          ((C117 * C1714 - C105 * C1718 + C118 * C1715 - C106 * C1719 +
            C119 * C1716 - C107 * C1720 + C120 * C1717 - C108 * C1721) *
               C121 +
           (C117 * C1722 - C105 * C1726 + C118 * C1723 - C106 * C1727 +
            C119 * C1724 - C107 * C1728 + C120 * C1725 - C108 * C1729) *
               C50222) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C1544 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C3077 - C3078 + C3079 - C3080) * C121 +
             (C3081 - C3082 + C3083 - C3084) * C50222) *
                C2160 +
            ((C3085 - C3086 + C3087 - C3088) * C121 +
             (C3089 - C3090 + C3091 - C3092) * C50222) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C1544 +
           (((C2162 * C396 - C2157 * C406 + C2163 * C397 - C50065 * C407) *
                 C121 +
             (C2162 * C410 - C2157 * C426 + C2163 * C411 - C50065 * C427) *
                 C50222) *
                C2159 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                 C50222) *
                C2160 +
            ((C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C121 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C248 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C1544 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50189) *
              C249 +
          ((C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C1544 +
           (C4042 * C2159 +
            ((C4031 - C4030 + C4033 - C4032) * C121 +
             (C4035 - C4034 + C4037 - C4036) * C50222) *
                C2160 +
            ((C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                 C121 +
             (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                 C50222) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                C121 +
            (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                C50222) *
               C2159 +
           ((C2323 - C2324 + C2325 - C2326) * C121 +
            (C2327 - C2328 + C2329 - C2330) * C50222) *
               C2160 +
           C2387 * C2161) *
              C1710 +
          (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                C121 +
            (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                C50222) *
               C2159 +
           ((C3061 - C3062 + C3063 - C3064) * C121 +
            (C3065 - C3066 + C3067 - C3068) * C50222) *
               C2160 +
           C4042 * C2161) *
              C1711 +
          (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                C121 +
            (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                C50222) *
               C2159 +
           ((C3516 - C3517 + C3518 - C3519) * C121 +
            (C3520 - C3521 + C3522 - C3523) * C50222) *
               C2160 +
           ((C3524 - C3525 + C3526 - C3527) * C121 +
            (C3528 - C3529 + C3530 - C3531) * C50222) *
               C2161) *
              C1712 +
          (((C2162 * C1714 - C2157 * C1718 + C2163 * C1715 - C50065 * C1719) *
                C121 +
            (C2162 * C1722 - C2157 * C1726 + C2163 * C1723 - C50065 * C1727) *
                C50222) *
               C2159 +
           ((C2162 * C4432 - C2157 * C4436 + C2163 * C4433 - C50065 * C4437) *
                C121 +
            (C2162 * C4438 - C2157 * C4444 + C2163 * C4439 - C50065 * C4445) *
                C50222) *
               C2160 +
           ((C2162 * C4434 - C2157 * C4440 + C2163 * C4435 - C50065 * C4441) *
                C121 +
            (C2162 * C4442 - C2157 * C4446 + C2163 * C4443 - C50065 * C4447) *
                C50222) *
               C2161) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C50398 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50399 +
           ((C105 * C412 - C117 * C398 + C106 * C413 - C118 * C399 +
             C107 * C414 - C119 * C400 + C108 * C415 - C120 * C401) *
                C121 +
            (C105 * C428 - C117 * C416 + C106 * C429 - C118 * C417 +
             C107 * C430 - C119 * C418 + C108 * C431 - C120 * C419) *
                C50222) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C50398 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50399 +
           ((C117 * C399 - C105 * C413 + C118 * C400 - C106 * C414 +
             C119 * C401 - C107 * C415 + C120 * C403 - C108 * C422) *
                C121 +
            (C117 * C417 - C105 * C429 + C118 * C418 - C106 * C430 +
             C119 * C419 - C107 * C431 + C120 * C423 - C108 * C433) *
                C50222) *
               C50211 * C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C50398 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50399 +
           (((C2157 * C412 - C2162 * C398 + C50065 * C413 - C2163 * C399) *
                 C121 +
             (C2157 * C428 - C2162 * C416 + C50065 * C429 - C2163 * C417) *
                 C50222) *
                C2159 +
            ((C3516 - C3517 + C3518 - C3519) * C121 +
             (C3520 - C3521 + C3522 - C3523) * C50222) *
                C2160 +
            ((C3524 - C3525 + C3526 - C3527) * C121 +
             (C3528 - C3529 + C3530 - C3531) * C50222) *
                C2161) *
               C1960) *
              C50109 * C50343 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C50398 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C3077 - C3078 + C3079 - C3080) * C121 +
             (C3081 - C3082 + C3083 - C3084) * C50222) *
                C2160 +
            ((C3085 - C3086 + C3087 - C3088) * C121 +
             (C3089 - C3090 + C3091 - C3092) * C50222) *
                C2161) *
               C50399 +
           (((C2162 * C399 - C2157 * C413 + C2163 * C400 - C50065 * C414) *
                 C121 +
             (C2162 * C417 - C2157 * C429 + C2163 * C418 - C50065 * C430) *
                 C50222) *
                C2159 +
            ((C2162 * C1084 - C2157 * C1088 + C2163 * C1085 - C50065 * C1089) *
                 C121 +
             (C2162 * C1092 - C2157 * C1096 + C2163 * C1093 - C50065 * C1097) *
                 C50222) *
                C2160 +
            ((C2162 * C2535 - C2157 * C2538 + C2163 * C2536 - C50065 * C2541) *
                 C121 +
             (C2162 * C2540 - C2157 * C2544 + C2163 * C2542 - C50065 * C2545) *
                 C50222) *
                C2161) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C117 * C123 - C105 * C130 + C118 * C124 - C106 * C131 +
             C119 * C125 - C107 * C132 + C120 * C126 - C108 * C137) *
                C121 +
            (C117 * C134 - C105 * C144 + C118 * C135 - C106 * C145 +
             C119 * C136 - C107 * C146 + C120 * C138 - C108 * C147) *
                C50222) *
               C50211 * C1544 +
           ((C105 * C405 - C117 * C395 + C106 * C406 - C118 * C396 +
             C107 * C407 - C119 * C397 + C108 * C420 - C120 * C402) *
                C121 +
            (C105 * C425 - C117 * C409 + C106 * C426 - C118 * C410 +
             C107 * C427 - C119 * C411 + C108 * C432 - C120 * C421) *
                C50222) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C105 * C131 - C117 * C124 + C106 * C132 - C118 * C125 +
             C107 * C137 - C119 * C126 + C108 * C139 - C120 * C127) *
                C121 +
            (C105 * C145 - C117 * C135 + C106 * C146 - C118 * C136 +
             C107 * C147 - C119 * C138 + C108 * C148 - C120 * C140) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C396 - C105 * C406 + C118 * C397 - C106 * C407 +
             C119 * C402 - C107 * C420 + C120 * C641 - C108 * C642) *
                C121 +
            (C117 * C410 - C105 * C426 + C118 * C411 - C106 * C427 +
             C119 * C421 - C107 * C432 + C120 * C643 - C108 * C644) *
                C50222) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C105 * C129 - C117 * C122 + C106 * C130 - C118 * C123 +
             C107 * C131 - C119 * C124 + C108 * C132 - C120 * C125) *
                C121 +
            (C105 * C143 - C117 * C133 + C106 * C144 - C118 * C134 +
             C107 * C145 - C119 * C135 + C108 * C146 - C120 * C136) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C394 - C105 * C404 + C118 * C395 - C106 * C405 +
             C119 * C396 - C107 * C406 + C120 * C397 - C108 * C407) *
                C121 +
            (C117 * C408 - C105 * C424 + C118 * C409 - C106 * C425 +
             C119 * C410 - C107 * C426 + C120 * C411 - C108 * C427) *
                C50222) *
               C50211 * C50189) *
              C248 +
          (((C117 * C253 - C105 * C263 + C118 * C254 - C106 * C264 +
             C119 * C255 - C107 * C265 + C120 * C256 - C108 * C266) *
                C121 +
            (C117 * C267 - C105 * C283 + C118 * C268 - C106 * C284 +
             C119 * C269 - C107 * C285 + C120 * C270 - C108 * C286) *
                C50222) *
               C50211 * C1544 +
           ((C105 * C780 - C117 * C775 + C106 * C781 - C118 * C776 +
             C107 * C782 - C119 * C777 + C108 * C783 - C120 * C778) *
                C121 +
            (C105 * C790 - C117 * C784 + C106 * C791 - C118 * C785 +
             C107 * C792 - C119 * C786 + C108 * C793 - C120 * C787) *
                C50222) *
               C50211 * C50189) *
              C249 +
          (((C105 * C271 - C117 * C257 + C106 * C272 - C118 * C258 +
             C107 * C273 - C119 * C259 + C108 * C274 - C120 * C260) *
                C121 +
            (C105 * C287 - C117 * C275 + C106 * C288 - C118 * C276 +
             C107 * C289 - C119 * C277 + C108 * C290 - C120 * C278) *
                C50222) *
               C50211 * C1544 +
           ((C117 * C1430 - C105 * C1434 + C118 * C1431 - C106 * C1435 +
             C119 * C1432 - C107 * C1436 + C120 * C1433 - C108 * C1437) *
                C121 +
            (C117 * C1438 - C105 * C1442 + C118 * C1439 - C106 * C1443 +
             C119 * C1440 - C107 * C1444 + C120 * C1441 - C108 * C1445) *
                C50222) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C2162 * C123 - C2157 * C130 + C2163 * C124 - C50065 * C131) *
                 C121 +
             (C2162 * C134 - C2157 * C144 + C2163 * C135 - C50065 * C145) *
                 C50222) *
                C2159 +
            ((C2347 - C2348 + C2349 - C2350) * C121 +
             (C2351 - C2352 + C2353 - C2354) * C50222) *
                C2160 +
            C2388 * C2161) *
               C1544 +
           (((C2157 * C405 - C2162 * C395 + C50065 * C406 - C2163 * C396) *
                 C121 +
             (C2157 * C425 - C2162 * C409 + C50065 * C426 - C2163 * C410) *
                 C50222) *
                C2159 +
            ((C3077 - C3078 + C3079 - C3080) * C121 +
             (C3081 - C3082 + C3083 - C3084) * C50222) *
                C2160 +
            ((C3085 - C3086 + C3087 - C3088) * C121 +
             (C3089 - C3090 + C3091 - C3092) * C50222) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C2157 * C131 - C2162 * C124 + C50065 * C132 - C2163 * C125) *
                 C121 +
             (C2157 * C145 - C2162 * C135 + C50065 * C146 - C2163 * C136) *
                 C50222) *
                C2159 +
            ((C2693 - C2694 + C2695 - C2696) * C121 +
             (C2697 - C2698 + C2699 - C2700) * C50222) *
                C2160 +
            ((C2701 - C2702 + C2703 - C2704) * C121 +
             (C2705 - C2706 + C2707 - C2708) * C50222) *
                C2161) *
               C1544 +
           (((C2162 * C396 - C2157 * C406 + C2163 * C397 - C50065 * C407) *
                 C121 +
             (C2162 * C410 - C2157 * C426 + C2163 * C411 - C50065 * C427) *
                 C50222) *
                C2159 +
            ((C2162 * C777 - C2157 * C782 + C2163 * C778 - C50065 * C783) *
                 C121 +
             (C2162 * C786 - C2157 * C792 + C2163 * C787 - C50065 * C793) *
                 C50222) *
                C2160 +
            ((C2162 * C1432 - C2157 * C1436 + C2163 * C1433 - C50065 * C1437) *
                 C121 +
             (C2162 * C1440 - C2157 * C1444 + C2163 * C1441 - C50065 * C1445) *
                 C50222) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2157 * C129 - C2162 * C122 + C50065 * C130 - C2163 * C123) *
                 C121 +
             (C2157 * C143 - C2162 * C133 + C50065 * C144 - C2163 * C134) *
                 C50222) *
                C2159 +
            ((C2323 - C2324 + C2325 - C2326) * C121 +
             (C2327 - C2328 + C2329 - C2330) * C50222) *
                C2160 +
            C2387 * C2161) *
               C1544 +
           (((C2162 * C394 - C2157 * C404 + C2163 * C395 - C50065 * C405) *
                 C121 +
             (C2162 * C408 - C2157 * C424 + C2163 * C409 - C50065 * C425) *
                 C50222) *
                C2159 +
            ((C3061 - C3062 + C3063 - C3064) * C121 +
             (C3065 - C3066 + C3067 - C3068) * C50222) *
                C2160 +
            C4042 * C2161) *
               C50189) *
              C248 +
          ((((C2324 - C2323 + C2326 - C2325) * C121 +
             (C2328 - C2327 + C2330 - C2329) * C50222) *
                C2159 +
            ((C2332 - C2331 + C2334 - C2333) * C121 +
             (C2336 - C2335 + C2338 - C2337) * C50222) *
                C2160 +
            C3361 * C2161) *
               C1544 +
           (((C3062 - C3061 + C3064 - C3063) * C121 +
             (C3066 - C3065 + C3068 - C3067) * C50222) *
                C2159 +
            ((C3070 - C3069 + C3072 - C3071) * C121 +
             (C3074 - C3073 + C3076 - C3075) * C50222) *
                C2160 +
            ((C4030 - C4031 + C4032 - C4033) * C121 +
             (C4034 - C4035 + C4036 - C4037) * C50222) *
                C2161) *
               C50189) *
              C249 +
          ((C2387 * C2159 +
            ((C2340 - C2339 + C2342 - C2341) * C121 +
             (C2344 - C2343 + C2346 - C2345) * C50222) *
                C2160 +
            ((C3349 - C3350 + C3351 - C3352) * C121 +
             (C3353 - C3354 + C3355 - C3356) * C50222) *
                C2161) *
               C1544 +
           (C4042 * C2159 +
            ((C4031 - C4030 + C4033 - C4032) * C121 +
             (C4035 - C4034 + C4037 - C4036) * C50222) *
                C2160 +
            ((C2162 * C4017 - C2157 * C4019 + C2163 * C4018 - C50065 * C4020) *
                 C121 +
             (C2162 * C4021 - C2157 * C4023 + C2163 * C4022 - C50065 * C4024) *
                 C50222) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50125 * C50351 +
           (((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            ((C24382 - C24383 + C24384 - C24385) * C121 +
             (C24386 - C24387 + C24388 - C24389) * C50222) *
                C24216) *
               C50125 * C50161) *
              C50394 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50125 * C50351 +
           (((C24391 - C24390 + C24393 - C24392) * C121 +
             (C24395 - C24394 + C24397 - C24396) * C50222) *
                C50400 +
            ((C24399 - C24398 + C24401 - C24400) * C121 +
             (C24403 - C24402 + C24405 - C24404) * C50222) *
                C50401 +
            ((C24406 - C24407 + C24408 - C24409) * C121 +
             (C24410 - C24411 + C24412 - C24413) * C50222) *
                C24216) *
               C50125 * C50161) *
              C50395 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C121 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50222) *
                C50400 +
            ((C24724 - C24725 + C24726 - C24727) * C121 +
             (C24728 - C24729 + C24730 - C24731) * C50222) *
                C50401 +
            ((C24732 - C24733 + C24734 - C24735) * C121 +
             (C24736 - C24737 + C24738 - C24739) * C50222) *
                C24216) *
               C50125 * C50351 +
           (((C24725 - C24724 + C24727 - C24726) * C121 +
             (C24729 - C24728 + C24731 - C24730) * C50222) *
                C50400 +
            ((C24733 - C24732 + C24735 - C24734) * C121 +
             (C24737 - C24736 + C24739 - C24738) * C50222) *
                C50401 +
            ((C49173 * C971 - C50336 * C975 + C49166 * C972 - C50065 * C976) *
                 C121 +
             (C49173 * C979 - C50336 * C983 + C49166 * C980 - C50065 * C984) *
                 C50222) *
                C24216) *
               C50125 * C50161) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C121 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C50222) *
                 C50400 +
             ((C24366 - C24367 + C24368 - C24369) * C121 +
              (C24370 - C24371 + C24372 - C24373) * C50222) *
                 C50401 +
             C24430 * C24216) *
                C50352 +
            (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                  C121 +
              (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                  C50222) *
                 C50400 +
             ((C25080 - C25081 + C25082 - C25083) * C121 +
              (C25084 - C25085 + C25086 - C25087) * C50222) *
                 C50401 +
             ((C25088 - C25089 + C25090 - C25091) * C121 +
              (C25092 - C25093 + C25094 - C25095) * C50222) *
                 C24216) *
                C50189) *
               C50351 +
           ((((C24367 - C24366 + C24369 - C24368) * C121 +
              (C24371 - C24370 + C24373 - C24372) * C50222) *
                 C50400 +
             ((C24375 - C24374 + C24377 - C24376) * C121 +
              (C24379 - C24378 + C24381 - C24380) * C50222) *
                 C50401 +
             ((C24382 - C24383 + C24384 - C24385) * C121 +
              (C24386 - C24387 + C24388 - C24389) * C50222) *
                 C24216) *
                C50352 +
            (((C25081 - C25080 + C25083 - C25082) * C121 +
              (C25085 - C25084 + C25087 - C25086) * C50222) *
                 C50400 +
             ((C25089 - C25088 + C25091 - C25090) * C121 +
              (C25093 - C25092 + C25095 - C25094) * C50222) *
                 C50401 +
             ((C50336 * C3051 - C49173 * C3048 + C50065 * C3052 -
               C49166 * C3049) *
                  C121 +
              (C50336 * C3057 - C49173 * C3053 + C50065 * C3058 -
               C49166 * C3054) *
                  C50222) *
                 C24216) *
                C50189) *
               C50161) *
              C251 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C121 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C50222) *
                 C50400 +
             ((C24390 - C24391 + C24392 - C24393) * C121 +
              (C24394 - C24395 + C24396 - C24397) * C50222) *
                 C50401 +
             C24431 * C24216) *
                C50352 +
            (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                  C121 +
              (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                  C50222) *
                 C50400 +
             ((C25096 - C25097 + C25098 - C25099) * C121 +
              (C25100 - C25101 + C25102 - C25103) * C50222) *
                 C50401 +
             ((C25104 - C25105 + C25106 - C25107) * C121 +
              (C25108 - C25109 + C25110 - C25111) * C50222) *
                 C24216) *
                C50189) *
               C50351 +
           ((((C24391 - C24390 + C24393 - C24392) * C121 +
              (C24395 - C24394 + C24397 - C24396) * C50222) *
                 C50400 +
             ((C24399 - C24398 + C24401 - C24400) * C121 +
              (C24403 - C24402 + C24405 - C24404) * C50222) *
                 C50401 +
             ((C24406 - C24407 + C24408 - C24409) * C121 +
              (C24410 - C24411 + C24412 - C24413) * C50222) *
                 C24216) *
                C50352 +
            (((C25097 - C25096 + C25099 - C25098) * C121 +
              (C25101 - C25100 + C25103 - C25102) * C50222) *
                 C50400 +
             ((C25105 - C25104 + C25107 - C25106) * C121 +
              (C25109 - C25108 + C25111 - C25110) * C50222) *
                 C50401 +
             ((C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
               C50065 * C3055) *
                  C121 +
              (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
               C50065 * C3059) *
                  C50222) *
                 C24216) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50125 * C248 +
           (((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            ((C24382 - C24383 + C24384 - C24385) * C121 +
             (C24386 - C24387 + C24388 - C24389) * C50222) *
                C24216) *
               C50125 * C249 +
           (C24430 * C50400 +
            ((C24383 - C24382 + C24385 - C24384) * C121 +
             (C24387 - C24386 + C24389 - C24388) * C50222) *
                C50401 +
            ((C50336 * C2313 - C49173 * C2310 + C50065 * C2314 -
              C49166 * C2311) *
                 C121 +
             (C50336 * C2319 - C49173 * C2315 + C50065 * C2320 -
              C49166 * C2316) *
                 C50222) *
                C24216) *
               C50125 * C250) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50125 * C248 +
           (((C24391 - C24390 + C24393 - C24392) * C121 +
             (C24395 - C24394 + C24397 - C24396) * C50222) *
                C50400 +
            ((C24399 - C24398 + C24401 - C24400) * C121 +
             (C24403 - C24402 + C24405 - C24404) * C50222) *
                C50401 +
            ((C24406 - C24407 + C24408 - C24409) * C121 +
             (C24410 - C24411 + C24412 - C24413) * C50222) *
                C24216) *
               C50125 * C249 +
           (C24431 * C50400 +
            ((C24407 - C24406 + C24409 - C24408) * C121 +
             (C24411 - C24410 + C24413 - C24412) * C50222) *
                C50401 +
            ((C49173 * C2311 - C50336 * C2314 + C49166 * C2312 -
              C50065 * C2317) *
                 C121 +
             (C49173 * C2316 - C50336 * C2320 + C49166 * C2318 -
              C50065 * C2321) *
                 C50222) *
                C24216) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C121 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50222) *
               C50400 +
           ((C50336 * C263 - C49173 * C253 + C50065 * C264 - C49166 * C254) *
                C121 +
            (C50336 * C283 - C49173 * C267 + C50065 * C284 - C49166 * C268) *
                C50222) *
               C50401 +
           ((C50336 * C271 - C49173 * C257 + C50065 * C272 - C49166 * C258) *
                C121 +
            (C50336 * C287 - C49173 * C275 + C50065 * C288 - C49166 * C276) *
                C50222) *
               C24216) *
              C50125 * C50109 * C113 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C121 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50222) *
               C50400 +
           ((C49173 * C254 - C50336 * C264 + C49166 * C255 - C50065 * C265) *
                C121 +
            (C49173 * C268 - C50336 * C284 + C49166 * C269 - C50065 * C285) *
                C50222) *
               C50401 +
           ((C49173 * C258 - C50336 * C272 + C49166 * C259 - C50065 * C273) *
                C121 +
            (C49173 * C276 - C50336 * C288 + C49166 * C277 - C50065 * C289) *
                C50222) *
               C24216) *
              C50125 * C50109 * C114 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C121 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50222) *
               C50400 +
           ((C50336 * C265 - C49173 * C255 + C50065 * C266 - C49166 * C256) *
                C121 +
            (C50336 * C285 - C49173 * C269 + C50065 * C286 - C49166 * C270) *
                C50222) *
               C50401 +
           ((C50336 * C273 - C49173 * C259 + C50065 * C274 - C49166 * C260) *
                C121 +
            (C50336 * C289 - C49173 * C277 + C50065 * C290 - C49166 * C278) *
                C50222) *
               C24216) *
              C50125 * C50109 * C115 +
          (((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
                C121 +
            (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
                C50222) *
               C50400 +
           ((C49173 * C256 - C50336 * C266 + C49166 * C261 - C50065 * C279) *
                C121 +
            (C49173 * C270 - C50336 * C286 + C49166 * C280 - C50065 * C291) *
                C50222) *
               C50401 +
           ((C49173 * C260 - C50336 * C274 + C49166 * C262 - C50065 * C281) *
                C121 +
            (C49173 * C278 - C50336 * C290 + C49166 * C282 - C50065 * C292) *
                C50222) *
               C24216) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C391 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C49173 * C775 - C50336 * C780 + C49166 * C776 - C50065 * C781) *
                 C121 +
             (C49173 * C784 - C50336 * C790 + C49166 * C785 - C50065 * C791) *
                 C50222) *
                C50401 +
            ((C49173 * C1430 - C50336 * C1434 + C49166 * C1431 -
              C50065 * C1435) *
                 C121 +
             (C49173 * C1438 - C50336 * C1442 + C49166 * C1439 -
              C50065 * C1443) *
                 C50222) *
                C24216) *
               C392 +
           (((C50336 * C412 - C49173 * C398 + C50065 * C413 - C49166 * C399) *
                 C121 +
             (C50336 * C428 - C49173 * C416 + C50065 * C429 - C49166 * C417) *
                 C50222) *
                C50400 +
            ((C50336 * C1087 - C49173 * C1083 + C50065 * C1088 -
              C49166 * C1084) *
                 C121 +
             (C50336 * C1095 - C49173 * C1091 + C50065 * C1096 -
              C49166 * C1092) *
                 C50222) *
                C50401 +
            ((C50336 * C2537 - C49173 * C2534 + C50065 * C2538 -
              C49166 * C2535) *
                 C121 +
             (C50336 * C2543 - C49173 * C2539 + C50065 * C2544 -
              C49166 * C2540) *
                 C50222) *
                C24216) *
               C393) *
              C50109 * C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C391 +
           (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                 C121 +
             (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                 C50222) *
                C50400 +
            ((C50336 * C781 - C49173 * C776 + C50065 * C782 - C49166 * C777) *
                 C121 +
             (C50336 * C791 - C49173 * C785 + C50065 * C792 - C49166 * C786) *
                 C50222) *
                C50401 +
            ((C50336 * C1435 - C49173 * C1431 + C50065 * C1436 -
              C49166 * C1432) *
                 C121 +
             (C50336 * C1443 - C49173 * C1439 + C50065 * C1444 -
              C49166 * C1440) *
                 C50222) *
                C24216) *
               C392 +
           (((C49173 * C399 - C50336 * C413 + C49166 * C400 - C50065 * C414) *
                 C121 +
             (C49173 * C417 - C50336 * C429 + C49166 * C418 - C50065 * C430) *
                 C50222) *
                C50400 +
            ((C49173 * C1084 - C50336 * C1088 + C49166 * C1085 -
              C50065 * C1089) *
                 C121 +
             (C49173 * C1092 - C50336 * C1096 + C49166 * C1093 -
              C50065 * C1097) *
                 C50222) *
                C50401 +
            ((C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
              C50065 * C2541) *
                 C121 +
             (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
              C50065 * C2545) *
                 C50222) *
                C24216) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50352 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C49173 * C775 - C50336 * C780 + C49166 * C776 - C50065 * C781) *
                 C121 +
             (C49173 * C784 - C50336 * C790 + C49166 * C785 - C50065 * C791) *
                 C50222) *
                C50401 +
            ((C49173 * C1430 - C50336 * C1434 + C49166 * C1431 -
              C50065 * C1435) *
                 C121 +
             (C49173 * C1438 - C50336 * C1442 + C49166 * C1439 -
              C50065 * C1443) *
                 C50222) *
                C24216) *
               C50189) *
              C50109 * C50394 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50352 +
           (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                 C121 +
             (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                 C50222) *
                C50400 +
            ((C50336 * C781 - C49173 * C776 + C50065 * C782 - C49166 * C777) *
                 C121 +
             (C50336 * C791 - C49173 * C785 + C50065 * C792 - C49166 * C786) *
                 C50222) *
                C50401 +
            ((C50336 * C1435 - C49173 * C1431 + C50065 * C1436 -
              C49166 * C1432) *
                 C121 +
             (C50336 * C1443 - C49173 * C1439 + C50065 * C1444 -
              C49166 * C1440) *
                 C50222) *
                C24216) *
               C50189) *
              C50109 * C50395 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C121 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50222) *
                C50400 +
            ((C24724 - C24725 + C24726 - C24727) * C121 +
             (C24728 - C24729 + C24730 - C24731) * C50222) *
                C50401 +
            ((C24732 - C24733 + C24734 - C24735) * C121 +
             (C24736 - C24737 + C24738 - C24739) * C50222) *
                C24216) *
               C50352 +
           (((C49173 * C396 - C50336 * C406 + C49166 * C397 - C50065 * C407) *
                 C121 +
             (C49173 * C410 - C50336 * C426 + C49166 * C411 - C50065 * C427) *
                 C50222) *
                C50400 +
            ((C49173 * C777 - C50336 * C782 + C49166 * C778 - C50065 * C783) *
                 C121 +
             (C49173 * C786 - C50336 * C792 + C49166 * C787 - C50065 * C793) *
                 C50222) *
                C50401 +
            ((C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C121 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50222) *
                C24216) *
               C50189) *
              C50109 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C121 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50222) *
               C50400 +
           ((C50336 * C263 - C49173 * C253 + C50065 * C264 - C49166 * C254) *
                C121 +
            (C50336 * C283 - C49173 * C267 + C50065 * C284 - C49166 * C268) *
                C50222) *
               C50401 +
           ((C50336 * C271 - C49173 * C257 + C50065 * C272 - C49166 * C258) *
                C121 +
            (C50336 * C287 - C49173 * C275 + C50065 * C288 - C49166 * C276) *
                C50222) *
               C24216) *
              C50125 * C50109 * C113 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C121 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50222) *
               C50400 +
           ((C49173 * C254 - C50336 * C264 + C49166 * C255 - C50065 * C265) *
                C121 +
            (C49173 * C268 - C50336 * C284 + C49166 * C269 - C50065 * C285) *
                C50222) *
               C50401 +
           ((C49173 * C258 - C50336 * C272 + C49166 * C259 - C50065 * C273) *
                C121 +
            (C49173 * C276 - C50336 * C288 + C49166 * C277 - C50065 * C289) *
                C50222) *
               C24216) *
              C50125 * C50109 * C114 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C121 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50222) *
               C50400 +
           ((C50336 * C265 - C49173 * C255 + C50065 * C266 - C49166 * C256) *
                C121 +
            (C50336 * C285 - C49173 * C269 + C50065 * C286 - C49166 * C270) *
                C50222) *
               C50401 +
           ((C50336 * C273 - C49173 * C259 + C50065 * C274 - C49166 * C260) *
                C121 +
            (C50336 * C289 - C49173 * C277 + C50065 * C290 - C49166 * C278) *
                C50222) *
               C24216) *
              C50125 * C50109 * C115 +
          (((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
                C121 +
            (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
                C50222) *
               C50400 +
           ((C49173 * C256 - C50336 * C266 + C49166 * C261 - C50065 * C279) *
                C121 +
            (C49173 * C270 - C50336 * C286 + C49166 * C280 - C50065 * C291) *
                C50222) *
               C50401 +
           ((C49173 * C260 - C50336 * C274 + C49166 * C262 - C50065 * C281) *
                C121 +
            (C49173 * C278 - C50336 * C290 + C49166 * C282 - C50065 * C292) *
                C50222) *
               C24216) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50125 * C248 +
           (((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            ((C24382 - C24383 + C24384 - C24385) * C121 +
             (C24386 - C24387 + C24388 - C24389) * C50222) *
                C24216) *
               C50125 * C249 +
           (C24430 * C50400 +
            ((C24383 - C24382 + C24385 - C24384) * C121 +
             (C24387 - C24386 + C24389 - C24388) * C50222) *
                C50401 +
            ((C50336 * C2313 - C49173 * C2310 + C50065 * C2314 -
              C49166 * C2311) *
                 C121 +
             (C50336 * C2319 - C49173 * C2315 + C50065 * C2320 -
              C49166 * C2316) *
                 C50222) *
                C24216) *
               C50125 * C250) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50125 * C248 +
           (((C24391 - C24390 + C24393 - C24392) * C121 +
             (C24395 - C24394 + C24397 - C24396) * C50222) *
                C50400 +
            ((C24399 - C24398 + C24401 - C24400) * C121 +
             (C24403 - C24402 + C24405 - C24404) * C50222) *
                C50401 +
            ((C24406 - C24407 + C24408 - C24409) * C121 +
             (C24410 - C24411 + C24412 - C24413) * C50222) *
                C24216) *
               C50125 * C249 +
           (C24431 * C50400 +
            ((C24407 - C24406 + C24409 - C24408) * C121 +
             (C24411 - C24410 + C24413 - C24412) * C50222) *
                C50401 +
            ((C49173 * C2311 - C50336 * C2314 + C49166 * C2312 -
              C50065 * C2317) *
                 C121 +
             (C49173 * C2316 - C50336 * C2320 + C49166 * C2318 -
              C50065 * C2321) *
                 C50222) *
                C24216) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50125 * C50396 +
           (((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            C25372 * C24216) *
               C50125 * C50397 +
           (C24430 * C50400 +
            ((C24383 - C24382 + C24385 - C24384) * C121 +
             (C24387 - C24386 + C24389 - C24388) * C50222) *
                C50401 +
            ((C25360 - C25361 + C25362 - C25363) * C121 +
             (C25364 - C25365 + C25366 - C25367) * C50222) *
                C24216) *
               C50125 * C1199) *
              C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50125 * C50396 +
           (((C24391 - C24390 + C24393 - C24392) * C121 +
             (C24395 - C24394 + C24397 - C24396) * C50222) *
                C50400 +
            ((C24399 - C24398 + C24401 - C24400) * C121 +
             (C24403 - C24402 + C24405 - C24404) * C50222) *
                C50401 +
            ((C24406 - C24407 + C24408 - C24409) * C121 +
             (C24410 - C24411 + C24412 - C24413) * C50222) *
                C24216) *
               C50125 * C50397 +
           (C24431 * C50400 +
            ((C24407 - C24406 + C24409 - C24408) * C121 +
             (C24411 - C24410 + C24413 - C24412) * C50222) *
                C50401 +
            ((C49173 * C2311 - C50336 * C2314 + C49166 * C2312 -
              C50065 * C2317) *
                 C121 +
             (C49173 * C2316 - C50336 * C2320 + C49166 * C2318 -
              C50065 * C2321) *
                 C50222) *
                C24216) *
               C50125 * C1199) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50352 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50189) *
              C50396 +
          ((((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            C25372 * C24216) *
               C50352 +
           (((C25081 - C25080 + C25083 - C25082) * C121 +
             (C25085 - C25084 + C25087 - C25086) * C50222) *
                C50400 +
            ((C25089 - C25088 + C25091 - C25090) * C121 +
             (C25093 - C25092 + C25095 - C25094) * C50222) *
                C50401 +
            ((C26025 - C26026 + C26027 - C26028) * C121 +
             (C26029 - C26030 + C26031 - C26032) * C50222) *
                C24216) *
               C50189) *
              C50397 +
          ((C24430 * C50400 +
            ((C24383 - C24382 + C24385 - C24384) * C121 +
             (C24387 - C24386 + C24389 - C24388) * C50222) *
                C50401 +
            ((C25360 - C25361 + C25362 - C25363) * C121 +
             (C25364 - C25365 + C25366 - C25367) * C50222) *
                C24216) *
               C50352 +
           (C26037 * C50400 +
            ((C26026 - C26025 + C26028 - C26027) * C121 +
             (C26030 - C26029 + C26032 - C26031) * C50222) *
                C50401 +
            ((C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
              C50065 * C4020) *
                 C121 +
             (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
              C50065 * C4024) *
                 C50222) *
                C24216) *
               C50189) *
              C1199) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C121 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50222) *
               C50400 +
           ((C24366 - C24367 + C24368 - C24369) * C121 +
            (C24370 - C24371 + C24372 - C24373) * C50222) *
               C50401 +
           C24430 * C24216) *
              C50125 * C964 +
          (((C24367 - C24366 + C24369 - C24368) * C121 +
            (C24371 - C24370 + C24373 - C24372) * C50222) *
               C50400 +
           ((C24375 - C24374 + C24377 - C24376) * C121 +
            (C24379 - C24378 + C24381 - C24380) * C50222) *
               C50401 +
           C25372 * C24216) *
              C50125 * C965 +
          (C24430 * C50400 +
           ((C24383 - C24382 + C24385 - C24384) * C121 +
            (C24387 - C24386 + C24389 - C24388) * C50222) *
               C50401 +
           ((C25360 - C25361 + C25362 - C25363) * C121 +
            (C25364 - C25365 + C25366 - C25367) * C50222) *
               C24216) *
              C50125 * C966 +
          (C25372 * C50400 +
           ((C25361 - C25360 + C25363 - C25362) * C121 +
            (C25365 - C25364 + C25367 - C25366) * C50222) *
               C50401 +
           ((C49173 * C3336 - C50336 * C3338 + C49166 * C3337 -
             C50065 * C3339) *
                C121 +
            (C49173 * C3340 - C50336 * C3342 + C49166 * C3341 -
             C50065 * C3343) *
                C50222) *
               C24216) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50125 * C893 +
           (((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            ((C24382 - C24383 + C24384 - C24385) * C121 +
             (C24386 - C24387 + C24388 - C24389) * C50222) *
                C24216) *
               C50125 * C50161) *
              C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50125 * C893 +
           (((C24391 - C24390 + C24393 - C24392) * C121 +
             (C24395 - C24394 + C24397 - C24396) * C50222) *
                C50400 +
            ((C24399 - C24398 + C24401 - C24400) * C121 +
             (C24403 - C24402 + C24405 - C24404) * C50222) *
                C50401 +
            ((C24406 - C24407 + C24408 - C24409) * C121 +
             (C24410 - C24411 + C24412 - C24413) * C50222) *
                C24216) *
               C50125 * C50161) *
              C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C121 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50222) *
                C50400 +
            ((C24724 - C24725 + C24726 - C24727) * C121 +
             (C24728 - C24729 + C24730 - C24731) * C50222) *
                C50401 +
            ((C24732 - C24733 + C24734 - C24735) * C121 +
             (C24736 - C24737 + C24738 - C24739) * C50222) *
                C24216) *
               C50125 * C893 +
           (((C24725 - C24724 + C24727 - C24726) * C121 +
             (C24729 - C24728 + C24731 - C24730) * C50222) *
                C50400 +
            ((C24733 - C24732 + C24735 - C24734) * C121 +
             (C24737 - C24736 + C24739 - C24738) * C50222) *
                C50401 +
            ((C49173 * C971 - C50336 * C975 + C49166 * C972 - C50065 * C976) *
                 C121 +
             (C49173 * C979 - C50336 * C983 + C49166 * C980 - C50065 * C984) *
                 C50222) *
                C24216) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C391 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            ((C25088 - C25089 + C25090 - C25091) * C121 +
             (C25092 - C25093 + C25094 - C25095) * C50222) *
                C24216) *
               C392 +
           (((C50336 * C412 - C49173 * C398 + C50065 * C413 - C49166 * C399) *
                 C121 +
             (C50336 * C428 - C49173 * C416 + C50065 * C429 - C49166 * C417) *
                 C50222) *
                C50400 +
            ((C25519 - C25520 + C25521 - C25522) * C121 +
             (C25523 - C25524 + C25525 - C25526) * C50222) *
                C50401 +
            ((C25527 - C25528 + C25529 - C25530) * C121 +
             (C25531 - C25532 + C25533 - C25534) * C50222) *
                C24216) *
               C393) *
              C893 +
          ((((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            C25372 * C24216) *
               C391 +
           (((C25081 - C25080 + C25083 - C25082) * C121 +
             (C25085 - C25084 + C25087 - C25086) * C50222) *
                C50400 +
            ((C25089 - C25088 + C25091 - C25090) * C121 +
             (C25093 - C25092 + C25095 - C25094) * C50222) *
                C50401 +
            ((C50336 * C3051 - C49173 * C3048 + C50065 * C3052 -
              C49166 * C3049) *
                 C121 +
             (C50336 * C3057 - C49173 * C3053 + C50065 * C3058 -
              C49166 * C3054) *
                 C50222) *
                C24216) *
               C392 +
           (((C25520 - C25519 + C25522 - C25521) * C121 +
             (C25524 - C25523 + C25526 - C25525) * C50222) *
                C50400 +
            ((C25528 - C25527 + C25530 - C25529) * C121 +
             (C25532 - C25531 + C25534 - C25533) * C50222) *
                C50401 +
            ((C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C121 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50222) *
                C24216) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C121 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C50222) *
                 C50400 +
             ((C24366 - C24367 + C24368 - C24369) * C121 +
              (C24370 - C24371 + C24372 - C24373) * C50222) *
                 C50401 +
             C24430 * C24216) *
                C50352 +
            (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                  C121 +
              (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                  C50222) *
                 C50400 +
             ((C25080 - C25081 + C25082 - C25083) * C121 +
              (C25084 - C25085 + C25086 - C25087) * C50222) *
                 C50401 +
             ((C25088 - C25089 + C25090 - C25091) * C121 +
              (C25092 - C25093 + C25094 - C25095) * C50222) *
                 C24216) *
                C50189) *
               C893 +
           ((((C24367 - C24366 + C24369 - C24368) * C121 +
              (C24371 - C24370 + C24373 - C24372) * C50222) *
                 C50400 +
             ((C24375 - C24374 + C24377 - C24376) * C121 +
              (C24379 - C24378 + C24381 - C24380) * C50222) *
                 C50401 +
             C25372 * C24216) *
                C50352 +
            (((C25081 - C25080 + C25083 - C25082) * C121 +
              (C25085 - C25084 + C25087 - C25086) * C50222) *
                 C50400 +
             ((C25089 - C25088 + C25091 - C25090) * C121 +
              (C25093 - C25092 + C25095 - C25094) * C50222) *
                 C50401 +
             ((C50336 * C3051 - C49173 * C3048 + C50065 * C3052 -
               C49166 * C3049) *
                  C121 +
              (C50336 * C3057 - C49173 * C3053 + C50065 * C3058 -
               C49166 * C3054) *
                  C50222) *
                 C24216) *
                C50189) *
               C50161) *
              C50343 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C121 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C50222) *
                 C50400 +
             ((C24390 - C24391 + C24392 - C24393) * C121 +
              (C24394 - C24395 + C24396 - C24397) * C50222) *
                 C50401 +
             C24431 * C24216) *
                C50352 +
            (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                  C121 +
              (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                  C50222) *
                 C50400 +
             ((C25096 - C25097 + C25098 - C25099) * C121 +
              (C25100 - C25101 + C25102 - C25103) * C50222) *
                 C50401 +
             ((C25104 - C25105 + C25106 - C25107) * C121 +
              (C25108 - C25109 + C25110 - C25111) * C50222) *
                 C24216) *
                C50189) *
               C893 +
           ((((C24391 - C24390 + C24393 - C24392) * C121 +
              (C24395 - C24394 + C24397 - C24396) * C50222) *
                 C50400 +
             ((C24399 - C24398 + C24401 - C24400) * C121 +
              (C24403 - C24402 + C24405 - C24404) * C50222) *
                 C50401 +
             ((C24406 - C24407 + C24408 - C24409) * C121 +
              (C24410 - C24411 + C24412 - C24413) * C50222) *
                 C24216) *
                C50352 +
            (((C25097 - C25096 + C25099 - C25098) * C121 +
              (C25101 - C25100 + C25103 - C25102) * C50222) *
                 C50400 +
             ((C25105 - C25104 + C25107 - C25106) * C121 +
              (C25109 - C25108 + C25111 - C25110) * C50222) *
                 C50401 +
             ((C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
               C50065 * C3055) *
                  C121 +
              (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
               C50065 * C3059) *
                  C50222) *
                 C24216) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50125 * C893 +
           (((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            ((C24382 - C24383 + C24384 - C24385) * C121 +
             (C24386 - C24387 + C24388 - C24389) * C50222) *
                C24216) *
               C50125 * C50161) *
              C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50125 * C893 +
           (((C24391 - C24390 + C24393 - C24392) * C121 +
             (C24395 - C24394 + C24397 - C24396) * C50222) *
                C50400 +
            ((C24399 - C24398 + C24401 - C24400) * C121 +
             (C24403 - C24402 + C24405 - C24404) * C50222) *
                C50401 +
            ((C24406 - C24407 + C24408 - C24409) * C121 +
             (C24410 - C24411 + C24412 - C24413) * C50222) *
                C24216) *
               C50125 * C50161) *
              C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C121 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50222) *
                C50400 +
            ((C24724 - C24725 + C24726 - C24727) * C121 +
             (C24728 - C24729 + C24730 - C24731) * C50222) *
                C50401 +
            ((C24732 - C24733 + C24734 - C24735) * C121 +
             (C24736 - C24737 + C24738 - C24739) * C50222) *
                C24216) *
               C50125 * C893 +
           (((C24725 - C24724 + C24727 - C24726) * C121 +
             (C24729 - C24728 + C24731 - C24730) * C50222) *
                C50400 +
            ((C24733 - C24732 + C24735 - C24734) * C121 +
             (C24737 - C24736 + C24739 - C24738) * C50222) *
                C50401 +
            ((C49173 * C971 - C50336 * C975 + C49166 * C972 - C50065 * C976) *
                 C121 +
             (C49173 * C979 - C50336 * C983 + C49166 * C980 - C50065 * C984) *
                 C50222) *
                C24216) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C121 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50222) *
               C50400 +
           ((C24366 - C24367 + C24368 - C24369) * C121 +
            (C24370 - C24371 + C24372 - C24373) * C50222) *
               C50401 +
           C24430 * C24216) *
              C50125 * C964 +
          (((C24367 - C24366 + C24369 - C24368) * C121 +
            (C24371 - C24370 + C24373 - C24372) * C50222) *
               C50400 +
           ((C24375 - C24374 + C24377 - C24376) * C121 +
            (C24379 - C24378 + C24381 - C24380) * C50222) *
               C50401 +
           C25372 * C24216) *
              C50125 * C965 +
          (C24430 * C50400 +
           ((C24383 - C24382 + C24385 - C24384) * C121 +
            (C24387 - C24386 + C24389 - C24388) * C50222) *
               C50401 +
           ((C25360 - C25361 + C25362 - C25363) * C121 +
            (C25364 - C25365 + C25366 - C25367) * C50222) *
               C24216) *
              C50125 * C966 +
          (C25372 * C50400 +
           ((C25361 - C25360 + C25363 - C25362) * C121 +
            (C25365 - C25364 + C25367 - C25366) * C50222) *
               C50401 +
           ((C49173 * C3336 - C50336 * C3338 + C49166 * C3337 -
             C50065 * C3339) *
                C121 +
            (C49173 * C3340 - C50336 * C3342 + C49166 * C3341 -
             C50065 * C3343) *
                C50222) *
               C24216) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C121 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C50222) *
                 C50400 +
             ((C24366 - C24367 + C24368 - C24369) * C121 +
              (C24370 - C24371 + C24372 - C24373) * C50222) *
                 C50401 +
             C24430 * C24216) *
                C1544 +
            (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                  C121 +
              (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                  C50222) *
                 C50400 +
             ((C25080 - C25081 + C25082 - C25083) * C121 +
              (C25084 - C25085 + C25086 - C25087) * C50222) *
                 C50401 +
             C26037 * C24216) *
                C50189) *
               C50351 +
           ((((C24367 - C24366 + C24369 - C24368) * C121 +
              (C24371 - C24370 + C24373 - C24372) * C50222) *
                 C50400 +
             ((C24375 - C24374 + C24377 - C24376) * C121 +
              (C24379 - C24378 + C24381 - C24380) * C50222) *
                 C50401 +
             C25372 * C24216) *
                C1544 +
            (((C25081 - C25080 + C25083 - C25082) * C121 +
              (C25085 - C25084 + C25087 - C25086) * C50222) *
                 C50400 +
             ((C25089 - C25088 + C25091 - C25090) * C121 +
              (C25093 - C25092 + C25095 - C25094) * C50222) *
                 C50401 +
             ((C26025 - C26026 + C26027 - C26028) * C121 +
              (C26029 - C26030 + C26031 - C26032) * C50222) *
                 C24216) *
                C50189) *
               C50161) *
              C50343 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C121 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C50222) *
                 C50400 +
             ((C24390 - C24391 + C24392 - C24393) * C121 +
              (C24394 - C24395 + C24396 - C24397) * C50222) *
                 C50401 +
             C24431 * C24216) *
                C1544 +
            (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                  C121 +
              (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                  C50222) *
                 C50400 +
             ((C25096 - C25097 + C25098 - C25099) * C121 +
              (C25100 - C25101 + C25102 - C25103) * C50222) *
                 C50401 +
             ((C25104 - C25105 + C25106 - C25107) * C121 +
              (C25108 - C25109 + C25110 - C25111) * C50222) *
                 C24216) *
                C50189) *
               C50351 +
           ((((C24391 - C24390 + C24393 - C24392) * C121 +
              (C24395 - C24394 + C24397 - C24396) * C50222) *
                 C50400 +
             ((C24399 - C24398 + C24401 - C24400) * C121 +
              (C24403 - C24402 + C24405 - C24404) * C50222) *
                 C50401 +
             ((C24406 - C24407 + C24408 - C24409) * C121 +
              (C24410 - C24411 + C24412 - C24413) * C50222) *
                 C24216) *
                C1544 +
            (((C25097 - C25096 + C25099 - C25098) * C121 +
              (C25101 - C25100 + C25103 - C25102) * C50222) *
                 C50400 +
             ((C25105 - C25104 + C25107 - C25106) * C121 +
              (C25109 - C25108 + C25111 - C25110) * C50222) *
                 C50401 +
             ((C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
               C50065 * C3055) *
                  C121 +
              (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
               C50065 * C3059) *
                  C50222) *
                 C24216) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50398 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50399 +
           (((C50336 * C412 - C49173 * C398 + C50065 * C413 - C49166 * C399) *
                 C121 +
             (C50336 * C428 - C49173 * C416 + C50065 * C429 - C49166 * C417) *
                 C50222) *
                C50400 +
            ((C25519 - C25520 + C25521 - C25522) * C121 +
             (C25523 - C25524 + C25525 - C25526) * C50222) *
                C50401 +
            ((C25527 - C25528 + C25529 - C25530) * C121 +
             (C25531 - C25532 + C25533 - C25534) * C50222) *
                C24216) *
               C1960) *
              C50351 +
          ((((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            C25372 * C24216) *
               C50398 +
           (((C25081 - C25080 + C25083 - C25082) * C121 +
             (C25085 - C25084 + C25087 - C25086) * C50222) *
                C50400 +
            ((C25089 - C25088 + C25091 - C25090) * C121 +
             (C25093 - C25092 + C25095 - C25094) * C50222) *
                C50401 +
            ((C26025 - C26026 + C26027 - C26028) * C121 +
             (C26029 - C26030 + C26031 - C26032) * C50222) *
                C24216) *
               C50399 +
           (((C25520 - C25519 + C25522 - C25521) * C121 +
             (C25524 - C25523 + C25526 - C25525) * C50222) *
                C50400 +
            ((C25528 - C25527 + C25530 - C25529) * C121 +
             (C25532 - C25531 + C25534 - C25533) * C50222) *
                C50401 +
            ((C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C121 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50222) *
                C24216) *
               C1960) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C1544 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50189) *
              C248 +
          ((((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            C25372 * C24216) *
               C1544 +
           (((C25081 - C25080 + C25083 - C25082) * C121 +
             (C25085 - C25084 + C25087 - C25086) * C50222) *
                C50400 +
            ((C25089 - C25088 + C25091 - C25090) * C121 +
             (C25093 - C25092 + C25095 - C25094) * C50222) *
                C50401 +
            ((C26025 - C26026 + C26027 - C26028) * C121 +
             (C26029 - C26030 + C26031 - C26032) * C50222) *
                C24216) *
               C50189) *
              C249 +
          ((C24430 * C50400 +
            ((C24383 - C24382 + C24385 - C24384) * C121 +
             (C24387 - C24386 + C24389 - C24388) * C50222) *
                C50401 +
            ((C25360 - C25361 + C25362 - C25363) * C121 +
             (C25364 - C25365 + C25366 - C25367) * C50222) *
                C24216) *
               C1544 +
           (C26037 * C50400 +
            ((C26026 - C26025 + C26028 - C26027) * C121 +
             (C26030 - C26029 + C26032 - C26031) * C50222) *
                C50401 +
            ((C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
              C50065 * C4020) *
                 C121 +
             (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
              C50065 * C4024) *
                 C50222) *
                C24216) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C1544 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50189) *
              C50109 * C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C1544 +
           (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                 C121 +
             (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                 C50222) *
                C50400 +
            ((C25096 - C25097 + C25098 - C25099) * C121 +
             (C25100 - C25101 + C25102 - C25103) * C50222) *
                C50401 +
            ((C25104 - C25105 + C25106 - C25107) * C121 +
             (C25108 - C25109 + C25110 - C25111) * C50222) *
                C24216) *
               C50189) *
              C50109 * C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C121 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50222) *
                C50400 +
            ((C24724 - C24725 + C24726 - C24727) * C121 +
             (C24728 - C24729 + C24730 - C24731) * C50222) *
                C50401 +
            ((C24732 - C24733 + C24734 - C24735) * C121 +
             (C24736 - C24737 + C24738 - C24739) * C50222) *
                C24216) *
               C1544 +
           (((C49173 * C396 - C50336 * C406 + C49166 * C397 - C50065 * C407) *
                 C121 +
             (C49173 * C410 - C50336 * C426 + C49166 * C411 - C50065 * C427) *
                 C50222) *
                C50400 +
            ((C49173 * C777 - C50336 * C782 + C49166 * C778 - C50065 * C783) *
                 C121 +
             (C49173 * C786 - C50336 * C792 + C49166 * C787 - C50065 * C793) *
                 C50222) *
                C50401 +
            ((C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C121 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50222) *
                C24216) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C121 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50222) *
               C50400 +
           ((C24366 - C24367 + C24368 - C24369) * C121 +
            (C24370 - C24371 + C24372 - C24373) * C50222) *
               C50401 +
           C24430 * C24216) *
              C1710 +
          (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                C121 +
            (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                C50222) *
               C50400 +
           ((C25080 - C25081 + C25082 - C25083) * C121 +
            (C25084 - C25085 + C25086 - C25087) * C50222) *
               C50401 +
           C26037 * C24216) *
              C1711 +
          (((C50336 * C412 - C49173 * C398 + C50065 * C413 - C49166 * C399) *
                C121 +
            (C50336 * C428 - C49173 * C416 + C50065 * C429 - C49166 * C417) *
                C50222) *
               C50400 +
           ((C25519 - C25520 + C25521 - C25522) * C121 +
            (C25523 - C25524 + C25525 - C25526) * C50222) *
               C50401 +
           ((C25527 - C25528 + C25529 - C25530) * C121 +
            (C25531 - C25532 + C25533 - C25534) * C50222) *
               C24216) *
              C1712 +
          (((C49173 * C1714 - C50336 * C1718 + C49166 * C1715 -
             C50065 * C1719) *
                C121 +
            (C49173 * C1722 - C50336 * C1726 + C49166 * C1723 -
             C50065 * C1727) *
                C50222) *
               C50400 +
           ((C49173 * C4432 - C50336 * C4436 + C49166 * C4433 -
             C50065 * C4437) *
                C121 +
            (C49173 * C4438 - C50336 * C4444 + C49166 * C4439 -
             C50065 * C4445) *
                C50222) *
               C50401 +
           ((C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
             C50065 * C4441) *
                C121 +
            (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
             C50065 * C4447) *
                C50222) *
               C24216) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C50398 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50399 +
           (((C50336 * C412 - C49173 * C398 + C50065 * C413 - C49166 * C399) *
                 C121 +
             (C50336 * C428 - C49173 * C416 + C50065 * C429 - C49166 * C417) *
                 C50222) *
                C50400 +
            ((C25519 - C25520 + C25521 - C25522) * C121 +
             (C25523 - C25524 + C25525 - C25526) * C50222) *
                C50401 +
            ((C25527 - C25528 + C25529 - C25530) * C121 +
             (C25531 - C25532 + C25533 - C25534) * C50222) *
                C24216) *
               C1960) *
              C50109 * C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C50398 +
           (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                 C121 +
             (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                 C50222) *
                C50400 +
            ((C25096 - C25097 + C25098 - C25099) * C121 +
             (C25100 - C25101 + C25102 - C25103) * C50222) *
                C50401 +
            ((C25104 - C25105 + C25106 - C25107) * C121 +
             (C25108 - C25109 + C25110 - C25111) * C50222) *
                C24216) *
               C50399 +
           (((C49173 * C399 - C50336 * C413 + C49166 * C400 - C50065 * C414) *
                 C121 +
             (C49173 * C417 - C50336 * C429 + C49166 * C418 - C50065 * C430) *
                 C50222) *
                C50400 +
            ((C49173 * C1084 - C50336 * C1088 + C49166 * C1085 -
              C50065 * C1089) *
                 C121 +
             (C49173 * C1092 - C50336 * C1096 + C49166 * C1093 -
              C50065 * C1097) *
                 C50222) *
                C50401 +
            ((C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
              C50065 * C2541) *
                 C121 +
             (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
              C50065 * C2545) *
                 C50222) *
                C24216) *
               C1960) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C1544 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50189) *
              C50109 * C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C121 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50222) *
                C50400 +
            ((C24390 - C24391 + C24392 - C24393) * C121 +
             (C24394 - C24395 + C24396 - C24397) * C50222) *
                C50401 +
            C24431 * C24216) *
               C1544 +
           (((C50336 * C405 - C49173 * C395 + C50065 * C406 - C49166 * C396) *
                 C121 +
             (C50336 * C425 - C49173 * C409 + C50065 * C426 - C49166 * C410) *
                 C50222) *
                C50400 +
            ((C25096 - C25097 + C25098 - C25099) * C121 +
             (C25100 - C25101 + C25102 - C25103) * C50222) *
                C50401 +
            ((C25104 - C25105 + C25106 - C25107) * C121 +
             (C25108 - C25109 + C25110 - C25111) * C50222) *
                C24216) *
               C50189) *
              C50109 * C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C121 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50222) *
                C50400 +
            ((C24724 - C24725 + C24726 - C24727) * C121 +
             (C24728 - C24729 + C24730 - C24731) * C50222) *
                C50401 +
            ((C24732 - C24733 + C24734 - C24735) * C121 +
             (C24736 - C24737 + C24738 - C24739) * C50222) *
                C24216) *
               C1544 +
           (((C49173 * C396 - C50336 * C406 + C49166 * C397 - C50065 * C407) *
                 C121 +
             (C49173 * C410 - C50336 * C426 + C49166 * C411 - C50065 * C427) *
                 C50222) *
                C50400 +
            ((C49173 * C777 - C50336 * C782 + C49166 * C778 - C50065 * C783) *
                 C121 +
             (C49173 * C786 - C50336 * C792 + C49166 * C787 - C50065 * C793) *
                 C50222) *
                C50401 +
            ((C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C121 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50222) *
                C24216) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C121 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50222) *
                C50400 +
            ((C24366 - C24367 + C24368 - C24369) * C121 +
             (C24370 - C24371 + C24372 - C24373) * C50222) *
                C50401 +
            C24430 * C24216) *
               C1544 +
           (((C49173 * C394 - C50336 * C404 + C49166 * C395 - C50065 * C405) *
                 C121 +
             (C49173 * C408 - C50336 * C424 + C49166 * C409 - C50065 * C425) *
                 C50222) *
                C50400 +
            ((C25080 - C25081 + C25082 - C25083) * C121 +
             (C25084 - C25085 + C25086 - C25087) * C50222) *
                C50401 +
            C26037 * C24216) *
               C50189) *
              C248 +
          ((((C24367 - C24366 + C24369 - C24368) * C121 +
             (C24371 - C24370 + C24373 - C24372) * C50222) *
                C50400 +
            ((C24375 - C24374 + C24377 - C24376) * C121 +
             (C24379 - C24378 + C24381 - C24380) * C50222) *
                C50401 +
            C25372 * C24216) *
               C1544 +
           (((C25081 - C25080 + C25083 - C25082) * C121 +
             (C25085 - C25084 + C25087 - C25086) * C50222) *
                C50400 +
            ((C25089 - C25088 + C25091 - C25090) * C121 +
             (C25093 - C25092 + C25095 - C25094) * C50222) *
                C50401 +
            ((C26025 - C26026 + C26027 - C26028) * C121 +
             (C26029 - C26030 + C26031 - C26032) * C50222) *
                C24216) *
               C50189) *
              C249 +
          ((C24430 * C50400 +
            ((C24383 - C24382 + C24385 - C24384) * C121 +
             (C24387 - C24386 + C24389 - C24388) * C50222) *
                C50401 +
            ((C25360 - C25361 + C25362 - C25363) * C121 +
             (C25364 - C25365 + C25366 - C25367) * C50222) *
                C24216) *
               C1544 +
           (C26037 * C50400 +
            ((C26026 - C26025 + C26028 - C26027) * C121 +
             (C26030 - C26029 + C26032 - C26031) * C50222) *
                C50401 +
            ((C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
              C50065 * C4020) *
                 C121 +
             (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
              C50065 * C4024) *
                 C50222) *
                C24216) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50125 * C50351 +
                   (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    (C20315 * C10568 + C20316 * C50365 + C20775 * C10569 +
                     C20776 * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C50394 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50125 * C50351 +
                   (((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                     C22327 * C10569 + C22328 * C50286) *
                        C50400 +
                    ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                     (C20139 - C20140) * C10569 + (C20141 - C20142) * C50286) *
                        C50401 +
                    ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                     (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C50395 +
                  ((((C50060 * C131 - C19535 * C124) * C10568 +
                     (C50060 * C145 - C19535 * C135) * C50365 +
                     (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                        C50400 +
                    ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                     (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                        C50401 +
                    ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                     (C31072 - C31073) * C10569 + (C31074 - C31075) * C50286) *
                        C24216) *
                       C50125 * C50351 +
                   (((C19884 - C19883) * C10568 + (C19886 - C19885) * C50365 +
                     (C21964 - C21963) * C10569 + (C21966 - C21965) * C50286) *
                        C50400 +
                    ((C19888 - C19887) * C10568 + (C19890 - C19889) * C50365 +
                     (C31073 - C31072) * C10569 + (C31075 - C31074) * C50286) *
                        C50401 +
                    ((C19892 - C19891) * C10568 + (C19894 - C19893) * C50365 +
                     (C19535 * C3050 - C50060 * C3055) * C10569 +
                     (C19535 * C3056 - C50060 * C3059) * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C536)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C50352 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     (C20773 * C10568 + C20774 * C50365 + C22733 * C10569 +
                      C22734 * C50286) *
                         C24216) *
                        C50189) *
                       C50351 +
                   ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                      C22321 * C10569 + C22322 * C50286) *
                         C50400 +
                     ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                      C20773 * C10569 + C20774 * C50286) *
                         C50401 +
                     (C20315 * C10568 + C20316 * C50365 + C20775 * C10569 +
                      C20776 * C50286) *
                         C24216) *
                        C50352 +
                    ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                      C21786 * C50286) *
                         C50400 +
                     (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                      C23228 * C50286) *
                         C50401 +
                     ((C20132 - C20131) * C10568 + (C20134 - C20133) * C50365 +
                      (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                         C24216) *
                        C50189) *
                       C50161) *
                      C251 +
                  (((((C19535 * C123 - C50060 * C130) * C10568 +
                      (C19535 * C134 - C50060 * C144) * C50365 +
                      (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                         C50400 +
                     ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                      C22325 * C10569 + C22326 * C50286) *
                         C50401 +
                     C30779 * C24216) *
                        C50352 +
                    (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                      (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                         C50400 +
                     (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                      C22330 * C50286) *
                         C50401 +
                     (C31416 * C10568 + C31417 * C50365 +
                      (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                         C24216) *
                        C50189) *
                       C50351 +
                   ((((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                      C22327 * C10569 + C22328 * C50286) *
                         C50400 +
                     ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                      C31416 * C10569 + C31417 * C50286) *
                         C50401 +
                     ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                      (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                         C24216) *
                        C50352 +
                    ((C22325 * C10568 + C22326 * C50365 + C21803 * C10569 +
                      C21804 * C50286) *
                         C50400 +
                     (C30770 * C10568 + C30771 * C50365 +
                      (C21628 - C21627) * C10569 + (C21630 - C21629) * C50286) *
                         C50401 +
                     ((C20144 - C20143) * C10568 + (C20146 - C20145) * C50365 +
                      (C19535 * C3508 - C50060 * C3510) * C10569 +
                      (C19535 * C3512 - C50060 * C3514) * C50286) *
                         C24216) *
                        C50189) *
                       C50161) *
                      C50096)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50125 * C248 +
                   (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    (C20315 * C10568 + C20316 * C50365 + C20775 * C10569 +
                     C20776 * C50286) *
                        C24216) *
                       C50125 * C249 +
                   (C30778 * C50400 +
                    (C19669 * C10568 + C19670 * C50365 +
                     (C20132 - C20131) * C10569 + (C20134 - C20133) * C50286) *
                        C50401 +
                    ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                     (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                        C24216) *
                       C50125 * C250) *
                      C251 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50125 * C248 +
                   (((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                     C22327 * C10569 + C22328 * C50286) *
                        C50400 +
                    ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                     (C20139 - C20140) * C10569 + (C20141 - C20142) * C50286) *
                        C50401 +
                    ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                     (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                        C24216) *
                       C50125 * C249 +
                   (C30779 * C50400 +
                    (C19673 * C10568 + C19674 * C50365 +
                     (C20144 - C20143) * C10569 + (C20146 - C20145) * C50286) *
                        C50401 +
                    ((C19664 - C19663) * C10568 + (C19666 - C19665) * C50365 +
                     (C19535 * C4018 - C50060 * C4020) * C10569 +
                     (C19535 * C4022 - C50060 * C4024) * C50286) *
                        C24216) *
                       C50125 * C250) *
                      C50096)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C50060 * C129 - C19535 * C122) * C10568 +
                    (C50060 * C143 - C19535 * C133) * C50365 +
                    (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                       C50400 +
                   ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                    C22319 * C10569 + C22320 * C50286) *
                       C50401 +
                   (C19667 * C10568 + C19668 * C50365 + C23225 * C10569 +
                    C23226 * C50286) *
                       C24216) *
                      C50125 * C50109 * C113 +
                  (((C19535 * C123 - C50060 * C130) * C10568 +
                    (C19535 * C134 - C50060 * C144) * C50365 +
                    (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                       C50400 +
                   ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                    C22325 * C10569 + C22326 * C50286) *
                       C50401 +
                   (C19671 * C10568 + C19672 * C50365 +
                    (C20140 - C20139) * C10569 + (C20142 - C20141) * C50286) *
                       C24216) *
                      C50125 * C50109 * C114 +
                  (((C50060 * C131 - C19535 * C124) * C10568 +
                    (C50060 * C145 - C19535 * C135) * C50365 +
                    (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                       C50400 +
                   ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                    (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                       C50401 +
                   ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                    (C50060 * C1436 - C19535 * C1432) * C10569 +
                    (C50060 * C1444 - C19535 * C1440) * C50286) *
                       C24216) *
                      C50125 * C50109 * C115 +
                  (((C19535 * C125 - C50060 * C132) * C10568 +
                    (C19535 * C136 - C50060 * C146) * C50365 +
                    (C19535 * C397 - C50060 * C407) * C10569 +
                    (C19535 * C411 - C50060 * C427) * C50286) *
                       C50400 +
                   ((C19535 * C256 - C50060 * C266) * C10568 +
                    (C19535 * C270 - C50060 * C286) * C50365 +
                    (C19535 * C778 - C50060 * C783) * C10569 +
                    (C19535 * C787 - C50060 * C793) * C50286) *
                       C50401 +
                   ((C19535 * C260 - C50060 * C274) * C10568 +
                    (C19535 * C278 - C50060 * C290) * C50365 +
                    (C19535 * C1433 - C50060 * C1437) * C10569 +
                    (C19535 * C1441 - C50060 * C1445) * C50286) *
                       C24216) *
                      C50125 * C50109 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C391 +
                   (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                     (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                        C50400 +
                    (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                     C22324 * C50286) *
                        C50401 +
                    (C20773 * C10568 + C20774 * C50365 + C22733 * C10569 +
                     C22734 * C50286) *
                        C24216) *
                       C392 +
                   ((C21813 * C10568 + C21814 * C50365 +
                     (C21788 - C21787) * C10569 + (C21790 - C21789) * C50286) *
                        C50400 +
                    (C21785 * C10568 + C21786 * C50365 + C22727 * C10569 +
                     C22728 * C50286) *
                        C50401 +
                    (C23227 * C10568 + C23228 * C50365 +
                     (C22735 - C22736) * C10569 + (C22737 - C22738) * C50286) *
                        C24216) *
                       C393) *
                      C50109 * C251 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C391 +
                   (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                     (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                        C50400 +
                    (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                     C22330 * C50286) *
                        C50401 +
                    ((C20139 - C20140) * C10568 + (C20141 - C20142) * C50365 +
                     (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                        C24216) *
                       C392 +
                   ((C21815 * C10568 + C21816 * C50365 +
                     (C21806 - C21805) * C10569 + (C21808 - C21807) * C50286) *
                        C50400 +
                    (C21803 * C10568 + C21804 * C50365 +
                     (C21810 - C21809) * C10569 + (C21812 - C21811) * C50286) *
                        C50401 +
                    ((C21628 - C21627) * C10568 + (C21630 - C21629) * C50365 +
                     (C19535 * C4435 - C50060 * C4441) * C10569 +
                     (C19535 * C4443 - C50060 * C4447) * C50286) *
                        C24216) *
                       C393) *
                      C50109 * C50096)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50352 +
                   (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                     (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                        C50400 +
                    (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                     C22324 * C50286) *
                        C50401 +
                    (C20773 * C10568 + C20774 * C50365 + C22733 * C10569 +
                     C22734 * C50286) *
                        C24216) *
                       C50189) *
                      C50109 * C50394 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50352 +
                   (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                     (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                        C50400 +
                    (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                     C22330 * C50286) *
                        C50401 +
                    ((C20139 - C20140) * C10568 + (C20141 - C20142) * C50365 +
                     (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                        C24216) *
                       C50189) *
                      C50109 * C50395 +
                  ((((C50060 * C131 - C19535 * C124) * C10568 +
                     (C50060 * C145 - C19535 * C135) * C50365 +
                     (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                        C50400 +
                    ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                     (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                        C50401 +
                    ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                     (C31072 - C31073) * C10569 + (C31074 - C31075) * C50286) *
                        C24216) *
                       C50352 +
                   (((C22118 - C22117) * C10568 + (C22120 - C22119) * C50365 +
                     (C22122 - C22121) * C10569 + (C22124 - C22123) * C50286) *
                        C50400 +
                    ((C21964 - C21963) * C10568 + (C21966 - C21965) * C50365 +
                     (C21968 - C21967) * C10569 + (C21970 - C21969) * C50286) *
                        C50401 +
                    ((C31073 - C31072) * C10568 + (C31075 - C31074) * C50365 +
                     (C19535 * C2536 - C50060 * C2541) * C10569 +
                     (C19535 * C2542 - C50060 * C2545) * C50286) *
                        C24216) *
                       C50189) *
                      C50109 * C536)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C50060 * C129 - C19535 * C122) * C10568 +
                    (C50060 * C143 - C19535 * C133) * C50365 +
                    (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                       C50400 +
                   ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                    C22319 * C10569 + C22320 * C50286) *
                       C50401 +
                   (C19667 * C10568 + C19668 * C50365 + C23225 * C10569 +
                    C23226 * C50286) *
                       C24216) *
                      C50125 * C50109 * C113 +
                  (((C19535 * C123 - C50060 * C130) * C10568 +
                    (C19535 * C134 - C50060 * C144) * C50365 +
                    (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                       C50400 +
                   ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                    C22325 * C10569 + C22326 * C50286) *
                       C50401 +
                   (C19671 * C10568 + C19672 * C50365 +
                    (C20140 - C20139) * C10569 + (C20142 - C20141) * C50286) *
                       C24216) *
                      C50125 * C50109 * C114 +
                  (((C50060 * C131 - C19535 * C124) * C10568 +
                    (C50060 * C145 - C19535 * C135) * C50365 +
                    (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                       C50400 +
                   ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                    (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                       C50401 +
                   ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                    (C50060 * C1436 - C19535 * C1432) * C10569 +
                    (C50060 * C1444 - C19535 * C1440) * C50286) *
                       C24216) *
                      C50125 * C50109 * C115 +
                  (((C19535 * C125 - C50060 * C132) * C10568 +
                    (C19535 * C136 - C50060 * C146) * C50365 +
                    (C19535 * C397 - C50060 * C407) * C10569 +
                    (C19535 * C411 - C50060 * C427) * C50286) *
                       C50400 +
                   ((C19535 * C256 - C50060 * C266) * C10568 +
                    (C19535 * C270 - C50060 * C286) * C50365 +
                    (C19535 * C778 - C50060 * C783) * C10569 +
                    (C19535 * C787 - C50060 * C793) * C50286) *
                       C50401 +
                   ((C19535 * C260 - C50060 * C274) * C10568 +
                    (C19535 * C278 - C50060 * C290) * C50365 +
                    (C19535 * C1433 - C50060 * C1437) * C10569 +
                    (C19535 * C1441 - C50060 * C1445) * C50286) *
                       C24216) *
                      C50125 * C50109 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50125 * C248 +
                   (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    (C20315 * C10568 + C20316 * C50365 + C20775 * C10569 +
                     C20776 * C50286) *
                        C24216) *
                       C50125 * C249 +
                   (C30778 * C50400 +
                    (C19669 * C10568 + C19670 * C50365 +
                     (C20132 - C20131) * C10569 + (C20134 - C20133) * C50286) *
                        C50401 +
                    ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                     (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                        C24216) *
                       C50125 * C250) *
                      C251 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50125 * C248 +
                   (((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                     C22327 * C10569 + C22328 * C50286) *
                        C50400 +
                    ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                     (C20139 - C20140) * C10569 + (C20141 - C20142) * C50286) *
                        C50401 +
                    ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                     (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                        C24216) *
                       C50125 * C249 +
                   (C30779 * C50400 +
                    (C19673 * C10568 + C19674 * C50365 +
                     (C20144 - C20143) * C10569 + (C20146 - C20145) * C50286) *
                        C50401 +
                    ((C19664 - C19663) * C10568 + (C19666 - C19665) * C50365 +
                     (C19535 * C4018 - C50060 * C4020) * C10569 +
                     (C19535 * C4022 - C50060 * C4024) * C50286) *
                        C24216) *
                       C50125 * C250) *
                      C50096)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50125 * C50396 +
                   (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    C31668 * C24216) *
                       C50125 * C50397 +
                   (C30778 * C50400 +
                    (C19669 * C10568 + C19670 * C50365 +
                     (C20132 - C20131) * C10569 + (C20134 - C20133) * C50286) *
                        C50401 +
                    ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                     (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                        C24216) *
                       C50125 * C1199) *
                      C50343 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50125 * C50396 +
                   (((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                     C22327 * C10569 + C22328 * C50286) *
                        C50400 +
                    ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                     C31416 * C10569 + C31417 * C50286) *
                        C50401 +
                    ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                     (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                        C24216) *
                       C50125 * C50397 +
                   (C30779 * C50400 +
                    (C19673 * C10568 + C19674 * C50365 +
                     (C20144 - C20143) * C10569 + (C20146 - C20145) * C50286) *
                        C50401 +
                    ((C19664 - C19663) * C10568 + (C19666 - C19665) * C50365 +
                     (C19535 * C4018 - C50060 * C4020) * C10569 +
                     (C19535 * C4022 - C50060 * C4024) * C50286) *
                        C24216) *
                       C50125 * C1199) *
                      C50096)) /
                (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50352 +
                   (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                     (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                        C50400 +
                    (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                     C22324 * C50286) *
                        C50401 +
                    C32309 * C24216) *
                       C50189) *
                      C50396 +
                  ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    C31668 * C24216) *
                       C50352 +
                   ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                     C21786 * C50286) *
                        C50400 +
                    (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                     C23228 * C50286) *
                        C50401 +
                    (C32305 * C10568 + C32306 * C50365 +
                     (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                        C24216) *
                       C50189) *
                      C50397 +
                  ((C30778 * C50400 +
                    (C19669 * C10568 + C19670 * C50365 + C32305 * C10569 +
                     C32306 * C50286) *
                        C50401 +
                    ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                     (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                        C24216) *
                       C50352 +
                   (C32309 * C50400 +
                    (C20775 * C10568 + C20776 * C50365 +
                     (C20440 - C20439) * C10569 + (C20442 - C20441) * C50286) *
                        C50401 +
                    ((C20778 - C20777) * C10568 + (C20780 - C20779) * C50365 +
                     (C19535 * C20426 - C50060 * C20427) * C10569 +
                     (C19535 * C20428 - C50060 * C20429) * C50286) *
                        C24216) *
                       C50189) *
                      C1199) *
                 C50090) /
                (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C50060 * C129 - C19535 * C122) * C10568 +
                    (C50060 * C143 - C19535 * C133) * C50365 +
                    (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                       C50400 +
                   ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                    C22319 * C10569 + C22320 * C50286) *
                       C50401 +
                   C30778 * C24216) *
                      C50125 * C964 +
                  (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                    C22321 * C10569 + C22322 * C50286) *
                       C50400 +
                   ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                    C20773 * C10569 + C20774 * C50286) *
                       C50401 +
                   C31668 * C24216) *
                      C50125 * C965 +
                  (C30778 * C50400 +
                   (C19669 * C10568 + C19670 * C50365 +
                    (C20132 - C20131) * C10569 + (C20134 - C20133) * C50286) *
                       C50401 +
                   ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                    (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                       C24216) *
                      C50125 * C966 +
                  (C31668 * C50400 +
                   (C20317 * C10568 + C20318 * C50365 +
                    (C20778 - C20777) * C10569 + (C20780 - C20779) * C50286) *
                       C50401 +
                   ((C20320 - C20319) * C10568 + (C20322 - C20321) * C50365 +
                    (C19535 * C20768 - C50060 * C20769) * C10569 +
                    (C19535 * C20770 - C50060 * C20771) * C50286) *
                       C24216) *
                      C50125 * C967) *
                 C50090) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50125 * C893 +
                   (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    (C20315 * C10568 + C20316 * C50365 + C20775 * C10569 +
                     C20776 * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C895 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50125 * C893 +
                   (((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                     C22327 * C10569 + C22328 * C50286) *
                        C50400 +
                    ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                     C31416 * C10569 + C31417 * C50286) *
                        C50401 +
                    ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                     (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C896 +
                  ((((C50060 * C131 - C19535 * C124) * C10568 +
                     (C50060 * C145 - C19535 * C135) * C50365 +
                     (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                        C50400 +
                    ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                     (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                        C50401 +
                    ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                     (C31072 - C31073) * C10569 + (C31074 - C31075) * C50286) *
                        C24216) *
                       C50125 * C893 +
                   (((C19884 - C19883) * C10568 + (C19886 - C19885) * C50365 +
                     (C21964 - C21963) * C10569 + (C21966 - C21965) * C50286) *
                        C50400 +
                    ((C19888 - C19887) * C10568 + (C19890 - C19889) * C50365 +
                     (C31073 - C31072) * C10569 + (C31075 - C31074) * C50286) *
                        C50401 +
                    ((C19892 - C19891) * C10568 + (C19894 - C19893) * C50365 +
                     (C19535 * C3050 - C50060 * C3055) * C10569 +
                     (C19535 * C3056 - C50060 * C3059) * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C391 +
                   (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                     (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                        C50400 +
                    (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                     C22324 * C50286) *
                        C50401 +
                    (C20773 * C10568 + C20774 * C50365 + C22733 * C10569 +
                     C22734 * C50286) *
                        C24216) *
                       C392 +
                   ((C21813 * C10568 + C21814 * C50365 +
                     (C21788 - C21787) * C10569 + (C21790 - C21789) * C50286) *
                        C50400 +
                    (C21785 * C10568 + C21786 * C50365 + C22727 * C10569 +
                     C22728 * C50286) *
                        C50401 +
                    (C23227 * C10568 + C23228 * C50365 +
                     (C22735 - C22736) * C10569 + (C22737 - C22738) * C50286) *
                        C24216) *
                       C393) *
                      C893 +
                  ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    C31668 * C24216) *
                       C391 +
                   ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                     C21786 * C50286) *
                        C50400 +
                    (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                     C23228 * C50286) *
                        C50401 +
                    ((C20132 - C20131) * C10568 + (C20134 - C20133) * C50365 +
                     (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                        C24216) *
                       C392 +
                   ((C22323 * C10568 + C22324 * C50365 + C22725 * C10569 +
                     C22726 * C50286) *
                        C50400 +
                    (C22733 * C10568 + C22734 * C50365 +
                     (C22736 - C22735) * C10569 + (C22738 - C22737) * C50286) *
                        C50401 +
                    ((C20440 - C20439) * C10568 + (C20442 - C20441) * C50365 +
                     (C19535 * C21048 - C50060 * C21049) * C10569 +
                     (C19535 * C21050 - C50060 * C21051) * C50286) *
                        C24216) *
                       C393) *
                      C50161) *
                 C50090) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C50352 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     (C20773 * C10568 + C20774 * C50365 + C22733 * C10569 +
                      C22734 * C50286) *
                         C24216) *
                        C50189) *
                       C893 +
                   ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                      C22321 * C10569 + C22322 * C50286) *
                         C50400 +
                     ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                      C20773 * C10569 + C20774 * C50286) *
                         C50401 +
                     C31668 * C24216) *
                        C50352 +
                    ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                      C21786 * C50286) *
                         C50400 +
                     (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                      C23228 * C50286) *
                         C50401 +
                     ((C20132 - C20131) * C10568 + (C20134 - C20133) * C50365 +
                      (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                         C24216) *
                        C50189) *
                       C50161) *
                      C50343 +
                  (((((C19535 * C123 - C50060 * C130) * C10568 +
                      (C19535 * C134 - C50060 * C144) * C50365 +
                      (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                         C50400 +
                     ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                      C22325 * C10569 + C22326 * C50286) *
                         C50401 +
                     C30779 * C24216) *
                        C50352 +
                    (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                      (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                         C50400 +
                     (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                      C22330 * C50286) *
                         C50401 +
                     (C31416 * C10568 + C31417 * C50365 +
                      (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                         C24216) *
                        C50189) *
                       C893 +
                   ((((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                      C22327 * C10569 + C22328 * C50286) *
                         C50400 +
                     ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                      C31416 * C10569 + C31417 * C50286) *
                         C50401 +
                     ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                      (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                         C24216) *
                        C50352 +
                    ((C22325 * C10568 + C22326 * C50365 + C21803 * C10569 +
                      C21804 * C50286) *
                         C50400 +
                     (C30770 * C10568 + C30771 * C50365 +
                      (C21628 - C21627) * C10569 + (C21630 - C21629) * C50286) *
                         C50401 +
                     ((C20144 - C20143) * C10568 + (C20146 - C20145) * C50365 +
                      (C19535 * C3508 - C50060 * C3510) * C10569 +
                      (C19535 * C3512 - C50060 * C3514) * C50286) *
                         C24216) *
                        C50189) *
                       C50161) *
                      C50096)) /
                (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C50125 * C893 +
                   (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                     C22321 * C10569 + C22322 * C50286) *
                        C50400 +
                    ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                     C20773 * C10569 + C20774 * C50286) *
                        C50401 +
                    (C20315 * C10568 + C20316 * C50365 + C20775 * C10569 +
                     C20776 * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C895 +
                  ((((C19535 * C123 - C50060 * C130) * C10568 +
                     (C19535 * C134 - C50060 * C144) * C50365 +
                     (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                        C50400 +
                    ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                     C22325 * C10569 + C22326 * C50286) *
                        C50401 +
                    C30779 * C24216) *
                       C50125 * C893 +
                   (((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
                     C22327 * C10569 + C22328 * C50286) *
                        C50400 +
                    ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
                     C31416 * C10569 + C31417 * C50286) *
                        C50401 +
                    ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
                     (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C896 +
                  ((((C50060 * C131 - C19535 * C124) * C10568 +
                     (C50060 * C145 - C19535 * C135) * C50365 +
                     (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                        C50400 +
                    ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                     (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                        C50401 +
                    ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                     (C31072 - C31073) * C10569 + (C31074 - C31075) * C50286) *
                        C24216) *
                       C50125 * C893 +
                   (((C19884 - C19883) * C10568 + (C19886 - C19885) * C50365 +
                     (C21964 - C21963) * C10569 + (C21966 - C21965) * C50286) *
                        C50400 +
                    ((C19888 - C19887) * C10568 + (C19890 - C19889) * C50365 +
                     (C31073 - C31072) * C10569 + (C31075 - C31074) * C50286) *
                        C50401 +
                    ((C19892 - C19891) * C10568 + (C19894 - C19893) * C50365 +
                     (C19535 * C3050 - C50060 * C3055) * C10569 +
                     (C19535 * C3056 - C50060 * C3059) * C50286) *
                        C24216) *
                       C50125 * C50161) *
                      C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C50060 * C129 - C19535 * C122) * C10568 +
                    (C50060 * C143 - C19535 * C133) * C50365 +
                    (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                       C50400 +
                   ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                    C22319 * C10569 + C22320 * C50286) *
                       C50401 +
                   C30778 * C24216) *
                      C50125 * C964 +
                  (((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                    C22321 * C10569 + C22322 * C50286) *
                       C50400 +
                   ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                    C20773 * C10569 + C20774 * C50286) *
                       C50401 +
                   C31668 * C24216) *
                      C50125 * C965 +
                  (C30778 * C50400 +
                   (C19669 * C10568 + C19670 * C50365 +
                    (C20132 - C20131) * C10569 + (C20134 - C20133) * C50286) *
                       C50401 +
                   ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                    (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                       C24216) *
                      C50125 * C966 +
                  (C31668 * C50400 +
                   (C20317 * C10568 + C20318 * C50365 +
                    (C20778 - C20777) * C10569 + (C20780 - C20779) * C50286) *
                       C50401 +
                   ((C20320 - C20319) * C10568 + (C20322 - C20321) * C50365 +
                    (C19535 * C20768 - C50060 * C20769) * C10569 +
                    (C19535 * C20770 - C50060 * C20771) * C50286) *
                       C24216) *
                      C50125 * C967) *
                 C50090) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C10568 +
              (C50060 * C143 - C19535 * C133) * C50365 +
              (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                 C50400 +
             ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
              C22319 * C10569 + C22320 * C50286) *
                 C50401 +
             C30778 * C24216) *
                C1544 +
            (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
              (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                 C50400 +
             (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
              C22324 * C50286) *
                 C50401 +
             C32309 * C24216) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
              C22321 * C10569 + C22322 * C50286) *
                 C50400 +
             ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
              C20773 * C10569 + C20774 * C50286) *
                 C50401 +
             C31668 * C24216) *
                C1544 +
            ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
              C21786 * C50286) *
                 C50400 +
             (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
              C23228 * C50286) *
                 C50401 +
             (C32305 * C10568 + C32306 * C50365 + (C20439 - C20440) * C10569 +
              (C20441 - C20442) * C50286) *
                 C24216) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C10568 +
              (C19535 * C134 - C50060 * C144) * C50365 +
              (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                 C50400 +
             ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
              C22325 * C10569 + C22326 * C50286) *
                 C50401 +
             C30779 * C24216) *
                C1544 +
            (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
              (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                 C50400 +
             (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
              C22330 * C50286) *
                 C50401 +
             (C31416 * C10568 + C31417 * C50365 + (C21627 - C21628) * C10569 +
              (C21629 - C21630) * C50286) *
                 C24216) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C10568 + (C19654 - C19653) * C50365 +
              C22327 * C10569 + C22328 * C50286) *
                 C50400 +
             ((C19656 - C19655) * C10568 + (C19658 - C19657) * C50365 +
              C31416 * C10569 + C31417 * C50286) *
                 C50401 +
             ((C19660 - C19659) * C10568 + (C19662 - C19661) * C50365 +
              (C20143 - C20144) * C10569 + (C20145 - C20146) * C50286) *
                 C24216) *
                C1544 +
            ((C22325 * C10568 + C22326 * C50365 + C21803 * C10569 +
              C21804 * C50286) *
                 C50400 +
             (C30770 * C10568 + C30771 * C50365 + (C21628 - C21627) * C10569 +
              (C21630 - C21629) * C50286) *
                 C50401 +
             ((C20144 - C20143) * C10568 + (C20146 - C20145) * C50365 +
              (C19535 * C3508 - C50060 * C3510) * C10569 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C24216) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C50398 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     C32309 * C24216) *
                        C50399 +
                    ((C21813 * C10568 + C21814 * C50365 +
                      (C21788 - C21787) * C10569 + (C21790 - C21789) * C50286) *
                         C50400 +
                     (C21785 * C10568 + C21786 * C50365 + C22727 * C10569 +
                      C22728 * C50286) *
                         C50401 +
                     (C23227 * C10568 + C23228 * C50365 +
                      (C22735 - C22736) * C10569 + (C22737 - C22738) * C50286) *
                         C24216) *
                        C1960) *
                       C50351 +
                   ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                      C22321 * C10569 + C22322 * C50286) *
                         C50400 +
                     ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                      C20773 * C10569 + C20774 * C50286) *
                         C50401 +
                     C31668 * C24216) *
                        C50398 +
                    ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                      C21786 * C50286) *
                         C50400 +
                     (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                      C23228 * C50286) *
                         C50401 +
                     (C32305 * C10568 + C32306 * C50365 +
                      (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                         C24216) *
                        C50399 +
                    ((C22323 * C10568 + C22324 * C50365 + C22725 * C10569 +
                      C22726 * C50286) *
                         C50400 +
                     (C22733 * C10568 + C22734 * C50365 +
                      (C22736 - C22735) * C10569 + (C22738 - C22737) * C50286) *
                         C50401 +
                     ((C20440 - C20439) * C10568 + (C20442 - C20441) * C50365 +
                      (C19535 * C21048 - C50060 * C21049) * C10569 +
                      (C19535 * C21050 - C50060 * C21051) * C50286) *
                         C24216) *
                        C1960) *
                       C50161) *
                  C50090) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C1544 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     C32309 * C24216) *
                        C50189) *
                       C248 +
                   ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                      C22321 * C10569 + C22322 * C50286) *
                         C50400 +
                     ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                      C20773 * C10569 + C20774 * C50286) *
                         C50401 +
                     C31668 * C24216) *
                        C1544 +
                    ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                      C21786 * C50286) *
                         C50400 +
                     (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                      C23228 * C50286) *
                         C50401 +
                     (C32305 * C10568 + C32306 * C50365 +
                      (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                         C24216) *
                        C50189) *
                       C249 +
                   ((C30778 * C50400 +
                     (C19669 * C10568 + C19670 * C50365 + C32305 * C10569 +
                      C32306 * C50286) *
                         C50401 +
                     ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                      (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                         C24216) *
                        C1544 +
                    (C32309 * C50400 +
                     (C20775 * C10568 + C20776 * C50365 +
                      (C20440 - C20439) * C10569 + (C20442 - C20441) * C50286) *
                         C50401 +
                     ((C20778 - C20777) * C10568 + (C20780 - C20779) * C50365 +
                      (C19535 * C20426 - C50060 * C20427) * C10569 +
                      (C19535 * C20428 - C50060 * C20429) * C50286) *
                         C24216) *
                        C50189) *
                       C250) *
                  C50090) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C1544 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     C32309 * C24216) *
                        C50189) *
                       C50109 * C895 +
                   ((((C19535 * C123 - C50060 * C130) * C10568 +
                      (C19535 * C134 - C50060 * C144) * C50365 +
                      (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                         C50400 +
                     ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                      C22325 * C10569 + C22326 * C50286) *
                         C50401 +
                     C30779 * C24216) *
                        C1544 +
                    (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                      (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                         C50400 +
                     (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                      C22330 * C50286) *
                         C50401 +
                     (C31416 * C10568 + C31417 * C50365 +
                      (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                         C24216) *
                        C50189) *
                       C50109 * C896 +
                   ((((C50060 * C131 - C19535 * C124) * C10568 +
                      (C50060 * C145 - C19535 * C135) * C50365 +
                      (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                         C50400 +
                     ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                      (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                         C50401 +
                     ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                      (C31072 - C31073) * C10569 + (C31074 - C31075) * C50286) *
                         C24216) *
                        C1544 +
                    (((C22118 - C22117) * C10568 + (C22120 - C22119) * C50365 +
                      (C22122 - C22121) * C10569 + (C22124 - C22123) * C50286) *
                         C50400 +
                     ((C21964 - C21963) * C10568 + (C21966 - C21965) * C50365 +
                      (C21968 - C21967) * C10569 + (C21970 - C21969) * C50286) *
                         C50401 +
                     ((C31073 - C31072) * C10568 + (C31075 - C31074) * C50365 +
                      (C19535 * C2536 - C50060 * C2541) * C10569 +
                      (C19535 * C2542 - C50060 * C2545) * C50286) *
                         C24216) *
                        C50189) *
                       C50109 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C50060 * C129 - C19535 * C122) * C10568 +
                     (C50060 * C143 - C19535 * C133) * C50365 +
                     (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                        C50400 +
                    ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                     C22319 * C10569 + C22320 * C50286) *
                        C50401 +
                    C30778 * C24216) *
                       C1710 +
                   (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                     (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                        C50400 +
                    (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                     C22324 * C50286) *
                        C50401 +
                    C32309 * C24216) *
                       C1711 +
                   ((C21813 * C10568 + C21814 * C50365 +
                     (C21788 - C21787) * C10569 + (C21790 - C21789) * C50286) *
                        C50400 +
                    (C21785 * C10568 + C21786 * C50365 + C22727 * C10569 +
                     C22728 * C50286) *
                        C50401 +
                    (C23227 * C10568 + C23228 * C50365 +
                     (C22735 - C22736) * C10569 + (C22737 - C22738) * C50286) *
                        C24216) *
                       C1712 +
                   ((C23623 * C10568 + C23624 * C50365 +
                     (C23626 - C23625) * C10569 + (C23628 - C23627) * C50286) *
                        C50400 +
                    (C22725 * C10568 + C22726 * C50365 +
                     (C22730 - C22729) * C10569 + (C22732 - C22731) * C50286) *
                        C50401 +
                    ((C22736 - C22735) * C10568 + (C22738 - C22737) * C50365 +
                     (C19535 * C22720 - C50060 * C22721) * C10569 +
                     (C19535 * C22722 - C50060 * C22723) * C50286) *
                        C24216) *
                       C1713) *
                  C50109 * C50090) /
                     (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C50398 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     C32309 * C24216) *
                        C50399 +
                    ((C21813 * C10568 + C21814 * C50365 +
                      (C21788 - C21787) * C10569 + (C21790 - C21789) * C50286) *
                         C50400 +
                     (C21785 * C10568 + C21786 * C50365 + C22727 * C10569 +
                      C22728 * C50286) *
                         C50401 +
                     (C23227 * C10568 + C23228 * C50365 +
                      (C22735 - C22736) * C10569 + (C22737 - C22738) * C50286) *
                         C24216) *
                        C1960) *
                       C50109 * C50343 +
                   ((((C19535 * C123 - C50060 * C130) * C10568 +
                      (C19535 * C134 - C50060 * C144) * C50365 +
                      (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                         C50400 +
                     ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                      C22325 * C10569 + C22326 * C50286) *
                         C50401 +
                     C30779 * C24216) *
                        C50398 +
                    (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                      (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                         C50400 +
                     (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                      C22330 * C50286) *
                         C50401 +
                     (C31416 * C10568 + C31417 * C50365 +
                      (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                         C24216) *
                        C50399 +
                    ((C21815 * C10568 + C21816 * C50365 +
                      (C21806 - C21805) * C10569 + (C21808 - C21807) * C50286) *
                         C50400 +
                     (C21803 * C10568 + C21804 * C50365 +
                      (C21810 - C21809) * C10569 + (C21812 - C21811) * C50286) *
                         C50401 +
                     ((C21628 - C21627) * C10568 + (C21630 - C21629) * C50365 +
                      (C19535 * C4435 - C50060 * C4441) * C10569 +
                      (C19535 * C4443 - C50060 * C4447) * C50286) *
                         C24216) *
                        C1960) *
                       C50109 * C50096)) /
                 (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C1544 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     C32309 * C24216) *
                        C50189) *
                       C50109 * C895 +
                   ((((C19535 * C123 - C50060 * C130) * C10568 +
                      (C19535 * C134 - C50060 * C144) * C50365 +
                      (C21795 - C21796) * C10569 + (C21797 - C21798) * C50286) *
                         C50400 +
                     ((C19651 - C19652) * C10568 + (C19653 - C19654) * C50365 +
                      C22325 * C10569 + C22326 * C50286) *
                         C50401 +
                     C30779 * C24216) *
                        C1544 +
                    (((C21796 - C21795) * C10568 + (C21798 - C21797) * C50365 +
                      (C21800 - C21799) * C10569 + (C21802 - C21801) * C50286) *
                         C50400 +
                     (C22327 * C10568 + C22328 * C50365 + C22329 * C10569 +
                      C22330 * C50286) *
                         C50401 +
                     (C31416 * C10568 + C31417 * C50365 +
                      (C21627 - C21628) * C10569 + (C21629 - C21630) * C50286) *
                         C24216) *
                        C50189) *
                       C50109 * C896 +
                   ((((C50060 * C131 - C19535 * C124) * C10568 +
                      (C50060 * C145 - C19535 * C135) * C50365 +
                      (C22117 - C22118) * C10569 + (C22119 - C22120) * C50286) *
                         C50400 +
                     ((C19883 - C19884) * C10568 + (C19885 - C19886) * C50365 +
                      (C21963 - C21964) * C10569 + (C21965 - C21966) * C50286) *
                         C50401 +
                     ((C19887 - C19888) * C10568 + (C19889 - C19890) * C50365 +
                      (C31072 - C31073) * C10569 + (C31074 - C31075) * C50286) *
                         C24216) *
                        C1544 +
                    (((C22118 - C22117) * C10568 + (C22120 - C22119) * C50365 +
                      (C22122 - C22121) * C10569 + (C22124 - C22123) * C50286) *
                         C50400 +
                     ((C21964 - C21963) * C10568 + (C21966 - C21965) * C50365 +
                      (C21968 - C21967) * C10569 + (C21970 - C21969) * C50286) *
                         C50401 +
                     ((C31073 - C31072) * C10568 + (C31075 - C31074) * C50365 +
                      (C19535 * C2536 - C50060 * C2541) * C10569 +
                      (C19535 * C2542 - C50060 * C2545) * C50286) *
                         C24216) *
                        C50189) *
                       C50109 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C10568 +
                      (C50060 * C143 - C19535 * C133) * C50365 +
                      (C21777 - C21778) * C10569 + (C21779 - C21780) * C50286) *
                         C50400 +
                     ((C19635 - C19636) * C10568 + (C19637 - C19638) * C50365 +
                      C22319 * C10569 + C22320 * C50286) *
                         C50401 +
                     C30778 * C24216) *
                        C1544 +
                    (((C21778 - C21777) * C10568 + (C21780 - C21779) * C50365 +
                      (C21782 - C21781) * C10569 + (C21784 - C21783) * C50286) *
                         C50400 +
                     (C22321 * C10568 + C22322 * C50365 + C22323 * C10569 +
                      C22324 * C50286) *
                         C50401 +
                     C32309 * C24216) *
                        C50189) *
                       C248 +
                   ((((C19636 - C19635) * C10568 + (C19638 - C19637) * C50365 +
                      C22321 * C10569 + C22322 * C50286) *
                         C50400 +
                     ((C19640 - C19639) * C10568 + (C19642 - C19641) * C50365 +
                      C20773 * C10569 + C20774 * C50286) *
                         C50401 +
                     C31668 * C24216) *
                        C1544 +
                    ((C22319 * C10568 + C22320 * C50365 + C21785 * C10569 +
                      C21786 * C50286) *
                         C50400 +
                     (C23225 * C10568 + C23226 * C50365 + C23227 * C10569 +
                      C23228 * C50286) *
                         C50401 +
                     (C32305 * C10568 + C32306 * C50365 +
                      (C20439 - C20440) * C10569 + (C20441 - C20442) * C50286) *
                         C24216) *
                        C50189) *
                       C249 +
                   ((C30778 * C50400 +
                     (C19669 * C10568 + C19670 * C50365 + C32305 * C10569 +
                      C32306 * C50286) *
                         C50401 +
                     ((C19648 - C19647) * C10568 + (C19650 - C19649) * C50365 +
                      (C20777 - C20778) * C10569 + (C20779 - C20780) * C50286) *
                         C24216) *
                        C1544 +
                    (C32309 * C50400 +
                     (C20775 * C10568 + C20776 * C50365 +
                      (C20440 - C20439) * C10569 + (C20442 - C20441) * C50286) *
                         C50401 +
                     ((C20778 - C20777) * C10568 + (C20780 - C20779) * C50365 +
                      (C19535 * C20426 - C50060 * C20427) * C10569 +
                      (C19535 * C20428 - C50060 * C20429) * C50286) *
                         C24216) *
                        C50189) *
                       C250) *
                  C50090) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C50351 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C50161) *
              C50394 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C50351 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50161) *
              C50395 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50125 * C50351 +
           (((C19884 - C19883) * C121 + (C19886 - C19885) * C50222) * C19531 +
            ((C19888 - C19887) * C121 + (C19890 - C19889) * C50222) * C19532 +
            ((C19892 - C19891) * C121 + (C19894 - C19893) * C50222) * C19533 +
            ((C19535 * C2312 - C50060 * C2317) * C121 +
             (C19535 * C2318 - C50060 * C2321) * C50222) *
                C19534) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C50351 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C50351 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50125 * C50351 +
           (((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C121 +
             (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C50222) *
                C16809 +
            ((C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
              C16813 * C262 - C16808 * C281) *
                 C121 +
             (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
              C16813 * C282 - C16808 * C292) *
                 C50222) *
                C50260) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
             C21785 * C5037 + C21786 * C5034) *
                C50260) *
               C50125 * C50351 +
           (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             (C20123 - C20124) * C5036 + (C20125 - C20126) * C5033 +
             (C20432 - C20431) * C5037 + (C20434 - C20433) * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
             (C20438 - C20437) * C5034) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
             C21803 * C5037 + C21804 * C5034) *
                C50260) *
               C50125 * C50351 +
           (((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
             (C20135 - C20136) * C5036 + (C20137 - C20138) * C5033 +
             (C21624 - C21623) * C5037 + (C21626 - C21625) * C5034) *
                C16809 +
            ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
             (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
             (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C50060 * C131 - C19535 * C124) * C5035 +
             (C50060 * C145 - C19535 * C135) * C5032 +
             (C50060 * C406 - C19535 * C396) * C5036 +
             (C50060 * C426 - C19535 * C410) * C5033 +
             (C50060 * C414 - C19535 * C400) * C5037 +
             (C50060 * C430 - C19535 * C418) * C5034) *
                C16809 +
            ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
             (C21963 - C21964) * C5036 + (C21965 - C21966) * C5033 +
             (C21967 - C21968) * C5037 + (C21969 - C21970) * C5034) *
                C50260) *
               C50125 * C50351 +
           (((C19884 - C19883) * C5035 + (C19886 - C19885) * C5032 +
             (C21964 - C21963) * C5036 + (C21966 - C21965) * C5033 +
             (C21968 - C21967) * C5037 + (C21970 - C21969) * C5034) *
                C16809 +
            ((C19888 - C19887) * C5035 + (C19890 - C19889) * C5032 +
             (C19535 * C1432 - C50060 * C1436) * C5036 +
             (C19535 * C1440 - C50060 * C1444) * C5033 +
             (C19535 * C2536 - C50060 * C2541) * C5037 +
             (C19535 * C2542 - C50060 * C2545) * C5034) *
                C50260) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C121 +
              (C50060 * C143 - C19535 * C133) * C50222) *
                 C19531 +
             ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
             C19683 * C19533 + C19684 * C19534) *
                C50352 +
            (((C19535 * C394 - C50060 * C404) * C121 +
              (C19535 * C408 - C50060 * C424) * C50222) *
                 C19531 +
             ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
             ((C20127 - C20128) * C121 + (C20129 - C20130) * C50222) * C19533 +
             ((C20131 - C20132) * C121 + (C20133 - C20134) * C50222) * C19534) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
             ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
             ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
             ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
                C50352 +
            (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
             ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
             ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
             ((C50060 * C4019 - C19535 * C4017) * C121 +
              (C50060 * C4023 - C19535 * C4021) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C251 +
          (((((C19535 * C123 - C50060 * C130) * C121 +
              (C19535 * C134 - C50060 * C144) * C50222) *
                 C19531 +
             ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
             C19685 * C19533 + C19686 * C19534) *
                C50352 +
            (((C50060 * C405 - C19535 * C395) * C121 +
              (C50060 * C425 - C19535 * C409) * C50222) *
                 C19531 +
             ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
             ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
             ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
             ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
             ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
             ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
                C50352 +
            (((C20136 - C20135) * C121 + (C20138 - C20137) * C50222) * C19531 +
             ((C20140 - C20139) * C121 + (C20142 - C20141) * C50222) * C19532 +
             ((C20144 - C20143) * C121 + (C20146 - C20145) * C50222) * C19533 +
             ((C19535 * C4018 - C50060 * C4020) * C121 +
              (C19535 * C4022 - C50060 * C4024) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50222) *
                 C16809 +
             ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
              (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                 C50260) *
                C50352 +
            (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
               C16813 * C396 - C16808 * C406) *
                  C121 +
              (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
               C16813 * C410 - C16808 * C426) *
                  C50222) *
                 C16809 +
             ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
              (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
              (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                 C16809 +
             ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
              (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                 C50260) *
                C50352 +
            (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
              (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                 C16809 +
             ((C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
               C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                  C121 +
              (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
               C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50222) *
                 C16809 +
             ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
              (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                 C50260) *
                C50352 +
            (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
               C16808 * C407 - C16813 * C397) *
                  C121 +
              (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
               C16808 * C427 - C16813 * C411) *
                  C50222) *
                 C16809 +
             ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
              (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
              (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                 C16809 +
             ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
              (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                 C50260) *
                C50352 +
            (((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C121 +
              (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C50222) *
                 C16809 +
             ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
               C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                  C121 +
              (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
               C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C5035 +
              (C50060 * C143 - C19535 * C133) * C5032 +
              (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
              C21813 * C5037 + C21814 * C5034) *
                 C16809 +
             ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
              C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
              C21786 * C5034) *
                 C50260) *
                C50352 +
            (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
              (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
              (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                 C16809 +
             (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 +
              C22324 * C5033 + (C21791 - C21792) * C5037 +
              (C21793 - C21794) * C5034) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
              C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
              C22324 * C5034) *
                 C16809 +
             ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
              C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
              (C20438 - C20437) * C5034) *
                 C50260) *
                C50352 +
            ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 +
              C21786 * C5033 + (C21792 - C21791) * C5037 +
              (C21794 - C21793) * C5034) *
                 C16809 +
             ((C20128 - C20127) * C5035 + (C20130 - C20129) * C5032 +
              (C20435 - C20436) * C5036 + (C20437 - C20438) * C5033 +
              (C50060 * C4440 - C19535 * C4434) * C5037 +
              (C50060 * C4446 - C19535 * C4442) * C5034) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C19535 * C123 - C50060 * C130) * C5035 +
              (C19535 * C134 - C50060 * C144) * C5032 +
              (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
              C21815 * C5037 + C21816 * C5034) *
                 C16809 +
             ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
              C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
              C21804 * C5034) *
                 C50260) *
                C50352 +
            (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
              (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
              (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                 C16809 +
             (C22327 * C5035 + C22328 * C5032 + C22329 * C5036 +
              C22330 * C5033 + (C21809 - C21810) * C5037 +
              (C21811 - C21812) * C5034) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
              C22327 * C5036 + C22328 * C5033 + C22329 * C5037 +
              C22330 * C5034) *
                 C16809 +
             ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
              (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
              (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                 C50260) *
                C50352 +
            ((C22325 * C5035 + C22326 * C5032 + C21803 * C5036 +
              C21804 * C5033 + (C21810 - C21809) * C5037 +
              (C21812 - C21811) * C5034) *
                 C16809 +
             ((C20140 - C20139) * C5035 + (C20142 - C20141) * C5032 +
              (C21628 - C21627) * C5036 + (C21630 - C21629) * C5033 +
              (C19535 * C4435 - C50060 * C4441) * C5037 +
              (C19535 * C4443 - C50060 * C4447) * C5034) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C121 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C50222) *
                   C16809 +
               ((C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
                 C16808 * C265 - C16813 * C255) *
                    C121 +
                (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
                 C16808 * C285 - C16813 * C269) *
                    C50222) *
                   C50260) *
                  C50125 * C50109 * C113 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C121 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C50222) *
                   C16809 +
               ((C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
                 C16813 * C256 - C16808 * C266) *
                    C121 +
                (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
                 C16813 * C270 - C16808 * C286) *
                    C50222) *
                   C50260) *
                  C50125 * C50109 * C114 +
              (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                 C16808 * C137 - C16813 * C126) *
                    C121 +
                (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                 C16808 * C147 - C16813 * C138) *
                    C50222) *
                   C16809 +
               ((C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
                 C16808 * C279 - C16813 * C261) *
                    C121 +
                (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
                 C16808 * C291 - C16813 * C280) *
                    C50222) *
                   C50260) *
                  C50125 * C50109 * C115 +
              (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
                 C16813 * C127 - C16808 * C139) *
                    C121 +
                (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
                 C16813 * C140 - C16808 * C148) *
                    C50222) *
                   C16809 +
               ((C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
                 C16813 * C537 - C16808 * C538) *
                    C121 +
                (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
                 C16813 * C539 - C16808 * C540) *
                    C50222) *
                   C50260) *
                  C50125 * C50109 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50222) *
                    C16809 +
                ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
                 (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) *
                     C50222) *
                    C50260) *
                   C50125 * C248 +
               (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
                 (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) *
                     C50222) *
                    C16809 +
                ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
                 (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) *
                     C50222) *
                    C50260) *
                   C50125 * C249 +
               (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
                 (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) *
                     C50222) *
                    C16809 +
                ((C16806 * C973 - C16811 * C969 + C16807 * C974 -
                  C16812 * C970 + C16808 * C975 - C16813 * C971) *
                     C121 +
                 (C16806 * C981 - C16811 * C977 + C16807 * C982 -
                  C16812 * C978 + C16808 * C983 - C16813 * C979) *
                     C50222) *
                    C50260) *
                   C50125 * C250) *
                  C251 +
              ((((C16811 * C123 - C16806 * C130 + C16812 * C124 -
                  C16807 * C131 + C16813 * C125 - C16808 * C132) *
                     C121 +
                 (C16811 * C134 - C16806 * C144 + C16812 * C135 -
                  C16807 * C145 + C16813 * C136 - C16808 * C146) *
                     C50222) *
                    C16809 +
                ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
                 (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) *
                     C50222) *
                    C50260) *
                   C50125 * C248 +
               (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
                 (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) *
                     C50222) *
                    C16809 +
                ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
                 (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) *
                     C50222) *
                    C50260) *
                   C50125 * C249 +
               (((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C121 +
                 (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) *
                     C50222) *
                    C16809 +
                ((C16811 * C970 - C16806 * C974 + C16812 * C971 -
                  C16807 * C975 + C16813 * C972 - C16808 * C976) *
                     C121 +
                 (C16811 * C978 - C16806 * C982 + C16812 * C979 -
                  C16807 * C983 + C16813 * C980 - C16808 * C984) *
                     C50222) *
                    C50260) *
                   C50125 * C250) *
                  C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C391 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
              C16813 * C777 - C16808 * C782) *
                 C121 +
             (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
              C16813 * C786 - C16808 * C792) *
                 C50222) *
                C50260) *
               C392 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C16806 * C1087 - C16811 * C1083 + C16807 * C1088 -
              C16812 * C1084 + C16808 * C1089 - C16813 * C1085) *
                 C121 +
             (C16806 * C1095 - C16811 * C1091 + C16807 * C1096 -
              C16812 * C1092 + C16808 * C1097 - C16813 * C1093) *
                 C50222) *
                C50260) *
               C393) *
              C50109 * C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C391 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
              C16808 * C783 - C16813 * C778) *
                 C121 +
             (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
              C16808 * C793 - C16813 * C787) *
                 C50222) *
                C50260) *
               C392 +
           (((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
              C16813 * C401 - C16808 * C415) *
                 C121 +
             (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
              C16813 * C419 - C16808 * C431) *
                 C50222) *
                C16809 +
            ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C121 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50222) *
                C50260) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C50060 * C263 - C19535 * C253) * C121 +
            (C50060 * C283 - C19535 * C267) * C50222) *
               C19532 +
           ((C50060 * C271 - C19535 * C257) * C121 +
            (C50060 * C287 - C19535 * C275) * C50222) *
               C19533 +
           ((C50060 * C973 - C19535 * C969) * C121 +
            (C50060 * C981 - C19535 * C977) * C50222) *
               C19534) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C121 +
            (C19535 * C134 - C50060 * C144) * C50222) *
               C19531 +
           ((C19535 * C254 - C50060 * C264) * C121 +
            (C19535 * C268 - C50060 * C284) * C50222) *
               C19532 +
           ((C19535 * C258 - C50060 * C272) * C121 +
            (C19535 * C276 - C50060 * C288) * C50222) *
               C19533 +
           ((C19535 * C970 - C50060 * C974) * C121 +
            (C19535 * C978 - C50060 * C982) * C50222) *
               C19534) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C121 +
            (C50060 * C145 - C19535 * C135) * C50222) *
               C19531 +
           ((C50060 * C265 - C19535 * C255) * C121 +
            (C50060 * C285 - C19535 * C269) * C50222) *
               C19532 +
           ((C50060 * C273 - C19535 * C259) * C121 +
            (C50060 * C289 - C19535 * C277) * C50222) *
               C19533 +
           ((C50060 * C975 - C19535 * C971) * C121 +
            (C50060 * C983 - C19535 * C979) * C50222) *
               C19534) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C121 +
            (C19535 * C136 - C50060 * C146) * C50222) *
               C19531 +
           ((C19535 * C256 - C50060 * C266) * C121 +
            (C19535 * C270 - C50060 * C286) * C50222) *
               C19532 +
           ((C19535 * C260 - C50060 * C274) * C121 +
            (C19535 * C278 - C50060 * C290) * C50222) *
               C19533 +
           ((C19535 * C972 - C50060 * C976) * C121 +
            (C19535 * C980 - C50060 * C984) * C50222) *
               C19534) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C248 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C249 +
           (C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C50060 * C3338 - C19535 * C3336) * C121 +
             (C50060 * C3342 - C19535 * C3340) * C50222) *
                C19534) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C248 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C249 +
           (C19685 * C19531 + C19686 * C19532 +
            ((C19664 - C19663) * C121 + (C19666 - C19665) * C50222) * C19533 +
            ((C19535 * C3337 - C50060 * C3339) * C121 +
             (C19535 * C3341 - C50060 * C3343) * C50222) *
                C19534) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C391 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C19535 * C775 - C50060 * C780) * C121 +
             (C19535 * C784 - C50060 * C790) * C50222) *
                C19532 +
            ((C19535 * C1430 - C50060 * C1434) * C121 +
             (C19535 * C1438 - C50060 * C1442) * C50222) *
                C19533 +
            ((C19535 * C3048 - C50060 * C3051) * C121 +
             (C19535 * C3053 - C50060 * C3057) * C50222) *
                C19534) *
               C392 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C50060 * C1087 - C19535 * C1083) * C121 +
             (C50060 * C1095 - C19535 * C1091) * C50222) *
                C19532 +
            ((C50060 * C2537 - C19535 * C2534) * C121 +
             (C50060 * C2543 - C19535 * C2539) * C50222) *
                C19533 +
            ((C50060 * C3509 - C19535 * C3507) * C121 +
             (C50060 * C3513 - C19535 * C3511) * C50222) *
                C19534) *
               C393) *
              C50109 * C251 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C391 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C50060 * C781 - C19535 * C776) * C121 +
             (C50060 * C791 - C19535 * C785) * C50222) *
                C19532 +
            ((C50060 * C1435 - C19535 * C1431) * C121 +
             (C50060 * C1443 - C19535 * C1439) * C50222) *
                C19533 +
            ((C50060 * C3052 - C19535 * C3049) * C121 +
             (C50060 * C3058 - C19535 * C3054) * C50222) *
                C19534) *
               C392 +
           (((C19535 * C399 - C50060 * C413) * C121 +
             (C19535 * C417 - C50060 * C429) * C50222) *
                C19531 +
            ((C19535 * C1084 - C50060 * C1088) * C121 +
             (C19535 * C1092 - C50060 * C1096) * C50222) *
                C19532 +
            ((C19535 * C2535 - C50060 * C2538) * C121 +
             (C19535 * C2540 - C50060 * C2544) * C50222) *
                C19533 +
            ((C19535 * C3508 - C50060 * C3510) * C121 +
             (C19535 * C3512 - C50060 * C3514) * C50222) *
                C19534) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C5035 +
            (C50060 * C143 - C19535 * C133) * C5032 +
            (C50060 * C404 - C19535 * C394) * C5036 +
            (C50060 * C424 - C19535 * C408) * C5033 +
            (C50060 * C412 - C19535 * C398) * C5037 +
            (C50060 * C428 - C19535 * C416) * C5034) *
               C16809 +
           ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
            (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
            (C20431 - C20432) * C5037 + (C20433 - C20434) * C5034) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C5035 +
            (C19535 * C134 - C50060 * C144) * C5032 +
            (C19535 * C395 - C50060 * C405) * C5036 +
            (C19535 * C409 - C50060 * C425) * C5033 +
            (C19535 * C399 - C50060 * C413) * C5037 +
            (C19535 * C417 - C50060 * C429) * C5034) *
               C16809 +
           ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
            (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
            (C19535 * C1084 - C50060 * C1088) * C5037 +
            (C19535 * C1092 - C50060 * C1096) * C5034) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C5035 +
            (C50060 * C145 - C19535 * C135) * C5032 +
            (C50060 * C406 - C19535 * C396) * C5036 +
            (C50060 * C426 - C19535 * C410) * C5033 +
            (C50060 * C414 - C19535 * C400) * C5037 +
            (C50060 * C430 - C19535 * C418) * C5034) *
               C16809 +
           ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
            (C50060 * C782 - C19535 * C777) * C5036 +
            (C50060 * C792 - C19535 * C786) * C5033 +
            (C50060 * C1089 - C19535 * C1085) * C5037 +
            (C50060 * C1097 - C19535 * C1093) * C5034) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C5035 +
            (C19535 * C136 - C50060 * C146) * C5032 +
            (C19535 * C397 - C50060 * C407) * C5036 +
            (C19535 * C411 - C50060 * C427) * C5033 +
            (C19535 * C401 - C50060 * C415) * C5037 +
            (C19535 * C419 - C50060 * C431) * C5034) *
               C16809 +
           ((C19535 * C256 - C50060 * C266) * C5035 +
            (C19535 * C270 - C50060 * C286) * C5032 +
            (C19535 * C778 - C50060 * C783) * C5036 +
            (C19535 * C787 - C50060 * C793) * C5033 +
            (C19535 * C1086 - C50060 * C1090) * C5037 +
            (C19535 * C1094 - C50060 * C1098) * C5034) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C50060 * C404 - C19535 * C394) * C5036 +
             (C50060 * C424 - C19535 * C408) * C5033 +
             (C50060 * C412 - C19535 * C398) * C5037 +
             (C50060 * C428 - C19535 * C416) * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
             (C20431 - C20432) * C5037 + (C20433 - C20434) * C5034) *
                C50260) *
               C50125 * C248 +
           (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             (C20123 - C20124) * C5036 + (C20125 - C20126) * C5033 +
             (C20432 - C20431) * C5037 + (C20434 - C20433) * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
             (C20438 - C20437) * C5034) *
                C50260) *
               C50125 * C249 +
           ((C19667 * C5035 + C19668 * C5032 + (C20128 - C20127) * C5036 +
             (C20130 - C20129) * C5033 + (C20435 - C20436) * C5037 +
             (C20437 - C20438) * C5034) *
                C16809 +
            (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
             (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
             (C20441 - C20442) * C5034) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C19535 * C395 - C50060 * C405) * C5036 +
             (C19535 * C409 - C50060 * C425) * C5033 +
             (C19535 * C399 - C50060 * C413) * C5037 +
             (C19535 * C417 - C50060 * C429) * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
             (C21623 - C21624) * C5037 + (C21625 - C21626) * C5034) *
                C50260) *
               C50125 * C248 +
           (((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
             (C20135 - C20136) * C5036 + (C20137 - C20138) * C5033 +
             (C21624 - C21623) * C5037 + (C21626 - C21625) * C5034) *
                C16809 +
            ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
             (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
             (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                C50260) *
               C50125 * C249 +
           ((C19671 * C5035 + C19672 * C5032 + (C20140 - C20139) * C5036 +
             (C20142 - C20141) * C5033 + (C21628 - C21627) * C5037 +
             (C21630 - C21629) * C5034) *
                C16809 +
            (C19673 * C5035 + C19674 * C5032 + (C20144 - C20143) * C5036 +
             (C20146 - C20145) * C5033 +
             (C19535 * C3508 - C50060 * C3510) * C5037 +
             (C19535 * C3512 - C50060 * C3514) * C5034) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
             C21785 * C5037 + C21786 * C5034) *
                C50260) *
               C391 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            ((C20123 - C20124) * C5035 + (C20125 - C20126) * C5032 +
             (C20432 - C20431) * C5036 + (C20434 - C20433) * C5033 +
             (C21791 - C21792) * C5037 + (C21793 - C21794) * C5034) *
                C50260) *
               C392 +
           ((C21813 * C5035 + C21814 * C5032 + (C21788 - C21787) * C5036 +
             (C21790 - C21789) * C5033 +
             (C50060 * C5333 - C19535 * C5330) * C5037 +
             (C50060 * C5339 - C19535 * C5335) * C5034) *
                C16809 +
            (C21785 * C5035 + C21786 * C5032 + (C21792 - C21791) * C5036 +
             (C21794 - C21793) * C5033 +
             (C50060 * C6308 - C19535 * C6306) * C5037 +
             (C50060 * C6312 - C19535 * C6310) * C5034) *
                C50260) *
               C393) *
              C50109 * C251 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
             C21803 * C5037 + C21804 * C5034) *
                C50260) *
               C391 +
           (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
             (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
             (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                C16809 +
            ((C20135 - C20136) * C5035 + (C20137 - C20138) * C5032 +
             (C21624 - C21623) * C5036 + (C21626 - C21625) * C5033 +
             (C21809 - C21810) * C5037 + (C21811 - C21812) * C5034) *
                C50260) *
               C392 +
           ((C21815 * C5035 + C21816 * C5032 + (C21806 - C21805) * C5036 +
             (C21808 - C21807) * C5033 +
             (C19535 * C5331 - C50060 * C5334) * C5037 +
             (C19535 * C5336 - C50060 * C5340) * C5034) *
                C16809 +
            (C21803 * C5035 + C21804 * C5032 + (C21810 - C21809) * C5036 +
             (C21812 - C21811) * C5033 +
             (C19535 * C6307 - C50060 * C6309) * C5037 +
             (C19535 * C6311 - C50060 * C6313) * C5034) *
                C50260) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50352 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C19535 * C775 - C50060 * C780) * C121 +
             (C19535 * C784 - C50060 * C790) * C50222) *
                C19532 +
            ((C19535 * C1430 - C50060 * C1434) * C121 +
             (C19535 * C1438 - C50060 * C1442) * C50222) *
                C19533 +
            ((C19535 * C3048 - C50060 * C3051) * C121 +
             (C19535 * C3053 - C50060 * C3057) * C50222) *
                C19534) *
               C50189) *
              C50109 * C50394 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50352 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C50060 * C781 - C19535 * C776) * C121 +
             (C50060 * C791 - C19535 * C785) * C50222) *
                C19532 +
            ((C50060 * C1435 - C19535 * C1431) * C121 +
             (C50060 * C1443 - C19535 * C1439) * C50222) *
                C19533 +
            ((C50060 * C3052 - C19535 * C3049) * C121 +
             (C50060 * C3058 - C19535 * C3054) * C50222) *
                C19534) *
               C50189) *
              C50109 * C50395 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50352 +
           (((C19535 * C396 - C50060 * C406) * C121 +
             (C19535 * C410 - C50060 * C426) * C50222) *
                C19531 +
            ((C19535 * C777 - C50060 * C782) * C121 +
             (C19535 * C786 - C50060 * C792) * C50222) *
                C19532 +
            ((C19535 * C1432 - C50060 * C1436) * C121 +
             (C19535 * C1440 - C50060 * C1444) * C50222) *
                C19533 +
            ((C19535 * C3050 - C50060 * C3055) * C121 +
             (C19535 * C3056 - C50060 * C3059) * C50222) *
                C19534) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50352 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
              C16813 * C777 - C16808 * C782) *
                 C121 +
             (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
              C16813 * C786 - C16808 * C792) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50352 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
              C16808 * C783 - C16813 * C778) *
                 C121 +
             (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
              C16808 * C793 - C16813 * C787) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50352 +
           (((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
              C16813 * C402 - C16808 * C420) *
                 C121 +
             (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
              C16813 * C421 - C16808 * C432) *
                 C50222) *
                C16809 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
             C21785 * C5037 + C21786 * C5034) *
                C50260) *
               C50352 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            ((C20123 - C20124) * C5035 + (C20125 - C20126) * C5032 +
             (C20432 - C20431) * C5036 + (C20434 - C20433) * C5033 +
             (C21791 - C21792) * C5037 + (C21793 - C21794) * C5034) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
             C21803 * C5037 + C21804 * C5034) *
                C50260) *
               C50352 +
           (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
             (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
             (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                C16809 +
            ((C20135 - C20136) * C5035 + (C20137 - C20138) * C5032 +
             (C21624 - C21623) * C5036 + (C21626 - C21625) * C5033 +
             (C21809 - C21810) * C5037 + (C21811 - C21812) * C5034) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C50060 * C131 - C19535 * C124) * C5035 +
             (C50060 * C145 - C19535 * C135) * C5032 +
             (C22117 - C22118) * C5036 + (C22119 - C22120) * C5033 +
             (C22121 - C22122) * C5037 + (C22123 - C22124) * C5034) *
                C16809 +
            ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
             (C21963 - C21964) * C5036 + (C21965 - C21966) * C5033 +
             (C21967 - C21968) * C5037 + (C21969 - C21970) * C5034) *
                C50260) *
               C50352 +
           (((C22118 - C22117) * C5035 + (C22120 - C22119) * C5032 +
             (C22122 - C22121) * C5036 + (C22124 - C22123) * C5033 +
             (C19535 * C1716 - C50060 * C1720) * C5037 +
             (C19535 * C1724 - C50060 * C1728) * C5034) *
                C16809 +
            ((C21964 - C21963) * C5035 + (C21966 - C21965) * C5032 +
             (C21968 - C21967) * C5036 + (C21970 - C21969) * C5033 +
             (C19535 * C5904 - C50060 * C5905) * C5037 +
             (C19535 * C5906 - C50060 * C5907) * C5034) *
                C50260) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C248 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C249 +
           (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
              C16808 * C975 - C16813 * C971) *
                 C121 +
             (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
              C16808 * C983 - C16813 * C979) *
                 C50222) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C248 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C249 +
           (((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C121 +
             (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C50222) *
                C16809 +
            ((C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
              C16813 * C972 - C16808 * C976) *
                 C121 +
             (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
              C16813 * C980 - C16808 * C984) *
                 C50222) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
             C16808 * C265 - C16813 * C255) *
                C121 +
            (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
             C16808 * C285 - C16813 * C269) *
                C50222) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C121 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C50222) *
               C16809 +
           ((C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
             C16813 * C256 - C16808 * C266) *
                C121 +
            (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
             C16813 * C270 - C16808 * C286) *
                C50222) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C121 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C50222) *
               C16809 +
           ((C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
             C16808 * C279 - C16813 * C261) *
                C121 +
            (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
             C16808 * C291 - C16813 * C280) *
                C50222) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
             C16813 * C127 - C16808 * C139) *
                C121 +
            (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
             C16813 * C140 - C16808 * C148) *
                C50222) *
               C16809 +
           ((C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
             C16813 * C537 - C16808 * C538) *
                C121 +
            (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
             C16813 * C539 - C16808 * C540) *
                C50222) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C50060 * C263 - C19535 * C253) * C121 +
            (C50060 * C283 - C19535 * C267) * C50222) *
               C19532 +
           ((C50060 * C271 - C19535 * C257) * C121 +
            (C50060 * C287 - C19535 * C275) * C50222) *
               C19533 +
           ((C50060 * C973 - C19535 * C969) * C121 +
            (C50060 * C981 - C19535 * C977) * C50222) *
               C19534) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C121 +
            (C19535 * C134 - C50060 * C144) * C50222) *
               C19531 +
           ((C19535 * C254 - C50060 * C264) * C121 +
            (C19535 * C268 - C50060 * C284) * C50222) *
               C19532 +
           ((C19535 * C258 - C50060 * C272) * C121 +
            (C19535 * C276 - C50060 * C288) * C50222) *
               C19533 +
           ((C19535 * C970 - C50060 * C974) * C121 +
            (C19535 * C978 - C50060 * C982) * C50222) *
               C19534) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C121 +
            (C50060 * C145 - C19535 * C135) * C50222) *
               C19531 +
           ((C50060 * C265 - C19535 * C255) * C121 +
            (C50060 * C285 - C19535 * C269) * C50222) *
               C19532 +
           ((C50060 * C273 - C19535 * C259) * C121 +
            (C50060 * C289 - C19535 * C277) * C50222) *
               C19533 +
           ((C50060 * C975 - C19535 * C971) * C121 +
            (C50060 * C983 - C19535 * C979) * C50222) *
               C19534) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C121 +
            (C19535 * C136 - C50060 * C146) * C50222) *
               C19531 +
           ((C19535 * C256 - C50060 * C266) * C121 +
            (C19535 * C270 - C50060 * C286) * C50222) *
               C19532 +
           ((C19535 * C260 - C50060 * C274) * C121 +
            (C19535 * C278 - C50060 * C290) * C50222) *
               C19533 +
           ((C19535 * C972 - C50060 * C976) * C121 +
            (C19535 * C980 - C50060 * C984) * C50222) *
               C19534) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C248 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C249 +
           (C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C50060 * C3338 - C19535 * C3336) * C121 +
             (C50060 * C3342 - C19535 * C3340) * C50222) *
                C19534) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C248 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C249 +
           (C19685 * C19531 + C19686 * C19532 +
            ((C19664 - C19663) * C121 + (C19666 - C19665) * C50222) * C19533 +
            ((C19535 * C3337 - C50060 * C3339) * C121 +
             (C19535 * C3341 - C50060 * C3343) * C50222) *
                C19534) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C5035 +
            (C50060 * C143 - C19535 * C133) * C5032 +
            (C50060 * C404 - C19535 * C394) * C5036 +
            (C50060 * C424 - C19535 * C408) * C5033 +
            (C50060 * C412 - C19535 * C398) * C5037 +
            (C50060 * C428 - C19535 * C416) * C5034) *
               C16809 +
           ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
            (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
            (C20431 - C20432) * C5037 + (C20433 - C20434) * C5034) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C5035 +
            (C19535 * C134 - C50060 * C144) * C5032 +
            (C19535 * C395 - C50060 * C405) * C5036 +
            (C19535 * C409 - C50060 * C425) * C5033 +
            (C19535 * C399 - C50060 * C413) * C5037 +
            (C19535 * C417 - C50060 * C429) * C5034) *
               C16809 +
           ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
            (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
            (C19535 * C1084 - C50060 * C1088) * C5037 +
            (C19535 * C1092 - C50060 * C1096) * C5034) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C5035 +
            (C50060 * C145 - C19535 * C135) * C5032 +
            (C50060 * C406 - C19535 * C396) * C5036 +
            (C50060 * C426 - C19535 * C410) * C5033 +
            (C50060 * C414 - C19535 * C400) * C5037 +
            (C50060 * C430 - C19535 * C418) * C5034) *
               C16809 +
           ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
            (C50060 * C782 - C19535 * C777) * C5036 +
            (C50060 * C792 - C19535 * C786) * C5033 +
            (C50060 * C1089 - C19535 * C1085) * C5037 +
            (C50060 * C1097 - C19535 * C1093) * C5034) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C5035 +
            (C19535 * C136 - C50060 * C146) * C5032 +
            (C19535 * C397 - C50060 * C407) * C5036 +
            (C19535 * C411 - C50060 * C427) * C5033 +
            (C19535 * C401 - C50060 * C415) * C5037 +
            (C19535 * C419 - C50060 * C431) * C5034) *
               C16809 +
           ((C19535 * C256 - C50060 * C266) * C5035 +
            (C19535 * C270 - C50060 * C286) * C5032 +
            (C19535 * C778 - C50060 * C783) * C5036 +
            (C19535 * C787 - C50060 * C793) * C5033 +
            (C19535 * C1086 - C50060 * C1090) * C5037 +
            (C19535 * C1094 - C50060 * C1098) * C5034) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C50060 * C404 - C19535 * C394) * C5036 +
             (C50060 * C424 - C19535 * C408) * C5033 +
             (C50060 * C412 - C19535 * C398) * C5037 +
             (C50060 * C428 - C19535 * C416) * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             (C20124 - C20123) * C5036 + (C20126 - C20125) * C5033 +
             (C20431 - C20432) * C5037 + (C20433 - C20434) * C5034) *
                C50260) *
               C50125 * C248 +
           (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             (C20123 - C20124) * C5036 + (C20125 - C20126) * C5033 +
             (C20432 - C20431) * C5037 + (C20434 - C20433) * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
             (C20438 - C20437) * C5034) *
                C50260) *
               C50125 * C249 +
           ((C19667 * C5035 + C19668 * C5032 + (C20128 - C20127) * C5036 +
             (C20130 - C20129) * C5033 + (C20435 - C20436) * C5037 +
             (C20437 - C20438) * C5034) *
                C16809 +
            (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
             (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
             (C20441 - C20442) * C5034) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C19535 * C395 - C50060 * C405) * C5036 +
             (C19535 * C409 - C50060 * C425) * C5033 +
             (C19535 * C399 - C50060 * C413) * C5037 +
             (C19535 * C417 - C50060 * C429) * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             (C20136 - C20135) * C5036 + (C20138 - C20137) * C5033 +
             (C21623 - C21624) * C5037 + (C21625 - C21626) * C5034) *
                C50260) *
               C50125 * C248 +
           (((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
             (C20135 - C20136) * C5036 + (C20137 - C20138) * C5033 +
             (C21624 - C21623) * C5037 + (C21626 - C21625) * C5034) *
                C16809 +
            ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
             (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
             (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                C50260) *
               C50125 * C249 +
           ((C19671 * C5035 + C19672 * C5032 + (C20140 - C20139) * C5036 +
             (C20142 - C20141) * C5033 + (C21628 - C21627) * C5037 +
             (C21630 - C21629) * C5034) *
                C16809 +
            (C19673 * C5035 + C19674 * C5032 + (C20144 - C20143) * C5036 +
             (C20146 - C20145) * C5033 +
             (C19535 * C3508 - C50060 * C3510) * C5037 +
             (C19535 * C3512 - C50060 * C3514) * C5034) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C50396 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C50125 * C50397 +
           (C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C50125 * C1199) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C50396 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50397 +
           (C19685 * C19531 + C19686 * C19532 +
            ((C19664 - C19663) * C121 + (C19666 - C19665) * C50222) * C19533 +
            ((C19535 * C3337 - C50060 * C3339) * C121 +
             (C19535 * C3341 - C50060 * C3343) * C50222) *
                C19534) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C50396 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50397 +
           (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C50125 * C1199) *
              C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C50396 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50397 +
           (((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C121 +
             (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C50222) *
                C16809 +
            ((C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
              C16813 * C972 - C16808 * C976) *
                 C121 +
             (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
              C16813 * C980 - C16808 * C984) *
                 C50222) *
                C50260) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C50125 * C50396 +
           (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
             C22734 * C5034) *
                C50260) *
               C50125 * C50397 +
           ((C19667 * C5035 + C19668 * C5032 + (C20128 - C20127) * C5036 +
             (C20130 - C20129) * C5033 + (C20435 - C20436) * C5037 +
             (C20437 - C20438) * C5034) *
                C16809 +
            (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
             (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
             (C20441 - C20442) * C5034) *
                C50260) *
               C50125 * C1199) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
             C21804 * C5034) *
                C50260) *
               C50125 * C50396 +
           (((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
             C22327 * C5036 + C22328 * C5033 + C22329 * C5037 +
             C22330 * C5034) *
                C16809 +
            ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
             (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
             (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                C50260) *
               C50125 * C50397 +
           ((C19671 * C5035 + C19672 * C5032 + (C20140 - C20139) * C5036 +
             (C20142 - C20141) * C5033 + (C21628 - C21627) * C5037 +
             (C21630 - C21629) * C5034) *
                C16809 +
            (C19673 * C5035 + C19674 * C5032 + (C20144 - C20143) * C5036 +
             (C20146 - C20145) * C5033 +
             (C19535 * C3508 - C50060 * C3510) * C5037 +
             (C19535 * C3512 - C50060 * C3514) * C5034) *
                C50260) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50352 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C50396 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C50352 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50189) *
              C50397 +
          ((C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C50352 +
           (C20785 * C19531 + C20786 * C19532 +
            ((C20778 - C20777) * C121 + (C20780 - C20779) * C50222) * C19533 +
            ((C19535 * C20768 - C50060 * C20769) * C121 +
             (C19535 * C20770 - C50060 * C20771) * C50222) *
                C19534) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50352 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C50396 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50352 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50189) *
              C50397 +
          ((((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C50352 +
           (((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C121 +
             (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C50222) *
                C16809 +
            ((C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
              C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                 C121 +
             (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
              C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                 C50222) *
                C50260) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C50352 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50189) *
              C50396 +
          ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
             C22734 * C5034) *
                C50260) *
               C50352 +
           ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 + C21786 * C5033 +
             C22727 * C5037 + C22728 * C5034) *
                C16809 +
            (C23225 * C5035 + C23226 * C5032 + C23227 * C5036 + C23228 * C5033 +
             (C22735 - C22736) * C5037 + (C22737 - C22738) * C5034) *
                C50260) *
               C50189) *
              C50397 +
          (((C19667 * C5035 + C19668 * C5032 + C23225 * C5036 + C23226 * C5033 +
             C23227 * C5037 + C23228 * C5034) *
                C16809 +
            (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
             (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
             (C20441 - C20442) * C5034) *
                C50260) *
               C50352 +
           ((C20773 * C5035 + C20774 * C5032 + C22733 * C5036 + C22734 * C5033 +
             (C22736 - C22735) * C5037 + (C22738 - C22737) * C5034) *
                C16809 +
            (C20775 * C5035 + C20776 * C5032 + (C20440 - C20439) * C5036 +
             (C20442 - C20441) * C5033 +
             (C19535 * C21048 - C50060 * C21049) * C5037 +
             (C19535 * C21050 - C50060 * C21051) * C5034) *
                C50260) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50222) *
                    C16809 +
                ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
                 (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) *
                     C50222) *
                    C50260) *
                   C50125 * C893 +
               (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
                 (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) *
                     C50222) *
                    C16809 +
                ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
                 (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) *
                     C50222) *
                    C50260) *
                   C50125 * C50161) *
                  C895 +
              ((((C16811 * C123 - C16806 * C130 + C16812 * C124 -
                  C16807 * C131 + C16813 * C125 - C16808 * C132) *
                     C121 +
                 (C16811 * C134 - C16806 * C144 + C16812 * C135 -
                  C16807 * C145 + C16813 * C136 - C16808 * C146) *
                     C50222) *
                    C16809 +
                ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
                 (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) *
                     C50222) *
                    C50260) *
                   C50125 * C893 +
               (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
                 (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) *
                     C50222) *
                    C16809 +
                ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
                 (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) *
                     C50222) *
                    C50260) *
                   C50125 * C50161) *
                  C896 +
              ((((C16806 * C131 - C16811 * C124 + C16807 * C132 -
                  C16812 * C125 + C16808 * C137 - C16813 * C126) *
                     C121 +
                 (C16806 * C145 - C16811 * C135 + C16807 * C146 -
                  C16812 * C136 + C16808 * C147 - C16813 * C138) *
                     C50222) *
                    C16809 +
                ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
                 (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) *
                     C50222) *
                    C50260) *
                   C50125 * C893 +
               (((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C121 +
                 (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) *
                     C50222) *
                    C16809 +
                ((C16811 * C259 - C16806 * C273 + C16812 * C260 -
                  C16807 * C274 + C16813 * C262 - C16808 * C281) *
                     C121 +
                 (C16811 * C277 - C16806 * C289 + C16812 * C278 -
                  C16807 * C290 + C16813 * C282 - C16808 * C292) *
                     C50222) *
                    C50260) *
                   C50125 * C50161) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C121 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C50222) *
                   C16809 +
               ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
                (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) *
                    C50222) *
                   C50260) *
                  C50125 * C964 +
              (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
                (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) *
                    C50222) *
                   C16809 +
               ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
                (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) *
                    C50222) *
                   C50260) *
                  C50125 * C965 +
              (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
                (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) *
                    C50222) *
                   C16809 +
               ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
                (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) *
                    C50222) *
                   C50260) *
                  C50125 * C966 +
              (((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C121 +
                (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) *
                    C50222) *
                   C16809 +
               ((C16811 * C2310 - C16806 * C2313 + C16812 * C2311 -
                 C16807 * C2314 + C16813 * C2312 - C16808 * C2317) *
                    C121 +
                (C16811 * C2315 - C16806 * C2319 + C16812 * C2316 -
                 C16807 * C2320 + C16813 * C2318 - C16808 * C2321) *
                    C50222) *
                   C50260) *
                  C50125 * C967) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C391 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C392 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
                C50260) *
               C393) *
              C893 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C391 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
              C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                 C121 +
             (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
              C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                 C50222) *
                C50260) *
               C392 +
           (((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C121 +
             (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C50222) *
                C16809 +
            ((C16811 * C2534 - C16806 * C2537 + C16812 * C2535 -
              C16807 * C2538 + C16813 * C2536 - C16808 * C2541) *
                 C121 +
             (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 -
              C16807 * C2544 + C16813 * C2542 - C16808 * C2545) *
                 C50222) *
                C50260) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C893 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C893 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50125 * C893 +
           (((C19884 - C19883) * C121 + (C19886 - C19885) * C50222) * C19531 +
            ((C19888 - C19887) * C121 + (C19890 - C19889) * C50222) * C19532 +
            ((C19892 - C19891) * C121 + (C19894 - C19893) * C50222) * C19533 +
            ((C19535 * C2312 - C50060 * C2317) * C121 +
             (C19535 * C2318 - C50060 * C2321) * C50222) *
                C19534) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
           C19683 * C19533 + C19684 * C19534) *
              C50125 * C964 +
          (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
           ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
           C20327 * C19533 + C20328 * C19534) *
              C50125 * C965 +
          (C19683 * C19531 + C19684 * C19532 +
           ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
           ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
              C50125 * C966 +
          (C20327 * C19531 + C20328 * C19532 +
           ((C20320 - C20319) * C121 + (C20322 - C20321) * C50222) * C19533 +
           ((C19535 * C20310 - C50060 * C20311) * C121 +
            (C19535 * C20312 - C50060 * C20313) * C50222) *
               C19534) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C391 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            ((C20127 - C20128) * C121 + (C20129 - C20130) * C50222) * C19533 +
            ((C20131 - C20132) * C121 + (C20133 - C20134) * C50222) * C19534) *
               C392 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
            ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
            ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
               C393) *
              C893 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C391 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C50060 * C4019 - C19535 * C4017) * C121 +
             (C50060 * C4023 - C19535 * C4021) * C50222) *
                C19534) *
               C392 +
           (((C20432 - C20431) * C121 + (C20434 - C20433) * C50222) * C19531 +
            ((C20436 - C20435) * C121 + (C20438 - C20437) * C50222) * C19532 +
            ((C20440 - C20439) * C121 + (C20442 - C20441) * C50222) * C19533 +
            ((C19535 * C20426 - C50060 * C20427) * C121 +
             (C19535 * C20428 - C50060 * C20429) * C50222) *
                C19534) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C50125 * C893 +
           (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
             (C20438 - C20437) * C5034) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
             C21804 * C5034) *
                C50260) *
               C50125 * C893 +
           (((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
             C22327 * C5036 + C22328 * C5033 + C22329 * C5037 +
             C22330 * C5034) *
                C16809 +
            ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
             (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
             (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C5035 +
             (C50060 * C145 - C19535 * C135) * C5032 +
             (C22117 - C22118) * C5036 + (C22119 - C22120) * C5033 +
             (C22121 - C22122) * C5037 + (C22123 - C22124) * C5034) *
                C16809 +
            ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
             (C21963 - C21964) * C5036 + (C21965 - C21966) * C5033 +
             (C21967 - C21968) * C5037 + (C21969 - C21970) * C5034) *
                C50260) *
               C50125 * C893 +
           (((C19884 - C19883) * C5035 + (C19886 - C19885) * C5032 +
             (C21964 - C21963) * C5036 + (C21966 - C21965) * C5033 +
             (C21968 - C21967) * C5037 + (C21970 - C21969) * C5034) *
                C16809 +
            ((C19888 - C19887) * C5035 + (C19890 - C19889) * C5032 +
             (C19535 * C1432 - C50060 * C1436) * C5036 +
             (C19535 * C1440 - C50060 * C1444) * C5033 +
             (C19535 * C2536 - C50060 * C2541) * C5037 +
             (C19535 * C2542 - C50060 * C2545) * C5034) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C5035 +
            (C50060 * C143 - C19535 * C133) * C5032 +
            (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
            C21813 * C5037 + C21814 * C5034) *
               C16809 +
           ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
            C22319 * C5036 + C22320 * C5033 + C21785 * C5037 + C21786 * C5034) *
               C50260) *
              C50125 * C964 +
          (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
            C22321 * C5036 + C22322 * C5033 + C22323 * C5037 + C22324 * C5034) *
               C16809 +
           ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
            C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
            (C20438 - C20437) * C5034) *
               C50260) *
              C50125 * C965 +
          ((C19667 * C5035 + C19668 * C5032 + (C20128 - C20127) * C5036 +
            (C20130 - C20129) * C5033 + (C20435 - C20436) * C5037 +
            (C20437 - C20438) * C5034) *
               C16809 +
           (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
            (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
            (C20441 - C20442) * C5034) *
               C50260) *
              C50125 * C966 +
          ((C20315 * C5035 + C20316 * C5032 + C20775 * C5036 + C20776 * C5033 +
            (C20440 - C20439) * C5037 + (C20442 - C20441) * C5034) *
               C16809 +
           (C20317 * C5035 + C20318 * C5032 + (C20778 - C20777) * C5036 +
            (C20780 - C20779) * C5033 +
            (C19535 * C20426 - C50060 * C20427) * C5037 +
            (C19535 * C20428 - C50060 * C20429) * C5034) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C391 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C392 +
           ((C21813 * C5035 + C21814 * C5032 + (C21788 - C21787) * C5036 +
             (C21790 - C21789) * C5033 +
             (C50060 * C5333 - C19535 * C5330) * C5037 +
             (C50060 * C5339 - C19535 * C5335) * C5034) *
                C16809 +
            (C21785 * C5035 + C21786 * C5032 + C22727 * C5036 + C22728 * C5033 +
             (C22729 - C22730) * C5037 + (C22731 - C22732) * C5034) *
                C50260) *
               C393) *
              C893 +
          ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
             C22734 * C5034) *
                C50260) *
               C391 +
           ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 + C21786 * C5033 +
             C22727 * C5037 + C22728 * C5034) *
                C16809 +
            ((C20128 - C20127) * C5035 + (C20130 - C20129) * C5032 +
             (C20435 - C20436) * C5036 + (C20437 - C20438) * C5033 +
             (C22735 - C22736) * C5037 + (C22737 - C22738) * C5034) *
                C50260) *
               C392 +
           ((C22323 * C5035 + C22324 * C5032 + C22725 * C5036 + C22726 * C5033 +
             (C22730 - C22729) * C5037 + (C22732 - C22731) * C5034) *
                C16809 +
            (C22733 * C5035 + C22734 * C5032 + (C22736 - C22735) * C5036 +
             (C22738 - C22737) * C5033 +
             (C19535 * C22720 - C50060 * C22721) * C5037 +
             (C19535 * C22722 - C50060 * C22723) * C5034) *
                C50260) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C121 +
              (C50060 * C143 - C19535 * C133) * C50222) *
                 C19531 +
             ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
             C19683 * C19533 + C19684 * C19534) *
                C50352 +
            (((C19535 * C394 - C50060 * C404) * C121 +
              (C19535 * C408 - C50060 * C424) * C50222) *
                 C19531 +
             ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
             ((C20127 - C20128) * C121 + (C20129 - C20130) * C50222) * C19533 +
             ((C20131 - C20132) * C121 + (C20133 - C20134) * C50222) * C19534) *
                C50189) *
               C893 +
           ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
             ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
             C20327 * C19533 + C20328 * C19534) *
                C50352 +
            (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
             ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
             ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
             ((C50060 * C4019 - C19535 * C4017) * C121 +
              (C50060 * C4023 - C19535 * C4021) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C121 +
              (C19535 * C134 - C50060 * C144) * C50222) *
                 C19531 +
             ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
             C19685 * C19533 + C19686 * C19534) *
                C50352 +
            (((C50060 * C405 - C19535 * C395) * C121 +
              (C50060 * C425 - C19535 * C409) * C50222) *
                 C19531 +
             ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
             ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
             ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
                C50189) *
               C893 +
           ((((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
             ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
             ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
             ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
                C50352 +
            (((C20136 - C20135) * C121 + (C20138 - C20137) * C50222) * C19531 +
             ((C20140 - C20139) * C121 + (C20142 - C20141) * C50222) * C19532 +
             ((C20144 - C20143) * C121 + (C20146 - C20145) * C50222) * C19533 +
             ((C19535 * C4018 - C50060 * C4020) * C121 +
              (C19535 * C4022 - C50060 * C4024) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50222) *
                 C16809 +
             ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
              (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                 C50260) *
                C50352 +
            (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
               C16813 * C396 - C16808 * C406) *
                  C121 +
              (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
               C16813 * C410 - C16808 * C426) *
                  C50222) *
                 C16809 +
             ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
              (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                 C50260) *
                C50189) *
               C893 +
           ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
              (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                 C16809 +
             ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
              (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                 C50260) *
                C50352 +
            (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
              (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                 C16809 +
             ((C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
               C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                  C121 +
              (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
               C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50222) *
                 C16809 +
             ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
              (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                 C50260) *
                C50352 +
            (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
               C16808 * C407 - C16813 * C397) *
                  C121 +
              (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
               C16808 * C427 - C16813 * C411) *
                  C50222) *
                 C16809 +
             ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
              (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                 C50260) *
                C50189) *
               C893 +
           ((((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
              (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                 C16809 +
             ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
              (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                 C50260) *
                C50352 +
            (((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C121 +
              (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C50222) *
                 C16809 +
             ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
               C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                  C121 +
              (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
               C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C5035 +
              (C50060 * C143 - C19535 * C133) * C5032 +
              (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
              C21813 * C5037 + C21814 * C5034) *
                 C16809 +
             ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
              C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
              C21786 * C5034) *
                 C50260) *
                C50352 +
            (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
              (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
              (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                 C16809 +
             (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 +
              C22324 * C5033 + C22725 * C5037 + C22726 * C5034) *
                 C50260) *
                C50189) *
               C893 +
           ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
              C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
              C22324 * C5034) *
                 C16809 +
             ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
              C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
              C22734 * C5034) *
                 C50260) *
                C50352 +
            ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 +
              C21786 * C5033 + C22727 * C5037 + C22728 * C5034) *
                 C16809 +
             ((C20128 - C20127) * C5035 + (C20130 - C20129) * C5032 +
              (C20435 - C20436) * C5036 + (C20437 - C20438) * C5033 +
              (C22735 - C22736) * C5037 + (C22737 - C22738) * C5034) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C5035 +
              (C19535 * C134 - C50060 * C144) * C5032 +
              (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
              C21815 * C5037 + C21816 * C5034) *
                 C16809 +
             ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
              C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
              C21804 * C5034) *
                 C50260) *
                C50352 +
            (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
              (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
              (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                 C16809 +
             (C22327 * C5035 + C22328 * C5032 + C22329 * C5036 +
              C22330 * C5033 + (C21809 - C21810) * C5037 +
              (C21811 - C21812) * C5034) *
                 C50260) *
                C50189) *
               C893 +
           ((((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
              C22327 * C5036 + C22328 * C5033 + C22329 * C5037 +
              C22330 * C5034) *
                 C16809 +
             ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
              (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
              (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                 C50260) *
                C50352 +
            ((C22325 * C5035 + C22326 * C5032 + C21803 * C5036 +
              C21804 * C5033 + (C21810 - C21809) * C5037 +
              (C21812 - C21811) * C5034) *
                 C16809 +
             ((C20140 - C20139) * C5035 + (C20142 - C20141) * C5032 +
              (C21628 - C21627) * C5036 + (C21630 - C21629) * C5033 +
              (C19535 * C4435 - C50060 * C4441) * C5037 +
              (C19535 * C4443 - C50060 * C4447) * C5034) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
            (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
               C50260) *
              C50125 * C964 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
               C16809 +
           ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
            (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
               C50260) *
              C50125 * C965 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
               C16809 +
           ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
            (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
               C50260) *
              C50125 * C966 +
          (((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C121 +
            (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C50222) *
               C16809 +
           ((C16811 * C2310 - C16806 * C2313 + C16812 * C2311 - C16807 * C2314 +
             C16813 * C2312 - C16808 * C2317) *
                C121 +
            (C16811 * C2315 - C16806 * C2319 + C16812 * C2316 - C16807 * C2320 +
             C16813 * C2318 - C16808 * C2321) *
                C50222) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C121 +
             (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C50222) *
                C16809 +
            ((C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
              C16813 * C262 - C16808 * C281) *
                 C121 +
             (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
              C16813 * C282 - C16808 * C292) *
                 C50222) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C893 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C893 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50125 * C893 +
           (((C19884 - C19883) * C121 + (C19886 - C19885) * C50222) * C19531 +
            ((C19888 - C19887) * C121 + (C19890 - C19889) * C50222) * C19532 +
            ((C19892 - C19891) * C121 + (C19894 - C19893) * C50222) * C19533 +
            ((C19535 * C2312 - C50060 * C2317) * C121 +
             (C19535 * C2318 - C50060 * C2321) * C50222) *
                C19534) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
           C19683 * C19533 + C19684 * C19534) *
              C50125 * C964 +
          (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
           ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
           C20327 * C19533 + C20328 * C19534) *
              C50125 * C965 +
          (C19683 * C19531 + C19684 * C19532 +
           ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
           ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
              C50125 * C966 +
          (C20327 * C19531 + C20328 * C19532 +
           ((C20320 - C20319) * C121 + (C20322 - C20321) * C50222) * C19533 +
           ((C19535 * C20310 - C50060 * C20311) * C121 +
            (C19535 * C20312 - C50060 * C20313) * C50222) *
               C19534) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C50125 * C893 +
           (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
             (C20438 - C20437) * C5034) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
             C21804 * C5034) *
                C50260) *
               C50125 * C893 +
           (((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
             C22327 * C5036 + C22328 * C5033 + C22329 * C5037 +
             C22330 * C5034) *
                C16809 +
            ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
             (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
             (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C5035 +
             (C50060 * C145 - C19535 * C135) * C5032 +
             (C22117 - C22118) * C5036 + (C22119 - C22120) * C5033 +
             (C22121 - C22122) * C5037 + (C22123 - C22124) * C5034) *
                C16809 +
            ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
             (C21963 - C21964) * C5036 + (C21965 - C21966) * C5033 +
             (C21967 - C21968) * C5037 + (C21969 - C21970) * C5034) *
                C50260) *
               C50125 * C893 +
           (((C19884 - C19883) * C5035 + (C19886 - C19885) * C5032 +
             (C21964 - C21963) * C5036 + (C21966 - C21965) * C5033 +
             (C21968 - C21967) * C5037 + (C21970 - C21969) * C5034) *
                C16809 +
            ((C19888 - C19887) * C5035 + (C19890 - C19889) * C5032 +
             (C19535 * C1432 - C50060 * C1436) * C5036 +
             (C19535 * C1440 - C50060 * C1444) * C5033 +
             (C19535 * C2536 - C50060 * C2541) * C5037 +
             (C19535 * C2542 - C50060 * C2545) * C5034) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C5035 +
            (C50060 * C143 - C19535 * C133) * C5032 +
            (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
            C21813 * C5037 + C21814 * C5034) *
               C16809 +
           ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
            C22319 * C5036 + C22320 * C5033 + C21785 * C5037 + C21786 * C5034) *
               C50260) *
              C50125 * C964 +
          (((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
            C22321 * C5036 + C22322 * C5033 + C22323 * C5037 + C22324 * C5034) *
               C16809 +
           ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
            C20773 * C5036 + C20774 * C5033 + (C20436 - C20435) * C5037 +
            (C20438 - C20437) * C5034) *
               C50260) *
              C50125 * C965 +
          ((C19667 * C5035 + C19668 * C5032 + (C20128 - C20127) * C5036 +
            (C20130 - C20129) * C5033 + (C20435 - C20436) * C5037 +
            (C20437 - C20438) * C5034) *
               C16809 +
           (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
            (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
            (C20441 - C20442) * C5034) *
               C50260) *
              C50125 * C966 +
          ((C20315 * C5035 + C20316 * C5032 + C20775 * C5036 + C20776 * C5033 +
            (C20440 - C20439) * C5037 + (C20442 - C20441) * C5034) *
               C16809 +
           (C20317 * C5035 + C20318 * C5032 + (C20778 - C20777) * C5036 +
            (C20780 - C20779) * C5033 +
            (C19535 * C20426 - C50060 * C20427) * C5037 +
            (C19535 * C20428 - C50060 * C20429) * C5034) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C121 +
              (C50060 * C143 - C19535 * C133) * C50222) *
                 C19531 +
             ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
             C19683 * C19533 + C19684 * C19534) *
                C1544 +
            (((C19535 * C394 - C50060 * C404) * C121 +
              (C19535 * C408 - C50060 * C424) * C50222) *
                 C19531 +
             ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
             C20785 * C19533 + C20786 * C19534) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
             ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
             C20327 * C19533 + C20328 * C19534) *
                C1544 +
            (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
             ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
             ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
             ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C121 +
              (C19535 * C134 - C50060 * C144) * C50222) *
                 C19531 +
             ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
             C19685 * C19533 + C19686 * C19534) *
                C1544 +
            (((C50060 * C405 - C19535 * C395) * C121 +
              (C50060 * C425 - C19535 * C409) * C50222) *
                 C19531 +
             ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
             ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
             ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
             ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
             ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
             ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
                C1544 +
            (((C20136 - C20135) * C121 + (C20138 - C20137) * C50222) * C19531 +
             ((C20140 - C20139) * C121 + (C20142 - C20141) * C50222) * C19532 +
             ((C20144 - C20143) * C121 + (C20146 - C20145) * C50222) * C19533 +
             ((C19535 * C4018 - C50060 * C4020) * C121 +
              (C19535 * C4022 - C50060 * C4024) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50222) *
                 C16809 +
             ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
              (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                 C50260) *
                C1544 +
            (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
               C16813 * C396 - C16808 * C406) *
                  C121 +
              (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
               C16813 * C410 - C16808 * C426) *
                  C50222) *
                 C16809 +
             ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
              (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
              (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                 C16809 +
             ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
              (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                 C50260) *
                C1544 +
            (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
              (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                 C16809 +
             ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
              (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50222) *
                 C16809 +
             ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
              (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                 C50260) *
                C1544 +
            (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
               C16808 * C407 - C16813 * C397) *
                  C121 +
              (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
               C16808 * C427 - C16813 * C411) *
                  C50222) *
                 C16809 +
             ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
              (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
              (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                 C16809 +
             ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
              (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                 C50260) *
                C1544 +
            (((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C121 +
              (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C50222) *
                 C16809 +
             ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
               C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                  C121 +
              (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
               C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C5035 +
              (C50060 * C143 - C19535 * C133) * C5032 +
              (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
              C21813 * C5037 + C21814 * C5034) *
                 C16809 +
             ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
              C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
              C21786 * C5034) *
                 C50260) *
                C1544 +
            (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
              (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
              C23623 * C5037 + C23624 * C5034) *
                 C16809 +
             (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 +
              C22324 * C5033 + C22725 * C5037 + C22726 * C5034) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
              C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
              C22324 * C5034) *
                 C16809 +
             ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
              C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
              C22734 * C5034) *
                 C50260) *
                C1544 +
            ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 +
              C21786 * C5033 + C22727 * C5037 + C22728 * C5034) *
                 C16809 +
             (C23225 * C5035 + C23226 * C5032 + C23227 * C5036 +
              C23228 * C5033 + (C22735 - C22736) * C5037 +
              (C22737 - C22738) * C5034) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C5035 +
              (C19535 * C134 - C50060 * C144) * C5032 +
              (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
              C21815 * C5037 + C21816 * C5034) *
                 C16809 +
             ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
              C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
              C21804 * C5034) *
                 C50260) *
                C1544 +
            (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
              (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
              (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                 C16809 +
             (C22327 * C5035 + C22328 * C5032 + C22329 * C5036 +
              C22330 * C5033 + (C21809 - C21810) * C5037 +
              (C21811 - C21812) * C5034) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C5035 + (C19654 - C19653) * C5032 +
              C22327 * C5036 + C22328 * C5033 + C22329 * C5037 +
              C22330 * C5034) *
                 C16809 +
             ((C19656 - C19655) * C5035 + (C19658 - C19657) * C5032 +
              (C20139 - C20140) * C5036 + (C20141 - C20142) * C5033 +
              (C21627 - C21628) * C5037 + (C21629 - C21630) * C5034) *
                 C50260) *
                C1544 +
            ((C22325 * C5035 + C22326 * C5032 + C21803 * C5036 +
              C21804 * C5033 + (C21810 - C21809) * C5037 +
              (C21812 - C21811) * C5034) *
                 C16809 +
             ((C20140 - C20139) * C5035 + (C20142 - C20141) * C5032 +
              (C21628 - C21627) * C5036 + (C21630 - C21629) * C5033 +
              (C19535 * C4435 - C50060 * C4441) * C5037 +
              (C19535 * C4443 - C50060 * C4447) * C5034) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50398 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50399 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
            ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
            ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
               C1960) *
              C50351 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C50398 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50399 +
           (((C20432 - C20431) * C121 + (C20434 - C20433) * C50222) * C19531 +
            ((C20436 - C20435) * C121 + (C20438 - C20437) * C50222) * C19532 +
            ((C20440 - C20439) * C121 + (C20442 - C20441) * C50222) * C19533 +
            ((C19535 * C20426 - C50060 * C20427) * C121 +
             (C19535 * C20428 - C50060 * C20429) * C50222) *
                C19534) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50398 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50399 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
                C50260) *
               C1960) *
              C50351 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50398 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50399 +
           (((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C121 +
             (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C50222) *
                C16809 +
            ((C16811 * C2534 - C16806 * C2537 + C16812 * C2535 -
              C16807 * C2538 + C16813 * C2536 - C16808 * C2541) *
                 C121 +
             (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 -
              C16807 * C2544 + C16813 * C2542 - C16808 * C2545) *
                 C50222) *
                C50260) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C50398 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             C23623 * C5037 + C23624 * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50399 +
           ((C21813 * C5035 + C21814 * C5032 + (C21788 - C21787) * C5036 +
             (C21790 - C21789) * C5033 + (C23625 - C23626) * C5037 +
             (C23627 - C23628) * C5034) *
                C16809 +
            (C21785 * C5035 + C21786 * C5032 + C22727 * C5036 + C22728 * C5033 +
             (C22729 - C22730) * C5037 + (C22731 - C22732) * C5034) *
                C50260) *
               C1960) *
              C50351 +
          ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
             C22734 * C5034) *
                C50260) *
               C50398 +
           ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 + C21786 * C5033 +
             C22727 * C5037 + C22728 * C5034) *
                C16809 +
            (C23225 * C5035 + C23226 * C5032 + C23227 * C5036 + C23228 * C5033 +
             (C22735 - C22736) * C5037 + (C22737 - C22738) * C5034) *
                C50260) *
               C50399 +
           ((C22323 * C5035 + C22324 * C5032 + C22725 * C5036 + C22726 * C5033 +
             (C22730 - C22729) * C5037 + (C22732 - C22731) * C5034) *
                C16809 +
            (C22733 * C5035 + C22734 * C5032 + (C22736 - C22735) * C5036 +
             (C22738 - C22737) * C5033 +
             (C19535 * C22720 - C50060 * C22721) * C5037 +
             (C19535 * C22722 - C50060 * C22723) * C5034) *
                C50260) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50222) *
                    C16809 +
                ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
                 (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) *
                     C50222) *
                    C50260) *
                   C1544 +
               (((C16811 * C394 - C16806 * C404 + C16812 * C395 -
                  C16807 * C405 + C16813 * C396 - C16808 * C406) *
                     C121 +
                 (C16811 * C408 - C16806 * C424 + C16812 * C409 -
                  C16807 * C425 + C16813 * C410 - C16808 * C426) *
                     C50222) *
                    C16809 +
                ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
                 (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) *
                     C50222) *
                    C50260) *
                   C50189) *
                  C50109 * C895 +
              ((((C16811 * C123 - C16806 * C130 + C16812 * C124 -
                  C16807 * C131 + C16813 * C125 - C16808 * C132) *
                     C121 +
                 (C16811 * C134 - C16806 * C144 + C16812 * C135 -
                  C16807 * C145 + C16813 * C136 - C16808 * C146) *
                     C50222) *
                    C16809 +
                ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
                 (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) *
                     C50222) *
                    C50260) *
                   C1544 +
               (((C16806 * C405 - C16811 * C395 + C16807 * C406 -
                  C16812 * C396 + C16808 * C407 - C16813 * C397) *
                     C121 +
                 (C16806 * C425 - C16811 * C409 + C16807 * C426 -
                  C16812 * C410 + C16808 * C427 - C16813 * C411) *
                     C50222) *
                    C16809 +
                ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
                 (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) *
                     C50222) *
                    C50260) *
                   C50189) *
                  C50109 * C896 +
              ((((C16806 * C131 - C16811 * C124 + C16807 * C132 -
                  C16812 * C125 + C16808 * C137 - C16813 * C126) *
                     C121 +
                 (C16806 * C145 - C16811 * C135 + C16807 * C146 -
                  C16812 * C136 + C16808 * C147 - C16813 * C138) *
                     C50222) *
                    C16809 +
                ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
                 (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) *
                     C50222) *
                    C50260) *
                   C1544 +
               (((C16811 * C396 - C16806 * C406 + C16812 * C397 -
                  C16807 * C407 + C16813 * C402 - C16808 * C420) *
                     C121 +
                 (C16811 * C410 - C16806 * C426 + C16812 * C411 -
                  C16807 * C427 + C16813 * C421 - C16808 * C432) *
                     C50222) *
                    C16809 +
                ((C16811 * C777 - C16806 * C782 + C16812 * C778 -
                  C16807 * C783 + C16813 * C779 - C16808 * C788) *
                     C121 +
                 (C16811 * C786 - C16806 * C792 + C16812 * C787 -
                  C16807 * C793 + C16813 * C789 - C16808 * C794) *
                     C50222) *
                    C50260) *
                   C50189) *
                  C50109 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16806 * C129 - C16811 * C122 + C16807 * C130 -
                  C16812 * C123 + C16808 * C131 - C16813 * C124) *
                     C121 +
                 (C16806 * C143 - C16811 * C133 + C16807 * C144 -
                  C16812 * C134 + C16808 * C145 - C16813 * C135) *
                     C50222) *
                    C16809 +
                ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
                 (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) *
                     C50222) *
                    C50260) *
                   C1544 +
               (((C16811 * C394 - C16806 * C404 + C16812 * C395 -
                  C16807 * C405 + C16813 * C396 - C16808 * C406) *
                     C121 +
                 (C16811 * C408 - C16806 * C424 + C16812 * C409 -
                  C16807 * C425 + C16813 * C410 - C16808 * C426) *
                     C50222) *
                    C16809 +
                ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
                 (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) *
                     C50222) *
                    C50260) *
                   C50189) *
                  C248 +
              ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
                 (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) *
                     C50222) *
                    C16809 +
                ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
                 (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) *
                     C50222) *
                    C50260) *
                   C1544 +
               (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
                 (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) *
                     C50222) *
                    C16809 +
                ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
                 (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) *
                     C50222) *
                    C50260) *
                   C50189) *
                  C249 +
              ((((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
                 (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) *
                     C50222) *
                    C16809 +
                ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
                 (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) *
                     C50222) *
                    C50260) *
                   C1544 +
               (((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C121 +
                 (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) *
                     C50222) *
                    C16809 +
                ((C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
                  C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                     C121 +
                 (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
                  C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                     C50222) *
                    C50260) *
                   C50189) *
                  C250) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
            (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
               C50260) *
              C1710 +
          (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C121 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C50222) *
               C16809 +
           ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
               C50260) *
              C1711 +
          (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C121 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C50222) *
               C16809 +
           ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
               C50260) *
              C1712 +
          (((C16811 * C1714 - C16806 * C1718 + C16812 * C1715 - C16807 * C1719 +
             C16813 * C1716 - C16808 * C1720) *
                C121 +
            (C16811 * C1722 - C16806 * C1726 + C16812 * C1723 - C16807 * C1727 +
             C16813 * C1724 - C16808 * C1728) *
                C50222) *
               C16809 +
           ((C16811 * C4432 - C16806 * C4436 + C16812 * C4433 - C16807 * C4437 +
             C16813 * C5904 - C16808 * C5905) *
                C121 +
            (C16811 * C4438 - C16806 * C4444 + C16812 * C4439 - C16807 * C4445 +
             C16813 * C5906 - C16808 * C5907) *
                C50222) *
               C50260) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C1544 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
            ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
            ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C1544 +
           (((C19535 * C396 - C50060 * C406) * C121 +
             (C19535 * C410 - C50060 * C426) * C50222) *
                C19531 +
            ((C19535 * C777 - C50060 * C782) * C121 +
             (C19535 * C786 - C50060 * C792) * C50222) *
                C19532 +
            ((C19535 * C1432 - C50060 * C1436) * C121 +
             (C19535 * C1440 - C50060 * C1444) * C50222) *
                C19533 +
            ((C19535 * C3050 - C50060 * C3055) * C121 +
             (C19535 * C3056 - C50060 * C3059) * C50222) *
                C19534) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C1544 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50189) *
              C249 +
          ((C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C1544 +
           (C20785 * C19531 + C20786 * C19532 +
            ((C20778 - C20777) * C121 + (C20780 - C20779) * C50222) * C19533 +
            ((C19535 * C20768 - C50060 * C20769) * C121 +
             (C19535 * C20770 - C50060 * C20771) * C50222) *
                C19534) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
           C19683 * C19533 + C19684 * C19534) *
              C1710 +
          (((C19535 * C394 - C50060 * C404) * C121 +
            (C19535 * C408 - C50060 * C424) * C50222) *
               C19531 +
           ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
           C20785 * C19533 + C20786 * C19534) *
              C1711 +
          (((C50060 * C412 - C19535 * C398) * C121 +
            (C50060 * C428 - C19535 * C416) * C50222) *
               C19531 +
           ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
           ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
           ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
              C1712 +
          (((C19535 * C1714 - C50060 * C1718) * C121 +
            (C19535 * C1722 - C50060 * C1726) * C50222) *
               C19531 +
           ((C19535 * C4432 - C50060 * C4436) * C121 +
            (C19535 * C4438 - C50060 * C4444) * C50222) *
               C19532 +
           ((C19535 * C4434 - C50060 * C4440) * C121 +
            (C19535 * C4442 - C50060 * C4446) * C50222) *
               C19533 +
           ((C19535 * C21048 - C50060 * C21049) * C121 +
            (C19535 * C21050 - C50060 * C21051) * C50222) *
               C19534) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C1544 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
             C21804 * C5034) *
                C50260) *
               C1544 +
           (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
             (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
             (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                C16809 +
            (C22327 * C5035 + C22328 * C5032 + C22329 * C5036 + C22330 * C5033 +
             (C21809 - C21810) * C5037 + (C21811 - C21812) * C5034) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C5035 +
             (C50060 * C145 - C19535 * C135) * C5032 +
             (C22117 - C22118) * C5036 + (C22119 - C22120) * C5033 +
             (C22121 - C22122) * C5037 + (C22123 - C22124) * C5034) *
                C16809 +
            ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
             (C21963 - C21964) * C5036 + (C21965 - C21966) * C5033 +
             (C21967 - C21968) * C5037 + (C21969 - C21970) * C5034) *
                C50260) *
               C1544 +
           (((C22118 - C22117) * C5035 + (C22120 - C22119) * C5032 +
             (C22122 - C22121) * C5036 + (C22124 - C22123) * C5033 +
             (C19535 * C1716 - C50060 * C1720) * C5037 +
             (C19535 * C1724 - C50060 * C1728) * C5034) *
                C16809 +
            ((C21964 - C21963) * C5035 + (C21966 - C21965) * C5032 +
             (C21968 - C21967) * C5036 + (C21970 - C21969) * C5033 +
             (C19535 * C5904 - C50060 * C5905) * C5037 +
             (C19535 * C5906 - C50060 * C5907) * C5034) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C1544 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
             C22734 * C5034) *
                C50260) *
               C1544 +
           ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 + C21786 * C5033 +
             C22727 * C5037 + C22728 * C5034) *
                C16809 +
            (C23225 * C5035 + C23226 * C5032 + C23227 * C5036 + C23228 * C5033 +
             (C22735 - C22736) * C5037 + (C22737 - C22738) * C5034) *
                C50260) *
               C50189) *
              C249 +
          (((C19667 * C5035 + C19668 * C5032 + C23225 * C5036 + C23226 * C5033 +
             C23227 * C5037 + C23228 * C5034) *
                C16809 +
            (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
             (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
             (C20441 - C20442) * C5034) *
                C50260) *
               C1544 +
           ((C20773 * C5035 + C20774 * C5032 + C22733 * C5036 + C22734 * C5033 +
             (C22736 - C22735) * C5037 + (C22738 - C22737) * C5034) *
                C16809 +
            (C20775 * C5035 + C20776 * C5032 + (C20440 - C20439) * C5036 +
             (C20442 - C20441) * C5033 +
             (C19535 * C21048 - C50060 * C21049) * C5037 +
             (C19535 * C21050 - C50060 * C21051) * C5034) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C5035 +
            (C50060 * C143 - C19535 * C133) * C5032 +
            (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
            C21813 * C5037 + C21814 * C5034) *
               C16809 +
           ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
            C22319 * C5036 + C22320 * C5033 + C21785 * C5037 + C21786 * C5034) *
               C50260) *
              C1710 +
          (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
            (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
            C23623 * C5037 + C23624 * C5034) *
               C16809 +
           (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
            C22725 * C5037 + C22726 * C5034) *
               C50260) *
              C1711 +
          ((C21813 * C5035 + C21814 * C5032 + (C21788 - C21787) * C5036 +
            (C21790 - C21789) * C5033 + (C23625 - C23626) * C5037 +
            (C23627 - C23628) * C5034) *
               C16809 +
           (C21785 * C5035 + C21786 * C5032 + C22727 * C5036 + C22728 * C5033 +
            (C22729 - C22730) * C5037 + (C22731 - C22732) * C5034) *
               C50260) *
              C1712 +
          ((C23623 * C5035 + C23624 * C5032 + (C23626 - C23625) * C5036 +
            (C23628 - C23627) * C5033 +
            (C19535 * C7204 - C50060 * C7206) * C5037 +
            (C19535 * C7208 - C50060 * C7210) * C5034) *
               C16809 +
           (C22725 * C5035 + C22726 * C5032 + (C22730 - C22729) * C5036 +
            (C22732 - C22731) * C5033 +
            (C19535 * C23618 - C50060 * C23619) * C5037 +
            (C19535 * C23620 - C50060 * C23621) * C5034) *
               C50260) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50398 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50399 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
            ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
            ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
               C1960) *
              C50109 * C50343 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50398 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
            ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
            ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
               C50399 +
           (((C19535 * C399 - C50060 * C413) * C121 +
             (C19535 * C417 - C50060 * C429) * C50222) *
                C19531 +
            ((C19535 * C1084 - C50060 * C1088) * C121 +
             (C19535 * C1092 - C50060 * C1096) * C50222) *
                C19532 +
            ((C19535 * C2535 - C50060 * C2538) * C121 +
             (C19535 * C2540 - C50060 * C2544) * C50222) *
                C19533 +
            ((C19535 * C3508 - C50060 * C3510) * C121 +
             (C19535 * C3512 - C50060 * C3514) * C50222) *
                C19534) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50398 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50399 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
                C50260) *
               C1960) *
              C50109 * C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50398 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                C50260) *
               C50399 +
           (((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
              C16813 * C401 - C16808 * C415) *
                 C121 +
             (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
              C16813 * C419 - C16808 * C431) *
                 C50222) *
                C16809 +
            ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C121 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50222) *
                C50260) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C50398 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             C23623 * C5037 + C23624 * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50399 +
           ((C21813 * C5035 + C21814 * C5032 + (C21788 - C21787) * C5036 +
             (C21790 - C21789) * C5033 + (C23625 - C23626) * C5037 +
             (C23627 - C23628) * C5034) *
                C16809 +
            (C21785 * C5035 + C21786 * C5032 + C22727 * C5036 + C22728 * C5033 +
             (C22729 - C22730) * C5037 + (C22731 - C22732) * C5034) *
                C50260) *
               C1960) *
              C50109 * C50343 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
             C21804 * C5034) *
                C50260) *
               C50398 +
           (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
             (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
             (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                C16809 +
            (C22327 * C5035 + C22328 * C5032 + C22329 * C5036 + C22330 * C5033 +
             (C21809 - C21810) * C5037 + (C21811 - C21812) * C5034) *
                C50260) *
               C50399 +
           ((C21815 * C5035 + C21816 * C5032 + (C21806 - C21805) * C5036 +
             (C21808 - C21807) * C5033 +
             (C19535 * C5331 - C50060 * C5334) * C5037 +
             (C19535 * C5336 - C50060 * C5340) * C5034) *
                C16809 +
            (C21803 * C5035 + C21804 * C5032 + (C21810 - C21809) * C5036 +
             (C21812 - C21811) * C5033 +
             (C19535 * C6307 - C50060 * C6309) * C5037 +
             (C19535 * C6311 - C50060 * C6313) * C5034) *
                C50260) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C248 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C1544 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50189) *
              C249 +
          ((((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C1544 +
           (((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C121 +
             (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C50222) *
                C16809 +
            ((C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
              C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                 C121 +
             (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
              C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                 C50222) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C1544 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
              C16813 * C402 - C16808 * C420) *
                 C121 +
             (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
              C16813 * C421 - C16808 * C432) *
                 C50222) *
                C16809 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C1544 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
            ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
            ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C1544 +
           (((C19535 * C396 - C50060 * C406) * C121 +
             (C19535 * C410 - C50060 * C426) * C50222) *
                C19531 +
            ((C19535 * C777 - C50060 * C782) * C121 +
             (C19535 * C786 - C50060 * C792) * C50222) *
                C19532 +
            ((C19535 * C1432 - C50060 * C1436) * C121 +
             (C19535 * C1440 - C50060 * C1444) * C50222) *
                C19533 +
            ((C19535 * C3050 - C50060 * C3055) * C121 +
             (C19535 * C3056 - C50060 * C3059) * C50222) *
                C19534) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C1544 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50189) *
              C249 +
          ((C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C1544 +
           (C20785 * C19531 + C20786 * C19532 +
            ((C20778 - C20777) * C121 + (C20780 - C20779) * C50222) * C19533 +
            ((C19535 * C20768 - C50060 * C20769) * C121 +
             (C19535 * C20770 - C50060 * C20771) * C50222) *
                C19534) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C1544 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C5035 +
             (C19535 * C134 - C50060 * C144) * C5032 +
             (C21795 - C21796) * C5036 + (C21797 - C21798) * C5033 +
             C21815 * C5037 + C21816 * C5034) *
                C16809 +
            ((C19651 - C19652) * C5035 + (C19653 - C19654) * C5032 +
             C22325 * C5036 + C22326 * C5033 + C21803 * C5037 +
             C21804 * C5034) *
                C50260) *
               C1544 +
           (((C21796 - C21795) * C5035 + (C21798 - C21797) * C5032 +
             (C21800 - C21799) * C5036 + (C21802 - C21801) * C5033 +
             (C21805 - C21806) * C5037 + (C21807 - C21808) * C5034) *
                C16809 +
            (C22327 * C5035 + C22328 * C5032 + C22329 * C5036 + C22330 * C5033 +
             (C21809 - C21810) * C5037 + (C21811 - C21812) * C5034) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C5035 +
             (C50060 * C145 - C19535 * C135) * C5032 +
             (C22117 - C22118) * C5036 + (C22119 - C22120) * C5033 +
             (C22121 - C22122) * C5037 + (C22123 - C22124) * C5034) *
                C16809 +
            ((C19883 - C19884) * C5035 + (C19885 - C19886) * C5032 +
             (C21963 - C21964) * C5036 + (C21965 - C21966) * C5033 +
             (C21967 - C21968) * C5037 + (C21969 - C21970) * C5034) *
                C50260) *
               C1544 +
           (((C22118 - C22117) * C5035 + (C22120 - C22119) * C5032 +
             (C22122 - C22121) * C5036 + (C22124 - C22123) * C5033 +
             (C19535 * C1716 - C50060 * C1720) * C5037 +
             (C19535 * C1724 - C50060 * C1728) * C5034) *
                C16809 +
            ((C21964 - C21963) * C5035 + (C21966 - C21965) * C5032 +
             (C21968 - C21967) * C5036 + (C21970 - C21969) * C5033 +
             (C19535 * C5904 - C50060 * C5905) * C5037 +
             (C19535 * C5906 - C50060 * C5907) * C5034) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C5035 +
             (C50060 * C143 - C19535 * C133) * C5032 +
             (C21777 - C21778) * C5036 + (C21779 - C21780) * C5033 +
             C21813 * C5037 + C21814 * C5034) *
                C16809 +
            ((C19635 - C19636) * C5035 + (C19637 - C19638) * C5032 +
             C22319 * C5036 + C22320 * C5033 + C21785 * C5037 +
             C21786 * C5034) *
                C50260) *
               C1544 +
           (((C21778 - C21777) * C5035 + (C21780 - C21779) * C5032 +
             (C21782 - C21781) * C5036 + (C21784 - C21783) * C5033 +
             (C21787 - C21788) * C5037 + (C21789 - C21790) * C5034) *
                C16809 +
            (C22321 * C5035 + C22322 * C5032 + C22323 * C5036 + C22324 * C5033 +
             C22725 * C5037 + C22726 * C5034) *
                C50260) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C5035 + (C19638 - C19637) * C5032 +
             C22321 * C5036 + C22322 * C5033 + C22323 * C5037 +
             C22324 * C5034) *
                C16809 +
            ((C19640 - C19639) * C5035 + (C19642 - C19641) * C5032 +
             C20773 * C5036 + C20774 * C5033 + C22733 * C5037 +
             C22734 * C5034) *
                C50260) *
               C1544 +
           ((C22319 * C5035 + C22320 * C5032 + C21785 * C5036 + C21786 * C5033 +
             C22727 * C5037 + C22728 * C5034) *
                C16809 +
            (C23225 * C5035 + C23226 * C5032 + C23227 * C5036 + C23228 * C5033 +
             (C22735 - C22736) * C5037 + (C22737 - C22738) * C5034) *
                C50260) *
               C50189) *
              C249 +
          (((C19667 * C5035 + C19668 * C5032 + C23225 * C5036 + C23226 * C5033 +
             C23227 * C5037 + C23228 * C5034) *
                C16809 +
            (C19669 * C5035 + C19670 * C5032 + (C20132 - C20131) * C5036 +
             (C20134 - C20133) * C5033 + (C20439 - C20440) * C5037 +
             (C20441 - C20442) * C5034) *
                C50260) *
               C1544 +
           ((C20773 * C5035 + C20774 * C5032 + C22733 * C5036 + C22734 * C5033 +
             (C22736 - C22735) * C5037 + (C22738 - C22737) * C5034) *
                C16809 +
            (C20775 * C5035 + C20776 * C5032 + (C20440 - C20439) * C5036 +
             (C20442 - C20441) * C5033 +
             (C19535 * C21048 - C50060 * C21049) * C5037 +
             (C19535 * C21050 - C50060 * C21051) * C5034) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 +
             (C25081 - C25080 + C25083 - C25082) * C10569 +
             (C25085 - C25084 + C25087 - C25086) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 +
             (C25080 - C25081 + C25082 - C25083) * C10569 +
             (C25084 - C25085 + C25086 - C25087) * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 +
             (C25097 - C25096 + C25099 - C25098) * C10569 +
             (C25101 - C25100 + C25103 - C25102) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C24391 - C24390 + C24393 - C24392) * C10568 +
             (C24395 - C24394 + C24397 - C24396) * C50365 +
             (C25096 - C25097 + C25098 - C25099) * C10569 +
             (C25100 - C25101 + C25102 - C25103) * C50286) *
                C16809 +
            ((C24399 - C24398 + C24401 - C24400) * C10568 +
             (C24403 - C24402 + C24405 - C24404) * C50365 +
             (C25104 - C25105 + C25106 - C25107) * C10569 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C10568 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50365 +
             (C50336 * C406 - C49173 * C396 + C50065 * C407 - C49166 * C397) *
                 C10569 +
             (C50336 * C426 - C49173 * C410 + C50065 * C427 - C49166 * C411) *
                 C50286) *
                C16809 +
            ((C24724 - C24725 + C24726 - C24727) * C10568 +
             (C24728 - C24729 + C24730 - C24731) * C50365 +
             (C27666 - C27667 + C27668 - C27669) * C10569 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C24725 - C24724 + C24727 - C24726) * C10568 +
             (C24729 - C24728 + C24731 - C24730) * C50365 +
             (C27667 - C27666 + C27669 - C27668) * C10569 +
             (C27671 - C27670 + C27673 - C27672) * C50286) *
                C16809 +
            ((C24733 - C24732 + C24735 - C24734) * C10568 +
             (C24737 - C24736 + C24739 - C24738) * C50365 +
             (C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C10569 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C10568 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C50365 +
              (C27432 - C27433 + C27434 - C27435) * C10569 +
              (C27436 - C27437 + C27438 - C27439) * C50286) *
                 C16809 +
             ((C24366 - C24367 + C24368 - C24369) * C10568 +
              (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
              C28151 * C50286) *
                 C50260) *
                C50352 +
            (((C27433 - C27432 + C27435 - C27434) * C10568 +
              (C27437 - C27436 + C27439 - C27438) * C50365 +
              (C27440 - C27441 + C27442 - C27443) * C10569 +
              (C27444 - C27445 + C27446 - C27447) * C50286) *
                 C16809 +
             (C28152 * C10568 + C28153 * C50365 +
              (C25520 - C25519 + C25522 - C25521) * C10569 +
              (C25524 - C25523 + C25526 - C25525) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24367 - C24366 + C24369 - C24368) * C10568 +
              (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
              C28153 * C50286) *
                 C16809 +
             ((C24375 - C24374 + C24377 - C24376) * C10568 +
              (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
              C26034 * C50286) *
                 C50260) *
                C50352 +
            ((C28150 * C10568 + C28151 * C50365 +
              (C25519 - C25520 + C25521 - C25522) * C10569 +
              (C25523 - C25524 + C25525 - C25526) * C50286) *
                 C16809 +
             ((C25089 - C25088 + C25091 - C25090) * C10568 +
              (C25093 - C25092 + C25095 - C25094) * C50365 +
              (C25527 - C25528 + C25529 - C25530) * C10569 +
              (C25531 - C25532 + C25533 - C25534) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C10568 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C50365 +
              (C27448 - C27449 + C27450 - C27451) * C10569 +
              (C27452 - C27453 + C27454 - C27455) * C50286) *
                 C16809 +
             ((C24390 - C24391 + C24392 - C24393) * C10568 +
              (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
              C28155 * C50286) *
                 C50260) *
                C50352 +
            (((C27449 - C27448 + C27451 - C27450) * C10568 +
              (C27453 - C27452 + C27455 - C27454) * C50365 +
              (C27456 - C27457 + C27458 - C27459) * C10569 +
              (C27460 - C27461 + C27462 - C27463) * C50286) *
                 C16809 +
             (C28156 * C10568 + C28157 * C50365 +
              (C27464 - C27465 + C27466 - C27467) * C10569 +
              (C27468 - C27469 + C27470 - C27471) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24391 - C24390 + C24393 - C24392) * C10568 +
              (C24395 - C24394 + C24397 - C24396) * C50365 + C28156 * C10569 +
              C28157 * C50286) *
                 C16809 +
             ((C24399 - C24398 + C24401 - C24400) * C10568 +
              (C24403 - C24402 + C24405 - C24404) * C50365 +
              (C25104 - C25105 + C25106 - C25107) * C10569 +
              (C25108 - C25109 + C25110 - C25111) * C50286) *
                 C50260) *
                C50352 +
            ((C28154 * C10568 + C28155 * C50365 +
              (C27465 - C27464 + C27467 - C27466) * C10569 +
              (C27469 - C27468 + C27471 - C27470) * C50286) *
                 C16809 +
             ((C25105 - C25104 + C25107 - C25106) * C10568 +
              (C25109 - C25108 + C25111 - C25110) * C50365 +
              (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
               C50065 * C2541) *
                  C10569 +
              (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
               C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C50336 * C404 - C49173 * C394 + C50065 * C405 - C49166 * C395) *
                 C10569 +
             (C50336 * C424 - C49173 * C408 + C50065 * C425 - C49166 * C409) *
                 C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 +
             (C25081 - C25080 + C25083 - C25082) * C10569 +
             (C25085 - C25084 + C25087 - C25086) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 +
             (C25080 - C25081 + C25082 - C25083) * C10569 +
             (C25084 - C25085 + C25086 - C25087) * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24422 * C10568 + C24423 * C50365 +
             (C25089 - C25088 + C25091 - C25090) * C10569 +
             (C25093 - C25092 + C25095 - C25094) * C50286) *
                C16809 +
            ((C24383 - C24382 + C24385 - C24384) * C10568 +
             (C24387 - C24386 + C24389 - C24388) * C50365 +
             (C26025 - C26026 + C26027 - C26028) * C10569 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C49173 * C395 - C50336 * C405 + C49166 * C396 - C50065 * C406) *
                 C10569 +
             (C49173 * C409 - C50336 * C425 + C49166 * C410 - C50065 * C426) *
                 C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 +
             (C25097 - C25096 + C25099 - C25098) * C10569 +
             (C25101 - C25100 + C25103 - C25102) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24391 - C24390 + C24393 - C24392) * C10568 +
             (C24395 - C24394 + C24397 - C24396) * C50365 +
             (C25096 - C25097 + C25098 - C25099) * C10569 +
             (C25100 - C25101 + C25102 - C25103) * C50286) *
                C16809 +
            ((C24399 - C24398 + C24401 - C24400) * C10568 +
             (C24403 - C24402 + C24405 - C24404) * C50365 +
             (C25104 - C25105 + C25106 - C25107) * C10569 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24424 * C10568 + C24425 * C50365 +
             (C25105 - C25104 + C25107 - C25106) * C10569 +
             (C25109 - C25108 + C25111 - C25110) * C50286) *
                C16809 +
            ((C24407 - C24406 + C24409 - C24408) * C10568 +
             (C24411 - C24410 + C24413 - C24412) * C50365 +
             (C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
              C50065 * C3055) *
                 C10569 +
             (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
              C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C10568 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50365 +
            (C50336 * C404 - C49173 * C394 + C50065 * C405 - C49166 * C395) *
                C10569 +
            (C50336 * C424 - C49173 * C408 + C50065 * C425 - C49166 * C409) *
                C50286) *
               C16809 +
           ((C24366 - C24367 + C24368 - C24369) * C10568 +
            (C24370 - C24371 + C24372 - C24373) * C50365 +
            (C25081 - C25080 + C25083 - C25082) * C10569 +
            (C25085 - C25084 + C25087 - C25086) * C50286) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C10568 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50365 +
            (C49173 * C395 - C50336 * C405 + C49166 * C396 - C50065 * C406) *
                C10569 +
            (C49173 * C409 - C50336 * C425 + C49166 * C410 - C50065 * C426) *
                C50286) *
               C16809 +
           ((C24390 - C24391 + C24392 - C24393) * C10568 +
            (C24394 - C24395 + C24396 - C24397) * C50365 +
            (C25097 - C25096 + C25099 - C25098) * C10569 +
            (C25101 - C25100 + C25103 - C25102) * C50286) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C10568 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50365 +
            (C50336 * C406 - C49173 * C396 + C50065 * C407 - C49166 * C397) *
                C10569 +
            (C50336 * C426 - C49173 * C410 + C50065 * C427 - C49166 * C411) *
                C50286) *
               C16809 +
           ((C24724 - C24725 + C24726 - C24727) * C10568 +
            (C24728 - C24729 + C24730 - C24731) * C50365 +
            (C50336 * C782 - C49173 * C777 + C50065 * C783 - C49166 * C778) *
                C10569 +
            (C50336 * C792 - C49173 * C786 + C50065 * C793 - C49166 * C787) *
                C50286) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
                C10568 +
            (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
                C50365 +
            (C49173 * C397 - C50336 * C407 + C49166 * C402 - C50065 * C420) *
                C10569 +
            (C49173 * C411 - C50336 * C427 + C49166 * C421 - C50065 * C432) *
                C50286) *
               C16809 +
           ((C49173 * C256 - C50336 * C266 + C49166 * C261 - C50065 * C279) *
                C10568 +
            (C49173 * C270 - C50336 * C286 + C49166 * C280 - C50065 * C291) *
                C50365 +
            (C49173 * C778 - C50336 * C783 + C49166 * C779 - C50065 * C788) *
                C10569 +
            (C49173 * C787 - C50336 * C793 + C49166 * C789 - C50065 * C794) *
                C50286) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 +
             (C25081 - C25080 + C25083 - C25082) * C10569 +
             (C25085 - C25084 + C25087 - C25086) * C50286) *
                C50260) *
               C391 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            ((C25080 - C25081 + C25082 - C25083) * C10568 +
             (C25084 - C25085 + C25086 - C25087) * C50365 +
             (C25520 - C25519 + C25522 - C25521) * C10569 +
             (C25524 - C25523 + C25526 - C25525) * C50286) *
                C50260) *
               C392 +
           (((C27441 - C27440 + C27443 - C27442) * C10568 +
             (C27445 - C27444 + C27447 - C27446) * C50365 +
             (C50336 * C1718 - C49173 * C1714 + C50065 * C1719 -
              C49166 * C1715) *
                 C10569 +
             (C50336 * C1726 - C49173 * C1722 + C50065 * C1727 -
              C49166 * C1723) *
                 C50286) *
                C16809 +
            ((C25519 - C25520 + C25521 - C25522) * C10568 +
             (C25523 - C25524 + C25525 - C25526) * C50365 +
             (C50336 * C4436 - C49173 * C4432 + C50065 * C4437 -
              C49166 * C4433) *
                 C10569 +
             (C50336 * C4444 - C49173 * C4438 + C50065 * C4445 -
              C49166 * C4439) *
                 C50286) *
                C50260) *
               C393) *
              C50109 * C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 +
             (C25097 - C25096 + C25099 - C25098) * C10569 +
             (C25101 - C25100 + C25103 - C25102) * C50286) *
                C50260) *
               C391 +
           (((C27449 - C27448 + C27451 - C27450) * C10568 +
             (C27453 - C27452 + C27455 - C27454) * C50365 +
             (C27456 - C27457 + C27458 - C27459) * C10569 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C16809 +
            ((C25096 - C25097 + C25098 - C25099) * C10568 +
             (C25100 - C25101 + C25102 - C25103) * C50365 +
             (C27464 - C27465 + C27466 - C27467) * C10569 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C392 +
           (((C27457 - C27456 + C27459 - C27458) * C10568 +
             (C27461 - C27460 + C27463 - C27462) * C50365 +
             (C49173 * C1715 - C50336 * C1719 + C49166 * C1716 -
              C50065 * C1720) *
                 C10569 +
             (C49173 * C1723 - C50336 * C1727 + C49166 * C1724 -
              C50065 * C1728) *
                 C50286) *
                C16809 +
            ((C27465 - C27464 + C27467 - C27466) * C10568 +
             (C27469 - C27468 + C27471 - C27470) * C50365 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C10569 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C50286) *
                C50260) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 +
             (C25081 - C25080 + C25083 - C25082) * C10569 +
             (C25085 - C25084 + C25087 - C25086) * C50286) *
                C50260) *
               C50352 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            ((C25080 - C25081 + C25082 - C25083) * C10568 +
             (C25084 - C25085 + C25086 - C25087) * C50365 +
             (C25520 - C25519 + C25522 - C25521) * C10569 +
             (C25524 - C25523 + C25526 - C25525) * C50286) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 +
             (C25097 - C25096 + C25099 - C25098) * C10569 +
             (C25101 - C25100 + C25103 - C25102) * C50286) *
                C50260) *
               C50352 +
           (((C27449 - C27448 + C27451 - C27450) * C10568 +
             (C27453 - C27452 + C27455 - C27454) * C50365 +
             (C27456 - C27457 + C27458 - C27459) * C10569 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C16809 +
            ((C25096 - C25097 + C25098 - C25099) * C10568 +
             (C25100 - C25101 + C25102 - C25103) * C50365 +
             (C27464 - C27465 + C27466 - C27467) * C10569 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C10568 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50365 +
             (C27868 - C27869 + C27870 - C27871) * C10569 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C16809 +
            ((C24724 - C24725 + C24726 - C24727) * C10568 +
             (C24728 - C24729 + C24730 - C24731) * C50365 +
             (C27666 - C27667 + C27668 - C27669) * C10569 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50352 +
           (((C27869 - C27868 + C27871 - C27870) * C10568 +
             (C27873 - C27872 + C27875 - C27874) * C50365 +
             (C49173 * C400 - C50336 * C414 + C49166 * C401 - C50065 * C415) *
                 C10569 +
             (C49173 * C418 - C50336 * C430 + C49166 * C419 - C50065 * C431) *
                 C50286) *
                C16809 +
            ((C27667 - C27666 + C27669 - C27668) * C10568 +
             (C27671 - C27670 + C27673 - C27672) * C50365 +
             (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
              C50065 * C1090) *
                 C10569 +
             (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
              C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C10568 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50365 +
            (C50336 * C404 - C49173 * C394 + C50065 * C405 - C49166 * C395) *
                C10569 +
            (C50336 * C424 - C49173 * C408 + C50065 * C425 - C49166 * C409) *
                C50286) *
               C16809 +
           ((C24366 - C24367 + C24368 - C24369) * C10568 +
            (C24370 - C24371 + C24372 - C24373) * C50365 +
            (C25081 - C25080 + C25083 - C25082) * C10569 +
            (C25085 - C25084 + C25087 - C25086) * C50286) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C10568 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50365 +
            (C49173 * C395 - C50336 * C405 + C49166 * C396 - C50065 * C406) *
                C10569 +
            (C49173 * C409 - C50336 * C425 + C49166 * C410 - C50065 * C426) *
                C50286) *
               C16809 +
           ((C24390 - C24391 + C24392 - C24393) * C10568 +
            (C24394 - C24395 + C24396 - C24397) * C50365 +
            (C25097 - C25096 + C25099 - C25098) * C10569 +
            (C25101 - C25100 + C25103 - C25102) * C50286) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C10568 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50365 +
            (C50336 * C406 - C49173 * C396 + C50065 * C407 - C49166 * C397) *
                C10569 +
            (C50336 * C426 - C49173 * C410 + C50065 * C427 - C49166 * C411) *
                C50286) *
               C16809 +
           ((C24724 - C24725 + C24726 - C24727) * C10568 +
            (C24728 - C24729 + C24730 - C24731) * C50365 +
            (C50336 * C782 - C49173 * C777 + C50065 * C783 - C49166 * C778) *
                C10569 +
            (C50336 * C792 - C49173 * C786 + C50065 * C793 - C49166 * C787) *
                C50286) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
                C10568 +
            (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
                C50365 +
            (C49173 * C397 - C50336 * C407 + C49166 * C402 - C50065 * C420) *
                C10569 +
            (C49173 * C411 - C50336 * C427 + C49166 * C421 - C50065 * C432) *
                C50286) *
               C16809 +
           ((C49173 * C256 - C50336 * C266 + C49166 * C261 - C50065 * C279) *
                C10568 +
            (C49173 * C270 - C50336 * C286 + C49166 * C280 - C50065 * C291) *
                C50365 +
            (C49173 * C778 - C50336 * C783 + C49166 * C779 - C50065 * C788) *
                C10569 +
            (C49173 * C787 - C50336 * C793 + C49166 * C789 - C50065 * C794) *
                C50286) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C50336 * C404 - C49173 * C394 + C50065 * C405 - C49166 * C395) *
                 C10569 +
             (C50336 * C424 - C49173 * C408 + C50065 * C425 - C49166 * C409) *
                 C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 +
             (C25081 - C25080 + C25083 - C25082) * C10569 +
             (C25085 - C25084 + C25087 - C25086) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 +
             (C25080 - C25081 + C25082 - C25083) * C10569 +
             (C25084 - C25085 + C25086 - C25087) * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24422 * C10568 + C24423 * C50365 +
             (C25089 - C25088 + C25091 - C25090) * C10569 +
             (C25093 - C25092 + C25095 - C25094) * C50286) *
                C16809 +
            ((C24383 - C24382 + C24385 - C24384) * C10568 +
             (C24387 - C24386 + C24389 - C24388) * C50365 +
             (C26025 - C26026 + C26027 - C26028) * C10569 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C49173 * C395 - C50336 * C405 + C49166 * C396 - C50065 * C406) *
                 C10569 +
             (C49173 * C409 - C50336 * C425 + C49166 * C410 - C50065 * C426) *
                 C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 +
             (C25097 - C25096 + C25099 - C25098) * C10569 +
             (C25101 - C25100 + C25103 - C25102) * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24391 - C24390 + C24393 - C24392) * C10568 +
             (C24395 - C24394 + C24397 - C24396) * C50365 +
             (C25096 - C25097 + C25098 - C25099) * C10569 +
             (C25100 - C25101 + C25102 - C25103) * C50286) *
                C16809 +
            ((C24399 - C24398 + C24401 - C24400) * C10568 +
             (C24403 - C24402 + C24405 - C24404) * C50365 +
             (C25104 - C25105 + C25106 - C25107) * C10569 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24424 * C10568 + C24425 * C50365 +
             (C25105 - C25104 + C25107 - C25106) * C10569 +
             (C25109 - C25108 + C25111 - C25110) * C50286) *
                C16809 +
            ((C24407 - C24406 + C24409 - C24408) * C10568 +
             (C24411 - C24410 + C24413 - C24412) * C50365 +
             (C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
              C50065 * C3055) *
                 C10569 +
             (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
              C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C50125 * C50396 +
           (((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50397 +
           ((C24422 * C10568 + C24423 * C50365 +
             (C25089 - C25088 + C25091 - C25090) * C10569 +
             (C25093 - C25092 + C25095 - C25094) * C50286) *
                C16809 +
            ((C24383 - C24382 + C24385 - C24384) * C10568 +
             (C24387 - C24386 + C24389 - C24388) * C50365 +
             (C26025 - C26026 + C26027 - C26028) * C10569 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50125 * C1199) *
              C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
             C28155 * C50286) *
                C50260) *
               C50125 * C50396 +
           (((C24391 - C24390 + C24393 - C24392) * C10568 +
             (C24395 - C24394 + C24397 - C24396) * C50365 + C28156 * C10569 +
             C28157 * C50286) *
                C16809 +
            ((C24399 - C24398 + C24401 - C24400) * C10568 +
             (C24403 - C24402 + C24405 - C24404) * C50365 +
             (C25104 - C25105 + C25106 - C25107) * C10569 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50397 +
           ((C24424 * C10568 + C24425 * C50365 +
             (C25105 - C25104 + C25107 - C25106) * C10569 +
             (C25109 - C25108 + C25111 - C25110) * C50286) *
                C16809 +
            ((C24407 - C24406 + C24409 - C24408) * C10568 +
             (C24411 - C24410 + C24413 - C24412) * C50365 +
             (C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
              C50065 * C3055) *
                 C10569 +
             (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
              C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C1199) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C50352 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50396 +
          ((((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50352 +
           ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
             C28695 * C50286) *
                C16809 +
            (C29346 * C10568 + C29347 * C50365 +
             (C25527 - C25528 + C25529 - C25530) * C10569 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50189) *
              C50397 +
          (((C24422 * C10568 + C24423 * C50365 + C29346 * C10569 +
             C29347 * C50286) *
                C16809 +
            ((C24383 - C24382 + C24385 - C24384) * C10568 +
             (C24387 - C24386 + C24389 - C24388) * C50365 +
             (C26025 - C26026 + C26027 - C26028) * C10569 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50352 +
           ((C26033 * C10568 + C26034 * C50365 +
             (C25528 - C25527 + C25530 - C25529) * C10569 +
             (C25532 - C25531 + C25534 - C25533) * C50286) *
                C16809 +
            ((C26026 - C26025 + C26028 - C26027) * C10568 +
             (C26030 - C26029 + C26032 - C26031) * C50365 +
             (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C10569 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C1199) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C10568 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50365 +
            (C27432 - C27433 + C27434 - C27435) * C10569 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C16809 +
           ((C24366 - C24367 + C24368 - C24369) * C10568 +
            (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
            C28151 * C50286) *
               C50260) *
              C50125 * C964 +
          (((C24367 - C24366 + C24369 - C24368) * C10568 +
            (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
            C28153 * C50286) *
               C16809 +
           ((C24375 - C24374 + C24377 - C24376) * C10568 +
            (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
            C26034 * C50286) *
               C50260) *
              C50125 * C965 +
          ((C24422 * C10568 + C24423 * C50365 +
            (C25089 - C25088 + C25091 - C25090) * C10569 +
            (C25093 - C25092 + C25095 - C25094) * C50286) *
               C16809 +
           ((C24383 - C24382 + C24385 - C24384) * C10568 +
            (C24387 - C24386 + C24389 - C24388) * C50365 +
            (C26025 - C26026 + C26027 - C26028) * C10569 +
            (C26029 - C26030 + C26031 - C26032) * C50286) *
               C50260) *
              C50125 * C966 +
          ((C25368 * C10568 + C25369 * C50365 +
            (C26026 - C26025 + C26028 - C26027) * C10569 +
            (C26030 - C26029 + C26032 - C26031) * C50286) *
               C16809 +
           ((C25361 - C25360 + C25363 - C25362) * C10568 +
            (C25365 - C25364 + C25367 - C25366) * C50365 +
            (C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
             C50065 * C4020) *
                C10569 +
            (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
             C50065 * C4024) *
                C50286) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
             C28155 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24391 - C24390 + C24393 - C24392) * C10568 +
             (C24395 - C24394 + C24397 - C24396) * C50365 + C28156 * C10569 +
             C28157 * C50286) *
                C16809 +
            ((C24399 - C24398 + C24401 - C24400) * C10568 +
             (C24403 - C24402 + C24405 - C24404) * C50365 +
             (C25104 - C25105 + C25106 - C25107) * C10569 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C10568 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50365 +
             (C27868 - C27869 + C27870 - C27871) * C10569 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C16809 +
            ((C24724 - C24725 + C24726 - C24727) * C10568 +
             (C24728 - C24729 + C24730 - C24731) * C50365 +
             (C27666 - C27667 + C27668 - C27669) * C10569 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24725 - C24724 + C24727 - C24726) * C10568 +
             (C24729 - C24728 + C24731 - C24730) * C50365 +
             (C27667 - C27666 + C27669 - C27668) * C10569 +
             (C27671 - C27670 + C27673 - C27672) * C50286) *
                C16809 +
            ((C24733 - C24732 + C24735 - C24734) * C10568 +
             (C24737 - C24736 + C24739 - C24738) * C50365 +
             (C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C10569 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C391 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C392 +
           (((C27441 - C27440 + C27443 - C27442) * C10568 +
             (C27445 - C27444 + C27447 - C27446) * C50365 +
             (C50336 * C1718 - C49173 * C1714 + C50065 * C1719 -
              C49166 * C1715) *
                 C10569 +
             (C50336 * C1726 - C49173 * C1722 + C50065 * C1727 -
              C49166 * C1723) *
                 C50286) *
                C16809 +
            (C28694 * C10568 + C28695 * C50365 +
             (C28684 - C28685 + C28686 - C28687) * C10569 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C393) *
              C893 +
          ((((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C391 +
           ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
             C28695 * C50286) *
                C16809 +
            ((C25089 - C25088 + C25091 - C25090) * C10568 +
             (C25093 - C25092 + C25095 - C25094) * C50365 +
             (C25527 - C25528 + C25529 - C25530) * C10569 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C392 +
           ((C28692 * C10568 + C28693 * C50365 +
             (C28685 - C28684 + C28687 - C28686) * C10569 +
             (C28689 - C28688 + C28691 - C28690) * C50286) *
                C16809 +
            ((C25528 - C25527 + C25530 - C25529) * C10568 +
             (C25532 - C25531 + C25534 - C25533) * C50365 +
             (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
              C50065 * C4441) *
                 C10569 +
             (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
              C50065 * C4447) *
                 C50286) *
                C50260) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C10568 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C50365 +
              (C27432 - C27433 + C27434 - C27435) * C10569 +
              (C27436 - C27437 + C27438 - C27439) * C50286) *
                 C16809 +
             ((C24366 - C24367 + C24368 - C24369) * C10568 +
              (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
              C28151 * C50286) *
                 C50260) *
                C50352 +
            (((C27433 - C27432 + C27435 - C27434) * C10568 +
              (C27437 - C27436 + C27439 - C27438) * C50365 +
              (C27440 - C27441 + C27442 - C27443) * C10569 +
              (C27444 - C27445 + C27446 - C27447) * C50286) *
                 C16809 +
             (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
              C28693 * C50286) *
                 C50260) *
                C50189) *
               C893 +
           ((((C24367 - C24366 + C24369 - C24368) * C10568 +
              (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
              C28153 * C50286) *
                 C16809 +
             ((C24375 - C24374 + C24377 - C24376) * C10568 +
              (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
              C26034 * C50286) *
                 C50260) *
                C50352 +
            ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
              C28695 * C50286) *
                 C16809 +
             ((C25089 - C25088 + C25091 - C25090) * C10568 +
              (C25093 - C25092 + C25095 - C25094) * C50365 +
              (C25527 - C25528 + C25529 - C25530) * C10569 +
              (C25531 - C25532 + C25533 - C25534) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C10568 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C50365 +
              (C27448 - C27449 + C27450 - C27451) * C10569 +
              (C27452 - C27453 + C27454 - C27455) * C50286) *
                 C16809 +
             ((C24390 - C24391 + C24392 - C24393) * C10568 +
              (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
              C28155 * C50286) *
                 C50260) *
                C50352 +
            (((C27449 - C27448 + C27451 - C27450) * C10568 +
              (C27453 - C27452 + C27455 - C27454) * C50365 +
              (C27456 - C27457 + C27458 - C27459) * C10569 +
              (C27460 - C27461 + C27462 - C27463) * C50286) *
                 C16809 +
             (C28156 * C10568 + C28157 * C50365 +
              (C27464 - C27465 + C27466 - C27467) * C10569 +
              (C27468 - C27469 + C27470 - C27471) * C50286) *
                 C50260) *
                C50189) *
               C893 +
           ((((C24391 - C24390 + C24393 - C24392) * C10568 +
              (C24395 - C24394 + C24397 - C24396) * C50365 + C28156 * C10569 +
              C28157 * C50286) *
                 C16809 +
             ((C24399 - C24398 + C24401 - C24400) * C10568 +
              (C24403 - C24402 + C24405 - C24404) * C50365 +
              (C25104 - C25105 + C25106 - C25107) * C10569 +
              (C25108 - C25109 + C25110 - C25111) * C50286) *
                 C50260) *
                C50352 +
            ((C28154 * C10568 + C28155 * C50365 +
              (C27465 - C27464 + C27467 - C27466) * C10569 +
              (C27469 - C27468 + C27471 - C27470) * C50286) *
                 C16809 +
             ((C25105 - C25104 + C25107 - C25106) * C10568 +
              (C25109 - C25108 + C25111 - C25110) * C50365 +
              (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
               C50065 * C2541) *
                  C10569 +
              (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
               C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
             C28155 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24391 - C24390 + C24393 - C24392) * C10568 +
             (C24395 - C24394 + C24397 - C24396) * C50365 + C28156 * C10569 +
             C28157 * C50286) *
                C16809 +
            ((C24399 - C24398 + C24401 - C24400) * C10568 +
             (C24403 - C24402 + C24405 - C24404) * C50365 +
             (C25104 - C25105 + C25106 - C25107) * C10569 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C10568 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50365 +
             (C27868 - C27869 + C27870 - C27871) * C10569 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C16809 +
            ((C24724 - C24725 + C24726 - C24727) * C10568 +
             (C24728 - C24729 + C24730 - C24731) * C50365 +
             (C27666 - C27667 + C27668 - C27669) * C10569 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24725 - C24724 + C24727 - C24726) * C10568 +
             (C24729 - C24728 + C24731 - C24730) * C50365 +
             (C27667 - C27666 + C27669 - C27668) * C10569 +
             (C27671 - C27670 + C27673 - C27672) * C50286) *
                C16809 +
            ((C24733 - C24732 + C24735 - C24734) * C10568 +
             (C24737 - C24736 + C24739 - C24738) * C50365 +
             (C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C10569 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C10568 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50365 +
            (C27432 - C27433 + C27434 - C27435) * C10569 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C16809 +
           ((C24366 - C24367 + C24368 - C24369) * C10568 +
            (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
            C28151 * C50286) *
               C50260) *
              C50125 * C964 +
          (((C24367 - C24366 + C24369 - C24368) * C10568 +
            (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
            C28153 * C50286) *
               C16809 +
           ((C24375 - C24374 + C24377 - C24376) * C10568 +
            (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
            C26034 * C50286) *
               C50260) *
              C50125 * C965 +
          ((C24422 * C10568 + C24423 * C50365 +
            (C25089 - C25088 + C25091 - C25090) * C10569 +
            (C25093 - C25092 + C25095 - C25094) * C50286) *
               C16809 +
           ((C24383 - C24382 + C24385 - C24384) * C10568 +
            (C24387 - C24386 + C24389 - C24388) * C50365 +
            (C26025 - C26026 + C26027 - C26028) * C10569 +
            (C26029 - C26030 + C26031 - C26032) * C50286) *
               C50260) *
              C50125 * C966 +
          ((C25368 * C10568 + C25369 * C50365 +
            (C26026 - C26025 + C26028 - C26027) * C10569 +
            (C26030 - C26029 + C26032 - C26031) * C50286) *
               C16809 +
           ((C25361 - C25360 + C25363 - C25362) * C10568 +
            (C25365 - C25364 + C25367 - C25366) * C50365 +
            (C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
             C50065 * C4020) *
                C10569 +
            (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
             C50065 * C4024) *
                C50286) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C10568 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C50365 +
              (C27432 - C27433 + C27434 - C27435) * C10569 +
              (C27436 - C27437 + C27438 - C27439) * C50286) *
                 C16809 +
             ((C24366 - C24367 + C24368 - C24369) * C10568 +
              (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
              C28151 * C50286) *
                 C50260) *
                C1544 +
            (((C27433 - C27432 + C27435 - C27434) * C10568 +
              (C27437 - C27436 + C27439 - C27438) * C50365 +
              (C27440 - C27441 + C27442 - C27443) * C10569 +
              (C27444 - C27445 + C27446 - C27447) * C50286) *
                 C16809 +
             (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
              C28693 * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24367 - C24366 + C24369 - C24368) * C10568 +
              (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
              C28153 * C50286) *
                 C16809 +
             ((C24375 - C24374 + C24377 - C24376) * C10568 +
              (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
              C26034 * C50286) *
                 C50260) *
                C1544 +
            ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
              C28695 * C50286) *
                 C16809 +
             (C29346 * C10568 + C29347 * C50365 +
              (C25527 - C25528 + C25529 - C25530) * C10569 +
              (C25531 - C25532 + C25533 - C25534) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C10568 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C50365 +
              (C27448 - C27449 + C27450 - C27451) * C10569 +
              (C27452 - C27453 + C27454 - C27455) * C50286) *
                 C16809 +
             ((C24390 - C24391 + C24392 - C24393) * C10568 +
              (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
              C28155 * C50286) *
                 C50260) *
                C1544 +
            (((C27449 - C27448 + C27451 - C27450) * C10568 +
              (C27453 - C27452 + C27455 - C27454) * C50365 +
              (C27456 - C27457 + C27458 - C27459) * C10569 +
              (C27460 - C27461 + C27462 - C27463) * C50286) *
                 C16809 +
             (C28156 * C10568 + C28157 * C50365 +
              (C27464 - C27465 + C27466 - C27467) * C10569 +
              (C27468 - C27469 + C27470 - C27471) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24391 - C24390 + C24393 - C24392) * C10568 +
              (C24395 - C24394 + C24397 - C24396) * C50365 + C28156 * C10569 +
              C28157 * C50286) *
                 C16809 +
             ((C24399 - C24398 + C24401 - C24400) * C10568 +
              (C24403 - C24402 + C24405 - C24404) * C50365 +
              (C25104 - C25105 + C25106 - C25107) * C10569 +
              (C25108 - C25109 + C25110 - C25111) * C50286) *
                 C50260) *
                C1544 +
            ((C28154 * C10568 + C28155 * C50365 +
              (C27465 - C27464 + C27467 - C27466) * C10569 +
              (C27469 - C27468 + C27471 - C27470) * C50286) *
                 C16809 +
             ((C25105 - C25104 + C25107 - C25106) * C10568 +
              (C25109 - C25108 + C25111 - C25110) * C50365 +
              (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
               C50065 * C2541) *
                  C10569 +
              (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
               C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C50398 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50399 +
           (((C27441 - C27440 + C27443 - C27442) * C10568 +
             (C27445 - C27444 + C27447 - C27446) * C50365 +
             (C29866 - C29867 + C29868 - C29869) * C10569 +
             (C29870 - C29871 + C29872 - C29873) * C50286) *
                C16809 +
            (C28694 * C10568 + C28695 * C50365 +
             (C28684 - C28685 + C28686 - C28687) * C10569 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C1960) *
              C50351 +
          ((((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C50398 +
           ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
             C28695 * C50286) *
                C16809 +
            (C29346 * C10568 + C29347 * C50365 +
             (C25527 - C25528 + C25529 - C25530) * C10569 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50399 +
           ((C28692 * C10568 + C28693 * C50365 +
             (C28685 - C28684 + C28687 - C28686) * C10569 +
             (C28689 - C28688 + C28691 - C28690) * C50286) *
                C16809 +
            ((C25528 - C25527 + C25530 - C25529) * C10568 +
             (C25532 - C25531 + C25534 - C25533) * C50365 +
             (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
              C50065 * C4441) *
                 C10569 +
             (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
              C50065 * C4447) *
                 C50286) *
                C50260) *
               C1960) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C248 +
          ((((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C1544 +
           ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
             C28695 * C50286) *
                C16809 +
            (C29346 * C10568 + C29347 * C50365 +
             (C25527 - C25528 + C25529 - C25530) * C10569 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50189) *
              C249 +
          (((C24422 * C10568 + C24423 * C50365 + C29346 * C10569 +
             C29347 * C50286) *
                C16809 +
            ((C24383 - C24382 + C24385 - C24384) * C10568 +
             (C24387 - C24386 + C24389 - C24388) * C50365 +
             (C26025 - C26026 + C26027 - C26028) * C10569 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C1544 +
           ((C26033 * C10568 + C26034 * C50365 +
             (C25528 - C25527 + C25530 - C25529) * C10569 +
             (C25532 - C25531 + C25534 - C25533) * C50286) *
                C16809 +
            ((C26026 - C26025 + C26028 - C26027) * C10568 +
             (C26030 - C26029 + C26032 - C26031) * C50365 +
             (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C10569 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
             C28155 * C50286) *
                C50260) *
               C1544 +
           (((C27449 - C27448 + C27451 - C27450) * C10568 +
             (C27453 - C27452 + C27455 - C27454) * C50365 +
             (C27456 - C27457 + C27458 - C27459) * C10569 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C16809 +
            (C28156 * C10568 + C28157 * C50365 +
             (C27464 - C27465 + C27466 - C27467) * C10569 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C10568 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50365 +
             (C27868 - C27869 + C27870 - C27871) * C10569 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C16809 +
            ((C24724 - C24725 + C24726 - C24727) * C10568 +
             (C24728 - C24729 + C24730 - C24731) * C50365 +
             (C27666 - C27667 + C27668 - C27669) * C10569 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C1544 +
           (((C27869 - C27868 + C27871 - C27870) * C10568 +
             (C27873 - C27872 + C27875 - C27874) * C50365 +
             (C49173 * C400 - C50336 * C414 + C49166 * C401 - C50065 * C415) *
                 C10569 +
             (C49173 * C418 - C50336 * C430 + C49166 * C419 - C50065 * C431) *
                 C50286) *
                C16809 +
            ((C27667 - C27666 + C27669 - C27668) * C10568 +
             (C27671 - C27670 + C27673 - C27672) * C50365 +
             (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
              C50065 * C1090) *
                 C10569 +
             (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
              C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C10568 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50365 +
            (C27432 - C27433 + C27434 - C27435) * C10569 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C16809 +
           ((C24366 - C24367 + C24368 - C24369) * C10568 +
            (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
            C28151 * C50286) *
               C50260) *
              C1710 +
          (((C27433 - C27432 + C27435 - C27434) * C10568 +
            (C27437 - C27436 + C27439 - C27438) * C50365 +
            (C27440 - C27441 + C27442 - C27443) * C10569 +
            (C27444 - C27445 + C27446 - C27447) * C50286) *
               C16809 +
           (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
            C28693 * C50286) *
               C50260) *
              C1711 +
          (((C27441 - C27440 + C27443 - C27442) * C10568 +
            (C27445 - C27444 + C27447 - C27446) * C50365 +
            (C29866 - C29867 + C29868 - C29869) * C10569 +
            (C29870 - C29871 + C29872 - C29873) * C50286) *
               C16809 +
           (C28694 * C10568 + C28695 * C50365 +
            (C28684 - C28685 + C28686 - C28687) * C10569 +
            (C28688 - C28689 + C28690 - C28691) * C50286) *
               C50260) *
              C1712 +
          (((C29867 - C29866 + C29869 - C29868) * C10568 +
            (C29871 - C29870 + C29873 - C29872) * C50365 +
            (C49173 * C5330 - C50336 * C5333 + C49166 * C5331 -
             C50065 * C5334) *
                C10569 +
            (C49173 * C5335 - C50336 * C5339 + C49166 * C5336 -
             C50065 * C5340) *
                C50286) *
               C16809 +
           ((C28685 - C28684 + C28687 - C28686) * C10568 +
            (C28689 - C28688 + C28691 - C28690) * C50365 +
            (C49173 * C6306 - C50336 * C6308 + C49166 * C6307 -
             C50065 * C6309) *
                C10569 +
            (C49173 * C6310 - C50336 * C6312 + C49166 * C6311 -
             C50065 * C6313) *
                C50286) *
               C50260) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C50398 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50399 +
           (((C27441 - C27440 + C27443 - C27442) * C10568 +
             (C27445 - C27444 + C27447 - C27446) * C50365 +
             (C29866 - C29867 + C29868 - C29869) * C10569 +
             (C29870 - C29871 + C29872 - C29873) * C50286) *
                C16809 +
            (C28694 * C10568 + C28695 * C50365 +
             (C28684 - C28685 + C28686 - C28687) * C10569 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C1960) *
              C50109 * C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
             C28155 * C50286) *
                C50260) *
               C50398 +
           (((C27449 - C27448 + C27451 - C27450) * C10568 +
             (C27453 - C27452 + C27455 - C27454) * C50365 +
             (C27456 - C27457 + C27458 - C27459) * C10569 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C16809 +
            (C28156 * C10568 + C28157 * C50365 +
             (C27464 - C27465 + C27466 - C27467) * C10569 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50399 +
           (((C27457 - C27456 + C27459 - C27458) * C10568 +
             (C27461 - C27460 + C27463 - C27462) * C50365 +
             (C49173 * C1715 - C50336 * C1719 + C49166 * C1716 -
              C50065 * C1720) *
                 C10569 +
             (C49173 * C1723 - C50336 * C1727 + C49166 * C1724 -
              C50065 * C1728) *
                 C50286) *
                C16809 +
            ((C27465 - C27464 + C27467 - C27466) * C10568 +
             (C27469 - C27468 + C27471 - C27470) * C50365 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C10569 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C50286) *
                C50260) *
               C1960) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C10568 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50365 +
             (C27448 - C27449 + C27450 - C27451) * C10569 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C16809 +
            ((C24390 - C24391 + C24392 - C24393) * C10568 +
             (C24394 - C24395 + C24396 - C24397) * C50365 + C28154 * C10569 +
             C28155 * C50286) *
                C50260) *
               C1544 +
           (((C27449 - C27448 + C27451 - C27450) * C10568 +
             (C27453 - C27452 + C27455 - C27454) * C50365 +
             (C27456 - C27457 + C27458 - C27459) * C10569 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C16809 +
            (C28156 * C10568 + C28157 * C50365 +
             (C27464 - C27465 + C27466 - C27467) * C10569 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C10568 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C50365 +
             (C27868 - C27869 + C27870 - C27871) * C10569 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C16809 +
            ((C24724 - C24725 + C24726 - C24727) * C10568 +
             (C24728 - C24729 + C24730 - C24731) * C50365 +
             (C27666 - C27667 + C27668 - C27669) * C10569 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C1544 +
           (((C27869 - C27868 + C27871 - C27870) * C10568 +
             (C27873 - C27872 + C27875 - C27874) * C50365 +
             (C49173 * C400 - C50336 * C414 + C49166 * C401 - C50065 * C415) *
                 C10569 +
             (C49173 * C418 - C50336 * C430 + C49166 * C419 - C50065 * C431) *
                 C50286) *
                C16809 +
            ((C27667 - C27666 + C27669 - C27668) * C10568 +
             (C27671 - C27670 + C27673 - C27672) * C50365 +
             (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
              C50065 * C1090) *
                 C10569 +
             (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
              C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C10568 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50365 +
             (C27432 - C27433 + C27434 - C27435) * C10569 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C16809 +
            ((C24366 - C24367 + C24368 - C24369) * C10568 +
             (C24370 - C24371 + C24372 - C24373) * C50365 + C28150 * C10569 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C10568 +
             (C27437 - C27436 + C27439 - C27438) * C50365 +
             (C27440 - C27441 + C27442 - C27443) * C10569 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C16809 +
            (C28152 * C10568 + C28153 * C50365 + C28692 * C10569 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C248 +
          ((((C24367 - C24366 + C24369 - C24368) * C10568 +
             (C24371 - C24370 + C24373 - C24372) * C50365 + C28152 * C10569 +
             C28153 * C50286) *
                C16809 +
            ((C24375 - C24374 + C24377 - C24376) * C10568 +
             (C24379 - C24378 + C24381 - C24380) * C50365 + C26033 * C10569 +
             C26034 * C50286) *
                C50260) *
               C1544 +
           ((C28150 * C10568 + C28151 * C50365 + C28694 * C10569 +
             C28695 * C50286) *
                C16809 +
            (C29346 * C10568 + C29347 * C50365 +
             (C25527 - C25528 + C25529 - C25530) * C10569 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50189) *
              C249 +
          (((C24422 * C10568 + C24423 * C50365 + C29346 * C10569 +
             C29347 * C50286) *
                C16809 +
            ((C24383 - C24382 + C24385 - C24384) * C10568 +
             (C24387 - C24386 + C24389 - C24388) * C50365 +
             (C26025 - C26026 + C26027 - C26028) * C10569 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C1544 +
           ((C26033 * C10568 + C26034 * C50365 +
             (C25528 - C25527 + C25530 - C25529) * C10569 +
             (C25532 - C25531 + C25534 - C25533) * C50286) *
                C16809 +
            ((C26026 - C26025 + C26028 - C26027) * C10568 +
             (C26030 - C26029 + C26032 - C26031) * C50365 +
             (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C10569 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C50351 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C50351 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50125 * C50351 +
           (((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C121 +
             (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C50222) *
                C16809 +
            ((C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
              C16813 * C262 - C16808 * C281) *
                 C121 +
             (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
              C16813 * C282 - C16808 * C292) *
                 C50222) *
                C50260) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C50351 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C50161) *
              C50394 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C50351 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50161) *
              C50395 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50125 * C50351 +
           (((C19884 - C19883) * C121 + (C19886 - C19885) * C50222) * C19531 +
            ((C19888 - C19887) * C121 + (C19890 - C19889) * C50222) * C19532 +
            ((C19892 - C19891) * C121 + (C19894 - C19893) * C50222) * C19533 +
            ((C19535 * C2312 - C50060 * C2317) * C121 +
             (C19535 * C2318 - C50060 * C2321) * C50222) *
                C19534) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50222) *
                 C16809 +
             ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
              (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                 C50260) *
                C50352 +
            (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
               C16813 * C396 - C16808 * C406) *
                  C121 +
              (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
               C16813 * C410 - C16808 * C426) *
                  C50222) *
                 C16809 +
             ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
              (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
              (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                 C16809 +
             ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
              (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                 C50260) *
                C50352 +
            (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
              (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                 C16809 +
             ((C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
               C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                  C121 +
              (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
               C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50222) *
                 C16809 +
             ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
              (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                 C50260) *
                C50352 +
            (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
               C16808 * C407 - C16813 * C397) *
                  C121 +
              (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
               C16808 * C427 - C16813 * C411) *
                  C50222) *
                 C16809 +
             ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
              (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
              (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                 C16809 +
             ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
              (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                 C50260) *
                C50352 +
            (((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C121 +
              (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C50222) *
                 C16809 +
             ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
               C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                  C121 +
              (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
               C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C121 +
              (C50060 * C143 - C19535 * C133) * C50222) *
                 C19531 +
             ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
             C19683 * C19533 + C19684 * C19534) *
                C50352 +
            (((C19535 * C394 - C50060 * C404) * C121 +
              (C19535 * C408 - C50060 * C424) * C50222) *
                 C19531 +
             ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
             ((C20127 - C20128) * C121 + (C20129 - C20130) * C50222) * C19533 +
             ((C20131 - C20132) * C121 + (C20133 - C20134) * C50222) * C19534) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
             ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
             ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
             ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
                C50352 +
            (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
             ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
             ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
             ((C50060 * C4019 - C19535 * C4017) * C121 +
              (C50060 * C4023 - C19535 * C4021) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C251 +
          (((((C19535 * C123 - C50060 * C130) * C121 +
              (C19535 * C134 - C50060 * C144) * C50222) *
                 C19531 +
             ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
             C19685 * C19533 + C19686 * C19534) *
                C50352 +
            (((C50060 * C405 - C19535 * C395) * C121 +
              (C50060 * C425 - C19535 * C409) * C50222) *
                 C19531 +
             ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
             ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
             ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
             ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
             ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
             ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
                C50352 +
            (((C20136 - C20135) * C121 + (C20138 - C20137) * C50222) * C19531 +
             ((C20140 - C20139) * C121 + (C20142 - C20141) * C50222) * C19532 +
             ((C20144 - C20143) * C121 + (C20146 - C20145) * C50222) * C19533 +
             ((C19535 * C4018 - C50060 * C4020) * C121 +
              (C19535 * C4022 - C50060 * C4024) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C248 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C249 +
           (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
              C16808 * C975 - C16813 * C971) *
                 C121 +
             (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
              C16808 * C983 - C16813 * C979) *
                 C50222) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C248 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C249 +
           (((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C121 +
             (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C50222) *
                C16809 +
            ((C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
              C16813 * C972 - C16808 * C976) *
                 C121 +
             (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
              C16813 * C980 - C16808 * C984) *
                 C50222) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
             C16808 * C265 - C16813 * C255) *
                C121 +
            (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
             C16808 * C285 - C16813 * C269) *
                C50222) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C121 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C50222) *
               C16809 +
           ((C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
             C16813 * C256 - C16808 * C266) *
                C121 +
            (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
             C16813 * C270 - C16808 * C286) *
                C50222) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C121 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C50222) *
               C16809 +
           ((C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
             C16808 * C279 - C16813 * C261) *
                C121 +
            (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
             C16808 * C291 - C16813 * C280) *
                C50222) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
             C16813 * C127 - C16808 * C139) *
                C121 +
            (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
             C16813 * C140 - C16808 * C148) *
                C50222) *
               C16809 +
           ((C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
             C16813 * C537 - C16808 * C538) *
                C121 +
            (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
             C16813 * C539 - C16808 * C540) *
                C50222) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C391 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
              C16813 * C777 - C16808 * C782) *
                 C121 +
             (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
              C16813 * C786 - C16808 * C792) *
                 C50222) *
                C50260) *
               C392 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C16806 * C1087 - C16811 * C1083 + C16807 * C1088 -
              C16812 * C1084 + C16808 * C1089 - C16813 * C1085) *
                 C121 +
             (C16806 * C1095 - C16811 * C1091 + C16807 * C1096 -
              C16812 * C1092 + C16808 * C1097 - C16813 * C1093) *
                 C50222) *
                C50260) *
               C393) *
              C50109 * C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C391 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
              C16808 * C783 - C16813 * C778) *
                 C121 +
             (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
              C16808 * C793 - C16813 * C787) *
                 C50222) *
                C50260) *
               C392 +
           (((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
              C16813 * C401 - C16808 * C415) *
                 C121 +
             (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
              C16813 * C419 - C16808 * C431) *
                 C50222) *
                C16809 +
            ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C121 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50222) *
                C50260) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C50060 * C263 - C19535 * C253) * C121 +
            (C50060 * C283 - C19535 * C267) * C50222) *
               C19532 +
           ((C50060 * C271 - C19535 * C257) * C121 +
            (C50060 * C287 - C19535 * C275) * C50222) *
               C19533 +
           ((C50060 * C973 - C19535 * C969) * C121 +
            (C50060 * C981 - C19535 * C977) * C50222) *
               C19534) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C121 +
            (C19535 * C134 - C50060 * C144) * C50222) *
               C19531 +
           ((C19535 * C254 - C50060 * C264) * C121 +
            (C19535 * C268 - C50060 * C284) * C50222) *
               C19532 +
           ((C19535 * C258 - C50060 * C272) * C121 +
            (C19535 * C276 - C50060 * C288) * C50222) *
               C19533 +
           ((C19535 * C970 - C50060 * C974) * C121 +
            (C19535 * C978 - C50060 * C982) * C50222) *
               C19534) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C121 +
            (C50060 * C145 - C19535 * C135) * C50222) *
               C19531 +
           ((C50060 * C265 - C19535 * C255) * C121 +
            (C50060 * C285 - C19535 * C269) * C50222) *
               C19532 +
           ((C50060 * C273 - C19535 * C259) * C121 +
            (C50060 * C289 - C19535 * C277) * C50222) *
               C19533 +
           ((C50060 * C975 - C19535 * C971) * C121 +
            (C50060 * C983 - C19535 * C979) * C50222) *
               C19534) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C121 +
            (C19535 * C136 - C50060 * C146) * C50222) *
               C19531 +
           ((C19535 * C256 - C50060 * C266) * C121 +
            (C19535 * C270 - C50060 * C286) * C50222) *
               C19532 +
           ((C19535 * C260 - C50060 * C274) * C121 +
            (C19535 * C278 - C50060 * C290) * C50222) *
               C19533 +
           ((C19535 * C972 - C50060 * C976) * C121 +
            (C19535 * C980 - C50060 * C984) * C50222) *
               C19534) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C248 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C249 +
           (C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C50060 * C3338 - C19535 * C3336) * C121 +
             (C50060 * C3342 - C19535 * C3340) * C50222) *
                C19534) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C248 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C249 +
           (C19685 * C19531 + C19686 * C19532 +
            ((C19664 - C19663) * C121 + (C19666 - C19665) * C50222) * C19533 +
            ((C19535 * C3337 - C50060 * C3339) * C121 +
             (C19535 * C3341 - C50060 * C3343) * C50222) *
                C19534) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C391 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C19535 * C775 - C50060 * C780) * C121 +
             (C19535 * C784 - C50060 * C790) * C50222) *
                C19532 +
            ((C19535 * C1430 - C50060 * C1434) * C121 +
             (C19535 * C1438 - C50060 * C1442) * C50222) *
                C19533 +
            ((C19535 * C3048 - C50060 * C3051) * C121 +
             (C19535 * C3053 - C50060 * C3057) * C50222) *
                C19534) *
               C392 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C50060 * C1087 - C19535 * C1083) * C121 +
             (C50060 * C1095 - C19535 * C1091) * C50222) *
                C19532 +
            ((C50060 * C2537 - C19535 * C2534) * C121 +
             (C50060 * C2543 - C19535 * C2539) * C50222) *
                C19533 +
            ((C50060 * C3509 - C19535 * C3507) * C121 +
             (C50060 * C3513 - C19535 * C3511) * C50222) *
                C19534) *
               C393) *
              C50109 * C251 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C391 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C50060 * C781 - C19535 * C776) * C121 +
             (C50060 * C791 - C19535 * C785) * C50222) *
                C19532 +
            ((C50060 * C1435 - C19535 * C1431) * C121 +
             (C50060 * C1443 - C19535 * C1439) * C50222) *
                C19533 +
            ((C50060 * C3052 - C19535 * C3049) * C121 +
             (C50060 * C3058 - C19535 * C3054) * C50222) *
                C19534) *
               C392 +
           (((C19535 * C399 - C50060 * C413) * C121 +
             (C19535 * C417 - C50060 * C429) * C50222) *
                C19531 +
            ((C19535 * C1084 - C50060 * C1088) * C121 +
             (C19535 * C1092 - C50060 * C1096) * C50222) *
                C19532 +
            ((C19535 * C2535 - C50060 * C2538) * C121 +
             (C19535 * C2540 - C50060 * C2544) * C50222) *
                C19533 +
            ((C19535 * C3508 - C50060 * C3510) * C121 +
             (C19535 * C3512 - C50060 * C3514) * C50222) *
                C19534) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50352 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C16811 * C775 - C16806 * C780 + C16812 * C776 - C16807 * C781 +
              C16813 * C777 - C16808 * C782) *
                 C121 +
             (C16811 * C784 - C16806 * C790 + C16812 * C785 - C16807 * C791 +
              C16813 * C786 - C16808 * C792) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50352 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C16806 * C781 - C16811 * C776 + C16807 * C782 - C16812 * C777 +
              C16808 * C783 - C16813 * C778) *
                 C121 +
             (C16806 * C791 - C16811 * C785 + C16807 * C792 - C16812 * C786 +
              C16808 * C793 - C16813 * C787) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50352 +
           (((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
              C16813 * C402 - C16808 * C420) *
                 C121 +
             (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
              C16813 * C421 - C16808 * C432) *
                 C50222) *
                C16809 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50352 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C19535 * C775 - C50060 * C780) * C121 +
             (C19535 * C784 - C50060 * C790) * C50222) *
                C19532 +
            ((C19535 * C1430 - C50060 * C1434) * C121 +
             (C19535 * C1438 - C50060 * C1442) * C50222) *
                C19533 +
            ((C19535 * C3048 - C50060 * C3051) * C121 +
             (C19535 * C3053 - C50060 * C3057) * C50222) *
                C19534) *
               C50189) *
              C50109 * C50394 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50352 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C50060 * C781 - C19535 * C776) * C121 +
             (C50060 * C791 - C19535 * C785) * C50222) *
                C19532 +
            ((C50060 * C1435 - C19535 * C1431) * C121 +
             (C50060 * C1443 - C19535 * C1439) * C50222) *
                C19533 +
            ((C50060 * C3052 - C19535 * C3049) * C121 +
             (C50060 * C3058 - C19535 * C3054) * C50222) *
                C19534) *
               C50189) *
              C50109 * C50395 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50352 +
           (((C19535 * C396 - C50060 * C406) * C121 +
             (C19535 * C410 - C50060 * C426) * C50222) *
                C19531 +
            ((C19535 * C777 - C50060 * C782) * C121 +
             (C19535 * C786 - C50060 * C792) * C50222) *
                C19532 +
            ((C19535 * C1432 - C50060 * C1436) * C121 +
             (C19535 * C1440 - C50060 * C1444) * C50222) *
                C19533 +
            ((C19535 * C3050 - C50060 * C3055) * C121 +
             (C19535 * C3056 - C50060 * C3059) * C50222) *
                C19534) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16806 * C263 - C16811 * C253 + C16807 * C264 - C16812 * C254 +
             C16808 * C265 - C16813 * C255) *
                C121 +
            (C16806 * C283 - C16811 * C267 + C16807 * C284 - C16812 * C268 +
             C16808 * C285 - C16813 * C269) *
                C50222) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C121 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C50222) *
               C16809 +
           ((C16811 * C254 - C16806 * C264 + C16812 * C255 - C16807 * C265 +
             C16813 * C256 - C16808 * C266) *
                C121 +
            (C16811 * C268 - C16806 * C284 + C16812 * C269 - C16807 * C285 +
             C16813 * C270 - C16808 * C286) *
                C50222) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C121 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C50222) *
               C16809 +
           ((C16806 * C265 - C16811 * C255 + C16807 * C266 - C16812 * C256 +
             C16808 * C279 - C16813 * C261) *
                C121 +
            (C16806 * C285 - C16811 * C269 + C16807 * C286 - C16812 * C270 +
             C16808 * C291 - C16813 * C280) *
                C50222) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
             C16813 * C127 - C16808 * C139) *
                C121 +
            (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
             C16813 * C140 - C16808 * C148) *
                C50222) *
               C16809 +
           ((C16811 * C256 - C16806 * C266 + C16812 * C261 - C16807 * C279 +
             C16813 * C537 - C16808 * C538) *
                C121 +
            (C16811 * C270 - C16806 * C286 + C16812 * C280 - C16807 * C291 +
             C16813 * C539 - C16808 * C540) *
                C50222) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C248 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C249 +
           (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C16806 * C973 - C16811 * C969 + C16807 * C974 - C16812 * C970 +
              C16808 * C975 - C16813 * C971) *
                 C121 +
             (C16806 * C981 - C16811 * C977 + C16807 * C982 - C16812 * C978 +
              C16808 * C983 - C16813 * C979) *
                 C50222) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C248 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C249 +
           (((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C121 +
             (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C50222) *
                C16809 +
            ((C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
              C16813 * C972 - C16808 * C976) *
                 C121 +
             (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
              C16813 * C980 - C16808 * C984) *
                 C50222) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C50060 * C263 - C19535 * C253) * C121 +
            (C50060 * C283 - C19535 * C267) * C50222) *
               C19532 +
           ((C50060 * C271 - C19535 * C257) * C121 +
            (C50060 * C287 - C19535 * C275) * C50222) *
               C19533 +
           ((C50060 * C973 - C19535 * C969) * C121 +
            (C50060 * C981 - C19535 * C977) * C50222) *
               C19534) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C121 +
            (C19535 * C134 - C50060 * C144) * C50222) *
               C19531 +
           ((C19535 * C254 - C50060 * C264) * C121 +
            (C19535 * C268 - C50060 * C284) * C50222) *
               C19532 +
           ((C19535 * C258 - C50060 * C272) * C121 +
            (C19535 * C276 - C50060 * C288) * C50222) *
               C19533 +
           ((C19535 * C970 - C50060 * C974) * C121 +
            (C19535 * C978 - C50060 * C982) * C50222) *
               C19534) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C121 +
            (C50060 * C145 - C19535 * C135) * C50222) *
               C19531 +
           ((C50060 * C265 - C19535 * C255) * C121 +
            (C50060 * C285 - C19535 * C269) * C50222) *
               C19532 +
           ((C50060 * C273 - C19535 * C259) * C121 +
            (C50060 * C289 - C19535 * C277) * C50222) *
               C19533 +
           ((C50060 * C975 - C19535 * C971) * C121 +
            (C50060 * C983 - C19535 * C979) * C50222) *
               C19534) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C121 +
            (C19535 * C136 - C50060 * C146) * C50222) *
               C19531 +
           ((C19535 * C256 - C50060 * C266) * C121 +
            (C19535 * C270 - C50060 * C286) * C50222) *
               C19532 +
           ((C19535 * C260 - C50060 * C274) * C121 +
            (C19535 * C278 - C50060 * C290) * C50222) *
               C19533 +
           ((C19535 * C972 - C50060 * C976) * C121 +
            (C19535 * C980 - C50060 * C984) * C50222) *
               C19534) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C248 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C249 +
           (C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C50060 * C3338 - C19535 * C3336) * C121 +
             (C50060 * C3342 - C19535 * C3340) * C50222) *
                C19534) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C248 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C249 +
           (C19685 * C19531 + C19686 * C19532 +
            ((C19664 - C19663) * C121 + (C19666 - C19665) * C50222) * C19533 +
            ((C19535 * C3337 - C50060 * C3339) * C121 +
             (C19535 * C3341 - C50060 * C3343) * C50222) *
                C19534) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C50396 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50397 +
           (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C50125 * C1199) *
              C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C50396 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50397 +
           (((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C121 +
             (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C50222) *
                C16809 +
            ((C16811 * C970 - C16806 * C974 + C16812 * C971 - C16807 * C975 +
              C16813 * C972 - C16808 * C976) *
                 C121 +
             (C16811 * C978 - C16806 * C982 + C16812 * C979 - C16807 * C983 +
              C16813 * C980 - C16808 * C984) *
                 C50222) *
                C50260) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C50396 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C50125 * C50397 +
           (C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C50125 * C1199) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C50396 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50397 +
           (C19685 * C19531 + C19686 * C19532 +
            ((C19664 - C19663) * C121 + (C19666 - C19665) * C50222) * C19533 +
            ((C19535 * C3337 - C50060 * C3339) * C121 +
             (C19535 * C3341 - C50060 * C3343) * C50222) *
                C19534) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50352 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C50396 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50352 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50189) *
              C50397 +
          ((((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C50352 +
           (((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C121 +
             (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C50222) *
                C16809 +
            ((C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
              C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                 C121 +
             (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
              C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                 C50222) *
                C50260) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50352 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C50396 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C50352 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50189) *
              C50397 +
          ((C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C50352 +
           (C20785 * C19531 + C20786 * C19532 +
            ((C20778 - C20777) * C121 + (C20780 - C20779) * C50222) * C19533 +
            ((C19535 * C20768 - C50060 * C20769) * C121 +
             (C19535 * C20770 - C50060 * C20771) * C50222) *
                C19534) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
            (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
               C50260) *
              C50125 * C964 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
               C16809 +
           ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
            (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
               C50260) *
              C50125 * C965 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
               C16809 +
           ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
            (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
               C50260) *
              C50125 * C966 +
          (((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C121 +
            (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C50222) *
               C16809 +
           ((C16811 * C2310 - C16806 * C2313 + C16812 * C2311 - C16807 * C2314 +
             C16813 * C2312 - C16808 * C2317) *
                C121 +
            (C16811 * C2315 - C16806 * C2319 + C16812 * C2316 - C16807 * C2320 +
             C16813 * C2318 - C16808 * C2321) *
                C50222) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C121 +
             (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C50222) *
                C16809 +
            ((C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
              C16813 * C262 - C16808 * C281) *
                 C121 +
             (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
              C16813 * C282 - C16808 * C292) *
                 C50222) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C391 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C392 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
                C50260) *
               C393) *
              C893 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C391 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
              C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                 C121 +
             (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
              C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                 C50222) *
                C50260) *
               C392 +
           (((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C121 +
             (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C50222) *
                C16809 +
            ((C16811 * C2534 - C16806 * C2537 + C16812 * C2535 -
              C16807 * C2538 + C16813 * C2536 - C16808 * C2541) *
                 C121 +
             (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 -
              C16807 * C2544 + C16813 * C2542 - C16808 * C2545) *
                 C50222) *
                C50260) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C893 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C893 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50125 * C893 +
           (((C19884 - C19883) * C121 + (C19886 - C19885) * C50222) * C19531 +
            ((C19888 - C19887) * C121 + (C19890 - C19889) * C50222) * C19532 +
            ((C19892 - C19891) * C121 + (C19894 - C19893) * C50222) * C19533 +
            ((C19535 * C2312 - C50060 * C2317) * C121 +
             (C19535 * C2318 - C50060 * C2321) * C50222) *
                C19534) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
           C19683 * C19533 + C19684 * C19534) *
              C50125 * C964 +
          (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
           ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
           C20327 * C19533 + C20328 * C19534) *
              C50125 * C965 +
          (C19683 * C19531 + C19684 * C19532 +
           ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
           ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
              C50125 * C966 +
          (C20327 * C19531 + C20328 * C19532 +
           ((C20320 - C20319) * C121 + (C20322 - C20321) * C50222) * C19533 +
           ((C19535 * C20310 - C50060 * C20311) * C121 +
            (C19535 * C20312 - C50060 * C20313) * C50222) *
               C19534) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C391 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            ((C20127 - C20128) * C121 + (C20129 - C20130) * C50222) * C19533 +
            ((C20131 - C20132) * C121 + (C20133 - C20134) * C50222) * C19534) *
               C392 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
            ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
            ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
               C393) *
              C893 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C391 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C50060 * C4019 - C19535 * C4017) * C121 +
             (C50060 * C4023 - C19535 * C4021) * C50222) *
                C19534) *
               C392 +
           (((C20432 - C20431) * C121 + (C20434 - C20433) * C50222) * C19531 +
            ((C20436 - C20435) * C121 + (C20438 - C20437) * C50222) * C19532 +
            ((C20440 - C20439) * C121 + (C20442 - C20441) * C50222) * C19533 +
            ((C19535 * C20426 - C50060 * C20427) * C121 +
             (C19535 * C20428 - C50060 * C20429) * C50222) *
                C19534) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50222) *
                 C16809 +
             ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
              (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                 C50260) *
                C50352 +
            (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
               C16813 * C396 - C16808 * C406) *
                  C121 +
              (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
               C16813 * C410 - C16808 * C426) *
                  C50222) *
                 C16809 +
             ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
              (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                 C50260) *
                C50189) *
               C893 +
           ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
              (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                 C16809 +
             ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
              (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                 C50260) *
                C50352 +
            (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
              (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                 C16809 +
             ((C16806 * C1434 - C16811 * C1430 + C16807 * C1435 -
               C16812 * C1431 + C16808 * C1436 - C16813 * C1432) *
                  C121 +
              (C16806 * C1442 - C16811 * C1438 + C16807 * C1443 -
               C16812 * C1439 + C16808 * C1444 - C16813 * C1440) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50222) *
                 C16809 +
             ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
              (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                 C50260) *
                C50352 +
            (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
               C16808 * C407 - C16813 * C397) *
                  C121 +
              (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
               C16808 * C427 - C16813 * C411) *
                  C50222) *
                 C16809 +
             ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
              (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                 C50260) *
                C50189) *
               C893 +
           ((((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
              (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                 C16809 +
             ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
              (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                 C50260) *
                C50352 +
            (((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C121 +
              (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C50222) *
                 C16809 +
             ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
               C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                  C121 +
              (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
               C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C121 +
              (C50060 * C143 - C19535 * C133) * C50222) *
                 C19531 +
             ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
             C19683 * C19533 + C19684 * C19534) *
                C50352 +
            (((C19535 * C394 - C50060 * C404) * C121 +
              (C19535 * C408 - C50060 * C424) * C50222) *
                 C19531 +
             ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
             ((C20127 - C20128) * C121 + (C20129 - C20130) * C50222) * C19533 +
             ((C20131 - C20132) * C121 + (C20133 - C20134) * C50222) * C19534) *
                C50189) *
               C893 +
           ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
             ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
             C20327 * C19533 + C20328 * C19534) *
                C50352 +
            (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
             ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
             ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
             ((C50060 * C4019 - C19535 * C4017) * C121 +
              (C50060 * C4023 - C19535 * C4021) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C121 +
              (C19535 * C134 - C50060 * C144) * C50222) *
                 C19531 +
             ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
             C19685 * C19533 + C19686 * C19534) *
                C50352 +
            (((C50060 * C405 - C19535 * C395) * C121 +
              (C50060 * C425 - C19535 * C409) * C50222) *
                 C19531 +
             ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
             ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
             ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
                C50189) *
               C893 +
           ((((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
             ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
             ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
             ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
                C50352 +
            (((C20136 - C20135) * C121 + (C20138 - C20137) * C50222) * C19531 +
             ((C20140 - C20139) * C121 + (C20142 - C20141) * C50222) * C19532 +
             ((C20144 - C20143) * C121 + (C20146 - C20145) * C50222) * C19533 +
             ((C19535 * C4018 - C50060 * C4020) * C121 +
              (C19535 * C4022 - C50060 * C4024) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                C16809 +
            ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
             (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C50125 * C893 +
           (((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C121 +
             (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C50222) *
                C16809 +
            ((C16811 * C259 - C16806 * C273 + C16812 * C260 - C16807 * C274 +
              C16813 * C262 - C16808 * C281) *
                 C121 +
             (C16811 * C277 - C16806 * C289 + C16812 * C278 - C16807 * C290 +
              C16813 * C282 - C16808 * C292) *
                 C50222) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
            (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
               C50260) *
              C50125 * C964 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
               C16809 +
           ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
            (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
               C50260) *
              C50125 * C965 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
               C16809 +
           ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
            (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
               C50260) *
              C50125 * C966 +
          (((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C121 +
            (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C50222) *
               C16809 +
           ((C16811 * C2310 - C16806 * C2313 + C16812 * C2311 - C16807 * C2314 +
             C16813 * C2312 - C16808 * C2317) *
                C121 +
            (C16811 * C2315 - C16806 * C2319 + C16812 * C2316 - C16807 * C2320 +
             C16813 * C2318 - C16808 * C2321) *
                C50222) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50125 * C893 +
           (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            ((C19644 - C19643) * C121 + (C19646 - C19645) * C50222) * C19533 +
            ((C19647 - C19648) * C121 + (C19649 - C19650) * C50222) * C19534) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50125 * C893 +
           (((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
            ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
            ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
            ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C50125 * C893 +
           (((C19884 - C19883) * C121 + (C19886 - C19885) * C50222) * C19531 +
            ((C19888 - C19887) * C121 + (C19890 - C19889) * C50222) * C19532 +
            ((C19892 - C19891) * C121 + (C19894 - C19893) * C50222) * C19533 +
            ((C19535 * C2312 - C50060 * C2317) * C121 +
             (C19535 * C2318 - C50060 * C2321) * C50222) *
                C19534) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
           C19683 * C19533 + C19684 * C19534) *
              C50125 * C964 +
          (((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
           ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
           C20327 * C19533 + C20328 * C19534) *
              C50125 * C965 +
          (C19683 * C19531 + C19684 * C19532 +
           ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
           ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
              C50125 * C966 +
          (C20327 * C19531 + C20328 * C19532 +
           ((C20320 - C20319) * C121 + (C20322 - C20321) * C50222) * C19533 +
           ((C19535 * C20310 - C50060 * C20311) * C121 +
            (C19535 * C20312 - C50060 * C20313) * C50222) *
               C19534) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
               C16808 * C131 - C16813 * C124) *
                  C121 +
              (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
               C16808 * C145 - C16813 * C135) *
                  C50222) *
                 C16809 +
             ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
              (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                 C50260) *
                C1544 +
            (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
               C16813 * C396 - C16808 * C406) *
                  C121 +
              (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
               C16813 * C410 - C16808 * C426) *
                  C50222) *
                 C16809 +
             ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
              (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
              (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                 C16809 +
             ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
              (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                 C50260) *
                C1544 +
            (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
              (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                 C16809 +
             ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
              (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
               C16813 * C125 - C16808 * C132) *
                  C121 +
              (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
               C16813 * C136 - C16808 * C146) *
                  C50222) *
                 C16809 +
             ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
              (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                 C50260) *
                C1544 +
            (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
               C16808 * C407 - C16813 * C397) *
                  C121 +
              (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
               C16808 * C427 - C16813 * C411) *
                  C50222) *
                 C16809 +
             ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
              (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C121 +
              (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C50222) *
                 C16809 +
             ((C16997 - C16998 + C16999 - C17000 + C17001 - C17002) * C121 +
              (C17003 - C17004 + C17005 - C17006 + C17007 - C17008) * C50222) *
                 C50260) *
                C1544 +
            (((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C121 +
              (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C50222) *
                 C16809 +
             ((C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
               C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                  C121 +
              (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
               C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                  C50222) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C121 +
              (C50060 * C143 - C19535 * C133) * C50222) *
                 C19531 +
             ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
             C19683 * C19533 + C19684 * C19534) *
                C1544 +
            (((C19535 * C394 - C50060 * C404) * C121 +
              (C19535 * C408 - C50060 * C424) * C50222) *
                 C19531 +
             ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
             C20785 * C19533 + C20786 * C19534) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
             ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
             C20327 * C19533 + C20328 * C19534) *
                C1544 +
            (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
             ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
             ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
             ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C121 +
              (C19535 * C134 - C50060 * C144) * C50222) *
                 C19531 +
             ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
             C19685 * C19533 + C19686 * C19534) *
                C1544 +
            (((C50060 * C405 - C19535 * C395) * C121 +
              (C50060 * C425 - C19535 * C409) * C50222) *
                 C19531 +
             ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
             ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
             ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C121 + (C19654 - C19653) * C50222) * C19531 +
             ((C19656 - C19655) * C121 + (C19658 - C19657) * C50222) * C19532 +
             ((C19660 - C19659) * C121 + (C19662 - C19661) * C50222) * C19533 +
             ((C19663 - C19664) * C121 + (C19665 - C19666) * C50222) * C19534) *
                C1544 +
            (((C20136 - C20135) * C121 + (C20138 - C20137) * C50222) * C19531 +
             ((C20140 - C20139) * C121 + (C20142 - C20141) * C50222) * C19532 +
             ((C20144 - C20143) * C121 + (C20146 - C20145) * C50222) * C19533 +
             ((C19535 * C4018 - C50060 * C4020) * C121 +
              (C19535 * C4022 - C50060 * C4024) * C50222) *
                 C19534) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50398 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50399 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
                C50260) *
               C1960) *
              C50351 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C50398 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50399 +
           (((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C121 +
             (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C50222) *
                C16809 +
            ((C16811 * C2534 - C16806 * C2537 + C16812 * C2535 -
              C16807 * C2538 + C16813 * C2536 - C16808 * C2541) *
                 C121 +
             (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 -
              C16807 * C2544 + C16813 * C2542 - C16808 * C2545) *
                 C50222) *
                C50260) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50398 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50399 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
            ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
            ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
               C1960) *
              C50351 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C50398 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50399 +
           (((C20432 - C20431) * C121 + (C20434 - C20433) * C50222) * C19531 +
            ((C20436 - C20435) * C121 + (C20438 - C20437) * C50222) * C19532 +
            ((C20440 - C20439) * C121 + (C20442 - C20441) * C50222) * C19533 +
            ((C19535 * C20426 - C50060 * C20427) * C121 +
             (C19535 * C20428 - C50060 * C20429) * C50222) *
                C19534) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C248 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C1544 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50189) *
              C249 +
          ((((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C1544 +
           (((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C121 +
             (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C50222) *
                C16809 +
            ((C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
              C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                 C121 +
             (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
              C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                 C50222) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C1544 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
              C16813 * C402 - C16808 * C420) *
                 C121 +
             (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
              C16813 * C421 - C16808 * C432) *
                 C50222) *
                C16809 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C121 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C50222) *
               C16809 +
           ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
            (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
               C50260) *
              C1710 +
          (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
             C16813 * C396 - C16808 * C406) *
                C121 +
            (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
             C16813 * C410 - C16808 * C426) *
                C50222) *
               C16809 +
           ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
               C50260) *
              C1711 +
          (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
             C16808 * C414 - C16813 * C400) *
                C121 +
            (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
             C16808 * C430 - C16813 * C418) *
                C50222) *
               C16809 +
           ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
               C50260) *
              C1712 +
          (((C16811 * C1714 - C16806 * C1718 + C16812 * C1715 - C16807 * C1719 +
             C16813 * C1716 - C16808 * C1720) *
                C121 +
            (C16811 * C1722 - C16806 * C1726 + C16812 * C1723 - C16807 * C1727 +
             C16813 * C1724 - C16808 * C1728) *
                C50222) *
               C16809 +
           ((C16811 * C4432 - C16806 * C4436 + C16812 * C4433 - C16807 * C4437 +
             C16813 * C5904 - C16808 * C5905) *
                C121 +
            (C16811 * C4438 - C16806 * C4444 + C16812 * C4439 - C16807 * C4445 +
             C16813 * C5906 - C16808 * C5907) *
                C50222) *
               C50260) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C1544 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
            ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
            ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C1544 +
           (((C19535 * C396 - C50060 * C406) * C121 +
             (C19535 * C410 - C50060 * C426) * C50222) *
                C19531 +
            ((C19535 * C777 - C50060 * C782) * C121 +
             (C19535 * C786 - C50060 * C792) * C50222) *
                C19532 +
            ((C19535 * C1432 - C50060 * C1436) * C121 +
             (C19535 * C1440 - C50060 * C1444) * C50222) *
                C19533 +
            ((C19535 * C3050 - C50060 * C3055) * C121 +
             (C19535 * C3056 - C50060 * C3059) * C50222) *
                C19534) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C1544 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50189) *
              C249 +
          ((C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C1544 +
           (C20785 * C19531 + C20786 * C19532 +
            ((C20778 - C20777) * C121 + (C20780 - C20779) * C50222) * C19533 +
            ((C19535 * C20768 - C50060 * C20769) * C121 +
             (C19535 * C20770 - C50060 * C20771) * C50222) *
                C19534) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C121 +
            (C50060 * C143 - C19535 * C133) * C50222) *
               C19531 +
           ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
           C19683 * C19533 + C19684 * C19534) *
              C1710 +
          (((C19535 * C394 - C50060 * C404) * C121 +
            (C19535 * C408 - C50060 * C424) * C50222) *
               C19531 +
           ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
           C20785 * C19533 + C20786 * C19534) *
              C1711 +
          (((C50060 * C412 - C19535 * C398) * C121 +
            (C50060 * C428 - C19535 * C416) * C50222) *
               C19531 +
           ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
           ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
           ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
              C1712 +
          (((C19535 * C1714 - C50060 * C1718) * C121 +
            (C19535 * C1722 - C50060 * C1726) * C50222) *
               C19531 +
           ((C19535 * C4432 - C50060 * C4436) * C121 +
            (C19535 * C4438 - C50060 * C4444) * C50222) *
               C19532 +
           ((C19535 * C4434 - C50060 * C4440) * C121 +
            (C19535 * C4442 - C50060 * C4446) * C50222) *
               C19533 +
           ((C19535 * C21048 - C50060 * C21049) * C121 +
            (C19535 * C21050 - C50060 * C21051) * C50222) *
               C19534) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C50398 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50399 +
           (((C16806 * C412 - C16811 * C398 + C16807 * C413 - C16812 * C399 +
              C16808 * C414 - C16813 * C400) *
                 C121 +
             (C16806 * C428 - C16811 * C416 + C16807 * C429 - C16812 * C417 +
              C16808 * C430 - C16813 * C418) *
                 C50222) *
                C16809 +
            ((C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C121 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50222) *
                C50260) *
               C1960) *
              C50109 * C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C50398 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                C50260) *
               C50399 +
           (((C16811 * C399 - C16806 * C413 + C16812 * C400 - C16807 * C414 +
              C16813 * C401 - C16808 * C415) *
                 C121 +
             (C16811 * C417 - C16806 * C429 + C16812 * C418 - C16807 * C430 +
              C16813 * C419 - C16808 * C431) *
                 C50222) *
                C16809 +
            ((C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C121 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50222) *
                C50260) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C50398 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50399 +
           (((C50060 * C412 - C19535 * C398) * C121 +
             (C50060 * C428 - C19535 * C416) * C50222) *
                C19531 +
            ((C20431 - C20432) * C121 + (C20433 - C20434) * C50222) * C19532 +
            ((C20435 - C20436) * C121 + (C20437 - C20438) * C50222) * C19533 +
            ((C20439 - C20440) * C121 + (C20441 - C20442) * C50222) * C19534) *
               C1960) *
              C50109 * C50343 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C50398 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
            ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
            ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
               C50399 +
           (((C19535 * C399 - C50060 * C413) * C121 +
             (C19535 * C417 - C50060 * C429) * C50222) *
                C19531 +
            ((C19535 * C1084 - C50060 * C1088) * C121 +
             (C19535 * C1092 - C50060 * C1096) * C50222) *
                C19532 +
            ((C19535 * C2535 - C50060 * C2538) * C121 +
             (C19535 * C2540 - C50060 * C2544) * C50222) *
                C19533 +
            ((C19535 * C3508 - C50060 * C3510) * C121 +
             (C19535 * C3512 - C50060 * C3514) * C50222) *
                C19534) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C121 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C50222) *
                C16809 +
            ((C16985 - C16986 + C16987 - C16988 + C16989 - C16990) * C121 +
             (C16991 - C16992 + C16993 - C16994 + C16995 - C16996) * C50222) *
                C50260) *
               C1544 +
           (((C16806 * C405 - C16811 * C395 + C16807 * C406 - C16812 * C396 +
              C16808 * C407 - C16813 * C397) *
                 C121 +
             (C16806 * C425 - C16811 * C409 + C16807 * C426 - C16812 * C410 +
              C16808 * C427 - C16813 * C411) *
                 C50222) *
                C16809 +
            ((C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C121 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50222) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
              C16808 * C137 - C16813 * C126) *
                 C121 +
             (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
              C16808 * C147 - C16813 * C138) *
                 C50222) *
                C16809 +
            ((C17301 - C17302 + C17303 - C17304 + C17305 - C17306) * C121 +
             (C17307 - C17308 + C17309 - C17310 + C17311 - C17312) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C396 - C16806 * C406 + C16812 * C397 - C16807 * C407 +
              C16813 * C402 - C16808 * C420) *
                 C121 +
             (C16811 * C410 - C16806 * C426 + C16812 * C411 - C16807 * C427 +
              C16813 * C421 - C16808 * C432) *
                 C50222) *
                C16809 +
            ((C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
              C16813 * C779 - C16808 * C788) *
                 C121 +
             (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
              C16813 * C789 - C16808 * C794) *
                 C50222) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C121 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C50222) *
                C16809 +
            ((C16961 - C16962 + C16963 - C16964 + C16965 - C16966) * C121 +
             (C16967 - C16968 + C16969 - C16970 + C16971 - C16972) * C50222) *
                C50260) *
               C1544 +
           (((C16811 * C394 - C16806 * C404 + C16812 * C395 - C16807 * C405 +
              C16813 * C396 - C16808 * C406) *
                 C121 +
             (C16811 * C408 - C16806 * C424 + C16812 * C409 - C16807 * C425 +
              C16813 * C410 - C16808 * C426) *
                 C50222) *
                C16809 +
            ((C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C121 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50222) *
                C50260) *
               C50189) *
              C248 +
          ((((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C121 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C50222) *
                C16809 +
            ((C16973 - C16974 + C16975 - C16976 + C16977 - C16978) * C121 +
             (C16979 - C16980 + C16981 - C16982 + C16983 - C16984) * C50222) *
                C50260) *
               C1544 +
           (((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C121 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C50222) *
                C16809 +
            ((C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C121 +
             (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50222) *
                C50260) *
               C50189) *
              C249 +
          ((((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C121 +
             (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C50222) *
                C16809 +
            ((C17921 - C17922 + C17923 - C17924 + C17925 - C17926) * C121 +
             (C17927 - C17928 + C17929 - C17930 + C17931 - C17932) * C50222) *
                C50260) *
               C1544 +
           (((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C121 +
             (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C50222) *
                C16809 +
            ((C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
              C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                 C121 +
             (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
              C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                 C50222) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C121 +
             (C19535 * C134 - C50060 * C144) * C50222) *
                C19531 +
            ((C19651 - C19652) * C121 + (C19653 - C19654) * C50222) * C19532 +
            C19685 * C19533 + C19686 * C19534) *
               C1544 +
           (((C50060 * C405 - C19535 * C395) * C121 +
             (C50060 * C425 - C19535 * C409) * C50222) *
                C19531 +
            ((C20135 - C20136) * C121 + (C20137 - C20138) * C50222) * C19532 +
            ((C20139 - C20140) * C121 + (C20141 - C20142) * C50222) * C19533 +
            ((C20143 - C20144) * C121 + (C20145 - C20146) * C50222) * C19534) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C121 +
             (C50060 * C145 - C19535 * C135) * C50222) *
                C19531 +
            ((C19883 - C19884) * C121 + (C19885 - C19886) * C50222) * C19532 +
            ((C19887 - C19888) * C121 + (C19889 - C19890) * C50222) * C19533 +
            ((C19891 - C19892) * C121 + (C19893 - C19894) * C50222) * C19534) *
               C1544 +
           (((C19535 * C396 - C50060 * C406) * C121 +
             (C19535 * C410 - C50060 * C426) * C50222) *
                C19531 +
            ((C19535 * C777 - C50060 * C782) * C121 +
             (C19535 * C786 - C50060 * C792) * C50222) *
                C19532 +
            ((C19535 * C1432 - C50060 * C1436) * C121 +
             (C19535 * C1440 - C50060 * C1444) * C50222) *
                C19533 +
            ((C19535 * C3050 - C50060 * C3055) * C121 +
             (C19535 * C3056 - C50060 * C3059) * C50222) *
                C19534) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C121 +
             (C50060 * C143 - C19535 * C133) * C50222) *
                C19531 +
            ((C19635 - C19636) * C121 + (C19637 - C19638) * C50222) * C19532 +
            C19683 * C19533 + C19684 * C19534) *
               C1544 +
           (((C19535 * C394 - C50060 * C404) * C121 +
             (C19535 * C408 - C50060 * C424) * C50222) *
                C19531 +
            ((C20123 - C20124) * C121 + (C20125 - C20126) * C50222) * C19532 +
            C20785 * C19533 + C20786 * C19534) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C121 + (C19638 - C19637) * C50222) * C19531 +
            ((C19640 - C19639) * C121 + (C19642 - C19641) * C50222) * C19532 +
            C20327 * C19533 + C20328 * C19534) *
               C1544 +
           (((C20124 - C20123) * C121 + (C20126 - C20125) * C50222) * C19531 +
            ((C20128 - C20127) * C121 + (C20130 - C20129) * C50222) * C19532 +
            ((C20132 - C20131) * C121 + (C20134 - C20133) * C50222) * C19533 +
            ((C20777 - C20778) * C121 + (C20779 - C20780) * C50222) * C19534) *
               C50189) *
              C249 +
          ((C19683 * C19531 + C19684 * C19532 +
            ((C19648 - C19647) * C121 + (C19650 - C19649) * C50222) * C19533 +
            ((C20319 - C20320) * C121 + (C20321 - C20322) * C50222) * C19534) *
               C1544 +
           (C20785 * C19531 + C20786 * C19532 +
            ((C20778 - C20777) * C121 + (C20780 - C20779) * C50222) * C19533 +
            ((C19535 * C20768 - C50060 * C20769) * C121 +
             (C19535 * C20770 - C50060 * C20771) * C50222) *
                C19534) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50161) *
              C50394 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C24391 - C24390 + C24393 - C24392) * C33285 +
             (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
             C28157 * C50286) *
                C50364 +
            ((C24399 - C24398 + C24401 - C24400) * C33285 +
             (C24403 - C24402 + C24405 - C24404) * C33283 +
             (C25104 - C25105 + C25106 - C25107) * C33286 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50161) *
              C50395 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C33285 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C33283 +
             (C27868 - C27869 + C27870 - C27871) * C33286 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C50364 +
            ((C24724 - C24725 + C24726 - C24727) * C33285 +
             (C24728 - C24729 + C24730 - C24731) * C33283 +
             (C27666 - C27667 + C27668 - C27669) * C33286 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50125 * C50351 +
           (((C24725 - C24724 + C24727 - C24726) * C33285 +
             (C24729 - C24728 + C24731 - C24730) * C33283 +
             (C27667 - C27666 + C27669 - C27668) * C33286 +
             (C27671 - C27670 + C27673 - C27672) * C50286) *
                C50364 +
            ((C24733 - C24732 + C24735 - C24734) * C33285 +
             (C24737 - C24736 + C24739 - C24738) * C33283 +
             (C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C33286 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C33285 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C33283 +
              (C27432 - C27433 + C27434 - C27435) * C33286 +
              (C27436 - C27437 + C27438 - C27439) * C50286) *
                 C50364 +
             ((C24366 - C24367 + C24368 - C24369) * C33285 +
              (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
              C28151 * C50286) *
                 C50260) *
                C50352 +
            (((C27433 - C27432 + C27435 - C27434) * C33285 +
              (C27437 - C27436 + C27439 - C27438) * C33283 +
              (C27440 - C27441 + C27442 - C27443) * C33286 +
              (C27444 - C27445 + C27446 - C27447) * C50286) *
                 C50364 +
             (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
              C28693 * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24367 - C24366 + C24369 - C24368) * C33285 +
              (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
              C28153 * C50286) *
                 C50364 +
             ((C24375 - C24374 + C24377 - C24376) * C33285 +
              (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
              C26034 * C50286) *
                 C50260) *
                C50352 +
            ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
              C28695 * C50286) *
                 C50364 +
             (C29346 * C33285 + C29347 * C33283 +
              (C25527 - C25528 + C25529 - C25530) * C33286 +
              (C25531 - C25532 + C25533 - C25534) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C33285 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C33283 +
              (C27448 - C27449 + C27450 - C27451) * C33286 +
              (C27452 - C27453 + C27454 - C27455) * C50286) *
                 C50364 +
             ((C24390 - C24391 + C24392 - C24393) * C33285 +
              (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
              C28155 * C50286) *
                 C50260) *
                C50352 +
            (((C27449 - C27448 + C27451 - C27450) * C33285 +
              (C27453 - C27452 + C27455 - C27454) * C33283 +
              (C27456 - C27457 + C27458 - C27459) * C33286 +
              (C27460 - C27461 + C27462 - C27463) * C50286) *
                 C50364 +
             (C28156 * C33285 + C28157 * C33283 +
              (C27464 - C27465 + C27466 - C27467) * C33286 +
              (C27468 - C27469 + C27470 - C27471) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24391 - C24390 + C24393 - C24392) * C33285 +
              (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
              C28157 * C50286) *
                 C50364 +
             ((C24399 - C24398 + C24401 - C24400) * C33285 +
              (C24403 - C24402 + C24405 - C24404) * C33283 +
              (C25104 - C25105 + C25106 - C25107) * C33286 +
              (C25108 - C25109 + C25110 - C25111) * C50286) *
                 C50260) *
                C50352 +
            ((C28154 * C33285 + C28155 * C33283 +
              (C27465 - C27464 + C27467 - C27466) * C33286 +
              (C27469 - C27468 + C27471 - C27470) * C50286) *
                 C50364 +
             ((C25105 - C25104 + C25107 - C25106) * C33285 +
              (C25109 - C25108 + C25111 - C25110) * C33283 +
              (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
               C50065 * C2541) *
                  C33286 +
              (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
               C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
             C29347 * C50286) *
                C50364 +
            ((C24383 - C24382 + C24385 - C24384) * C33285 +
             (C24387 - C24386 + C24389 - C24388) * C33283 +
             (C26025 - C26026 + C26027 - C26028) * C33286 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24391 - C24390 + C24393 - C24392) * C33285 +
             (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
             C28157 * C50286) *
                C50364 +
            ((C24399 - C24398 + C24401 - C24400) * C33285 +
             (C24403 - C24402 + C24405 - C24404) * C33283 +
             (C25104 - C25105 + C25106 - C25107) * C33286 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24424 * C33285 + C24425 * C33283 +
             (C25105 - C25104 + C25107 - C25106) * C33286 +
             (C25109 - C25108 + C25111 - C25110) * C50286) *
                C50364 +
            ((C24407 - C24406 + C24409 - C24408) * C33285 +
             (C24411 - C24410 + C24413 - C24412) * C33283 +
             (C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
              C50065 * C3055) *
                 C33286 +
             (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
              C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C33285 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C33283 +
            (C27432 - C27433 + C27434 - C27435) * C33286 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C50364 +
           ((C24366 - C24367 + C24368 - C24369) * C33285 +
            (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
            C28151 * C50286) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C33285 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C33283 +
            (C27448 - C27449 + C27450 - C27451) * C33286 +
            (C27452 - C27453 + C27454 - C27455) * C50286) *
               C50364 +
           ((C24390 - C24391 + C24392 - C24393) * C33285 +
            (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
            C28155 * C50286) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C33285 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C33283 +
            (C27868 - C27869 + C27870 - C27871) * C33286 +
            (C27872 - C27873 + C27874 - C27875) * C50286) *
               C50364 +
           ((C24724 - C24725 + C24726 - C24727) * C33285 +
            (C24728 - C24729 + C24730 - C24731) * C33283 +
            (C27666 - C27667 + C27668 - C27669) * C33286 +
            (C27670 - C27671 + C27672 - C27673) * C50286) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
                C33285 +
            (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
                C33283 +
            (C49173 * C397 - C50336 * C407 + C49166 * C402 - C50065 * C420) *
                C33286 +
            (C49173 * C411 - C50336 * C427 + C49166 * C421 - C50065 * C432) *
                C50286) *
               C50364 +
           ((C49173 * C256 - C50336 * C266 + C49166 * C261 - C50065 * C279) *
                C33285 +
            (C49173 * C270 - C50336 * C286 + C49166 * C280 - C50065 * C291) *
                C33283 +
            (C49173 * C778 - C50336 * C783 + C49166 * C779 - C50065 * C788) *
                C33286 +
            (C49173 * C787 - C50336 * C793 + C49166 * C789 - C50065 * C794) *
                C50286) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C391 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C392 +
           (((C27441 - C27440 + C27443 - C27442) * C33285 +
             (C27445 - C27444 + C27447 - C27446) * C33283 +
             (C29866 - C29867 + C29868 - C29869) * C33286 +
             (C29870 - C29871 + C29872 - C29873) * C50286) *
                C50364 +
            (C28694 * C33285 + C28695 * C33283 +
             (C28684 - C28685 + C28686 - C28687) * C33286 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C393) *
              C50109 * C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C391 +
           (((C27449 - C27448 + C27451 - C27450) * C33285 +
             (C27453 - C27452 + C27455 - C27454) * C33283 +
             (C27456 - C27457 + C27458 - C27459) * C33286 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C50364 +
            (C28156 * C33285 + C28157 * C33283 +
             (C27464 - C27465 + C27466 - C27467) * C33286 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C392 +
           (((C27457 - C27456 + C27459 - C27458) * C33285 +
             (C27461 - C27460 + C27463 - C27462) * C33283 +
             (C49173 * C1715 - C50336 * C1719 + C49166 * C1716 -
              C50065 * C1720) *
                 C33286 +
             (C49173 * C1723 - C50336 * C1727 + C49166 * C1724 -
              C50065 * C1728) *
                 C50286) *
                C50364 +
            ((C27465 - C27464 + C27467 - C27466) * C33285 +
             (C27469 - C27468 + C27471 - C27470) * C33283 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C33286 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C50286) *
                C50260) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50352 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50109 * C50394 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50352 +
           (((C27449 - C27448 + C27451 - C27450) * C33285 +
             (C27453 - C27452 + C27455 - C27454) * C33283 +
             (C27456 - C27457 + C27458 - C27459) * C33286 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C50364 +
            (C28156 * C33285 + C28157 * C33283 +
             (C27464 - C27465 + C27466 - C27467) * C33286 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50189) *
              C50109 * C50395 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C33285 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C33283 +
             (C27868 - C27869 + C27870 - C27871) * C33286 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C50364 +
            ((C24724 - C24725 + C24726 - C24727) * C33285 +
             (C24728 - C24729 + C24730 - C24731) * C33283 +
             (C27666 - C27667 + C27668 - C27669) * C33286 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50352 +
           (((C27869 - C27868 + C27871 - C27870) * C33285 +
             (C27873 - C27872 + C27875 - C27874) * C33283 +
             (C49173 * C400 - C50336 * C414 + C49166 * C401 - C50065 * C415) *
                 C33286 +
             (C49173 * C418 - C50336 * C430 + C49166 * C419 - C50065 * C431) *
                 C50286) *
                C50364 +
            ((C27667 - C27666 + C27669 - C27668) * C33285 +
             (C27671 - C27670 + C27673 - C27672) * C33283 +
             (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
              C50065 * C1090) *
                 C33286 +
             (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
              C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C33285 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C33283 +
            (C27432 - C27433 + C27434 - C27435) * C33286 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C50364 +
           ((C24366 - C24367 + C24368 - C24369) * C33285 +
            (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
            C28151 * C50286) *
               C50260) *
              C50125 * C50109 * C113 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C33285 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C33283 +
            (C27448 - C27449 + C27450 - C27451) * C33286 +
            (C27452 - C27453 + C27454 - C27455) * C50286) *
               C50364 +
           ((C24390 - C24391 + C24392 - C24393) * C33285 +
            (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
            C28155 * C50286) *
               C50260) *
              C50125 * C50109 * C114 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C33285 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C33283 +
            (C27868 - C27869 + C27870 - C27871) * C33286 +
            (C27872 - C27873 + C27874 - C27875) * C50286) *
               C50364 +
           ((C24724 - C24725 + C24726 - C24727) * C33285 +
            (C24728 - C24729 + C24730 - C24731) * C33283 +
            (C27666 - C27667 + C27668 - C27669) * C33286 +
            (C27670 - C27671 + C27672 - C27673) * C50286) *
               C50260) *
              C50125 * C50109 * C115 +
          (((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
                C33285 +
            (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
                C33283 +
            (C49173 * C397 - C50336 * C407 + C49166 * C402 - C50065 * C420) *
                C33286 +
            (C49173 * C411 - C50336 * C427 + C49166 * C421 - C50065 * C432) *
                C50286) *
               C50364 +
           ((C49173 * C256 - C50336 * C266 + C49166 * C261 - C50065 * C279) *
                C33285 +
            (C49173 * C270 - C50336 * C286 + C49166 * C280 - C50065 * C291) *
                C33283 +
            (C49173 * C778 - C50336 * C783 + C49166 * C779 - C50065 * C788) *
                C33286 +
            (C49173 * C787 - C50336 * C793 + C49166 * C789 - C50065 * C794) *
                C50286) *
               C50260) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
             C29347 * C50286) *
                C50364 +
            ((C24383 - C24382 + C24385 - C24384) * C33285 +
             (C24387 - C24386 + C24389 - C24388) * C33283 +
             (C26025 - C26026 + C26027 - C26028) * C33286 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50125 * C250) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50125 * C248 +
           (((C24391 - C24390 + C24393 - C24392) * C33285 +
             (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
             C28157 * C50286) *
                C50364 +
            ((C24399 - C24398 + C24401 - C24400) * C33285 +
             (C24403 - C24402 + C24405 - C24404) * C33283 +
             (C25104 - C25105 + C25106 - C25107) * C33286 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C249 +
           ((C24424 * C33285 + C24425 * C33283 +
             (C25105 - C25104 + C25107 - C25106) * C33286 +
             (C25109 - C25108 + C25111 - C25110) * C50286) *
                C50364 +
            ((C24407 - C24406 + C24409 - C24408) * C33285 +
             (C24411 - C24410 + C24413 - C24412) * C33283 +
             (C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
              C50065 * C3055) *
                 C33286 +
             (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
              C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50125 * C50396 +
           (((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50397 +
           ((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
             C29347 * C50286) *
                C50364 +
            ((C24383 - C24382 + C24385 - C24384) * C33285 +
             (C24387 - C24386 + C24389 - C24388) * C33283 +
             (C26025 - C26026 + C26027 - C26028) * C33286 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50125 * C1199) *
              C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50125 * C50396 +
           (((C24391 - C24390 + C24393 - C24392) * C33285 +
             (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
             C28157 * C50286) *
                C50364 +
            ((C24399 - C24398 + C24401 - C24400) * C33285 +
             (C24403 - C24402 + C24405 - C24404) * C33283 +
             (C25104 - C25105 + C25106 - C25107) * C33286 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50397 +
           ((C24424 * C33285 + C24425 * C33283 +
             (C25105 - C25104 + C25107 - C25106) * C33286 +
             (C25109 - C25108 + C25111 - C25110) * C50286) *
                C50364 +
            ((C24407 - C24406 + C24409 - C24408) * C33285 +
             (C24411 - C24410 + C24413 - C24412) * C33283 +
             (C49173 * C3049 - C50336 * C3052 + C49166 * C3050 -
              C50065 * C3055) *
                 C33286 +
             (C49173 * C3054 - C50336 * C3058 + C49166 * C3056 -
              C50065 * C3059) *
                 C50286) *
                C50260) *
               C50125 * C1199) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50352 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50396 +
          ((((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50352 +
           ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
             C28695 * C50286) *
                C50364 +
            (C29346 * C33285 + C29347 * C33283 +
             (C25527 - C25528 + C25529 - C25530) * C33286 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50189) *
              C50397 +
          (((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
             C29347 * C50286) *
                C50364 +
            ((C24383 - C24382 + C24385 - C24384) * C33285 +
             (C24387 - C24386 + C24389 - C24388) * C33283 +
             (C26025 - C26026 + C26027 - C26028) * C33286 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C50352 +
           ((C26033 * C33285 + C26034 * C33283 +
             (C25528 - C25527 + C25530 - C25529) * C33286 +
             (C25532 - C25531 + C25534 - C25533) * C50286) *
                C50364 +
            ((C26026 - C26025 + C26028 - C26027) * C33285 +
             (C26030 - C26029 + C26032 - C26031) * C33283 +
             (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C33286 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C1199) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C33285 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C33283 +
            (C27432 - C27433 + C27434 - C27435) * C33286 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C50364 +
           ((C24366 - C24367 + C24368 - C24369) * C33285 +
            (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
            C28151 * C50286) *
               C50260) *
              C50125 * C964 +
          (((C24367 - C24366 + C24369 - C24368) * C33285 +
            (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
            C28153 * C50286) *
               C50364 +
           ((C24375 - C24374 + C24377 - C24376) * C33285 +
            (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
            C26034 * C50286) *
               C50260) *
              C50125 * C965 +
          ((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
            C29347 * C50286) *
               C50364 +
           ((C24383 - C24382 + C24385 - C24384) * C33285 +
            (C24387 - C24386 + C24389 - C24388) * C33283 +
            (C26025 - C26026 + C26027 - C26028) * C33286 +
            (C26029 - C26030 + C26031 - C26032) * C50286) *
               C50260) *
              C50125 * C966 +
          ((C25368 * C33285 + C25369 * C33283 +
            (C26026 - C26025 + C26028 - C26027) * C33286 +
            (C26030 - C26029 + C26032 - C26031) * C50286) *
               C50364 +
           ((C25361 - C25360 + C25363 - C25362) * C33285 +
            (C25365 - C25364 + C25367 - C25366) * C33283 +
            (C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
             C50065 * C4020) *
                C33286 +
            (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
             C50065 * C4024) *
                C50286) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24391 - C24390 + C24393 - C24392) * C33285 +
             (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
             C28157 * C50286) *
                C50364 +
            ((C24399 - C24398 + C24401 - C24400) * C33285 +
             (C24403 - C24402 + C24405 - C24404) * C33283 +
             (C25104 - C25105 + C25106 - C25107) * C33286 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C33285 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C33283 +
             (C27868 - C27869 + C27870 - C27871) * C33286 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C50364 +
            ((C24724 - C24725 + C24726 - C24727) * C33285 +
             (C24728 - C24729 + C24730 - C24731) * C33283 +
             (C27666 - C27667 + C27668 - C27669) * C33286 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24725 - C24724 + C24727 - C24726) * C33285 +
             (C24729 - C24728 + C24731 - C24730) * C33283 +
             (C27667 - C27666 + C27669 - C27668) * C33286 +
             (C27671 - C27670 + C27673 - C27672) * C50286) *
                C50364 +
            ((C24733 - C24732 + C24735 - C24734) * C33285 +
             (C24737 - C24736 + C24739 - C24738) * C33283 +
             (C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C33286 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C391 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C392 +
           (((C27441 - C27440 + C27443 - C27442) * C33285 +
             (C27445 - C27444 + C27447 - C27446) * C33283 +
             (C29866 - C29867 + C29868 - C29869) * C33286 +
             (C29870 - C29871 + C29872 - C29873) * C50286) *
                C50364 +
            (C28694 * C33285 + C28695 * C33283 +
             (C28684 - C28685 + C28686 - C28687) * C33286 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C393) *
              C893 +
          ((((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C391 +
           ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
             C28695 * C50286) *
                C50364 +
            (C29346 * C33285 + C29347 * C33283 +
             (C25527 - C25528 + C25529 - C25530) * C33286 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C392 +
           ((C28692 * C33285 + C28693 * C33283 +
             (C28685 - C28684 + C28687 - C28686) * C33286 +
             (C28689 - C28688 + C28691 - C28690) * C50286) *
                C50364 +
            ((C25528 - C25527 + C25530 - C25529) * C33285 +
             (C25532 - C25531 + C25534 - C25533) * C33283 +
             (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
              C50065 * C4441) *
                 C33286 +
             (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
              C50065 * C4447) *
                 C50286) *
                C50260) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C33285 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C33283 +
              (C27432 - C27433 + C27434 - C27435) * C33286 +
              (C27436 - C27437 + C27438 - C27439) * C50286) *
                 C50364 +
             ((C24366 - C24367 + C24368 - C24369) * C33285 +
              (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
              C28151 * C50286) *
                 C50260) *
                C50352 +
            (((C27433 - C27432 + C27435 - C27434) * C33285 +
              (C27437 - C27436 + C27439 - C27438) * C33283 +
              (C27440 - C27441 + C27442 - C27443) * C33286 +
              (C27444 - C27445 + C27446 - C27447) * C50286) *
                 C50364 +
             (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
              C28693 * C50286) *
                 C50260) *
                C50189) *
               C893 +
           ((((C24367 - C24366 + C24369 - C24368) * C33285 +
              (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
              C28153 * C50286) *
                 C50364 +
             ((C24375 - C24374 + C24377 - C24376) * C33285 +
              (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
              C26034 * C50286) *
                 C50260) *
                C50352 +
            ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
              C28695 * C50286) *
                 C50364 +
             (C29346 * C33285 + C29347 * C33283 +
              (C25527 - C25528 + C25529 - C25530) * C33286 +
              (C25531 - C25532 + C25533 - C25534) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C33285 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C33283 +
              (C27448 - C27449 + C27450 - C27451) * C33286 +
              (C27452 - C27453 + C27454 - C27455) * C50286) *
                 C50364 +
             ((C24390 - C24391 + C24392 - C24393) * C33285 +
              (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
              C28155 * C50286) *
                 C50260) *
                C50352 +
            (((C27449 - C27448 + C27451 - C27450) * C33285 +
              (C27453 - C27452 + C27455 - C27454) * C33283 +
              (C27456 - C27457 + C27458 - C27459) * C33286 +
              (C27460 - C27461 + C27462 - C27463) * C50286) *
                 C50364 +
             (C28156 * C33285 + C28157 * C33283 +
              (C27464 - C27465 + C27466 - C27467) * C33286 +
              (C27468 - C27469 + C27470 - C27471) * C50286) *
                 C50260) *
                C50189) *
               C893 +
           ((((C24391 - C24390 + C24393 - C24392) * C33285 +
              (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
              C28157 * C50286) *
                 C50364 +
             ((C24399 - C24398 + C24401 - C24400) * C33285 +
              (C24403 - C24402 + C24405 - C24404) * C33283 +
              (C25104 - C25105 + C25106 - C25107) * C33286 +
              (C25108 - C25109 + C25110 - C25111) * C50286) *
                 C50260) *
                C50352 +
            ((C28154 * C33285 + C28155 * C33283 +
              (C27465 - C27464 + C27467 - C27466) * C33286 +
              (C27469 - C27468 + C27471 - C27470) * C50286) *
                 C50364 +
             ((C25105 - C25104 + C25107 - C25106) * C33285 +
              (C25109 - C25108 + C25111 - C25110) * C33283 +
              (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
               C50065 * C2541) *
                  C33286 +
              (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
               C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50125 * C50161) *
              C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24391 - C24390 + C24393 - C24392) * C33285 +
             (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
             C28157 * C50286) *
                C50364 +
            ((C24399 - C24398 + C24401 - C24400) * C33285 +
             (C24403 - C24402 + C24405 - C24404) * C33283 +
             (C25104 - C25105 + C25106 - C25107) * C33286 +
             (C25108 - C25109 + C25110 - C25111) * C50286) *
                C50260) *
               C50125 * C50161) *
              C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C33285 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C33283 +
             (C27868 - C27869 + C27870 - C27871) * C33286 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C50364 +
            ((C24724 - C24725 + C24726 - C24727) * C33285 +
             (C24728 - C24729 + C24730 - C24731) * C33283 +
             (C27666 - C27667 + C27668 - C27669) * C33286 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C50125 * C893 +
           (((C24725 - C24724 + C24727 - C24726) * C33285 +
             (C24729 - C24728 + C24731 - C24730) * C33283 +
             (C27667 - C27666 + C27669 - C27668) * C33286 +
             (C27671 - C27670 + C27673 - C27672) * C50286) *
                C50364 +
            ((C24733 - C24732 + C24735 - C24734) * C33285 +
             (C24737 - C24736 + C24739 - C24738) * C33283 +
             (C49173 * C1432 - C50336 * C1436 + C49166 * C1433 -
              C50065 * C1437) *
                 C33286 +
             (C49173 * C1440 - C50336 * C1444 + C49166 * C1441 -
              C50065 * C1445) *
                 C50286) *
                C50260) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C33285 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C33283 +
            (C27432 - C27433 + C27434 - C27435) * C33286 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C50364 +
           ((C24366 - C24367 + C24368 - C24369) * C33285 +
            (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
            C28151 * C50286) *
               C50260) *
              C50125 * C964 +
          (((C24367 - C24366 + C24369 - C24368) * C33285 +
            (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
            C28153 * C50286) *
               C50364 +
           ((C24375 - C24374 + C24377 - C24376) * C33285 +
            (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
            C26034 * C50286) *
               C50260) *
              C50125 * C965 +
          ((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
            C29347 * C50286) *
               C50364 +
           ((C24383 - C24382 + C24385 - C24384) * C33285 +
            (C24387 - C24386 + C24389 - C24388) * C33283 +
            (C26025 - C26026 + C26027 - C26028) * C33286 +
            (C26029 - C26030 + C26031 - C26032) * C50286) *
               C50260) *
              C50125 * C966 +
          ((C25368 * C33285 + C25369 * C33283 +
            (C26026 - C26025 + C26028 - C26027) * C33286 +
            (C26030 - C26029 + C26032 - C26031) * C50286) *
               C50364 +
           ((C25361 - C25360 + C25363 - C25362) * C33285 +
            (C25365 - C25364 + C25367 - C25366) * C33283 +
            (C49173 * C4017 - C50336 * C4019 + C49166 * C4018 -
             C50065 * C4020) *
                C33286 +
            (C49173 * C4021 - C50336 * C4023 + C49166 * C4022 -
             C50065 * C4024) *
                C50286) *
               C50260) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                  C33285 +
              (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                  C33283 +
              (C27432 - C27433 + C27434 - C27435) * C33286 +
              (C27436 - C27437 + C27438 - C27439) * C50286) *
                 C50364 +
             ((C24366 - C24367 + C24368 - C24369) * C33285 +
              (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
              C28151 * C50286) *
                 C50260) *
                C1544 +
            (((C27433 - C27432 + C27435 - C27434) * C33285 +
              (C27437 - C27436 + C27439 - C27438) * C33283 +
              (C27440 - C27441 + C27442 - C27443) * C33286 +
              (C27444 - C27445 + C27446 - C27447) * C50286) *
                 C50364 +
             (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
              C28693 * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24367 - C24366 + C24369 - C24368) * C33285 +
              (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
              C28153 * C50286) *
                 C50364 +
             ((C24375 - C24374 + C24377 - C24376) * C33285 +
              (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
              C26034 * C50286) *
                 C50260) *
                C1544 +
            ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
              C28695 * C50286) *
                 C50364 +
             (C29346 * C33285 + C29347 * C33283 +
              (C25527 - C25528 + C25529 - C25530) * C33286 +
              (C25531 - C25532 + C25533 - C25534) * C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                  C33285 +
              (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                  C33283 +
              (C27448 - C27449 + C27450 - C27451) * C33286 +
              (C27452 - C27453 + C27454 - C27455) * C50286) *
                 C50364 +
             ((C24390 - C24391 + C24392 - C24393) * C33285 +
              (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
              C28155 * C50286) *
                 C50260) *
                C1544 +
            (((C27449 - C27448 + C27451 - C27450) * C33285 +
              (C27453 - C27452 + C27455 - C27454) * C33283 +
              (C27456 - C27457 + C27458 - C27459) * C33286 +
              (C27460 - C27461 + C27462 - C27463) * C50286) *
                 C50364 +
             (C28156 * C33285 + C28157 * C33283 +
              (C27464 - C27465 + C27466 - C27467) * C33286 +
              (C27468 - C27469 + C27470 - C27471) * C50286) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C24391 - C24390 + C24393 - C24392) * C33285 +
              (C24395 - C24394 + C24397 - C24396) * C33283 + C28156 * C33286 +
              C28157 * C50286) *
                 C50364 +
             ((C24399 - C24398 + C24401 - C24400) * C33285 +
              (C24403 - C24402 + C24405 - C24404) * C33283 +
              (C25104 - C25105 + C25106 - C25107) * C33286 +
              (C25108 - C25109 + C25110 - C25111) * C50286) *
                 C50260) *
                C1544 +
            ((C28154 * C33285 + C28155 * C33283 +
              (C27465 - C27464 + C27467 - C27466) * C33286 +
              (C27469 - C27468 + C27471 - C27470) * C50286) *
                 C50364 +
             ((C25105 - C25104 + C25107 - C25106) * C33285 +
              (C25109 - C25108 + C25111 - C25110) * C33283 +
              (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
               C50065 * C2541) *
                  C33286 +
              (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
               C50065 * C2545) *
                  C50286) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50398 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50399 +
           (((C27441 - C27440 + C27443 - C27442) * C33285 +
             (C27445 - C27444 + C27447 - C27446) * C33283 +
             (C29866 - C29867 + C29868 - C29869) * C33286 +
             (C29870 - C29871 + C29872 - C29873) * C50286) *
                C50364 +
            (C28694 * C33285 + C28695 * C33283 +
             (C28684 - C28685 + C28686 - C28687) * C33286 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C1960) *
              C50351 +
          ((((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C50398 +
           ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
             C28695 * C50286) *
                C50364 +
            (C29346 * C33285 + C29347 * C33283 +
             (C25527 - C25528 + C25529 - C25530) * C33286 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50399 +
           ((C28692 * C33285 + C28693 * C33283 +
             (C28685 - C28684 + C28687 - C28686) * C33286 +
             (C28689 - C28688 + C28691 - C28690) * C50286) *
                C50364 +
            ((C25528 - C25527 + C25530 - C25529) * C33285 +
             (C25532 - C25531 + C25534 - C25533) * C33283 +
             (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
              C50065 * C4441) *
                 C33286 +
             (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
              C50065 * C4447) *
                 C50286) *
                C50260) *
               C1960) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C248 +
          ((((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C1544 +
           ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
             C28695 * C50286) *
                C50364 +
            (C29346 * C33285 + C29347 * C33283 +
             (C25527 - C25528 + C25529 - C25530) * C33286 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50189) *
              C249 +
          (((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
             C29347 * C50286) *
                C50364 +
            ((C24383 - C24382 + C24385 - C24384) * C33285 +
             (C24387 - C24386 + C24389 - C24388) * C33283 +
             (C26025 - C26026 + C26027 - C26028) * C33286 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C1544 +
           ((C26033 * C33285 + C26034 * C33283 +
             (C25528 - C25527 + C25530 - C25529) * C33286 +
             (C25532 - C25531 + C25534 - C25533) * C50286) *
                C50364 +
            ((C26026 - C26025 + C26028 - C26027) * C33285 +
             (C26030 - C26029 + C26032 - C26031) * C33283 +
             (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C33286 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C1544 +
           (((C27449 - C27448 + C27451 - C27450) * C33285 +
             (C27453 - C27452 + C27455 - C27454) * C33283 +
             (C27456 - C27457 + C27458 - C27459) * C33286 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C50364 +
            (C28156 * C33285 + C28157 * C33283 +
             (C27464 - C27465 + C27466 - C27467) * C33286 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C33285 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C33283 +
             (C27868 - C27869 + C27870 - C27871) * C33286 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C50364 +
            ((C24724 - C24725 + C24726 - C24727) * C33285 +
             (C24728 - C24729 + C24730 - C24731) * C33283 +
             (C27666 - C27667 + C27668 - C27669) * C33286 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C1544 +
           (((C27869 - C27868 + C27871 - C27870) * C33285 +
             (C27873 - C27872 + C27875 - C27874) * C33283 +
             (C49173 * C400 - C50336 * C414 + C49166 * C401 - C50065 * C415) *
                 C33286 +
             (C49173 * C418 - C50336 * C430 + C49166 * C419 - C50065 * C431) *
                 C50286) *
                C50364 +
            ((C27667 - C27666 + C27669 - C27668) * C33285 +
             (C27671 - C27670 + C27673 - C27672) * C33283 +
             (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
              C50065 * C1090) *
                 C33286 +
             (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
              C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C33285 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C33283 +
            (C27432 - C27433 + C27434 - C27435) * C33286 +
            (C27436 - C27437 + C27438 - C27439) * C50286) *
               C50364 +
           ((C24366 - C24367 + C24368 - C24369) * C33285 +
            (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
            C28151 * C50286) *
               C50260) *
              C1710 +
          (((C27433 - C27432 + C27435 - C27434) * C33285 +
            (C27437 - C27436 + C27439 - C27438) * C33283 +
            (C27440 - C27441 + C27442 - C27443) * C33286 +
            (C27444 - C27445 + C27446 - C27447) * C50286) *
               C50364 +
           (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
            C28693 * C50286) *
               C50260) *
              C1711 +
          (((C27441 - C27440 + C27443 - C27442) * C33285 +
            (C27445 - C27444 + C27447 - C27446) * C33283 +
            (C29866 - C29867 + C29868 - C29869) * C33286 +
            (C29870 - C29871 + C29872 - C29873) * C50286) *
               C50364 +
           (C28694 * C33285 + C28695 * C33283 +
            (C28684 - C28685 + C28686 - C28687) * C33286 +
            (C28688 - C28689 + C28690 - C28691) * C50286) *
               C50260) *
              C1712 +
          (((C29867 - C29866 + C29869 - C29868) * C33285 +
            (C29871 - C29870 + C29873 - C29872) * C33283 +
            (C49173 * C5330 - C50336 * C5333 + C49166 * C5331 -
             C50065 * C5334) *
                C33286 +
            (C49173 * C5335 - C50336 * C5339 + C49166 * C5336 -
             C50065 * C5340) *
                C50286) *
               C50364 +
           ((C28685 - C28684 + C28687 - C28686) * C33285 +
            (C28689 - C28688 + C28691 - C28690) * C33283 +
            (C49173 * C6306 - C50336 * C6308 + C49166 * C6307 -
             C50065 * C6309) *
                C33286 +
            (C49173 * C6310 - C50336 * C6312 + C49166 * C6311 -
             C50065 * C6313) *
                C50286) *
               C50260) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C50398 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50399 +
           (((C27441 - C27440 + C27443 - C27442) * C33285 +
             (C27445 - C27444 + C27447 - C27446) * C33283 +
             (C29866 - C29867 + C29868 - C29869) * C33286 +
             (C29870 - C29871 + C29872 - C29873) * C50286) *
                C50364 +
            (C28694 * C33285 + C28695 * C33283 +
             (C28684 - C28685 + C28686 - C28687) * C33286 +
             (C28688 - C28689 + C28690 - C28691) * C50286) *
                C50260) *
               C1960) *
              C50109 * C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C50398 +
           (((C27449 - C27448 + C27451 - C27450) * C33285 +
             (C27453 - C27452 + C27455 - C27454) * C33283 +
             (C27456 - C27457 + C27458 - C27459) * C33286 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C50364 +
            (C28156 * C33285 + C28157 * C33283 +
             (C27464 - C27465 + C27466 - C27467) * C33286 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50399 +
           (((C27457 - C27456 + C27459 - C27458) * C33285 +
             (C27461 - C27460 + C27463 - C27462) * C33283 +
             (C49173 * C1715 - C50336 * C1719 + C49166 * C1716 -
              C50065 * C1720) *
                 C33286 +
             (C49173 * C1723 - C50336 * C1727 + C49166 * C1724 -
              C50065 * C1728) *
                 C50286) *
                C50364 +
            ((C27465 - C27464 + C27467 - C27466) * C33285 +
             (C27469 - C27468 + C27471 - C27470) * C33283 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C33286 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C50286) *
                C50260) *
               C1960) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C50109 * C895 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C33285 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C33283 +
             (C27448 - C27449 + C27450 - C27451) * C33286 +
             (C27452 - C27453 + C27454 - C27455) * C50286) *
                C50364 +
            ((C24390 - C24391 + C24392 - C24393) * C33285 +
             (C24394 - C24395 + C24396 - C24397) * C33283 + C28154 * C33286 +
             C28155 * C50286) *
                C50260) *
               C1544 +
           (((C27449 - C27448 + C27451 - C27450) * C33285 +
             (C27453 - C27452 + C27455 - C27454) * C33283 +
             (C27456 - C27457 + C27458 - C27459) * C33286 +
             (C27460 - C27461 + C27462 - C27463) * C50286) *
                C50364 +
            (C28156 * C33285 + C28157 * C33283 +
             (C27464 - C27465 + C27466 - C27467) * C33286 +
             (C27468 - C27469 + C27470 - C27471) * C50286) *
                C50260) *
               C50189) *
              C50109 * C896 +
          ((((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                 C33285 +
             (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                 C33283 +
             (C27868 - C27869 + C27870 - C27871) * C33286 +
             (C27872 - C27873 + C27874 - C27875) * C50286) *
                C50364 +
            ((C24724 - C24725 + C24726 - C24727) * C33285 +
             (C24728 - C24729 + C24730 - C24731) * C33283 +
             (C27666 - C27667 + C27668 - C27669) * C33286 +
             (C27670 - C27671 + C27672 - C27673) * C50286) *
                C50260) *
               C1544 +
           (((C27869 - C27868 + C27871 - C27870) * C33285 +
             (C27873 - C27872 + C27875 - C27874) * C33283 +
             (C49173 * C400 - C50336 * C414 + C49166 * C401 - C50065 * C415) *
                 C33286 +
             (C49173 * C418 - C50336 * C430 + C49166 * C419 - C50065 * C431) *
                 C50286) *
                C50364 +
            ((C27667 - C27666 + C27669 - C27668) * C33285 +
             (C27671 - C27670 + C27673 - C27672) * C33283 +
             (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
              C50065 * C1090) *
                 C33286 +
             (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
              C50065 * C1098) *
                 C50286) *
                C50260) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C33285 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C33283 +
             (C27432 - C27433 + C27434 - C27435) * C33286 +
             (C27436 - C27437 + C27438 - C27439) * C50286) *
                C50364 +
            ((C24366 - C24367 + C24368 - C24369) * C33285 +
             (C24370 - C24371 + C24372 - C24373) * C33283 + C28150 * C33286 +
             C28151 * C50286) *
                C50260) *
               C1544 +
           (((C27433 - C27432 + C27435 - C27434) * C33285 +
             (C27437 - C27436 + C27439 - C27438) * C33283 +
             (C27440 - C27441 + C27442 - C27443) * C33286 +
             (C27444 - C27445 + C27446 - C27447) * C50286) *
                C50364 +
            (C28152 * C33285 + C28153 * C33283 + C28692 * C33286 +
             C28693 * C50286) *
                C50260) *
               C50189) *
              C248 +
          ((((C24367 - C24366 + C24369 - C24368) * C33285 +
             (C24371 - C24370 + C24373 - C24372) * C33283 + C28152 * C33286 +
             C28153 * C50286) *
                C50364 +
            ((C24375 - C24374 + C24377 - C24376) * C33285 +
             (C24379 - C24378 + C24381 - C24380) * C33283 + C26033 * C33286 +
             C26034 * C50286) *
                C50260) *
               C1544 +
           ((C28150 * C33285 + C28151 * C33283 + C28694 * C33286 +
             C28695 * C50286) *
                C50364 +
            (C29346 * C33285 + C29347 * C33283 +
             (C25527 - C25528 + C25529 - C25530) * C33286 +
             (C25531 - C25532 + C25533 - C25534) * C50286) *
                C50260) *
               C50189) *
              C249 +
          (((C24422 * C33285 + C24423 * C33283 + C29346 * C33286 +
             C29347 * C50286) *
                C50364 +
            ((C24383 - C24382 + C24385 - C24384) * C33285 +
             (C24387 - C24386 + C24389 - C24388) * C33283 +
             (C26025 - C26026 + C26027 - C26028) * C33286 +
             (C26029 - C26030 + C26031 - C26032) * C50286) *
                C50260) *
               C1544 +
           ((C26033 * C33285 + C26034 * C33283 +
             (C25528 - C25527 + C25530 - C25529) * C33286 +
             (C25532 - C25531 + C25534 - C25533) * C50286) *
                C50364 +
            ((C26026 - C26025 + C26028 - C26027) * C33285 +
             (C26030 - C26029 + C26032 - C26031) * C33283 +
             (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 -
              C50065 * C3510) *
                 C33286 +
             (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 -
              C50065 * C3514) *
                 C50286) *
                C50260) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50125 * C50351 +
                    (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C50394 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50125 * C50351 +
                    (((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
                      C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
                      C22330 * C43931) *
                         C50364 +
                     ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
                      C31416 * C43933 + C31417 * C50403 +
                      (C21627 - C21628) * C43934 + (C21629 - C21630) * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C50395 +
                   ((((C50060 * C131 - C19535 * C124) * C43932 +
                      (C50060 * C145 - C19535 * C135) * C50402 +
                      (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                      (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                         C50364 +
                     ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                      (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                      (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                         C50260) *
                        C50125 * C50351 +
                    (((C19884 - C19883) * C43932 + (C19886 - C19885) * C50402 +
                      (C21964 - C21963) * C43933 + (C21966 - C21965) * C50403 +
                      (C21968 - C21967) * C43934 + (C21970 - C21969) * C43931) *
                         C50364 +
                     ((C19888 - C19887) * C43932 + (C19890 - C19889) * C50402 +
                      (C31073 - C31072) * C43933 + (C31075 - C31074) * C50403 +
                      (C19535 * C2536 - C50060 * C2541) * C43934 +
                      (C19535 * C2542 - C50060 * C2545) * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C43932 +
              (C50060 * C143 - C19535 * C133) * C50402 +
              (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
              C21813 * C43934 + C21814 * C43931) *
                 C50364 +
             ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
              C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
              C21786 * C43931) *
                 C50260) *
                C50352 +
            (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
              (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
              C23623 * C43934 + C23624 * C43931) *
                 C50364 +
             (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
              C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
              C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
              C22324 * C43931) *
                 C50364 +
             ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
              C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
              C22734 * C43931) *
                 C50260) *
                C50352 +
            ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
              C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                 C50364 +
             (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
              C23228 * C50403 + (C22735 - C22736) * C43934 +
              (C22737 - C22738) * C43931) *
                 C50260) *
                C50189) *
               C50161) *
              C251 +
          (((((C19535 * C123 - C50060 * C130) * C43932 +
              (C19535 * C134 - C50060 * C144) * C50402 +
              (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
              C21815 * C43934 + C21816 * C43931) *
                 C50364 +
             ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
              C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
              C21804 * C43931) *
                 C50260) *
                C50352 +
            (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
              (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
              (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                 C50364 +
             (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
              C22330 * C50403 + (C21809 - C21810) * C43934 +
              (C21811 - C21812) * C43931) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
              C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
              C22330 * C43931) *
                 C50364 +
             ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
              C31416 * C43933 + C31417 * C50403 + (C21627 - C21628) * C43934 +
              (C21629 - C21630) * C43931) *
                 C50260) *
                C50352 +
            ((C22325 * C43932 + C22326 * C50402 + C21803 * C43933 +
              C21804 * C50403 + (C21810 - C21809) * C43934 +
              (C21812 - C21811) * C43931) *
                 C50364 +
             (C30770 * C43932 + C30771 * C50402 + (C21628 - C21627) * C43933 +
              (C21630 - C21629) * C50403 +
              (C19535 * C4435 - C50060 * C4441) * C43934 +
              (C19535 * C4443 - C50060 * C4447) * C43931) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50125 * C248 +
                    (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50125 * C249 +
                    ((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                      C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                         C50364 +
                     (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                      C32306 * C50403 + (C20439 - C20440) * C43934 +
                      (C20441 - C20442) * C43931) *
                         C50260) *
                        C50125 * C250) *
                       C251 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50125 * C248 +
                    (((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
                      C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
                      C22330 * C43931) *
                         C50364 +
                     ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
                      C31416 * C43933 + C31417 * C50403 +
                      (C21627 - C21628) * C43934 + (C21629 - C21630) * C43931) *
                         C50260) *
                        C50125 * C249 +
                    ((C19671 * C43932 + C19672 * C50402 + C30770 * C43933 +
                      C30771 * C50403 + (C21628 - C21627) * C43934 +
                      (C21630 - C21629) * C43931) *
                         C50364 +
                     (C19673 * C43932 + C19674 * C50402 +
                      (C20144 - C20143) * C43933 + (C20146 - C20145) * C50403 +
                      (C19535 * C3508 - C50060 * C3510) * C43934 +
                      (C19535 * C3512 - C50060 * C3514) * C43931) *
                         C50260) *
                        C50125 * C250) *
                       C50096)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C50060 * C129 - C19535 * C122) * C43932 +
                     (C50060 * C143 - C19535 * C133) * C50402 +
                     (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                     C21813 * C43934 + C21814 * C43931) *
                        C50364 +
                    ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                     C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                     C21786 * C43931) *
                        C50260) *
                       C50125 * C50109 * C113 +
                   (((C19535 * C123 - C50060 * C130) * C43932 +
                     (C19535 * C134 - C50060 * C144) * C50402 +
                     (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                     C21815 * C43934 + C21816 * C43931) *
                        C50364 +
                    ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                     C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                     C21804 * C43931) *
                        C50260) *
                       C50125 * C50109 * C114 +
                   (((C50060 * C131 - C19535 * C124) * C43932 +
                     (C50060 * C145 - C19535 * C135) * C50402 +
                     (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                     (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                        C50364 +
                    ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                     (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                     (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                        C50260) *
                       C50125 * C50109 * C115 +
                   (((C19535 * C125 - C50060 * C132) * C43932 +
                     (C19535 * C136 - C50060 * C146) * C50402 +
                     (C19535 * C397 - C50060 * C407) * C43933 +
                     (C19535 * C411 - C50060 * C427) * C50403 +
                     (C19535 * C401 - C50060 * C415) * C43934 +
                     (C19535 * C419 - C50060 * C431) * C43931) *
                        C50364 +
                    ((C19535 * C256 - C50060 * C266) * C43932 +
                     (C19535 * C270 - C50060 * C286) * C50402 +
                     (C19535 * C778 - C50060 * C783) * C43933 +
                     (C19535 * C787 - C50060 * C793) * C50403 +
                     (C19535 * C1086 - C50060 * C1090) * C43934 +
                     (C19535 * C1094 - C50060 * C1098) * C43931) *
                        C50260) *
                       C50125 * C50109 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C391 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C392 +
                    ((C21813 * C43932 + C21814 * C50402 + C38816 * C43933 +
                      C38817 * C50403 + (C23625 - C23626) * C43934 +
                      (C23627 - C23628) * C43931) *
                         C50364 +
                     (C21785 * C43932 + C21786 * C50402 + C22727 * C43933 +
                      C22728 * C50403 + (C22729 - C22730) * C43934 +
                      (C22731 - C22732) * C43931) *
                         C50260) *
                        C393) *
                       C50109 * C251 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C391 +
                    (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
                      (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
                      (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                         C50364 +
                     (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
                      C22330 * C50403 + (C21809 - C21810) * C43934 +
                      (C21811 - C21812) * C43931) *
                         C50260) *
                        C392 +
                    ((C21815 * C43932 + C21816 * C50402 + C38818 * C43933 +
                      C38819 * C50403 + (C38821 - C38820) * C43934 +
                      (C38823 - C38822) * C43931) *
                         C50364 +
                     (C21803 * C43932 + C21804 * C50402 +
                      (C21810 - C21809) * C43933 + (C21812 - C21811) * C50403 +
                      (C19535 * C6307 - C50060 * C6309) * C43934 +
                      (C19535 * C6311 - C50060 * C6313) * C43931) *
                         C50260) *
                        C393) *
                       C50109 * C50096)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50352 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C50394 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50352 +
                    (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
                      (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
                      (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                         C50364 +
                     (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
                      C22330 * C50403 + (C21809 - C21810) * C43934 +
                      (C21811 - C21812) * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C50395 +
                   ((((C50060 * C131 - C19535 * C124) * C43932 +
                      (C50060 * C145 - C19535 * C135) * C50402 +
                      (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                      (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                         C50364 +
                     ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                      (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                      (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                         C50260) *
                        C50352 +
                    (((C22118 - C22117) * C43932 + (C22120 - C22119) * C50402 +
                      (C22122 - C22121) * C43933 + (C22124 - C22123) * C50403 +
                      (C39021 - C39020) * C43934 + (C39023 - C39022) * C43931) *
                         C50364 +
                     ((C21964 - C21963) * C43932 + (C21966 - C21965) * C50402 +
                      (C21968 - C21967) * C43933 + (C21970 - C21969) * C50403 +
                      (C19535 * C5904 - C50060 * C5905) * C43934 +
                      (C19535 * C5906 - C50060 * C5907) * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C536)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C50060 * C129 - C19535 * C122) * C43932 +
                     (C50060 * C143 - C19535 * C133) * C50402 +
                     (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                     C21813 * C43934 + C21814 * C43931) *
                        C50364 +
                    ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                     C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                     C21786 * C43931) *
                        C50260) *
                       C50125 * C50109 * C113 +
                   (((C19535 * C123 - C50060 * C130) * C43932 +
                     (C19535 * C134 - C50060 * C144) * C50402 +
                     (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                     C21815 * C43934 + C21816 * C43931) *
                        C50364 +
                    ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                     C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                     C21804 * C43931) *
                        C50260) *
                       C50125 * C50109 * C114 +
                   (((C50060 * C131 - C19535 * C124) * C43932 +
                     (C50060 * C145 - C19535 * C135) * C50402 +
                     (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                     (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                        C50364 +
                    ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                     (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                     (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                        C50260) *
                       C50125 * C50109 * C115 +
                   (((C19535 * C125 - C50060 * C132) * C43932 +
                     (C19535 * C136 - C50060 * C146) * C50402 +
                     (C19535 * C397 - C50060 * C407) * C43933 +
                     (C19535 * C411 - C50060 * C427) * C50403 +
                     (C19535 * C401 - C50060 * C415) * C43934 +
                     (C19535 * C419 - C50060 * C431) * C43931) *
                        C50364 +
                    ((C19535 * C256 - C50060 * C266) * C43932 +
                     (C19535 * C270 - C50060 * C286) * C50402 +
                     (C19535 * C778 - C50060 * C783) * C43933 +
                     (C19535 * C787 - C50060 * C793) * C50403 +
                     (C19535 * C1086 - C50060 * C1090) * C43934 +
                     (C19535 * C1094 - C50060 * C1098) * C43931) *
                        C50260) *
                       C50125 * C50109 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50125 * C248 +
                    (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50125 * C249 +
                    ((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                      C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                         C50364 +
                     (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                      C32306 * C50403 + (C20439 - C20440) * C43934 +
                      (C20441 - C20442) * C43931) *
                         C50260) *
                        C50125 * C250) *
                       C251 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50125 * C248 +
                    (((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
                      C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
                      C22330 * C43931) *
                         C50364 +
                     ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
                      C31416 * C43933 + C31417 * C50403 +
                      (C21627 - C21628) * C43934 + (C21629 - C21630) * C43931) *
                         C50260) *
                        C50125 * C249 +
                    ((C19671 * C43932 + C19672 * C50402 + C30770 * C43933 +
                      C30771 * C50403 + (C21628 - C21627) * C43934 +
                      (C21630 - C21629) * C43931) *
                         C50364 +
                     (C19673 * C43932 + C19674 * C50402 +
                      (C20144 - C20143) * C43933 + (C20146 - C20145) * C50403 +
                      (C19535 * C3508 - C50060 * C3510) * C43934 +
                      (C19535 * C3512 - C50060 * C3514) * C43931) *
                         C50260) *
                        C50125 * C250) *
                       C50096)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50125 * C50396 +
                    (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50125 * C50397 +
                    ((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                      C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                         C50364 +
                     (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                      C32306 * C50403 + (C20439 - C20440) * C43934 +
                      (C20441 - C20442) * C43931) *
                         C50260) *
                        C50125 * C1199) *
                       C50343 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50125 * C50396 +
                    (((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
                      C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
                      C22330 * C43931) *
                         C50364 +
                     ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
                      C31416 * C43933 + C31417 * C50403 +
                      (C21627 - C21628) * C43934 + (C21629 - C21630) * C43931) *
                         C50260) *
                        C50125 * C50397 +
                    ((C19671 * C43932 + C19672 * C50402 + C30770 * C43933 +
                      C30771 * C50403 + (C21628 - C21627) * C43934 +
                      (C21630 - C21629) * C43931) *
                         C50364 +
                     (C19673 * C43932 + C19674 * C50402 +
                      (C20144 - C20143) * C43933 + (C20146 - C20145) * C50403 +
                      (C19535 * C3508 - C50060 * C3510) * C43934 +
                      (C19535 * C3512 - C50060 * C3514) * C43931) *
                         C50260) *
                        C50125 * C1199) *
                       C50096)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50352 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50189) *
                       C50396 +
                   ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50352 +
                    ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
                      C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                         C50364 +
                     (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
                      C23228 * C50403 + (C22735 - C22736) * C43934 +
                      (C22737 - C22738) * C43931) *
                         C50260) *
                        C50189) *
                       C50397 +
                   (((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                      C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                         C50364 +
                     (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                      C32306 * C50403 + (C20439 - C20440) * C43934 +
                      (C20441 - C20442) * C43931) *
                         C50260) *
                        C50352 +
                    ((C20773 * C43932 + C20774 * C50402 + C22733 * C43933 +
                      C22734 * C50403 + (C22736 - C22735) * C43934 +
                      (C22738 - C22737) * C43931) *
                         C50364 +
                     (C20775 * C43932 + C20776 * C50402 +
                      (C20440 - C20439) * C43933 + (C20442 - C20441) * C50403 +
                      (C19535 * C21048 - C50060 * C21049) * C43934 +
                      (C19535 * C21050 - C50060 * C21051) * C43931) *
                         C50260) *
                        C50189) *
                       C1199) *
                  C50090) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C50060 * C129 - C19535 * C122) * C43932 +
                     (C50060 * C143 - C19535 * C133) * C50402 +
                     (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                     C21813 * C43934 + C21814 * C43931) *
                        C50364 +
                    ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                     C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                     C21786 * C43931) *
                        C50260) *
                       C50125 * C964 +
                   (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                     C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                     C22324 * C43931) *
                        C50364 +
                    ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                     C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                     C22734 * C43931) *
                        C50260) *
                       C50125 * C965 +
                   ((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                     C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                        C50364 +
                    (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                     C32306 * C50403 + (C20439 - C20440) * C43934 +
                     (C20441 - C20442) * C43931) *
                        C50260) *
                       C50125 * C966 +
                   ((C20315 * C43932 + C20316 * C50402 + C20775 * C43933 +
                     C20776 * C50403 + (C20440 - C20439) * C43934 +
                     (C20442 - C20441) * C43931) *
                        C50364 +
                    (C20317 * C43932 + C20318 * C50402 +
                     (C20778 - C20777) * C43933 + (C20780 - C20779) * C50403 +
                     (C19535 * C20426 - C50060 * C20427) * C43934 +
                     (C19535 * C20428 - C50060 * C20429) * C43931) *
                        C50260) *
                       C50125 * C967) *
                  C50090) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50125 * C893 +
                    (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C895 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50125 * C893 +
                    (((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
                      C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
                      C22330 * C43931) *
                         C50364 +
                     ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
                      C31416 * C43933 + C31417 * C50403 +
                      (C21627 - C21628) * C43934 + (C21629 - C21630) * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C896 +
                   ((((C50060 * C131 - C19535 * C124) * C43932 +
                      (C50060 * C145 - C19535 * C135) * C50402 +
                      (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                      (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                         C50364 +
                     ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                      (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                      (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                         C50260) *
                        C50125 * C893 +
                    (((C19884 - C19883) * C43932 + (C19886 - C19885) * C50402 +
                      (C21964 - C21963) * C43933 + (C21966 - C21965) * C50403 +
                      (C21968 - C21967) * C43934 + (C21970 - C21969) * C43931) *
                         C50364 +
                     ((C19888 - C19887) * C43932 + (C19890 - C19889) * C50402 +
                      (C31073 - C31072) * C43933 + (C31075 - C31074) * C50403 +
                      (C19535 * C2536 - C50060 * C2541) * C43934 +
                      (C19535 * C2542 - C50060 * C2545) * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C391 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C392 +
                    ((C21813 * C43932 + C21814 * C50402 + C38816 * C43933 +
                      C38817 * C50403 + (C23625 - C23626) * C43934 +
                      (C23627 - C23628) * C43931) *
                         C50364 +
                     (C21785 * C43932 + C21786 * C50402 + C22727 * C43933 +
                      C22728 * C50403 + (C22729 - C22730) * C43934 +
                      (C22731 - C22732) * C43931) *
                         C50260) *
                        C393) *
                       C893 +
                   ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C391 +
                    ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
                      C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                         C50364 +
                     (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
                      C23228 * C50403 + (C22735 - C22736) * C43934 +
                      (C22737 - C22738) * C43931) *
                         C50260) *
                        C392 +
                    ((C22323 * C43932 + C22324 * C50402 + C22725 * C43933 +
                      C22726 * C50403 + (C22730 - C22729) * C43934 +
                      (C22732 - C22731) * C43931) *
                         C50364 +
                     (C22733 * C43932 + C22734 * C50402 +
                      (C22736 - C22735) * C43933 + (C22738 - C22737) * C50403 +
                      (C19535 * C22720 - C50060 * C22721) * C43934 +
                      (C19535 * C22722 - C50060 * C22723) * C43931) *
                         C50260) *
                        C393) *
                       C50161) *
                  C50090) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C43932 +
              (C50060 * C143 - C19535 * C133) * C50402 +
              (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
              C21813 * C43934 + C21814 * C43931) *
                 C50364 +
             ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
              C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
              C21786 * C43931) *
                 C50260) *
                C50352 +
            (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
              (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
              C23623 * C43934 + C23624 * C43931) *
                 C50364 +
             (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
              C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                 C50260) *
                C50189) *
               C893 +
           ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
              C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
              C22324 * C43931) *
                 C50364 +
             ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
              C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
              C22734 * C43931) *
                 C50260) *
                C50352 +
            ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
              C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                 C50364 +
             (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
              C23228 * C50403 + (C22735 - C22736) * C43934 +
              (C22737 - C22738) * C43931) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C43932 +
              (C19535 * C134 - C50060 * C144) * C50402 +
              (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
              C21815 * C43934 + C21816 * C43931) *
                 C50364 +
             ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
              C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
              C21804 * C43931) *
                 C50260) *
                C50352 +
            (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
              (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
              (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                 C50364 +
             (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
              C22330 * C50403 + (C21809 - C21810) * C43934 +
              (C21811 - C21812) * C43931) *
                 C50260) *
                C50189) *
               C893 +
           ((((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
              C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
              C22330 * C43931) *
                 C50364 +
             ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
              C31416 * C43933 + C31417 * C50403 + (C21627 - C21628) * C43934 +
              (C21629 - C21630) * C43931) *
                 C50260) *
                C50352 +
            ((C22325 * C43932 + C22326 * C50402 + C21803 * C43933 +
              C21804 * C50403 + (C21810 - C21809) * C43934 +
              (C21812 - C21811) * C43931) *
                 C50364 +
             (C30770 * C43932 + C30771 * C50402 + (C21628 - C21627) * C43933 +
              (C21630 - C21629) * C50403 +
              (C19535 * C4435 - C50060 * C4441) * C43934 +
              (C19535 * C4443 - C50060 * C4447) * C43931) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50125 * C893 +
                    (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C895 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50125 * C893 +
                    (((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
                      C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
                      C22330 * C43931) *
                         C50364 +
                     ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
                      C31416 * C43933 + C31417 * C50403 +
                      (C21627 - C21628) * C43934 + (C21629 - C21630) * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C896 +
                   ((((C50060 * C131 - C19535 * C124) * C43932 +
                      (C50060 * C145 - C19535 * C135) * C50402 +
                      (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                      (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                         C50364 +
                     ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                      (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                      (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                         C50260) *
                        C50125 * C893 +
                    (((C19884 - C19883) * C43932 + (C19886 - C19885) * C50402 +
                      (C21964 - C21963) * C43933 + (C21966 - C21965) * C50403 +
                      (C21968 - C21967) * C43934 + (C21970 - C21969) * C43931) *
                         C50364 +
                     ((C19888 - C19887) * C43932 + (C19890 - C19889) * C50402 +
                      (C31073 - C31072) * C43933 + (C31075 - C31074) * C50403 +
                      (C19535 * C2536 - C50060 * C2541) * C43934 +
                      (C19535 * C2542 - C50060 * C2545) * C43931) *
                         C50260) *
                        C50125 * C50161) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C50060 * C129 - C19535 * C122) * C43932 +
                     (C50060 * C143 - C19535 * C133) * C50402 +
                     (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                     C21813 * C43934 + C21814 * C43931) *
                        C50364 +
                    ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                     C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                     C21786 * C43931) *
                        C50260) *
                       C50125 * C964 +
                   (((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                     C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                     C22324 * C43931) *
                        C50364 +
                    ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                     C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                     C22734 * C43931) *
                        C50260) *
                       C50125 * C965 +
                   ((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                     C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                        C50364 +
                    (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                     C32306 * C50403 + (C20439 - C20440) * C43934 +
                     (C20441 - C20442) * C43931) *
                        C50260) *
                       C50125 * C966 +
                   ((C20315 * C43932 + C20316 * C50402 + C20775 * C43933 +
                     C20776 * C50403 + (C20440 - C20439) * C43934 +
                     (C20442 - C20441) * C43931) *
                        C50364 +
                    (C20317 * C43932 + C20318 * C50402 +
                     (C20778 - C20777) * C43933 + (C20780 - C20779) * C50403 +
                     (C19535 * C20426 - C50060 * C20427) * C43934 +
                     (C19535 * C20428 - C50060 * C20429) * C43931) *
                        C50260) *
                       C50125 * C967) *
                  C50090) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C43932 +
              (C50060 * C143 - C19535 * C133) * C50402 +
              (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
              C21813 * C43934 + C21814 * C43931) *
                 C50364 +
             ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
              C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
              C21786 * C43931) *
                 C50260) *
                C1544 +
            (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
              (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
              C23623 * C43934 + C23624 * C43931) *
                 C50364 +
             (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
              C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
              C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
              C22324 * C43931) *
                 C50364 +
             ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
              C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
              C22734 * C43931) *
                 C50260) *
                C1544 +
            ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
              C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                 C50364 +
             (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
              C23228 * C50403 + (C22735 - C22736) * C43934 +
              (C22737 - C22738) * C43931) *
                 C50260) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C43932 +
              (C19535 * C134 - C50060 * C144) * C50402 +
              (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
              C21815 * C43934 + C21816 * C43931) *
                 C50364 +
             ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
              C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
              C21804 * C43931) *
                 C50260) *
                C1544 +
            (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
              (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
              (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                 C50364 +
             (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
              C22330 * C50403 + (C21809 - C21810) * C43934 +
              (C21811 - C21812) * C43931) *
                 C50260) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C43932 + (C19654 - C19653) * C50402 +
              C22327 * C43933 + C22328 * C50403 + C22329 * C43934 +
              C22330 * C43931) *
                 C50364 +
             ((C19656 - C19655) * C43932 + (C19658 - C19657) * C50402 +
              C31416 * C43933 + C31417 * C50403 + (C21627 - C21628) * C43934 +
              (C21629 - C21630) * C43931) *
                 C50260) *
                C1544 +
            ((C22325 * C43932 + C22326 * C50402 + C21803 * C43933 +
              C21804 * C50403 + (C21810 - C21809) * C43934 +
              (C21812 - C21811) * C43931) *
                 C50364 +
             (C30770 * C43932 + C30771 * C50402 + (C21628 - C21627) * C43933 +
              (C21630 - C21629) * C50403 +
              (C19535 * C4435 - C50060 * C4441) * C43934 +
              (C19535 * C4443 - C50060 * C4447) * C43931) *
                 C50260) *
                C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50398 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50399 +
                    ((C21813 * C43932 + C21814 * C50402 + C38816 * C43933 +
                      C38817 * C50403 + (C23625 - C23626) * C43934 +
                      (C23627 - C23628) * C43931) *
                         C50364 +
                     (C21785 * C43932 + C21786 * C50402 + C22727 * C43933 +
                      C22728 * C50403 + (C22729 - C22730) * C43934 +
                      (C22731 - C22732) * C43931) *
                         C50260) *
                        C1960) *
                       C50351 +
                   ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C50398 +
                    ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
                      C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                         C50364 +
                     (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
                      C23228 * C50403 + (C22735 - C22736) * C43934 +
                      (C22737 - C22738) * C43931) *
                         C50260) *
                        C50399 +
                    ((C22323 * C43932 + C22324 * C50402 + C22725 * C43933 +
                      C22726 * C50403 + (C22730 - C22729) * C43934 +
                      (C22732 - C22731) * C43931) *
                         C50364 +
                     (C22733 * C43932 + C22734 * C50402 +
                      (C22736 - C22735) * C43933 + (C22738 - C22737) * C50403 +
                      (C19535 * C22720 - C50060 * C22721) * C43934 +
                      (C19535 * C22722 - C50060 * C22723) * C43931) *
                         C50260) *
                        C1960) *
                       C50161) *
                  C50090) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C1544 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50189) *
                       C248 +
                   ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C1544 +
                    ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
                      C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                         C50364 +
                     (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
                      C23228 * C50403 + (C22735 - C22736) * C43934 +
                      (C22737 - C22738) * C43931) *
                         C50260) *
                        C50189) *
                       C249 +
                   (((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                      C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                         C50364 +
                     (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                      C32306 * C50403 + (C20439 - C20440) * C43934 +
                      (C20441 - C20442) * C43931) *
                         C50260) *
                        C1544 +
                    ((C20773 * C43932 + C20774 * C50402 + C22733 * C43933 +
                      C22734 * C50403 + (C22736 - C22735) * C43934 +
                      (C22738 - C22737) * C43931) *
                         C50364 +
                     (C20775 * C43932 + C20776 * C50402 +
                      (C20440 - C20439) * C43933 + (C20442 - C20441) * C50403 +
                      (C19535 * C21048 - C50060 * C21049) * C43934 +
                      (C19535 * C21050 - C50060 * C21051) * C43931) *
                         C50260) *
                        C50189) *
                       C250) *
                  C50090) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C1544 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C895 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C1544 +
                    (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
                      (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
                      (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                         C50364 +
                     (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
                      C22330 * C50403 + (C21809 - C21810) * C43934 +
                      (C21811 - C21812) * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C896 +
                   ((((C50060 * C131 - C19535 * C124) * C43932 +
                      (C50060 * C145 - C19535 * C135) * C50402 +
                      (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                      (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                         C50364 +
                     ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                      (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                      (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                         C50260) *
                        C1544 +
                    (((C22118 - C22117) * C43932 + (C22120 - C22119) * C50402 +
                      (C22122 - C22121) * C43933 + (C22124 - C22123) * C50403 +
                      (C39021 - C39020) * C43934 + (C39023 - C39022) * C43931) *
                         C50364 +
                     ((C21964 - C21963) * C43932 + (C21966 - C21965) * C50402 +
                      (C21968 - C21967) * C43933 + (C21970 - C21969) * C50403 +
                      (C19535 * C5904 - C50060 * C5905) * C43934 +
                      (C19535 * C5906 - C50060 * C5907) * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C50060 * C129 - C19535 * C122) * C43932 +
                     (C50060 * C143 - C19535 * C133) * C50402 +
                     (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                     C21813 * C43934 + C21814 * C43931) *
                        C50364 +
                    ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                     C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                     C21786 * C43931) *
                        C50260) *
                       C1710 +
                   (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                     (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                     C23623 * C43934 + C23624 * C43931) *
                        C50364 +
                    (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                     C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                        C50260) *
                       C1711 +
                   ((C21813 * C43932 + C21814 * C50402 + C38816 * C43933 +
                     C38817 * C50403 + (C23625 - C23626) * C43934 +
                     (C23627 - C23628) * C43931) *
                        C50364 +
                    (C21785 * C43932 + C21786 * C50402 + C22727 * C43933 +
                     C22728 * C50403 + (C22729 - C22730) * C43934 +
                     (C22731 - C22732) * C43931) *
                        C50260) *
                       C1712 +
                   ((C23623 * C43932 + C23624 * C50402 + C40008 * C43933 +
                     C40009 * C50403 + (C40011 - C40010) * C43934 +
                     (C40013 - C40012) * C43931) *
                        C50364 +
                    (C22725 * C43932 + C22726 * C50402 +
                     (C22730 - C22729) * C43933 + (C22732 - C22731) * C50403 +
                     (C19535 * C23618 - C50060 * C23619) * C43934 +
                     (C19535 * C23620 - C50060 * C23621) * C43931) *
                        C50260) *
                       C1713) *
                  C50109 * C50090) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C50398 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50399 +
                    ((C21813 * C43932 + C21814 * C50402 + C38816 * C43933 +
                      C38817 * C50403 + (C23625 - C23626) * C43934 +
                      (C23627 - C23628) * C43931) *
                         C50364 +
                     (C21785 * C43932 + C21786 * C50402 + C22727 * C43933 +
                      C22728 * C50403 + (C22729 - C22730) * C43934 +
                      (C22731 - C22732) * C43931) *
                         C50260) *
                        C1960) *
                       C50109 * C50343 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C50398 +
                    (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
                      (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
                      (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                         C50364 +
                     (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
                      C22330 * C50403 + (C21809 - C21810) * C43934 +
                      (C21811 - C21812) * C43931) *
                         C50260) *
                        C50399 +
                    ((C21815 * C43932 + C21816 * C50402 + C38818 * C43933 +
                      C38819 * C50403 + (C38821 - C38820) * C43934 +
                      (C38823 - C38822) * C43931) *
                         C50364 +
                     (C21803 * C43932 + C21804 * C50402 +
                      (C21810 - C21809) * C43933 + (C21812 - C21811) * C50403 +
                      (C19535 * C6307 - C50060 * C6309) * C43934 +
                      (C19535 * C6311 - C50060 * C6313) * C43931) *
                         C50260) *
                        C1960) *
                       C50109 * C50096)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C1544 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C895 +
                   ((((C19535 * C123 - C50060 * C130) * C43932 +
                      (C19535 * C134 - C50060 * C144) * C50402 +
                      (C21795 - C21796) * C43933 + (C21797 - C21798) * C50403 +
                      C21815 * C43934 + C21816 * C43931) *
                         C50364 +
                     ((C19651 - C19652) * C43932 + (C19653 - C19654) * C50402 +
                      C22325 * C43933 + C22326 * C50403 + C21803 * C43934 +
                      C21804 * C43931) *
                         C50260) *
                        C1544 +
                    (((C21796 - C21795) * C43932 + (C21798 - C21797) * C50402 +
                      (C21800 - C21799) * C43933 + (C21802 - C21801) * C50403 +
                      (C21805 - C21806) * C43934 + (C21807 - C21808) * C43931) *
                         C50364 +
                     (C22327 * C43932 + C22328 * C50402 + C22329 * C43933 +
                      C22330 * C50403 + (C21809 - C21810) * C43934 +
                      (C21811 - C21812) * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C896 +
                   ((((C50060 * C131 - C19535 * C124) * C43932 +
                      (C50060 * C145 - C19535 * C135) * C50402 +
                      (C22117 - C22118) * C43933 + (C22119 - C22120) * C50403 +
                      (C22121 - C22122) * C43934 + (C22123 - C22124) * C43931) *
                         C50364 +
                     ((C19883 - C19884) * C43932 + (C19885 - C19886) * C50402 +
                      (C21963 - C21964) * C43933 + (C21965 - C21966) * C50403 +
                      (C21967 - C21968) * C43934 + (C21969 - C21970) * C43931) *
                         C50260) *
                        C1544 +
                    (((C22118 - C22117) * C43932 + (C22120 - C22119) * C50402 +
                      (C22122 - C22121) * C43933 + (C22124 - C22123) * C50403 +
                      (C39021 - C39020) * C43934 + (C39023 - C39022) * C43931) *
                         C50364 +
                     ((C21964 - C21963) * C43932 + (C21966 - C21965) * C50402 +
                      (C21968 - C21967) * C43933 + (C21970 - C21969) * C50403 +
                      (C19535 * C5904 - C50060 * C5905) * C43934 +
                      (C19535 * C5906 - C50060 * C5907) * C43931) *
                         C50260) *
                        C50189) *
                       C50109 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50060 * C129 - C19535 * C122) * C43932 +
                      (C50060 * C143 - C19535 * C133) * C50402 +
                      (C21777 - C21778) * C43933 + (C21779 - C21780) * C50403 +
                      C21813 * C43934 + C21814 * C43931) *
                         C50364 +
                     ((C19635 - C19636) * C43932 + (C19637 - C19638) * C50402 +
                      C22319 * C43933 + C22320 * C50403 + C21785 * C43934 +
                      C21786 * C43931) *
                         C50260) *
                        C1544 +
                    (((C21778 - C21777) * C43932 + (C21780 - C21779) * C50402 +
                      (C21782 - C21781) * C43933 + (C21784 - C21783) * C50403 +
                      C23623 * C43934 + C23624 * C43931) *
                         C50364 +
                     (C22321 * C43932 + C22322 * C50402 + C22323 * C43933 +
                      C22324 * C50403 + C22725 * C43934 + C22726 * C43931) *
                         C50260) *
                        C50189) *
                       C248 +
                   ((((C19636 - C19635) * C43932 + (C19638 - C19637) * C50402 +
                      C22321 * C43933 + C22322 * C50403 + C22323 * C43934 +
                      C22324 * C43931) *
                         C50364 +
                     ((C19640 - C19639) * C43932 + (C19642 - C19641) * C50402 +
                      C20773 * C43933 + C20774 * C50403 + C22733 * C43934 +
                      C22734 * C43931) *
                         C50260) *
                        C1544 +
                    ((C22319 * C43932 + C22320 * C50402 + C21785 * C43933 +
                      C21786 * C50403 + C22727 * C43934 + C22728 * C43931) *
                         C50364 +
                     (C23225 * C43932 + C23226 * C50402 + C23227 * C43933 +
                      C23228 * C50403 + (C22735 - C22736) * C43934 +
                      (C22737 - C22738) * C43931) *
                         C50260) *
                        C50189) *
                       C249 +
                   (((C19667 * C43932 + C19668 * C50402 + C23225 * C43933 +
                      C23226 * C50403 + C23227 * C43934 + C23228 * C43931) *
                         C50364 +
                     (C19669 * C43932 + C19670 * C50402 + C32305 * C43933 +
                      C32306 * C50403 + (C20439 - C20440) * C43934 +
                      (C20441 - C20442) * C43931) *
                         C50260) *
                        C1544 +
                    ((C20773 * C43932 + C20774 * C50402 + C22733 * C43933 +
                      C22734 * C50403 + (C22736 - C22735) * C43934 +
                      (C22738 - C22737) * C43931) *
                         C50364 +
                     (C20775 * C43932 + C20776 * C50402 +
                      (C20440 - C20439) * C43933 + (C20442 - C20441) * C50403 +
                      (C19535 * C21048 - C50060 * C21049) * C43934 +
                      (C19535 * C21050 - C50060 * C21051) * C43931) *
                         C50260) *
                        C50189) *
                       C250) *
                  C50090) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C50351 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C50161) *
              C50394 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C50351 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50161) *
              C50395 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50125 * C50351 +
           (((C19884 - C19883) * C33285 + (C19886 - C19885) * C33283 +
             (C21964 - C21963) * C33286 + (C21966 - C21965) * C50286) *
                C2159 +
            ((C19888 - C19887) * C33285 + (C19890 - C19889) * C33283 +
             (C31073 - C31072) * C33286 + (C31075 - C31074) * C50286) *
                C2160 +
            ((C19892 - C19891) * C33285 + (C19894 - C19893) * C33283 +
             (C19535 * C3050 - C50060 * C3055) * C33286 +
             (C19535 * C3056 - C50060 * C3059) * C50286) *
                C2161) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C50351 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C50351 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
             C16808 * C420 - C16813 * C402) *
                C33286 +
            (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
             C16808 * C432 - C16813 * C421) *
                C50286) *
               C50211 * C50125 * C50351 +
           ((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C33285 +
            (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C33283 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C33286 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50125 * C50351 +
           ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C50125 * C50351 +
           ((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
            C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
            C22330 * C38613 + (C21809 - C21810) * C38618 +
            (C21811 - C21812) * C38614) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C50060 * C131 - C19535 * C124) * C38615 +
            (C50060 * C145 - C19535 * C135) * C38611 +
            (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
            (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
            (C50060 * C1720 - C19535 * C1716) * C38618 +
            (C50060 * C1728 - C19535 * C1724) * C38614) *
               C50211 * C50125 * C50351 +
           ((C19884 - C19883) * C38615 + (C19886 - C19885) * C38611 +
            (C21964 - C21963) * C38616 + (C21966 - C21965) * C38612 +
            (C21968 - C21967) * C38617 + (C21970 - C21969) * C38613 +
            (C19535 * C5904 - C50060 * C5905) * C38618 +
            (C19535 * C5906 - C50060 * C5907) * C38614) *
               C50211 * C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C33285 +
              (C50060 * C143 - C19535 * C133) * C33283 +
              (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                 C2159 +
             ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
              C22319 * C33286 + C22320 * C50286) *
                 C2160 +
             C36146 * C2161) *
                C50352 +
            (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
              (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                 C2159 +
             (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
              C22324 * C50286) *
                 C2160 +
             (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
              C22734 * C50286) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
              C22321 * C33286 + C22322 * C50286) *
                 C2159 +
             ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
              C20773 * C33286 + C20774 * C50286) *
                 C2160 +
             (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
              C20776 * C50286) *
                 C2161) *
                C50352 +
            ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
              C21786 * C50286) *
                 C2159 +
             (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
              C23228 * C50286) *
                 C2160 +
             (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
              (C20441 - C20442) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C251 +
          (((((C19535 * C123 - C50060 * C130) * C33285 +
              (C19535 * C134 - C50060 * C144) * C33283 +
              (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                 C2159 +
             ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
              C22325 * C33286 + C22326 * C50286) *
                 C2160 +
             C36147 * C2161) *
                C50352 +
            (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
              (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                 C2159 +
             (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
              C22330 * C50286) *
                 C2160 +
             (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
              (C21629 - C21630) * C50286) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
              C22327 * C33286 + C22328 * C50286) *
                 C2159 +
             ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
              C31416 * C33286 + C31417 * C50286) *
                 C2160 +
             ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
              (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                 C2161) *
                C50352 +
            ((C22325 * C33285 + C22326 * C33283 + C21803 * C33286 +
              C21804 * C50286) *
                 C2159 +
             (C30770 * C33285 + C30771 * C33283 + (C21628 - C21627) * C33286 +
              (C21630 - C21629) * C50286) *
                 C2160 +
             ((C20144 - C20143) * C33285 + (C20146 - C20145) * C33283 +
              (C19535 * C3508 - C50060 * C3510) * C33286 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C33285 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C33283 +
             (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
             (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                C50211 * C50352 +
            ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
             (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
             (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
             (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
             (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                C50211 * C50352 +
            ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
             (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C33285 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C33283 +
             (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
             (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
                C50211 * C50352 +
            ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
             (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
             (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
             (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
             (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
                C50211 * C50352 +
            ((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C33285 +
             (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C33283 +
             (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C33286 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C38615 +
             (C50060 * C143 - C19535 * C133) * C38611 +
             (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
             C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
             C38817 * C38614) *
                C50211 * C50352 +
            ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
             (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
             C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
             (C23628 - C23627) * C38614) *
                C50211 * C50189) *
               C50351 +
           (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
             C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
             C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
                C50211 * C50352 +
            (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
             C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
             (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C38615 +
             (C19535 * C134 - C50060 * C144) * C38611 +
             (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
             C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
             C38819 * C38614) *
                C50211 * C50352 +
            ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
             (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
             (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
             (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
                C50211 * C50189) *
               C50351 +
           (((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
             C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
             C22330 * C38613 + (C21809 - C21810) * C38618 +
             (C21811 - C21812) * C38614) *
                C50211 * C50352 +
            (C22325 * C38615 + C22326 * C38611 + C21803 * C38616 +
             C21804 * C38612 + (C21810 - C21809) * C38617 +
             (C21812 - C21811) * C38613 +
             (C19535 * C6307 - C50060 * C6309) * C38618 +
             (C19535 * C6311 - C50060 * C6313) * C38614) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                C16808 * C131 - C16813 * C124) *
                   C33285 +
               (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                C16808 * C145 - C16813 * C135) *
                   C33283 +
               (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
                C16808 * C406 - C16813 * C396) *
                   C33286 +
               (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
                C16808 * C426 - C16813 * C410) *
                   C50286) *
                  C50211 * C50125 * C50109 * C113 +
              ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                C16813 * C125 - C16808 * C132) *
                   C33285 +
               (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                C16813 * C136 - C16808 * C146) *
                   C33283 +
               (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
                C16813 * C397 - C16808 * C407) *
                   C33286 +
               (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
                C16813 * C411 - C16808 * C427) *
                   C50286) *
                  C50211 * C50125 * C50109 * C114 +
              ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                C16808 * C137 - C16813 * C126) *
                   C33285 +
               (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                C16808 * C147 - C16813 * C138) *
                   C33283 +
               (C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
                C16808 * C420 - C16813 * C402) *
                   C33286 +
               (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
                C16808 * C432 - C16813 * C421) *
                   C50286) *
                  C50211 * C50125 * C50109 * C115 +
              ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
                C16813 * C127 - C16808 * C139) *
                   C33285 +
               (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
                C16813 * C140 - C16808 * C148) *
                   C33283 +
               (C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
                C16813 * C641 - C16808 * C642) *
                   C33286 +
               (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
                C16813 * C643 - C16808 * C644) *
                   C50286) *
                  C50211 * C50125 * C50109 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C33285 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C33283 +
                (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
                 C16808 * C406 - C16813 * C396) *
                    C33286 +
                (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
                 C16808 * C426 - C16813 * C410) *
                    C50286) *
                   C50211 * C50125 * C248 +
               ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
                (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
                (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
                (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) *
                    C50286) *
                   C50211 * C50125 * C249 +
               ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
                (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
                (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
                (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) *
                    C50286) *
                   C50211 * C50125 * C250) *
                  C251 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C33285 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C33283 +
                (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
                 C16813 * C397 - C16808 * C407) *
                    C33286 +
                (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
                 C16813 * C411 - C16808 * C427) *
                    C50286) *
                   C50211 * C50125 * C248 +
               ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
                (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
                (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
                (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) *
                    C50286) *
                   C50211 * C50125 * C249 +
               ((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C33285 +
                (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C33283 +
                (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 -
                 C16807 * C1436 + C16813 * C1433 - C16808 * C1437) *
                    C33286 +
                (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 -
                 C16807 * C1444 + C16813 * C1441 - C16808 * C1445) *
                    C50286) *
                   C50211 * C50125 * C250) *
                  C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C391 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C392 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C16806 * C1718 - C16811 * C1714 + C16807 * C1719 - C16812 * C1715 +
             C16808 * C1720 - C16813 * C1716) *
                C33286 +
            (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 - C16812 * C1723 +
             C16808 * C1728 - C16813 * C1724) *
                C50286) *
               C50211 * C393) *
              C50109 * C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C391 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C392 +
           ((C33617 - C33616 + C33619 - C33618 + C33621 - C33620) * C33285 +
            (C33623 - C33622 + C33625 - C33624 + C33627 - C33626) * C33283 +
            (C16811 * C1715 - C16806 * C1719 + C16812 * C1716 - C16807 * C1720 +
             C16813 * C1717 - C16808 * C1721) *
                C33286 +
            (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 - C16807 * C1728 +
             C16813 * C1725 - C16808 * C1729) *
                C50286) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           (C19667 * C33285 + C19668 * C33283 + C23225 * C33286 +
            C23226 * C50286) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C33285 +
            (C19535 * C134 - C50060 * C144) * C33283 +
            (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
               C2159 +
           ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
            C22325 * C33286 + C22326 * C50286) *
               C2160 +
           (C19671 * C33285 + C19672 * C33283 + C30770 * C33286 +
            C30771 * C50286) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C33285 +
            (C50060 * C145 - C19535 * C135) * C33283 +
            (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
               C2159 +
           ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
            (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
               C2160 +
           ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
            (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C33285 +
            (C19535 * C136 - C50060 * C146) * C33283 +
            (C19535 * C397 - C50060 * C407) * C33286 +
            (C19535 * C411 - C50060 * C427) * C50286) *
               C2159 +
           ((C19535 * C256 - C50060 * C266) * C33285 +
            (C19535 * C270 - C50060 * C286) * C33283 +
            (C19535 * C778 - C50060 * C783) * C33286 +
            (C19535 * C787 - C50060 * C793) * C50286) *
               C2160 +
           ((C19535 * C260 - C50060 * C274) * C33285 +
            (C19535 * C278 - C50060 * C290) * C33283 +
            (C19535 * C1433 - C50060 * C1437) * C33286 +
            (C19535 * C1441 - C50060 * C1445) * C50286) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C248 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C249 +
           (C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C248 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C249 +
           (C36147 * C2159 +
            (C19673 * C33285 + C19674 * C33283 + (C20144 - C20143) * C33286 +
             (C20146 - C20145) * C50286) *
                C2160 +
            ((C19664 - C19663) * C33285 + (C19666 - C19665) * C33283 +
             (C19535 * C4018 - C50060 * C4020) * C33286 +
             (C19535 * C4022 - C50060 * C4024) * C50286) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C391 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
             C22734 * C50286) *
                C2161) *
               C392 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C393) *
              C50109 * C251 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C391 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C392 +
           ((C21815 * C33285 + C21816 * C33283 + (C21806 - C21805) * C33286 +
             (C21808 - C21807) * C50286) *
                C2159 +
            (C21803 * C33285 + C21804 * C33283 + (C21810 - C21809) * C33286 +
             (C21812 - C21811) * C50286) *
                C2160 +
            ((C21628 - C21627) * C33285 + (C21630 - C21629) * C33283 +
             (C19535 * C4435 - C50060 * C4441) * C33286 +
             (C19535 * C4443 - C50060 * C4447) * C50286) *
                C2161) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50060 * C129 - C19535 * C122) * C38615 +
           (C50060 * C143 - C19535 * C133) * C38611 +
           (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
           C21813 * C38617 + C21814 * C38613 + (C21788 - C21787) * C38618 +
           (C21790 - C21789) * C38614) *
              C50211 * C50125 * C50109 * C113 +
          ((C19535 * C123 - C50060 * C130) * C38615 +
           (C19535 * C134 - C50060 * C144) * C38611 +
           (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
           C21815 * C38617 + C21816 * C38613 + (C21806 - C21805) * C38618 +
           (C21808 - C21807) * C38614) *
              C50211 * C50125 * C50109 * C114 +
          ((C50060 * C131 - C19535 * C124) * C38615 +
           (C50060 * C145 - C19535 * C135) * C38611 +
           (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
           (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
           (C50060 * C1720 - C19535 * C1716) * C38618 +
           (C50060 * C1728 - C19535 * C1724) * C38614) *
              C50211 * C50125 * C50109 * C115 +
          ((C19535 * C125 - C50060 * C132) * C38615 +
           (C19535 * C136 - C50060 * C146) * C38611 +
           (C19535 * C397 - C50060 * C407) * C38616 +
           (C19535 * C411 - C50060 * C427) * C38612 +
           (C19535 * C401 - C50060 * C415) * C38617 +
           (C19535 * C419 - C50060 * C431) * C38613 +
           (C19535 * C1717 - C50060 * C1721) * C38618 +
           (C19535 * C1725 - C50060 * C1729) * C38614) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + (C21788 - C21787) * C38618 +
            (C21790 - C21789) * C38614) *
               C50211 * C50125 * C248 +
           ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50125 * C249 +
           (C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
            C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
            (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
               C50211 * C50125 * C250) *
              C251 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + (C21806 - C21805) * C38618 +
            (C21808 - C21807) * C38614) *
               C50211 * C50125 * C248 +
           ((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
            C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
            C22330 * C38613 + (C21809 - C21810) * C38618 +
            (C21811 - C21812) * C38614) *
               C50211 * C50125 * C249 +
           (C19671 * C38615 + C19672 * C38611 + C30770 * C38616 +
            C30771 * C38612 + (C21628 - C21627) * C38617 +
            (C21630 - C21629) * C38613 +
            (C19535 * C4435 - C50060 * C4441) * C38618 +
            (C19535 * C4443 - C50060 * C4447) * C38614) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C391 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C392 +
           (C21813 * C38615 + C21814 * C38611 + C38816 * C38616 +
            C38817 * C38612 + (C23625 - C23626) * C38617 +
            (C23627 - C23628) * C38613 +
            (C50060 * C7206 - C19535 * C7204) * C38618 +
            (C50060 * C7210 - C19535 * C7208) * C38614) *
               C50211 * C393) *
              C50109 * C251 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C391 +
           ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
            (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
            (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
            (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
               C50211 * C392 +
           (C21815 * C38615 + C21816 * C38611 + C38818 * C38616 +
            C38819 * C38612 + (C38821 - C38820) * C38617 +
            (C38823 - C38822) * C38613 +
            (C19535 * C7205 - C50060 * C7207) * C38618 +
            (C19535 * C7209 - C50060 * C7211) * C38614) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50352 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
             C22734 * C50286) *
                C2161) *
               C50189) *
              C50109 * C50394 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50352 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50189) *
              C50109 * C50395 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50352 +
           (((C22118 - C22117) * C33285 + (C22120 - C22119) * C33283 +
             (C22122 - C22121) * C33286 + (C22124 - C22123) * C50286) *
                C2159 +
            ((C21964 - C21963) * C33285 + (C21966 - C21965) * C33283 +
             (C21968 - C21967) * C33286 + (C21970 - C21969) * C50286) *
                C2160 +
            ((C31073 - C31072) * C33285 + (C31075 - C31074) * C33283 +
             (C19535 * C2536 - C50060 * C2541) * C33286 +
             (C19535 * C2542 - C50060 * C2545) * C50286) *
                C2161) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50352 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50352 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C50352 +
           ((C33921 - C33920 + C33923 - C33922 + C33925 - C33924) * C33285 +
            (C33927 - C33926 + C33929 - C33928 + C33931 - C33930) * C33283 +
            (C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
             C16813 * C403 - C16808 * C422) *
                C33286 +
            (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
             C16813 * C423 - C16808 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50352 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C50352 +
           ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
            (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
            (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
            (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C50060 * C131 - C19535 * C124) * C38615 +
            (C50060 * C145 - C19535 * C135) * C38611 +
            (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
            (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
            (C39020 - C39021) * C38618 + (C39022 - C39023) * C38614) *
               C50211 * C50352 +
           ((C22118 - C22117) * C38615 + (C22120 - C22119) * C38611 +
            (C22122 - C22121) * C38616 + (C22124 - C22123) * C38612 +
            (C39021 - C39020) * C38617 + (C39023 - C39022) * C38613 +
            (C19535 * C5332 - C50060 * C5337) * C38618 +
            (C19535 * C5338 - C50060 * C5341) * C38614) *
               C50211 * C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
             C16808 * C406 - C16813 * C396) *
                C33286 +
            (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
             C16808 * C426 - C16813 * C410) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C249 +
           ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50125 * C250) *
              C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
             C16813 * C397 - C16808 * C407) *
                C33286 +
            (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
             C16813 * C411 - C16808 * C427) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C249 +
           ((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C33285 +
            (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C33283 +
            (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 - C16807 * C1436 +
             C16813 * C1433 - C16808 * C1437) *
                C33286 +
            (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 - C16807 * C1444 +
             C16813 * C1441 - C16808 * C1445) *
                C50286) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
            C16808 * C406 - C16813 * C396) *
               C33286 +
           (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
            C16808 * C426 - C16813 * C410) *
               C50286) *
              C50211 * C50125 * C50109 * C113 +
          ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
            C16813 * C125 - C16808 * C132) *
               C33285 +
           (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
            C16813 * C136 - C16808 * C146) *
               C33283 +
           (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
            C16813 * C397 - C16808 * C407) *
               C33286 +
           (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
            C16813 * C411 - C16808 * C427) *
               C50286) *
              C50211 * C50125 * C50109 * C114 +
          ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
            C16808 * C137 - C16813 * C126) *
               C33285 +
           (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
            C16808 * C147 - C16813 * C138) *
               C33283 +
           (C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
            C16808 * C420 - C16813 * C402) *
               C33286 +
           (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
            C16808 * C432 - C16813 * C421) *
               C50286) *
              C50211 * C50125 * C50109 * C115 +
          ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
            C16813 * C127 - C16808 * C139) *
               C33285 +
           (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
            C16813 * C140 - C16808 * C148) *
               C33283 +
           (C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
            C16813 * C641 - C16808 * C642) *
               C33286 +
           (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
            C16813 * C643 - C16808 * C644) *
               C50286) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           (C19667 * C33285 + C19668 * C33283 + C23225 * C33286 +
            C23226 * C50286) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C33285 +
            (C19535 * C134 - C50060 * C144) * C33283 +
            (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
               C2159 +
           ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
            C22325 * C33286 + C22326 * C50286) *
               C2160 +
           (C19671 * C33285 + C19672 * C33283 + C30770 * C33286 +
            C30771 * C50286) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C33285 +
            (C50060 * C145 - C19535 * C135) * C33283 +
            (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
               C2159 +
           ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
            (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
               C2160 +
           ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
            (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C33285 +
            (C19535 * C136 - C50060 * C146) * C33283 +
            (C19535 * C397 - C50060 * C407) * C33286 +
            (C19535 * C411 - C50060 * C427) * C50286) *
               C2159 +
           ((C19535 * C256 - C50060 * C266) * C33285 +
            (C19535 * C270 - C50060 * C286) * C33283 +
            (C19535 * C778 - C50060 * C783) * C33286 +
            (C19535 * C787 - C50060 * C793) * C50286) *
               C2160 +
           ((C19535 * C260 - C50060 * C274) * C33285 +
            (C19535 * C278 - C50060 * C290) * C33283 +
            (C19535 * C1433 - C50060 * C1437) * C33286 +
            (C19535 * C1441 - C50060 * C1445) * C50286) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C248 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C249 +
           (C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C248 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C249 +
           (C36147 * C2159 +
            (C19673 * C33285 + C19674 * C33283 + (C20144 - C20143) * C33286 +
             (C20146 - C20145) * C50286) *
                C2160 +
            ((C19664 - C19663) * C33285 + (C19666 - C19665) * C33283 +
             (C19535 * C4018 - C50060 * C4020) * C33286 +
             (C19535 * C4022 - C50060 * C4024) * C50286) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50060 * C129 - C19535 * C122) * C38615 +
           (C50060 * C143 - C19535 * C133) * C38611 +
           (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
           C21813 * C38617 + C21814 * C38613 + (C21788 - C21787) * C38618 +
           (C21790 - C21789) * C38614) *
              C50211 * C50125 * C50109 * C113 +
          ((C19535 * C123 - C50060 * C130) * C38615 +
           (C19535 * C134 - C50060 * C144) * C38611 +
           (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
           C21815 * C38617 + C21816 * C38613 + (C21806 - C21805) * C38618 +
           (C21808 - C21807) * C38614) *
              C50211 * C50125 * C50109 * C114 +
          ((C50060 * C131 - C19535 * C124) * C38615 +
           (C50060 * C145 - C19535 * C135) * C38611 +
           (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
           (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
           (C50060 * C1720 - C19535 * C1716) * C38618 +
           (C50060 * C1728 - C19535 * C1724) * C38614) *
              C50211 * C50125 * C50109 * C115 +
          ((C19535 * C125 - C50060 * C132) * C38615 +
           (C19535 * C136 - C50060 * C146) * C38611 +
           (C19535 * C397 - C50060 * C407) * C38616 +
           (C19535 * C411 - C50060 * C427) * C38612 +
           (C19535 * C401 - C50060 * C415) * C38617 +
           (C19535 * C419 - C50060 * C431) * C38613 +
           (C19535 * C1717 - C50060 * C1721) * C38618 +
           (C19535 * C1725 - C50060 * C1729) * C38614) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + (C21788 - C21787) * C38618 +
            (C21790 - C21789) * C38614) *
               C50211 * C50125 * C248 +
           ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50125 * C249 +
           (C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
            C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
            (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
               C50211 * C50125 * C250) *
              C251 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + (C21806 - C21805) * C38618 +
            (C21808 - C21807) * C38614) *
               C50211 * C50125 * C248 +
           ((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
            C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
            C22330 * C38613 + (C21809 - C21810) * C38618 +
            (C21811 - C21812) * C38614) *
               C50211 * C50125 * C249 +
           (C19671 * C38615 + C19672 * C38611 + C30770 * C38616 +
            C30771 * C38612 + (C21628 - C21627) * C38617 +
            (C21630 - C21629) * C38613 +
            (C19535 * C4435 - C50060 * C4441) * C38618 +
            (C19535 * C4443 - C50060 * C4447) * C38614) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C50396 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C50125 * C50397 +
           (C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50125 * C1199) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C50396 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50397 +
           (C36147 * C2159 +
            (C19673 * C33285 + C19674 * C33283 + (C20144 - C20143) * C33286 +
             (C20146 - C20145) * C50286) *
                C2160 +
            ((C19664 - C19663) * C33285 + (C19666 - C19665) * C33283 +
             (C19535 * C4018 - C50060 * C4020) * C33286 +
             (C19535 * C4022 - C50060 * C4024) * C50286) *
                C2161) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C50396 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50397 +
           ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C50396 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50397 +
           ((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C33285 +
            (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C33283 +
            (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 - C16807 * C1436 +
             C16813 * C1433 - C16808 * C1437) *
                C33286 +
            (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 - C16807 * C1444 +
             C16813 * C1441 - C16808 * C1445) *
                C50286) *
               C50211 * C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50125 * C50396 +
           ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50125 * C50397 +
           (C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
            C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
            (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C50125 * C50396 +
           ((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
            C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
            C22330 * C38613 + (C21809 - C21810) * C38618 +
            (C21811 - C21812) * C38614) *
               C50211 * C50125 * C50397 +
           (C19671 * C38615 + C19672 * C38611 + C30770 * C38616 +
            C30771 * C38612 + (C21628 - C21627) * C38617 +
            (C21630 - C21629) * C38613 +
            (C19535 * C4435 - C50060 * C4441) * C38618 +
            (C19535 * C4443 - C50060 * C4447) * C38614) *
               C50211 * C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50352 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C50396 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C50352 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50189) *
              C50397 +
          ((C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50352 +
           (C37669 * C2159 +
            (C20775 * C33285 + C20776 * C33283 + (C20440 - C20439) * C33286 +
             (C20442 - C20441) * C50286) *
                C2160 +
            ((C20778 - C20777) * C33285 + (C20780 - C20779) * C33283 +
             (C19535 * C20426 - C50060 * C20427) * C33286 +
             (C19535 * C20428 - C50060 * C20429) * C50286) *
                C2161) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50352 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50396 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50352 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50189) *
              C50397 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50352 +
           ((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C33285 +
            (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C33283 +
            (C16811 * C2534 - C16806 * C2537 + C16812 * C2535 - C16807 * C2538 +
             C16813 * C2536 - C16808 * C2541) *
                C33286 +
            (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 - C16807 * C2544 +
             C16813 * C2542 - C16808 * C2545) *
                C50286) *
               C50211 * C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50352 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C50189) *
              C50396 +
          (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50352 +
           (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
            C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
            (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
               C50211 * C50189) *
              C50397 +
          ((C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
            C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
            (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
               C50211 * C50352 +
           (C20773 * C38615 + C20774 * C38611 + C22733 * C38616 +
            C22734 * C38612 + (C22736 - C22735) * C38617 +
            (C22738 - C22737) * C38613 +
            (C19535 * C22720 - C50060 * C22721) * C38618 +
            (C19535 * C22722 - C50060 * C22723) * C38614) *
               C50211 * C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C33285 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C33283 +
                (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
                (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) *
                    C50286) *
                   C50211 * C50125 * C893 +
               ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
                (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
                (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
                (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) *
                    C50286) *
                   C50211 * C50125 * C50161) *
                  C895 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C33285 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C33283 +
                (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
                (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) *
                    C50286) *
                   C50211 * C50125 * C893 +
               ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
                (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
                (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
                (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) *
                    C50286) *
                   C50211 * C50125 * C50161) *
                  C896 +
              (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                 C16808 * C137 - C16813 * C126) *
                    C33285 +
                (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                 C16808 * C147 - C16813 * C138) *
                    C33283 +
                (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
                (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) *
                    C50286) *
                   C50211 * C50125 * C893 +
               ((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C33285 +
                (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C33283 +
                (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
                 C16813 * C779 - C16808 * C788) *
                    C33286 +
                (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
                 C16813 * C789 - C16808 * C794) *
                    C50286) *
                   C50211 * C50125 * C50161) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                C16808 * C131 - C16813 * C124) *
                   C33285 +
               (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                C16808 * C145 - C16813 * C135) *
                   C33283 +
               (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
               (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                  C50211 * C50125 * C964 +
              ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
               (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
               (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
               (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                  C50211 * C50125 * C965 +
              ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
               (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
               (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
               (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
                  C50211 * C50125 * C966 +
              ((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C33285 +
               (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C33283 +
               (C16811 * C3048 - C16806 * C3051 + C16812 * C3049 -
                C16807 * C3052 + C16813 * C3050 - C16808 * C3055) *
                   C33286 +
               (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 -
                C16807 * C3058 + C16813 * C3056 - C16808 * C3059) *
                   C50286) *
                  C50211 * C50125 * C967) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C391 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C392 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C16806 * C1718 - C16811 * C1714 + C16807 * C1719 - C16812 * C1715 +
             C16808 * C1720 - C16813 * C1716) *
                C33286 +
            (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 - C16812 * C1723 +
             C16808 * C1728 - C16813 * C1724) *
                C50286) *
               C50211 * C393) *
              C893 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C391 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C392 +
           ((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C33285 +
            (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C33283 +
            (C16811 * C4432 - C16806 * C4436 + C16812 * C4433 - C16807 * C4437 +
             C16813 * C5904 - C16808 * C5905) *
                C33286 +
            (C16811 * C4438 - C16806 * C4444 + C16812 * C4439 - C16807 * C4445 +
             C16813 * C5906 - C16808 * C5907) *
                C50286) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C893 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C893 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50125 * C893 +
           (((C19884 - C19883) * C33285 + (C19886 - C19885) * C33283 +
             (C21964 - C21963) * C33286 + (C21966 - C21965) * C50286) *
                C2159 +
            ((C19888 - C19887) * C33285 + (C19890 - C19889) * C33283 +
             (C31073 - C31072) * C33286 + (C31075 - C31074) * C50286) *
                C2160 +
            ((C19892 - C19891) * C33285 + (C19894 - C19893) * C33283 +
             (C19535 * C3050 - C50060 * C3055) * C33286 +
             (C19535 * C3056 - C50060 * C3059) * C50286) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           C36146 * C2161) *
              C50125 * C964 +
          (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
            C22321 * C33286 + C22322 * C50286) *
               C2159 +
           ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
            C20773 * C33286 + C20774 * C50286) *
               C2160 +
           C37030 * C2161) *
              C50125 * C965 +
          (C36146 * C2159 +
           (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
            C32306 * C50286) *
               C2160 +
           ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
            (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
               C2161) *
              C50125 * C966 +
          (C37030 * C2159 +
           (C20317 * C33285 + C20318 * C33283 + (C20778 - C20777) * C33286 +
            (C20780 - C20779) * C50286) *
               C2160 +
           ((C20320 - C20319) * C33285 + (C20322 - C20321) * C33283 +
            (C19535 * C20768 - C50060 * C20769) * C33286 +
            (C19535 * C20770 - C50060 * C20771) * C50286) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C391 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
             C22734 * C50286) *
                C2161) *
               C392 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C393) *
              C893 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C391 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C392 +
           ((C22323 * C33285 + C22324 * C33283 + C22725 * C33286 +
             C22726 * C50286) *
                C2159 +
            (C22733 * C33285 + C22734 * C33283 + (C22736 - C22735) * C33286 +
             (C22738 - C22737) * C50286) *
                C2160 +
            ((C20440 - C20439) * C33285 + (C20442 - C20441) * C33283 +
             (C19535 * C21048 - C50060 * C21049) * C33286 +
             (C19535 * C21050 - C50060 * C21051) * C50286) *
                C2161) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50125 * C893 +
           ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C50125 * C893 +
           ((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
            C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
            C22330 * C38613 + (C21809 - C21810) * C38618 +
            (C21811 - C21812) * C38614) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C50060 * C131 - C19535 * C124) * C38615 +
            (C50060 * C145 - C19535 * C135) * C38611 +
            (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
            (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
            (C39020 - C39021) * C38618 + (C39022 - C39023) * C38614) *
               C50211 * C50125 * C893 +
           ((C19884 - C19883) * C38615 + (C19886 - C19885) * C38611 +
            (C21964 - C21963) * C38616 + (C21966 - C21965) * C38612 +
            (C21968 - C21967) * C38617 + (C21970 - C21969) * C38613 +
            (C19535 * C5904 - C50060 * C5905) * C38618 +
            (C19535 * C5906 - C50060 * C5907) * C38614) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50060 * C129 - C19535 * C122) * C38615 +
           (C50060 * C143 - C19535 * C133) * C38611 +
           (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
           C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
           C38817 * C38614) *
              C50211 * C50125 * C964 +
          ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
           C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
           C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
              C50211 * C50125 * C965 +
          (C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
           C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
           (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
              C50211 * C50125 * C966 +
          (C20315 * C38615 + C20316 * C38611 + C20775 * C38616 +
           C20776 * C38612 + (C20440 - C20439) * C38617 +
           (C20442 - C20441) * C38613 +
           (C19535 * C21048 - C50060 * C21049) * C38618 +
           (C19535 * C21050 - C50060 * C21051) * C38614) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C391 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C392 +
           (C21813 * C38615 + C21814 * C38611 + C38816 * C38616 +
            C38817 * C38612 + (C23625 - C23626) * C38617 +
            (C23627 - C23628) * C38613 +
            (C50060 * C7206 - C19535 * C7204) * C38618 +
            (C50060 * C7210 - C19535 * C7208) * C38614) *
               C50211 * C393) *
              C893 +
          (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C391 +
           (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
            C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
            (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
               C50211 * C392 +
           (C22323 * C38615 + C22324 * C38611 + C22725 * C38616 +
            C22726 * C38612 + (C22730 - C22729) * C38617 +
            (C22732 - C22731) * C38613 +
            (C19535 * C23618 - C50060 * C23619) * C38618 +
            (C19535 * C23620 - C50060 * C23621) * C38614) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C33285 +
              (C50060 * C143 - C19535 * C133) * C33283 +
              (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                 C2159 +
             ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
              C22319 * C33286 + C22320 * C50286) *
                 C2160 +
             C36146 * C2161) *
                C50352 +
            (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
              (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                 C2159 +
             (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
              C22324 * C50286) *
                 C2160 +
             (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
              C22734 * C50286) *
                 C2161) *
                C50189) *
               C893 +
           ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
              C22321 * C33286 + C22322 * C50286) *
                 C2159 +
             ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
              C20773 * C33286 + C20774 * C50286) *
                 C2160 +
             C37030 * C2161) *
                C50352 +
            ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
              C21786 * C50286) *
                 C2159 +
             (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
              C23228 * C50286) *
                 C2160 +
             (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
              (C20441 - C20442) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C33285 +
              (C19535 * C134 - C50060 * C144) * C33283 +
              (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                 C2159 +
             ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
              C22325 * C33286 + C22326 * C50286) *
                 C2160 +
             C36147 * C2161) *
                C50352 +
            (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
              (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                 C2159 +
             (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
              C22330 * C50286) *
                 C2160 +
             (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
              (C21629 - C21630) * C50286) *
                 C2161) *
                C50189) *
               C893 +
           ((((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
              C22327 * C33286 + C22328 * C50286) *
                 C2159 +
             ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
              C31416 * C33286 + C31417 * C50286) *
                 C2160 +
             ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
              (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                 C2161) *
                C50352 +
            ((C22325 * C33285 + C22326 * C33283 + C21803 * C33286 +
              C21804 * C50286) *
                 C2159 +
             (C30770 * C33285 + C30771 * C33283 + (C21628 - C21627) * C33286 +
              (C21630 - C21629) * C50286) *
                 C2160 +
             ((C20144 - C20143) * C33285 + (C20146 - C20145) * C33283 +
              (C19535 * C3508 - C50060 * C3510) * C33286 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C33285 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C33283 +
             (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
             (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                C50211 * C50352 +
            ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
             (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
             (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
             (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
                C50211 * C50189) *
               C893 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
             (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                C50211 * C50352 +
            ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
             (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C33285 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C33283 +
             (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
             (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
                C50211 * C50352 +
            ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
             (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
             (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
             (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
                C50211 * C50189) *
               C893 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
             (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
                C50211 * C50352 +
            ((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C33285 +
             (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C33283 +
             (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C33286 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C38615 +
             (C50060 * C143 - C19535 * C133) * C38611 +
             (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
             C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
             C38817 * C38614) *
                C50211 * C50352 +
            ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
             (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
             C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
             (C23628 - C23627) * C38614) *
                C50211 * C50189) *
               C893 +
           (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
             C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
             C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
                C50211 * C50352 +
            (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
             C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
             (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C38615 +
             (C19535 * C134 - C50060 * C144) * C38611 +
             (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
             C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
             C38819 * C38614) *
                C50211 * C50352 +
            ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
             (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
             (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
             (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
                C50211 * C50189) *
               C893 +
           (((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
             C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
             C22330 * C38613 + (C21809 - C21810) * C38618 +
             (C21811 - C21812) * C38614) *
                C50211 * C50352 +
            (C22325 * C38615 + C22326 * C38611 + C21803 * C38616 +
             C21804 * C38612 + (C21810 - C21809) * C38617 +
             (C21812 - C21811) * C38613 +
             (C19535 * C6307 - C50060 * C6309) * C38618 +
             (C19535 * C6311 - C50060 * C6313) * C38614) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
           (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
              C50211 * C50125 * C964 +
          ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
           (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
           (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
           (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
              C50211 * C50125 * C965 +
          ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
           (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
           (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
           (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
              C50211 * C50125 * C966 +
          ((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C33285 +
           (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C33283 +
           (C16811 * C3048 - C16806 * C3051 + C16812 * C3049 - C16807 * C3052 +
            C16813 * C3050 - C16808 * C3055) *
               C33286 +
           (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 - C16807 * C3058 +
            C16813 * C3056 - C16808 * C3059) *
               C50286) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C893 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C893 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C50125 * C893 +
           ((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C33285 +
            (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C33283 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C33286 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C893 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C893 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50125 * C893 +
           (((C19884 - C19883) * C33285 + (C19886 - C19885) * C33283 +
             (C21964 - C21963) * C33286 + (C21966 - C21965) * C50286) *
                C2159 +
            ((C19888 - C19887) * C33285 + (C19890 - C19889) * C33283 +
             (C31073 - C31072) * C33286 + (C31075 - C31074) * C50286) *
                C2160 +
            ((C19892 - C19891) * C33285 + (C19894 - C19893) * C33283 +
             (C19535 * C3050 - C50060 * C3055) * C33286 +
             (C19535 * C3056 - C50060 * C3059) * C50286) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           C36146 * C2161) *
              C50125 * C964 +
          (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
            C22321 * C33286 + C22322 * C50286) *
               C2159 +
           ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
            C20773 * C33286 + C20774 * C50286) *
               C2160 +
           C37030 * C2161) *
              C50125 * C965 +
          (C36146 * C2159 +
           (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
            C32306 * C50286) *
               C2160 +
           ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
            (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
               C2161) *
              C50125 * C966 +
          (C37030 * C2159 +
           (C20317 * C33285 + C20318 * C33283 + (C20778 - C20777) * C33286 +
            (C20780 - C20779) * C50286) *
               C2160 +
           ((C20320 - C20319) * C33285 + (C20322 - C20321) * C33283 +
            (C19535 * C20768 - C50060 * C20769) * C33286 +
            (C19535 * C20770 - C50060 * C20771) * C50286) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50125 * C893 +
           ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C50125 * C893 +
           ((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
            C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
            C22330 * C38613 + (C21809 - C21810) * C38618 +
            (C21811 - C21812) * C38614) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C50060 * C131 - C19535 * C124) * C38615 +
            (C50060 * C145 - C19535 * C135) * C38611 +
            (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
            (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
            (C39020 - C39021) * C38618 + (C39022 - C39023) * C38614) *
               C50211 * C50125 * C893 +
           ((C19884 - C19883) * C38615 + (C19886 - C19885) * C38611 +
            (C21964 - C21963) * C38616 + (C21966 - C21965) * C38612 +
            (C21968 - C21967) * C38617 + (C21970 - C21969) * C38613 +
            (C19535 * C5904 - C50060 * C5905) * C38618 +
            (C19535 * C5906 - C50060 * C5907) * C38614) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50060 * C129 - C19535 * C122) * C38615 +
           (C50060 * C143 - C19535 * C133) * C38611 +
           (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
           C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
           C38817 * C38614) *
              C50211 * C50125 * C964 +
          ((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
           C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
           C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
              C50211 * C50125 * C965 +
          (C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
           C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
           (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
              C50211 * C50125 * C966 +
          (C20315 * C38615 + C20316 * C38611 + C20775 * C38616 +
           C20776 * C38612 + (C20440 - C20439) * C38617 +
           (C20442 - C20441) * C38613 +
           (C19535 * C21048 - C50060 * C21049) * C38618 +
           (C19535 * C21050 - C50060 * C21051) * C38614) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C33285 +
              (C50060 * C143 - C19535 * C133) * C33283 +
              (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                 C2159 +
             ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
              C22319 * C33286 + C22320 * C50286) *
                 C2160 +
             C36146 * C2161) *
                C1544 +
            (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
              (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                 C2159 +
             (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
              C22324 * C50286) *
                 C2160 +
             C37669 * C2161) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
              C22321 * C33286 + C22322 * C50286) *
                 C2159 +
             ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
              C20773 * C33286 + C20774 * C50286) *
                 C2160 +
             C37030 * C2161) *
                C1544 +
            ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
              C21786 * C50286) *
                 C2159 +
             (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
              C23228 * C50286) *
                 C2160 +
             (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
              (C20441 - C20442) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C33285 +
              (C19535 * C134 - C50060 * C144) * C33283 +
              (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                 C2159 +
             ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
              C22325 * C33286 + C22326 * C50286) *
                 C2160 +
             C36147 * C2161) *
                C1544 +
            (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
              (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                 C2159 +
             (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
              C22330 * C50286) *
                 C2160 +
             (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
              (C21629 - C21630) * C50286) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
              C22327 * C33286 + C22328 * C50286) *
                 C2159 +
             ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
              C31416 * C33286 + C31417 * C50286) *
                 C2160 +
             ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
              (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                 C2161) *
                C1544 +
            ((C22325 * C33285 + C22326 * C33283 + C21803 * C33286 +
              C21804 * C50286) *
                 C2159 +
             (C30770 * C33285 + C30771 * C33283 + (C21628 - C21627) * C33286 +
              (C21630 - C21629) * C50286) *
                 C2160 +
             ((C20144 - C20143) * C33285 + (C20146 - C20145) * C33283 +
              (C19535 * C3508 - C50060 * C3510) * C33286 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C33285 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C33283 +
             (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
             (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                C50211 * C1544 +
            ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
             (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
             (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
             (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
             (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                C50211 * C1544 +
            ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
             (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C33285 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C33283 +
             (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
             (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
                C50211 * C1544 +
            ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
             (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
             (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
             (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
             (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
                C50211 * C1544 +
            ((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C33285 +
             (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C33283 +
             (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C33286 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C38615 +
             (C50060 * C143 - C19535 * C133) * C38611 +
             (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
             C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
             C38817 * C38614) *
                C50211 * C1544 +
            ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
             (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
             C23623 * C38617 + C23624 * C38613 + C40008 * C38618 +
             C40009 * C38614) *
                C50211 * C50189) *
               C50351 +
           (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
             C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
             C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
                C50211 * C1544 +
            (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
             C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
             (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C38615 +
             (C19535 * C134 - C50060 * C144) * C38611 +
             (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
             C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
             C38819 * C38614) *
                C50211 * C1544 +
            ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
             (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
             (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
             (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
                C50211 * C50189) *
               C50351 +
           (((C19652 - C19651) * C38615 + (C19654 - C19653) * C38611 +
             C22327 * C38616 + C22328 * C38612 + C22329 * C38617 +
             C22330 * C38613 + (C21809 - C21810) * C38618 +
             (C21811 - C21812) * C38614) *
                C50211 * C1544 +
            (C22325 * C38615 + C22326 * C38611 + C21803 * C38616 +
             C21804 * C38612 + (C21810 - C21809) * C38617 +
             (C21812 - C21811) * C38613 +
             (C19535 * C6307 - C50060 * C6309) * C38618 +
             (C19535 * C6311 - C50060 * C6313) * C38614) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50398 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50399 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C1960) *
              C50351 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C50398 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50399 +
           ((C22323 * C33285 + C22324 * C33283 + C22725 * C33286 +
             C22726 * C50286) *
                C2159 +
            (C22733 * C33285 + C22734 * C33283 + (C22736 - C22735) * C33286 +
             (C22738 - C22737) * C50286) *
                C2160 +
            ((C20440 - C20439) * C33285 + (C20442 - C20441) * C33283 +
             (C19535 * C21048 - C50060 * C21049) * C33286 +
             (C19535 * C21050 - C50060 * C21051) * C50286) *
                C2161) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50398 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50399 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C35392 - C35393 + C35394 - C35395 + C35396 - C35397) * C33286 +
            (C35398 - C35399 + C35400 - C35401 + C35402 - C35403) * C50286) *
               C50211 * C1960) *
              C50351 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50398 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50399 +
           ((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C33285 +
            (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C33283 +
            (C16811 * C4432 - C16806 * C4436 + C16812 * C4433 - C16807 * C4437 +
             C16813 * C5904 - C16808 * C5905) *
                C33286 +
            (C16811 * C4438 - C16806 * C4444 + C16812 * C4439 - C16807 * C4445 +
             C16813 * C5906 - C16808 * C5907) *
                C50286) *
               C50211 * C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50398 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + C40008 * C38618 +
            C40009 * C38614) *
               C50211 * C50399 +
           (C21813 * C38615 + C21814 * C38611 + C38816 * C38616 +
            C38817 * C38612 + (C23625 - C23626) * C38617 +
            (C23627 - C23628) * C38613 + (C40010 - C40011) * C38618 +
            (C40012 - C40013) * C38614) *
               C50211 * C1960) *
              C50351 +
          (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C50398 +
           (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
            C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
            (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
               C50211 * C50399 +
           (C22323 * C38615 + C22324 * C38611 + C22725 * C38616 +
            C22726 * C38612 + (C22730 - C22729) * C38617 +
            (C22732 - C22731) * C38613 +
            (C19535 * C23618 - C50060 * C23619) * C38618 +
            (C19535 * C23620 - C50060 * C23621) * C38614) *
               C50211 * C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C33285 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C33283 +
                (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
                (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) *
                    C50286) *
                   C50211 * C1544 +
               ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
                (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
                (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
                (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) *
                    C50286) *
                   C50211 * C50189) *
                  C50109 * C895 +
              (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
                 C16813 * C125 - C16808 * C132) *
                    C33285 +
                (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
                 C16813 * C136 - C16808 * C146) *
                    C33283 +
                (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
                (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) *
                    C50286) *
                   C50211 * C1544 +
               ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
                (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
                (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
                (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) *
                    C50286) *
                   C50211 * C50189) *
                  C50109 * C896 +
              (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
                 C16808 * C137 - C16813 * C126) *
                    C33285 +
                (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
                 C16808 * C147 - C16813 * C138) *
                    C33283 +
                (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
                (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) *
                    C50286) *
                   C50211 * C1544 +
               ((C33921 - C33920 + C33923 - C33922 + C33925 - C33924) * C33285 +
                (C33927 - C33926 + C33929 - C33928 + C33931 - C33930) * C33283 +
                (C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
                 C16813 * C403 - C16808 * C422) *
                    C33286 +
                (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
                 C16813 * C423 - C16808 * C433) *
                    C50286) *
                   C50211 * C50189) *
                  C50109 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
                 C16808 * C131 - C16813 * C124) *
                    C33285 +
                (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
                 C16808 * C145 - C16813 * C135) *
                    C33283 +
                (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
                (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) *
                    C50286) *
                   C50211 * C1544 +
               ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
                (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
                (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
                (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) *
                    C50286) *
                   C50211 * C50189) *
                  C248 +
              (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
                (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
                (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
                (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) *
                    C50286) *
                   C50211 * C1544 +
               ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
                (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
                (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
                (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) *
                    C50286) *
                   C50211 * C50189) *
                  C249 +
              (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
                (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
                (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
                (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) *
                    C50286) *
                   C50211 * C1544 +
               ((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C33285 +
                (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C33283 +
                (C16811 * C2534 - C16806 * C2537 + C16812 * C2535 -
                 C16807 * C2538 + C16813 * C2536 - C16808 * C2541) *
                    C33286 +
                (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 -
                 C16807 * C2544 + C16813 * C2542 - C16808 * C2545) *
                    C50286) *
                   C50211 * C50189) *
                  C250) *
             C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
           (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
              C50211 * C1710 +
          ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
           (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
           (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
           (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
              C50211 * C1711 +
          ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
           (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
           (C35392 - C35393 + C35394 - C35395 + C35396 - C35397) * C33286 +
           (C35398 - C35399 + C35400 - C35401 + C35402 - C35403) * C50286) *
              C50211 * C1712 +
          ((C35393 - C35392 + C35395 - C35394 + C35397 - C35396) * C33285 +
           (C35399 - C35398 + C35401 - C35400 + C35403 - C35402) * C33283 +
           (C16811 * C5330 - C16806 * C5333 + C16812 * C5331 - C16807 * C5334 +
            C16813 * C5332 - C16808 * C5337) *
               C33286 +
           (C16811 * C5335 - C16806 * C5339 + C16812 * C5336 - C16807 * C5340 +
            C16813 * C5338 - C16808 * C5341) *
               C50286) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C1544 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C1544 +
           (((C22118 - C22117) * C33285 + (C22120 - C22119) * C33283 +
             (C22122 - C22121) * C33286 + (C22124 - C22123) * C50286) *
                C2159 +
            ((C21964 - C21963) * C33285 + (C21966 - C21965) * C33283 +
             (C21968 - C21967) * C33286 + (C21970 - C21969) * C50286) *
                C2160 +
            ((C31073 - C31072) * C33285 + (C31075 - C31074) * C33283 +
             (C19535 * C2536 - C50060 * C2541) * C33286 +
             (C19535 * C2542 - C50060 * C2545) * C50286) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C1544 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50189) *
              C249 +
          ((C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C1544 +
           (C37669 * C2159 +
            (C20775 * C33285 + C20776 * C33283 + (C20440 - C20439) * C33286 +
             (C20442 - C20441) * C50286) *
                C2160 +
            ((C20778 - C20777) * C33285 + (C20780 - C20779) * C33283 +
             (C19535 * C20426 - C50060 * C20427) * C33286 +
             (C19535 * C20428 - C50060 * C20429) * C50286) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           C36146 * C2161) *
              C1710 +
          (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
            (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
               C2159 +
           (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
            C22324 * C50286) *
               C2160 +
           C37669 * C2161) *
              C1711 +
          ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
            (C21790 - C21789) * C50286) *
               C2159 +
           (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
            C22728 * C50286) *
               C2160 +
           (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
            (C22737 - C22738) * C50286) *
               C2161) *
              C1712 +
          ((C23623 * C33285 + C23624 * C33283 + (C23626 - C23625) * C33286 +
            (C23628 - C23627) * C50286) *
               C2159 +
           (C22725 * C33285 + C22726 * C33283 + (C22730 - C22729) * C33286 +
            (C22732 - C22731) * C50286) *
               C2160 +
           ((C22736 - C22735) * C33285 + (C22738 - C22737) * C33283 +
            (C19535 * C22720 - C50060 * C22721) * C33286 +
            (C19535 * C22722 - C50060 * C22723) * C50286) *
               C2161) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C1544 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C1544 +
           ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
            (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
            (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
            (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C50060 * C131 - C19535 * C124) * C38615 +
            (C50060 * C145 - C19535 * C135) * C38611 +
            (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
            (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
            (C39020 - C39021) * C38618 + (C39022 - C39023) * C38614) *
               C50211 * C1544 +
           ((C22118 - C22117) * C38615 + (C22120 - C22119) * C38611 +
            (C22122 - C22121) * C38616 + (C22124 - C22123) * C38612 +
            (C39021 - C39020) * C38617 + (C39023 - C39022) * C38613 +
            (C19535 * C5332 - C50060 * C5337) * C38618 +
            (C19535 * C5338 - C50060 * C5341) * C38614) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C1544 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C50189) *
              C248 +
          (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C1544 +
           (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
            C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
            (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
               C50211 * C50189) *
              C249 +
          ((C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
            C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
            (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
               C50211 * C1544 +
           (C20773 * C38615 + C20774 * C38611 + C22733 * C38616 +
            C22734 * C38612 + (C22736 - C22735) * C38617 +
            (C22738 - C22737) * C38613 +
            (C19535 * C22720 - C50060 * C22721) * C38618 +
            (C19535 * C22722 - C50060 * C22723) * C38614) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C50060 * C129 - C19535 * C122) * C38615 +
           (C50060 * C143 - C19535 * C133) * C38611 +
           (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
           C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
           C38817 * C38614) *
              C50211 * C1710 +
          ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
           (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
           C23623 * C38617 + C23624 * C38613 + C40008 * C38618 +
           C40009 * C38614) *
              C50211 * C1711 +
          (C21813 * C38615 + C21814 * C38611 + C38816 * C38616 +
           C38817 * C38612 + (C23625 - C23626) * C38617 +
           (C23627 - C23628) * C38613 + (C40010 - C40011) * C38618 +
           (C40012 - C40013) * C38614) *
              C50211 * C1712 +
          (C23623 * C38615 + C23624 * C38611 + C40008 * C38616 +
           C40009 * C38612 + (C40011 - C40010) * C38617 +
           (C40013 - C40012) * C38613 +
           (C19535 * C40003 - C50060 * C40004) * C38618 +
           (C19535 * C40005 - C50060 * C40006) * C38614) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50398 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50399 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C1960) *
              C50109 * C50343 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50398 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50399 +
           ((C21815 * C33285 + C21816 * C33283 + (C21806 - C21805) * C33286 +
             (C21808 - C21807) * C50286) *
                C2159 +
            (C21803 * C33285 + C21804 * C33283 + (C21810 - C21809) * C33286 +
             (C21812 - C21811) * C50286) *
                C2160 +
            ((C21628 - C21627) * C33285 + (C21630 - C21629) * C33283 +
             (C19535 * C4435 - C50060 * C4441) * C33286 +
             (C19535 * C4443 - C50060 * C4447) * C50286) *
                C2161) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50398 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50399 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C35392 - C35393 + C35394 - C35395 + C35396 - C35397) * C33286 +
            (C35398 - C35399 + C35400 - C35401 + C35402 - C35403) * C50286) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50398 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50399 +
           ((C33617 - C33616 + C33619 - C33618 + C33621 - C33620) * C33285 +
            (C33623 - C33622 + C33625 - C33624 + C33627 - C33626) * C33283 +
            (C16811 * C1715 - C16806 * C1719 + C16812 * C1716 - C16807 * C1720 +
             C16813 * C1717 - C16808 * C1721) *
                C33286 +
            (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 - C16807 * C1728 +
             C16813 * C1725 - C16808 * C1729) *
                C50286) *
               C50211 * C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C50398 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + C40008 * C38618 +
            C40009 * C38614) *
               C50211 * C50399 +
           (C21813 * C38615 + C21814 * C38611 + C38816 * C38616 +
            C38817 * C38612 + (C23625 - C23626) * C38617 +
            (C23627 - C23628) * C38613 + (C40010 - C40011) * C38618 +
            (C40012 - C40013) * C38614) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C50398 +
           ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
            (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
            (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
            (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
               C50211 * C50399 +
           (C21815 * C38615 + C21816 * C38611 + C38818 * C38616 +
            C38819 * C38612 + (C38821 - C38820) * C38617 +
            (C38823 - C38822) * C38613 +
            (C19535 * C7205 - C50060 * C7207) * C38618 +
            (C19535 * C7209 - C50060 * C7211) * C38614) *
               C50211 * C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C1544 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C248 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C1544 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50189) *
              C249 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C1544 +
           ((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C33285 +
            (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C33283 +
            (C16811 * C2534 - C16806 * C2537 + C16812 * C2535 - C16807 * C2538 +
             C16813 * C2536 - C16808 * C2541) *
                C33286 +
            (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 - C16807 * C2544 +
             C16813 * C2542 - C16808 * C2545) *
                C50286) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C1544 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C1544 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C1544 +
           ((C33921 - C33920 + C33923 - C33922 + C33925 - C33924) * C33285 +
            (C33927 - C33926 + C33929 - C33928 + C33931 - C33930) * C33283 +
            (C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
             C16813 * C403 - C16808 * C422) *
                C33286 +
            (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
             C16813 * C423 - C16808 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C1544 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C1544 +
           (((C22118 - C22117) * C33285 + (C22120 - C22119) * C33283 +
             (C22122 - C22121) * C33286 + (C22124 - C22123) * C50286) *
                C2159 +
            ((C21964 - C21963) * C33285 + (C21966 - C21965) * C33283 +
             (C21968 - C21967) * C33286 + (C21970 - C21969) * C50286) *
                C2160 +
            ((C31073 - C31072) * C33285 + (C31075 - C31074) * C33283 +
             (C19535 * C2536 - C50060 * C2541) * C33286 +
             (C19535 * C2542 - C50060 * C2545) * C50286) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C1544 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50189) *
              C249 +
          ((C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C1544 +
           (C37669 * C2159 +
            (C20775 * C33285 + C20776 * C33283 + (C20440 - C20439) * C33286 +
             (C20442 - C20441) * C50286) *
                C2160 +
            ((C20778 - C20777) * C33285 + (C20780 - C20779) * C33283 +
             (C19535 * C20426 - C50060 * C20427) * C33286 +
             (C19535 * C20428 - C50060 * C20429) * C50286) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C1544 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C19535 * C123 - C50060 * C130) * C38615 +
            (C19535 * C134 - C50060 * C144) * C38611 +
            (C21795 - C21796) * C38616 + (C21797 - C21798) * C38612 +
            C21815 * C38617 + C21816 * C38613 + C38818 * C38618 +
            C38819 * C38614) *
               C50211 * C1544 +
           ((C21796 - C21795) * C38615 + (C21798 - C21797) * C38611 +
            (C21800 - C21799) * C38616 + (C21802 - C21801) * C38612 +
            (C21805 - C21806) * C38617 + (C21807 - C21808) * C38613 +
            (C38820 - C38821) * C38618 + (C38822 - C38823) * C38614) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C50060 * C131 - C19535 * C124) * C38615 +
            (C50060 * C145 - C19535 * C135) * C38611 +
            (C22117 - C22118) * C38616 + (C22119 - C22120) * C38612 +
            (C22121 - C22122) * C38617 + (C22123 - C22124) * C38613 +
            (C39020 - C39021) * C38618 + (C39022 - C39023) * C38614) *
               C50211 * C1544 +
           ((C22118 - C22117) * C38615 + (C22120 - C22119) * C38611 +
            (C22122 - C22121) * C38616 + (C22124 - C22123) * C38612 +
            (C39021 - C39020) * C38617 + (C39023 - C39022) * C38613 +
            (C19535 * C5332 - C50060 * C5337) * C38618 +
            (C19535 * C5338 - C50060 * C5341) * C38614) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C38615 +
            (C50060 * C143 - C19535 * C133) * C38611 +
            (C21777 - C21778) * C38616 + (C21779 - C21780) * C38612 +
            C21813 * C38617 + C21814 * C38613 + C38816 * C38618 +
            C38817 * C38614) *
               C50211 * C1544 +
           ((C21778 - C21777) * C38615 + (C21780 - C21779) * C38611 +
            (C21782 - C21781) * C38616 + (C21784 - C21783) * C38612 +
            C23623 * C38617 + C23624 * C38613 + (C23626 - C23625) * C38618 +
            (C23628 - C23627) * C38614) *
               C50211 * C50189) *
              C248 +
          (((C19636 - C19635) * C38615 + (C19638 - C19637) * C38611 +
            C22321 * C38616 + C22322 * C38612 + C22323 * C38617 +
            C22324 * C38613 + C22725 * C38618 + C22726 * C38614) *
               C50211 * C1544 +
           (C22319 * C38615 + C22320 * C38611 + C21785 * C38616 +
            C21786 * C38612 + C22727 * C38617 + C22728 * C38613 +
            (C22729 - C22730) * C38618 + (C22731 - C22732) * C38614) *
               C50211 * C50189) *
              C249 +
          ((C19667 * C38615 + C19668 * C38611 + C23225 * C38616 +
            C23226 * C38612 + C23227 * C38617 + C23228 * C38613 +
            (C22735 - C22736) * C38618 + (C22737 - C22738) * C38614) *
               C50211 * C1544 +
           (C20773 * C38615 + C20774 * C38611 + C22733 * C38616 +
            C22734 * C38612 + (C22736 - C22735) * C38617 +
            (C22738 - C22737) * C38613 +
            (C19535 * C22720 - C50060 * C22721) * C38618 +
            (C19535 * C22722 - C50060 * C22723) * C38614) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50125 * C50351 +
           ((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C50125 * C50351 +
           ((C24391 - C24390 + C24393 - C24392) * C43932 +
            (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
            C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
            (C27468 - C27469 + C27470 - C27471) * C43931) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C43932 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50402 +
            (C27868 - C27869 + C27870 - C27871) * C43933 +
            (C27872 - C27873 + C27874 - C27875) * C50403 +
            (C50336 * C414 - C49173 * C400 + C50065 * C415 - C49166 * C401) *
                C43934 +
            (C50336 * C430 - C49173 * C418 + C50065 * C431 - C49166 * C419) *
                C43931) *
               C50211 * C50125 * C50351 +
           ((C24725 - C24724 + C24727 - C24726) * C43932 +
            (C24729 - C24728 + C24731 - C24730) * C50402 +
            (C27667 - C27666 + C27669 - C27668) * C43933 +
            (C27671 - C27670 + C27673 - C27672) * C50403 +
            (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
             C50065 * C1090) *
                C43934 +
            (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
             C50065 * C1098) *
                C43931) *
               C50211 * C50125 * C50161) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C43932 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50402 +
             (C27432 - C27433 + C27434 - C27435) * C43933 +
             (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
             C44245 * C43931) *
                C50211 * C50352 +
            ((C27433 - C27432 + C27435 - C27434) * C43932 +
             (C27437 - C27436 + C27439 - C27438) * C50402 +
             (C27440 - C27441 + C27442 - C27443) * C43933 +
             (C27444 - C27445 + C27446 - C27447) * C50403 +
             (C29867 - C29866 + C29869 - C29868) * C43934 +
             (C29871 - C29870 + C29873 - C29872) * C43931) *
                C50211 * C50189) *
               C50351 +
           (((C24367 - C24366 + C24369 - C24368) * C43932 +
             (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
             C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
                C50211 * C50352 +
            (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
             C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
             (C28688 - C28689 + C28690 - C28691) * C43931) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C43932 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50402 +
             (C27448 - C27449 + C27450 - C27451) * C43933 +
             (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
             C44247 * C43931) *
                C50211 * C50352 +
            ((C27449 - C27448 + C27451 - C27450) * C43932 +
             (C27453 - C27452 + C27455 - C27454) * C50402 +
             (C27456 - C27457 + C27458 - C27459) * C43933 +
             (C27460 - C27461 + C27462 - C27463) * C50403 +
             (C44236 - C44237 + C44238 - C44239) * C43934 +
             (C44240 - C44241 + C44242 - C44243) * C43931) *
                C50211 * C50189) *
               C50351 +
           (((C24391 - C24390 + C24393 - C24392) * C43932 +
             (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
             C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
             (C27468 - C27469 + C27470 - C27471) * C43931) *
                C50211 * C50352 +
            (C28154 * C43932 + C28155 * C50402 +
             (C27465 - C27464 + C27467 - C27466) * C43933 +
             (C27469 - C27468 + C27471 - C27470) * C50403 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C43934 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C43931) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 +
            (C27441 - C27440 + C27443 - C27442) * C43934 +
            (C27445 - C27444 + C27447 - C27446) * C43931) *
               C50211 * C50125 * C248 +
           ((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50125 * C249 +
           (C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
            C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
            (C25531 - C25532 + C25533 - C25534) * C43931) *
               C50211 * C50125 * C250) *
              C251 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 +
            (C27457 - C27456 + C27459 - C27458) * C43934 +
            (C27461 - C27460 + C27463 - C27462) * C43931) *
               C50211 * C50125 * C248 +
           ((C24391 - C24390 + C24393 - C24392) * C43932 +
            (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
            C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
            (C27468 - C27469 + C27470 - C27471) * C43931) *
               C50211 * C50125 * C249 +
           (C24424 * C43932 + C24425 * C50402 +
            (C25105 - C25104 + C25107 - C25106) * C43933 +
            (C25109 - C25108 + C25111 - C25110) * C50403 +
            (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
             C50065 * C2541) *
                C43934 +
            (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
             C50065 * C2545) *
                C43931) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
               C43932 +
           (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
               C50402 +
           (C27432 - C27433 + C27434 - C27435) * C43933 +
           (C27436 - C27437 + C27438 - C27439) * C50403 +
           (C27441 - C27440 + C27443 - C27442) * C43934 +
           (C27445 - C27444 + C27447 - C27446) * C43931) *
              C50211 * C50125 * C50109 * C113 +
          ((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
               C43932 +
           (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
               C50402 +
           (C27448 - C27449 + C27450 - C27451) * C43933 +
           (C27452 - C27453 + C27454 - C27455) * C50403 +
           (C27457 - C27456 + C27459 - C27458) * C43934 +
           (C27461 - C27460 + C27463 - C27462) * C43931) *
              C50211 * C50125 * C50109 * C114 +
          ((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
               C43932 +
           (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
               C50402 +
           (C27868 - C27869 + C27870 - C27871) * C43933 +
           (C27872 - C27873 + C27874 - C27875) * C50403 +
           (C50336 * C414 - C49173 * C400 + C50065 * C415 - C49166 * C401) *
               C43934 +
           (C50336 * C430 - C49173 * C418 + C50065 * C431 - C49166 * C419) *
               C43931) *
              C50211 * C50125 * C50109 * C115 +
          ((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
               C43932 +
           (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
               C50402 +
           (C49173 * C397 - C50336 * C407 + C49166 * C402 - C50065 * C420) *
               C43933 +
           (C49173 * C411 - C50336 * C427 + C49166 * C421 - C50065 * C432) *
               C50403 +
           (C49173 * C401 - C50336 * C415 + C49166 * C403 - C50065 * C422) *
               C43934 +
           (C49173 * C419 - C50336 * C431 + C49166 * C423 - C50065 * C433) *
               C43931) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C391 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C392 +
           (C44244 * C43932 + C44245 * C50402 +
            (C29866 - C29867 + C29868 - C29869) * C43933 +
            (C29870 - C29871 + C29872 - C29873) * C50403 +
            (C50336 * C5333 - C49173 * C5330 + C50065 * C5334 -
             C49166 * C5331) *
                C43934 +
            (C50336 * C5339 - C49173 * C5335 + C50065 * C5340 -
             C49166 * C5336) *
                C43931) *
               C50211 * C393) *
              C50109 * C251 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C391 +
           ((C27449 - C27448 + C27451 - C27450) * C43932 +
            (C27453 - C27452 + C27455 - C27454) * C50402 +
            (C27456 - C27457 + C27458 - C27459) * C43933 +
            (C27460 - C27461 + C27462 - C27463) * C50403 +
            (C44236 - C44237 + C44238 - C44239) * C43934 +
            (C44240 - C44241 + C44242 - C44243) * C43931) *
               C50211 * C392 +
           (C44246 * C43932 + C44247 * C50402 +
            (C44237 - C44236 + C44239 - C44238) * C43933 +
            (C44241 - C44240 + C44243 - C44242) * C50403 +
            (C49173 * C5331 - C50336 * C5334 + C49166 * C5332 -
             C50065 * C5337) *
                C43934 +
            (C49173 * C5336 - C50336 * C5340 + C49166 * C5338 -
             C50065 * C5341) *
                C43931) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50352 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C50352 +
           ((C27449 - C27448 + C27451 - C27450) * C43932 +
            (C27453 - C27452 + C27455 - C27454) * C50402 +
            (C27456 - C27457 + C27458 - C27459) * C43933 +
            (C27460 - C27461 + C27462 - C27463) * C50403 +
            (C44236 - C44237 + C44238 - C44239) * C43934 +
            (C44240 - C44241 + C44242 - C44243) * C43931) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C43932 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50402 +
            (C27868 - C27869 + C27870 - C27871) * C43933 +
            (C27872 - C27873 + C27874 - C27875) * C50403 +
            (C44540 - C44541 + C44542 - C44543) * C43934 +
            (C44544 - C44545 + C44546 - C44547) * C43931) *
               C50211 * C50352 +
           ((C27869 - C27868 + C27871 - C27870) * C43932 +
            (C27873 - C27872 + C27875 - C27874) * C50402 +
            (C44541 - C44540 + C44543 - C44542) * C43933 +
            (C44545 - C44544 + C44547 - C44546) * C50403 +
            (C49173 * C1716 - C50336 * C1720 + C49166 * C1717 -
             C50065 * C1721) *
                C43934 +
            (C49173 * C1724 - C50336 * C1728 + C49166 * C1725 -
             C50065 * C1729) *
                C43931) *
               C50211 * C50189) *
              C50109 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
               C43932 +
           (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
               C50402 +
           (C27432 - C27433 + C27434 - C27435) * C43933 +
           (C27436 - C27437 + C27438 - C27439) * C50403 +
           (C27441 - C27440 + C27443 - C27442) * C43934 +
           (C27445 - C27444 + C27447 - C27446) * C43931) *
              C50211 * C50125 * C50109 * C113 +
          ((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
               C43932 +
           (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
               C50402 +
           (C27448 - C27449 + C27450 - C27451) * C43933 +
           (C27452 - C27453 + C27454 - C27455) * C50403 +
           (C27457 - C27456 + C27459 - C27458) * C43934 +
           (C27461 - C27460 + C27463 - C27462) * C43931) *
              C50211 * C50125 * C50109 * C114 +
          ((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
               C43932 +
           (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
               C50402 +
           (C27868 - C27869 + C27870 - C27871) * C43933 +
           (C27872 - C27873 + C27874 - C27875) * C50403 +
           (C50336 * C414 - C49173 * C400 + C50065 * C415 - C49166 * C401) *
               C43934 +
           (C50336 * C430 - C49173 * C418 + C50065 * C431 - C49166 * C419) *
               C43931) *
              C50211 * C50125 * C50109 * C115 +
          ((C49173 * C125 - C50336 * C132 + C49166 * C126 - C50065 * C137) *
               C43932 +
           (C49173 * C136 - C50336 * C146 + C49166 * C138 - C50065 * C147) *
               C50402 +
           (C49173 * C397 - C50336 * C407 + C49166 * C402 - C50065 * C420) *
               C43933 +
           (C49173 * C411 - C50336 * C427 + C49166 * C421 - C50065 * C432) *
               C50403 +
           (C49173 * C401 - C50336 * C415 + C49166 * C403 - C50065 * C422) *
               C43934 +
           (C49173 * C419 - C50336 * C431 + C49166 * C423 - C50065 * C433) *
               C43931) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 +
            (C27441 - C27440 + C27443 - C27442) * C43934 +
            (C27445 - C27444 + C27447 - C27446) * C43931) *
               C50211 * C50125 * C248 +
           ((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50125 * C249 +
           (C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
            C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
            (C25531 - C25532 + C25533 - C25534) * C43931) *
               C50211 * C50125 * C250) *
              C251 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 +
            (C27457 - C27456 + C27459 - C27458) * C43934 +
            (C27461 - C27460 + C27463 - C27462) * C43931) *
               C50211 * C50125 * C248 +
           ((C24391 - C24390 + C24393 - C24392) * C43932 +
            (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
            C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
            (C27468 - C27469 + C27470 - C27471) * C43931) *
               C50211 * C50125 * C249 +
           (C24424 * C43932 + C24425 * C50402 +
            (C25105 - C25104 + C25107 - C25106) * C43933 +
            (C25109 - C25108 + C25111 - C25110) * C50403 +
            (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
             C50065 * C2541) *
                C43934 +
            (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
             C50065 * C2545) *
                C43931) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50125 * C50396 +
           ((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50125 * C50397 +
           (C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
            C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
            (C25531 - C25532 + C25533 - C25534) * C43931) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C50125 * C50396 +
           ((C24391 - C24390 + C24393 - C24392) * C43932 +
            (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
            C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
            (C27468 - C27469 + C27470 - C27471) * C43931) *
               C50211 * C50125 * C50397 +
           (C24424 * C43932 + C24425 * C50402 +
            (C25105 - C25104 + C25107 - C25106) * C43933 +
            (C25109 - C25108 + C25111 - C25110) * C50403 +
            (C49173 * C2535 - C50336 * C2538 + C49166 * C2536 -
             C50065 * C2541) *
                C43934 +
            (C49173 * C2540 - C50336 * C2544 + C49166 * C2542 -
             C50065 * C2545) *
                C43931) *
               C50211 * C50125 * C1199) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50352 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C50189) *
              C50396 +
          (((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50352 +
           (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
            C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
            (C28688 - C28689 + C28690 - C28691) * C43931) *
               C50211 * C50189) *
              C50397 +
          ((C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
            C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
            (C25531 - C25532 + C25533 - C25534) * C43931) *
               C50211 * C50352 +
           (C26033 * C43932 + C26034 * C50402 +
            (C25528 - C25527 + C25530 - C25529) * C43933 +
            (C25532 - C25531 + C25534 - C25533) * C50403 +
            (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
             C50065 * C4441) *
                C43934 +
            (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
             C50065 * C4447) *
                C43931) *
               C50211 * C50189) *
              C1199) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
               C43932 +
           (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
               C50402 +
           (C27432 - C27433 + C27434 - C27435) * C43933 +
           (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
           C44245 * C43931) *
              C50211 * C50125 * C964 +
          ((C24367 - C24366 + C24369 - C24368) * C43932 +
           (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
           C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
              C50211 * C50125 * C965 +
          (C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
           C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
           (C25531 - C25532 + C25533 - C25534) * C43931) *
              C50211 * C50125 * C966 +
          (C25368 * C43932 + C25369 * C50402 +
           (C26026 - C26025 + C26028 - C26027) * C43933 +
           (C26030 - C26029 + C26032 - C26031) * C50403 +
           (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 - C50065 * C3510) *
               C43934 +
           (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 - C50065 * C3514) *
               C43931) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50125 * C893 +
           ((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C50125 * C893 +
           ((C24391 - C24390 + C24393 - C24392) * C43932 +
            (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
            C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
            (C27468 - C27469 + C27470 - C27471) * C43931) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C43932 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50402 +
            (C27868 - C27869 + C27870 - C27871) * C43933 +
            (C27872 - C27873 + C27874 - C27875) * C50403 +
            (C44540 - C44541 + C44542 - C44543) * C43934 +
            (C44544 - C44545 + C44546 - C44547) * C43931) *
               C50211 * C50125 * C893 +
           ((C24725 - C24724 + C24727 - C24726) * C43932 +
            (C24729 - C24728 + C24731 - C24730) * C50402 +
            (C27667 - C27666 + C27669 - C27668) * C43933 +
            (C27671 - C27670 + C27673 - C27672) * C50403 +
            (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
             C50065 * C1090) *
                C43934 +
            (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
             C50065 * C1098) *
                C43931) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C391 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C392 +
           (C44244 * C43932 + C44245 * C50402 +
            (C29866 - C29867 + C29868 - C29869) * C43933 +
            (C29870 - C29871 + C29872 - C29873) * C50403 +
            (C50336 * C5333 - C49173 * C5330 + C50065 * C5334 -
             C49166 * C5331) *
                C43934 +
            (C50336 * C5339 - C49173 * C5335 + C50065 * C5340 -
             C49166 * C5336) *
                C43931) *
               C50211 * C393) *
              C893 +
          (((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C391 +
           (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
            C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
            (C28688 - C28689 + C28690 - C28691) * C43931) *
               C50211 * C392 +
           (C28692 * C43932 + C28693 * C50402 +
            (C28685 - C28684 + C28687 - C28686) * C43933 +
            (C28689 - C28688 + C28691 - C28690) * C50403 +
            (C49173 * C6306 - C50336 * C6308 + C49166 * C6307 -
             C50065 * C6309) *
                C43934 +
            (C49173 * C6310 - C50336 * C6312 + C49166 * C6311 -
             C50065 * C6313) *
                C43931) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C43932 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50402 +
             (C27432 - C27433 + C27434 - C27435) * C43933 +
             (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
             C44245 * C43931) *
                C50211 * C50352 +
            ((C27433 - C27432 + C27435 - C27434) * C43932 +
             (C27437 - C27436 + C27439 - C27438) * C50402 +
             (C27440 - C27441 + C27442 - C27443) * C43933 +
             (C27444 - C27445 + C27446 - C27447) * C50403 +
             (C29867 - C29866 + C29869 - C29868) * C43934 +
             (C29871 - C29870 + C29873 - C29872) * C43931) *
                C50211 * C50189) *
               C893 +
           (((C24367 - C24366 + C24369 - C24368) * C43932 +
             (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
             C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
                C50211 * C50352 +
            (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
             C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
             (C28688 - C28689 + C28690 - C28691) * C43931) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C43932 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50402 +
             (C27448 - C27449 + C27450 - C27451) * C43933 +
             (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
             C44247 * C43931) *
                C50211 * C50352 +
            ((C27449 - C27448 + C27451 - C27450) * C43932 +
             (C27453 - C27452 + C27455 - C27454) * C50402 +
             (C27456 - C27457 + C27458 - C27459) * C43933 +
             (C27460 - C27461 + C27462 - C27463) * C50403 +
             (C44236 - C44237 + C44238 - C44239) * C43934 +
             (C44240 - C44241 + C44242 - C44243) * C43931) *
                C50211 * C50189) *
               C893 +
           (((C24391 - C24390 + C24393 - C24392) * C43932 +
             (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
             C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
             (C27468 - C27469 + C27470 - C27471) * C43931) *
                C50211 * C50352 +
            (C28154 * C43932 + C28155 * C50402 +
             (C27465 - C27464 + C27467 - C27466) * C43933 +
             (C27469 - C27468 + C27471 - C27470) * C50403 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C43934 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C43931) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50125 * C893 +
           ((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C50125 * C893 +
           ((C24391 - C24390 + C24393 - C24392) * C43932 +
            (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
            C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
            (C27468 - C27469 + C27470 - C27471) * C43931) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C43932 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50402 +
            (C27868 - C27869 + C27870 - C27871) * C43933 +
            (C27872 - C27873 + C27874 - C27875) * C50403 +
            (C44540 - C44541 + C44542 - C44543) * C43934 +
            (C44544 - C44545 + C44546 - C44547) * C43931) *
               C50211 * C50125 * C893 +
           ((C24725 - C24724 + C24727 - C24726) * C43932 +
            (C24729 - C24728 + C24731 - C24730) * C50402 +
            (C27667 - C27666 + C27669 - C27668) * C43933 +
            (C27671 - C27670 + C27673 - C27672) * C50403 +
            (C49173 * C1085 - C50336 * C1089 + C49166 * C1086 -
             C50065 * C1090) *
                C43934 +
            (C49173 * C1093 - C50336 * C1097 + C49166 * C1094 -
             C50065 * C1098) *
                C43931) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
               C43932 +
           (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
               C50402 +
           (C27432 - C27433 + C27434 - C27435) * C43933 +
           (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
           C44245 * C43931) *
              C50211 * C50125 * C964 +
          ((C24367 - C24366 + C24369 - C24368) * C43932 +
           (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
           C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
              C50211 * C50125 * C965 +
          (C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
           C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
           (C25531 - C25532 + C25533 - C25534) * C43931) *
              C50211 * C50125 * C966 +
          (C25368 * C43932 + C25369 * C50402 +
           (C26026 - C26025 + C26028 - C26027) * C43933 +
           (C26030 - C26029 + C26032 - C26031) * C50403 +
           (C49173 * C3507 - C50336 * C3509 + C49166 * C3508 - C50065 * C3510) *
               C43934 +
           (C49173 * C3511 - C50336 * C3513 + C49166 * C3512 - C50065 * C3514) *
               C43931) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                 C43932 +
             (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                 C50402 +
             (C27432 - C27433 + C27434 - C27435) * C43933 +
             (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
             C44245 * C43931) *
                C50211 * C1544 +
            ((C27433 - C27432 + C27435 - C27434) * C43932 +
             (C27437 - C27436 + C27439 - C27438) * C50402 +
             (C27440 - C27441 + C27442 - C27443) * C43933 +
             (C27444 - C27445 + C27446 - C27447) * C50403 + C46020 * C43934 +
             C46021 * C43931) *
                C50211 * C50189) *
               C50351 +
           (((C24367 - C24366 + C24369 - C24368) * C43932 +
             (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
             C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
                C50211 * C1544 +
            (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
             C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
             (C28688 - C28689 + C28690 - C28691) * C43931) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                 C43932 +
             (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                 C50402 +
             (C27448 - C27449 + C27450 - C27451) * C43933 +
             (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
             C44247 * C43931) *
                C50211 * C1544 +
            ((C27449 - C27448 + C27451 - C27450) * C43932 +
             (C27453 - C27452 + C27455 - C27454) * C50402 +
             (C27456 - C27457 + C27458 - C27459) * C43933 +
             (C27460 - C27461 + C27462 - C27463) * C50403 +
             (C44236 - C44237 + C44238 - C44239) * C43934 +
             (C44240 - C44241 + C44242 - C44243) * C43931) *
                C50211 * C50189) *
               C50351 +
           (((C24391 - C24390 + C24393 - C24392) * C43932 +
             (C24395 - C24394 + C24397 - C24396) * C50402 + C28156 * C43933 +
             C28157 * C50403 + (C27464 - C27465 + C27466 - C27467) * C43934 +
             (C27468 - C27469 + C27470 - C27471) * C43931) *
                C50211 * C1544 +
            (C28154 * C43932 + C28155 * C50402 +
             (C27465 - C27464 + C27467 - C27466) * C43933 +
             (C27469 - C27468 + C27471 - C27470) * C50403 +
             (C49173 * C4433 - C50336 * C4437 + C49166 * C5904 -
              C50065 * C5905) *
                 C43934 +
             (C49173 * C4439 - C50336 * C4445 + C49166 * C5906 -
              C50065 * C5907) *
                 C43931) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50398 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 + C46020 * C43934 +
            C46021 * C43931) *
               C50211 * C50399 +
           (C44244 * C43932 + C44245 * C50402 +
            (C29866 - C29867 + C29868 - C29869) * C43933 +
            (C29870 - C29871 + C29872 - C29873) * C50403 +
            (C46012 - C46013 + C46014 - C46015) * C43934 +
            (C46016 - C46017 + C46018 - C46019) * C43931) *
               C50211 * C1960) *
              C50351 +
          (((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C50398 +
           (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
            C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
            (C28688 - C28689 + C28690 - C28691) * C43931) *
               C50211 * C50399 +
           (C28692 * C43932 + C28693 * C50402 +
            (C28685 - C28684 + C28687 - C28686) * C43933 +
            (C28689 - C28688 + C28691 - C28690) * C50403 +
            (C49173 * C6306 - C50336 * C6308 + C49166 * C6307 -
             C50065 * C6309) *
                C43934 +
            (C49173 * C6310 - C50336 * C6312 + C49166 * C6311 -
             C50065 * C6313) *
                C43931) *
               C50211 * C1960) *
              C50161) *
         C50090) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C1544 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C50189) *
              C248 +
          (((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C1544 +
           (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
            C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
            (C28688 - C28689 + C28690 - C28691) * C43931) *
               C50211 * C50189) *
              C249 +
          ((C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
            C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
            (C25531 - C25532 + C25533 - C25534) * C43931) *
               C50211 * C1544 +
           (C26033 * C43932 + C26034 * C50402 +
            (C25528 - C25527 + C25530 - C25529) * C43933 +
            (C25532 - C25531 + C25534 - C25533) * C50403 +
            (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
             C50065 * C4441) *
                C43934 +
            (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
             C50065 * C4447) *
                C43931) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C1544 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C1544 +
           ((C27449 - C27448 + C27451 - C27450) * C43932 +
            (C27453 - C27452 + C27455 - C27454) * C50402 +
            (C27456 - C27457 + C27458 - C27459) * C43933 +
            (C27460 - C27461 + C27462 - C27463) * C50403 +
            (C44236 - C44237 + C44238 - C44239) * C43934 +
            (C44240 - C44241 + C44242 - C44243) * C43931) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C43932 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50402 +
            (C27868 - C27869 + C27870 - C27871) * C43933 +
            (C27872 - C27873 + C27874 - C27875) * C50403 +
            (C44540 - C44541 + C44542 - C44543) * C43934 +
            (C44544 - C44545 + C44546 - C44547) * C43931) *
               C50211 * C1544 +
           ((C27869 - C27868 + C27871 - C27870) * C43932 +
            (C27873 - C27872 + C27875 - C27874) * C50402 +
            (C44541 - C44540 + C44543 - C44542) * C43933 +
            (C44545 - C44544 + C44547 - C44546) * C50403 +
            (C49173 * C1716 - C50336 * C1720 + C49166 * C1717 -
             C50065 * C1721) *
                C43934 +
            (C49173 * C1724 - C50336 * C1728 + C49166 * C1725 -
             C50065 * C1729) *
                C43931) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
               C43932 +
           (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
               C50402 +
           (C27432 - C27433 + C27434 - C27435) * C43933 +
           (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
           C44245 * C43931) *
              C50211 * C1710 +
          ((C27433 - C27432 + C27435 - C27434) * C43932 +
           (C27437 - C27436 + C27439 - C27438) * C50402 +
           (C27440 - C27441 + C27442 - C27443) * C43933 +
           (C27444 - C27445 + C27446 - C27447) * C50403 + C46020 * C43934 +
           C46021 * C43931) *
              C50211 * C1711 +
          (C44244 * C43932 + C44245 * C50402 +
           (C29866 - C29867 + C29868 - C29869) * C43933 +
           (C29870 - C29871 + C29872 - C29873) * C50403 +
           (C46012 - C46013 + C46014 - C46015) * C43934 +
           (C46016 - C46017 + C46018 - C46019) * C43931) *
              C50211 * C1712 +
          (C46020 * C43932 + C46021 * C50402 +
           (C46013 - C46012 + C46015 - C46014) * C43933 +
           (C46017 - C46016 + C46019 - C46018) * C50403 +
           (C49173 * C7204 - C50336 * C7206 + C49166 * C7205 - C50065 * C7207) *
               C43934 +
           (C49173 * C7208 - C50336 * C7210 + C49166 * C7209 - C50065 * C7211) *
               C43931) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C50398 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 + C46020 * C43934 +
            C46021 * C43931) *
               C50211 * C50399 +
           (C44244 * C43932 + C44245 * C50402 +
            (C29866 - C29867 + C29868 - C29869) * C43933 +
            (C29870 - C29871 + C29872 - C29873) * C50403 +
            (C46012 - C46013 + C46014 - C46015) * C43934 +
            (C46016 - C46017 + C46018 - C46019) * C43931) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C50398 +
           ((C27449 - C27448 + C27451 - C27450) * C43932 +
            (C27453 - C27452 + C27455 - C27454) * C50402 +
            (C27456 - C27457 + C27458 - C27459) * C43933 +
            (C27460 - C27461 + C27462 - C27463) * C50403 +
            (C44236 - C44237 + C44238 - C44239) * C43934 +
            (C44240 - C44241 + C44242 - C44243) * C43931) *
               C50211 * C50399 +
           (C44246 * C43932 + C44247 * C50402 +
            (C44237 - C44236 + C44239 - C44238) * C43933 +
            (C44241 - C44240 + C44243 - C44242) * C50403 +
            (C49173 * C5331 - C50336 * C5334 + C49166 * C5332 -
             C50065 * C5337) *
                C43934 +
            (C49173 * C5336 - C50336 * C5340 + C49166 * C5338 -
             C50065 * C5341) *
                C43931) *
               C50211 * C1960) *
              C50109 * C50096)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C1544 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C49173 * C123 - C50336 * C130 + C49166 * C124 - C50065 * C131) *
                C43932 +
            (C49173 * C134 - C50336 * C144 + C49166 * C135 - C50065 * C145) *
                C50402 +
            (C27448 - C27449 + C27450 - C27451) * C43933 +
            (C27452 - C27453 + C27454 - C27455) * C50403 + C44246 * C43934 +
            C44247 * C43931) *
               C50211 * C1544 +
           ((C27449 - C27448 + C27451 - C27450) * C43932 +
            (C27453 - C27452 + C27455 - C27454) * C50402 +
            (C27456 - C27457 + C27458 - C27459) * C43933 +
            (C27460 - C27461 + C27462 - C27463) * C50403 +
            (C44236 - C44237 + C44238 - C44239) * C43934 +
            (C44240 - C44241 + C44242 - C44243) * C43931) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C50336 * C131 - C49173 * C124 + C50065 * C132 - C49166 * C125) *
                C43932 +
            (C50336 * C145 - C49173 * C135 + C50065 * C146 - C49166 * C136) *
                C50402 +
            (C27868 - C27869 + C27870 - C27871) * C43933 +
            (C27872 - C27873 + C27874 - C27875) * C50403 +
            (C44540 - C44541 + C44542 - C44543) * C43934 +
            (C44544 - C44545 + C44546 - C44547) * C43931) *
               C50211 * C1544 +
           ((C27869 - C27868 + C27871 - C27870) * C43932 +
            (C27873 - C27872 + C27875 - C27874) * C50402 +
            (C44541 - C44540 + C44543 - C44542) * C43933 +
            (C44545 - C44544 + C44547 - C44546) * C50403 +
            (C49173 * C1716 - C50336 * C1720 + C49166 * C1717 -
             C50065 * C1721) *
                C43934 +
            (C49173 * C1724 - C50336 * C1728 + C49166 * C1725 -
             C50065 * C1729) *
                C43931) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50336 * C129 - C49173 * C122 + C50065 * C130 - C49166 * C123) *
                C43932 +
            (C50336 * C143 - C49173 * C133 + C50065 * C144 - C49166 * C134) *
                C50402 +
            (C27432 - C27433 + C27434 - C27435) * C43933 +
            (C27436 - C27437 + C27438 - C27439) * C50403 + C44244 * C43934 +
            C44245 * C43931) *
               C50211 * C1544 +
           ((C27433 - C27432 + C27435 - C27434) * C43932 +
            (C27437 - C27436 + C27439 - C27438) * C50402 +
            (C27440 - C27441 + C27442 - C27443) * C43933 +
            (C27444 - C27445 + C27446 - C27447) * C50403 +
            (C29867 - C29866 + C29869 - C29868) * C43934 +
            (C29871 - C29870 + C29873 - C29872) * C43931) *
               C50211 * C50189) *
              C248 +
          (((C24367 - C24366 + C24369 - C24368) * C43932 +
            (C24371 - C24370 + C24373 - C24372) * C50402 + C28152 * C43933 +
            C28153 * C50403 + C28692 * C43934 + C28693 * C43931) *
               C50211 * C1544 +
           (C28150 * C43932 + C28151 * C50402 + C28694 * C43933 +
            C28695 * C50403 + (C28684 - C28685 + C28686 - C28687) * C43934 +
            (C28688 - C28689 + C28690 - C28691) * C43931) *
               C50211 * C50189) *
              C249 +
          ((C24422 * C43932 + C24423 * C50402 + C29346 * C43933 +
            C29347 * C50403 + (C25527 - C25528 + C25529 - C25530) * C43934 +
            (C25531 - C25532 + C25533 - C25534) * C43931) *
               C50211 * C1544 +
           (C26033 * C43932 + C26034 * C50402 +
            (C25528 - C25527 + C25530 - C25529) * C43933 +
            (C25532 - C25531 + C25534 - C25533) * C50403 +
            (C49173 * C4434 - C50336 * C4440 + C49166 * C4435 -
             C50065 * C4441) *
                C43934 +
            (C49173 * C4442 - C50336 * C4446 + C49166 * C4443 -
             C50065 * C4447) *
                C43931) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C50351 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50161) *
              C50394 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C50351 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50161) *
              C50395 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
             C16808 * C420 - C16813 * C402) *
                C33286 +
            (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
             C16808 * C432 - C16813 * C421) *
                C50286) *
               C50211 * C50125 * C50351 +
           ((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C33285 +
            (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C33283 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C33286 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C50351 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C50161) *
              C50394 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C50351 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50161) *
              C50395 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50125 * C50351 +
           (((C19884 - C19883) * C33285 + (C19886 - C19885) * C33283 +
             (C21964 - C21963) * C33286 + (C21966 - C21965) * C50286) *
                C2159 +
            ((C19888 - C19887) * C33285 + (C19890 - C19889) * C33283 +
             (C31073 - C31072) * C33286 + (C31075 - C31074) * C50286) *
                C2160 +
            ((C19892 - C19891) * C33285 + (C19894 - C19893) * C33283 +
             (C19535 * C3050 - C50060 * C3055) * C33286 +
             (C19535 * C3056 - C50060 * C3059) * C50286) *
                C2161) *
               C50125 * C50161) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C33285 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C33283 +
             (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
             (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                C50211 * C50352 +
            ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
             (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
             (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
             (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
             (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                C50211 * C50352 +
            ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
             (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
                C50211 * C50189) *
               C50161) *
              C251 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C33285 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C33283 +
             (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
             (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
                C50211 * C50352 +
            ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
             (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
             (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
             (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
             (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
                C50211 * C50352 +
            ((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C33285 +
             (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C33283 +
             (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C33286 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C33285 +
              (C50060 * C143 - C19535 * C133) * C33283 +
              (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                 C2159 +
             ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
              C22319 * C33286 + C22320 * C50286) *
                 C2160 +
             C36146 * C2161) *
                C50352 +
            (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
              (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                 C2159 +
             (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
              C22324 * C50286) *
                 C2160 +
             (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
              C22734 * C50286) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
              C22321 * C33286 + C22322 * C50286) *
                 C2159 +
             ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
              C20773 * C33286 + C20774 * C50286) *
                 C2160 +
             (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
              C20776 * C50286) *
                 C2161) *
                C50352 +
            ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
              C21786 * C50286) *
                 C2159 +
             (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
              C23228 * C50286) *
                 C2160 +
             (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
              (C20441 - C20442) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C251 +
          (((((C19535 * C123 - C50060 * C130) * C33285 +
              (C19535 * C134 - C50060 * C144) * C33283 +
              (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                 C2159 +
             ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
              C22325 * C33286 + C22326 * C50286) *
                 C2160 +
             C36147 * C2161) *
                C50352 +
            (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
              (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                 C2159 +
             (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
              C22330 * C50286) *
                 C2160 +
             (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
              (C21629 - C21630) * C50286) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
              C22327 * C33286 + C22328 * C50286) *
                 C2159 +
             ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
              C31416 * C33286 + C31417 * C50286) *
                 C2160 +
             ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
              (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                 C2161) *
                C50352 +
            ((C22325 * C33285 + C22326 * C33283 + C21803 * C33286 +
              C21804 * C50286) *
                 C2159 +
             (C30770 * C33285 + C30771 * C33283 + (C21628 - C21627) * C33286 +
              (C21630 - C21629) * C50286) *
                 C2160 +
             ((C20144 - C20143) * C33285 + (C20146 - C20145) * C33283 +
              (C19535 * C3508 - C50060 * C3510) * C33286 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
             C16808 * C406 - C16813 * C396) *
                C33286 +
            (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
             C16808 * C426 - C16813 * C410) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C249 +
           ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50125 * C250) *
              C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
             C16813 * C397 - C16808 * C407) *
                C33286 +
            (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
             C16813 * C411 - C16808 * C427) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C249 +
           ((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C33285 +
            (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C33283 +
            (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 - C16807 * C1436 +
             C16813 * C1433 - C16808 * C1437) *
                C33286 +
            (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 - C16807 * C1444 +
             C16813 * C1441 - C16808 * C1445) *
                C50286) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
            C16808 * C406 - C16813 * C396) *
               C33286 +
           (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
            C16808 * C426 - C16813 * C410) *
               C50286) *
              C50211 * C50125 * C50109 * C113 +
          ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
            C16813 * C125 - C16808 * C132) *
               C33285 +
           (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
            C16813 * C136 - C16808 * C146) *
               C33283 +
           (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
            C16813 * C397 - C16808 * C407) *
               C33286 +
           (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
            C16813 * C411 - C16808 * C427) *
               C50286) *
              C50211 * C50125 * C50109 * C114 +
          ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
            C16808 * C137 - C16813 * C126) *
               C33285 +
           (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
            C16808 * C147 - C16813 * C138) *
               C33283 +
           (C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
            C16808 * C420 - C16813 * C402) *
               C33286 +
           (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
            C16808 * C432 - C16813 * C421) *
               C50286) *
              C50211 * C50125 * C50109 * C115 +
          ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
            C16813 * C127 - C16808 * C139) *
               C33285 +
           (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
            C16813 * C140 - C16808 * C148) *
               C33283 +
           (C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
            C16813 * C641 - C16808 * C642) *
               C33286 +
           (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
            C16813 * C643 - C16808 * C644) *
               C50286) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C391 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C392 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C16806 * C1718 - C16811 * C1714 + C16807 * C1719 - C16812 * C1715 +
             C16808 * C1720 - C16813 * C1716) *
                C33286 +
            (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 - C16812 * C1723 +
             C16808 * C1728 - C16813 * C1724) *
                C50286) *
               C50211 * C393) *
              C50109 * C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C391 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C392 +
           ((C33617 - C33616 + C33619 - C33618 + C33621 - C33620) * C33285 +
            (C33623 - C33622 + C33625 - C33624 + C33627 - C33626) * C33283 +
            (C16811 * C1715 - C16806 * C1719 + C16812 * C1716 - C16807 * C1720 +
             C16813 * C1717 - C16808 * C1721) *
                C33286 +
            (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 - C16807 * C1728 +
             C16813 * C1725 - C16808 * C1729) *
                C50286) *
               C50211 * C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           (C19667 * C33285 + C19668 * C33283 + C23225 * C33286 +
            C23226 * C50286) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C33285 +
            (C19535 * C134 - C50060 * C144) * C33283 +
            (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
               C2159 +
           ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
            C22325 * C33286 + C22326 * C50286) *
               C2160 +
           (C19671 * C33285 + C19672 * C33283 + C30770 * C33286 +
            C30771 * C50286) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C33285 +
            (C50060 * C145 - C19535 * C135) * C33283 +
            (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
               C2159 +
           ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
            (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
               C2160 +
           ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
            (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C33285 +
            (C19535 * C136 - C50060 * C146) * C33283 +
            (C19535 * C397 - C50060 * C407) * C33286 +
            (C19535 * C411 - C50060 * C427) * C50286) *
               C2159 +
           ((C19535 * C256 - C50060 * C266) * C33285 +
            (C19535 * C270 - C50060 * C286) * C33283 +
            (C19535 * C778 - C50060 * C783) * C33286 +
            (C19535 * C787 - C50060 * C793) * C50286) *
               C2160 +
           ((C19535 * C260 - C50060 * C274) * C33285 +
            (C19535 * C278 - C50060 * C290) * C33283 +
            (C19535 * C1433 - C50060 * C1437) * C33286 +
            (C19535 * C1441 - C50060 * C1445) * C50286) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C248 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C249 +
           (C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C248 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C249 +
           (C36147 * C2159 +
            (C19673 * C33285 + C19674 * C33283 + (C20144 - C20143) * C33286 +
             (C20146 - C20145) * C50286) *
                C2160 +
            ((C19664 - C19663) * C33285 + (C19666 - C19665) * C33283 +
             (C19535 * C4018 - C50060 * C4020) * C33286 +
             (C19535 * C4022 - C50060 * C4024) * C50286) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C391 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
             C22734 * C50286) *
                C2161) *
               C392 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C393) *
              C50109 * C251 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C391 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C392 +
           ((C21815 * C33285 + C21816 * C33283 + (C21806 - C21805) * C33286 +
             (C21808 - C21807) * C50286) *
                C2159 +
            (C21803 * C33285 + C21804 * C33283 + (C21810 - C21809) * C33286 +
             (C21812 - C21811) * C50286) *
                C2160 +
            ((C21628 - C21627) * C33285 + (C21630 - C21629) * C33283 +
             (C19535 * C4435 - C50060 * C4441) * C33286 +
             (C19535 * C4443 - C50060 * C4447) * C50286) *
                C2161) *
               C393) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50352 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50109 * C50394 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50352 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50189) *
              C50109 * C50395 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C50352 +
           ((C33921 - C33920 + C33923 - C33922 + C33925 - C33924) * C33285 +
            (C33927 - C33926 + C33929 - C33928 + C33931 - C33930) * C33283 +
            (C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
             C16813 * C403 - C16808 * C422) *
                C33286 +
            (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
             C16813 * C423 - C16808 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50352 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
             C22734 * C50286) *
                C2161) *
               C50189) *
              C50109 * C50394 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50352 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50189) *
              C50109 * C50395 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50352 +
           (((C22118 - C22117) * C33285 + (C22120 - C22119) * C33283 +
             (C22122 - C22121) * C33286 + (C22124 - C22123) * C50286) *
                C2159 +
            ((C21964 - C21963) * C33285 + (C21966 - C21965) * C33283 +
             (C21968 - C21967) * C33286 + (C21970 - C21969) * C50286) *
                C2160 +
            ((C31073 - C31072) * C33285 + (C31075 - C31074) * C33283 +
             (C19535 * C2536 - C50060 * C2541) * C33286 +
             (C19535 * C2542 - C50060 * C2545) * C50286) *
                C2161) *
               C50189) *
              C50109 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
            C16808 * C406 - C16813 * C396) *
               C33286 +
           (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
            C16808 * C426 - C16813 * C410) *
               C50286) *
              C50211 * C50125 * C50109 * C113 +
          ((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
            C16813 * C125 - C16808 * C132) *
               C33285 +
           (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
            C16813 * C136 - C16808 * C146) *
               C33283 +
           (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
            C16813 * C397 - C16808 * C407) *
               C33286 +
           (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
            C16813 * C411 - C16808 * C427) *
               C50286) *
              C50211 * C50125 * C50109 * C114 +
          ((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
            C16808 * C137 - C16813 * C126) *
               C33285 +
           (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
            C16808 * C147 - C16813 * C138) *
               C33283 +
           (C16806 * C406 - C16811 * C396 + C16807 * C407 - C16812 * C397 +
            C16808 * C420 - C16813 * C402) *
               C33286 +
           (C16806 * C426 - C16811 * C410 + C16807 * C427 - C16812 * C411 +
            C16808 * C432 - C16813 * C421) *
               C50286) *
              C50211 * C50125 * C50109 * C115 +
          ((C16811 * C125 - C16806 * C132 + C16812 * C126 - C16807 * C137 +
            C16813 * C127 - C16808 * C139) *
               C33285 +
           (C16811 * C136 - C16806 * C146 + C16812 * C138 - C16807 * C147 +
            C16813 * C140 - C16808 * C148) *
               C33283 +
           (C16811 * C397 - C16806 * C407 + C16812 * C402 - C16807 * C420 +
            C16813 * C641 - C16808 * C642) *
               C33286 +
           (C16811 * C411 - C16806 * C427 + C16812 * C421 - C16807 * C432 +
            C16813 * C643 - C16808 * C644) *
               C50286) *
              C50211 * C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C16806 * C404 - C16811 * C394 + C16807 * C405 - C16812 * C395 +
             C16808 * C406 - C16813 * C396) *
                C33286 +
            (C16806 * C424 - C16811 * C408 + C16807 * C425 - C16812 * C409 +
             C16808 * C426 - C16813 * C410) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C249 +
           ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50125 * C250) *
              C251 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C16811 * C395 - C16806 * C405 + C16812 * C396 - C16807 * C406 +
             C16813 * C397 - C16808 * C407) *
                C33286 +
            (C16811 * C409 - C16806 * C425 + C16812 * C410 - C16807 * C426 +
             C16813 * C411 - C16808 * C427) *
                C50286) *
               C50211 * C50125 * C248 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C249 +
           ((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C33285 +
            (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C33283 +
            (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 - C16807 * C1436 +
             C16813 * C1433 - C16808 * C1437) *
                C33286 +
            (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 - C16807 * C1444 +
             C16813 * C1441 - C16808 * C1445) *
                C50286) *
               C50211 * C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           (C19667 * C33285 + C19668 * C33283 + C23225 * C33286 +
            C23226 * C50286) *
               C2161) *
              C50125 * C50109 * C113 +
          (((C19535 * C123 - C50060 * C130) * C33285 +
            (C19535 * C134 - C50060 * C144) * C33283 +
            (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
               C2159 +
           ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
            C22325 * C33286 + C22326 * C50286) *
               C2160 +
           (C19671 * C33285 + C19672 * C33283 + C30770 * C33286 +
            C30771 * C50286) *
               C2161) *
              C50125 * C50109 * C114 +
          (((C50060 * C131 - C19535 * C124) * C33285 +
            (C50060 * C145 - C19535 * C135) * C33283 +
            (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
               C2159 +
           ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
            (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
               C2160 +
           ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
            (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
               C2161) *
              C50125 * C50109 * C115 +
          (((C19535 * C125 - C50060 * C132) * C33285 +
            (C19535 * C136 - C50060 * C146) * C33283 +
            (C19535 * C397 - C50060 * C407) * C33286 +
            (C19535 * C411 - C50060 * C427) * C50286) *
               C2159 +
           ((C19535 * C256 - C50060 * C266) * C33285 +
            (C19535 * C270 - C50060 * C286) * C33283 +
            (C19535 * C778 - C50060 * C783) * C33286 +
            (C19535 * C787 - C50060 * C793) * C50286) *
               C2160 +
           ((C19535 * C260 - C50060 * C274) * C33285 +
            (C19535 * C278 - C50060 * C290) * C33283 +
            (C19535 * C1433 - C50060 * C1437) * C33286 +
            (C19535 * C1441 - C50060 * C1445) * C50286) *
               C2161) *
              C50125 * C50109 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C248 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C249 +
           (C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50125 * C250) *
              C251 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C248 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C249 +
           (C36147 * C2159 +
            (C19673 * C33285 + C19674 * C33283 + (C20144 - C20143) * C33286 +
             (C20146 - C20145) * C50286) *
                C2160 +
            ((C19664 - C19663) * C33285 + (C19666 - C19665) * C33283 +
             (C19535 * C4018 - C50060 * C4020) * C33286 +
             (C19535 * C4022 - C50060 * C4024) * C50286) *
                C2161) *
               C50125 * C250) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C50396 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50397 +
           ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50125 * C1199) *
              C50343 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C50396 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50397 +
           ((C16998 - C16997 + C17000 - C16999 + C17002 - C17001) * C33285 +
            (C17004 - C17003 + C17006 - C17005 + C17008 - C17007) * C33283 +
            (C16811 * C1431 - C16806 * C1435 + C16812 * C1432 - C16807 * C1436 +
             C16813 * C1433 - C16808 * C1437) *
                C33286 +
            (C16811 * C1439 - C16806 * C1443 + C16812 * C1440 - C16807 * C1444 +
             C16813 * C1441 - C16808 * C1445) *
                C50286) *
               C50211 * C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C50396 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C50125 * C50397 +
           (C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50125 * C1199) *
              C50343 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C50396 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50397 +
           (C36147 * C2159 +
            (C19673 * C33285 + C19674 * C33283 + (C20144 - C20143) * C33286 +
             (C20146 - C20145) * C50286) *
                C2160 +
            ((C19664 - C19663) * C33285 + (C19666 - C19665) * C33283 +
             (C19535 * C4018 - C50060 * C4020) * C33286 +
             (C19535 * C4022 - C50060 * C4024) * C50286) *
                C2161) *
               C50125 * C1199) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50352 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50396 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50352 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50189) *
              C50397 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C50352 +
           ((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C33285 +
            (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C33283 +
            (C16811 * C2534 - C16806 * C2537 + C16812 * C2535 - C16807 * C2538 +
             C16813 * C2536 - C16808 * C2541) *
                C33286 +
            (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 - C16807 * C2544 +
             C16813 * C2542 - C16808 * C2545) *
                C50286) *
               C50211 * C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50352 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C50396 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C50352 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50189) *
              C50397 +
          ((C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C50352 +
           (C37669 * C2159 +
            (C20775 * C33285 + C20776 * C33283 + (C20440 - C20439) * C33286 +
             (C20442 - C20441) * C50286) *
                C2160 +
            ((C20778 - C20777) * C33285 + (C20780 - C20779) * C33283 +
             (C19535 * C20426 - C50060 * C20427) * C33286 +
             (C19535 * C20428 - C50060 * C20429) * C50286) *
                C2161) *
               C50189) *
              C1199) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
           (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
              C50211 * C50125 * C964 +
          ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
           (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
           (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
           (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
              C50211 * C50125 * C965 +
          ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
           (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
           (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
           (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
              C50211 * C50125 * C966 +
          ((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C33285 +
           (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C33283 +
           (C16811 * C3048 - C16806 * C3051 + C16812 * C3049 - C16807 * C3052 +
            C16813 * C3050 - C16808 * C3055) *
               C33286 +
           (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 - C16807 * C3058 +
            C16813 * C3056 - C16808 * C3059) *
               C50286) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C893 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C893 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C50125 * C893 +
           ((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C33285 +
            (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C33283 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C33286 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C391 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C392 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C16806 * C1718 - C16811 * C1714 + C16807 * C1719 - C16812 * C1715 +
             C16808 * C1720 - C16813 * C1716) *
                C33286 +
            (C16806 * C1726 - C16811 * C1722 + C16807 * C1727 - C16812 * C1723 +
             C16808 * C1728 - C16813 * C1724) *
                C50286) *
               C50211 * C393) *
              C893 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C391 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C392 +
           ((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C33285 +
            (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C33283 +
            (C16811 * C4432 - C16806 * C4436 + C16812 * C4433 - C16807 * C4437 +
             C16813 * C5904 - C16808 * C5905) *
                C33286 +
            (C16811 * C4438 - C16806 * C4444 + C16812 * C4439 - C16807 * C4445 +
             C16813 * C5906 - C16808 * C5907) *
                C50286) *
               C50211 * C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C893 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C893 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50125 * C893 +
           (((C19884 - C19883) * C33285 + (C19886 - C19885) * C33283 +
             (C21964 - C21963) * C33286 + (C21966 - C21965) * C50286) *
                C2159 +
            ((C19888 - C19887) * C33285 + (C19890 - C19889) * C33283 +
             (C31073 - C31072) * C33286 + (C31075 - C31074) * C50286) *
                C2160 +
            ((C19892 - C19891) * C33285 + (C19894 - C19893) * C33283 +
             (C19535 * C3050 - C50060 * C3055) * C33286 +
             (C19535 * C3056 - C50060 * C3059) * C50286) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           C36146 * C2161) *
              C50125 * C964 +
          (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
            C22321 * C33286 + C22322 * C50286) *
               C2159 +
           ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
            C20773 * C33286 + C20774 * C50286) *
               C2160 +
           C37030 * C2161) *
              C50125 * C965 +
          (C36146 * C2159 +
           (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
            C32306 * C50286) *
               C2160 +
           ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
            (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
               C2161) *
              C50125 * C966 +
          (C37030 * C2159 +
           (C20317 * C33285 + C20318 * C33283 + (C20778 - C20777) * C33286 +
            (C20780 - C20779) * C50286) *
               C2160 +
           ((C20320 - C20319) * C33285 + (C20322 - C20321) * C33283 +
            (C19535 * C20768 - C50060 * C20769) * C33286 +
            (C19535 * C20770 - C50060 * C20771) * C50286) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C391 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
             C22734 * C50286) *
                C2161) *
               C392 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C393) *
              C893 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C391 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C392 +
           ((C22323 * C33285 + C22324 * C33283 + C22725 * C33286 +
             C22726 * C50286) *
                C2159 +
            (C22733 * C33285 + C22734 * C33283 + (C22736 - C22735) * C33286 +
             (C22738 - C22737) * C50286) *
                C2160 +
            ((C20440 - C20439) * C33285 + (C20442 - C20441) * C33283 +
             (C19535 * C21048 - C50060 * C21049) * C33286 +
             (C19535 * C21050 - C50060 * C21051) * C50286) *
                C2161) *
               C393) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C33285 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C33283 +
             (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
             (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                C50211 * C50352 +
            ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
             (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
             (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
             (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
                C50211 * C50189) *
               C893 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
             (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                C50211 * C50352 +
            ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
             (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C33285 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C33283 +
             (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
             (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
                C50211 * C50352 +
            ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
             (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
             (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
             (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
                C50211 * C50189) *
               C893 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
             (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
                C50211 * C50352 +
            ((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C33285 +
             (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C33283 +
             (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C33286 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C33285 +
              (C50060 * C143 - C19535 * C133) * C33283 +
              (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                 C2159 +
             ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
              C22319 * C33286 + C22320 * C50286) *
                 C2160 +
             C36146 * C2161) *
                C50352 +
            (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
              (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                 C2159 +
             (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
              C22324 * C50286) *
                 C2160 +
             (C20773 * C33285 + C20774 * C33283 + C22733 * C33286 +
              C22734 * C50286) *
                 C2161) *
                C50189) *
               C893 +
           ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
              C22321 * C33286 + C22322 * C50286) *
                 C2159 +
             ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
              C20773 * C33286 + C20774 * C50286) *
                 C2160 +
             C37030 * C2161) *
                C50352 +
            ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
              C21786 * C50286) *
                 C2159 +
             (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
              C23228 * C50286) *
                 C2160 +
             (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
              (C20441 - C20442) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C33285 +
              (C19535 * C134 - C50060 * C144) * C33283 +
              (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                 C2159 +
             ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
              C22325 * C33286 + C22326 * C50286) *
                 C2160 +
             C36147 * C2161) *
                C50352 +
            (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
              (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                 C2159 +
             (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
              C22330 * C50286) *
                 C2160 +
             (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
              (C21629 - C21630) * C50286) *
                 C2161) *
                C50189) *
               C893 +
           ((((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
              C22327 * C33286 + C22328 * C50286) *
                 C2159 +
             ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
              C31416 * C33286 + C31417 * C50286) *
                 C2160 +
             ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
              (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                 C2161) *
                C50352 +
            ((C22325 * C33285 + C22326 * C33283 + C21803 * C33286 +
              C21804 * C50286) *
                 C2159 +
             (C30770 * C33285 + C30771 * C33283 + (C21628 - C21627) * C33286 +
              (C21630 - C21629) * C50286) *
                 C2160 +
             ((C20144 - C20143) * C33285 + (C20146 - C20145) * C33283 +
              (C19535 * C3508 - C50060 * C3510) * C33286 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50125 * C893 +
           ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50125 * C50161) *
              C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50125 * C893 +
           ((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
            (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
            (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
            (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
               C50211 * C50125 * C50161) *
              C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C50125 * C893 +
           ((C17302 - C17301 + C17304 - C17303 + C17306 - C17305) * C33285 +
            (C17308 - C17307 + C17310 - C17309 + C17312 - C17311) * C33283 +
            (C16811 * C777 - C16806 * C782 + C16812 * C778 - C16807 * C783 +
             C16813 * C779 - C16808 * C788) *
                C33286 +
            (C16811 * C786 - C16806 * C792 + C16812 * C787 - C16807 * C793 +
             C16813 * C789 - C16808 * C794) *
                C50286) *
               C50211 * C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
           (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
              C50211 * C50125 * C964 +
          ((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
           (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
           (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
           (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
              C50211 * C50125 * C965 +
          ((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
           (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
           (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
           (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
              C50211 * C50125 * C966 +
          ((C17922 - C17921 + C17924 - C17923 + C17926 - C17925) * C33285 +
           (C17928 - C17927 + C17930 - C17929 + C17932 - C17931) * C33283 +
           (C16811 * C3048 - C16806 * C3051 + C16812 * C3049 - C16807 * C3052 +
            C16813 * C3050 - C16808 * C3055) *
               C33286 +
           (C16811 * C3053 - C16806 * C3057 + C16812 * C3054 - C16807 * C3058 +
            C16813 * C3056 - C16808 * C3059) *
               C50286) *
              C50211 * C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50125 * C893 +
           (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            (C20315 * C33285 + C20316 * C33283 + C20775 * C33286 +
             C20776 * C50286) *
                C2161) *
               C50125 * C50161) *
              C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50125 * C893 +
           (((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
             C22327 * C33286 + C22328 * C50286) *
                C2159 +
            ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
             C31416 * C33286 + C31417 * C50286) *
                C2160 +
            ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
             (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                C2161) *
               C50125 * C50161) *
              C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C50125 * C893 +
           (((C19884 - C19883) * C33285 + (C19886 - C19885) * C33283 +
             (C21964 - C21963) * C33286 + (C21966 - C21965) * C50286) *
                C2159 +
            ((C19888 - C19887) * C33285 + (C19890 - C19889) * C33283 +
             (C31073 - C31072) * C33286 + (C31075 - C31074) * C50286) *
                C2160 +
            ((C19892 - C19891) * C33285 + (C19894 - C19893) * C33283 +
             (C19535 * C3050 - C50060 * C3055) * C33286 +
             (C19535 * C3056 - C50060 * C3059) * C50286) *
                C2161) *
               C50125 * C50161) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           C36146 * C2161) *
              C50125 * C964 +
          (((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
            C22321 * C33286 + C22322 * C50286) *
               C2159 +
           ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
            C20773 * C33286 + C20774 * C50286) *
               C2160 +
           C37030 * C2161) *
              C50125 * C965 +
          (C36146 * C2159 +
           (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
            C32306 * C50286) *
               C2160 +
           ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
            (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
               C2161) *
              C50125 * C966 +
          (C37030 * C2159 +
           (C20317 * C33285 + C20318 * C33283 + (C20778 - C20777) * C33286 +
            (C20780 - C20779) * C50286) *
               C2160 +
           ((C20320 - C20319) * C33285 + (C20322 - C20321) * C33283 +
            (C19535 * C20768 - C50060 * C20769) * C33286 +
            (C19535 * C20770 - C50060 * C20771) * C50286) *
               C2161) *
              C50125 * C967) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
              C16808 * C131 - C16813 * C124) *
                 C33285 +
             (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
              C16808 * C145 - C16813 * C135) *
                 C33283 +
             (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
             (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
                C50211 * C1544 +
            ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
             (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
             (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
             (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
             (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
             (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
             (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
                C50211 * C1544 +
            ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
             (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
             (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
             (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
                C50211 * C50189) *
               C50161) *
              C50343 +
          ((((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
              C16813 * C125 - C16808 * C132) *
                 C33285 +
             (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
              C16813 * C136 - C16808 * C146) *
                 C33283 +
             (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
             (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
                C50211 * C1544 +
            ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
             (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
             (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
             (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
                C50211 * C50189) *
               C50351 +
           (((C16986 - C16985 + C16988 - C16987 + C16990 - C16989) * C33285 +
             (C16992 - C16991 + C16994 - C16993 + C16996 - C16995) * C33283 +
             (C17665 - C17666 + C17667 - C17668 + C17669 - C17670) * C33286 +
             (C17671 - C17672 + C17673 - C17674 + C17675 - C17676) * C50286) *
                C50211 * C1544 +
            ((C17666 - C17665 + C17668 - C17667 + C17670 - C17669) * C33285 +
             (C17672 - C17671 + C17674 - C17673 + C17676 - C17675) * C33283 +
             (C16811 * C1084 - C16806 * C1088 + C16812 * C1085 -
              C16807 * C1089 + C16813 * C1086 - C16808 * C1090) *
                 C33286 +
             (C16811 * C1092 - C16806 * C1096 + C16812 * C1093 -
              C16807 * C1097 + C16813 * C1094 - C16808 * C1098) *
                 C50286) *
                C50211 * C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50060 * C129 - C19535 * C122) * C33285 +
              (C50060 * C143 - C19535 * C133) * C33283 +
              (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                 C2159 +
             ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
              C22319 * C33286 + C22320 * C50286) *
                 C2160 +
             C36146 * C2161) *
                C1544 +
            (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
              (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                 C2159 +
             (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
              C22324 * C50286) *
                 C2160 +
             C37669 * C2161) *
                C50189) *
               C50351 +
           ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
              C22321 * C33286 + C22322 * C50286) *
                 C2159 +
             ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
              C20773 * C33286 + C20774 * C50286) *
                 C2160 +
             C37030 * C2161) *
                C1544 +
            ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
              C21786 * C50286) *
                 C2159 +
             (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
              C23228 * C50286) *
                 C2160 +
             (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
              (C20441 - C20442) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50343 +
          (((((C19535 * C123 - C50060 * C130) * C33285 +
              (C19535 * C134 - C50060 * C144) * C33283 +
              (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                 C2159 +
             ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
              C22325 * C33286 + C22326 * C50286) *
                 C2160 +
             C36147 * C2161) *
                C1544 +
            (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
              (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                 C2159 +
             (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
              C22330 * C50286) *
                 C2160 +
             (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
              (C21629 - C21630) * C50286) *
                 C2161) *
                C50189) *
               C50351 +
           ((((C19652 - C19651) * C33285 + (C19654 - C19653) * C33283 +
              C22327 * C33286 + C22328 * C50286) *
                 C2159 +
             ((C19656 - C19655) * C33285 + (C19658 - C19657) * C33283 +
              C31416 * C33286 + C31417 * C50286) *
                 C2160 +
             ((C19660 - C19659) * C33285 + (C19662 - C19661) * C33283 +
              (C20143 - C20144) * C33286 + (C20145 - C20146) * C50286) *
                 C2161) *
                C1544 +
            ((C22325 * C33285 + C22326 * C33283 + C21803 * C33286 +
              C21804 * C50286) *
                 C2159 +
             (C30770 * C33285 + C30771 * C33283 + (C21628 - C21627) * C33286 +
              (C21630 - C21629) * C50286) *
                 C2160 +
             ((C20144 - C20143) * C33285 + (C20146 - C20145) * C33283 +
              (C19535 * C3508 - C50060 * C3510) * C33286 +
              (C19535 * C3512 - C50060 * C3514) * C50286) *
                 C2161) *
                C50189) *
               C50161) *
              C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50398 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50399 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C35392 - C35393 + C35394 - C35395 + C35396 - C35397) * C33286 +
            (C35398 - C35399 + C35400 - C35401 + C35402 - C35403) * C50286) *
               C50211 * C1960) *
              C50351 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C50398 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50399 +
           ((C18080 - C18079 + C18082 - C18081 + C18084 - C18083) * C33285 +
            (C18086 - C18085 + C18088 - C18087 + C18090 - C18089) * C33283 +
            (C16811 * C4432 - C16806 * C4436 + C16812 * C4433 - C16807 * C4437 +
             C16813 * C5904 - C16808 * C5905) *
                C33286 +
            (C16811 * C4438 - C16806 * C4444 + C16812 * C4439 - C16807 * C4445 +
             C16813 * C5906 - C16808 * C5907) *
                C50286) *
               C50211 * C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50398 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50399 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C1960) *
              C50351 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C50398 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50399 +
           ((C22323 * C33285 + C22324 * C33283 + C22725 * C33286 +
             C22726 * C50286) *
                C2159 +
            (C22733 * C33285 + C22734 * C33283 + (C22736 - C22735) * C33286 +
             (C22738 - C22737) * C50286) *
                C2160 +
            ((C20440 - C20439) * C33285 + (C20442 - C20441) * C33283 +
             (C19535 * C21048 - C50060 * C21049) * C33286 +
             (C19535 * C21050 - C50060 * C21051) * C50286) *
                C2161) *
               C1960) *
              C50161) *
         C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C1544 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C248 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C1544 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50189) *
              C249 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C1544 +
           ((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C33285 +
            (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C33283 +
            (C16811 * C2534 - C16806 * C2537 + C16812 * C2535 - C16807 * C2538 +
             C16813 * C2536 - C16808 * C2541) *
                C33286 +
            (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 - C16807 * C2544 +
             C16813 * C2542 - C16808 * C2545) *
                C50286) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C1544 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C1544 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C1544 +
           ((C33921 - C33920 + C33923 - C33922 + C33925 - C33924) * C33285 +
            (C33927 - C33926 + C33929 - C33928 + C33931 - C33930) * C33283 +
            (C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
             C16813 * C403 - C16808 * C422) *
                C33286 +
            (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
             C16813 * C423 - C16808 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
            C16808 * C131 - C16813 * C124) *
               C33285 +
           (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
            C16808 * C145 - C16813 * C135) *
               C33283 +
           (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
           (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
              C50211 * C1710 +
          ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
           (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
           (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
           (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
              C50211 * C1711 +
          ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
           (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
           (C35392 - C35393 + C35394 - C35395 + C35396 - C35397) * C33286 +
           (C35398 - C35399 + C35400 - C35401 + C35402 - C35403) * C50286) *
              C50211 * C1712 +
          ((C35393 - C35392 + C35395 - C35394 + C35397 - C35396) * C33285 +
           (C35399 - C35398 + C35401 - C35400 + C35403 - C35402) * C33283 +
           (C16811 * C5330 - C16806 * C5333 + C16812 * C5331 - C16807 * C5334 +
            C16813 * C5332 - C16808 * C5337) *
               C33286 +
           (C16811 * C5335 - C16806 * C5339 + C16812 * C5336 - C16807 * C5340 +
            C16813 * C5338 - C16808 * C5341) *
               C50286) *
              C50211 * C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C1544 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C1544 +
           (((C22118 - C22117) * C33285 + (C22120 - C22119) * C33283 +
             (C22122 - C22121) * C33286 + (C22124 - C22123) * C50286) *
                C2159 +
            ((C21964 - C21963) * C33285 + (C21966 - C21965) * C33283 +
             (C21968 - C21967) * C33286 + (C21970 - C21969) * C50286) *
                C2160 +
            ((C31073 - C31072) * C33285 + (C31075 - C31074) * C33283 +
             (C19535 * C2536 - C50060 * C2541) * C33286 +
             (C19535 * C2542 - C50060 * C2545) * C50286) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C1544 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50189) *
              C249 +
          ((C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C1544 +
           (C37669 * C2159 +
            (C20775 * C33285 + C20776 * C33283 + (C20440 - C20439) * C33286 +
             (C20442 - C20441) * C50286) *
                C2160 +
            ((C20778 - C20777) * C33285 + (C20780 - C20779) * C33283 +
             (C19535 * C20426 - C50060 * C20427) * C33286 +
             (C19535 * C20428 - C50060 * C20429) * C50286) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50060 * C129 - C19535 * C122) * C33285 +
            (C50060 * C143 - C19535 * C133) * C33283 +
            (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
               C2159 +
           ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
            C22319 * C33286 + C22320 * C50286) *
               C2160 +
           C36146 * C2161) *
              C1710 +
          (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
            (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
               C2159 +
           (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
            C22324 * C50286) *
               C2160 +
           C37669 * C2161) *
              C1711 +
          ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
            (C21790 - C21789) * C50286) *
               C2159 +
           (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
            C22728 * C50286) *
               C2160 +
           (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
            (C22737 - C22738) * C50286) *
               C2161) *
              C1712 +
          ((C23623 * C33285 + C23624 * C33283 + (C23626 - C23625) * C33286 +
            (C23628 - C23627) * C50286) *
               C2159 +
           (C22725 * C33285 + C22726 * C33283 + (C22730 - C22729) * C33286 +
            (C22732 - C22731) * C50286) *
               C2160 +
           ((C22736 - C22735) * C33285 + (C22738 - C22737) * C33283 +
            (C19535 * C22720 - C50060 * C22721) * C33286 +
            (C19535 * C22722 - C50060 * C22723) * C50286) *
               C2161) *
              C1713) *
         C50109 * C50090) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C50398 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50399 +
           ((C33593 - C33592 + C33595 - C33594 + C33597 - C33596) * C33285 +
            (C33599 - C33598 + C33601 - C33600 + C33603 - C33602) * C33283 +
            (C35392 - C35393 + C35394 - C35395 + C35396 - C35397) * C33286 +
            (C35398 - C35399 + C35400 - C35401 + C35402 - C35403) * C50286) *
               C50211 * C1960) *
              C50109 * C50343 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C50398 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50399 +
           ((C33617 - C33616 + C33619 - C33618 + C33621 - C33620) * C33285 +
            (C33623 - C33622 + C33625 - C33624 + C33627 - C33626) * C33283 +
            (C16811 * C1715 - C16806 * C1719 + C16812 * C1716 - C16807 * C1720 +
             C16813 * C1717 - C16808 * C1721) *
                C33286 +
            (C16811 * C1723 - C16806 * C1727 + C16812 * C1724 - C16807 * C1728 +
             C16813 * C1725 - C16808 * C1729) *
                C50286) *
               C50211 * C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C50398 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50399 +
           ((C21813 * C33285 + C21814 * C33283 + (C21788 - C21787) * C33286 +
             (C21790 - C21789) * C50286) *
                C2159 +
            (C21785 * C33285 + C21786 * C33283 + C22727 * C33286 +
             C22728 * C50286) *
                C2160 +
            (C23227 * C33285 + C23228 * C33283 + (C22735 - C22736) * C33286 +
             (C22737 - C22738) * C50286) *
                C2161) *
               C1960) *
              C50109 * C50343 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C50398 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50399 +
           ((C21815 * C33285 + C21816 * C33283 + (C21806 - C21805) * C33286 +
             (C21808 - C21807) * C50286) *
                C2159 +
            (C21803 * C33285 + C21804 * C33283 + (C21810 - C21809) * C33286 +
             (C21812 - C21811) * C50286) *
                C2160 +
            ((C21628 - C21627) * C33285 + (C21630 - C21629) * C33283 +
             (C19535 * C4435 - C50060 * C4441) * C33286 +
             (C19535 * C4443 - C50060 * C4447) * C50286) *
                C2161) *
               C1960) *
              C50109 * C50096)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C1544 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C50109 * C895 +
          (((C16811 * C123 - C16806 * C130 + C16812 * C124 - C16807 * C131 +
             C16813 * C125 - C16808 * C132) *
                C33285 +
            (C16811 * C134 - C16806 * C144 + C16812 * C135 - C16807 * C145 +
             C16813 * C136 - C16808 * C146) *
                C33283 +
            (C33604 - C33605 + C33606 - C33607 + C33608 - C33609) * C33286 +
            (C33610 - C33611 + C33612 - C33613 + C33614 - C33615) * C50286) *
               C50211 * C1544 +
           ((C33605 - C33604 + C33607 - C33606 + C33609 - C33608) * C33285 +
            (C33611 - C33610 + C33613 - C33612 + C33615 - C33614) * C33283 +
            (C33616 - C33617 + C33618 - C33619 + C33620 - C33621) * C33286 +
            (C33622 - C33623 + C33624 - C33625 + C33626 - C33627) * C50286) *
               C50211 * C50189) *
              C50109 * C896 +
          (((C16806 * C131 - C16811 * C124 + C16807 * C132 - C16812 * C125 +
             C16808 * C137 - C16813 * C126) *
                C33285 +
            (C16806 * C145 - C16811 * C135 + C16807 * C146 - C16812 * C136 +
             C16808 * C147 - C16813 * C138) *
                C33283 +
            (C33920 - C33921 + C33922 - C33923 + C33924 - C33925) * C33286 +
            (C33926 - C33927 + C33928 - C33929 + C33930 - C33931) * C50286) *
               C50211 * C1544 +
           ((C33921 - C33920 + C33923 - C33922 + C33925 - C33924) * C33285 +
            (C33927 - C33926 + C33929 - C33928 + C33931 - C33930) * C33283 +
            (C16811 * C400 - C16806 * C414 + C16812 * C401 - C16807 * C415 +
             C16813 * C403 - C16808 * C422) *
                C33286 +
            (C16811 * C418 - C16806 * C430 + C16812 * C419 - C16807 * C431 +
             C16813 * C423 - C16808 * C433) *
                C50286) *
               C50211 * C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16806 * C129 - C16811 * C122 + C16807 * C130 - C16812 * C123 +
             C16808 * C131 - C16813 * C124) *
                C33285 +
            (C16806 * C143 - C16811 * C133 + C16807 * C144 - C16812 * C134 +
             C16808 * C145 - C16813 * C135) *
                C33283 +
            (C33580 - C33581 + C33582 - C33583 + C33584 - C33585) * C33286 +
            (C33586 - C33587 + C33588 - C33589 + C33590 - C33591) * C50286) *
               C50211 * C1544 +
           ((C33581 - C33580 + C33583 - C33582 + C33585 - C33584) * C33285 +
            (C33587 - C33586 + C33589 - C33588 + C33591 - C33590) * C33283 +
            (C33592 - C33593 + C33594 - C33595 + C33596 - C33597) * C33286 +
            (C33598 - C33599 + C33600 - C33601 + C33602 - C33603) * C50286) *
               C50211 * C50189) *
              C248 +
          (((C16962 - C16961 + C16964 - C16963 + C16966 - C16965) * C33285 +
            (C16968 - C16967 + C16970 - C16969 + C16972 - C16971) * C33283 +
            (C17653 - C17654 + C17655 - C17656 + C17657 - C17658) * C33286 +
            (C17659 - C17660 + C17661 - C17662 + C17663 - C17664) * C50286) *
               C50211 * C1544 +
           ((C17654 - C17653 + C17656 - C17655 + C17658 - C17657) * C33285 +
            (C17660 - C17659 + C17662 - C17661 + C17664 - C17663) * C33283 +
            (C18079 - C18080 + C18081 - C18082 + C18083 - C18084) * C33286 +
            (C18085 - C18086 + C18087 - C18088 + C18089 - C18090) * C50286) *
               C50211 * C50189) *
              C249 +
          (((C16974 - C16973 + C16976 - C16975 + C16978 - C16977) * C33285 +
            (C16980 - C16979 + C16982 - C16981 + C16984 - C16983) * C33283 +
            (C18577 - C18578 + C18579 - C18580 + C18581 - C18582) * C33286 +
            (C18583 - C18584 + C18585 - C18586 + C18587 - C18588) * C50286) *
               C50211 * C1544 +
           ((C18578 - C18577 + C18580 - C18579 + C18582 - C18581) * C33285 +
            (C18584 - C18583 + C18586 - C18585 + C18588 - C18587) * C33283 +
            (C16811 * C2534 - C16806 * C2537 + C16812 * C2535 - C16807 * C2538 +
             C16813 * C2536 - C16808 * C2541) *
                C33286 +
            (C16811 * C2539 - C16806 * C2543 + C16812 * C2540 - C16807 * C2544 +
             C16813 * C2542 - C16808 * C2545) *
                C50286) *
               C50211 * C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C50109 * C895 +
          ((((C19535 * C123 - C50060 * C130) * C33285 +
             (C19535 * C134 - C50060 * C144) * C33283 +
             (C21795 - C21796) * C33286 + (C21797 - C21798) * C50286) *
                C2159 +
            ((C19651 - C19652) * C33285 + (C19653 - C19654) * C33283 +
             C22325 * C33286 + C22326 * C50286) *
                C2160 +
            C36147 * C2161) *
               C1544 +
           (((C21796 - C21795) * C33285 + (C21798 - C21797) * C33283 +
             (C21800 - C21799) * C33286 + (C21802 - C21801) * C50286) *
                C2159 +
            (C22327 * C33285 + C22328 * C33283 + C22329 * C33286 +
             C22330 * C50286) *
                C2160 +
            (C31416 * C33285 + C31417 * C33283 + (C21627 - C21628) * C33286 +
             (C21629 - C21630) * C50286) *
                C2161) *
               C50189) *
              C50109 * C896 +
          ((((C50060 * C131 - C19535 * C124) * C33285 +
             (C50060 * C145 - C19535 * C135) * C33283 +
             (C22117 - C22118) * C33286 + (C22119 - C22120) * C50286) *
                C2159 +
            ((C19883 - C19884) * C33285 + (C19885 - C19886) * C33283 +
             (C21963 - C21964) * C33286 + (C21965 - C21966) * C50286) *
                C2160 +
            ((C19887 - C19888) * C33285 + (C19889 - C19890) * C33283 +
             (C31072 - C31073) * C33286 + (C31074 - C31075) * C50286) *
                C2161) *
               C1544 +
           (((C22118 - C22117) * C33285 + (C22120 - C22119) * C33283 +
             (C22122 - C22121) * C33286 + (C22124 - C22123) * C50286) *
                C2159 +
            ((C21964 - C21963) * C33285 + (C21966 - C21965) * C33283 +
             (C21968 - C21967) * C33286 + (C21970 - C21969) * C50286) *
                C2160 +
            ((C31073 - C31072) * C33285 + (C31075 - C31074) * C33283 +
             (C19535 * C2536 - C50060 * C2541) * C33286 +
             (C19535 * C2542 - C50060 * C2545) * C50286) *
                C2161) *
               C50189) *
              C50109 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50060 * C129 - C19535 * C122) * C33285 +
             (C50060 * C143 - C19535 * C133) * C33283 +
             (C21777 - C21778) * C33286 + (C21779 - C21780) * C50286) *
                C2159 +
            ((C19635 - C19636) * C33285 + (C19637 - C19638) * C33283 +
             C22319 * C33286 + C22320 * C50286) *
                C2160 +
            C36146 * C2161) *
               C1544 +
           (((C21778 - C21777) * C33285 + (C21780 - C21779) * C33283 +
             (C21782 - C21781) * C33286 + (C21784 - C21783) * C50286) *
                C2159 +
            (C22321 * C33285 + C22322 * C33283 + C22323 * C33286 +
             C22324 * C50286) *
                C2160 +
            C37669 * C2161) *
               C50189) *
              C248 +
          ((((C19636 - C19635) * C33285 + (C19638 - C19637) * C33283 +
             C22321 * C33286 + C22322 * C50286) *
                C2159 +
            ((C19640 - C19639) * C33285 + (C19642 - C19641) * C33283 +
             C20773 * C33286 + C20774 * C50286) *
                C2160 +
            C37030 * C2161) *
               C1544 +
           ((C22319 * C33285 + C22320 * C33283 + C21785 * C33286 +
             C21786 * C50286) *
                C2159 +
            (C23225 * C33285 + C23226 * C33283 + C23227 * C33286 +
             C23228 * C50286) *
                C2160 +
            (C32305 * C33285 + C32306 * C33283 + (C20439 - C20440) * C33286 +
             (C20441 - C20442) * C50286) *
                C2161) *
               C50189) *
              C249 +
          ((C36146 * C2159 +
            (C19669 * C33285 + C19670 * C33283 + C32305 * C33286 +
             C32306 * C50286) *
                C2160 +
            ((C19648 - C19647) * C33285 + (C19650 - C19649) * C33283 +
             (C20777 - C20778) * C33286 + (C20779 - C20780) * C50286) *
                C2161) *
               C1544 +
           (C37669 * C2159 +
            (C20775 * C33285 + C20776 * C33283 + (C20440 - C20439) * C33286 +
             (C20442 - C20441) * C50286) *
                C2160 +
            ((C20778 - C20777) * C33285 + (C20780 - C20779) * C33283 +
             (C19535 * C20426 - C50060 * C20427) * C33286 +
             (C19535 * C20428 - C50060 * C20429) * C50286) *
                C2161) *
               C50189) *
              C250) *
         C50090) /
            (p * q * std::sqrt(p + q));
}
