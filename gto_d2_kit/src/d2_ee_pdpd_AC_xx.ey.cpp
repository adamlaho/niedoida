/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AC_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_13_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49938 = 0 * ae;
    const double C49937 = ae * be;
    const double C49936 = 0 * be;
    const double C49935 = ae + be;
    const double C49934 = 0 * be;
    const double C49933 = xA - xB;
    const double C49984 = 0 * ce;
    const double C49983 = ce * de;
    const double C49982 = 0 * de;
    const double C49981 = ce + de;
    const double C49980 = 0 * de;
    const double C49979 = xC - xD;
    const double C50062 = p + q;
    const double C50061 = p * q;
    const double C50067 = xP - xQ;
    const double C50066 = bs[2];
    const double C50076 = ae * ce;
    const double C50072 = bs[3];
    const double C50085 = bs[4];
    const double C50106 = bs[5];
    const double C50148 = bs[6];
    const double C50217 = bs[7];
    const double C50298 = yP - yQ;
    const double C50347 = zP - zQ;
    const double C125 = bs[0];
    const double C50903 = yC - yD;
    const double C50915 = zC - zD;
    const double C51001 = yA - yB;
    const double C51013 = zA - zB;
    const double C49943 = C49938 / C49935;
    const double C49940 = 2 * C49935;
    const double C49939 = std::pow(C49935, 2);
    const double C49942 = C49937 * C49933;
    const double C49941 = C49933 * C49936;
    const double C50857 = C49933 * be;
    const double C50856 = C49933 * ae;
    const double C50855 = std::pow(C49933, 2);
    const double C49989 = C49984 / C49981;
    const double C49986 = 2 * C49981;
    const double C49985 = std::pow(C49981, 2);
    const double C50068 = C49981 * C49935;
    const double C49988 = C49983 * C49979;
    const double C49987 = C49979 * C49982;
    const double C50875 = C49979 * de;
    const double C50874 = C49979 * ce;
    const double C50873 = std::pow(C49979, 2);
    const double C50063 = 2 * C50061;
    const double C50077 = C50067 * ae;
    const double C50075 = std::pow(C50067, 2);
    const double C50073 = C50067 * ce;
    const double C50319 = std::pow(C50298, 2);
    const double C50368 = std::pow(C50347, 2);
    const double C50904 = std::pow(C50903, 2);
    const double C50954 = C50903 * de;
    const double C50953 = C50903 * ce;
    const double C50916 = std::pow(C50915, 2);
    const double C50980 = C50915 * de;
    const double C50979 = C50915 * ce;
    const double C51002 = std::pow(C51001, 2);
    const double C51052 = C51001 * be;
    const double C51051 = C51001 * ae;
    const double C51014 = std::pow(C51013, 2);
    const double C51078 = C51013 * be;
    const double C51077 = C51013 * ae;
    const double C50865 = std::pow(C49940, -1);
    const double C51158 = std::pow(C49940, -2);
    const double C49944 = 2 * C49939;
    const double C51136 = 4 * C49939;
    const double C49945 = C49941 / C49935;
    const double C50858 = C50855 * C49937;
    const double C50883 = std::pow(C49986, -1);
    const double C51145 = std::pow(C49986, -2);
    const double C49990 = 2 * C49985;
    const double C51143 = 4 * C49985;
    const double C49991 = C49987 / C49981;
    const double C50876 = C50873 * C49983;
    const double C50065 = C50063 / C50062;
    const double C146 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C50063 / C50062, 2) -
            (bs[1] * C50063) / C50062) *
           ae * ce) /
         C49981) /
        C49935;
    const double C126 = -(C50067 * bs[1] * C50063) / C50062;
    const double C262 = -(C50298 * bs[1] * C50063) / C50062;
    const double C403 = -(C50347 * bs[1] * C50063) / C50062;
    const double C50080 = C50072 * C50077;
    const double C50091 = C50085 * C50077;
    const double C50115 = C50106 * C50077;
    const double C50163 = C50148 * C50077;
    const double C50238 = C50217 * C50077;
    const double C132 = (-(bs[1] * C50077 * C50063) / C50062) / C49935;
    const double C50087 = C50075 * C50085;
    const double C50110 = C50075 * C50106;
    const double C50157 = C50075 * C50148;
    const double C50231 = C50075 * C50217;
    const double C50079 = C50072 * C50073;
    const double C50088 = C50085 * C50073;
    const double C50111 = C50106 * C50073;
    const double C50159 = C50148 * C50073;
    const double C50234 = C50217 * C50073;
    const double C136 = (bs[1] * C50073 * C50063) / (C50062 * C49981);
    const double C50905 = C50904 * C49983;
    const double C50917 = C50916 * C49983;
    const double C51003 = C51002 * C49937;
    const double C51015 = C51014 * C49937;
    const double C49950 = C49936 / C49944;
    const double C49948 = C49934 / C49944;
    const double C49947 = 0 - C49945;
    const double C50859 = C50858 / C49935;
    const double C49996 = C49982 / C49990;
    const double C49994 = C49980 / C49990;
    const double C49993 = 0 - C49991;
    const double C50877 = C50876 / C49981;
    const double C50069 = std::pow(C50065, 2);
    const double C50071 = -C50065;
    const double C50086 = std::pow(C50065, 4);
    const double C50149 = std::pow(C50065, 6);
    const double C50906 = C50905 / C49981;
    const double C50918 = C50917 / C49981;
    const double C51004 = C51003 / C49935;
    const double C51016 = C51015 / C49935;
    const double C49952 = C49947 * ae;
    const double C50860 = -C50859;
    const double C49998 = C49993 * ce;
    const double C50878 = -C50877;
    const double C50074 = C50066 * C50069;
    const double C147 =
        (-(C50069 * C50066 * C50067 * ae * ce) / C49981) / C49935 -
        (ae * C50069 * C50066 * C50067 * ce) / C50068 -
        (C50067 *
         (C50066 * C50069 +
          std::pow(C50067, 2) * bs[3] * std::pow(-C50065, 3)) *
         ae * ce) /
            C50068;
    const double C133 = (C50067 * C50069 * C50066 * C50077) / C49935 -
                        (ae * bs[1] * C50063) / (C50062 * C49935);
    const double C137 = (ce * bs[1] * C50063) / (C50062 * C49981) -
                        (C50067 * C50069 * C50066 * C50073) / C49981;
    const double C275 = -(C50298 * C50069 * C50066 * C50073) / C49981;
    const double C276 = (C50298 * C50069 * C50066 * C50077) / C49935;
    const double C416 = -(C50347 * C50069 * C50066 * C50073) / C49981;
    const double C417 = (C50347 * C50069 * C50066 * C50077) / C49935;
    const double C50078 = std::pow(C50071, 3);
    const double C50107 = std::pow(C50071, 5);
    const double C50218 = std::pow(C50071, 7);
    const double C50095 = C50086 * C50091;
    const double C50094 = C50086 * C50088;
    const double C50093 = C50087 * C50086;
    const double C50105 = C50085 * C50086;
    const double C50171 = C50149 * C50163;
    const double C50168 = C50149 * C50159;
    const double C50167 = C50157 * C50149;
    const double C50216 = C50148 * C50149;
    const double C50907 = -C50906;
    const double C50919 = -C50918;
    const double C51005 = -C51004;
    const double C51017 = -C51016;
    const double C49955 = C49952 / C49935;
    const double C50861 = std::exp(C50860);
    const double C50001 = C49998 / C49981;
    const double C50879 = std::exp(C50878);
    const double C127 = C50074 * C50075 - (bs[1] * C50063) / C50062;
    const double C258 = C50298 * C50067 * C50074;
    const double C263 = C50074 * C50319 - (bs[1] * C50063) / C50062;
    const double C399 = C50347 * C50067 * C50074;
    const double C404 = C50074 * C50368 - (bs[1] * C50063) / C50062;
    const double C783 = C50347 * C50298 * C50074;
    const double C50082 = C50078 * C50080;
    const double C50081 = C50078 * C50079;
    const double C50084 = C50072 * C50078;
    const double C291 =
        (-(C50298 * (C50074 + C50075 * C50072 * C50078) * C50076) / C49981) /
        C49935;
    const double C432 =
        (-(C50347 * (C50074 + C50075 * C50072 * C50078) * C50076) / C49981) /
        C49935;
    const double C50122 = C50107 * C50115;
    const double C50119 = C50107 * C50111;
    const double C50118 = C50110 * C50107;
    const double C50147 = C50106 * C50107;
    const double C50247 = C50218 * C50238;
    const double C50244 = C50218 * C50234;
    const double C50243 = C50231 * C50218;
    const double C50098 = C50067 * C50095;
    const double C50103 = C50095 * ce;
    const double C50681 = C50298 * C50095;
    const double C50097 = C50067 * C50094;
    const double C50104 = ae * C50094;
    const double C50677 = C50298 * C50094;
    const double C50116 = C50105 * ae;
    const double C50114 = C50105 * C50075;
    const double C50113 = C50067 * C50105;
    const double C50112 = C50105 * ce;
    const double C50805 = C50105 * C50319;
    const double C50825 = C50298 * C50105;
    const double C50830 = C50105 * C50368;
    const double C50847 = C50347 * C50105;
    const double C50179 = C50067 * C50171;
    const double C50214 = C50171 * ce;
    const double C50328 = C50171 * C50319;
    const double C50377 = C50171 * C50368;
    const double C50399 = C50298 * C50171;
    const double C50426 = C50347 * C50171;
    const double C50176 = C50067 * C50168;
    const double C50215 = ae * C50168;
    const double C50329 = C50168 * C50319;
    const double C50378 = C50168 * C50368;
    const double C50400 = C50298 * C50168;
    const double C50427 = C50347 * C50168;
    const double C50239 = C50216 * ae;
    const double C50237 = C50216 * C50075;
    const double C50236 = C50067 * C50216;
    const double C50235 = C50216 * ce;
    const double C50908 = std::exp(C50907);
    const double C50920 = std::exp(C50919);
    const double C51006 = std::exp(C51005);
    const double C51018 = std::exp(C51017);
    const double C49957 = C49955 - C49948;
    const double C19936 = C50861 * C276;
    const double C22228 = C50861 * C417;
    const double C49946 = C49942 * C50861;
    const double C50862 = C50861 * C50856;
    const double C50866 = C50865 * C50861;
    const double C51133 = C50861 * C50857;
    const double C51130 = C50861 / C49940;
    const double C17048 = C51158 * C50861;
    const double C50003 = C50001 - C49994;
    const double C49992 = C49988 * C50879;
    const double C50880 = C50879 * C50874;
    const double C50884 = C50883 * C50879;
    const double C51140 = C50879 * C50875;
    const double C51137 = C50879 / C49986;
    const double C903 = C51145 * C50879;
    const double C134 =
        (C50069 * C50066 * C50077 + C50067 * (C50067 * C50082 + C50074 * ae) +
         C50067 * C50074 * ae) /
        C49935;
    const double C268 = (C50298 * (C50067 * C50082 + C50074 * ae)) / C49935;
    const double C278 = (C50069 * C50066 * C50077 + C50082 * C50319) / C49935;
    const double C409 = (C50347 * (C50067 * C50082 + C50074 * ae)) / C49935;
    const double C419 = (C50069 * C50066 * C50077 + C50082 * C50368) / C49935;
    const double C788 = (C50347 * C50298 * C50082) / C49935;
    const double C992 =
        (2 * C50298 * C50082 + C50298 * (C50082 + C50095 * C50319)) / C49935;
    const double C1106 = (C50298 * C50082 + C50298 * C50095 * C50368) / C49935;
    const double C1455 = (C50347 * (C50082 + C50095 * C50319)) / C49935;
    const double C1739 =
        (2 * C50347 * C50082 + C50347 * (C50082 + C50095 * C50368)) / C49935;
    const double C148 =
        (-(ae * (C50067 * C50081 + C50074 * ce)) / C49981) / C49935 -
        ((C50074 + C50075 * C50072 * C50078) * C50076) / C50068 -
        ((C50067 * C50082 + C50074 * ae) * ce) / C50068 +
        C50067 * ((-(C50082 * ce) / C49981) / C49935 - (ae * C50081) / C50068 -
                  (C50067 *
                   (C50072 * C50078 + C50075 * bs[4] * std::pow(C50065, 4)) *
                   C50076) /
                      C50068);
    const double C138 = -(C50067 * (C50067 * C50081 + C50074 * ce) +
                          C50069 * C50066 * C50073 + C50067 * C50074 * ce) /
                        C49981;
    const double C274 = -(C50298 * (C50067 * C50081 + C50074 * ce)) / C49981;
    const double C282 = -(C50081 * C50319 + C50069 * C50066 * C50073) / C49981;
    const double C415 = -(C50347 * (C50067 * C50081 + C50074 * ce)) / C49981;
    const double C423 = -(C50081 * C50368 + C50069 * C50066 * C50073) / C49981;
    const double C792 = -(C50347 * C50298 * C50081) / C49981;
    const double C988 = (-2 * C50298 * C50081) / C49981 -
                        (C50298 * (C50094 * C50319 + C50081)) / C49981;
    const double C1102 = -(C50298 * C50094 * C50368 + C50298 * C50081) / C49981;
    const double C1451 = -(C50347 * (C50094 * C50319 + C50081)) / C49981;
    const double C1735 = (-2 * C50347 * C50081) / C49981 -
                         (C50347 * (C50094 * C50368 + C50081)) / C49981;
    const double C50092 = C50084 * ae;
    const double C50090 = C50067 * C50084;
    const double C50089 = C50084 * ce;
    const double C50096 = C50084 + C50093;
    const double C50816 = C50298 * C50084;
    const double C128 =
        2 * C50067 * C50074 + C50067 * (C50074 + C50084 * C50075);
    const double C259 = C50298 * (C50074 + C50084 * C50075);
    const double C400 = C50347 * (C50074 + C50084 * C50075);
    const double C984 =
        2 * C50298 * C50074 + C50298 * (C50074 + C50084 * C50319);
    const double C1098 = C50298 * C50074 + C50298 * C50084 * C50368;
    const double C1447 = C50347 * (C50074 + C50084 * C50319);
    const double C1731 =
        2 * C50347 * C50074 + C50347 * (C50074 + C50084 * C50368);
    const double C2324 =
        3 * (C50074 + C50084 * C50319) +
        C50298 * (2 * C50298 * C50084 + C50298 * (C50084 + C50105 * C50319));
    const double C2565 =
        C50074 + C50084 * C50319 + (C50084 + C50105 * C50319) * C50368;
    const double C3087 =
        C50347 * (2 * C50298 * C50084 + C50298 * (C50084 + C50105 * C50319));
    const double C5400 =
        3 * (C50074 + C50084 * C50368) +
        C50347 * (2 * C50347 * C50084 + C50347 * (C50084 + C50105 * C50368));
    const double C19938 = C50861 * C291;
    const double C22230 = C50861 * C432;
    const double C50127 = C50067 * C50122;
    const double C50145 = C50122 * ce;
    const double C50304 = C50298 * C50122;
    const double C50353 = C50347 * C50122;
    const double C50660 = C50122 * C50319;
    const double C50706 = C50122 * C50368;
    const double C2327 =
        (3 * (C50082 + C50095 * C50319) +
         C50298 * (2 * C50298 * C50095 + C50298 * (C50095 + C50122 * C50319))) /
        C49935;
    const double C2568 =
        (C50082 + C50095 * C50319 + (C50095 + C50122 * C50319) * C50368) /
        C49935;
    const double C3090 =
        (C50347 * (2 * C50298 * C50095 + C50298 * (C50095 + C50122 * C50319))) /
        C49935;
    const double C5403 =
        (3 * (C50082 + C50095 * C50368) +
         C50347 * (2 * C50347 * C50095 + C50347 * (C50095 + C50122 * C50368))) /
        C49935;
    const double C50126 = C50067 * C50119;
    const double C50146 = ae * C50119;
    const double C50305 = C50298 * C50119;
    const double C50354 = C50347 * C50119;
    const double C50654 = C50119 * C50319;
    const double C50700 = C50119 * C50368;
    const double C2329 =
        (-3 * (C50094 * C50319 + C50081)) / C49981 +
        C50298 * ((-2 * C50298 * C50094) / C49981 -
                  (C50298 * (C50119 * C50319 + C50094)) / C49981);
    const double C2570 =
        -((C50119 * C50319 + C50094) * C50368 + C50094 * C50319 + C50081) /
        C49981;
    const double C3092 =
        C50347 * ((-2 * C50298 * C50094) / C49981 -
                  (C50298 * (C50119 * C50319 + C50094)) / C49981);
    const double C5405 =
        (-3 * (C50094 * C50368 + C50081)) / C49981 +
        C50347 * ((-2 * C50347 * C50094) / C49981 -
                  (C50347 * (C50119 * C50368 + C50094)) / C49981);
    const double C50125 = C50105 + C50118;
    const double C50164 = C50147 * ae;
    const double C50162 = C50147 * C50075;
    const double C50161 = C50067 * C50147;
    const double C50160 = C50147 * ce;
    const double C50175 = C50147 + C50167;
    const double C50834 = C50147 * C50319;
    const double C50843 = C50298 * C50147;
    const double C50848 = C50147 * C50368;
    const double C50256 = C50067 * C50247;
    const double C50253 = C50067 * C50244;
    const double C50252 = C50216 + C50243;
    const double C50108 = C50103 / C49981;
    const double C50109 = C50104 / C50068;
    const double C50121 = C50084 + C50114;
    const double C50123 = C50113 * ae;
    const double C50120 = C50113 * ce;
    const double C50151 = 2 * C50113;
    const double C50814 = C50298 * C50113;
    const double C50806 = C50084 + C50805;
    const double C50833 = 2 * C50825;
    const double C50831 = C50084 + C50830;
    const double C50849 = 2 * C50847;
    const double C50229 = C50214 / C49981;
    const double C50331 = C50122 + C50328;
    const double C50380 = C50122 + C50377;
    const double C50404 = C50399 * ce;
    const double C50455 = C50347 * C50399;
    const double C50730 = C50399 * C50368;
    const double C50431 = C50426 * ce;
    const double C50230 = C50215 / C50068;
    const double C50332 = C50329 + C50119;
    const double C50381 = C50378 + C50119;
    const double C50405 = ae * C50400;
    const double C50456 = C50347 * C50400;
    const double C50727 = C50400 * C50368;
    const double C50432 = ae * C50427;
    const double C50246 = C50147 + C50237;
    const double C50248 = C50236 * ae;
    const double C50245 = C50236 * ce;
    const double C50955 = C50908 * C50953;
    const double C50958 = C50883 * C50908;
    const double C51149 = C50908 * C50954;
    const double C51144 = C50908 / C49986;
    const double C255 = C51145 * C50908;
    const double C50981 = C50920 * C50979;
    const double C50984 = C50883 * C50920;
    const double C51153 = C50920 * C50980;
    const double C51146 = C50920 / C49986;
    const double C398 = C51145 * C50920;
    const double C51053 = C51006 * C51051;
    const double C51056 = C50865 * C51006;
    const double C51162 = C51006 * C51052;
    const double C51157 = C51006 / C49940;
    const double C2175 = C51158 * C51006;
    const double C51079 = C51018 * C51077;
    const double C51082 = C50865 * C51018;
    const double C51166 = C51018 * C51078;
    const double C51159 = C51018 / C49940;
    const double C5107 = C51158 * C51018;
    const double C49951 = C49946 / C49939;
    const double C49949 = 2 * C49946;
    const double C51134 = C50862 / C49944;
    const double C51132 = C50862 / C49935;
    const double C51131 = C50862 * C50857;
    const double C17047 = (2 * C50865 * C50862) / C49935;
    const double C51135 = C50866 * C50857;
    const double C108 = C50866 / C51136;
    const double C7938 = C50866 / C49940;
    const double C51171 = C51133 / C49935;
    const double C17046 = (C50861 * std::pow(C50856, 2)) / C49939 + C51130;
    const double C49997 = C49992 / C49985;
    const double C49995 = 2 * C49992;
    const double C51141 = C50880 / C49990;
    const double C51139 = C50880 / C49981;
    const double C51138 = C50880 * C50875;
    const double C902 = (2 * C50883 * C50880) / C49981;
    const double C51142 = C50884 * C50875;
    const double C112 = C50884 / C51143;
    const double C539 = C50884 / C49986;
    const double C51174 = C51140 / C49981;
    const double C901 = (C50879 * std::pow(C50874, 2)) / C49985 + C51137;
    const double C2340 = C50866 * C268;
    const double C19940 = C50861 * C268;
    const double C24975 = C50866 * C268;
    const double C19944 = C50861 * C278;
    const double C5416 = C50866 * C409;
    const double C22232 = C50861 * C409;
    const double C28100 = C50866 * C409;
    const double C22236 = C50861 * C419;
    const double C20470 = C50861 * C788;
    const double C19952 = C50861 * C992;
    const double C20828 = C50861 * C1106;
    const double C20478 = C50861 * C1455;
    const double C22249 = C50861 * C1739;
    const double C50101 = C50098 + C50092;
    const double C264 = C50067 * C50074 + C50090 * C50319;
    const double C405 = C50067 * C50074 + C50090 * C50368;
    const double C784 = C50347 * C50298 * C50090;
    const double C983 =
        2 * C50298 * C50090 + C50298 * (C50090 + C50113 * C50319);
    const double C1097 = C50298 * C50090 + C50298 * C50113 * C50368;
    const double C1446 = C50347 * (C50090 + C50113 * C50319);
    const double C1730 =
        2 * C50347 * C50090 + C50347 * (C50090 + C50113 * C50368);
    const double C50100 = C50097 + C50089;
    const double C50099 = C50096 * C50076;
    const double C4508 =
        2 * C50347 * C50816 + C50347 * (C50816 + C50298 * C50105 * C50368);
    const double C6413 =
        3 * (C50816 + C50825 * C50368) +
        C50347 * (2 * C50347 * C50825 +
                  C50347 * (C50825 + C50298 * C50147 * C50368));
    const double C50131 = C50127 + C50116;
    const double C50155 = C50145 / C49981;
    const double C50307 = C50304 * ce;
    const double C50715 = 2 * C50304;
    const double C4516 =
        (2 * C50347 * C50681 + C50347 * (C50681 + C50304 * C50368)) / C49935;
    const double C6417 =
        (3 * (C50681 + C50304 * C50368) +
         C50347 * (2 * C50347 * C50304 + C50347 * (C50304 + C50399 * C50368))) /
        C49935;
    const double C50356 = C50353 * ce;
    const double C50739 = 2 * C50353;
    const double C50661 = C50095 + C50660;
    const double C50707 = C50095 + C50706;
    const double C19964 = C50861 * C2327;
    const double C20832 = C50861 * C2568;
    const double C20486 = C50861 * C3090;
    const double C24216 = C50861 * C5403;
    const double C50130 = C50126 + C50112;
    const double C50156 = C50146 / C50068;
    const double C50308 = ae * C50305;
    const double C50709 = -2 * C50305;
    const double C4514 = (-2 * C50347 * C50677) / C49981 -
                         (C50347 * (C50305 * C50368 + C50677)) / C49981;
    const double C6415 =
        (-3 * (C50305 * C50368 + C50677)) / C49981 +
        C50347 * ((-2 * C50347 * C50305) / C49981 -
                  (C50347 * (C50400 * C50368 + C50305)) / C49981);
    const double C50357 = ae * C50354;
    const double C50733 = -2 * C50354;
    const double C50655 = C50654 + C50094;
    const double C50701 = C50700 + C50094;
    const double C50129 = C50125 * C50076;
    const double C50187 = C50179 + C50164;
    const double C50170 = C50105 + C50162;
    const double C50172 = C50161 * ae;
    const double C50169 = C50161 * ce;
    const double C50221 = 2 * C50161;
    const double C50802 = C50161 * C50319;
    const double C50823 = C50298 * C50161;
    const double C50827 = C50161 * C50368;
    const double C2325 =
        3 * (C50090 + C50113 * C50319) +
        C50298 * (2 * C50298 * C50113 + C50298 * (C50113 + C50161 * C50319));
    const double C2566 =
        C50090 + C50113 * C50319 + (C50113 + C50161 * C50319) * C50368;
    const double C3088 =
        C50347 * (2 * C50298 * C50113 + C50298 * (C50113 + C50161 * C50319));
    const double C5401 =
        3 * (C50090 + C50113 * C50368) +
        C50347 * (2 * C50347 * C50113 + C50347 * (C50113 + C50161 * C50368));
    const double C50184 = C50176 + C50160;
    const double C50183 = C50175 * C50076;
    const double C50835 = C50105 + C50834;
    const double C50844 = C50843 * C50368;
    const double C50850 = C50105 + C50848;
    const double C50264 = C50256 + C50239;
    const double C50261 = C50253 + C50235;
    const double C50260 = C50252 * C50076;
    const double C50117 = -C50108;
    const double C129 = 3 * (C50074 + C50084 * C50075) +
                        C50067 * (2 * C50090 + C50067 * C50121);
    const double C260 = C50298 * (2 * C50090 + C50067 * C50121);
    const double C265 = C50074 + C50084 * C50075 + C50121 * C50319;
    const double C401 = C50347 * (2 * C50090 + C50067 * C50121);
    const double C406 = C50074 + C50084 * C50075 + C50121 * C50368;
    const double C785 = C50347 * C50298 * C50121;
    const double C4507 =
        2 * C50347 * C50814 + C50347 * (C50814 + C50298 * C50161 * C50368);
    const double C3392 =
        4 * (2 * C50298 * C50084 + C50298 * C50806) +
        C50298 * (3 * C50806 + C50298 * (2 * C50298 * C50105 +
                                         C50298 * (C50105 + C50147 * C50319)));
    const double C3566 =
        2 * C50298 * C50084 + C50298 * C50806 +
        (2 * C50298 * C50105 + C50298 * (C50105 + C50147 * C50319)) * C50368;
    const double C4091 =
        C50347 * (3 * C50806 + C50298 * (2 * C50298 * C50105 +
                                         C50298 * (C50105 + C50147 * C50319)));
    const double C4506 =
        2 * C50347 * C50806 +
        C50347 * (C50806 + (C50105 + C50147 * C50319) * C50368);
    const double C7319 =
        4 * (2 * C50347 * C50084 + C50347 * C50831) +
        C50347 * (3 * C50831 + C50347 * (2 * C50347 * C50105 +
                                         C50347 * (C50105 + C50147 * C50368)));
    const double C50242 = -C50229;
    const double C50334 = C50331 * ce;
    const double C50716 = C50298 * C50331;
    const double C50383 = C50380 * ce;
    const double C50740 = C50347 * C50380;
    const double C50409 = C50404 / C49981;
    const double C50458 = C50455 * ce;
    const double C50731 = C50304 + C50730;
    const double C50436 = C50431 / C49981;
    const double C50335 = ae * C50332;
    const double C50710 = C50298 * C50332;
    const double C50384 = ae * C50381;
    const double C50734 = C50347 * C50381;
    const double C50410 = C50405 / C50068;
    const double C50459 = ae * C50456;
    const double C50728 = C50727 + C50305;
    const double C50437 = C50432 / C50068;
    const double C50257 = C50246 * ae;
    const double C50255 = C50067 * C50246;
    const double C50254 = C50246 * ce;
    const double C51151 = C50955 / C49990;
    const double C51150 = C50955 * C50954;
    const double C51147 = C50955 / C49981;
    const double C254 = (2 * C50883 * C50955) / C49981;
    const double C51152 = C50958 * C50954;
    const double C979 = C50958 / C51143;
    const double C1213 = C50958 / C49986;
    const double C51176 = C51149 / C49981;
    const double C253 = (C50908 * std::pow(C50953, 2)) / C49985 + C51144;
    const double C51155 = C50981 / C49990;
    const double C51154 = C50981 * C50980;
    const double C51148 = C50981 / C49981;
    const double C397 = (2 * C50883 * C50981) / C49981;
    const double C51156 = C50984 * C50980;
    const double C1727 = C50984 / C51143;
    const double C1974 = C50984 / C49986;
    const double C51179 = C51153 / C49981;
    const double C396 = (C50920 * std::pow(C50979, 2)) / C49985 + C51146;
    const double C51164 = C51053 / C49944;
    const double C51163 = C51053 * C51052;
    const double C51160 = C51053 / C49935;
    const double C2174 = (2 * C50865 * C51053) / C49935;
    const double C51165 = C51056 * C51052;
    const double C19834 = C51056 / C51136;
    const double C24822 = C51056 / C49940;
    const double C51182 = C51162 / C49935;
    const double C2173 = (C51006 * std::pow(C51051, 2)) / C49939 + C51157;
    const double C51168 = C51079 / C49944;
    const double C51167 = C51079 * C51078;
    const double C51161 = C51079 / C49935;
    const double C5106 = (2 * C50865 * C51079) / C49935;
    const double C51169 = C51082 * C51078;
    const double C39329 = C51082 / C51136;
    const double C44682 = C51082 / C49940;
    const double C51185 = C51166 / C49935;
    const double C5105 = (C51018 * std::pow(C51077, 2)) / C49939 + C51159;
    const double C49954 = C49943 - C49951;
    const double C49953 = C49933 * C49949;
    const double C2177 = (-C49949 / C49935) / C49940 - (0 * be) / C49935;
    const double C19835 = -C49949 / C49935;
    const double C25015 = C51132 * C992;
    const double C24989 = C51132 * C278;
    const double C24983 = C51132 * C268;
    const double C24977 = C51132 * C291;
    const double C24973 = C51132 * C276;
    const double C25738 = C51132 * C1455;
    const double C25722 = C51132 * C788;
    const double C26008 = C51132 * C2327;
    const double C26178 = C51132 * C2568;
    const double C26170 = C51132 * C1106;
    const double C26689 = C51132 * C3090;
    const double C28124 = C51132 * C419;
    const double C28108 = C51132 * C409;
    const double C28102 = C51132 * C432;
    const double C28098 = C51132 * C417;
    const double C30579 = C51132 * C1739;
    const double C46772 = C51132 * C5403;
    const double C51170 = C51131 / C49939;
    const double C17204 = C17047 * C268;
    const double C34290 = C17047 * C409;
    const double C51172 = C51135 / C49935;
    const double C2171 = -C51171;
    const double C17242 = C17046 * C278;
    const double C17218 = C17046 * C268;
    const double C17208 = C17046 * C291;
    const double C17202 = C17046 * C276;
    const double C17940 = C17046 * C788;
    const double C18204 = C17046 * C992;
    const double C18368 = C17046 * C1106;
    const double C18872 = C17046 * C1455;
    const double C34328 = C17046 * C419;
    const double C34304 = C17046 * C409;
    const double C34294 = C17046 * C432;
    const double C34288 = C17046 * C417;
    const double C36130 = C17046 * C1739;
    const double C50000 = C49989 - C49997;
    const double C49999 = C49979 * C49995;
    const double C257 = (-C49995 / C49981) / C49986 - (0 * de) / C49981;
    const double C980 = -C49995 / C49981;
    const double C51173 = C51138 / C49985;
    const double C51175 = C51142 / C49981;
    const double C251 = -C51174;
    const double C135 = (2 * (C50067 * C50082 + C50074 * ae) +
                         C50067 * (C50082 + C50067 * C50101 + C50090 * ae) +
                         (C50074 + C50084 * C50075) * ae) /
                        C49935;
    const double C269 =
        (C50298 * (C50082 + C50067 * C50101 + C50090 * ae)) / C49935;
    const double C279 =
        (C50067 * C50082 + C50074 * ae + C50101 * C50319) / C49935;
    const double C410 =
        (C50347 * (C50082 + C50067 * C50101 + C50090 * ae)) / C49935;
    const double C420 =
        (C50067 * C50082 + C50074 * ae + C50101 * C50368) / C49935;
    const double C789 = (C50347 * C50298 * C50101) / C49935;
    const double C139 =
        (-2 * (C50067 * C50081 + C50074 * ce)) / C49981 -
        (C50067 * (C50067 * C50100 + C50081 + C50090 * ce)) / C49981 -
        ((C50074 + C50084 * C50075) * ce) / C49981;
    const double C273 =
        -(C50298 * (C50067 * C50100 + C50081 + C50090 * ce)) / C49981;
    const double C283 =
        -(C50100 * C50319 + C50067 * C50081 + C50074 * ce) / C49981;
    const double C414 =
        -(C50347 * (C50067 * C50100 + C50081 + C50090 * ce)) / C49981;
    const double C424 =
        -(C50100 * C50368 + C50067 * C50081 + C50074 * ce) / C49981;
    const double C793 = -(C50347 * C50298 * C50100) / C49981;
    const double C149 =
        2 * ((-(C50082 * ce) / C49981) / C49935 - (ae * C50081) / C50068 -
             (C50067 * C50099) / C50068) -
        (ae * (C50067 * C50100 + C50081 + C50090 * ce)) / C50068 -
        ((C50082 + C50067 * C50101 + C50090 * ae) * ce) / C50068 +
        C50067 *
            ((-(ae * C50100) / C49981) / C49935 - C50099 / C50068 -
             (C50101 * ce) / C50068 +
             C50067 *
                 ((-(C50095 * ce) / C49981) / C49935 - (ae * C50094) / C50068 -
                  (C50067 *
                   (C50085 * C50086 + C50075 * bs[5] * std::pow(C50071, 5)) *
                   C50076) /
                      C50068));
    const double C290 = (-(C50298 * C50082 * ce) / C49981) / C49935 -
                        (ae * C50298 * C50081) / C50068 -
                        (C50067 * C50298 * C50099) / C50068;
    const double C293 = (-(C50099 * std::pow(C50298, 2)) / C49981) / C49935 -
                        ((C50074 + C50075 * C50072 * C50078) * C50076) / C50068;
    const double C431 = (-(C50347 * C50082 * ce) / C49981) / C49935 -
                        (ae * C50347 * C50081) / C50068 -
                        (C50067 * C50347 * C50099) / C50068;
    const double C434 = (-(C50099 * std::pow(C50347, 2)) / C49981) / C49935 -
                        ((C50074 + C50075 * C50072 * C50078) * C50076) / C50068;
    const double C798 = (-(C50347 * C50298 * C50099) / C49981) / C49935;
    const double C50134 = C50067 * C50131;
    const double C50152 = 2 * C50131;
    const double C50144 = C50131 * ce;
    const double C50679 = C50298 * C50131;
    const double C991 =
        (2 * C50298 * C50101 + C50298 * (C50101 + C50131 * C50319)) / C49935;
    const double C1105 = (C50298 * C50101 + C50298 * C50131 * C50368) / C49935;
    const double C1454 = (C50347 * (C50101 + C50131 * C50319)) / C49935;
    const double C1738 =
        (2 * C50347 * C50101 + C50347 * (C50101 + C50131 * C50368)) / C49935;
    const double C50166 = -C50155;
    const double C50310 = C50307 / C49981;
    const double C22257 = C50861 * C4516;
    const double C29376 = C51132 * C4516;
    const double C23262 = C50861 * C6417;
    const double C50359 = C50356 / C49981;
    const double C3396 =
        (4 * (2 * C50298 * C50095 + C50298 * C50661) +
         C50298 * (3 * C50661 + C50298 * (2 * C50304 + C50298 * C50331))) /
        C49935;
    const double C3570 = (2 * C50298 * C50095 + C50298 * C50661 +
                          (2 * C50304 + C50298 * C50331) * C50368) /
                         C49935;
    const double C4095 =
        (C50347 * (3 * C50661 + C50298 * (2 * C50304 + C50298 * C50331))) /
        C49935;
    const double C4512 =
        (2 * C50347 * C50661 + C50347 * (C50661 + C50331 * C50368)) / C49935;
    const double C23246 =
        (3 * (C50661 + C50331 * C50368) +
         C50347 * (2 * C50347 * C50331 +
                   C50347 * (C50331 + (C50171 + C50247 * C50319) * C50368))) /
        C49935;
    const double C7323 =
        (4 * (2 * C50347 * C50095 + C50347 * C50707) +
         C50347 * (3 * C50707 + C50347 * (2 * C50353 + C50347 * C50380))) /
        C49935;
    const double C50133 = C50067 * C50130;
    const double C50150 = -2 * C50130;
    const double C50142 = ae * C50130;
    const double C50675 = C50298 * C50130;
    const double C987 = (-2 * C50298 * C50100) / C49981 -
                        (C50298 * (C50130 * C50319 + C50100)) / C49981;
    const double C1101 = -(C50298 * C50130 * C50368 + C50298 * C50100) / C49981;
    const double C1450 = -(C50347 * (C50130 * C50319 + C50100)) / C49981;
    const double C1734 = (-2 * C50347 * C50100) / C49981 -
                         (C50347 * (C50130 * C50368 + C50100)) / C49981;
    const double C50311 = C50308 / C50068;
    const double C50711 = C50709 / C49981;
    const double C50360 = C50357 / C50068;
    const double C50735 = C50733 / C49981;
    const double C3394 =
        4 * ((-2 * C50298 * C50094) / C49981 - (C50298 * C50655) / C49981) +
        C50298 *
            ((-3 * C50655) / C49981 +
             C50298 * ((-2 * C50305) / C49981 - (C50298 * C50332) / C49981));
    const double C3568 =
        (-2 * C50298 * C50094) / C49981 - (C50298 * C50655) / C49981 +
        ((-2 * C50305) / C49981 - (C50298 * C50332) / C49981) * C50368;
    const double C4093 =
        C50347 *
        ((-3 * C50655) / C49981 +
         C50298 * ((-2 * C50305) / C49981 - (C50298 * C50332) / C49981));
    const double C4510 = (-2 * C50347 * C50655) / C49981 -
                         (C50347 * (C50332 * C50368 + C50655)) / C49981;
    const double C23245 =
        (-3 * (C50332 * C50368 + C50655)) / C49981 +
        C50347 * ((-2 * C50347 * C50332) / C49981 -
                  (C50347 * ((C50244 * C50319 + C50168) * C50368 + C50332)) /
                      C49981);
    const double C7321 =
        4 * ((-2 * C50347 * C50094) / C49981 - (C50347 * C50701) / C49981) +
        C50347 *
            ((-3 * C50701) / C49981 +
             C50347 * ((-2 * C50354) / C49981 - (C50347 * C50381) / C49981));
    const double C50132 = C50067 * C50129;
    const double C50143 = C50129 / C50068;
    const double C50299 = C50298 * C50129;
    const double C50348 = C50347 * C50129;
    const double C294 =
        (-((C50082 + C50095 * C50319) * ce) / C49981) / C49935 -
        (ae * (C50094 * C50319 + C50081)) / C50068 +
        C50067 * ((-(C50129 * C50319) / C49981) / C49935 - C50099 / C50068);
    const double C435 =
        (-((C50082 + C50095 * C50368) * ce) / C49981) / C49935 -
        (ae * (C50094 * C50368 + C50081)) / C50068 +
        C50067 * ((-(C50129 * C50368) / C49981) / C49935 - C50099 / C50068);
    const double C996 =
        (-2 * C50298 * C50099) / C50068 +
        C50298 * ((-(C50129 * C50319) / C49981) / C49935 - C50099 / C50068);
    const double C1459 =
        C50347 * ((-(C50129 * C50319) / C49981) / C49935 - C50099 / C50068);
    const double C1743 =
        (-2 * C50347 * C50099) / C50068 +
        C50347 * ((-(C50129 * C50368) / C49981) / C49935 - C50099 / C50068);
    const double C50191 = C50067 * C50187;
    const double C50224 = 2 * C50187;
    const double C50213 = C50187 * ce;
    const double C50398 = C50298 * C50187;
    const double C50425 = C50347 * C50187;
    const double C50657 = C50187 * C50319;
    const double C50703 = C50187 * C50368;
    const double C2328 =
        (3 * (C50101 + C50131 * C50319) +
         C50298 * (2 * C50298 * C50131 + C50298 * (C50131 + C50187 * C50319))) /
        C49935;
    const double C2569 =
        (C50101 + C50131 * C50319 + (C50131 + C50187 * C50319) * C50368) /
        C49935;
    const double C3091 =
        (C50347 * (2 * C50298 * C50131 + C50298 * (C50131 + C50187 * C50319))) /
        C49935;
    const double C5404 =
        (3 * (C50101 + C50131 * C50368) +
         C50347 * (2 * C50347 * C50131 + C50347 * (C50131 + C50187 * C50368))) /
        C49935;
    const double C50180 = C50170 * ae;
    const double C50178 = C50067 * C50170;
    const double C50177 = C50170 * ce;
    const double C50222 = 3 * C50170;
    const double C50821 = C50298 * C50170;
    const double C982 =
        2 * C50298 * C50121 + C50298 * (C50121 + C50170 * C50319);
    const double C1096 = C50298 * C50121 + C50298 * C50170 * C50368;
    const double C1445 = C50347 * (C50121 + C50170 * C50319);
    const double C1729 =
        2 * C50347 * C50121 + C50347 * (C50121 + C50170 * C50368);
    const double C2326 =
        3 * (C50121 + C50170 * C50319) +
        C50298 * (2 * C50298 * C50170 + C50298 * (C50170 + C50246 * C50319));
    const double C2567 =
        C50121 + C50170 * C50319 + (C50170 + C50246 * C50319) * C50368;
    const double C3089 =
        C50347 * (2 * C50298 * C50170 + C50298 * (C50170 + C50246 * C50319));
    const double C5402 =
        3 * (C50121 + C50170 * C50368) +
        C50347 * (2 * C50347 * C50170 + C50347 * (C50170 + C50246 * C50368));
    const double C50803 = C50113 + C50802;
    const double C6412 =
        3 * (C50814 + C50823 * C50368) +
        C50347 * (2 * C50347 * C50823 +
                  C50347 * (C50823 + C50298 * C50236 * C50368));
    const double C50828 = C50113 + C50827;
    const double C50190 = C50067 * C50184;
    const double C50220 = -2 * C50184;
    const double C50211 = ae * C50184;
    const double C50396 = C50298 * C50184;
    const double C50423 = C50347 * C50184;
    const double C50651 = C50184 * C50319;
    const double C50697 = C50184 * C50368;
    const double C2330 =
        (-3 * (C50130 * C50319 + C50100)) / C49981 +
        C50298 * ((-2 * C50298 * C50130) / C49981 -
                  (C50298 * (C50184 * C50319 + C50130)) / C49981);
    const double C2571 =
        -((C50184 * C50319 + C50130) * C50368 + C50130 * C50319 + C50100) /
        C49981;
    const double C3093 =
        C50347 * ((-2 * C50298 * C50130) / C49981 -
                  (C50298 * (C50184 * C50319 + C50130)) / C49981);
    const double C5406 =
        (-3 * (C50130 * C50368 + C50100)) / C49981 +
        C50347 * ((-2 * C50347 * C50130) / C49981 -
                  (C50347 * (C50184 * C50368 + C50130)) / C49981);
    const double C50189 = C50067 * C50183;
    const double C50212 = C50183 / C50068;
    const double C50306 = C50298 * C50183;
    const double C50322 = C50183 * C50319;
    const double C50355 = C50347 * C50183;
    const double C50371 = C50183 * C50368;
    const double C50836 = C50298 * C50835;
    const double C23244 =
        3 * (C50806 + C50835 * C50368) +
        C50347 * (2 * C50347 * C50835 +
                  C50347 * (C50835 + (C50147 + C50216 * C50319) * C50368));
    const double C50845 = C50825 + C50844;
    const double C50851 = C50347 * C50850;
    const double C50270 = C50067 * C50264;
    const double C50267 = C50067 * C50261;
    const double C50266 = C50067 * C50260;
    const double C50330 = C50260 * C50319;
    const double C50379 = C50260 * C50368;
    const double C50401 = C50298 * C50260;
    const double C50428 = C50347 * C50260;
    const double C50124 = C50117 / C49935;
    const double C50251 = C50242 / C49935;
    const double C50337 = C50334 / C49981;
    const double C50717 = C50715 + C50716;
    const double C50386 = C50383 / C49981;
    const double C50741 = C50739 + C50740;
    const double C50413 = -C50409;
    const double C50461 = C50458 / C49981;
    const double C24210 =
        (4 * (2 * C50347 * C50304 + C50347 * C50731) +
         C50347 * (3 * C50731 +
                   C50347 * (2 * C50455 +
                             C50347 * (C50399 + C50298 * C50247 * C50368)))) /
        C49935;
    const double C50440 = -C50436;
    const double C50338 = C50335 / C50068;
    const double C50712 = C50710 / C49981;
    const double C50387 = C50384 / C50068;
    const double C50736 = C50734 / C49981;
    const double C50462 = C50459 / C50068;
    const double C24209 =
        4 * ((-2 * C50347 * C50305) / C49981 - (C50347 * C50728) / C49981) +
        C50347 * ((-3 * C50728) / C49981 +
                  C50347 * ((-2 * C50456) / C49981 -
                            (C50347 * (C50298 * C50244 * C50368 + C50400)) /
                                C49981));
    const double C50263 = C50221 + C50255;
    const double C50262 = C50254 / C49981;
    const double C51177 = C51150 / C49985;
    const double C51178 = C51152 / C49981;
    const double C904 = -C51176;
    const double C51180 = C51154 / C49985;
    const double C51181 = C51156 / C49981;
    const double C1558 = -C51179;
    const double C51183 = C51163 / C49939;
    const double C51184 = C51165 / C49935;
    const double C17049 = -C51182;
    const double C51186 = C51167 / C49939;
    const double C51187 = C51169 / C49935;
    const double C33992 = -C51185;
    const double C25012 = C49954 * C983;
    const double C24996 = C49954 * C265;
    const double C24990 = C49954 * C264;
    const double C24980 = C49954 * C259;
    const double C24978 = C49954 * C274;
    const double C24974 = C49954 * C258;
    const double C25349 = C49954 * C260;
    const double C25735 = C49954 * C1446;
    const double C25719 = C49954 * C784;
    const double C25713 = C49954 * C785;
    const double C26009 = C49954 * C2325;
    const double C26179 = C49954 * C2566;
    const double C26171 = C49954 * C1097;
    const double C26690 = C49954 * C3088;
    const double C28121 = C49954 * C405;
    const double C28115 = C49954 * C406;
    const double C28105 = C49954 * C400;
    const double C28103 = C49954 * C415;
    const double C28099 = C49954 * C399;
    const double C28559 = C49954 * C401;
    const double C29377 = C49954 * C4507;
    const double C30580 = C49954 * C1730;
    const double C46773 = C49954 * C5401;
    const double C120 =
        (C49954 / C49940 - (0 * be) / C49935) / C49940 + (0 * ae) / C49935;
    const double C7943 = C49954 / C49940 - (0 * be) / C49935;
    const double C17053 = C49954 / C49940 + (0 * ae) / C49935;
    const double C49956 = C49953 / C49935;
    const double C2377 = C2177 * C983;
    const double C2361 = C2177 * C265;
    const double C2355 = C2177 * C264;
    const double C2345 = C2177 * C259;
    const double C2343 = C2177 * C274;
    const double C2339 = C2177 * C258;
    const double C2726 = C2177 * C260;
    const double C3124 = C2177 * C1446;
    const double C3108 = C2177 * C784;
    const double C3102 = C2177 * C785;
    const double C3406 = C2177 * C2325;
    const double C3584 = C2177 * C2566;
    const double C3576 = C2177 * C1097;
    const double C4103 = C2177 * C3088;
    const double C5453 = C2177 * C1730;
    const double C5437 = C2177 * C406;
    const double C5431 = C2177 * C405;
    const double C5421 = C2177 * C400;
    const double C5419 = C2177 * C415;
    const double C5415 = C2177 * C399;
    const double C5791 = C2177 * C401;
    const double C6425 = C2177 * C4507;
    const double C7331 = C2177 * C5401;
    const double C19963 = C19835 * C2324;
    const double C19961 = C19835 * C2329;
    const double C19959 = C19835 * C2325;
    const double C19955 = C19835 * C983;
    const double C19953 = C19835 * C988;
    const double C19951 = C19835 * C984;
    const double C19947 = C19835 * C264;
    const double C19945 = C19835 * C282;
    const double C19943 = C19835 * C263;
    const double C19941 = C19835 * C274;
    const double C19939 = C19835 * C258;
    const double C19937 = C19835 * C275;
    const double C19935 = C19835 * C262;
    const double C20213 = C19835 * C265;
    const double C20205 = C19835 * C259;
    const double C20485 = C19835 * C3087;
    const double C20483 = C19835 * C3092;
    const double C20481 = C19835 * C3088;
    const double C20477 = C19835 * C1447;
    const double C20475 = C19835 * C1451;
    const double C20473 = C19835 * C1446;
    const double C20469 = C19835 * C783;
    const double C20467 = C19835 * C792;
    const double C20465 = C19835 * C784;
    const double C20707 = C19835 * C3392;
    const double C20835 = C19835 * C3566;
    const double C20833 = C19835 * C2570;
    const double C20831 = C19835 * C2565;
    const double C20829 = C19835 * C1102;
    const double C20827 = C19835 * C1098;
    const double C21217 = C19835 * C4091;
    const double C22067 = C19835 * C2566;
    const double C22063 = C19835 * C1097;
    const double C22256 = C19835 * C4508;
    const double C22254 = C19835 * C4514;
    const double C22252 = C19835 * C4507;
    const double C22248 = C19835 * C1731;
    const double C22246 = C19835 * C1735;
    const double C22244 = C19835 * C1730;
    const double C22239 = C19835 * C405;
    const double C22237 = C19835 * C423;
    const double C22235 = C19835 * C404;
    const double C22233 = C19835 * C415;
    const double C22231 = C19835 * C399;
    const double C22229 = C19835 * C416;
    const double C22227 = C19835 * C403;
    const double C22450 = C19835 * C785;
    const double C22628 = C19835 * C406;
    const double C22620 = C19835 * C400;
    const double C23265 = C19835 * C4506;
    const double C23263 = C19835 * C6415;
    const double C23261 = C19835 * C6413;
    const double C24217 = C19835 * C5405;
    const double C24215 = C19835 * C5400;
    const double C39529 = C19835 * C5401;
    const double C40747 = C19835 * C7319;
    const double C51188 = C51130 - C51170;
    const double C51189 = C51134 - C51172;
    const double C2380 = C2171 * C992;
    const double C2354 = C2171 * C278;
    const double C2348 = C2171 * C268;
    const double C2342 = C2171 * C291;
    const double C2338 = C2171 * C276;
    const double C3127 = C2171 * C1455;
    const double C3111 = C2171 * C788;
    const double C3405 = C2171 * C2327;
    const double C3583 = C2171 * C2568;
    const double C3575 = C2171 * C1106;
    const double C4102 = C2171 * C3090;
    const double C5456 = C2171 * C1739;
    const double C5430 = C2171 * C419;
    const double C5424 = C2171 * C409;
    const double C5418 = C2171 * C432;
    const double C5414 = C2171 * C417;
    const double C6424 = C2171 * C4516;
    const double C7330 = C2171 * C5403;
    const double C124 =
        (C50000 / C49986 - (0 * de) / C49981) / C49986 + (0 * ce) / C49981;
    const double C544 = C50000 / C49986 - (0 * de) / C49981;
    const double C908 = C50000 / C49986 + (0 * ce) / C49981;
    const double C50002 = C49999 / C49981;
    const double C51190 = C51137 - C51173;
    const double C51191 = C51141 - C51175;
    const double C2346 = C50866 * C269;
    const double C2725 = C2171 * C269;
    const double C8096 = C7938 * C269;
    const double C17216 = C17047 * C269;
    const double C17206 = C17048 * C269;
    const double C17566 = C17046 * C269;
    const double C20206 = C50861 * C269;
    const double C24981 = C50866 * C269;
    const double C25348 = C51132 * C269;
    const double C2364 = C2171 * C279;
    const double C2356 = C50866 * C279;
    const double C17240 = C17047 * C279;
    const double C17226 = C17046 * C279;
    const double C19948 = C50861 * C279;
    const double C24999 = C51132 * C279;
    const double C24991 = C50866 * C279;
    const double C5422 = C50866 * C410;
    const double C5790 = C2171 * C410;
    const double C11052 = C7938 * C410;
    const double C22621 = C50861 * C410;
    const double C28106 = C50866 * C410;
    const double C28558 = C51132 * C410;
    const double C34302 = C17047 * C410;
    const double C34292 = C17048 * C410;
    const double C34652 = C17046 * C410;
    const double C5440 = C2171 * C420;
    const double C5432 = C50866 * C420;
    const double C22240 = C50861 * C420;
    const double C28122 = C50866 * C420;
    const double C28114 = C51132 * C420;
    const double C34326 = C17047 * C420;
    const double C34312 = C17046 * C420;
    const double C3109 = C50866 * C789;
    const double C3101 = C2171 * C789;
    const double C17938 = C17047 * C789;
    const double C17924 = C17046 * C789;
    const double C20466 = C50861 * C789;
    const double C25720 = C50866 * C789;
    const double C25712 = C51132 * C789;
    const double C2349 = C2177 * C273;
    const double C20207 = C19835 * C273;
    const double C24984 = C49954 * C273;
    const double C2359 = C2177 * C283;
    const double C19949 = C19835 * C283;
    const double C24994 = C49954 * C283;
    const double C5425 = C2177 * C414;
    const double C22622 = C19835 * C414;
    const double C28109 = C49954 * C414;
    const double C5435 = C2177 * C424;
    const double C22241 = C19835 * C424;
    const double C28117 = C49954 * C424;
    const double C3104 = C2177 * C793;
    const double C20471 = C19835 * C793;
    const double C25715 = C49954 * C793;
    const double C2352 = C2171 * C290;
    const double C2344 = C50866 * C290;
    const double C17224 = C17046 * C290;
    const double C17210 = C17047 * C290;
    const double C19942 = C50861 * C290;
    const double C24987 = C51132 * C290;
    const double C24979 = C50866 * C290;
    const double C2358 = C2171 * C293;
    const double C17236 = C17046 * C293;
    const double C19946 = C50861 * C293;
    const double C24993 = C51132 * C293;
    const double C5428 = C2171 * C431;
    const double C5420 = C50866 * C431;
    const double C22234 = C50861 * C431;
    const double C28112 = C51132 * C431;
    const double C28104 = C50866 * C431;
    const double C34310 = C17046 * C431;
    const double C34296 = C17047 * C431;
    const double C5434 = C2171 * C434;
    const double C22238 = C50861 * C434;
    const double C28120 = C51132 * C434;
    const double C34322 = C17046 * C434;
    const double C3107 = C2171 * C798;
    const double C17934 = C17046 * C798;
    const double C20468 = C50861 * C798;
    const double C25718 = C51132 * C798;
    const double C50137 = C50095 + C50134;
    const double C50154 = C50144 / C50068;
    const double C2378 = C50866 * C991;
    const double C2370 = C2171 * C991;
    const double C18206 = C17047 * C991;
    const double C19956 = C50861 * C991;
    const double C25013 = C50866 * C991;
    const double C25005 = C51132 * C991;
    const double C3577 = C50866 * C1105;
    const double C6012 = C2171 * C1105;
    const double C18370 = C17047 * C1105;
    const double C22064 = C50861 * C1105;
    const double C26172 = C50866 * C1105;
    const double C28130 = C51132 * C1105;
    const double C3125 = C50866 * C1454;
    const double C3117 = C2171 * C1454;
    const double C18874 = C17047 * C1454;
    const double C20474 = C50861 * C1454;
    const double C25736 = C50866 * C1454;
    const double C25728 = C51132 * C1454;
    const double C5454 = C50866 * C1738;
    const double C5446 = C2171 * C1738;
    const double C22245 = C50861 * C1738;
    const double C30581 = C50866 * C1738;
    const double C36132 = C17047 * C1738;
    const double C44981 = C51132 * C1738;
    const double C50174 = C50166 / C49935;
    const double C50313 = -C50310;
    const double C50362 = -C50359;
    const double C20708 = C50861 * C3396;
    const double C20836 = C50861 * C3570;
    const double C21218 = C50861 * C4095;
    const double C23266 = C50861 * C4512;
    const double C40748 = C50861 * C7323;
    const double C50136 = C50133 + C50094;
    const double C50158 = C50150 / C49981;
    const double C50153 = C50142 / C49981;
    const double C2373 = C2177 * C987;
    const double C19957 = C19835 * C987;
    const double C25008 = C49954 * C987;
    const double C3580 = C2177 * C1101;
    const double C22065 = C19835 * C1101;
    const double C26175 = C49954 * C1101;
    const double C3120 = C2177 * C1450;
    const double C20479 = C19835 * C1450;
    const double C25731 = C49954 * C1450;
    const double C5449 = C2177 * C1734;
    const double C22250 = C19835 * C1734;
    const double C30584 = C49954 * C1734;
    const double C20709 = C19835 * C3394;
    const double C20837 = C19835 * C3568;
    const double C21219 = C19835 * C4093;
    const double C23267 = C19835 * C4510;
    const double C40749 = C19835 * C7321;
    const double C50135 = C50132 / C50068;
    const double C295 =
        (-(C50129 * C50319) / C49981) / C49935 - C50099 / C50068 -
        (ae * (C50130 * C50319 + C50100)) / C50068 -
        ((C50101 + C50131 * C50319) * ce) / C50068 +
        C50067 * ((-((C50095 + C50122 * C50319) * ce) / C49981) / C49935 -
                  (ae * (C50119 * C50319 + C50094)) / C50068 +
                  C50067 * ((-(C50183 * C50319) / C49981) / C49935 - C50143));
    const double C436 =
        (-(C50129 * C50368) / C49981) / C49935 - C50099 / C50068 -
        (ae * (C50130 * C50368 + C50100)) / C50068 -
        ((C50101 + C50131 * C50368) * ce) / C50068 +
        C50067 * ((-((C50095 + C50122 * C50368) * ce) / C49981) / C49935 -
                  (ae * (C50119 * C50368 + C50094)) / C50068 +
                  C50067 * ((-(C50183 * C50368) / C49981) / C49935 - C50143));
    const double C289 =
        (-(ae * C50298 * C50100) / C49981) / C49935 -
        (C50298 * C50099) / C50068 - (C50298 * C50101 * ce) / C50068 +
        C50067 * ((-(C50298 * C50095 * ce) / C49981) / C49935 -
                  (ae * C50298 * C50094) / C50068 - (C50067 * C50299) / C50068);
    const double C799 = (-(C50347 * C50298 * C50095 * ce) / C49981) / C49935 -
                        (ae * C50347 * C50298 * C50094) / C50068 -
                        (C50067 * C50347 * C50299) / C50068;
    const double C1110 =
        (-(C50299 * C50368) / C49981) / C49935 - (C50298 * C50099) / C50068;
    const double C430 =
        (-(ae * C50347 * C50100) / C49981) / C49935 -
        (C50347 * C50099) / C50068 - (C50347 * C50101 * ce) / C50068 +
        C50067 * ((-(C50347 * C50095 * ce) / C49981) / C49935 -
                  (ae * C50347 * C50094) / C50068 - (C50067 * C50348) / C50068);
    const double C2368 = C2171 * C294;
    const double C2360 = C50866 * C294;
    const double C17244 = C17046 * C294;
    const double C17234 = C17047 * C294;
    const double C19950 = C50861 * C294;
    const double C25003 = C51132 * C294;
    const double C24995 = C50866 * C294;
    const double C5444 = C2171 * C435;
    const double C5436 = C50866 * C435;
    const double C22242 = C50861 * C435;
    const double C28126 = C51132 * C435;
    const double C28118 = C50866 * C435;
    const double C34330 = C17046 * C435;
    const double C34320 = C17047 * C435;
    const double C2376 = C2171 * C996;
    const double C18210 = C17046 * C996;
    const double C19954 = C50861 * C996;
    const double C25011 = C51132 * C996;
    const double C3123 = C2171 * C1459;
    const double C18878 = C17046 * C1459;
    const double C20476 = C50861 * C1459;
    const double C25734 = C51132 * C1459;
    const double C5452 = C2171 * C1743;
    const double C22247 = C50861 * C1743;
    const double C30583 = C51132 * C1743;
    const double C36136 = C17046 * C1743;
    const double C50194 = C50122 + C50191;
    const double C50228 = C50213 / C50068;
    const double C50403 = C50398 * ce;
    const double C4515 =
        (2 * C50347 * C50679 + C50347 * (C50679 + C50398 * C50368)) / C49935;
    const double C6416 =
        (3 * (C50679 + C50398 * C50368) +
         C50347 * (2 * C50347 * C50398 +
                   C50347 * (C50398 + C50298 * C50264 * C50368))) /
        C49935;
    const double C50430 = C50425 * ce;
    const double C50658 = C50131 + C50657;
    const double C50704 = C50131 + C50703;
    const double C3407 = C50866 * C2328;
    const double C19960 = C50861 * C2328;
    const double C26010 = C50866 * C2328;
    const double C3585 = C50866 * C2569;
    const double C22068 = C50861 * C2569;
    const double C26180 = C50866 * C2569;
    const double C4104 = C50866 * C3091;
    const double C20482 = C50861 * C3091;
    const double C26691 = C50866 * C3091;
    const double C7332 = C50866 * C5404;
    const double C39530 = C50861 * C5404;
    const double C46774 = C50866 * C5404;
    const double C50186 = C50151 + C50178;
    const double C50185 = C50177 / C49981;
    const double C6006 =
        2 * C50347 * C50821 + C50347 * (C50821 + C50298 * C50246 * C50368);
    const double C2371 = C2177 * C982;
    const double C20221 = C19835 * C982;
    const double C25006 = C49954 * C982;
    const double C6013 = C2177 * C1096;
    const double C22458 = C19835 * C1096;
    const double C28131 = C49954 * C1096;
    const double C3118 = C2177 * C1445;
    const double C25729 = C49954 * C1445;
    const double C31779 = C19835 * C1445;
    const double C5447 = C2177 * C1729;
    const double C39742 = C19835 * C1729;
    const double C44982 = C49954 * C1729;
    const double C3391 =
        4 * (2 * C50298 * C50113 + C50298 * C50803) +
        C50298 * (3 * C50803 + C50298 * (2 * C50298 * C50161 +
                                         C50298 * (C50161 + C50236 * C50319)));
    const double C3565 =
        2 * C50298 * C50113 + C50298 * C50803 +
        (2 * C50298 * C50161 + C50298 * (C50161 + C50236 * C50319)) * C50368;
    const double C4090 =
        C50347 * (3 * C50803 + C50298 * (2 * C50298 * C50161 +
                                         C50298 * (C50161 + C50236 * C50319)));
    const double C4505 =
        2 * C50347 * C50803 +
        C50347 * (C50803 + (C50161 + C50236 * C50319) * C50368);
    const double C7318 =
        4 * (2 * C50347 * C50113 + C50347 * C50828) +
        C50347 * (3 * C50828 + C50347 * (2 * C50347 * C50161 +
                                         C50347 * (C50161 + C50236 * C50368)));
    const double C50193 = C50190 + C50119;
    const double C50233 = C50220 / C49981;
    const double C50227 = C50211 / C49981;
    const double C50402 = ae * C50396;
    const double C4513 = (-2 * C50347 * C50675) / C49981 -
                         (C50347 * (C50396 * C50368 + C50675)) / C49981;
    const double C6414 =
        (-3 * (C50396 * C50368 + C50675)) / C49981 +
        C50347 * ((-2 * C50347 * C50396) / C49981 -
                  (C50347 * (C50298 * C50261 * C50368 + C50396)) / C49981);
    const double C50429 = ae * C50423;
    const double C50652 = C50651 + C50130;
    const double C50698 = C50697 + C50130;
    const double C3410 = C2177 * C2330;
    const double C19965 = C19835 * C2330;
    const double C26013 = C49954 * C2330;
    const double C3588 = C2177 * C2571;
    const double C22071 = C19835 * C2571;
    const double C26183 = C49954 * C2571;
    const double C4107 = C2177 * C3093;
    const double C20487 = C19835 * C3093;
    const double C26694 = C49954 * C3093;
    const double C7335 = C2177 * C5406;
    const double C39533 = C19835 * C5406;
    const double C46777 = C49954 * C5406;
    const double C50192 = C50189 / C50068;
    const double C50309 = C50067 * C50306;
    const double C50397 = C50306 / C50068;
    const double C50453 = C50347 * C50306;
    const double C50469 = -2 * C50306;
    const double C800 = (-(ae * C50347 * C50298 * C50130) / C49981) / C49935 -
                        (C50347 * C50299) / C50068 -
                        (C50347 * C50298 * C50131 * ce) / C50068 +
                        C50067 * ((-(C50347 * C50304 * ce) / C49981) / C49935 -
                                  (ae * C50347 * C50305) / C50068 -
                                  (C50067 * C50347 * C50306) / C50068);
    const double C1109 =
        (-((C50298 * C50095 + C50304 * C50368) * ce) / C49981) / C49935 -
        (ae * (C50305 * C50368 + C50298 * C50094)) / C50068 +
        C50067 * ((-(C50306 * C50368) / C49981) / C49935 - C50299 / C50068);
    const double C4520 =
        (-2 * C50347 * C50299) / C50068 +
        C50347 * ((-(C50306 * C50368) / C49981) / C49935 - C50299 / C50068);
    const double C50323 = C50322 / C49981;
    const double C50358 = C50067 * C50355;
    const double C50424 = C50355 / C50068;
    const double C50491 = -2 * C50355;
    const double C50372 = C50371 / C49981;
    const double C50837 = C50833 + C50836;
    const double C24208 =
        4 * (2 * C50347 * C50825 + C50347 * C50845) +
        C50347 * (3 * C50845 +
                  C50347 * (2 * C50347 * C50843 +
                            C50347 * (C50843 + C50298 * C50216 * C50368)));
    const double C50852 = C50849 + C50851;
    const double C50276 = C50171 + C50270;
    const double C50273 = C50267 + C50168;
    const double C50272 = C50266 / C50068;
    const double C50333 = C50330 / C49981;
    const double C50382 = C50379 / C49981;
    const double C50406 = C50067 * C50401;
    const double C50457 = C50347 * C50401;
    const double C50477 = C50401 * C50368;
    const double C50433 = C50067 * C50428;
    const double C50128 = C50124 - C50109;
    const double C50259 = C50251 - C50230;
    const double C50340 = -C50337;
    const double C20696 =
        (5 * (3 * C50661 + C50298 * C50717) +
         C50298 * (4 * C50717 +
                   C50298 * (3 * C50331 +
                             C50298 * (2 * C50399 +
                                       C50298 * (C50171 + C50247 * C50319))))) /
        C49935;
    const double C20818 =
        (3 * C50661 + C50298 * C50717 +
         (3 * C50331 +
          C50298 * (2 * C50399 + C50298 * (C50171 + C50247 * C50319))) *
             C50368) /
        C49935;
    const double C21212 =
        (C50347 * (4 * C50717 +
                   C50298 * (3 * C50331 +
                             C50298 * (2 * C50399 +
                                       C50298 * (C50171 + C50247 * C50319))))) /
        C49935;
    const double C21488 =
        (2 * C50347 * C50717 +
         C50347 * (C50717 + (2 * C50399 + C50298 * (C50171 + C50247 * C50319)) *
                                C50368)) /
        C49935;
    const double C50389 = -C50386;
    const double C40742 =
        (5 * (3 * C50707 + C50347 * C50741) +
         C50347 * (4 * C50741 +
                   C50347 * (3 * C50380 +
                             C50347 * (2 * C50426 +
                                       C50347 * (C50171 + C50247 * C50368))))) /
        C49935;
    const double C50415 = C50413 / C49935;
    const double C50464 = -C50461;
    const double C50442 = C50440 / C49935;
    const double C50713 = C50711 - C50712;
    const double C50737 = C50735 - C50736;
    const double C50271 = C50263 * ae;
    const double C50269 = C50067 * C50263;
    const double C50268 = C50263 * ce;
    const double C51192 = C51144 - C51177;
    const double C51193 = C51151 - C51178;
    const double C51194 = C51146 - C51180;
    const double C51195 = C51155 - C51181;
    const double C51196 = C51157 - C51183;
    const double C51197 = C51164 - C51184;
    const double C51198 = C51159 - C51186;
    const double C51199 = C51168 - C51187;
    const double C25021 = C24974 + C24975;
    const double C28138 = C28099 + C28100;
    const double C8127 = C7943 * C265;
    const double C8103 = C7943 * C260;
    const double C8101 = C7943 * C273;
    const double C8095 = C7943 * C259;
    const double C8825 = C7943 * C785;
    const double C9097 = C7943 * C982;
    const double C9261 = C7943 * C1096;
    const double C9765 = C7943 * C1445;
    const double C11083 = C7943 * C406;
    const double C11059 = C7943 * C401;
    const double C11057 = C7943 * C414;
    const double C11051 = C7943 * C400;
    const double C12893 = C7943 * C1729;
    const double C17237 = C17053 * C265;
    const double C17213 = C17053 * C260;
    const double C17211 = C17053 * C273;
    const double C17205 = C17053 * C259;
    const double C17935 = C17053 * C785;
    const double C18207 = C17053 * C982;
    const double C18371 = C17053 * C1096;
    const double C18875 = C17053 * C1445;
    const double C34323 = C17053 * C406;
    const double C34299 = C17053 * C401;
    const double C34297 = C17053 * C414;
    const double C34291 = C17053 * C400;
    const double C36133 = C17053 * C1729;
    const double C49958 = C50861 - C49956;
    const double C2386 = C2339 + C2340;
    const double C5462 = C5415 + C5416;
    const double C19981 = C19963 + C19964;
    const double C19975 = C19951 + C19952;
    const double C19971 = C19943 + C19944;
    const double C19969 = C19939 + C19940;
    const double C19968 = C19937 + C19938;
    const double C19967 = C19935 + C19936;
    const double C20499 = C20485 + C20486;
    const double C20495 = C20477 + C20478;
    const double C20491 = C20469 + C20470;
    const double C20841 = C20831 + C20832;
    const double C20839 = C20827 + C20828;
    const double C22275 = C22256 + C22257;
    const double C22271 = C22248 + C22249;
    const double C22264 = C22235 + C22236;
    const double C22262 = C22231 + C22232;
    const double C22261 = C22229 + C22230;
    const double C22260 = C22227 + C22228;
    const double C23274 = C23261 + C23262;
    const double C24220 = C24215 + C24216;
    const double C8134 = C51188 * C294;
    const double C8132 = C51188 * C278;
    const double C8126 = C51188 * C293;
    const double C8116 = C51188 * C279;
    const double C8114 = C51188 * C290;
    const double C8108 = C51188 * C268;
    const double C8098 = C51188 * C291;
    const double C8092 = C51188 * C276;
    const double C8456 = C51188 * C269;
    const double C8830 = C51188 * C788;
    const double C8824 = C51188 * C798;
    const double C8814 = C51188 * C789;
    const double C9100 = C51188 * C996;
    const double C9094 = C51188 * C992;
    const double C9258 = C51188 * C1106;
    const double C9768 = C51188 * C1459;
    const double C9762 = C51188 * C1455;
    const double C11090 = C51188 * C435;
    const double C11088 = C51188 * C419;
    const double C11082 = C51188 * C434;
    const double C11072 = C51188 * C420;
    const double C11070 = C51188 * C431;
    const double C11064 = C51188 * C409;
    const double C11054 = C51188 * C432;
    const double C11048 = C51188 * C417;
    const double C11412 = C51188 * C410;
    const double C12896 = C51188 * C1743;
    const double C12890 = C51188 * C1739;
    const double C105 = (C51188 * C50856) / C49935 + (C51132 - C51171) / C49940;
    const double C8130 = C51189 * C279;
    const double C8124 = C51189 * C294;
    const double C8106 = C51189 * C269;
    const double C8100 = C51189 * C290;
    const double C8094 = C51189 * C268;
    const double C8828 = C51189 * C789;
    const double C9096 = C51189 * C991;
    const double C9260 = C51189 * C1105;
    const double C9764 = C51189 * C1454;
    const double C11086 = C51189 * C420;
    const double C11080 = C51189 * C435;
    const double C11062 = C51189 * C410;
    const double C11056 = C51189 * C431;
    const double C11050 = C51189 * C409;
    const double C12892 = C51189 * C1738;
    const double C106 =
        (C51189 * C50856) / C49935 + (2 * C50866 + C51188) / C49940;
    const double C107 = (C50856 * C50866) / C49944 + C51189 / C49940;
    const double C50004 = C50879 - C50002;
    const double C109 = (C51190 * C50874) / C49981 + (C51139 - C51174) / C49986;
    const double C110 =
        (C51191 * C50874) / C49981 + (2 * C50884 + C51190) / C49986;
    const double C111 = (C50874 * C50884) / C49990 + C51191 / C49986;
    const double C2389 = C2345 + C2346;
    const double C20225 = C20205 + C20206;
    const double C25024 = C24980 + C24981;
    const double C2394 = C2355 + C2356;
    const double C19973 = C19947 + C19948;
    const double C25029 = C24990 + C24991;
    const double C5465 = C5421 + C5422;
    const double C22632 = C22620 + C22621;
    const double C28141 = C28105 + C28106;
    const double C5470 = C5431 + C5432;
    const double C22266 = C22239 + C22240;
    const double C28149 = C28121 + C28122;
    const double C3136 = C3108 + C3109;
    const double C20489 = C20465 + C20466;
    const double C25747 = C25719 + C25720;
    const double C2388 = C2343 + C2344;
    const double C19970 = C19941 + C19942;
    const double C25023 = C24978 + C24979;
    const double C19972 = C19945 + C19946;
    const double C5464 = C5419 + C5420;
    const double C22263 = C22233 + C22234;
    const double C28140 = C28103 + C28104;
    const double C22265 = C22237 + C22238;
    const double C20490 = C20467 + C20468;
    const double C50140 = C50137 + C50123;
    const double C2405 = C2377 + C2378;
    const double C19977 = C19955 + C19956;
    const double C25040 = C25012 + C25013;
    const double C3591 = C3576 + C3577;
    const double C22073 = C22063 + C22064;
    const double C26186 = C26171 + C26172;
    const double C3144 = C3124 + C3125;
    const double C20493 = C20473 + C20474;
    const double C25755 = C25735 + C25736;
    const double C5481 = C5453 + C5454;
    const double C22269 = C22244 + C22245;
    const double C30587 = C30580 + C30581;
    const double C50182 = C50174 - C50156;
    const double C50314 = C50313 / C49935;
    const double C50363 = C50362 / C49935;
    const double C20715 = C20707 + C20708;
    const double C20843 = C20835 + C20836;
    const double C21221 = C21217 + C21218;
    const double C23276 = C23265 + C23266;
    const double C40752 = C40747 + C40748;
    const double C50139 = C50136 + C50120;
    const double C50165 = -C50153;
    const double C2366 = C50866 * C295;
    const double C2737 = C2171 * C295;
    const double C8136 = C51189 * C295;
    const double C8122 = C7938 * C295;
    const double C17246 = C17047 * C295;
    const double C17232 = C17048 * C295;
    const double C20216 = C50861 * C295;
    const double C25001 = C50866 * C295;
    const double C25360 = C51132 * C295;
    const double C5442 = C50866 * C436;
    const double C5802 = C2171 * C436;
    const double C11092 = C51189 * C436;
    const double C11078 = C7938 * C436;
    const double C22631 = C50861 * C436;
    const double C28128 = C50866 * C436;
    const double C34332 = C17047 * C436;
    const double C34318 = C17048 * C436;
    const double C45297 = C51132 * C436;
    const double C2350 = C50866 * C289;
    const double C2729 = C2171 * C289;
    const double C8112 = C51189 * C289;
    const double C8102 = C7938 * C289;
    const double C8462 = C51188 * C289;
    const double C17222 = C17047 * C289;
    const double C17212 = C17048 * C289;
    const double C17572 = C17046 * C289;
    const double C20208 = C50861 * C289;
    const double C24985 = C50866 * C289;
    const double C25352 = C51132 * C289;
    const double C3113 = C2171 * C799;
    const double C3105 = C50866 * C799;
    const double C8832 = C51188 * C799;
    const double C8822 = C51189 * C799;
    const double C17942 = C17046 * C799;
    const double C17932 = C17047 * C799;
    const double C20472 = C50861 * C799;
    const double C25724 = C51132 * C799;
    const double C25716 = C50866 * C799;
    const double C3579 = C2171 * C1110;
    const double C9264 = C51188 * C1110;
    const double C18374 = C17046 * C1110;
    const double C20830 = C50861 * C1110;
    const double C26174 = C51132 * C1110;
    const double C5426 = C50866 * C430;
    const double C5794 = C2171 * C430;
    const double C11068 = C51189 * C430;
    const double C11058 = C7938 * C430;
    const double C11418 = C51188 * C430;
    const double C22623 = C50861 * C430;
    const double C28110 = C50866 * C430;
    const double C28562 = C51132 * C430;
    const double C34308 = C17047 * C430;
    const double C34298 = C17048 * C430;
    const double C34658 = C17046 * C430;
    const double C2396 = C2359 + C2360;
    const double C19974 = C19949 + C19950;
    const double C25031 = C24994 + C24995;
    const double C5472 = C5435 + C5436;
    const double C22267 = C22241 + C22242;
    const double C28147 = C28117 + C28118;
    const double C19976 = C19953 + C19954;
    const double C20494 = C20475 + C20476;
    const double C22270 = C22246 + C22247;
    const double C50197 = C50194 + C50172;
    const double C50408 = C50403 / C50068;
    const double C6426 = C50866 * C4515;
    const double C22253 = C50861 * C4515;
    const double C29378 = C50866 * C4515;
    const double C50435 = C50430 / C50068;
    const double C3395 =
        (4 * (2 * C50298 * C50131 + C50298 * C50658) +
         C50298 *
             (3 * C50658 +
              C50298 * (2 * C50398 + C50298 * (C50187 + C50264 * C50319)))) /
        C49935;
    const double C3569 =
        (2 * C50298 * C50131 + C50298 * C50658 +
         (2 * C50398 + C50298 * (C50187 + C50264 * C50319)) * C50368) /
        C49935;
    const double C4094 =
        (C50347 *
         (3 * C50658 +
          C50298 * (2 * C50398 + C50298 * (C50187 + C50264 * C50319)))) /
        C49935;
    const double C4511 =
        (2 * C50347 * C50658 +
         C50347 * (C50658 + (C50187 + C50264 * C50319) * C50368)) /
        C49935;
    const double C7322 =
        (4 * (2 * C50347 * C50131 + C50347 * C50704) +
         C50347 *
             (3 * C50704 +
              C50347 * (2 * C50425 + C50347 * (C50187 + C50264 * C50368)))) /
        C49935;
    const double C3416 = C3406 + C3407;
    const double C19979 = C19959 + C19960;
    const double C26019 = C26009 + C26010;
    const double C3595 = C3584 + C3585;
    const double C22075 = C22067 + C22068;
    const double C26190 = C26179 + C26180;
    const double C4112 = C4103 + C4104;
    const double C20497 = C20481 + C20482;
    const double C26699 = C26690 + C26691;
    const double C7340 = C7331 + C7332;
    const double C39536 = C39529 + C39530;
    const double C46782 = C46773 + C46774;
    const double C130 = 4 * (2 * C50090 + C50067 * C50121) +
                        C50067 * (3 * C50121 + C50067 * C50186);
    const double C261 = C50298 * (3 * C50121 + C50067 * C50186);
    const double C266 = 2 * C50090 + C50067 * C50121 + C50186 * C50319;
    const double C402 = C50347 * (3 * C50121 + C50067 * C50186);
    const double C407 = 2 * C50090 + C50067 * C50121 + C50186 * C50368;
    const double C786 = C50347 * C50298 * C50186;
    const double C981 =
        2 * C50298 * C50186 + C50298 * (C50186 + C50263 * C50319);
    const double C1095 = C50298 * C50186 + C50298 * C50263 * C50368;
    const double C1444 = C50347 * (C50186 + C50263 * C50319);
    const double C1728 =
        2 * C50347 * C50186 + C50347 * (C50186 + C50263 * C50368);
    const double C50196 = C50193 + C50169;
    const double C50241 = -C50227;
    const double C50407 = C50402 / C49981;
    const double C6429 = C2177 * C4513;
    const double C22258 = C19835 * C4513;
    const double C29381 = C49954 * C4513;
    const double C50434 = C50429 / C49981;
    const double C3393 =
        4 * ((-2 * C50298 * C50130) / C49981 - (C50298 * C50652) / C49981) +
        C50298 * ((-3 * C50652) / C49981 +
                  C50298 * ((-2 * C50396) / C49981 -
                            (C50298 * (C50261 * C50319 + C50184)) / C49981));
    const double C3567 = (-2 * C50298 * C50130) / C49981 -
                         (C50298 * C50652) / C49981 +
                         ((-2 * C50396) / C49981 -
                          (C50298 * (C50261 * C50319 + C50184)) / C49981) *
                             C50368;
    const double C4092 =
        C50347 * ((-3 * C50652) / C49981 +
                  C50298 * ((-2 * C50396) / C49981 -
                            (C50298 * (C50261 * C50319 + C50184)) / C49981));
    const double C4509 =
        (-2 * C50347 * C50652) / C49981 -
        (C50347 * ((C50261 * C50319 + C50184) * C50368 + C50652)) / C49981;
    const double C7320 =
        4 * ((-2 * C50347 * C50130) / C49981 - (C50347 * C50698) / C49981) +
        C50347 * ((-3 * C50698) / C49981 +
                  C50347 * ((-2 * C50423) / C49981 -
                            (C50347 * (C50261 * C50368 + C50184)) / C49981));
    const double C50312 = C50309 / C50068;
    const double C50471 = C50469 / C50068;
    const double C3115 = C50866 * C800;
    const double C8834 = C51189 * C800;
    const double C8820 = C7938 * C800;
    const double C14110 = C2171 * C800;
    const double C17944 = C17047 * C800;
    const double C17930 = C17048 * C800;
    const double C22453 = C50861 * C800;
    const double C25726 = C50866 * C800;
    const double C28356 = C51132 * C800;
    const double C3581 = C50866 * C1109;
    const double C6016 = C2171 * C1109;
    const double C9266 = C51189 * C1109;
    const double C18376 = C17047 * C1109;
    const double C22066 = C50861 * C1109;
    const double C26176 = C50866 * C1109;
    const double C28134 = C51132 * C1109;
    const double C6428 = C2171 * C4520;
    const double C22255 = C50861 * C4520;
    const double C29380 = C51132 * C4520;
    const double C50324 = -C50323;
    const double C50361 = C50358 / C50068;
    const double C50493 = C50491 / C50068;
    const double C50373 = -C50372;
    const double C20694 =
        5 * (3 * C50806 + C50298 * C50837) +
        C50298 * (4 * C50837 +
                  C50298 * (3 * C50835 +
                            C50298 * (2 * C50298 * C50147 +
                                      C50298 * (C50147 + C50216 * C50319))));
    const double C20816 =
        3 * C50806 + C50298 * C50837 +
        (3 * C50835 +
         C50298 * (2 * C50298 * C50147 + C50298 * (C50147 + C50216 * C50319))) *
            C50368;
    const double C21210 =
        C50347 * (4 * C50837 +
                  C50298 * (3 * C50835 +
                            C50298 * (2 * C50298 * C50147 +
                                      C50298 * (C50147 + C50216 * C50319))));
    const double C21486 =
        2 * C50347 * C50837 +
        C50347 * (C50837 +
                  (2 * C50298 * C50147 + C50298 * (C50147 + C50216 * C50319)) *
                      C50368);
    const double C40740 =
        5 * (3 * C50831 + C50347 * C50852) +
        C50347 * (4 * C50852 +
                  C50347 * (3 * C50850 +
                            C50347 * (2 * C50347 * C50147 +
                                      C50347 * (C50147 + C50216 * C50368))));
    const double C50279 = C50276 + C50248;
    const double C50278 = C50273 + C50245;
    const double C50336 = -C50333;
    const double C50385 = -C50382;
    const double C50411 = C50406 / C50068;
    const double C50460 = C50067 * C50457;
    const double C50478 = C50477 / C49981;
    const double C50438 = C50433 / C50068;
    const double C50138 = C50128 - C50135;
    const double C50277 = C50259 - C50272;
    const double C50342 = C50340 / C49935;
    const double C50391 = C50389 / C49935;
    const double C50417 = C50415 - C50410;
    const double C50465 = C50464 / C49935;
    const double C50444 = C50442 - C50437;
    const double C20695 =
        5 * ((-3 * C50655) / C49981 + C50298 * C50713) +
        C50298 * (4 * C50713 +
                  C50298 * ((-3 * C50332) / C49981 +
                            C50298 * ((-2 * C50400) / C49981 -
                                      (C50298 * (C50244 * C50319 + C50168)) /
                                          C49981)));
    const double C20817 =
        (-3 * C50655) / C49981 + C50298 * C50713 +
        ((-3 * C50332) / C49981 +
         C50298 * ((-2 * C50400) / C49981 -
                   (C50298 * (C50244 * C50319 + C50168)) / C49981)) *
            C50368;
    const double C21211 =
        C50347 *
        (4 * C50713 +
         C50298 * ((-3 * C50332) / C49981 +
                   C50298 * ((-2 * C50400) / C49981 -
                             (C50298 * (C50244 * C50319 + C50168)) / C49981)));
    const double C21487 =
        2 * C50347 * C50713 +
        C50347 * (C50713 + ((-2 * C50400) / C49981 -
                            (C50298 * (C50244 * C50319 + C50168)) / C49981) *
                               C50368);
    const double C40741 =
        5 * ((-3 * C50701) / C49981 + C50347 * C50737) +
        C50347 * (4 * C50737 +
                  C50347 * ((-3 * C50381) / C49981 +
                            C50347 * ((-2 * C50427) / C49981 -
                                      (C50347 * (C50244 * C50368 + C50168)) /
                                          C49981)));
    const double C50275 = C50222 + C50269;
    const double C50274 = C50268 / C49981;
    const double C976 = (C51192 * C50953) / C49981 + (C51147 - C51176) / C49986;
    const double C977 =
        (C51193 * C50953) / C49981 + (2 * C50958 + C51192) / C49986;
    const double C978 = (C50953 * C50958) / C49990 + C51193 / C49986;
    const double C1724 =
        (C51194 * C50979) / C49981 + (C51148 - C51179) / C49986;
    const double C1725 =
        (C51195 * C50979) / C49981 + (2 * C50984 + C51194) / C49986;
    const double C1726 = (C50979 * C50984) / C49990 + C51195 / C49986;
    const double C19831 =
        (C51196 * C51051) / C49935 + (C51160 - C51182) / C49940;
    const double C19832 =
        (C51197 * C51051) / C49935 + (2 * C51056 + C51196) / C49940;
    const double C19833 = (C51051 * C51056) / C49944 + C51197 / C49940;
    const double C39326 =
        (C51198 * C51077) / C49935 + (C51161 - C51185) / C49940;
    const double C39327 =
        (C51199 * C51077) / C49935 + (2 * C51082 + C51198) / C49940;
    const double C39328 = (C51077 * C51082) / C49944 + C51199 / C49940;
    const double C8141 = C8095 + C8096;
    const double C11097 = C11051 + C11052;
    const double C17251 = C17205 + C17206;
    const double C34337 = C34291 + C34292;
    const double C49959 = C49958 * ae;
    const double C2176 = (-C49936 / C49935) / C49940 - (C49958 * be) / C49935;
    const double C20706 = C19981 * C980;
    const double C20703 = C19975 * C980;
    const double C20701 = C19971 * C980;
    const double C19985 = C19969 * C257;
    const double C20951 = C19969 * C50000;
    const double C19984 = C19968 * C251;
    const double C20202 = C19968 * C51190;
    const double C20612 = C19968 * C901;
    const double C20700 = C19968 * C50879;
    const double C20950 = C19968 * C51139;
    const double C20699 = C19967 * C980;
    const double C20822 = C20499 * C980;
    const double C20824 = C20495 * C980;
    const double C20826 = C20491 * C980;
    const double C20847 = C20841 * C980;
    const double C20845 = C20839 * C980;
    const double C23256 = C22275 * C980;
    const double C23258 = C22271 * C980;
    const double C23252 = C22264 * C980;
    const double C22279 = C22262 * C257;
    const double C23637 = C22262 * C50000;
    const double C22278 = C22261 * C251;
    const double C22617 = C22261 * C51190;
    const double C23250 = C22261 * C50879;
    const double C23636 = C22261 * C51139;
    const double C23954 = C22261 * C901;
    const double C23249 = C22260 * C980;
    const double C23281 = C23274 * C980;
    const double C24223 = C24220 * C980;
    const double C50005 = C50004 * ce;
    const double C256 = (-C49982 / C49981) / C49986 - (C50004 * de) / C49981;
    const double C20231 = C20225 * C544;
    const double C20615 = C20225 * C908;
    const double C19989 = C19973 * C257;
    const double C20955 = C19973 * C50000;
    const double C22636 = C22632 * C544;
    const double C23957 = C22632 * C908;
    const double C22283 = C22266 * C257;
    const double C23642 = C22266 * C50000;
    const double C20501 = C20489 * C257;
    const double C21101 = C20489 * C50000;
    const double C19986 = C19970 * C50884;
    const double C20204 = C19970 * C51191;
    const double C20614 = C19970 * C902;
    const double C20952 = C19970 * C50884;
    const double C19988 = C19972 * C251;
    const double C20210 = C19972 * C51190;
    const double C20618 = C19972 * C901;
    const double C20702 = C19972 * C50879;
    const double C20954 = C19972 * C51139;
    const double C22280 = C22263 * C50884;
    const double C22619 = C22263 * C51191;
    const double C23638 = C22263 * C50884;
    const double C23956 = C22263 * C902;
    const double C22282 = C22265 * C251;
    const double C22625 = C22265 * C51190;
    const double C23253 = C22265 * C50879;
    const double C23641 = C22265 * C51139;
    const double C23960 = C22265 * C901;
    const double C20502 = C20490 * C251;
    const double C20825 = C20490 * C50879;
    const double C21102 = C20490 * C51139;
    const double C22447 = C20490 * C51190;
    const double C22990 = C20490 * C901;
    const double C140 = (3 * (C50082 + C50067 * C50101 + C50090 * ae) +
                         C50067 * (2 * C50101 + C50067 * C50140 + C50121 * ae) +
                         (2 * C50090 + C50067 * C50121) * ae) /
                        C49935;
    const double C270 =
        (C50298 * (2 * C50101 + C50067 * C50140 + C50121 * ae)) / C49935;
    const double C280 =
        (C50082 + C50067 * C50101 + C50090 * ae + C50140 * C50319) / C49935;
    const double C411 =
        (C50347 * (2 * C50101 + C50067 * C50140 + C50121 * ae)) / C49935;
    const double C421 =
        (C50082 + C50067 * C50101 + C50090 * ae + C50140 * C50368) / C49935;
    const double C790 = (C50347 * C50298 * C50140) / C49935;
    const double C19993 = C19977 * C257;
    const double C20959 = C19977 * C50000;
    const double C22077 = C22073 * C257;
    const double C23435 = C22073 * C50000;
    const double C20505 = C20493 * C257;
    const double C21105 = C20493 * C50000;
    const double C22286 = C22269 * C257;
    const double C24567 = C22269 * C50000;
    const double C50195 = C50182 - C50192;
    const double C50315 = C50314 - C50311;
    const double C50364 = C50363 - C50360;
    const double C20717 = C20715 * C980;
    const double C20849 = C20843 * C980;
    const double C21223 = C21221 * C980;
    const double C23283 = C23276 * C980;
    const double C40754 = C40752 * C980;
    const double C288 =
        2 * ((-(C50298 * C50095 * ce) / C49981) / C49935 -
             (ae * C50298 * C50094) / C50068 - (C50067 * C50299) / C50068) -
        (ae * C50298 * C50139) / C50068 - (C50298 * C50140 * ce) / C50068 +
        C50067 * ((-(ae * C50298 * C50130) / C49981) / C49935 -
                  C50299 / C50068 - (C50298 * C50131 * ce) / C50068 +
                  C50067 * ((-(C50298 * C50122 * ce) / C49981) / C49935 -
                            (ae * C50298 * C50119) / C50068 -
                            (C50067 * C50298 * C50183) / C50068));
    const double C429 =
        2 * ((-(C50347 * C50095 * ce) / C49981) / C49935 -
             (ae * C50347 * C50094) / C50068 - (C50067 * C50348) / C50068) -
        (ae * C50347 * C50139) / C50068 - (C50347 * C50140 * ce) / C50068 +
        C50067 * ((-(ae * C50347 * C50130) / C49981) / C49935 -
                  C50348 / C50068 - (C50347 * C50131 * ce) / C50068 +
                  C50067 * ((-(C50347 * C50122 * ce) / C49981) / C49935 -
                            (ae * C50347 * C50119) / C50068 -
                            (C50067 * C50347 * C50183) / C50068));
    const double C141 =
        (-3 * (C50067 * C50100 + C50081 + C50090 * ce)) / C49981 +
        C50067 * ((-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
                  (C50121 * ce) / C49981) -
        ((2 * C50090 + C50067 * C50121) * ce) / C49981;
    const double C272 =
        C50298 * ((-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
                  (C50121 * ce) / C49981);
    const double C284 =
        -(C50139 * C50319 + C50067 * C50100 + C50081 + C50090 * ce) / C49981;
    const double C413 =
        C50347 * ((-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
                  (C50121 * ce) / C49981);
    const double C425 =
        -(C50139 * C50368 + C50067 * C50100 + C50081 + C50090 * ce) / C49981;
    const double C794 = -(C50347 * C50298 * C50139) / C49981;
    const double C50173 = C50165 / C49935;
    const double C2391 = C2349 + C2350;
    const double C8144 = C8101 + C8102;
    const double C17254 = C17211 + C17212;
    const double C20226 = C20207 + C20208;
    const double C25026 = C24984 + C24985;
    const double C3134 = C3104 + C3105;
    const double C20492 = C20471 + C20472;
    const double C25745 = C25715 + C25716;
    const double C20840 = C20829 + C20830;
    const double C5467 = C5425 + C5426;
    const double C11100 = C11057 + C11058;
    const double C22633 = C22622 + C22623;
    const double C28143 = C28109 + C28110;
    const double C34340 = C34297 + C34298;
    const double C19990 = C19974 * C50884;
    const double C20212 = C19974 * C51191;
    const double C20620 = C19974 * C902;
    const double C20956 = C19974 * C50884;
    const double C22284 = C22267 * C50884;
    const double C22627 = C22267 * C51191;
    const double C23643 = C22267 * C50884;
    const double C23962 = C22267 * C902;
    const double C19992 = C19976 * C251;
    const double C20218 = C19976 * C51190;
    const double C20624 = C19976 * C901;
    const double C20704 = C19976 * C50879;
    const double C20958 = C19976 * C51139;
    const double C20506 = C20494 * C251;
    const double C20823 = C20494 * C50879;
    const double C21106 = C20494 * C51139;
    const double C31776 = C20494 * C51190;
    const double C32277 = C20494 * C901;
    const double C22287 = C22270 * C251;
    const double C23257 = C22270 * C50879;
    const double C24568 = C22270 * C51139;
    const double C39739 = C22270 * C51190;
    const double C40572 = C22270 * C901;
    const double C50200 = C50067 * C50197;
    const double C50223 = 3 * C50197;
    const double C50210 = C50197 * ce;
    const double C50689 = C50298 * C50197;
    const double C990 =
        (2 * C50298 * C50140 + C50298 * (C50140 + C50197 * C50319)) / C49935;
    const double C1104 = (C50298 * C50140 + C50298 * C50197 * C50368) / C49935;
    const double C1453 = (C50347 * (C50140 + C50197 * C50319)) / C49935;
    const double C1737 =
        (2 * C50347 * C50140 + C50347 * (C50140 + C50197 * C50368)) / C49935;
    const double C6435 = C6425 + C6426;
    const double C22273 = C22252 + C22253;
    const double C29390 = C29377 + C29378;
    const double C19995 = C19979 * C257;
    const double C20961 = C19979 * C50000;
    const double C22079 = C22075 * C257;
    const double C23437 = C22075 * C50000;
    const double C20509 = C20497 * C257;
    const double C21109 = C20497 * C50000;
    const double C39539 = C39536 * C257;
    const double C40986 = C39536 * C50000;
    const double C8459 = C7943 * C261;
    const double C17569 = C17053 * C261;
    const double C2734 = C2177 * C266;
    const double C8119 = C7943 * C266;
    const double C17229 = C17053 * C266;
    const double C25357 = C49954 * C266;
    const double C11415 = C7943 * C402;
    const double C34655 = C17053 * C402;
    const double C5799 = C2177 * C407;
    const double C11075 = C7943 * C407;
    const double C34315 = C17053 * C407;
    const double C45294 = C49954 * C407;
    const double C8817 = C7943 * C786;
    const double C14107 = C2177 * C786;
    const double C17927 = C17053 * C786;
    const double C28353 = C49954 * C786;
    const double C50199 = C50067 * C50196;
    const double C50219 = -3 * C50196;
    const double C50209 = ae * C50196;
    const double C801 =
        2 * ((-(C50347 * C50304 * ce) / C49981) / C49935 -
             (ae * C50347 * C50305) / C50068 - (C50067 * C50453) / C50068) -
        (ae * C50347 * C50298 * C50196) / C50068 -
        (C50347 * C50298 * C50197 * ce) / C50068 +
        C50067 * ((-(ae * C50347 * C50396) / C49981) / C49935 -
                  C50453 / C50068 - (C50347 * C50398 * ce) / C50068 +
                  C50067 * ((-(C50347 * C50399 * ce) / C49981) / C49935 -
                            (ae * C50347 * C50400) / C50068 -
                            (C50067 * C50347 * C50401) / C50068));
    const double C50691 = C50298 * C50196;
    const double C986 = (-2 * C50298 * C50139) / C49981 -
                        (C50298 * (C50196 * C50319 + C50139)) / C49981;
    const double C1100 = -(C50298 * C50196 * C50368 + C50298 * C50139) / C49981;
    const double C1449 = -(C50347 * (C50196 * C50319 + C50139)) / C49981;
    const double C1733 = (-2 * C50347 * C50139) / C49981 -
                         (C50347 * (C50196 * C50368 + C50139)) / C49981;
    const double C50250 = C50241 / C49935;
    const double C50412 = -C50407;
    const double C50439 = -C50434;
    const double C3593 = C3580 + C3581;
    const double C22074 = C22065 + C22066;
    const double C26188 = C26175 + C26176;
    const double C22274 = C22254 + C22255;
    const double C50325 = C50324 / C49935;
    const double C50374 = C50373 / C49935;
    const double C50282 = C50067 * C50279;
    const double C2331 =
        (3 * (C50140 + C50197 * C50319) +
         C50298 * (2 * C50298 * C50197 + C50298 * (C50197 + C50279 * C50319))) /
        C49935;
    const double C2572 =
        (C50140 + C50197 * C50319 + (C50197 + C50279 * C50319) * C50368) /
        C49935;
    const double C3094 =
        (C50347 * (2 * C50298 * C50197 + C50298 * (C50197 + C50279 * C50319))) /
        C49935;
    const double C5407 =
        (3 * (C50140 + C50197 * C50368) +
         C50347 * (2 * C50347 * C50197 + C50347 * (C50197 + C50279 * C50368))) /
        C49935;
    const double C50281 = C50067 * C50278;
    const double C2332 =
        (-3 * (C50196 * C50319 + C50139)) / C49981 +
        C50298 * ((-2 * C50298 * C50196) / C49981 -
                  (C50298 * (C50278 * C50319 + C50196)) / C49981);
    const double C2573 =
        -((C50278 * C50319 + C50196) * C50368 + C50196 * C50319 + C50139) /
        C49981;
    const double C3095 =
        C50347 * ((-2 * C50298 * C50196) / C49981 -
                  (C50298 * (C50278 * C50319 + C50196)) / C49981);
    const double C5408 =
        (-3 * (C50196 * C50368 + C50139)) / C49981 +
        C50347 * ((-2 * C50347 * C50196) / C49981 -
                  (C50347 * (C50278 * C50368 + C50196)) / C49981);
    const double C50339 = C50336 / C49935;
    const double C50388 = C50385 / C49935;
    const double C50463 = C50460 / C50068;
    const double C50479 = -C50478;
    const double C150 =
        3 * ((-(ae * C50100) / C49981) / C49935 - C50099 / C50068 -
             (C50101 * ce) / C50068 + C50067 * C50138) +
        (((-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
          (C50121 * ce) / C49981) *
         ae) /
            C49935 -
        ((2 * C50101 + C50067 * C50140 + C50121 * ae) * ce) / C50068 +
        C50067 * (2 * C50138 - (ae * C50139) / C50068 - (C50140 * ce) / C50068 +
                  C50067 * ((-(ae * C50130) / C49981) / C49935 -
                            C50129 / C50068 - (C50131 * ce) / C50068 +
                            C50067 * ((-(C50122 * ce) / C49981) / C49935 -
                                      (ae * C50119) / C50068 -
                                      (C50067 *
                                       (C50106 * C50107 +
                                        C50075 * bs[6] * std::pow(C50065, 6)) *
                                       C50076) /
                                          C50068)));
    const double C50280 = C50067 * C50277;
    const double C50344 = C50342 - C50338;
    const double C50393 = C50391 - C50387;
    const double C50419 = C50417 - C50411;
    const double C50466 = C50465 - C50462;
    const double C50446 = C50444 - C50438;
    const double C131 = 5 * (3 * C50121 + C50067 * C50186) +
                        C50067 * (4 * C50186 + C50067 * C50275);
    const double C267 = 3 * C50121 + C50067 * C50186 + C50275 * C50319;
    const double C408 = 3 * C50121 + C50067 * C50186 + C50275 * C50368;
    const double C545 = C50298 * (4 * C50186 + C50067 * C50275);
    const double C649 = C50347 * (4 * C50186 + C50067 * C50275);
    const double C787 = C50347 * C50298 * C50275;
    const double C49960 = C49959 / C49935;
    const double C2381 = C2176 * C987;
    const double C2379 = C2176 * C984;
    const double C2375 = C2176 * C988;
    const double C2369 = C2176 * C983;
    const double C2367 = C2176 * C283;
    const double C2363 = C2176 * C264;
    const double C2357 = C2176 * C282;
    const double C2353 = C2176 * C263;
    const double C2351 = C2176 * C274;
    const double C2347 = C2176 * C258;
    const double C2341 = C2176 * C275;
    const double C2337 = C2176 * C262;
    const double C2732 = C2176 * C265;
    const double C2728 = C2176 * C273;
    const double C2724 = C2176 * C259;
    const double C3128 = C2176 * C1450;
    const double C3126 = C2176 * C1447;
    const double C3122 = C2176 * C1451;
    const double C3116 = C2176 * C1446;
    const double C3112 = C2176 * C793;
    const double C3110 = C2176 * C783;
    const double C3106 = C2176 * C792;
    const double C3100 = C2176 * C784;
    const double C3408 = C2176 * C2329;
    const double C3404 = C2176 * C2324;
    const double C3586 = C2176 * C2570;
    const double C3582 = C2176 * C2565;
    const double C3578 = C2176 * C1102;
    const double C3574 = C2176 * C1098;
    const double C4105 = C2176 * C3092;
    const double C4101 = C2176 * C3087;
    const double C5457 = C2176 * C1734;
    const double C5455 = C2176 * C1731;
    const double C5451 = C2176 * C1735;
    const double C5445 = C2176 * C1730;
    const double C5443 = C2176 * C424;
    const double C5439 = C2176 * C405;
    const double C5433 = C2176 * C423;
    const double C5429 = C2176 * C404;
    const double C5427 = C2176 * C415;
    const double C5423 = C2176 * C399;
    const double C5417 = C2176 * C416;
    const double C5413 = C2176 * C403;
    const double C5797 = C2176 * C406;
    const double C5793 = C2176 * C414;
    const double C5789 = C2176 * C400;
    const double C6015 = C2176 * C1101;
    const double C6011 = C2176 * C1097;
    const double C6427 = C2176 * C4514;
    const double C6423 = C2176 * C4508;
    const double C7333 = C2176 * C5405;
    const double C7329 = C2176 * C5400;
    const double C14105 = C2176 * C785;
    const double C50006 = C50005 / C49981;
    const double C19997 = C19981 * C256;
    const double C19991 = C19975 * C256;
    const double C19987 = C19971 * C256;
    const double C19983 = C19967 * C256;
    const double C20511 = C20499 * C256;
    const double C20507 = C20495 * C256;
    const double C20503 = C20491 * C256;
    const double C22070 = C20841 * C256;
    const double C22061 = C20839 * C256;
    const double C22292 = C22275 * C256;
    const double C22288 = C22271 * C256;
    const double C22281 = C22264 * C256;
    const double C22277 = C22260 * C256;
    const double C39532 = C24220 * C256;
    const double C20711 = C20701 + C20702;
    const double C23270 = C23252 + C23253;
    const double C23260 = C20825 + C20826;
    const double C23251 = C20826 + C20825;
    const double C2727 = C50866 * C270;
    const double C8104 = C7938 * C270;
    const double C8458 = C51189 * C270;
    const double C17214 = C17048 * C270;
    const double C17568 = C17047 * C270;
    const double C25350 = C50866 * C270;
    const double C2362 = C50866 * C280;
    const double C2733 = C2171 * C280;
    const double C8128 = C7938 * C280;
    const double C8118 = C51189 * C280;
    const double C17238 = C17048 * C280;
    const double C17228 = C17047 * C280;
    const double C20214 = C50861 * C280;
    const double C24997 = C50866 * C280;
    const double C25356 = C51132 * C280;
    const double C5792 = C50866 * C411;
    const double C11060 = C7938 * C411;
    const double C11414 = C51189 * C411;
    const double C28560 = C50866 * C411;
    const double C34300 = C17048 * C411;
    const double C34654 = C17047 * C411;
    const double C5438 = C50866 * C421;
    const double C5798 = C2171 * C421;
    const double C11084 = C7938 * C421;
    const double C11074 = C51189 * C421;
    const double C22629 = C50861 * C421;
    const double C28116 = C50866 * C421;
    const double C34324 = C17048 * C421;
    const double C34314 = C17047 * C421;
    const double C45293 = C51132 * C421;
    const double C3103 = C50866 * C790;
    const double C8826 = C7938 * C790;
    const double C8816 = C51189 * C790;
    const double C14106 = C2171 * C790;
    const double C17936 = C17048 * C790;
    const double C17926 = C17047 * C790;
    const double C22451 = C50861 * C790;
    const double C25714 = C50866 * C790;
    const double C28352 = C51132 * C790;
    const double C50198 = C50067 * C50195;
    const double C50208 = 2 * C50195;
    const double C50316 = C50315 - C50312;
    const double C50365 = C50364 - C50361;
    const double C2731 = C50866 * C288;
    const double C8110 = C7938 * C288;
    const double C8464 = C51189 * C288;
    const double C17220 = C17048 * C288;
    const double C17574 = C17047 * C288;
    const double C25354 = C50866 * C288;
    const double C5796 = C50866 * C429;
    const double C11066 = C7938 * C429;
    const double C11420 = C51189 * C429;
    const double C28564 = C50866 * C429;
    const double C34306 = C17048 * C429;
    const double C34660 = C17047 * C429;
    const double C2730 = C2177 * C272;
    const double C8109 = C7943 * C272;
    const double C17219 = C17053 * C272;
    const double C25353 = C49954 * C272;
    const double C2365 = C2177 * C284;
    const double C2736 = C2176 * C284;
    const double C8121 = C7943 * C284;
    const double C17231 = C17053 * C284;
    const double C20215 = C19835 * C284;
    const double C25000 = C49954 * C284;
    const double C5795 = C2177 * C413;
    const double C11065 = C7943 * C413;
    const double C28563 = C49954 * C413;
    const double C34305 = C17053 * C413;
    const double C5441 = C2177 * C425;
    const double C5801 = C2176 * C425;
    const double C11077 = C7943 * C425;
    const double C22630 = C19835 * C425;
    const double C28127 = C49954 * C425;
    const double C34317 = C17053 * C425;
    const double C3114 = C2177 * C794;
    const double C8819 = C7943 * C794;
    const double C14109 = C2176 * C794;
    const double C17929 = C17053 * C794;
    const double C22452 = C19835 * C794;
    const double C25725 = C49954 * C794;
    const double C50181 = C50173 - C50143;
    const double C20232 = C20226 * C539;
    const double C20616 = C20226 * C903;
    const double C20504 = C20492 * C50884;
    const double C21104 = C20492 * C50884;
    const double C22449 = C20492 * C51191;
    const double C22992 = C20492 * C902;
    const double C20846 = C20840 * C50879;
    const double C22062 = C20840 * C251;
    const double C22455 = C20840 * C51190;
    const double C22996 = C20840 * C901;
    const double C23434 = C20840 * C51139;
    const double C22637 = C22633 * C539;
    const double C23958 = C22633 * C903;
    const double C20714 = C20704 + C20703;
    const double C20712 = C20703 + C20704;
    const double C21216 = C20823 + C20824;
    const double C23805 = C20824 + C20823;
    const double C24214 = C23257 + C23258;
    const double C40143 = C23258 + C23257;
    const double C50203 = C50152 + C50200;
    const double C50226 = C50210 / C50068;
    const double C6007 =
        (2 * C50347 * C50689 + C50347 * (C50689 + C50298 * C50279 * C50368)) /
        C49935;
    const double C2372 = C50866 * C990;
    const double C9098 = C7938 * C990;
    const double C18208 = C17048 * C990;
    const double C20222 = C50861 * C990;
    const double C25007 = C50866 * C990;
    const double C6014 = C50866 * C1104;
    const double C9262 = C7938 * C1104;
    const double C18372 = C17048 * C1104;
    const double C22459 = C50861 * C1104;
    const double C28132 = C50866 * C1104;
    const double C3119 = C50866 * C1453;
    const double C9766 = C7938 * C1453;
    const double C18876 = C17048 * C1453;
    const double C25730 = C50866 * C1453;
    const double C31780 = C50861 * C1453;
    const double C5448 = C50866 * C1737;
    const double C12894 = C7938 * C1737;
    const double C36134 = C17048 * C1737;
    const double C39743 = C50861 * C1737;
    const double C44983 = C50866 * C1737;
    const double C22290 = C22273 * C257;
    const double C23647 = C22273 * C50000;
    const double C50202 = C50199 / C49981;
    const double C50232 = C50219 / C49981;
    const double C50225 = C50209 / C50068;
    const double C8836 = C7938 * C801;
    const double C14112 = C50866 * C801;
    const double C17946 = C17048 * C801;
    const double C28358 = C50866 * C801;
    const double C6008 =
        (-2 * C50347 * C50691) / C49981 -
        (C50347 * (C50298 * C50278 * C50368 + C50691)) / C49981;
    const double C2383 = C2177 * C986;
    const double C9103 = C7943 * C986;
    const double C18213 = C17053 * C986;
    const double C20223 = C19835 * C986;
    const double C25018 = C49954 * C986;
    const double C6017 = C2177 * C1100;
    const double C9267 = C7943 * C1100;
    const double C18377 = C17053 * C1100;
    const double C22460 = C19835 * C1100;
    const double C28135 = C49954 * C1100;
    const double C3130 = C2177 * C1449;
    const double C9771 = C7943 * C1449;
    const double C18881 = C17053 * C1449;
    const double C25741 = C49954 * C1449;
    const double C31781 = C19835 * C1449;
    const double C5459 = C2177 * C1733;
    const double C12899 = C7943 * C1733;
    const double C36139 = C17053 * C1733;
    const double C39744 = C19835 * C1733;
    const double C44986 = C49954 * C1733;
    const double C50258 = C50250 - C50212;
    const double C50414 = C50412 / C49935;
    const double C50441 = C50439 / C49935;
    const double C22078 = C22074 * C50884;
    const double C22457 = C22074 * C51191;
    const double C22998 = C22074 * C902;
    const double C23436 = C22074 * C50884;
    const double C22291 = C22274 * C251;
    const double C23255 = C22274 * C50879;
    const double C23648 = C22274 * C51139;
    const double C50326 = C50325 - C50143;
    const double C50375 = C50374 - C50143;
    const double C50285 = C50224 + C50282;
    const double C50284 = C50281 / C49981;
    const double C50341 = C50339 - C50212;
    const double C50390 = C50388 - C50212;
    const double C50480 = C50479 / C49935;
    const double C50420 = C50067 * C50419;
    const double C50467 = C50466 - C50463;
    const double C50447 = C50067 * C50446;
    const double C49961 = C49960 - C49950;
    const double C2406 = C2379 + C2380;
    const double C2404 = C2375 + C2376;
    const double C2401 = C2369 + C2370;
    const double C2400 = C2367 + C2368;
    const double C2398 = C2363 + C2364;
    const double C2395 = C2357 + C2358;
    const double C2393 = C2353 + C2354;
    const double C2392 = C2351 + C2352;
    const double C2390 = C2347 + C2348;
    const double C2387 = C2341 + C2342;
    const double C2385 = C2337 + C2338;
    const double C2742 = C2728 + C2729;
    const double C2740 = C2724 + C2725;
    const double C3145 = C3126 + C3127;
    const double C3143 = C3122 + C3123;
    const double C3140 = C3116 + C3117;
    const double C3138 = C3112 + C3113;
    const double C3137 = C3110 + C3111;
    const double C3135 = C3106 + C3107;
    const double C3132 = C3100 + C3101;
    const double C3415 = C3404 + C3405;
    const double C3594 = C3582 + C3583;
    const double C3592 = C3578 + C3579;
    const double C3590 = C3574 + C3575;
    const double C4111 = C4101 + C4102;
    const double C5482 = C5455 + C5456;
    const double C5480 = C5451 + C5452;
    const double C5477 = C5445 + C5446;
    const double C5476 = C5443 + C5444;
    const double C5474 = C5439 + C5440;
    const double C5471 = C5433 + C5434;
    const double C5469 = C5429 + C5430;
    const double C5468 = C5427 + C5428;
    const double C5466 = C5423 + C5424;
    const double C5463 = C5417 + C5418;
    const double C5461 = C5413 + C5414;
    const double C5807 = C5793 + C5794;
    const double C5805 = C5789 + C5790;
    const double C6021 = C6015 + C6016;
    const double C6019 = C6011 + C6012;
    const double C6436 = C6427 + C6428;
    const double C6434 = C6423 + C6424;
    const double C7339 = C7329 + C7330;
    const double C50007 = C50006 - C49996;
    const double C20000 = C19991 + C19992;
    const double C19999 = C19987 + C19988;
    const double C31480 = C20507 + C20506;
    const double C32127 = C20506 + C20507;
    const double C22835 = C20502 + C20503;
    const double C22834 = C20503 + C20502;
    const double C39528 = C22288 + C22287;
    const double C22294 = C22281 + C22282;
    const double C23280 = C23270 * C17049;
    const double C40142 = C23270 * C51006;
    const double C48550 = C23270 * C51160;
    const double C2741 = C2726 + C2727;
    const double C8145 = C8103 + C8104;
    const double C17255 = C17213 + C17214;
    const double C25364 = C25349 + C25350;
    const double C2397 = C2361 + C2362;
    const double C2744 = C2732 + C2733;
    const double C8157 = C8127 + C8128;
    const double C17267 = C17237 + C17238;
    const double C20227 = C20213 + C20214;
    const double C25032 = C24996 + C24997;
    const double C5806 = C5791 + C5792;
    const double C11101 = C11059 + C11060;
    const double C28566 = C28559 + C28560;
    const double C34341 = C34299 + C34300;
    const double C5473 = C5437 + C5438;
    const double C5809 = C5797 + C5798;
    const double C11113 = C11083 + C11084;
    const double C22634 = C22628 + C22629;
    const double C28146 = C28115 + C28116;
    const double C34353 = C34323 + C34324;
    const double C3133 = C3102 + C3103;
    const double C8843 = C8825 + C8826;
    const double C14113 = C14105 + C14106;
    const double C17953 = C17935 + C17936;
    const double C22462 = C22450 + C22451;
    const double C25744 = C25713 + C25714;
    const double C2743 = C2730 + C2731;
    const double C8148 = C8109 + C8110;
    const double C17258 = C17219 + C17220;
    const double C25366 = C25353 + C25354;
    const double C2399 = C2365 + C2366;
    const double C2746 = C2736 + C2737;
    const double C8154 = C8121 + C8122;
    const double C17264 = C17231 + C17232;
    const double C20228 = C20215 + C20216;
    const double C25034 = C25000 + C25001;
    const double C5808 = C5795 + C5796;
    const double C11104 = C11065 + C11066;
    const double C28568 = C28563 + C28564;
    const double C34344 = C34305 + C34306;
    const double C5475 = C5441 + C5442;
    const double C5811 = C5801 + C5802;
    const double C11110 = C11077 + C11078;
    const double C22635 = C22630 + C22631;
    const double C28152 = C28127 + C28128;
    const double C34350 = C34317 + C34318;
    const double C3139 = C3114 + C3115;
    const double C8840 = C8819 + C8820;
    const double C14115 = C14109 + C14110;
    const double C17950 = C17929 + C17930;
    const double C22463 = C22452 + C22453;
    const double C25750 = C25725 + C25726;
    const double C50188 = C50181 - C50154;
    const double C23259 = C20846 + C20845;
    const double C23254 = C20845 + C20846;
    const double C22243 = C22061 + C22062;
    const double C22836 = C22062 + C22061;
    const double C24219 = C24214 * C17049;
    const double C40746 = C24214 * C51006;
    const double C49433 = C24214 * C51160;
    const double C40146 = C40143 * C51006;
    const double C50205 = C50203 + C50180;
    const double C2402 = C2371 + C2372;
    const double C9107 = C9097 + C9098;
    const double C18217 = C18207 + C18208;
    const double C20229 = C20221 + C20222;
    const double C25037 = C25006 + C25007;
    const double C6020 = C6013 + C6014;
    const double C9271 = C9261 + C9262;
    const double C18381 = C18371 + C18372;
    const double C22464 = C22458 + C22459;
    const double C28154 = C28131 + C28132;
    const double C3141 = C3118 + C3119;
    const double C9775 = C9765 + C9766;
    const double C18885 = C18875 + C18876;
    const double C25752 = C25729 + C25730;
    const double C31783 = C31779 + C31780;
    const double C5478 = C5447 + C5448;
    const double C12903 = C12893 + C12894;
    const double C36143 = C36133 + C36134;
    const double C39746 = C39742 + C39743;
    const double C44993 = C44982 + C44983;
    const double C50204 = C50158 - C50202;
    const double C50240 = C50208 - C50225;
    const double C50265 = C50258 - C50228;
    const double C50416 = C50414 - C50397;
    const double C50443 = C50441 - C50424;
    const double C23273 = C23256 + C23255;
    const double C23272 = C23255 + C23256;
    const double C296 =
        2 * ((-((C50095 + C50122 * C50319) * ce) / C49981) / C49935 -
             (ae * (C50119 * C50319 + C50094)) / C50068 + C50067 * C50326) -
        (ae * (C50196 * C50319 + C50139)) / C50068 -
        ((C50140 + C50197 * C50319) * ce) / C50068 +
        C50067 *
            (C50326 - (ae * (C50184 * C50319 + C50130)) / C50068 -
             ((C50131 + C50187 * C50319) * ce) / C50068 +
             C50067 *
                 ((-((C50122 + C50171 * C50319) * ce) / C49981) / C49935 -
                  (ae * (C50168 * C50319 + C50119)) / C50068 +
                  C50067 * ((-(C50260 * C50319) / C49981) / C49935 - C50212)));
    const double C995 =
        (((-2 * C50298 * C50094) / C49981 -
          (C50298 * (C50119 * C50319 + C50094)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50298 * C50095 + C50298 * (C50095 + C50122 * C50319)) * ce) /
            C50068 +
        C50067 * ((-2 * C50299) / C50068 + C50298 * C50326);
    const double C1458 =
        (-(C50347 * (C50095 + C50122 * C50319) * ce) / C49981) / C49935 -
        (ae * C50347 * (C50119 * C50319 + C50094)) / C50068 +
        C50067 * C50347 * C50326;
    const double C2333 =
        3 * ((-(C50129 * C50319) / C49981) / C49935 - C50099 / C50068) +
        C50298 * ((-2 * C50299) / C50068 + C50298 * C50326);
    const double C2574 = (-(C50129 * C50319) / C49981) / C49935 -
                         C50099 / C50068 + C50326 * C50368;
    const double C3096 = C50347 * ((-2 * C50299) / C50068 + C50298 * C50326);
    const double C437 =
        2 * ((-((C50095 + C50122 * C50368) * ce) / C49981) / C49935 -
             (ae * (C50119 * C50368 + C50094)) / C50068 + C50067 * C50375) -
        (ae * (C50196 * C50368 + C50139)) / C50068 -
        ((C50140 + C50197 * C50368) * ce) / C50068 +
        C50067 *
            (C50375 - (ae * (C50184 * C50368 + C50130)) / C50068 -
             ((C50131 + C50187 * C50368) * ce) / C50068 +
             C50067 *
                 ((-((C50122 + C50171 * C50368) * ce) / C49981) / C49935 -
                  (ae * (C50168 * C50368 + C50119)) / C50068 +
                  C50067 * ((-(C50260 * C50368) / C49981) / C49935 - C50212)));
    const double C1742 =
        (((-2 * C50347 * C50094) / C49981 -
          (C50347 * (C50119 * C50368 + C50094)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50095 + C50347 * (C50095 + C50122 * C50368)) * ce) /
            C50068 +
        C50067 * ((-2 * C50348) / C50068 + C50347 * C50375);
    const double C5409 =
        3 * ((-(C50129 * C50368) / C49981) / C49935 - C50099 / C50068) +
        C50347 * ((-2 * C50348) / C50068 + C50347 * C50375);
    const double C50288 = C50285 + C50257;
    const double C50287 = C50233 - C50284;
    const double C50343 = C50067 * C50341;
    const double C50470 = C50298 * C50341;
    const double C50486 = C50347 * C50341;
    const double C2575 =
        (-((C50095 + C50122 * C50319 + C50331 * C50368) * ce) / C49981) /
            C49935 -
        (ae * (C50332 * C50368 + C50119 * C50319 + C50094)) / C50068 +
        C50067 * (C50326 + C50341 * C50368);
    const double C2576 =
        C50326 + C50341 * C50368 -
        (ae *
         ((C50261 * C50319 + C50184) * C50368 + C50184 * C50319 + C50130)) /
            C50068 -
        ((C50131 + C50187 * C50319 + (C50187 + C50264 * C50319) * C50368) *
         ce) /
            C50068 +
        C50067 *
            ((-((C50331 + (C50171 + C50247 * C50319) * C50368) * ce) / C49981) /
                 C49935 -
             (ae * ((C50244 * C50319 + C50168) * C50368 + C50332)) / C50068 +
             C50067 *
                 (C50341 +
                  ((-((C50217 * C50218 + C50075 * bs[8] * std::pow(C50065, 8)) *
                      C50076 * C50319) /
                    C49981) /
                       C49935 -
                   C50260 / C50068) *
                      C50368));
    const double C4096 =
        (C50347 *
         ((-3 * C50332) / C49981 +
          C50298 * ((-2 * C50400) / C49981 -
                    (C50298 * (C50244 * C50319 + C50168)) / C49981)) *
         ae) /
            C49935 -
        (C50347 *
         (3 * C50331 +
          C50298 * (2 * C50399 + C50298 * (C50171 + C50247 * C50319))) *
         ce) /
            C50068 +
        C50067 * C50347 *
            (3 * C50341 +
             C50298 * ((-2 * C50401) / C50068 +
                       C50298 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50319) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068)));
    const double C4518 =
        2 * C50347 * C50326 + C50347 * (C50326 + C50341 * C50368);
    const double C50392 = C50067 * C50390;
    const double C50492 = C50347 * C50390;
    const double C50481 = C50480 - C50397;
    const double C25016 = C49961 * C987;
    const double C25014 = C49961 * C984;
    const double C25010 = C49961 * C988;
    const double C25004 = C49961 * C983;
    const double C25002 = C49961 * C283;
    const double C24998 = C49961 * C264;
    const double C24992 = C49961 * C282;
    const double C24988 = C49961 * C263;
    const double C24986 = C49961 * C274;
    const double C24982 = C49961 * C258;
    const double C24976 = C49961 * C275;
    const double C24972 = C49961 * C262;
    const double C25359 = C49961 * C284;
    const double C25355 = C49961 * C265;
    const double C25351 = C49961 * C273;
    const double C25347 = C49961 * C259;
    const double C25739 = C49961 * C1450;
    const double C25737 = C49961 * C1447;
    const double C25733 = C49961 * C1451;
    const double C25727 = C49961 * C1446;
    const double C25723 = C49961 * C793;
    const double C25721 = C49961 * C783;
    const double C25717 = C49961 * C792;
    const double C25711 = C49961 * C784;
    const double C26011 = C49961 * C2329;
    const double C26007 = C49961 * C2324;
    const double C26181 = C49961 * C2570;
    const double C26177 = C49961 * C2565;
    const double C26173 = C49961 * C1102;
    const double C26169 = C49961 * C1098;
    const double C26692 = C49961 * C3092;
    const double C26688 = C49961 * C3087;
    const double C28133 = C49961 * C1101;
    const double C28129 = C49961 * C1097;
    const double C28125 = C49961 * C424;
    const double C28123 = C49961 * C404;
    const double C28119 = C49961 * C423;
    const double C28113 = C49961 * C405;
    const double C28111 = C49961 * C415;
    const double C28107 = C49961 * C399;
    const double C28101 = C49961 * C416;
    const double C28097 = C49961 * C403;
    const double C28355 = C49961 * C794;
    const double C28351 = C49961 * C785;
    const double C28561 = C49961 * C414;
    const double C28557 = C49961 * C400;
    const double C29379 = C49961 * C4514;
    const double C29375 = C49961 * C4508;
    const double C30582 = C49961 * C1735;
    const double C30578 = C49961 * C1731;
    const double C44984 = C49961 * C1734;
    const double C44980 = C49961 * C1730;
    const double C45296 = C49961 * C425;
    const double C45292 = C49961 * C406;
    const double C46775 = C49961 * C5405;
    const double C46771 = C49961 * C5400;
    const double C117 =
        ((((0 - (C49933 * C49934) / C49935) * ae) / C49935 - (0 * be) / C49944 +
          C49936 / C49935) /
             C49940 -
         ((C49933 * C49957 + 0) * be) / C49935) /
            C49940 +
        ((C49933 * (C49957 / C49940 -
                    ((C49933 * C49961 + C51132) * be) / C49935 + C49954) +
          C51188) *
         ae) /
            C49935 +
        C49961 / C49940 - ((C49933 * C49954 + C50866) * be) / C49935;
    const double C118 =
        (C49957 / C49940 - ((C49933 * C49961 + C51132) * be) / C49935 +
         C49954) /
            C49940 +
        ((C49933 *
              (C49961 / C49940 - ((C49933 * C49954 + C50866) * be) / C49935) +
          C51189) *
         ae) /
            C49935 +
        2 * (C49954 / C49940 - (0 * be) / C49935);
    const double C119 =
        (C49961 / C49940 - ((C49933 * C49954 + C50866) * be) / C49935) /
            C49940 +
        ((C49933 * (C49954 / C49940 - (0 * be) / C49935) + C7938) * ae) /
            C49935;
    const double C7941 =
        C49957 / C49940 - ((C49933 * C49961 + C51132) * be) / C49935 + C49954;
    const double C7942 =
        C49961 / C49940 - ((C49933 * C49954 + C50866) * be) / C49935;
    const double C17051 =
        C49957 / C49940 + ((C49933 * C49961 + C51132) * ae) / C49935 + C49954;
    const double C17052 =
        C49961 / C49940 + ((C49933 * C49954 + C50866) * ae) / C49935;
    const double C3403 = C2405 + C2406;
    const double C2410 = C2395 + C2396;
    const double C2409 = C2393 + C2394;
    const double C4100 = C3144 + C3145;
    const double C15780 = C3145 + C3144;
    const double C14575 = C3136 + C3137;
    const double C14569 = C3137 + C3136;
    const double C14574 = C3134 + C3135;
    const double C14570 = C3135 + C3134;
    const double C6431 = C3593 + C3592;
    const double C15114 = C3592 + C3593;
    const double C6432 = C3591 + C3590;
    const double C15113 = C3590 + C3591;
    const double C7328 = C5481 + C5482;
    const double C5486 = C5471 + C5472;
    const double C5485 = C5469 + C5470;
    const double C20963 = C19981 * C50007;
    const double C20957 = C19975 * C50007;
    const double C20953 = C19971 * C50007;
    const double C20949 = C19967 * C50007;
    const double C21111 = C20499 * C50007;
    const double C21107 = C20495 * C50007;
    const double C21103 = C20491 * C50007;
    const double C23439 = C20841 * C50007;
    const double C23433 = C20839 * C50007;
    const double C23649 = C22275 * C50007;
    const double C23640 = C22264 * C50007;
    const double C23635 = C22260 * C50007;
    const double C24569 = C22271 * C50007;
    const double C40988 = C24220 * C50007;
    const double C121 =
        ((((0 - (C49979 * C49980) / C49981) * ce) / C49981 - (0 * de) / C49990 +
          C49982 / C49981) /
             C49986 -
         ((C49979 * C50003 + 0) * de) / C49981) /
            C49986 +
        ((C49979 * (C50003 / C49986 -
                    ((C49979 * C50007 + C51139) * de) / C49981 + C50000) +
          C51190) *
         ce) /
            C49981 +
        C50007 / C49986 - ((C49979 * C50000 + C50884) * de) / C49981;
    const double C122 =
        (C50003 / C49986 - ((C49979 * C50007 + C51139) * de) / C49981 +
         C50000) /
            C49986 +
        ((C49979 *
              (C50007 / C49986 - ((C49979 * C50000 + C50884) * de) / C49981) +
          C51191) *
         ce) /
            C49981 +
        2 * (C50000 / C49986 - (0 * de) / C49981);
    const double C123 =
        (C50007 / C49986 - ((C49979 * C50000 + C50884) * de) / C49981) /
            C49986 +
        ((C49979 * (C50000 / C49986 - (0 * de) / C49981) + C539) * ce) / C49981;
    const double C542 =
        C50003 / C49986 - ((C49979 * C50007 + C51139) * de) / C49981 + C50000;
    const double C543 =
        C50007 / C49986 - ((C49979 * C50000 + C50884) * de) / C49981;
    const double C906 =
        C50003 / C49986 + ((C49979 * C50007 + C51139) * ce) / C49981 + C50000;
    const double C907 =
        C50007 / C49986 + ((C49979 * C50000 + C50884) * ce) / C49981;
    const double C20002 = C20000 - C19993;
    const double C20001 = C19999 - C19989;
    const double C31481 = C31480 - C20505;
    const double C32128 = C20505 - C32127;
    const double C22838 = C20501 - C22835;
    const double C22837 = C22834 - C20501;
    const double C39535 = C39528 - C22286;
    const double C22296 = C22294 - C22283;
    const double C2411 = C2397 + C2398;
    const double C20233 = C20227 * C544;
    const double C20621 = C20227 * C908;
    const double C5487 = C5473 + C5474;
    const double C22638 = C22634 * C544;
    const double C23963 = C22634 * C908;
    const double C14573 = C3132 + C3133;
    const double C14571 = C3133 + C3132;
    const double C22466 = C22462 * C544;
    const double C22993 = C22462 * C908;
    const double C2412 = C2399 + C2400;
    const double C20234 = C20228 * C539;
    const double C20622 = C20228 * C903;
    const double C5488 = C5475 + C5476;
    const double C22639 = C22635 * C539;
    const double C23964 = C22635 * C903;
    const double C14576 = C3138 + C3139;
    const double C14572 = C3139 + C3138;
    const double C22467 = C22463 * C539;
    const double C22994 = C22463 * C903;
    const double C50201 = C50188 + C50198;
    const double C23279 = C23259 * C17049;
    const double C40145 = C23259 * C51006;
    const double C48553 = C23259 * C51160;
    const double C23271 = C23254 * C51056;
    const double C48551 = C23254 * C51056;
    const double C22268 = C22243 - C22077;
    const double C22839 = C22077 - C22836;
    const double C142 = (4 * (2 * C50101 + C50067 * C50140 + C50121 * ae) +
                         C50067 * (3 * C50140 + C50067 * C50205 + C50186 * ae) +
                         (3 * C50121 + C50067 * C50186) * ae) /
                        C49935;
    const double C271 =
        (C50298 * (3 * C50140 + C50067 * C50205 + C50186 * ae)) / C49935;
    const double C281 =
        (2 * C50101 + C50067 * C50140 + C50121 * ae + C50205 * C50319) / C49935;
    const double C412 =
        (C50347 * (3 * C50140 + C50067 * C50205 + C50186 * ae)) / C49935;
    const double C422 =
        (2 * C50101 + C50067 * C50140 + C50121 * ae + C50205 * C50368) / C49935;
    const double C791 = (C50347 * C50298 * C50205) / C49935;
    const double C20235 = C20229 * C544;
    const double C20627 = C20229 * C908;
    const double C22468 = C22464 * C544;
    const double C22999 = C22464 * C908;
    const double C31785 = C31783 * C544;
    const double C32280 = C31783 * C908;
    const double C39748 = C39746 * C544;
    const double C40575 = C39746 * C908;
    const double C50206 = C50204 - C50185;
    const double C50249 = C50240 - C50226;
    const double C50283 = C50265 + C50280;
    const double C50418 = C50416 - C50408;
    const double C50445 = C50443 - C50435;
    const double C24213 = C23272 * C51056;
    const double C40144 = C23272 * C51006;
    const double C49432 = C23272 * C51056;
    const double C2739 = C50866 * C296;
    const double C8138 = C7938 * C296;
    const double C17248 = C17048 * C296;
    const double C25362 = C50866 * C296;
    const double C2382 = C2171 * C995;
    const double C2374 = C50866 * C995;
    const double C9102 = C51189 * C995;
    const double C18212 = C17047 * C995;
    const double C19958 = C50861 * C995;
    const double C25017 = C51132 * C995;
    const double C25009 = C50866 * C995;
    const double C3129 = C2171 * C1458;
    const double C3121 = C50866 * C1458;
    const double C9770 = C51189 * C1458;
    const double C18880 = C17047 * C1458;
    const double C20480 = C50861 * C1458;
    const double C25740 = C51132 * C1458;
    const double C25732 = C50866 * C1458;
    const double C3409 = C2171 * C2333;
    const double C19962 = C50861 * C2333;
    const double C26012 = C51132 * C2333;
    const double C3587 = C2171 * C2574;
    const double C20834 = C50861 * C2574;
    const double C26182 = C51132 * C2574;
    const double C4106 = C2171 * C3096;
    const double C20484 = C50861 * C3096;
    const double C26693 = C51132 * C3096;
    const double C5804 = C50866 * C437;
    const double C11094 = C7938 * C437;
    const double C34334 = C17048 * C437;
    const double C45299 = C50866 * C437;
    const double C5458 = C2171 * C1742;
    const double C5450 = C50866 * C1742;
    const double C12898 = C51189 * C1742;
    const double C22251 = C50861 * C1742;
    const double C30585 = C50866 * C1742;
    const double C36138 = C17047 * C1742;
    const double C44985 = C51132 * C1742;
    const double C7334 = C2171 * C5409;
    const double C24218 = C50861 * C5409;
    const double C46776 = C51132 * C5409;
    const double C50291 = C50067 * C50288;
    const double C989 =
        (2 * C50298 * C50205 + C50298 * (C50205 + C50288 * C50319)) / C49935;
    const double C1103 = (C50298 * C50205 + C50298 * C50288 * C50368) / C49935;
    const double C1452 = (C50347 * (C50205 + C50288 * C50319)) / C49935;
    const double C1736 =
        (2 * C50347 * C50205 + C50347 * (C50205 + C50288 * C50368)) / C49935;
    const double C50290 = C50287 - C50262;
    const double C50345 = C50344 + C50343;
    const double C50472 = C50471 + C50470;
    const double C1456 =
        2 * ((-(C50347 * C50331 * ce) / C49981) / C49935 -
             (ae * C50347 * C50332) / C50068 + C50067 * C50486) -
        (ae * C50347 * (C50278 * C50319 + C50196)) / C50068 -
        (C50347 * (C50197 + C50279 * C50319) * ce) / C50068 +
        C50067 *
            (C50486 - (ae * C50347 * (C50261 * C50319 + C50184)) / C50068 -
             (C50347 * (C50187 + C50264 * C50319) * ce) / C50068 +
             C50067 * ((-(C50347 * (C50171 + C50247 * C50319) * ce) / C49981) /
                           C49935 -
                       (ae * C50347 * (C50244 * C50319 + C50168)) / C50068 +
                       C50067 * C50347 *
                           ((-((C50217 * C50218 +
                                C50075 * bs[8] * std::pow(C50065, 8)) *
                               C50076 * C50319) /
                             C49981) /
                                C49935 -
                            C50260 / C50068)));
    const double C1457 =
        C50347 * C50326 - (ae * C50347 * (C50184 * C50319 + C50130)) / C50068 -
        (C50347 * (C50131 + C50187 * C50319) * ce) / C50068 +
        C50067 * ((-(C50347 * C50331 * ce) / C49981) / C49935 -
                  (ae * C50347 * C50332) / C50068 + C50067 * C50486);
    const double C4517 =
        (((-2 * C50347 * C50332) / C49981 -
          (C50347 * ((C50244 * C50319 + C50168) * C50368 + C50332)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50331 +
          C50347 * (C50331 + (C50171 + C50247 * C50319) * C50368)) *
         ce) /
            C50068 +
        C50067 *
            (2 * C50486 +
             C50347 *
                 (C50341 +
                  ((-((C50217 * C50218 + C50075 * bs[8] * std::pow(C50065, 8)) *
                      C50076 * C50319) /
                    C49981) /
                       C49935 -
                   C50260 / C50068) *
                      C50368));
    const double C23247 =
        3 * (C50326 + C50341 * C50368) +
        C50347 *
            (2 * C50486 +
             C50347 *
                 (C50341 +
                  ((-((C50217 * C50218 + C50075 * bs[8] * std::pow(C50065, 8)) *
                      C50076 * C50319) /
                    C49981) /
                       C49935 -
                   C50260 / C50068) *
                      C50368));
    const double C3589 = C50866 * C2575;
    const double C22072 = C50861 * C2575;
    const double C26184 = C50866 * C2575;
    const double C23268 = C50861 * C4518;
    const double C50394 = C50393 + C50392;
    const double C50494 = C50493 + C50492;
    const double C1107 =
        2 * ((-((C50304 + C50399 * C50368) * ce) / C49981) / C49935 -
             (ae * (C50400 * C50368 + C50305)) / C50068 + C50067 * C50481) -
        (ae * (C50298 * C50278 * C50368 + C50298 * C50196)) / C50068 -
        ((C50298 * C50197 + C50298 * C50279 * C50368) * ce) / C50068 +
        C50067 *
            (C50481 - (ae * (C50298 * C50261 * C50368 + C50396)) / C50068 -
             ((C50398 + C50298 * C50264 * C50368) * ce) / C50068 +
             C50067 * ((-((C50399 + C50298 * C50247 * C50368) * ce) / C49981) /
                           C49935 -
                       (ae * (C50298 * C50244 * C50368 + C50400)) / C50068 +
                       C50067 * ((-(C50298 *
                                    (C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50401 / C50068)));
    const double C1108 =
        (-(C50306 * C50368) / C49981) / C49935 - C50299 / C50068 -
        (ae * (C50396 * C50368 + C50298 * C50130)) / C50068 -
        ((C50298 * C50131 + C50398 * C50368) * ce) / C50068 +
        C50067 * ((-((C50304 + C50399 * C50368) * ce) / C49981) / C49935 -
                  (ae * (C50400 * C50368 + C50305)) / C50068 + C50067 * C50481);
    const double C4519 =
        (((-2 * C50347 * C50305) / C49981 -
          (C50347 * (C50400 * C50368 + C50305)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50304 + C50347 * (C50304 + C50399 * C50368)) * ce) /
            C50068 +
        C50067 * ((-2 * C50453) / C50068 + C50347 * C50481);
    const double C6009 =
        (-2 * C50453) / C50068 + C50347 * C50481 +
        (((-2 * C50347 * C50396) / C49981 -
          (C50347 * (C50298 * C50261 * C50368 + C50396)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50398 + C50347 * (C50398 + C50298 * C50264 * C50368)) *
         ce) /
            C50068 +
        C50067 *
            ((((-2 * C50456) / C49981 -
               (C50347 * (C50298 * C50244 * C50368 + C50400)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50455 + C50347 * (C50399 + C50298 * C50247 * C50368)) *
              ce) /
                 C50068 +
             C50067 * ((-2 * C50457) / C50068 +
                       C50347 * ((-(C50298 *
                                    (C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50401 / C50068)));
    const double C6418 =
        (((-3 * (C50400 * C50368 + C50305)) / C49981 +
          C50347 * ((-2 * C50456) / C49981 -
                    (C50347 * (C50298 * C50244 * C50368 + C50400)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50304 + C50399 * C50368) +
          C50347 *
              (2 * C50455 + C50347 * (C50399 + C50298 * C50247 * C50368))) *
         ce) /
            C50068 +
        C50067 *
            (3 * C50481 +
             C50347 * ((-2 * C50457) / C50068 +
                       C50347 * ((-(C50298 *
                                    (C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50401 / C50068)));
    const double C6419 =
        3 * ((-(C50306 * C50368) / C49981) / C49935 - C50299 / C50068) +
        C50347 * ((-2 * C50453) / C50068 + C50347 * C50481);
    const double C24211 =
        4 * ((-2 * C50453) / C50068 + C50347 * C50481) +
        C50347 *
            (3 * C50481 +
             C50347 * ((-2 * C50457) / C50068 +
                       C50347 * ((-(C50298 *
                                    (C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50401 / C50068)));
    const double C25041 = C25014 + C25015;
    const double C25039 = C25010 + C25011;
    const double C25036 = C25004 + C25005;
    const double C25035 = C25002 + C25003;
    const double C25033 = C24998 + C24999;
    const double C25030 = C24992 + C24993;
    const double C25028 = C24988 + C24989;
    const double C25027 = C24986 + C24987;
    const double C25025 = C24982 + C24983;
    const double C25022 = C24976 + C24977;
    const double C25020 = C24972 + C24973;
    const double C25369 = C25359 + C25360;
    const double C25367 = C25355 + C25356;
    const double C25365 = C25351 + C25352;
    const double C25363 = C25347 + C25348;
    const double C25756 = C25737 + C25738;
    const double C25754 = C25733 + C25734;
    const double C25751 = C25727 + C25728;
    const double C25749 = C25723 + C25724;
    const double C25748 = C25721 + C25722;
    const double C25746 = C25717 + C25718;
    const double C25743 = C25711 + C25712;
    const double C26018 = C26007 + C26008;
    const double C26189 = C26177 + C26178;
    const double C26187 = C26173 + C26174;
    const double C26185 = C26169 + C26170;
    const double C26698 = C26688 + C26689;
    const double C28155 = C28133 + C28134;
    const double C28153 = C28129 + C28130;
    const double C28151 = C28125 + C28126;
    const double C28150 = C28123 + C28124;
    const double C28148 = C28119 + C28120;
    const double C28145 = C28113 + C28114;
    const double C28144 = C28111 + C28112;
    const double C28142 = C28107 + C28108;
    const double C28139 = C28101 + C28102;
    const double C28137 = C28097 + C28098;
    const double C28361 = C28355 + C28356;
    const double C28359 = C28351 + C28352;
    const double C28567 = C28561 + C28562;
    const double C28565 = C28557 + C28558;
    const double C29391 = C29379 + C29380;
    const double C29389 = C29375 + C29376;
    const double C30588 = C30582 + C30583;
    const double C30586 = C30578 + C30579;
    const double C44992 = C44980 + C44981;
    const double C45302 = C45296 + C45297;
    const double C45300 = C45292 + C45293;
    const double C46781 = C46771 + C46772;
    const double C8133 = C7941 * C283;
    const double C8131 = C7941 * C263;
    const double C8125 = C7941 * C282;
    const double C8115 = C7941 * C264;
    const double C8113 = C7941 * C274;
    const double C8107 = C7941 * C258;
    const double C8097 = C7941 * C275;
    const double C8091 = C7941 * C262;
    const double C8461 = C7941 * C273;
    const double C8455 = C7941 * C259;
    const double C8831 = C7941 * C793;
    const double C8829 = C7941 * C783;
    const double C8823 = C7941 * C792;
    const double C8813 = C7941 * C784;
    const double C9099 = C7941 * C988;
    const double C9093 = C7941 * C984;
    const double C9263 = C7941 * C1102;
    const double C9257 = C7941 * C1098;
    const double C9767 = C7941 * C1451;
    const double C9761 = C7941 * C1447;
    const double C11089 = C7941 * C424;
    const double C11087 = C7941 * C404;
    const double C11081 = C7941 * C423;
    const double C11071 = C7941 * C405;
    const double C11069 = C7941 * C415;
    const double C11063 = C7941 * C399;
    const double C11053 = C7941 * C416;
    const double C11047 = C7941 * C403;
    const double C11417 = C7941 * C414;
    const double C11411 = C7941 * C400;
    const double C12895 = C7941 * C1735;
    const double C12889 = C7941 * C1731;
    const double C8135 = C7942 * C284;
    const double C8129 = C7942 * C264;
    const double C8123 = C7942 * C283;
    const double C8117 = C7942 * C265;
    const double C8111 = C7942 * C273;
    const double C8105 = C7942 * C259;
    const double C8099 = C7942 * C274;
    const double C8093 = C7942 * C258;
    const double C8463 = C7942 * C272;
    const double C8457 = C7942 * C260;
    const double C8833 = C7942 * C794;
    const double C8827 = C7942 * C784;
    const double C8821 = C7942 * C793;
    const double C8815 = C7942 * C785;
    const double C9101 = C7942 * C987;
    const double C9095 = C7942 * C983;
    const double C9265 = C7942 * C1101;
    const double C9259 = C7942 * C1097;
    const double C9769 = C7942 * C1450;
    const double C9763 = C7942 * C1446;
    const double C11091 = C7942 * C425;
    const double C11085 = C7942 * C405;
    const double C11079 = C7942 * C424;
    const double C11073 = C7942 * C406;
    const double C11067 = C7942 * C414;
    const double C11061 = C7942 * C400;
    const double C11055 = C7942 * C415;
    const double C11049 = C7942 * C399;
    const double C11419 = C7942 * C413;
    const double C11413 = C7942 * C401;
    const double C12897 = C7942 * C1734;
    const double C12891 = C7942 * C1730;
    const double C17243 = C17051 * C283;
    const double C17241 = C17051 * C263;
    const double C17235 = C17051 * C282;
    const double C17225 = C17051 * C264;
    const double C17223 = C17051 * C274;
    const double C17217 = C17051 * C258;
    const double C17207 = C17051 * C275;
    const double C17201 = C17051 * C262;
    const double C17571 = C17051 * C273;
    const double C17565 = C17051 * C259;
    const double C17941 = C17051 * C793;
    const double C17939 = C17051 * C783;
    const double C17933 = C17051 * C792;
    const double C17923 = C17051 * C784;
    const double C18209 = C17051 * C988;
    const double C18203 = C17051 * C984;
    const double C18373 = C17051 * C1102;
    const double C18367 = C17051 * C1098;
    const double C18877 = C17051 * C1451;
    const double C18871 = C17051 * C1447;
    const double C34329 = C17051 * C424;
    const double C34327 = C17051 * C404;
    const double C34321 = C17051 * C423;
    const double C34311 = C17051 * C405;
    const double C34309 = C17051 * C415;
    const double C34303 = C17051 * C399;
    const double C34293 = C17051 * C416;
    const double C34287 = C17051 * C403;
    const double C34657 = C17051 * C414;
    const double C34651 = C17051 * C400;
    const double C36135 = C17051 * C1735;
    const double C36129 = C17051 * C1731;
    const double C17245 = C17052 * C284;
    const double C17239 = C17052 * C264;
    const double C17233 = C17052 * C283;
    const double C17227 = C17052 * C265;
    const double C17221 = C17052 * C273;
    const double C17215 = C17052 * C259;
    const double C17209 = C17052 * C274;
    const double C17203 = C17052 * C258;
    const double C17573 = C17052 * C272;
    const double C17567 = C17052 * C260;
    const double C17943 = C17052 * C794;
    const double C17937 = C17052 * C784;
    const double C17931 = C17052 * C793;
    const double C17925 = C17052 * C785;
    const double C18211 = C17052 * C987;
    const double C18205 = C17052 * C983;
    const double C18375 = C17052 * C1101;
    const double C18369 = C17052 * C1097;
    const double C18879 = C17052 * C1450;
    const double C18873 = C17052 * C1446;
    const double C34331 = C17052 * C425;
    const double C34325 = C17052 * C405;
    const double C34319 = C17052 * C424;
    const double C34313 = C17052 * C406;
    const double C34307 = C17052 * C414;
    const double C34301 = C17052 * C400;
    const double C34295 = C17052 * C415;
    const double C34289 = C17052 * C399;
    const double C34659 = C17052 * C413;
    const double C34653 = C17052 * C401;
    const double C36137 = C17052 * C1734;
    const double C36131 = C17052 * C1730;
    const double C3414 = C3403 * C980;
    const double C2414 = C2410 * C251;
    const double C3401 = C2410 * C50879;
    const double C3745 = C2410 * C51139;
    const double C2413 = C2409 * C256;
    const double C3400 = C2409 * C980;
    const double C3744 = C2409 * C50007;
    const double C4110 = C4100 * C980;
    const double C15782 = C15780 * C980;
    const double C14583 = C14575 * C256;
    const double C15112 = C14575 * C980;
    const double C15578 = C14575 * C50007;
    const double C14577 = C14569 * C256;
    const double C15109 = C14569 * C980;
    const double C15572 = C14569 * C50007;
    const double C14582 = C14574 * C251;
    const double C15111 = C14574 * C50879;
    const double C15577 = C14574 * C51139;
    const double C14578 = C14570 * C251;
    const double C15110 = C14570 * C50879;
    const double C15573 = C14570 * C51139;
    const double C6438 = C6431 * C50879;
    const double C15118 = C15114 * C50879;
    const double C6439 = C6432 * C980;
    const double C15117 = C15113 * C980;
    const double C7338 = C7328 * C980;
    const double C5490 = C5486 * C251;
    const double C6422 = C5486 * C50879;
    const double C7686 = C5486 * C51139;
    const double C5489 = C5485 * C256;
    const double C6421 = C5485 * C980;
    const double C7685 = C5485 * C50007;
    const double C20966 = C20957 + C20958;
    const double C20965 = C20953 + C20954;
    const double C32672 = C21107 + C21106;
    const double C32869 = C21106 + C21107;
    const double C23645 = C21102 + C21103;
    const double C23639 = C21103 + C21102;
    const double C23646 = C23434 + C23433;
    const double C23644 = C23433 + C23434;
    const double C24565 = C23640 + C23641;
    const double C40985 = C24569 + C24568;
    const double C20217 = C19975 * C542;
    const double C20209 = C19971 * C542;
    const double C20201 = C19967 * C542;
    const double C22454 = C20839 * C542;
    const double C22446 = C20491 * C542;
    const double C22624 = C22264 * C542;
    const double C22616 = C22260 * C542;
    const double C31775 = C20495 * C542;
    const double C39738 = C22271 * C542;
    const double C20219 = C19977 * C543;
    const double C20211 = C19973 * C543;
    const double C20203 = C19969 * C543;
    const double C22456 = C22073 * C543;
    const double C22448 = C20489 * C543;
    const double C22626 = C22266 * C543;
    const double C22618 = C22262 * C543;
    const double C31777 = C20493 * C543;
    const double C39740 = C22269 * C543;
    const double C20623 = C19975 * C906;
    const double C20617 = C19971 * C906;
    const double C20611 = C19967 * C906;
    const double C22995 = C20839 * C906;
    const double C22989 = C20491 * C906;
    const double C23959 = C22264 * C906;
    const double C23953 = C22260 * C906;
    const double C32276 = C20495 * C906;
    const double C40571 = C22271 * C906;
    const double C20625 = C19977 * C907;
    const double C20619 = C19973 * C907;
    const double C20613 = C19969 * C907;
    const double C22997 = C22073 * C907;
    const double C22991 = C20489 * C907;
    const double C23961 = C22266 * C907;
    const double C23955 = C22262 * C907;
    const double C32278 = C20493 * C907;
    const double C40573 = C22269 * C907;
    const double C20003 = C20001 - C19990;
    const double C22841 = C22838 + C20504;
    const double C22840 = C22837 - C20504;
    const double C22297 = C22296 - C22284;
    const double C2415 = C2411 * C257;
    const double C3746 = C2411 * C50000;
    const double C5491 = C5487 * C257;
    const double C7687 = C5487 * C50000;
    const double C14581 = C14573 * C257;
    const double C15576 = C14573 * C50000;
    const double C14579 = C14571 * C257;
    const double C15574 = C14571 * C50000;
    const double C2416 = C2412 * C50884;
    const double C3747 = C2412 * C50884;
    const double C5492 = C5488 * C50884;
    const double C7688 = C5488 * C50884;
    const double C14584 = C14576 * C50884;
    const double C15579 = C14576 * C50884;
    const double C14580 = C14572 * C50884;
    const double C15575 = C14572 * C50884;
    const double C23286 = C23280 + C23271;
    const double C48554 = C48550 + C48551;
    const double C22285 = C22268 - C22078;
    const double C22842 = C22839 + C22078;
    const double C8460 = C7938 * C271;
    const double C17570 = C17048 * C271;
    const double C2735 = C50866 * C281;
    const double C8120 = C7938 * C281;
    const double C17230 = C17048 * C281;
    const double C25358 = C50866 * C281;
    const double C11416 = C7938 * C412;
    const double C34656 = C17048 * C412;
    const double C5800 = C50866 * C422;
    const double C11076 = C7938 * C422;
    const double C34316 = C17048 * C422;
    const double C45295 = C50866 * C422;
    const double C8818 = C7938 * C791;
    const double C14108 = C50866 * C791;
    const double C17928 = C17048 * C791;
    const double C28354 = C50866 * C791;
    const double C151 =
        4 * (2 * C50138 - (ae * C50139) / C50068 - (C50140 * ce) / C50068 +
             C50067 * C50201) +
        (((-3 * C50139) / C49981 + C50067 * C50206 - (C50186 * ce) / C49981) *
         ae) /
            C49935 -
        ((3 * C50140 + C50067 * C50205 + C50186 * ae) * ce) / C50068 +
        C50067 *
            (3 * C50201 + (C50206 * ae) / C49935 - (C50205 * ce) / C50068 +
             C50067 *
                 (2 * C50195 - (ae * C50196) / C50068 - (C50197 * ce) / C50068 +
                  C50067 * ((-(ae * C50184) / C49981) / C49935 -
                            C50183 / C50068 - (C50187 * ce) / C50068 +
                            C50067 * ((-(C50171 * ce) / C49981) / C49935 -
                                      (ae * C50168) / C50068 -
                                      (C50067 *
                                       (C50148 * C50149 +
                                        C50075 * bs[7] * std::pow(C50071, 7)) *
                                       C50076) /
                                          C50068))));
    const double C292 =
        3 * ((-(ae * C50298 * C50130) / C49981) / C49935 - C50299 / C50068 -
             (C50298 * C50131 * ce) / C50068 + C50067 * C50316) +
        (C50298 * C50206 * ae) / C49935 - (C50298 * C50205 * ce) / C50068 +
        C50067 *
            (2 * C50316 - (ae * C50298 * C50196) / C50068 -
             (C50298 * C50197 * ce) / C50068 +
             C50067 * ((-(ae * C50298 * C50184) / C49981) / C49935 -
                       C50306 / C50068 - (C50298 * C50187 * ce) / C50068 +
                       C50067 * ((-(C50298 * C50171 * ce) / C49981) / C49935 -
                                 (ae * C50298 * C50168) / C50068 -
                                 (C50067 * C50298 * C50260) / C50068)));
    const double C433 =
        3 * ((-(ae * C50347 * C50130) / C49981) / C49935 - C50348 / C50068 -
             (C50347 * C50131 * ce) / C50068 + C50067 * C50365) +
        (C50347 * C50206 * ae) / C49935 - (C50347 * C50205 * ce) / C50068 +
        C50067 *
            (2 * C50365 - (ae * C50347 * C50196) / C50068 -
             (C50347 * C50197 * ce) / C50068 +
             C50067 * ((-(ae * C50347 * C50184) / C49981) / C49935 -
                       C50355 / C50068 - (C50347 * C50187 * ce) / C50068 +
                       C50067 * ((-(C50347 * C50171 * ce) / C49981) / C49935 -
                                 (ae * C50347 * C50168) / C50068 -
                                 (C50067 * C50347 * C50260) / C50068)));
    const double C143 =
        4 * ((-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
             (C50121 * ce) / C49981) +
        C50067 * ((-3 * C50139) / C49981 + C50067 * C50206 -
                  (C50186 * ce) / C49981) -
        ((3 * C50121 + C50067 * C50186) * ce) / C49981;
    const double C277 = C50298 * ((-3 * C50139) / C49981 + C50067 * C50206 -
                                  (C50186 * ce) / C49981);
    const double C285 = (-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
                        (C50121 * ce) / C49981 + C50206 * C50319;
    const double C418 = C50347 * ((-3 * C50139) / C49981 + C50067 * C50206 -
                                  (C50186 * ce) / C49981);
    const double C426 = (-2 * C50100) / C49981 - (C50067 * C50139) / C49981 -
                        (C50121 * ce) / C49981 + C50206 * C50368;
    const double C795 = C50347 * C50298 * C50206;
    const double C50286 = C50067 * C50283;
    const double C50421 = C50418 + C50420;
    const double C50448 = C50445 + C50447;
    const double C24222 = C24213 + C24219;
    const double C49434 = C49432 + C49433;
    const double C2407 = C2381 + C2382;
    const double C2403 = C2373 + C2374;
    const double C19978 = C19957 + C19958;
    const double C25042 = C25016 + C25017;
    const double C25038 = C25008 + C25009;
    const double C3146 = C3128 + C3129;
    const double C3142 = C3120 + C3121;
    const double C20496 = C20479 + C20480;
    const double C25757 = C25739 + C25740;
    const double C25753 = C25731 + C25732;
    const double C3417 = C3408 + C3409;
    const double C19980 = C19961 + C19962;
    const double C26020 = C26011 + C26012;
    const double C3596 = C3586 + C3587;
    const double C20842 = C20833 + C20834;
    const double C26191 = C26181 + C26182;
    const double C4113 = C4105 + C4106;
    const double C20498 = C20483 + C20484;
    const double C26700 = C26692 + C26693;
    const double C5483 = C5457 + C5458;
    const double C5479 = C5449 + C5450;
    const double C22272 = C22250 + C22251;
    const double C30589 = C30584 + C30585;
    const double C44994 = C44984 + C44985;
    const double C7341 = C7333 + C7334;
    const double C24221 = C24217 + C24218;
    const double C46783 = C46775 + C46776;
    const double C50293 = C50223 + C50291;
    const double C50292 = C50067 * C50290;
    const double C802 =
        3 * ((-(ae * C50347 * C50396) / C49981) / C49935 - C50453 / C50068 -
             (C50347 * C50398 * ce) / C50068 + C50067 * C50467) +
        (C50347 * C50298 * C50290 * ae) / C49935 -
        (C50347 * C50298 * C50288 * ce) / C50068 +
        C50067 *
            (2 * C50467 - (ae * C50347 * C50298 * C50278) / C50068 -
             (C50347 * C50298 * C50279 * ce) / C50068 +
             C50067 *
                 ((-(ae * C50347 * C50298 * C50261) / C49981) / C49935 -
                  C50457 / C50068 - (C50347 * C50298 * C50264 * ce) / C50068 +
                  C50067 *
                      ((-(C50347 * C50298 * C50247 * ce) / C49981) / C49935 -
                       (ae * C50347 * C50298 * C50244) / C50068 -
                       (C50067 * C50347 * C50298 *
                        (C50217 * C50218 +
                         C50075 * bs[8] * std::pow(C50065, 8)) *
                        C50076) /
                           C50068)));
    const double C985 =
        2 * C50298 * C50206 + C50298 * (C50206 + C50290 * C50319);
    const double C1099 = C50298 * C50206 + C50298 * C50290 * C50368;
    const double C1448 = C50347 * (C50206 + C50290 * C50319);
    const double C1732 =
        2 * C50347 * C50206 + C50347 * (C50206 + C50290 * C50368);
    const double C297 =
        3 * (C50326 - (ae * (C50184 * C50319 + C50130)) / C50068 -
             ((C50131 + C50187 * C50319) * ce) / C50068 + C50067 * C50345) +
        ((C50206 + C50290 * C50319) * ae) / C49935 -
        ((C50205 + C50288 * C50319) * ce) / C50068 +
        C50067 *
            (2 * C50345 - (ae * (C50278 * C50319 + C50196)) / C50068 -
             ((C50197 + C50279 * C50319) * ce) / C50068 +
             C50067 *
                 (C50341 - (ae * (C50261 * C50319 + C50184)) / C50068 -
                  ((C50187 + C50264 * C50319) * ce) / C50068 +
                  C50067 *
                      ((-((C50171 + C50247 * C50319) * ce) / C49981) / C49935 -
                       (ae * (C50244 * C50319 + C50168)) / C50068 +
                       C50067 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50319) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068))));
    const double C993 =
        2 * ((((-2 * C50305) / C49981 - (C50298 * C50332) / C49981) * ae) /
                 C49935 -
             ((2 * C50304 + C50298 * C50331) * ce) / C50068 + C50067 * C50472) +
        (((-2 * C50298 * C50196) / C49981 -
          (C50298 * (C50278 * C50319 + C50196)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50298 * C50197 + C50298 * (C50197 + C50279 * C50319)) * ce) /
            C50068 +
        C50067 *
            (C50472 +
             (((-2 * C50396) / C49981 -
               (C50298 * (C50261 * C50319 + C50184)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50398 + C50298 * (C50187 + C50264 * C50319)) * ce) /
                 C50068 +
             C50067 *
                 ((((-2 * C50400) / C49981 -
                    (C50298 * (C50244 * C50319 + C50168)) / C49981) *
                   ae) /
                      C49935 -
                  ((2 * C50399 + C50298 * (C50171 + C50247 * C50319)) * ce) /
                      C50068 +
                  C50067 *
                      ((-2 * C50401) / C50068 +
                       C50298 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50319) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068))));
    const double C994 =
        (-2 * C50299) / C50068 + C50298 * C50326 +
        (((-2 * C50298 * C50130) / C49981 -
          (C50298 * (C50184 * C50319 + C50130)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50298 * C50131 + C50298 * (C50131 + C50187 * C50319)) * ce) /
            C50068 +
        C50067 *
            ((((-2 * C50305) / C49981 - (C50298 * C50332) / C49981) * ae) /
                 C49935 -
             ((2 * C50304 + C50298 * C50331) * ce) / C50068 + C50067 * C50472);
    const double C2334 =
        (((-3 * (C50119 * C50319 + C50094)) / C49981 +
          C50298 * ((-2 * C50305) / C49981 - (C50298 * C50332) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50095 + C50122 * C50319) +
          C50298 * (2 * C50304 + C50298 * C50331)) *
         ce) /
            C50068 +
        C50067 * (3 * C50326 + C50298 * C50472);
    const double C2335 =
        3 * C50326 + C50298 * C50472 +
        (((-3 * (C50184 * C50319 + C50130)) / C49981 +
          C50298 * ((-2 * C50396) / C49981 -
                    (C50298 * (C50261 * C50319 + C50184)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50131 + C50187 * C50319) +
          C50298 * (2 * C50398 + C50298 * (C50187 + C50264 * C50319))) *
         ce) /
            C50068 +
        C50067 *
            ((((-3 * C50332) / C49981 +
               C50298 * ((-2 * C50400) / C49981 -
                         (C50298 * (C50244 * C50319 + C50168)) / C49981)) *
              ae) /
                 C49935 -
             ((3 * C50331 +
               C50298 * (2 * C50399 + C50298 * (C50171 + C50247 * C50319))) *
              ce) /
                 C50068 +
             C50067 *
                 (3 * C50341 +
                  C50298 *
                      ((-2 * C50401) / C50068 +
                       C50298 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50319) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068))));
    const double C3097 =
        (C50347 * ((-2 * C50305) / C49981 - (C50298 * C50332) / C49981) * ae) /
            C49935 -
        (C50347 * (2 * C50304 + C50298 * C50331) * ce) / C50068 +
        C50067 * C50347 * C50472;
    const double C3098 =
        C50347 * C50472 +
        (C50347 *
         ((-2 * C50396) / C49981 -
          (C50298 * (C50261 * C50319 + C50184)) / C49981) *
         ae) /
            C49935 -
        (C50347 * (2 * C50398 + C50298 * (C50187 + C50264 * C50319)) * ce) /
            C50068 +
        C50067 * ((C50347 *
                   ((-2 * C50400) / C49981 -
                    (C50298 * (C50244 * C50319 + C50168)) / C49981) *
                   ae) /
                      C49935 -
                  (C50347 * (2 * C50399 + C50298 * (C50171 + C50247 * C50319)) *
                   ce) /
                      C50068 +
                  C50067 * C50347 *
                      ((-2 * C50401) / C50068 +
                       C50298 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50319) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068)));
    const double C3397 =
        ((4 * ((-2 * C50305) / C49981 - (C50298 * C50332) / C49981) +
          C50298 *
              ((-3 * C50332) / C49981 +
               C50298 * ((-2 * C50400) / C49981 -
                         (C50298 * (C50244 * C50319 + C50168)) / C49981))) *
         ae) /
            C49935 -
        ((4 * (2 * C50304 + C50298 * C50331) +
          C50298 *
              (3 * C50331 +
               C50298 * (2 * C50399 + C50298 * (C50171 + C50247 * C50319)))) *
         ce) /
            C50068 +
        C50067 * (4 * C50472 +
                  C50298 * (3 * C50341 +
                            C50298 * ((-2 * C50401) / C50068 +
                                      C50298 * ((-((C50217 * C50218 +
                                                    C50075 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50076 * C50319) /
                                                 C49981) /
                                                    C49935 -
                                                C50260 / C50068))));
    const double C3398 = 4 * ((-2 * C50299) / C50068 + C50298 * C50326) +
                         C50298 * (3 * C50326 + C50298 * C50472);
    const double C3571 =
        (((-2 * C50305) / C49981 - (C50298 * C50332) / C49981 +
          ((-2 * C50400) / C49981 -
           (C50298 * (C50244 * C50319 + C50168)) / C49981) *
              C50368) *
         ae) /
            C49935 -
        ((2 * C50304 + C50298 * C50331 +
          (2 * C50399 + C50298 * (C50171 + C50247 * C50319)) * C50368) *
         ce) /
            C50068 +
        C50067 *
            (C50472 +
             ((-2 * C50401) / C50068 +
              C50298 *
                  ((-((C50217 * C50218 + C50075 * bs[8] * std::pow(C50065, 8)) *
                      C50076 * C50319) /
                    C49981) /
                       C49935 -
                   C50260 / C50068)) *
                 C50368);
    const double C3572 =
        (-2 * C50299) / C50068 + C50298 * C50326 + C50472 * C50368;
    const double C4097 = C50347 * (3 * C50326 + C50298 * C50472);
    const double C20697 =
        5 * (3 * C50326 + C50298 * C50472) +
        C50298 * (4 * C50472 +
                  C50298 * (3 * C50341 +
                            C50298 * ((-2 * C50401) / C50068 +
                                      C50298 * ((-((C50217 * C50218 +
                                                    C50075 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50076 * C50319) /
                                                 C49981) /
                                                    C49935 -
                                                C50260 / C50068))));
    const double C20819 =
        3 * C50326 + C50298 * C50472 +
        (3 * C50341 +
         C50298 *
             ((-2 * C50401) / C50068 +
              C50298 *
                  ((-((C50217 * C50218 + C50075 * bs[8] * std::pow(C50065, 8)) *
                      C50076 * C50319) /
                    C49981) /
                       C49935 -
                   C50260 / C50068))) *
            C50368;
    const double C21213 =
        C50347 *
        (4 * C50472 +
         C50298 *
             (3 * C50341 +
              C50298 * ((-2 * C50401) / C50068 +
                        C50298 * ((-((C50217 * C50218 +
                                      C50075 * bs[8] * std::pow(C50065, 8)) *
                                     C50076 * C50319) /
                                   C49981) /
                                      C49935 -
                                  C50260 / C50068))));
    const double C21489 =
        2 * C50347 * C50472 +
        C50347 *
            (C50472 +
             ((-2 * C50401) / C50068 +
              C50298 *
                  ((-((C50217 * C50218 + C50075 * bs[8] * std::pow(C50065, 8)) *
                      C50076 * C50319) /
                    C49981) /
                       C49935 -
                   C50260 / C50068)) *
                 C50368);
    const double C3131 = C50866 * C1457;
    const double C9772 = C7938 * C1457;
    const double C18882 = C17048 * C1457;
    const double C25742 = C50866 * C1457;
    const double C31782 = C50861 * C1457;
    const double C3597 = C3588 + C3589;
    const double C22076 = C22071 + C22072;
    const double C26192 = C26183 + C26184;
    const double C23277 = C23267 + C23268;
    const double C438 =
        3 * (C50375 - (ae * (C50184 * C50368 + C50130)) / C50068 -
             ((C50131 + C50187 * C50368) * ce) / C50068 + C50067 * C50394) +
        ((C50206 + C50290 * C50368) * ae) / C49935 -
        ((C50205 + C50288 * C50368) * ce) / C50068 +
        C50067 *
            (2 * C50394 - (ae * (C50278 * C50368 + C50196)) / C50068 -
             ((C50197 + C50279 * C50368) * ce) / C50068 +
             C50067 *
                 (C50390 - (ae * (C50261 * C50368 + C50184)) / C50068 -
                  ((C50187 + C50264 * C50368) * ce) / C50068 +
                  C50067 *
                      ((-((C50171 + C50247 * C50368) * ce) / C49981) / C49935 -
                       (ae * (C50244 * C50368 + C50168)) / C50068 +
                       C50067 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068))));
    const double C1740 =
        2 * ((((-2 * C50354) / C49981 - (C50347 * C50381) / C49981) * ae) /
                 C49935 -
             ((2 * C50353 + C50347 * C50380) * ce) / C50068 + C50067 * C50494) +
        (((-2 * C50347 * C50196) / C49981 -
          (C50347 * (C50278 * C50368 + C50196)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50197 + C50347 * (C50197 + C50279 * C50368)) * ce) /
            C50068 +
        C50067 *
            (C50494 +
             (((-2 * C50423) / C49981 -
               (C50347 * (C50261 * C50368 + C50184)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50425 + C50347 * (C50187 + C50264 * C50368)) * ce) /
                 C50068 +
             C50067 *
                 ((((-2 * C50427) / C49981 -
                    (C50347 * (C50244 * C50368 + C50168)) / C49981) *
                   ae) /
                      C49935 -
                  ((2 * C50426 + C50347 * (C50171 + C50247 * C50368)) * ce) /
                      C50068 +
                  C50067 *
                      ((-2 * C50428) / C50068 +
                       C50347 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068))));
    const double C1741 =
        (-2 * C50348) / C50068 + C50347 * C50375 +
        (((-2 * C50347 * C50130) / C49981 -
          (C50347 * (C50184 * C50368 + C50130)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50131 + C50347 * (C50131 + C50187 * C50368)) * ce) /
            C50068 +
        C50067 *
            ((((-2 * C50354) / C49981 - (C50347 * C50381) / C49981) * ae) /
                 C49935 -
             ((2 * C50353 + C50347 * C50380) * ce) / C50068 + C50067 * C50494);
    const double C5410 =
        (((-3 * (C50119 * C50368 + C50094)) / C49981 +
          C50347 * ((-2 * C50354) / C49981 - (C50347 * C50381) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50095 + C50122 * C50368) +
          C50347 * (2 * C50353 + C50347 * C50380)) *
         ce) /
            C50068 +
        C50067 * (3 * C50375 + C50347 * C50494);
    const double C5411 =
        3 * C50375 + C50347 * C50494 +
        (((-3 * (C50184 * C50368 + C50130)) / C49981 +
          C50347 * ((-2 * C50423) / C49981 -
                    (C50347 * (C50261 * C50368 + C50184)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50131 + C50187 * C50368) +
          C50347 * (2 * C50425 + C50347 * (C50187 + C50264 * C50368))) *
         ce) /
            C50068 +
        C50067 *
            ((((-3 * C50381) / C49981 +
               C50347 * ((-2 * C50427) / C49981 -
                         (C50347 * (C50244 * C50368 + C50168)) / C49981)) *
              ae) /
                 C49935 -
             ((3 * C50380 +
               C50347 * (2 * C50426 + C50347 * (C50171 + C50247 * C50368))) *
              ce) /
                 C50068 +
             C50067 *
                 (3 * C50390 +
                  C50347 *
                      ((-2 * C50428) / C50068 +
                       C50347 * ((-((C50217 * C50218 +
                                     C50075 * bs[8] * std::pow(C50065, 8)) *
                                    C50076 * C50368) /
                                  C49981) /
                                     C49935 -
                                 C50260 / C50068))));
    const double C7324 =
        ((4 * ((-2 * C50354) / C49981 - (C50347 * C50381) / C49981) +
          C50347 *
              ((-3 * C50381) / C49981 +
               C50347 * ((-2 * C50427) / C49981 -
                         (C50347 * (C50244 * C50368 + C50168)) / C49981))) *
         ae) /
            C49935 -
        ((4 * (2 * C50353 + C50347 * C50380) +
          C50347 *
              (3 * C50380 +
               C50347 * (2 * C50426 + C50347 * (C50171 + C50247 * C50368)))) *
         ce) /
            C50068 +
        C50067 * (4 * C50494 +
                  C50347 * (3 * C50390 +
                            C50347 * ((-2 * C50428) / C50068 +
                                      C50347 * ((-((C50217 * C50218 +
                                                    C50075 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50076 * C50368) /
                                                 C49981) /
                                                    C49935 -
                                                C50260 / C50068))));
    const double C7325 = 4 * ((-2 * C50348) / C50068 + C50347 * C50375) +
                         C50347 * (3 * C50375 + C50347 * C50494);
    const double C40743 =
        5 * (3 * C50375 + C50347 * C50494) +
        C50347 * (4 * C50494 +
                  C50347 * (3 * C50390 +
                            C50347 * ((-2 * C50428) / C50068 +
                                      C50347 * ((-((C50217 * C50218 +
                                                    C50075 * bs[8] *
                                                        std::pow(C50065, 8)) *
                                                   C50076 * C50368) /
                                                 C49981) /
                                                    C49935 -
                                                C50260 / C50068))));
    const double C6018 = C50866 * C1108;
    const double C9268 = C7938 * C1108;
    const double C18378 = C17048 * C1108;
    const double C22461 = C50861 * C1108;
    const double C28136 = C50866 * C1108;
    const double C6430 = C50866 * C4519;
    const double C22259 = C50861 * C4519;
    const double C29382 = C50866 * C4519;
    const double C23264 = C50861 * C6419;
    const double C26006 = C25040 + C25041;
    const double C25047 = C25034 + C25035;
    const double C25046 = C25032 + C25033;
    const double C25045 = C25030 + C25031;
    const double C25044 = C25028 + C25029;
    const double C26687 = C25755 + C25756;
    const double C30055 = C25756 + C25755;
    const double C28834 = C25749 + C25750;
    const double C28830 = C25750 + C25749;
    const double C28833 = C25747 + C25748;
    const double C28827 = C25748 + C25747;
    const double C28832 = C25745 + C25746;
    const double C28828 = C25746 + C25745;
    const double C28831 = C25743 + C25744;
    const double C28829 = C25744 + C25743;
    const double C29374 = C26187 + C26188;
    const double C29369 = C26188 + C26187;
    const double C29373 = C26185 + C26186;
    const double C29370 = C26186 + C26185;
    const double C44979 = C28152 + C28151;
    const double C44976 = C28150 + C28149;
    const double C44977 = C28148 + C28147;
    const double C44978 = C28146 + C28145;
    const double C46770 = C30587 + C30586;
    const double C8160 = C8133 + C8134;
    const double C8159 = C8131 + C8132;
    const double C8156 = C8125 + C8126;
    const double C8151 = C8115 + C8116;
    const double C8150 = C8113 + C8114;
    const double C8147 = C8107 + C8108;
    const double C8142 = C8097 + C8098;
    const double C8139 = C8091 + C8092;
    const double C8470 = C8461 + C8462;
    const double C8467 = C8455 + C8456;
    const double C8846 = C8831 + C8832;
    const double C8845 = C8829 + C8830;
    const double C8842 = C8823 + C8824;
    const double C8837 = C8813 + C8814;
    const double C9108 = C9099 + C9100;
    const double C9105 = C9093 + C9094;
    const double C9272 = C9263 + C9264;
    const double C9269 = C9257 + C9258;
    const double C9776 = C9767 + C9768;
    const double C9773 = C9761 + C9762;
    const double C11116 = C11089 + C11090;
    const double C11115 = C11087 + C11088;
    const double C11112 = C11081 + C11082;
    const double C11107 = C11071 + C11072;
    const double C11106 = C11069 + C11070;
    const double C11103 = C11063 + C11064;
    const double C11098 = C11053 + C11054;
    const double C11095 = C11047 + C11048;
    const double C11426 = C11417 + C11418;
    const double C11423 = C11411 + C11412;
    const double C12904 = C12895 + C12896;
    const double C12901 = C12889 + C12890;
    const double C8161 = C8135 + C8136;
    const double C8158 = C8129 + C8130;
    const double C8155 = C8123 + C8124;
    const double C8152 = C8117 + C8118;
    const double C8149 = C8111 + C8112;
    const double C8146 = C8105 + C8106;
    const double C8143 = C8099 + C8100;
    const double C8140 = C8093 + C8094;
    const double C8471 = C8463 + C8464;
    const double C8468 = C8457 + C8458;
    const double C8847 = C8833 + C8834;
    const double C8844 = C8827 + C8828;
    const double C8841 = C8821 + C8822;
    const double C8838 = C8815 + C8816;
    const double C9109 = C9101 + C9102;
    const double C9106 = C9095 + C9096;
    const double C9273 = C9265 + C9266;
    const double C9270 = C9259 + C9260;
    const double C9777 = C9769 + C9770;
    const double C9774 = C9763 + C9764;
    const double C11117 = C11091 + C11092;
    const double C11114 = C11085 + C11086;
    const double C11111 = C11079 + C11080;
    const double C11108 = C11073 + C11074;
    const double C11105 = C11067 + C11068;
    const double C11102 = C11061 + C11062;
    const double C11099 = C11055 + C11056;
    const double C11096 = C11049 + C11050;
    const double C11427 = C11419 + C11420;
    const double C11424 = C11413 + C11414;
    const double C12905 = C12897 + C12898;
    const double C12902 = C12891 + C12892;
    const double C17270 = C17243 + C17244;
    const double C17269 = C17241 + C17242;
    const double C17266 = C17235 + C17236;
    const double C17261 = C17225 + C17226;
    const double C17260 = C17223 + C17224;
    const double C17257 = C17217 + C17218;
    const double C17252 = C17207 + C17208;
    const double C17249 = C17201 + C17202;
    const double C17580 = C17571 + C17572;
    const double C17577 = C17565 + C17566;
    const double C17956 = C17941 + C17942;
    const double C17955 = C17939 + C17940;
    const double C17952 = C17933 + C17934;
    const double C17947 = C17923 + C17924;
    const double C18218 = C18209 + C18210;
    const double C18215 = C18203 + C18204;
    const double C18382 = C18373 + C18374;
    const double C18379 = C18367 + C18368;
    const double C18886 = C18877 + C18878;
    const double C18883 = C18871 + C18872;
    const double C34356 = C34329 + C34330;
    const double C34355 = C34327 + C34328;
    const double C34352 = C34321 + C34322;
    const double C34347 = C34311 + C34312;
    const double C34346 = C34309 + C34310;
    const double C34343 = C34303 + C34304;
    const double C34338 = C34293 + C34294;
    const double C34335 = C34287 + C34288;
    const double C34666 = C34657 + C34658;
    const double C34663 = C34651 + C34652;
    const double C36144 = C36135 + C36136;
    const double C36141 = C36129 + C36130;
    const double C17271 = C17245 + C17246;
    const double C17268 = C17239 + C17240;
    const double C17265 = C17233 + C17234;
    const double C17262 = C17227 + C17228;
    const double C17259 = C17221 + C17222;
    const double C17256 = C17215 + C17216;
    const double C17253 = C17209 + C17210;
    const double C17250 = C17203 + C17204;
    const double C17581 = C17573 + C17574;
    const double C17578 = C17567 + C17568;
    const double C17957 = C17943 + C17944;
    const double C17954 = C17937 + C17938;
    const double C17951 = C17931 + C17932;
    const double C17948 = C17925 + C17926;
    const double C18219 = C18211 + C18212;
    const double C18216 = C18205 + C18206;
    const double C18383 = C18375 + C18376;
    const double C18380 = C18369 + C18370;
    const double C18887 = C18879 + C18880;
    const double C18884 = C18873 + C18874;
    const double C34357 = C34331 + C34332;
    const double C34354 = C34325 + C34326;
    const double C34351 = C34319 + C34320;
    const double C34348 = C34313 + C34314;
    const double C34345 = C34307 + C34308;
    const double C34342 = C34301 + C34302;
    const double C34339 = C34295 + C34296;
    const double C34336 = C34289 + C34290;
    const double C34667 = C34659 + C34660;
    const double C34664 = C34653 + C34654;
    const double C36145 = C36137 + C36138;
    const double C36142 = C36131 + C36132;
    const double C2417 = C2413 + C2414;
    const double C3412 = C3400 + C3401;
    const double C3748 = C3744 + C3745;
    const double C14586 = C14582 + C14583;
    const double C15116 = C15111 + C15112;
    const double C15581 = C15577 + C15578;
    const double C14585 = C14577 + C14578;
    const double C15115 = C15109 + C15110;
    const double C15580 = C15572 + C15573;
    const double C6441 = C6438 + C6439;
    const double C15119 = C15117 + C15118;
    const double C5493 = C5489 + C5490;
    const double C6433 = C6421 + C6422;
    const double C7689 = C7685 + C7686;
    const double C20968 = C20966 - C20959;
    const double C20967 = C20965 - C20955;
    const double C32673 = C32672 - C21105;
    const double C32870 = C21105 - C32869;
    const double C23653 = C21101 - C23645;
    const double C23651 = C23639 - C21101;
    const double C23654 = C23435 - C23646;
    const double C23652 = C23644 - C23435;
    const double C24571 = C24565 - C23642;
    const double C40990 = C40985 - C24567;
    const double C22298 = C22297 * C17049;
    const double C39527 = C22297 * C51006;
    const double C47671 = C22297 * C51160;
    const double C22295 = C22285 * C51056;
    const double C47672 = C22285 * C51056;
    const double C8469 = C8459 + C8460;
    const double C17579 = C17569 + C17570;
    const double C2745 = C2734 + C2735;
    const double C8153 = C8119 + C8120;
    const double C17263 = C17229 + C17230;
    const double C25368 = C25357 + C25358;
    const double C11425 = C11415 + C11416;
    const double C34665 = C34655 + C34656;
    const double C5810 = C5799 + C5800;
    const double C11109 = C11075 + C11076;
    const double C34349 = C34315 + C34316;
    const double C45301 = C45294 + C45295;
    const double C8839 = C8817 + C8818;
    const double C14114 = C14107 + C14108;
    const double C17949 = C17927 + C17928;
    const double C28360 = C28353 + C28354;
    const double C8466 = C7938 * C292;
    const double C17576 = C17048 * C292;
    const double C11422 = C7938 * C433;
    const double C34662 = C17048 * C433;
    const double C8465 = C7943 * C277;
    const double C17575 = C17053 * C277;
    const double C2738 = C2177 * C285;
    const double C8137 = C7943 * C285;
    const double C17247 = C17053 * C285;
    const double C25361 = C49954 * C285;
    const double C11421 = C7943 * C418;
    const double C34661 = C17053 * C418;
    const double C5803 = C2177 * C426;
    const double C11093 = C7943 * C426;
    const double C34333 = C17053 * C426;
    const double C45298 = C49954 * C426;
    const double C8835 = C7943 * C795;
    const double C14111 = C2177 * C795;
    const double C17945 = C17053 * C795;
    const double C28357 = C49954 * C795;
    const double C50289 = C50249 + C50286;
    const double C3402 = C2403 + C2404;
    const double C19994 = C19978 * C50884;
    const double C20220 = C19978 * C51191;
    const double C20626 = C19978 * C902;
    const double C20960 = C19978 * C50884;
    const double C26005 = C25038 + C25039;
    const double C4099 = C3142 + C3143;
    const double C15781 = C3143 + C3142;
    const double C20508 = C20496 * C50884;
    const double C21108 = C20496 * C50884;
    const double C31778 = C20496 * C51191;
    const double C32279 = C20496 * C902;
    const double C26686 = C25753 + C25754;
    const double C30056 = C25754 + C25753;
    const double C19996 = C19980 * C251;
    const double C20705 = C19980 * C50879;
    const double C20962 = C19980 * C51139;
    const double C20848 = C20842 * C50879;
    const double C22069 = C20842 * C251;
    const double C23438 = C20842 * C51139;
    const double C20510 = C20498 * C251;
    const double C20821 = C20498 * C50879;
    const double C21110 = C20498 * C51139;
    const double C7327 = C5479 + C5480;
    const double C22289 = C22272 * C50884;
    const double C24570 = C22272 * C50884;
    const double C39741 = C22272 * C51191;
    const double C40574 = C22272 * C902;
    const double C46769 = C30589 + C30588;
    const double C24224 = C24221 * C50879;
    const double C39531 = C24221 * C251;
    const double C40987 = C24221 * C51139;
    const double C50295 = C50293 + C50271;
    const double C50294 = C50232 + C50292;
    const double C2384 = C50866 * C994;
    const double C9104 = C7938 * C994;
    const double C18214 = C17048 * C994;
    const double C20224 = C50861 * C994;
    const double C25019 = C50866 * C994;
    const double C3411 = C50866 * C2334;
    const double C19966 = C50861 * C2334;
    const double C26014 = C50866 * C2334;
    const double C4108 = C50866 * C3097;
    const double C20488 = C50861 * C3097;
    const double C26695 = C50866 * C3097;
    const double C20710 = C50861 * C3398;
    const double C20838 = C50861 * C3572;
    const double C21220 = C50861 * C4097;
    const double C3147 = C3130 + C3131;
    const double C9778 = C9771 + C9772;
    const double C18888 = C18881 + C18882;
    const double C25758 = C25741 + C25742;
    const double C31784 = C31781 + C31782;
    const double C22080 = C22076 * C50884;
    const double C23440 = C22076 * C50884;
    const double C23284 = C23277 * C50879;
    const double C5460 = C50866 * C1741;
    const double C12900 = C7938 * C1741;
    const double C36140 = C17048 * C1741;
    const double C39745 = C50861 * C1741;
    const double C44987 = C50866 * C1741;
    const double C7336 = C50866 * C5410;
    const double C39534 = C50861 * C5410;
    const double C46778 = C50866 * C5410;
    const double C40750 = C50861 * C7325;
    const double C6022 = C6017 + C6018;
    const double C9274 = C9267 + C9268;
    const double C18384 = C18377 + C18378;
    const double C22465 = C22460 + C22461;
    const double C28156 = C28135 + C28136;
    const double C6437 = C6429 + C6430;
    const double C22276 = C22258 + C22259;
    const double C29392 = C29381 + C29382;
    const double C23275 = C23263 + C23264;
    const double C26017 = C26006 * C980;
    const double C25051 = C25047 * C50884;
    const double C26342 = C25047 * C50884;
    const double C25050 = C25046 * C257;
    const double C26341 = C25046 * C50000;
    const double C25049 = C25045 * C251;
    const double C26004 = C25045 * C50879;
    const double C26340 = C25045 * C51139;
    const double C25048 = C25044 * C256;
    const double C26003 = C25044 * C980;
    const double C26339 = C25044 * C50007;
    const double C26697 = C26687 * C980;
    const double C30057 = C30055 * C980;
    const double C28842 = C28834 * C50884;
    const double C29854 = C28834 * C50884;
    const double C28838 = C28830 * C50884;
    const double C29850 = C28830 * C50884;
    const double C28841 = C28833 * C256;
    const double C29372 = C28833 * C980;
    const double C29853 = C28833 * C50007;
    const double C28835 = C28827 * C256;
    const double C29367 = C28827 * C980;
    const double C29847 = C28827 * C50007;
    const double C28840 = C28832 * C251;
    const double C29371 = C28832 * C50879;
    const double C29852 = C28832 * C51139;
    const double C28836 = C28828 * C251;
    const double C29368 = C28828 * C50879;
    const double C29848 = C28828 * C51139;
    const double C28839 = C28831 * C257;
    const double C29851 = C28831 * C50000;
    const double C28837 = C28829 * C257;
    const double C29849 = C28829 * C50000;
    const double C29388 = C29374 * C50879;
    const double C29384 = C29369 * C50879;
    const double C29387 = C29373 * C980;
    const double C29385 = C29370 * C980;
    const double C44991 = C44979 * C50884;
    const double C47130 = C44979 * C50884;
    const double C44988 = C44976 * C256;
    const double C45888 = C44976 * C980;
    const double C47127 = C44976 * C50007;
    const double C44989 = C44977 * C251;
    const double C45889 = C44977 * C50879;
    const double C47128 = C44977 * C51139;
    const double C44990 = C44978 * C257;
    const double C47129 = C44978 * C50000;
    const double C46780 = C46770 * C980;
    const double C2418 = C2417 - C2415;
    const double C3749 = C3748 - C3746;
    const double C14588 = C14581 - C14586;
    const double C15583 = C15576 - C15581;
    const double C14587 = C14585 - C14579;
    const double C15582 = C15580 - C15574;
    const double C6442 = C6441 * C51006;
    const double C5494 = C5493 - C5491;
    const double C6440 = C6433 * C51006;
    const double C7690 = C7689 - C7687;
    const double C20969 = C20967 - C20956;
    const double C23657 = C23653 + C21104;
    const double C23655 = C23651 - C21104;
    const double C23658 = C23654 + C23436;
    const double C23656 = C23652 - C23436;
    const double C24572 = C24571 - C23643;
    const double C22299 = C22298 + C22295;
    const double C47673 = C47671 + C47672;
    const double C8472 = C8465 + C8466;
    const double C17582 = C17575 + C17576;
    const double C2747 = C2738 + C2739;
    const double C8162 = C8137 + C8138;
    const double C17272 = C17247 + C17248;
    const double C25370 = C25361 + C25362;
    const double C11428 = C11421 + C11422;
    const double C34668 = C34661 + C34662;
    const double C5812 = C5803 + C5804;
    const double C11118 = C11093 + C11094;
    const double C34358 = C34333 + C34334;
    const double C45303 = C45298 + C45299;
    const double C8848 = C8835 + C8836;
    const double C14116 = C14111 + C14112;
    const double C17958 = C17945 + C17946;
    const double C28362 = C28357 + C28358;
    const double C3413 = C3402 * C50879;
    const double C20004 = C20002 - C19994;
    const double C20970 = C20968 - C20960;
    const double C26016 = C26005 * C50879;
    const double C4109 = C4099 * C50879;
    const double C15783 = C15781 * C50879;
    const double C31482 = C31481 - C20508;
    const double C32129 = C32128 + C20508;
    const double C32674 = C32673 - C21108;
    const double C32871 = C32870 + C21108;
    const double C26696 = C26686 * C50879;
    const double C30058 = C30056 * C50879;
    const double C20713 = C20705 + C20706;
    const double C23269 = C20848 + C20847;
    const double C23806 = C20847 + C20848;
    const double C21215 = C20821 + C20822;
    const double C33018 = C20822 + C20821;
    const double C7337 = C7327 * C50879;
    const double C39538 = C39535 - C22289;
    const double C40991 = C40990 - C24570;
    const double C46779 = C46769 * C50879;
    const double C40745 = C24224 + C24223;
    const double C144 = (5 * (3 * C50140 + C50067 * C50205 + C50186 * ae) +
                         C50067 * (4 * C50205 + C50067 * C50295 + C50275 * ae) +
                         (4 * C50186 + C50067 * C50275) * ae) /
                        C49935;
    const double C286 =
        (3 * C50140 + C50067 * C50205 + C50186 * ae + C50295 * C50319) / C49935;
    const double C427 =
        (3 * C50140 + C50067 * C50205 + C50186 * ae + C50295 * C50368) / C49935;
    const double C546 =
        (C50298 * (4 * C50205 + C50067 * C50295 + C50275 * ae)) / C49935;
    const double C650 =
        (C50347 * (4 * C50205 + C50067 * C50295 + C50275 * ae)) / C49935;
    const double C796 = (C50347 * C50298 * C50295) / C49935;
    const double C50296 = C50294 - C50274;
    const double C2408 = C2383 + C2384;
    const double C9110 = C9103 + C9104;
    const double C18220 = C18213 + C18214;
    const double C20230 = C20223 + C20224;
    const double C25043 = C25018 + C25019;
    const double C3418 = C3410 + C3411;
    const double C19982 = C19965 + C19966;
    const double C26021 = C26013 + C26014;
    const double C4114 = C4107 + C4108;
    const double C20500 = C20487 + C20488;
    const double C26701 = C26694 + C26695;
    const double C20716 = C20709 + C20710;
    const double C20844 = C20837 + C20838;
    const double C21222 = C21219 + C21220;
    const double C31786 = C31784 * C539;
    const double C32281 = C31784 * C903;
    const double C5484 = C5459 + C5460;
    const double C12906 = C12899 + C12900;
    const double C36146 = C36139 + C36140;
    const double C39747 = C39744 + C39745;
    const double C44995 = C44986 + C44987;
    const double C7342 = C7335 + C7336;
    const double C39537 = C39533 + C39534;
    const double C46784 = C46777 + C46778;
    const double C40753 = C40749 + C40750;
    const double C22469 = C22465 * C539;
    const double C23000 = C22465 * C903;
    const double C22293 = C22276 * C50884;
    const double C23650 = C22276 * C50884;
    const double C23282 = C23275 * C50879;
    const double C25052 = C25048 + C25049;
    const double C26015 = C26003 + C26004;
    const double C26343 = C26339 + C26340;
    const double C28844 = C28840 + C28841;
    const double C29386 = C29371 + C29372;
    const double C29856 = C29852 + C29853;
    const double C28843 = C28835 + C28836;
    const double C29383 = C29367 + C29368;
    const double C29855 = C29847 + C29848;
    const double C29394 = C29387 + C29388;
    const double C29393 = C29384 + C29385;
    const double C44996 = C44988 + C44989;
    const double C45891 = C45888 + C45889;
    const double C47131 = C47127 + C47128;
    const double C2419 = C2418 - C2416;
    const double C3750 = C3749 - C3747;
    const double C14590 = C14588 + C14584;
    const double C15585 = C15583 + C15579;
    const double C14589 = C14587 - C14580;
    const double C15584 = C15582 - C15575;
    const double C5495 = C5494 - C5492;
    const double C7691 = C7690 - C7688;
    const double C24566 = C23656 * C51056;
    const double C49776 = C23656 * C51056;
    const double C24573 = C24572 * C17049;
    const double C40984 = C24572 * C51006;
    const double C49775 = C24572 * C51160;
    const double C3419 = C3413 + C3414;
    const double C26022 = C26016 + C26017;
    const double C4115 = C4109 + C4110;
    const double C15784 = C15782 + C15783;
    const double C26702 = C26696 + C26697;
    const double C30059 = C30057 + C30058;
    const double C23278 = C23269 * C51056;
    const double C48552 = C23269 * C51056;
    const double C7343 = C7337 + C7338;
    const double C39541 = C39538 * C51006;
    const double C40992 = C40991 * C51006;
    const double C46785 = C46779 + C46780;
    const double C40751 = C40745 * C51006;
    const double C152 =
        5 * (3 * C50201 + (C50206 * ae) / C49935 - (C50205 * ce) / C50068 +
             C50067 * C50289) +
        ((4 * C50206 + C50067 * C50296 - (C50275 * ce) / C49981) * ae) /
            C49935 -
        ((4 * C50205 + C50067 * C50295 + C50275 * ae) * ce) / C50068 +
        C50067 *
            (4 * C50289 + (C50296 * ae) / C49935 - (C50295 * ce) / C50068 +
             C50067 *
                 (3 * C50283 + (C50290 * ae) / C49935 - (C50288 * ce) / C50068 +
                  C50067 *
                      (2 * C50277 - (ae * C50278) / C50068 -
                       (C50279 * ce) / C50068 +
                       C50067 *
                           ((-(ae * C50261) / C49981) / C49935 -
                            C50260 / C50068 - (C50264 * ce) / C50068 +
                            C50067 * ((-(C50247 * ce) / C49981) / C49935 -
                                      (ae * C50244) / C50068 -
                                      (C50067 *
                                       (C50217 * C50218 +
                                        C50075 * bs[8] * std::pow(C50065, 8)) *
                                       C50076) /
                                          C50068)))));
    const double C548 =
        4 * (2 * C50316 - (ae * C50298 * C50196) / C50068 -
             (C50298 * C50197 * ce) / C50068 + C50067 * C50421) +
        (C50298 * C50296 * ae) / C49935 - (C50298 * C50295 * ce) / C50068 +
        C50067 *
            (3 * C50421 + (C50298 * C50290 * ae) / C49935 -
             (C50298 * C50288 * ce) / C50068 +
             C50067 *
                 (2 * C50419 - (ae * C50298 * C50278) / C50068 -
                  (C50298 * C50279 * ce) / C50068 +
                  C50067 *
                      ((-(ae * C50298 * C50261) / C49981) / C49935 -
                       C50401 / C50068 - (C50298 * C50264 * ce) / C50068 +
                       C50067 * ((-(C50298 * C50247 * ce) / C49981) / C49935 -
                                 (ae * C50298 * C50244) / C50068 -
                                 (C50067 * C50298 *
                                  (C50217 * C50218 +
                                   C50075 * bs[8] * std::pow(C50065, 8)) *
                                  C50076) /
                                     C50068))));
    const double C652 =
        4 * (2 * C50365 - (ae * C50347 * C50196) / C50068 -
             (C50347 * C50197 * ce) / C50068 + C50067 * C50448) +
        (C50347 * C50296 * ae) / C49935 - (C50347 * C50295 * ce) / C50068 +
        C50067 *
            (3 * C50448 + (C50347 * C50290 * ae) / C49935 -
             (C50347 * C50288 * ce) / C50068 +
             C50067 *
                 (2 * C50446 - (ae * C50347 * C50278) / C50068 -
                  (C50347 * C50279 * ce) / C50068 +
                  C50067 *
                      ((-(ae * C50347 * C50261) / C49981) / C49935 -
                       C50428 / C50068 - (C50347 * C50264 * ce) / C50068 +
                       C50067 * ((-(C50347 * C50247 * ce) / C49981) / C49935 -
                                 (ae * C50347 * C50244) / C50068 -
                                 (C50067 * C50347 *
                                  (C50217 * C50218 +
                                   C50075 * bs[8] * std::pow(C50065, 8)) *
                                  C50076) /
                                     C50068))));
    const double C145 =
        5 * ((-3 * C50139) / C49981 + C50067 * C50206 -
             (C50186 * ce) / C49981) +
        C50067 * (4 * C50206 + C50067 * C50296 - (C50275 * ce) / C49981) -
        ((4 * C50186 + C50067 * C50275) * ce) / C49981;
    const double C287 = (-3 * C50139) / C49981 + C50067 * C50206 -
                        (C50186 * ce) / C49981 + C50296 * C50319;
    const double C428 = (-3 * C50139) / C49981 + C50067 * C50206 -
                        (C50186 * ce) / C49981 + C50296 * C50368;
    const double C547 =
        C50298 * (4 * C50206 + C50067 * C50296 - (C50275 * ce) / C49981);
    const double C651 =
        C50347 * (4 * C50206 + C50067 * C50296 - (C50275 * ce) / C49981);
    const double C797 = C50347 * C50298 * C50296;
    const double C20236 = C20230 * C539;
    const double C20628 = C20230 * C903;
    const double C19998 = C19982 * C50884;
    const double C20964 = C19982 * C50884;
    const double C20512 = C20500 * C50884;
    const double C21112 = C20500 * C50884;
    const double C20718 = C20716 * C50879;
    const double C20850 = C20844 * C50879;
    const double C21224 = C21222 * C50879;
    const double C39749 = C39747 * C539;
    const double C40576 = C39747 * C903;
    const double C39540 = C39537 * C50884;
    const double C40989 = C39537 * C50884;
    const double C40755 = C40753 * C50879;
    const double C25053 = C25052 - C25050;
    const double C26344 = C26343 - C26341;
    const double C28846 = C28839 - C28844;
    const double C29858 = C29851 - C29856;
    const double C28845 = C28843 - C28837;
    const double C29857 = C29855 - C29849;
    const double C45890 = C29393 * C51006;
    const double C44997 = C44996 - C44990;
    const double C45892 = C45891 * C51006;
    const double C47132 = C47131 - C47129;
    const double C5496 = C5495 * C51006;
    const double C7692 = C7691 * C51006;
    const double C24574 = C24573 + C24566;
    const double C49777 = C49775 + C49776;
    const double C23285 = C23278 + C23279;
    const double C48555 = C48552 + C48553;
    const double C7344 = C7343 * C51006;
    const double C46786 = C46785 * C51006;
    const double C25054 = C25053 - C25051;
    const double C26345 = C26344 - C26342;
    const double C28848 = C28846 + C28842;
    const double C29860 = C29858 + C29854;
    const double C28847 = C28845 - C28838;
    const double C29859 = C29857 - C29850;
    const double C44998 = C44997 - C44991;
    const double C47133 = C47132 - C47130;
    const double C44999 = C44998 * C51006;
    const double C47134 = C47133 * C51006;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C542 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C51190 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C543 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C51191 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C544 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C539) *
               C51160 +
           ((C8139 + C8140 + C8141) * C542 + (C8142 + C8143 + C8144) * C51190 -
            (C8145 + C8146 + C8147) * C543 - (C8148 + C8149 + C8150) * C51191 +
            (C8467 + C8468 + C8469) * C544 + (C8470 + C8471 + C8472) * C539) *
               C51056) *
              C51018 * C50920 * C51147 +
          (((C8147 + C8146 + C8145) * C543 -
            ((C8144 + C8143 + C8142) * C51190 +
             (C8141 + C8140 + C8139) * C542) +
            (C8150 + C8149 + C8148) * C51191 - (C8469 + C8468 + C8467) * C544 -
            (C8472 + C8471 + C8470) * C539) *
               C51160 +
           ((C8151 + C8152 + C8153) * C543 -
            ((C8154 + C8155 + C8156) * C51190 +
             (C8157 + C8158 + C8159) * C542) +
            (C8160 + C8161 + C8162) * C51191 -
            (C7943 * C267 + C7938 * C286 + C7942 * C266 + C51189 * C281 +
             C7941 * C265 + C51188 * C280) *
                C544 -
            (C7943 * C287 + C7938 * C297 + C7942 * C285 + C51189 * C296 +
             C7941 * C284 + C51188 * C295) *
                C539) *
               C51056) *
              C51018 * C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C256 +
             (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C251 -
             (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
              C7941 * C126 + C51188 * C133) *
                 C257 -
             (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
              C7941 * C137 + C51188 * C147) *
                 C50884) *
                C51160 +
            ((C8139 + C8140 + C8141) * C256 + (C8142 + C8143 + C8144) * C251 -
             (C8145 + C8146 + C8147) * C257 -
             (C8148 + C8149 + C8150) * C50884) *
                C51056) *
               C51018 * C51148 +
           (((C7941 * C399 + C51188 * C409 + C7942 * C400 + C51189 * C410 +
              C7943 * C401 + C7938 * C411) *
                 C257 -
             ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
               C7941 * C416 + C51188 * C432) *
                  C251 +
              (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
               C7941 * C403 + C51188 * C417) *
                  C256) +
             (C7941 * C415 + C51188 * C431 + C7942 * C414 + C51189 * C430 +
              C7943 * C413 + C7938 * C429) *
                 C50884) *
                C51160 +
            ((C8837 + C8838 + C8839) * C257 -
             ((C8840 + C8841 + C8842) * C251 + (C8843 + C8844 + C8845) * C256) +
             (C8846 + C8847 + C8848) * C50884) *
                C51056) *
               C51018 * C50984) *
              C51147 +
          ((((C8147 + C8146 + C8145) * C257 -
             ((C8144 + C8143 + C8142) * C251 + (C8141 + C8140 + C8139) * C256) +
             (C8150 + C8149 + C8148) * C50884) *
                C51160 +
            ((C8151 + C8152 + C8153) * C257 -
             ((C8154 + C8155 + C8156) * C251 + (C8157 + C8158 + C8159) * C256) +
             (C8160 + C8161 + C8162) * C50884) *
                C51056) *
               C51018 * C51148 +
           (((C8845 + C8844 + C8843) * C256 + (C8842 + C8841 + C8840) * C251 -
             (C8839 + C8838 + C8837) * C257 -
             (C8848 + C8847 + C8846) * C50884) *
                C51160 +
            ((C7941 * C1447 + C51188 * C1455 + C7942 * C1446 + C51189 * C1454 +
              C7943 * C1445 + C7938 * C1453) *
                 C256 +
             (C7941 * C1451 + C51188 * C1459 + C7942 * C1450 + C51189 * C1458 +
              C7943 * C1449 + C7938 * C1457) *
                 C251 -
             (C7943 * C1444 + C7938 * C1452 + C7942 * C1445 + C51189 * C1453 +
              C7941 * C1446 + C51188 * C1454) *
                 C257 -
             (C7943 * C1448 + C7938 * C1456 + C7942 * C1449 + C51189 * C1457 +
              C7941 * C1450 + C51188 * C1458) *
                 C50884) *
                C51056) *
               C51018 * C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C50884) *
               C51160 +
           ((C8139 + C8140 + C8141) * C256 + (C8142 + C8143 + C8144) * C251 -
            (C8145 + C8146 + C8147) * C257 - (C8148 + C8149 + C8150) * C50884) *
               C51056) *
              C51018 * C50920 * C253 +
          (((C8147 + C8146 + C8145) * C257 -
            ((C8144 + C8143 + C8142) * C251 + (C8141 + C8140 + C8139) * C256) +
            (C8150 + C8149 + C8148) * C50884) *
               C51160 +
           ((C8151 + C8152 + C8153) * C257 -
            ((C8154 + C8155 + C8156) * C251 + (C8157 + C8158 + C8159) * C256) +
            (C8160 + C8161 + C8162) * C50884) *
               C51056) *
              C51018 * C50920 * C254 +
          (((C8159 + C8158 + C8157) * C256 + (C8156 + C8155 + C8154) * C251 -
            (C8153 + C8152 + C8151) * C257 - (C8162 + C8161 + C8160) * C50884) *
               C51160 +
           ((C7941 * C984 + C51188 * C992 + C7942 * C983 + C51189 * C991 +
             C7943 * C982 + C7938 * C990) *
                C256 +
            (C7941 * C988 + C51188 * C996 + C7942 * C987 + C51189 * C995 +
             C7943 * C986 + C7938 * C994) *
                C251 -
            (C7943 * C981 + C7938 * C989 + C7942 * C982 + C51189 * C990 +
             C7941 * C983 + C51188 * C991) *
                C257 -
            (C7943 * C985 + C7938 * C993 + C7942 * C986 + C51189 * C994 +
             C7941 * C987 + C51188 * C995) *
                C50884) *
               C51056) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
            C7943 * C127 + C7938 * C134) *
               C121 +
           (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
            C7943 * C138 + C7938 * C148) *
               C109 -
           (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
            C7941 * C126 + C51188 * C133) *
               C122 -
           (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
            C7941 * C137 + C51188 * C147) *
               C110 +
           (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
            C7943 * C129 + C7938 * C140) *
               C123 +
           (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
            C7943 * C141 + C7938 * C150) *
               C111 -
           (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51189 * C140 +
            C7941 * C128 + C51188 * C135) *
               C124 -
           (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51189 * C150 +
            C7941 * C139 + C51188 * C149) *
               C112) *
              C51160 +
          ((C7941 * C262 + C51188 * C276 + C7942 * C258 + C51189 * C268 +
            C7943 * C259 + C7938 * C269) *
               C121 +
           (C7941 * C275 + C51188 * C291 + C7942 * C274 + C51189 * C290 +
            C7943 * C273 + C7938 * C289) *
               C109 -
           (C7943 * C260 + C7938 * C270 + C7942 * C259 + C51189 * C269 +
            C7941 * C258 + C51188 * C268) *
               C122 -
           (C7943 * C272 + C7938 * C288 + C7942 * C273 + C51189 * C289 +
            C7941 * C274 + C51188 * C290) *
               C110 +
           (C7941 * C259 + C51188 * C269 + C7942 * C260 + C51189 * C270 +
            C7943 * C261 + C7938 * C271) *
               C123 +
           (C7941 * C273 + C51188 * C289 + C7942 * C272 + C51189 * C288 +
            C7943 * C277 + C7938 * C292) *
               C111 -
           (C7943 * C545 + C7938 * C546 + C7942 * C261 + C51189 * C271 +
            C7941 * C260 + C51188 * C270) *
               C124 -
           (C7943 * C547 + C7938 * C548 + C7942 * C277 + C51189 * C292 +
            C7941 * C272 + C51188 * C288) *
               C112) *
              C51056) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C50884) *
               C51160 +
           ((C8139 + C8140 + C8141) * C256 + (C8142 + C8143 + C8144) * C251 -
            (C8145 + C8146 + C8147) * C257 - (C8148 + C8149 + C8150) * C50884) *
               C51056) *
              C51018 * C396 +
          (((C7941 * C399 + C51188 * C409 + C7942 * C400 + C51189 * C410 +
             C7943 * C401 + C7938 * C411) *
                C257 -
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C251 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C256) +
            (C7941 * C415 + C51188 * C431 + C7942 * C414 + C51189 * C430 +
             C7943 * C413 + C7938 * C429) *
                C50884) *
               C51160 +
           ((C7941 * C784 + C51188 * C789 + C7942 * C785 + C51189 * C790 +
             C7943 * C786 + C7938 * C791) *
                C257 -
            ((C7943 * C794 + C7938 * C800 + C7942 * C793 + C51189 * C799 +
              C7941 * C792 + C51188 * C798) *
                 C251 +
             (C7943 * C785 + C7938 * C790 + C7942 * C784 + C51189 * C789 +
              C7941 * C783 + C51188 * C788) *
                 C256) +
            (C7941 * C793 + C51188 * C799 + C7942 * C794 + C51189 * C800 +
             C7943 * C795 + C7938 * C801) *
                C50884) *
               C51056) *
              C51018 * C397 +
          (((C7941 * C404 + C51188 * C419 + C7942 * C405 + C51189 * C420 +
             C7943 * C406 + C7938 * C421) *
                C256 +
            (C7941 * C423 + C51188 * C434 + C7942 * C424 + C51189 * C435 +
             C7943 * C425 + C7938 * C436) *
                C251 -
            (C7943 * C407 + C7938 * C422 + C7942 * C406 + C51189 * C421 +
             C7941 * C405 + C51188 * C420) *
                C257 -
            (C7943 * C426 + C7938 * C437 + C7942 * C425 + C51189 * C436 +
             C7941 * C424 + C51188 * C435) *
                C50884) *
               C51160 +
           ((C7941 * C1098 + C51188 * C1106 + C7942 * C1097 + C51189 * C1105 +
             C7943 * C1096 + C7938 * C1104) *
                C256 +
            (C7941 * C1102 + C51188 * C1110 + C7942 * C1101 + C51189 * C1109 +
             C7943 * C1100 + C7938 * C1108) *
                C251 -
            (C7943 * C1095 + C7938 * C1103 + C7942 * C1096 + C51189 * C1104 +
             C7941 * C1097 + C51188 * C1105) *
                C257 -
            (C7943 * C1099 + C7938 * C1107 + C7942 * C1100 + C51189 * C1108 +
             C7941 * C1101 + C51188 * C1109) *
                C50884) *
               C51056) *
              C51018 * C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C542 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C51190 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C543 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C51191 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C544 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C539) *
               C51160 +
           ((C8139 + C8140 + C8141) * C542 + (C8142 + C8143 + C8144) * C51190 -
            (C8145 + C8146 + C8147) * C543 - (C8148 + C8149 + C8150) * C51191 +
            (C8467 + C8468 + C8469) * C544 + (C8470 + C8471 + C8472) * C539) *
               C51056) *
              C51018 * C51148 +
          (((C7941 * C399 + C51188 * C409 + C7942 * C400 + C51189 * C410 +
             C7943 * C401 + C7938 * C411) *
                C543 -
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C51190 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C542) +
            (C7941 * C415 + C51188 * C431 + C7942 * C414 + C51189 * C430 +
             C7943 * C413 + C7938 * C429) *
                C51191 -
            (C7943 * C402 + C7938 * C412 + C7942 * C401 + C51189 * C411 +
             C7941 * C400 + C51188 * C410) *
                C544 -
            (C7943 * C418 + C7938 * C433 + C7942 * C413 + C51189 * C429 +
             C7941 * C414 + C51188 * C430) *
                C539) *
               C51160 +
           ((C7941 * C784 + C51188 * C789 + C7942 * C785 + C51189 * C790 +
             C7943 * C786 + C7938 * C791) *
                C543 -
            ((C7943 * C794 + C7938 * C800 + C7942 * C793 + C51189 * C799 +
              C7941 * C792 + C51188 * C798) *
                 C51190 +
             (C7943 * C785 + C7938 * C790 + C7942 * C784 + C51189 * C789 +
              C7941 * C783 + C51188 * C788) *
                 C542) +
            (C7941 * C793 + C51188 * C799 + C7942 * C794 + C51189 * C800 +
             C7943 * C795 + C7938 * C801) *
                C51191 -
            (C7943 * C787 + C7938 * C796 + C7942 * C786 + C51189 * C791 +
             C7941 * C785 + C51188 * C790) *
                C544 -
            (C7943 * C797 + C7938 * C802 + C7942 * C795 + C51189 * C801 +
             C7941 * C794 + C51188 * C800) *
                C539) *
               C51056) *
              C51018 * C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
            C7943 * C127 + C7938 * C134) *
               C121 +
           (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
            C7943 * C138 + C7938 * C148) *
               C109 -
           (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
            C7941 * C126 + C51188 * C133) *
               C122 -
           (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
            C7941 * C137 + C51188 * C147) *
               C110 +
           (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
            C7943 * C129 + C7938 * C140) *
               C123 +
           (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
            C7943 * C141 + C7938 * C150) *
               C111 -
           (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51189 * C140 +
            C7941 * C128 + C51188 * C135) *
               C124 -
           (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51189 * C150 +
            C7941 * C139 + C51188 * C149) *
               C112) *
              C51160 +
          ((C7941 * C262 + C51188 * C276 + C7942 * C258 + C51189 * C268 +
            C7943 * C259 + C7938 * C269) *
               C121 +
           (C7941 * C275 + C51188 * C291 + C7942 * C274 + C51189 * C290 +
            C7943 * C273 + C7938 * C289) *
               C109 -
           (C7943 * C260 + C7938 * C270 + C7942 * C259 + C51189 * C269 +
            C7941 * C258 + C51188 * C268) *
               C122 -
           (C7943 * C272 + C7938 * C288 + C7942 * C273 + C51189 * C289 +
            C7941 * C274 + C51188 * C290) *
               C110 +
           (C7941 * C259 + C51188 * C269 + C7942 * C260 + C51189 * C270 +
            C7943 * C261 + C7938 * C271) *
               C123 +
           (C7941 * C273 + C51188 * C289 + C7942 * C272 + C51189 * C288 +
            C7943 * C277 + C7938 * C292) *
               C111 -
           (C7943 * C545 + C7938 * C546 + C7942 * C261 + C51189 * C271 +
            C7941 * C260 + C51188 * C270) *
               C124 -
           (C7943 * C547 + C7938 * C548 + C7942 * C277 + C51189 * C292 +
            C7941 * C272 + C51188 * C288) *
               C112) *
              C51056) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C50884) *
               C51160 +
           ((C8139 + C8140 + C8141) * C256 + (C8142 + C8143 + C8144) * C251 -
            (C8145 + C8146 + C8147) * C257 - (C8148 + C8149 + C8150) * C50884) *
               C51056) *
              C51018 * C50920 * C253 +
          (((C8147 + C8146 + C8145) * C257 -
            ((C8144 + C8143 + C8142) * C251 + (C8141 + C8140 + C8139) * C256) +
            (C8150 + C8149 + C8148) * C50884) *
               C51160 +
           ((C8151 + C8152 + C8153) * C257 -
            ((C8154 + C8155 + C8156) * C251 + (C8157 + C8158 + C8159) * C256) +
            (C8160 + C8161 + C8162) * C50884) *
               C51056) *
              C51018 * C50920 * C254 +
          (((C8159 + C8158 + C8157) * C256 + (C8156 + C8155 + C8154) * C251 -
            (C8153 + C8152 + C8151) * C257 - (C8162 + C8161 + C8160) * C50884) *
               C51160 +
           ((C7941 * C984 + C51188 * C992 + C7942 * C983 + C51189 * C991 +
             C7943 * C982 + C7938 * C990) *
                C256 +
            (C7941 * C988 + C51188 * C996 + C7942 * C987 + C51189 * C995 +
             C7943 * C986 + C7938 * C994) *
                C251 -
            (C7943 * C981 + C7938 * C989 + C7942 * C982 + C51189 * C990 +
             C7941 * C983 + C51188 * C991) *
                C257 -
            (C7943 * C985 + C7938 * C993 + C7942 * C986 + C51189 * C994 +
             C7941 * C987 + C51188 * C995) *
                C50884) *
               C51056) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                    C51189 * C133 + C7943 * C127 + C7938 * C134) *
                       C50007 +
                   (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                    C51189 * C147 + C7943 * C138 + C7938 * C148) *
                       C51139 -
                   (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
                    C7941 * C126 + C51188 * C133) *
                       C50000 -
                   (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
                    C7941 * C137 + C51188 * C147) *
                       C50884) *
                      C51160 +
                  ((C8139 + C8140 + C8141) * C50007 +
                   (C8142 + C8143 + C8144) * C51139 -
                   (C8145 + C8146 + C8147) * C50000 -
                   (C8148 + C8149 + C8150) * C50884) *
                      C51056) *
                     C51018 * C50920 * C51192 +
                 (((C8147 + C8146 + C8145) * C50000 -
                   ((C8144 + C8143 + C8142) * C51139 +
                    (C8141 + C8140 + C8139) * C50007) +
                   (C8150 + C8149 + C8148) * C50884) *
                      C51160 +
                  ((C8151 + C8152 + C8153) * C50000 -
                   ((C8154 + C8155 + C8156) * C51139 +
                    (C8157 + C8158 + C8159) * C50007) +
                   (C8160 + C8161 + C8162) * C50884) *
                      C51056) *
                     C51018 * C50920 * C51193 +
                 (((C8159 + C8158 + C8157) * C50007 +
                   (C8156 + C8155 + C8154) * C51139 -
                   (C8153 + C8152 + C8151) * C50000 -
                   (C8162 + C8161 + C8160) * C50884) *
                      C51160 +
                  ((C9105 + C9106 + C9107) * C50007 +
                   (C9108 + C9109 + C9110) * C51139 -
                   (C7943 * C981 + C7938 * C989 + C7942 * C982 + C51189 * C990 +
                    C7941 * C983 + C51188 * C991) *
                       C50000 -
                   (C7943 * C985 + C7938 * C993 + C7942 * C986 + C51189 * C994 +
                    C7941 * C987 + C51188 * C995) *
                       C50884) *
                      C51056) *
                     C51018 * C50920 * C1213)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C980 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C50879) *
                       C51160 +
                   ((C8139 + C8140 + C8141) * C980 +
                    (C8142 + C8143 + C8144) * C50879) *
                       C51056) *
                      C51018 * C51148 -
                  (((C8840 + C8841 + C8842) * C50879 +
                    (C8843 + C8844 + C8845) * C980) *
                       C51056 +
                   ((C7943 * C414 + C7938 * C430 + C7942 * C415 +
                     C51189 * C431 + C7941 * C416 + C51188 * C432) *
                        C50879 +
                    (C7943 * C400 + C7938 * C410 + C7942 * C399 +
                     C51189 * C409 + C7941 * C403 + C51188 * C417) *
                        C980) *
                       C51160) *
                      C51018 * C50984) *
                     C51192 +
                 ((((C8845 + C8844 + C8843) * C980 +
                    (C8842 + C8841 + C8840) * C50879) *
                       C51160 +
                   ((C9773 + C9774 + C9775) * C980 +
                    (C9776 + C9777 + C9778) * C50879) *
                       C51056) *
                      C51018 * C50984 -
                  (((C8154 + C8155 + C8156) * C50879 +
                    (C8157 + C8158 + C8159) * C980) *
                       C51056 +
                   ((C8144 + C8143 + C8142) * C50879 +
                    (C8141 + C8140 + C8139) * C980) *
                       C51160) *
                      C51018 * C51148) *
                     C51193 +
                 ((((C8159 + C8158 + C8157) * C980 +
                    (C8156 + C8155 + C8154) * C50879) *
                       C51160 +
                   ((C9105 + C9106 + C9107) * C980 +
                    (C9108 + C9109 + C9110) * C50879) *
                       C51056) *
                      C51018 * C51148 -
                  (((C7943 * C3095 + C7938 * C3098 + C7942 * C3093 +
                     C51189 * C3097 + C7941 * C3092 + C51188 * C3096) *
                        C50879 +
                    (C7943 * C3089 + C7938 * C3094 + C7942 * C3088 +
                     C51189 * C3091 + C7941 * C3087 + C51188 * C3090) *
                        C980) *
                       C51056 +
                   ((C9778 + C9777 + C9776) * C50879 +
                    (C9775 + C9774 + C9773) * C980) *
                       C51160) *
                      C51018 * C50984) *
                     C1213)) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C980 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50879) *
               C51160 +
           ((C8139 + C8140 + C8141) * C980 + (C8142 + C8143 + C8144) * C50879) *
               C51056) *
              C51018 * C50920 * C976 -
          (((C8154 + C8155 + C8156) * C50879 + (C8157 + C8158 + C8159) * C980) *
               C51056 +
           ((C8144 + C8143 + C8142) * C50879 + (C8141 + C8140 + C8139) * C980) *
               C51160) *
              C51018 * C50920 * C977 +
          (((C8159 + C8158 + C8157) * C980 + (C8156 + C8155 + C8154) * C50879) *
               C51160 +
           ((C9105 + C9106 + C9107) * C980 + (C9108 + C9109 + C9110) * C50879) *
               C51056) *
              C51018 * C50920 * C978 -
          (((C7943 * C2332 + C7938 * C2335 + C7942 * C2330 + C51189 * C2334 +
             C7941 * C2329 + C51188 * C2333) *
                C50879 +
            (C7943 * C2326 + C7938 * C2331 + C7942 * C2325 + C51189 * C2328 +
             C7941 * C2324 + C51188 * C2327) *
                C980) *
               C51056 +
           ((C9110 + C9109 + C9108) * C50879 + (C9107 + C9106 + C9105) * C980) *
               C51160) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C906 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C901 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C907 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C902 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C908 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C903) *
               C51160 +
           ((C8139 + C8140 + C8141) * C906 + (C8142 + C8143 + C8144) * C901 -
            (C8145 + C8146 + C8147) * C907 - (C8148 + C8149 + C8150) * C902 +
            (C8467 + C8468 + C8469) * C908 + (C8470 + C8471 + C8472) * C903) *
               C51056) *
              C51018 * C50920 * C904 +
          (((C8147 + C8146 + C8145) * C907 -
            ((C8144 + C8143 + C8142) * C901 + (C8141 + C8140 + C8139) * C906) +
            (C8150 + C8149 + C8148) * C902 - (C8469 + C8468 + C8467) * C908 -
            (C8472 + C8471 + C8470) * C903) *
               C51160 +
           ((C8151 + C8152 + C8153) * C907 -
            ((C8154 + C8155 + C8156) * C901 + (C8157 + C8158 + C8159) * C906) +
            (C8160 + C8161 + C8162) * C902 -
            (C7943 * C267 + C7938 * C286 + C7942 * C266 + C51189 * C281 +
             C7941 * C265 + C51188 * C280) *
                C908 -
            (C7943 * C287 + C7938 * C297 + C7942 * C285 + C51189 * C296 +
             C7941 * C284 + C51188 * C295) *
                C903) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C980 +
             (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50879) *
                C51160 +
            ((C8139 + C8140 + C8141) * C980 +
             (C8142 + C8143 + C8144) * C50879) *
                C51056) *
               C51018 * C396 -
           (((C8840 + C8841 + C8842) * C50879 +
             (C8843 + C8844 + C8845) * C980) *
                C51056 +
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C50879 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C980) *
                C51160) *
               C51018 * C397 +
           (((C7941 * C404 + C51188 * C419 + C7942 * C405 + C51189 * C420 +
              C7943 * C406 + C7938 * C421) *
                 C980 +
             (C7941 * C423 + C51188 * C434 + C7942 * C424 + C51189 * C435 +
              C7943 * C425 + C7938 * C436) *
                 C50879) *
                C51160 +
            ((C9269 + C9270 + C9271) * C980 +
             (C9272 + C9273 + C9274) * C50879) *
                C51056) *
               C51018 * C398) *
              C904 +
          ((((C8845 + C8844 + C8843) * C980 +
             (C8842 + C8841 + C8840) * C50879) *
                C51160 +
            ((C7941 * C1447 + C51188 * C1455 + C7942 * C1446 + C51189 * C1454 +
              C7943 * C1445 + C7938 * C1453) *
                 C980 +
             (C7941 * C1451 + C51188 * C1459 + C7942 * C1450 + C51189 * C1458 +
              C7943 * C1449 + C7938 * C1457) *
                 C50879) *
                C51056) *
               C51018 * C397 -
           (((C8154 + C8155 + C8156) * C50879 +
             (C8157 + C8158 + C8159) * C980) *
                C51056 +
            ((C8144 + C8143 + C8142) * C50879 +
             (C8141 + C8140 + C8139) * C980) *
                C51160) *
               C51018 * C396 -
           (((C7943 * C2573 + C7938 * C2576 + C7942 * C2571 + C51189 * C2575 +
              C7941 * C2570 + C51188 * C2574) *
                 C50879 +
             (C7943 * C2567 + C7938 * C2572 + C7942 * C2566 + C51189 * C2569 +
              C7941 * C2565 + C51188 * C2568) *
                 C980) *
                C51056 +
            ((C9274 + C9273 + C9272) * C50879 +
             (C9271 + C9270 + C9269) * C980) *
                C51160) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C51139 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C50884) *
                       C51160 +
                   ((C8139 + C8140 + C8141) * C50007 +
                    (C8142 + C8143 + C8144) * C51139 -
                    (C8145 + C8146 + C8147) * C50000 -
                    (C8148 + C8149 + C8150) * C50884) *
                       C51056) *
                      C51018 * C51148 +
                  (((C7941 * C399 + C51188 * C409 + C7942 * C400 +
                     C51189 * C410 + C7943 * C401 + C7938 * C411) *
                        C50000 -
                    ((C7943 * C414 + C7938 * C430 + C7942 * C415 +
                      C51189 * C431 + C7941 * C416 + C51188 * C432) *
                         C51139 +
                     (C7943 * C400 + C7938 * C410 + C7942 * C399 +
                      C51189 * C409 + C7941 * C403 + C51188 * C417) *
                         C50007) +
                    (C7941 * C415 + C51188 * C431 + C7942 * C414 +
                     C51189 * C430 + C7943 * C413 + C7938 * C429) *
                        C50884) *
                       C51160 +
                   ((C8837 + C8838 + C8839) * C50000 -
                    ((C8840 + C8841 + C8842) * C51139 +
                     (C8843 + C8844 + C8845) * C50007) +
                    (C8846 + C8847 + C8848) * C50884) *
                       C51056) *
                      C51018 * C50984) *
                     C904 +
                 ((((C8147 + C8146 + C8145) * C50000 -
                    ((C8144 + C8143 + C8142) * C51139 +
                     (C8141 + C8140 + C8139) * C50007) +
                    (C8150 + C8149 + C8148) * C50884) *
                       C51160 +
                   ((C8151 + C8152 + C8153) * C50000 -
                    ((C8154 + C8155 + C8156) * C51139 +
                     (C8157 + C8158 + C8159) * C50007) +
                    (C8160 + C8161 + C8162) * C50884) *
                       C51056) *
                      C51018 * C51148 +
                  (((C8845 + C8844 + C8843) * C50007 +
                    (C8842 + C8841 + C8840) * C51139 -
                    (C8839 + C8838 + C8837) * C50000 -
                    (C8848 + C8847 + C8846) * C50884) *
                       C51160 +
                   ((C7941 * C1447 + C51188 * C1455 + C7942 * C1446 +
                     C51189 * C1454 + C7943 * C1445 + C7938 * C1453) *
                        C50007 +
                    (C7941 * C1451 + C51188 * C1459 + C7942 * C1450 +
                     C51189 * C1458 + C7943 * C1449 + C7938 * C1457) *
                        C51139 -
                    (C7943 * C1444 + C7938 * C1452 + C7942 * C1445 +
                     C51189 * C1453 + C7941 * C1446 + C51188 * C1454) *
                        C50000 -
                    (C7943 * C1448 + C7938 * C1456 + C7942 * C1449 +
                     C51189 * C1457 + C7941 * C1450 + C51188 * C1458) *
                        C50884) *
                       C51056) *
                      C51018 * C50984) *
                     C50958)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C906 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C901 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C907 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C902 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C908 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C903) *
               C51160 +
           ((C8139 + C8140 + C8141) * C906 + (C8142 + C8143 + C8144) * C901 -
            (C8145 + C8146 + C8147) * C907 - (C8148 + C8149 + C8150) * C902 +
            (C8467 + C8468 + C8469) * C908 + (C8470 + C8471 + C8472) * C903) *
               C51056) *
              C51018 * C50920 * C904 +
          (((C8147 + C8146 + C8145) * C907 -
            ((C8144 + C8143 + C8142) * C901 + (C8141 + C8140 + C8139) * C906) +
            (C8150 + C8149 + C8148) * C902 - (C8469 + C8468 + C8467) * C908 -
            (C8472 + C8471 + C8470) * C903) *
               C51160 +
           ((C8151 + C8152 + C8153) * C907 -
            ((C8154 + C8155 + C8156) * C901 + (C8157 + C8158 + C8159) * C906) +
            (C8160 + C8161 + C8162) * C902 -
            (C7943 * C267 + C7938 * C286 + C7942 * C266 + C51189 * C281 +
             C7941 * C265 + C51188 * C280) *
                C908 -
            (C7943 * C287 + C7938 * C297 + C7942 * C285 + C51189 * C296 +
             C7941 * C284 + C51188 * C295) *
                C903) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C980 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50879) *
               C51160 +
           ((C8139 + C8140 + C8141) * C980 + (C8142 + C8143 + C8144) * C50879) *
               C51056) *
              C51018 * C50920 * C976 -
          (((C8154 + C8155 + C8156) * C50879 + (C8157 + C8158 + C8159) * C980) *
               C51056 +
           ((C8144 + C8143 + C8142) * C50879 + (C8141 + C8140 + C8139) * C980) *
               C51160) *
              C51018 * C50920 * C977 +
          (((C8159 + C8158 + C8157) * C980 + (C8156 + C8155 + C8154) * C50879) *
               C51160 +
           ((C9105 + C9106 + C9107) * C980 + (C9108 + C9109 + C9110) * C50879) *
               C51056) *
              C51018 * C50920 * C978 -
          (((C7943 * C2332 + C7938 * C2335 + C7942 * C2330 + C51189 * C2334 +
             C7941 * C2329 + C51188 * C2333) *
                C50879 +
            (C7943 * C2326 + C7938 * C2331 + C7942 * C2325 + C51189 * C2328 +
             C7941 * C2324 + C51188 * C2327) *
                C980) *
               C51056 +
           ((C9110 + C9109 + C9108) * C50879 + (C9107 + C9106 + C9105) * C980) *
               C51160) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C50007 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C51139 -
                     (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                      C51189 * C134 + C7941 * C126 + C51188 * C133) *
                         C50000 -
                     (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                      C51189 * C148 + C7941 * C137 + C51188 * C147) *
                         C50884) *
                        C51160 +
                    ((C8139 + C8140 + C8141) * C50007 +
                     (C8142 + C8143 + C8144) * C51139 -
                     (C8145 + C8146 + C8147) * C50000 -
                     (C8148 + C8149 + C8150) * C50884) *
                        C51056) *
                       C51018 * C1558 +
                   (((C7941 * C399 + C51188 * C409 + C7942 * C400 +
                      C51189 * C410 + C7943 * C401 + C7938 * C411) *
                         C50000 -
                     ((C7943 * C414 + C7938 * C430 + C7942 * C415 +
                       C51189 * C431 + C7941 * C416 + C51188 * C432) *
                          C51139 +
                      (C7943 * C400 + C7938 * C410 + C7942 * C399 +
                       C51189 * C409 + C7941 * C403 + C51188 * C417) *
                          C50007) +
                     (C7941 * C415 + C51188 * C431 + C7942 * C414 +
                      C51189 * C430 + C7943 * C413 + C7938 * C429) *
                         C50884) *
                        C51160 +
                    ((C8837 + C8838 + C8839) * C50000 -
                     ((C8840 + C8841 + C8842) * C51139 +
                      (C8843 + C8844 + C8845) * C50007) +
                     (C8846 + C8847 + C8848) * C50884) *
                        C51056) *
                       C51018 * C50984) *
                      C51147 +
                  ((((C8147 + C8146 + C8145) * C50000 -
                     ((C8144 + C8143 + C8142) * C51139 +
                      (C8141 + C8140 + C8139) * C50007) +
                     (C8150 + C8149 + C8148) * C50884) *
                        C51160 +
                    ((C8151 + C8152 + C8153) * C50000 -
                     ((C8154 + C8155 + C8156) * C51139 +
                      (C8157 + C8158 + C8159) * C50007) +
                     (C8160 + C8161 + C8162) * C50884) *
                        C51056) *
                       C51018 * C1558 +
                   (((C8845 + C8844 + C8843) * C50007 +
                     (C8842 + C8841 + C8840) * C51139 -
                     (C8839 + C8838 + C8837) * C50000 -
                     (C8848 + C8847 + C8846) * C50884) *
                        C51160 +
                    ((C9773 + C9774 + C9775) * C50007 +
                     (C9776 + C9777 + C9778) * C51139 -
                     (C7943 * C1444 + C7938 * C1452 + C7942 * C1445 +
                      C51189 * C1453 + C7941 * C1446 + C51188 * C1454) *
                         C50000 -
                     (C7943 * C1448 + C7938 * C1456 + C7942 * C1449 +
                      C51189 * C1457 + C7941 * C1450 + C51188 * C1458) *
                         C50884) *
                        C51056) *
                       C51018 * C50984) *
                      C50958)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C980 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C50879) *
                        C51160 +
                    ((C8139 + C8140 + C8141) * C980 +
                     (C8142 + C8143 + C8144) * C50879) *
                        C51056) *
                       C51018 * C51194 -
                   (((C8840 + C8841 + C8842) * C50879 +
                     (C8843 + C8844 + C8845) * C980) *
                        C51056 +
                    ((C7943 * C414 + C7938 * C430 + C7942 * C415 +
                      C51189 * C431 + C7941 * C416 + C51188 * C432) *
                         C50879 +
                     (C7943 * C400 + C7938 * C410 + C7942 * C399 +
                      C51189 * C409 + C7941 * C403 + C51188 * C417) *
                         C980) *
                        C51160) *
                       C51018 * C51195 +
                   (((C7941 * C404 + C51188 * C419 + C7942 * C405 +
                      C51189 * C420 + C7943 * C406 + C7938 * C421) *
                         C980 +
                     (C7941 * C423 + C51188 * C434 + C7942 * C424 +
                      C51189 * C435 + C7943 * C425 + C7938 * C436) *
                         C50879) *
                        C51160 +
                    ((C9269 + C9270 + C9271) * C980 +
                     (C9272 + C9273 + C9274) * C50879) *
                        C51056) *
                       C51018 * C1974) *
                      C51147 +
                  ((((C8845 + C8844 + C8843) * C980 +
                     (C8842 + C8841 + C8840) * C50879) *
                        C51160 +
                    ((C9773 + C9774 + C9775) * C980 +
                     (C9776 + C9777 + C9778) * C50879) *
                        C51056) *
                       C51018 * C51195 -
                   (((C8154 + C8155 + C8156) * C50879 +
                     (C8157 + C8158 + C8159) * C980) *
                        C51056 +
                    ((C8144 + C8143 + C8142) * C50879 +
                     (C8141 + C8140 + C8139) * C980) *
                        C51160) *
                       C51018 * C51194 -
                   (((C7943 * C2573 + C7938 * C2576 + C7942 * C2571 +
                      C51189 * C2575 + C7941 * C2570 + C51188 * C2574) *
                         C50879 +
                     (C7943 * C2567 + C7938 * C2572 + C7942 * C2566 +
                      C51189 * C2569 + C7941 * C2565 + C51188 * C2568) *
                         C980) *
                        C51056 +
                    ((C9274 + C9273 + C9272) * C50879 +
                     (C9271 + C9270 + C9269) * C980) *
                        C51160) *
                       C51018 * C1974) *
                      C50958)) /
                (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C980 +
             (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50879) *
                C51160 +
            ((C8139 + C8140 + C8141) * C980 +
             (C8142 + C8143 + C8144) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C8840 + C8841 + C8842) * C50879 +
             (C8843 + C8844 + C8845) * C980) *
                C51056 +
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C50879 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C980) *
                C51160) *
               C51018 * C50984) *
              C253 +
          ((((C8845 + C8844 + C8843) * C980 +
             (C8842 + C8841 + C8840) * C50879) *
                C51160 +
            ((C9773 + C9774 + C9775) * C980 +
             (C9776 + C9777 + C9778) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C8154 + C8155 + C8156) * C50879 +
             (C8157 + C8158 + C8159) * C980) *
                C51056 +
            ((C8144 + C8143 + C8142) * C50879 +
             (C8141 + C8140 + C8139) * C980) *
                C51160) *
               C51018 * C1558) *
              C254 +
          ((((C8159 + C8158 + C8157) * C980 +
             (C8156 + C8155 + C8154) * C50879) *
                C51160 +
            ((C9105 + C9106 + C9107) * C980 +
             (C9108 + C9109 + C9110) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C7943 * C3095 + C7938 * C3098 + C7942 * C3093 + C51189 * C3097 +
              C7941 * C3092 + C51188 * C3096) *
                 C50879 +
             (C7943 * C3089 + C7938 * C3094 + C7942 * C3088 + C51189 * C3091 +
              C7941 * C3087 + C51188 * C3090) *
                 C980) *
                C51056 +
            ((C9778 + C9777 + C9776) * C50879 +
             (C9775 + C9774 + C9773) * C980) *
                C51160) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C906 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C901 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C907 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C902 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C908 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C903) *
               C51160 +
           ((C8139 + C8140 + C8141) * C906 + (C8142 + C8143 + C8144) * C901 -
            (C8145 + C8146 + C8147) * C907 - (C8148 + C8149 + C8150) * C902 +
            (C8467 + C8468 + C8469) * C908 + (C8470 + C8471 + C8472) * C903) *
               C51056) *
              C51018 * C1558 +
          (((C7941 * C399 + C51188 * C409 + C7942 * C400 + C51189 * C410 +
             C7943 * C401 + C7938 * C411) *
                C907 -
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C901 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C906) +
            (C7941 * C415 + C51188 * C431 + C7942 * C414 + C51189 * C430 +
             C7943 * C413 + C7938 * C429) *
                C902 -
            (C7943 * C402 + C7938 * C412 + C7942 * C401 + C51189 * C411 +
             C7941 * C400 + C51188 * C410) *
                C908 -
            (C7943 * C418 + C7938 * C433 + C7942 * C413 + C51189 * C429 +
             C7941 * C414 + C51188 * C430) *
                C903) *
               C51160 +
           ((C8837 + C8838 + C8839) * C907 -
            ((C8840 + C8841 + C8842) * C901 + (C8843 + C8844 + C8845) * C906) +
            (C8846 + C8847 + C8848) * C902 -
            (C7943 * C787 + C7938 * C796 + C7942 * C786 + C51189 * C791 +
             C7941 * C785 + C51188 * C790) *
                C908 -
            (C7943 * C797 + C7938 * C802 + C7942 * C795 + C51189 * C801 +
             C7941 * C794 + C51188 * C800) *
                C903) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C980 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50879) *
               C51160 +
           ((C8139 + C8140 + C8141) * C980 + (C8142 + C8143 + C8144) * C50879) *
               C51056) *
              C51018 * C1724 -
          (((C8840 + C8841 + C8842) * C50879 + (C8843 + C8844 + C8845) * C980) *
               C51056 +
           ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
             C7941 * C416 + C51188 * C432) *
                C50879 +
            (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
             C7941 * C403 + C51188 * C417) *
                C980) *
               C51160) *
              C51018 * C1725 +
          (((C7941 * C404 + C51188 * C419 + C7942 * C405 + C51189 * C420 +
             C7943 * C406 + C7938 * C421) *
                C980 +
            (C7941 * C423 + C51188 * C434 + C7942 * C424 + C51189 * C435 +
             C7943 * C425 + C7938 * C436) *
                C50879) *
               C51160 +
           ((C9269 + C9270 + C9271) * C980 + (C9272 + C9273 + C9274) * C50879) *
               C51056) *
              C51018 * C1726 -
          (((C7943 * C6008 + C7938 * C6009 + C7942 * C4513 + C51189 * C4519 +
             C7941 * C4514 + C51188 * C4520) *
                C50879 +
            (C7943 * C6006 + C7938 * C6007 + C7942 * C4507 + C51189 * C4515 +
             C7941 * C4508 + C51188 * C4516) *
                C980) *
               C51056 +
           ((C7943 * C1733 + C7938 * C1741 + C7942 * C1734 + C51189 * C1742 +
             C7941 * C1735 + C51188 * C1743) *
                C50879 +
            (C7943 * C1729 + C7938 * C1737 + C7942 * C1730 + C51189 * C1738 +
             C7941 * C1731 + C51188 * C1739) *
                C980) *
               C51160) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C51139 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C50884) *
                       C51160 +
                   ((C8139 + C8140 + C8141) * C50007 +
                    (C8142 + C8143 + C8144) * C51139 -
                    (C8145 + C8146 + C8147) * C50000 -
                    (C8148 + C8149 + C8150) * C50884) *
                       C51056) *
                      C51018 * C51194 +
                  (((C7941 * C399 + C51188 * C409 + C7942 * C400 +
                     C51189 * C410 + C7943 * C401 + C7938 * C411) *
                        C50000 -
                    ((C7943 * C414 + C7938 * C430 + C7942 * C415 +
                      C51189 * C431 + C7941 * C416 + C51188 * C432) *
                         C51139 +
                     (C7943 * C400 + C7938 * C410 + C7942 * C399 +
                      C51189 * C409 + C7941 * C403 + C51188 * C417) *
                         C50007) +
                    (C7941 * C415 + C51188 * C431 + C7942 * C414 +
                     C51189 * C430 + C7943 * C413 + C7938 * C429) *
                        C50884) *
                       C51160 +
                   ((C8837 + C8838 + C8839) * C50000 -
                    ((C8840 + C8841 + C8842) * C51139 +
                     (C8843 + C8844 + C8845) * C50007) +
                    (C8846 + C8847 + C8848) * C50884) *
                       C51056) *
                      C51018 * C51195 +
                  (((C7941 * C404 + C51188 * C419 + C7942 * C405 +
                     C51189 * C420 + C7943 * C406 + C7938 * C421) *
                        C50007 +
                    (C7941 * C423 + C51188 * C434 + C7942 * C424 +
                     C51189 * C435 + C7943 * C425 + C7938 * C436) *
                        C51139 -
                    (C7943 * C407 + C7938 * C422 + C7942 * C406 +
                     C51189 * C421 + C7941 * C405 + C51188 * C420) *
                        C50000 -
                    (C7943 * C426 + C7938 * C437 + C7942 * C425 +
                     C51189 * C436 + C7941 * C424 + C51188 * C435) *
                        C50884) *
                       C51160 +
                   ((C9269 + C9270 + C9271) * C50007 +
                    (C9272 + C9273 + C9274) * C51139 -
                    (C7943 * C1095 + C7938 * C1103 + C7942 * C1096 +
                     C51189 * C1104 + C7941 * C1097 + C51188 * C1105) *
                        C50000 -
                    (C7943 * C1099 + C7938 * C1107 + C7942 * C1100 +
                     C51189 * C1108 + C7941 * C1101 + C51188 * C1109) *
                        C50884) *
                       C51056) *
                      C51018 * C1974) *
                 C50908) /
                (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C906 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C901 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C907 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C902 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C908 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C903) *
               C51160 +
           ((C8139 + C8140 + C8141) * C906 + (C8142 + C8143 + C8144) * C901 -
            (C8145 + C8146 + C8147) * C907 - (C8148 + C8149 + C8150) * C902 +
            (C8467 + C8468 + C8469) * C908 + (C8470 + C8471 + C8472) * C903) *
               C51056) *
              C51018 * C1558 +
          (((C7941 * C399 + C51188 * C409 + C7942 * C400 + C51189 * C410 +
             C7943 * C401 + C7938 * C411) *
                C907 -
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C901 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C906) +
            (C7941 * C415 + C51188 * C431 + C7942 * C414 + C51189 * C430 +
             C7943 * C413 + C7938 * C429) *
                C902 -
            (C7943 * C402 + C7938 * C412 + C7942 * C401 + C51189 * C411 +
             C7941 * C400 + C51188 * C410) *
                C908 -
            (C7943 * C418 + C7938 * C433 + C7942 * C413 + C51189 * C429 +
             C7941 * C414 + C51188 * C430) *
                C903) *
               C51160 +
           ((C8837 + C8838 + C8839) * C907 -
            ((C8840 + C8841 + C8842) * C901 + (C8843 + C8844 + C8845) * C906) +
            (C8846 + C8847 + C8848) * C902 -
            (C7943 * C787 + C7938 * C796 + C7942 * C786 + C51189 * C791 +
             C7941 * C785 + C51188 * C790) *
                C908 -
            (C7943 * C797 + C7938 * C802 + C7942 * C795 + C51189 * C801 +
             C7941 * C794 + C51188 * C800) *
                C903) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C980 +
             (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50879) *
                C51160 +
            ((C8139 + C8140 + C8141) * C980 +
             (C8142 + C8143 + C8144) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C8840 + C8841 + C8842) * C50879 +
             (C8843 + C8844 + C8845) * C980) *
                C51056 +
            ((C7943 * C414 + C7938 * C430 + C7942 * C415 + C51189 * C431 +
              C7941 * C416 + C51188 * C432) *
                 C50879 +
             (C7943 * C400 + C7938 * C410 + C7942 * C399 + C51189 * C409 +
              C7941 * C403 + C51188 * C417) *
                 C980) *
                C51160) *
               C51018 * C50984) *
              C253 +
          ((((C8845 + C8844 + C8843) * C980 +
             (C8842 + C8841 + C8840) * C50879) *
                C51160 +
            ((C9773 + C9774 + C9775) * C980 +
             (C9776 + C9777 + C9778) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C8154 + C8155 + C8156) * C50879 +
             (C8157 + C8158 + C8159) * C980) *
                C51056 +
            ((C8144 + C8143 + C8142) * C50879 +
             (C8141 + C8140 + C8139) * C980) *
                C51160) *
               C51018 * C1558) *
              C254 +
          ((((C8159 + C8158 + C8157) * C980 +
             (C8156 + C8155 + C8154) * C50879) *
                C51160 +
            ((C9105 + C9106 + C9107) * C980 +
             (C9108 + C9109 + C9110) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C7943 * C3095 + C7938 * C3098 + C7942 * C3093 + C51189 * C3097 +
              C7941 * C3092 + C51188 * C3096) *
                 C50879 +
             (C7943 * C3089 + C7938 * C3094 + C7942 * C3088 + C51189 * C3091 +
              C7941 * C3087 + C51188 * C3090) *
                 C980) *
                C51056 +
            ((C9778 + C9777 + C9776) * C50879 +
             (C9775 + C9774 + C9773) * C980) *
                C51160) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C542 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51190 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C543 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C51191 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                 C544 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                 C539) *
                C51160 +
            ((C2385 + C2386) * C542 + (C2387 + C2388) * C51190 -
             (C2389 + C2390) * C543 - (C2391 + C2392) * C51191 +
             (C2740 + C2741) * C544 + (C2742 + C2743) * C539) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C542 + (C5463 + C5464) * C51190 -
             (C5465 + C5466) * C543 - (C5467 + C5468) * C51191 +
             (C5805 + C5806) * C544 + (C5807 + C5808) * C539) *
                C51160 +
            ((C3137 + C3136) * C542 + (C3135 + C3134) * C51190 -
             (C3133 + C3132) * C543 - (C3139 + C3138) * C51191 +
             (C14113 + C14114) * C544 + (C14115 + C14116) * C539) *
                C51056) *
               C51082) *
              C50920 * C51147 +
          ((((C2390 + C2389) * C543 -
             ((C2388 + C2387) * C51190 + (C2386 + C2385) * C542) +
             (C2392 + C2391) * C51191 - (C2741 + C2740) * C544 -
             (C2743 + C2742) * C539) *
                C51160 +
            ((C2398 + C2397) * C543 -
             ((C2396 + C2395) * C51190 + (C2394 + C2393) * C542) +
             (C2400 + C2399) * C51191 - (C2745 + C2744) * C544 -
             (C2747 + C2746) * C539) *
                C51056) *
               C51161 +
           (((C3132 + C3133) * C543 -
             ((C3134 + C3135) * C51190 + (C3136 + C3137) * C542) +
             (C3138 + C3139) * C51191 - (C14114 + C14113) * C544 -
             (C14116 + C14115) * C539) *
                C51160 +
            ((C3140 + C3141) * C543 - (C4099 * C51190 + C4100 * C542) +
             (C3146 + C3147) * C51191 -
             (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                 C544 -
             (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                 C539) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C256 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C251 -
              (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                  C257 -
              (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                  C50884) *
                 C51160 +
             ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
              (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
                 C51056) *
                C51161 +
            (((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
              (C5465 + C5466) * C257 - (C5467 + C5468) * C50884) *
                 C51160 +
             C14589 * C51056) *
                C51082) *
               C51148 +
           ((((C5466 + C5465) * C257 -
              ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
              (C5468 + C5467) * C50884) *
                 C51160 +
             C14590 * C51056) *
                C51161 +
            (((C5474 + C5473) * C257 -
              ((C5472 + C5471) * C251 + (C5470 + C5469) * C256) +
              (C5476 + C5475) * C50884) *
                 C51160 +
             ((C6019 + C6020) * C257 - (C6431 * C251 + C6432 * C256) +
              (C6021 + C6022) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C51147 +
          (((((C2390 + C2389) * C257 -
              ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
              (C2392 + C2391) * C50884) *
                 C51160 +
             ((C2398 + C2397) * C257 -
              ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
              (C2400 + C2399) * C50884) *
                 C51056) *
                C51161 +
            (C14590 * C51160 +
             ((C3140 + C3141) * C257 - (C4099 * C251 + C4100 * C256) +
              (C3146 + C3147) * C50884) *
                 C51056) *
                C51082) *
               C51148 +
           ((C14589 * C51160 +
             ((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
              (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
                 C51056) *
                C51161 +
            (((C3590 + C3591) * C256 + (C3592 + C3593) * C251 -
              (C6020 + C6019) * C257 - (C6022 + C6021) * C50884) *
                 C51160 +
             ((C3594 + C3595) * C256 + (C3596 + C3597) * C251 -
              (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                  C257 -
              (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C251 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51160 +
            ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
             (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
             (C5465 + C5466) * C257 - (C5467 + C5468) * C50884) *
                C51160 +
            ((C3137 + C3136) * C256 + (C3135 + C3134) * C251 -
             (C3133 + C3132) * C257 - (C3139 + C3138) * C50884) *
                C51056) *
               C51082) *
              C50920 * C253 +
          ((((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C50884) *
                C51160 +
            ((C2398 + C2397) * C257 -
             ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
             (C2400 + C2399) * C50884) *
                C51056) *
               C51161 +
           (((C3132 + C3133) * C257 -
             ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
             (C3138 + C3139) * C50884) *
                C51160 +
            ((C3140 + C3141) * C257 - (C4099 * C251 + C4100 * C256) +
             (C3146 + C3147) * C50884) *
                C51056) *
               C51082) *
              C50920 * C254 +
          ((C2419 * C51160 +
            ((C2406 + C2405) * C256 + (C2404 + C2403) * C251 -
             (C2402 + C2401) * C257 - (C2408 + C2407) * C50884) *
                C51056) *
               C51161 +
           (((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
             (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
                C51160 +
            ((C4111 + C4112) * C256 + (C4113 + C4114) * C251 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C257 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C121 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C109 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C122 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C110 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C123 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C111 -
            (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) *
                C124 -
            (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
                C112) *
               C51160 +
           ((C2385 + C2386) * C121 + (C2387 + C2388) * C109 -
            (C2389 + C2390) * C122 - (C2391 + C2392) * C110 +
            (C2740 + C2741) * C123 + (C2742 + C2743) * C111 -
            (C2177 * C261 + C50866 * C271 + C2176 * C260 + C2171 * C270) *
                C124 -
            (C2177 * C277 + C50866 * C292 + C2176 * C272 + C2171 * C288) *
                C112) *
               C51056) *
              C51161 +
          (((C5461 + C5462) * C121 + (C5463 + C5464) * C109 -
            (C5465 + C5466) * C122 - (C5467 + C5468) * C110 +
            (C5805 + C5806) * C123 + (C5807 + C5808) * C111 -
            (C2177 * C402 + C50866 * C412 + C2176 * C401 + C2171 * C411) *
                C124 -
            (C2177 * C418 + C50866 * C433 + C2176 * C413 + C2171 * C429) *
                C112) *
               C51160 +
           ((C3137 + C3136) * C121 + (C3135 + C3134) * C109 -
            (C3133 + C3132) * C122 - (C3139 + C3138) * C110 +
            (C2176 * C785 + C2171 * C790 + C2177 * C786 + C50866 * C791) *
                C123 +
            (C2176 * C794 + C2171 * C800 + C2177 * C795 + C50866 * C801) *
                C111 -
            (C2177 * C787 + C50866 * C796 + C2176 * C786 + C2171 * C791) *
                C124 -
            (C2177 * C797 + C50866 * C802 + C2176 * C795 + C2171 * C801) *
                C112) *
               C51056) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C251 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51160 +
            ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
             (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
             (C5465 + C5466) * C257 - (C5467 + C5468) * C50884) *
                C51160 +
            ((C3137 + C3136) * C256 + (C3135 + C3134) * C251 -
             (C3133 + C3132) * C257 - (C3139 + C3138) * C50884) *
                C51056) *
               C51082) *
              C396 +
          ((((C5466 + C5465) * C257 -
             ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
             (C5468 + C5467) * C50884) *
                C51160 +
            ((C3132 + C3133) * C257 -
             ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
             (C3138 + C3139) * C50884) *
                C51056) *
               C51161 +
           (((C5474 + C5473) * C257 -
             ((C5472 + C5471) * C251 + (C5470 + C5469) * C256) +
             (C5476 + C5475) * C50884) *
                C51160 +
            ((C6019 + C6020) * C257 - (C6431 * C251 + C6432 * C256) +
             (C6021 + C6022) * C50884) *
                C51056) *
               C51082) *
              C397 +
          ((C5495 * C51160 +
            ((C3590 + C3591) * C256 + (C3592 + C3593) * C251 -
             (C6020 + C6019) * C257 - (C6022 + C6021) * C50884) *
                C51056) *
               C51161 +
           (((C5482 + C5481) * C256 + (C5480 + C5479) * C251 -
             (C5478 + C5477) * C257 - (C5484 + C5483) * C50884) *
                C51160 +
            ((C6434 + C6435) * C256 + (C6436 + C6437) * C251 -
             (C2177 * C6006 + C50866 * C6007 + C2176 * C4507 + C2171 * C4515) *
                 C257 -
             (C2177 * C6008 + C50866 * C6009 + C2176 * C4513 + C2171 * C4519) *
                 C50884) *
                C51056) *
               C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C542 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51190 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C543 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C51191 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                 C544 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                 C539) *
                C51160 +
            ((C2385 + C2386) * C542 + (C2387 + C2388) * C51190 -
             (C2389 + C2390) * C543 - (C2391 + C2392) * C51191 +
             (C2740 + C2741) * C544 + (C2742 + C2743) * C539) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C542 + (C5463 + C5464) * C51190 -
             (C5465 + C5466) * C543 - (C5467 + C5468) * C51191 +
             (C5805 + C5806) * C544 + (C5807 + C5808) * C539) *
                C51160 +
            ((C3137 + C3136) * C542 + (C3135 + C3134) * C51190 -
             (C3133 + C3132) * C543 - (C3139 + C3138) * C51191 +
             (C14113 + C14114) * C544 + (C14115 + C14116) * C539) *
                C51056) *
               C51082) *
              C51148 +
          ((((C5466 + C5465) * C543 -
             ((C5464 + C5463) * C51190 + (C5462 + C5461) * C542) +
             (C5468 + C5467) * C51191 - (C5806 + C5805) * C544 -
             (C5808 + C5807) * C539) *
                C51160 +
            ((C3132 + C3133) * C543 -
             ((C3134 + C3135) * C51190 + (C3136 + C3137) * C542) +
             (C3138 + C3139) * C51191 - (C14114 + C14113) * C544 -
             (C14116 + C14115) * C539) *
                C51056) *
               C51161 +
           (((C5474 + C5473) * C543 -
             ((C5472 + C5471) * C51190 + (C5470 + C5469) * C542) +
             (C5476 + C5475) * C51191 - (C5810 + C5809) * C544 -
             (C5812 + C5811) * C539) *
                C51160 +
            ((C6019 + C6020) * C543 - (C6431 * C51190 + C6432 * C542) +
             (C6021 + C6022) * C51191 -
             (C2177 * C1095 + C50866 * C1103 + C2176 * C1096 + C2171 * C1104) *
                 C544 -
             (C2177 * C1099 + C50866 * C1107 + C2176 * C1100 + C2171 * C1108) *
                 C539) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C121 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C109 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C122 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C110 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C123 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C111 -
            (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) *
                C124 -
            (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
                C112) *
               C51160 +
           ((C2385 + C2386) * C121 + (C2387 + C2388) * C109 -
            (C2389 + C2390) * C122 - (C2391 + C2392) * C110 +
            (C2740 + C2741) * C123 + (C2742 + C2743) * C111 -
            (C2177 * C261 + C50866 * C271 + C2176 * C260 + C2171 * C270) *
                C124 -
            (C2177 * C277 + C50866 * C292 + C2176 * C272 + C2171 * C288) *
                C112) *
               C51056) *
              C51161 +
          (((C5461 + C5462) * C121 + (C5463 + C5464) * C109 -
            (C5465 + C5466) * C122 - (C5467 + C5468) * C110 +
            (C5805 + C5806) * C123 + (C5807 + C5808) * C111 -
            (C2177 * C402 + C50866 * C412 + C2176 * C401 + C2171 * C411) *
                C124 -
            (C2177 * C418 + C50866 * C433 + C2176 * C413 + C2171 * C429) *
                C112) *
               C51160 +
           ((C3137 + C3136) * C121 + (C3135 + C3134) * C109 -
            (C3133 + C3132) * C122 - (C3139 + C3138) * C110 +
            (C2176 * C785 + C2171 * C790 + C2177 * C786 + C50866 * C791) *
                C123 +
            (C2176 * C794 + C2171 * C800 + C2177 * C795 + C50866 * C801) *
                C111 -
            (C2177 * C787 + C50866 * C796 + C2176 * C786 + C2171 * C791) *
                C124 -
            (C2177 * C797 + C50866 * C802 + C2176 * C795 + C2171 * C801) *
                C112) *
               C51056) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C251 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51160 +
            ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
             (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
             (C5465 + C5466) * C257 - (C5467 + C5468) * C50884) *
                C51160 +
            ((C3137 + C3136) * C256 + (C3135 + C3134) * C251 -
             (C3133 + C3132) * C257 - (C3139 + C3138) * C50884) *
                C51056) *
               C51082) *
              C50920 * C253 +
          ((((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C50884) *
                C51160 +
            ((C2398 + C2397) * C257 -
             ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
             (C2400 + C2399) * C50884) *
                C51056) *
               C51161 +
           (((C3132 + C3133) * C257 -
             ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
             (C3138 + C3139) * C50884) *
                C51160 +
            ((C3140 + C3141) * C257 - (C4099 * C251 + C4100 * C256) +
             (C3146 + C3147) * C50884) *
                C51056) *
               C51082) *
              C50920 * C254 +
          ((C2419 * C51160 +
            ((C2406 + C2405) * C256 + (C2404 + C2403) * C251 -
             (C2402 + C2401) * C257 - (C2408 + C2407) * C50884) *
                C51056) *
               C51161 +
           (((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
             (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
                C51160 +
            ((C4111 + C4112) * C256 + (C4113 + C4114) * C251 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C257 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51160 +
            ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
             (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
             (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
                C51160 +
            (C14569 * C50007 + C14570 * C51139 - C14571 * C50000 -
             C14572 * C50884) *
                C51056) *
               C51082) *
              C50920 * C51192 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C51160 +
            ((C2398 + C2397) * C50000 -
             ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
             (C2400 + C2399) * C50884) *
                C51056) *
               C51161 +
           ((C14573 * C50000 - (C14574 * C51139 + C14575 * C50007) +
             C14576 * C50884) *
                C51160 +
            ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
             (C3146 + C3147) * C50884) *
                C51056) *
               C51082) *
              C50920 * C51193 +
          ((C3750 * C51160 +
            ((C2406 + C2405) * C50007 + (C2404 + C2403) * C51139 -
             (C2402 + C2401) * C50000 - (C2408 + C2407) * C50884) *
                C51056) *
               C51161 +
           (((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
             (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
                C51160 +
            ((C4111 + C4112) * C50007 + (C4113 + C4114) * C51139 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C50000 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C980 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
                C51161 +
            (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
             C15115 * C51056) *
                C51082) *
               C51148 -
           ((C6441 * C51056 +
             ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51160) *
                C51082 +
            (C15116 * C51056 +
             ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51160) *
                C51161) *
               C50984) *
              C51192 +
          (((C15115 * C51160 + C15784 * C51056) * C51161 +
            (C15119 * C51160 +
             ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C4115 * C51056 + C15116 * C51160) * C51082 +
            (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
             ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
                C51161) *
               C51148) *
              C51193 +
          (((C3412 * C51160 +
             ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C51056) *
                C51161 +
            (C15784 * C51160 +
             ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C51056) *
                C51082) *
               C51148 -
           ((((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                  C50879 +
              (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                  C980) *
                 C51056 +
             ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51160) *
                C51082 +
            (((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51056 +
             C4115 * C51160) *
                C51161) *
               C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51160 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
               C51161 +
           (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
            (C14569 * C980 + C14570 * C50879) * C51056) *
               C51082) *
              C50920 * C976 -
          ((C4115 * C51056 + (C14574 * C50879 + C14575 * C980) * C51160) *
               C51082 +
           (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
               C51161) *
              C50920 * C977 +
          ((C3412 * C51160 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C51056) *
               C51161 +
           (((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51160 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C51056) *
               C51082) *
              C50920 * C978 -
          ((((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C51056 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51160) *
               C51082 +
           (((C3418 + C3417) * C50879 + (C3416 + C3415) * C980) * C51056 +
            C3419 * C51160) *
               C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C906 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C901 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C907 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C902 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                 C908 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
             (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
             (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
             (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
             (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
                C51160 +
            (C14569 * C906 + C14570 * C901 - C14571 * C907 - C14572 * C902 +
             (C14113 + C14114) * C908 + (C14115 + C14116) * C903) *
                C51056) *
               C51082) *
              C50920 * C904 +
          ((((C2390 + C2389) * C907 -
             ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
             (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
             (C2743 + C2742) * C903) *
                C51160 +
            ((C2398 + C2397) * C907 -
             ((C2396 + C2395) * C901 + (C2394 + C2393) * C906) +
             (C2400 + C2399) * C902 - (C2745 + C2744) * C908 -
             (C2747 + C2746) * C903) *
                C51056) *
               C51161 +
           ((C14573 * C907 - (C14574 * C901 + C14575 * C906) + C14576 * C902 -
             (C14114 + C14113) * C908 - (C14116 + C14115) * C903) *
                C51160 +
            ((C3140 + C3141) * C907 - (C4099 * C901 + C4100 * C906) +
             (C3146 + C3147) * C902 -
             (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                 C908 -
             (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                 C903) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C980 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
                C51161 +
            (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
             C15115 * C51056) *
                C51082) *
               C396 -
           ((C6441 * C51056 +
             ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51160) *
                C51082 +
            (C15116 * C51056 +
             ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51160) *
                C51161) *
               C397 +
           ((C6433 * C51160 + C15119 * C51056) * C51161 +
            (((C5482 + C5481) * C980 + (C5480 + C5479) * C50879) * C51160 +
             ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51056) *
                C51082) *
               C398) *
              C904 +
          (((C15115 * C51160 +
             ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51056) *
                C51161 +
            (C15119 * C51160 +
             ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51056) *
                C51082) *
               C397 -
           ((C4115 * C51056 + C15116 * C51160) * C51082 +
            (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
             ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
                C51161) *
               C396 -
           ((((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                  C50879 +
              (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                  C980) *
                 C51056 +
             ((C6437 + C6436) * C50879 + (C6435 + C6434) * C980) * C51160) *
                C51082 +
            (((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51056 +
             C6441 * C51160) *
                C51161) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C50007 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C51139 -
              (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                  C50000 -
              (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                  C50884) *
                 C51160 +
             ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
              (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                 C51056) *
                C51161 +
            (((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
              (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
                 C51160 +
             C15584 * C51056) *
                C51082) *
               C51148 +
           ((((C5466 + C5465) * C50000 -
              ((C5464 + C5463) * C51139 + (C5462 + C5461) * C50007) +
              (C5468 + C5467) * C50884) *
                 C51160 +
             C15585 * C51056) *
                C51161 +
            (((C5474 + C5473) * C50000 -
              ((C5472 + C5471) * C51139 + (C5470 + C5469) * C50007) +
              (C5476 + C5475) * C50884) *
                 C51160 +
             ((C6019 + C6020) * C50000 - (C6431 * C51139 + C6432 * C50007) +
              (C6021 + C6022) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C904 +
          (((((C2390 + C2389) * C50000 -
              ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
              (C2392 + C2391) * C50884) *
                 C51160 +
             ((C2398 + C2397) * C50000 -
              ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
              (C2400 + C2399) * C50884) *
                 C51056) *
                C51161 +
            (C15585 * C51160 +
             ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
              (C3146 + C3147) * C50884) *
                 C51056) *
                C51082) *
               C51148 +
           ((C15584 * C51160 +
             ((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
              (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
                 C51056) *
                C51161 +
            ((C15113 * C50007 + C15114 * C51139 - (C6020 + C6019) * C50000 -
              (C6022 + C6021) * C50884) *
                 C51160 +
             ((C3594 + C3595) * C50007 + (C3596 + C3597) * C51139 -
              (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                  C50000 -
              (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C906 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C901 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C907 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C902 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                 C908 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
             (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
             (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
             (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
             (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
                C51160 +
            (C14569 * C906 + C14570 * C901 - C14571 * C907 - C14572 * C902 +
             (C14113 + C14114) * C908 + (C14115 + C14116) * C903) *
                C51056) *
               C51082) *
              C50920 * C904 +
          ((((C2390 + C2389) * C907 -
             ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
             (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
             (C2743 + C2742) * C903) *
                C51160 +
            ((C2398 + C2397) * C907 -
             ((C2396 + C2395) * C901 + (C2394 + C2393) * C906) +
             (C2400 + C2399) * C902 - (C2745 + C2744) * C908 -
             (C2747 + C2746) * C903) *
                C51056) *
               C51161 +
           ((C14573 * C907 - (C14574 * C901 + C14575 * C906) + C14576 * C902 -
             (C14114 + C14113) * C908 - (C14116 + C14115) * C903) *
                C51160 +
            ((C3140 + C3141) * C907 - (C4099 * C901 + C4100 * C906) +
             (C3146 + C3147) * C902 -
             (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                 C908 -
             (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                 C903) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51160 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
               C51161 +
           (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
            (C14569 * C980 + C14570 * C50879) * C51056) *
               C51082) *
              C50920 * C976 -
          ((C4115 * C51056 + (C14574 * C50879 + C14575 * C980) * C51160) *
               C51082 +
           (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
               C51161) *
              C50920 * C977 +
          ((C3412 * C51160 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C51056) *
               C51161 +
           (((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51160 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C51056) *
               C51082) *
              C50920 * C978 -
          ((((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C51056 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51160) *
               C51082 +
           (((C3418 + C3417) * C50879 + (C3416 + C3415) * C980) * C51056 +
            C3419 * C51160) *
               C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C50007 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C51139 -
              (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                  C50000 -
              (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                  C50884) *
                 C51160 +
             ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
              (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                 C51056) *
                C51161 +
            (((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
              (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
                 C51160 +
             C15584 * C51056) *
                C51082) *
               C1558 +
           ((((C5466 + C5465) * C50000 -
              ((C5464 + C5463) * C51139 + (C5462 + C5461) * C50007) +
              (C5468 + C5467) * C50884) *
                 C51160 +
             C15585 * C51056) *
                C51161 +
            (((C5474 + C5473) * C50000 -
              ((C5472 + C5471) * C51139 + (C5470 + C5469) * C50007) +
              (C5476 + C5475) * C50884) *
                 C51160 +
             ((C6019 + C6020) * C50000 - (C6431 * C51139 + C6432 * C50007) +
              (C6021 + C6022) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C51147 +
          (((((C2390 + C2389) * C50000 -
              ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
              (C2392 + C2391) * C50884) *
                 C51160 +
             ((C2398 + C2397) * C50000 -
              ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
              (C2400 + C2399) * C50884) *
                 C51056) *
                C51161 +
            (C15585 * C51160 +
             ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
              (C3146 + C3147) * C50884) *
                 C51056) *
                C51082) *
               C1558 +
           ((C15584 * C51160 +
             (C15780 * C50007 + C15781 * C51139 - (C3141 + C3140) * C50000 -
              (C3147 + C3146) * C50884) *
                 C51056) *
                C51161 +
            ((C15113 * C50007 + C15114 * C51139 - (C6020 + C6019) * C50000 -
              (C6022 + C6021) * C50884) *
                 C51160 +
             ((C3594 + C3595) * C50007 + (C3596 + C3597) * C51139 -
              (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                  C50000 -
              (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C980 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
                C51161 +
            (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
             C15115 * C51056) *
                C51082) *
               C51194 -
           ((C6441 * C51056 +
             ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51160) *
                C51082 +
            (C15116 * C51056 +
             ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51160) *
                C51161) *
               C51195 +
           ((C6433 * C51160 + C15119 * C51056) * C51161 +
            (((C5482 + C5481) * C980 + (C5480 + C5479) * C50879) * C51160 +
             ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51056) *
                C51082) *
               C1974) *
              C51147 +
          (((C15115 * C51160 + C15784 * C51056) * C51161 +
            (C15119 * C51160 +
             ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51056) *
                C51082) *
               C51195 -
           ((C4115 * C51056 + C15116 * C51160) * C51082 +
            (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
             ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
                C51161) *
               C51194 -
           ((((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                  C50879 +
              (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                  C980) *
                 C51056 +
             ((C6437 + C6436) * C50879 + (C6435 + C6434) * C980) * C51160) *
                C51082 +
            (((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51056 +
             C6441 * C51160) *
                C51161) *
               C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C980 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
                C51161 +
            (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
             C15115 * C51056) *
                C51082) *
               C1558 -
           ((C6441 * C51056 +
             ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51160) *
                C51082 +
            (C15116 * C51056 +
             ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51160) *
                C51161) *
               C50984) *
              C253 +
          (((C15115 * C51160 + C15784 * C51056) * C51161 +
            (C15119 * C51160 +
             ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C4115 * C51056 + C15116 * C51160) * C51082 +
            (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
             ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
                C51161) *
               C1558) *
              C254 +
          (((C3412 * C51160 +
             ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C51056) *
                C51161 +
            (C15784 * C51160 +
             ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C51056) *
                C51082) *
               C1558 -
           ((((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                  C50879 +
              (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                  C980) *
                 C51056 +
             ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51160) *
                C51082 +
            (((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51056 +
             C4115 * C51160) *
                C51161) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C906 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C901 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C907 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C902 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                 C908 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
             (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
             (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
             (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
             (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
                C51160 +
            (C14569 * C906 + C14570 * C901 - C14571 * C907 - C14572 * C902 +
             (C14113 + C14114) * C908 + (C14115 + C14116) * C903) *
                C51056) *
               C51082) *
              C1558 +
          ((((C5466 + C5465) * C907 -
             ((C5464 + C5463) * C901 + (C5462 + C5461) * C906) +
             (C5468 + C5467) * C902 - (C5806 + C5805) * C908 -
             (C5808 + C5807) * C903) *
                C51160 +
            (C14573 * C907 - (C14574 * C901 + C14575 * C906) + C14576 * C902 -
             (C14114 + C14113) * C908 - (C14116 + C14115) * C903) *
                C51056) *
               C51161 +
           (((C5474 + C5473) * C907 -
             ((C5472 + C5471) * C901 + (C5470 + C5469) * C906) +
             (C5476 + C5475) * C902 - (C5810 + C5809) * C908 -
             (C5812 + C5811) * C903) *
                C51160 +
            ((C6019 + C6020) * C907 - (C6431 * C901 + C6432 * C906) +
             (C6021 + C6022) * C902 -
             (C2177 * C1095 + C50866 * C1103 + C2176 * C1096 + C2171 * C1104) *
                 C908 -
             (C2177 * C1099 + C50866 * C1107 + C2176 * C1100 + C2171 * C1108) *
                 C903) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51160 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
               C51161 +
           (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
            C15115 * C51056) *
               C51082) *
              C1724 -
          ((C6441 * C51056 +
            ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51160) *
               C51082 +
           (C15116 * C51056 +
            ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51160) *
               C51161) *
              C1725 +
          ((C6433 * C51160 + C15119 * C51056) * C51161 +
           (((C5482 + C5481) * C980 + (C5480 + C5479) * C50879) * C51160 +
            ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51056) *
               C51082) *
              C1726 -
          ((((C2177 * C6414 + C50866 * C6418 + C2176 * C6415 + C2171 * C6419) *
                 C50879 +
             (C2177 * C6412 + C50866 * C6416 + C2176 * C6413 + C2171 * C6417) *
                 C980) *
                C51056 +
            ((C7342 + C7341) * C50879 + (C7340 + C7339) * C980) * C51160) *
               C51082 +
           (((C6437 + C6436) * C50879 + (C6435 + C6434) * C980) * C51056 +
            C7343 * C51160) *
               C51161) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51160 +
            ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
             (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
             (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
                C51160 +
            C15584 * C51056) *
               C51082) *
              C51194 +
          ((((C5466 + C5465) * C50000 -
             ((C5464 + C5463) * C51139 + (C5462 + C5461) * C50007) +
             (C5468 + C5467) * C50884) *
                C51160 +
            C15585 * C51056) *
               C51161 +
           (((C5474 + C5473) * C50000 -
             ((C5472 + C5471) * C51139 + (C5470 + C5469) * C50007) +
             (C5476 + C5475) * C50884) *
                C51160 +
            ((C6019 + C6020) * C50000 - (C6431 * C51139 + C6432 * C50007) +
             (C6021 + C6022) * C50884) *
                C51056) *
               C51082) *
              C51195 +
          ((C7691 * C51160 +
            (C15113 * C50007 + C15114 * C51139 - (C6020 + C6019) * C50000 -
             (C6022 + C6021) * C50884) *
                C51056) *
               C51161 +
           (((C5482 + C5481) * C50007 + (C5480 + C5479) * C51139 -
             (C5478 + C5477) * C50000 - (C5484 + C5483) * C50884) *
                C51160 +
            ((C6434 + C6435) * C50007 + (C6436 + C6437) * C51139 -
             (C2177 * C6006 + C50866 * C6007 + C2176 * C4507 + C2171 * C4515) *
                 C50000 -
             (C2177 * C6008 + C50866 * C6009 + C2176 * C4513 + C2171 * C4519) *
                 C50884) *
                C51056) *
               C51082) *
              C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C906 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C901 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C907 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C902 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                 C908 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
             (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
             (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
                C51056) *
               C51161 +
           (((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
             (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
             (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
                C51160 +
            (C14569 * C906 + C14570 * C901 - C14571 * C907 - C14572 * C902 +
             (C14113 + C14114) * C908 + (C14115 + C14116) * C903) *
                C51056) *
               C51082) *
              C1558 +
          ((((C5466 + C5465) * C907 -
             ((C5464 + C5463) * C901 + (C5462 + C5461) * C906) +
             (C5468 + C5467) * C902 - (C5806 + C5805) * C908 -
             (C5808 + C5807) * C903) *
                C51160 +
            (C14573 * C907 - (C14574 * C901 + C14575 * C906) + C14576 * C902 -
             (C14114 + C14113) * C908 - (C14116 + C14115) * C903) *
                C51056) *
               C51161 +
           (((C5474 + C5473) * C907 -
             ((C5472 + C5471) * C901 + (C5470 + C5469) * C906) +
             (C5476 + C5475) * C902 - (C5810 + C5809) * C908 -
             (C5812 + C5811) * C903) *
                C51160 +
            ((C6019 + C6020) * C907 - (C6431 * C901 + C6432 * C906) +
             (C6021 + C6022) * C902 -
             (C2177 * C1095 + C50866 * C1103 + C2176 * C1096 + C2171 * C1104) *
                 C908 -
             (C2177 * C1099 + C50866 * C1107 + C2176 * C1100 + C2171 * C1108) *
                 C903) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                  C980 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C51056) *
                C51161 +
            (((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51160 +
             C15115 * C51056) *
                C51082) *
               C1558 -
           ((C6441 * C51056 +
             ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51160) *
                C51082 +
            (C15116 * C51056 +
             ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51160) *
                C51161) *
               C50984) *
              C253 +
          (((C15115 * C51160 + C15784 * C51056) * C51161 +
            (C15119 * C51160 +
             ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C4115 * C51056 + C15116 * C51160) * C51082 +
            (((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C51056 +
             ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51160) *
                C51161) *
               C1558) *
              C254 +
          (((C3412 * C51160 +
             ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C51056) *
                C51161 +
            (C15784 * C51160 +
             ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C51056) *
                C51082) *
               C1558 -
           ((((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                  C50879 +
              (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                  C980) *
                 C51056 +
             ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51160) *
                C51082 +
            (((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51056 +
             C4115 * C51160) *
                C51161) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C542 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51190 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C543 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C51191 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C544 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C539) *
               C2173 +
           ((C2385 + C2386) * C542 + (C2387 + C2388) * C51190 -
            (C2389 + C2390) * C543 - (C2391 + C2392) * C51191 +
            (C2740 + C2741) * C544 + (C2742 + C2743) * C539) *
               C2174 +
           (C2409 * C542 + C2410 * C51190 - C2411 * C543 - C2412 * C51191 +
            (C2744 + C2745) * C544 + (C2746 + C2747) * C539) *
               C2175) *
              C51018 * C50920 * C51147 +
          (((C2390 + C2389) * C543 -
            ((C2388 + C2387) * C51190 + (C2386 + C2385) * C542) +
            (C2392 + C2391) * C51191 - (C2741 + C2740) * C544 -
            (C2743 + C2742) * C539) *
               C2173 +
           ((C2398 + C2397) * C543 -
            ((C2396 + C2395) * C51190 + (C2394 + C2393) * C542) +
            (C2400 + C2399) * C51191 - (C2745 + C2744) * C544 -
            (C2747 + C2746) * C539) *
               C2174 +
           ((C2401 + C2402) * C543 -
            ((C2403 + C2404) * C51190 + (C2405 + C2406) * C542) +
            (C2407 + C2408) * C51191 -
            (C2177 * C981 + C50866 * C989 + C2176 * C982 + C2171 * C990) *
                C544 -
            (C2177 * C985 + C50866 * C993 + C2176 * C986 + C2171 * C994) *
                C539) *
               C2175) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C542 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51190 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C543 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51191 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C544 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C539) *
              C51006 * C51018 * C50920 * C51147 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C543 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C51190 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C542) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C51191 -
           (C120 * C545 + C108 * C546 + C119 * C261 + C107 * C271 +
            C118 * C260 + C106 * C270 + C117 * C259 + C105 * C269) *
               C544 -
           (C120 * C547 + C108 * C548 + C119 * C277 + C107 * C292 +
            C118 * C272 + C106 * C288 + C117 * C273 + C105 * C289) *
               C539) *
              C51006 * C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C542 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51190 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C543 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C51191 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C544 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C539) *
               C51006 * C5105 +
           ((C5461 + C5462) * C542 + (C5463 + C5464) * C51190 -
            (C5465 + C5466) * C543 - (C5467 + C5468) * C51191 +
            (C2176 * C400 + C2171 * C410 + C2177 * C401 + C50866 * C411) *
                C544 +
            (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50866 * C429) *
                C539) *
               C51006 * C5106 +
           (C5485 * C542 + C5486 * C51190 - C5487 * C543 - C5488 * C51191 +
            (C2176 * C406 + C2171 * C421 + C2177 * C407 + C50866 * C422) *
                C544 +
            (C2176 * C425 + C2171 * C436 + C2177 * C426 + C50866 * C437) *
                C539) *
               C51006 * C5107) *
              C50920 * C51147 +
          (((C2390 + C2389) * C543 -
            ((C2388 + C2387) * C51190 + (C2386 + C2385) * C542) +
            (C2392 + C2391) * C51191 - (C2741 + C2740) * C544 -
            (C2743 + C2742) * C539) *
               C51006 * C5105 +
           ((C3132 + C3133) * C543 -
            ((C3134 + C3135) * C51190 + (C3136 + C3137) * C542) +
            (C3138 + C3139) * C51191 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C544 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C539) *
               C51006 * C5106 +
           ((C2176 * C1097 + C2171 * C1105 + C2177 * C1096 + C50866 * C1104) *
                C543 -
            ((C3593 + C3592) * C51190 + (C3591 + C3590) * C542) +
            (C2176 * C1101 + C2171 * C1109 + C2177 * C1100 + C50866 * C1108) *
                C51191 -
            (C2177 * C1095 + C50866 * C1103 + C2176 * C1096 + C2171 * C1104) *
                C544 -
            (C2177 * C1099 + C50866 * C1107 + C2176 * C1100 + C2171 * C1108) *
                C539) *
               C51006 * C5107) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C251 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C2173 +
            ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
             (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
                C2174 +
            C2419 * C2175) *
               C51018 * C51148 +
           (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                 C257 -
             ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                  C251 +
              (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                  C256) +
             (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                 C50884) *
                C2173 +
            ((C3132 + C3133) * C257 -
             ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
             (C3138 + C3139) * C50884) *
                C2174 +
            ((C3140 + C3141) * C257 -
             ((C3142 + C3143) * C251 + (C3144 + C3145) * C256) +
             (C3146 + C3147) * C50884) *
                C2175) *
               C51018 * C50984) *
              C51147 +
          ((((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C50884) *
                C2173 +
            ((C2398 + C2397) * C257 -
             ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
             (C2400 + C2399) * C50884) *
                C2174 +
            ((C2401 + C2402) * C257 -
             ((C2403 + C2404) * C251 + (C2405 + C2406) * C256) +
             (C2407 + C2408) * C50884) *
                C2175) *
               C51018 * C51148 +
           (((C3137 + C3136) * C256 + (C3135 + C3134) * C251 -
             (C3133 + C3132) * C257 - (C3139 + C3138) * C50884) *
                C2173 +
            ((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
             (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
                C2174 +
            ((C2176 * C3087 + C2171 * C3090 + C2177 * C3088 + C50866 * C3091) *
                 C256 +
             (C2176 * C3092 + C2171 * C3096 + C2177 * C3093 + C50866 * C3097) *
                 C251 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C257 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C2175) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C256 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C251 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C257 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
             C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                C257 -
            ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
              C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                 C251 +
             (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
              C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                 C256) +
            (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
             C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                C50884) *
               C51006 * C51018 * C50984) *
              C51147 +
          (((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
             C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                C257 -
            ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
              C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                 C251 +
             (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
              C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                 C256) +
            (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
             C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C256 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C251 -
            (C120 * C787 + C108 * C796 + C119 * C786 + C107 * C791 +
             C118 * C785 + C106 * C790 + C117 * C784 + C105 * C789) *
                C257 -
            (C120 * C797 + C108 * C802 + C119 * C795 + C107 * C801 +
             C118 * C794 + C106 * C800 + C117 * C793 + C105 * C799) *
                C50884) *
               C51006 * C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C251 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51006 * C5105 +
            ((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
             (C5465 + C5466) * C257 - (C5467 + C5468) * C50884) *
                C51006 * C5106 +
            C5496 * C5107) *
               C51148 +
           (((C5466 + C5465) * C257 -
             ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
             (C5468 + C5467) * C50884) *
                C51006 * C5105 +
            ((C5474 + C5473) * C257 -
             ((C5472 + C5471) * C251 + (C5470 + C5469) * C256) +
             (C5476 + C5475) * C50884) *
                C51006 * C5106 +
            ((C5477 + C5478) * C257 -
             ((C5479 + C5480) * C251 + (C5481 + C5482) * C256) +
             (C5483 + C5484) * C50884) *
                C51006 * C5107) *
               C50984) *
              C51147 +
          ((((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C50884) *
                C51006 * C5105 +
            ((C3132 + C3133) * C257 -
             ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
             (C3138 + C3139) * C50884) *
                C51006 * C5106 +
            ((C6019 + C6020) * C257 -
             ((C3593 + C3592) * C251 + (C3591 + C3590) * C256) +
             (C6021 + C6022) * C50884) *
                C51006 * C5107) *
               C51148 +
           (((C3137 + C3136) * C256 + (C3135 + C3134) * C251 -
             (C3133 + C3132) * C257 - (C3139 + C3138) * C50884) *
                C51006 * C5105 +
            ((C3590 + C3591) * C256 + (C3592 + C3593) * C251 -
             (C6020 + C6019) * C257 - (C6022 + C6021) * C50884) *
                C51006 * C5106 +
            ((C2176 * C4508 + C2171 * C4516 + C2177 * C4507 + C50866 * C4515) *
                 C256 +
             (C2176 * C4514 + C2171 * C4520 + C2177 * C4513 + C50866 * C4519) *
                 C251 -
             (C2177 * C6006 + C50866 * C6007 + C2176 * C4507 + C2171 * C4515) *
                 C257 -
             (C2177 * C6008 + C50866 * C6009 + C2176 * C4513 + C2171 * C4519) *
                 C50884) *
                C51006 * C5107) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
               C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                  C121 +
              (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
               C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                  C109 -
              (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
               C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                  C122 -
              (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
               C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                  C110 +
              (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
               C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                  C123 +
              (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
               C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                  C111 -
              (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 +
               C118 * C129 + C106 * C140 + C117 * C128 + C105 * C135) *
                  C124 -
              (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 +
               C118 * C141 + C106 * C150 + C117 * C139 + C105 * C149) *
                  C112) *
             C51006 * C51018 * C50920 * C50908 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C256 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C251 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C257 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C50884) *
                  C51006 * C51018 * C50920 * C253 +
              ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
                C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                   C257 -
               ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
                 C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                    C251 +
                (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
                 C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                    C256) +
               (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
                C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                   C50884) *
                  C51006 * C51018 * C50920 * C254 +
              ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
                C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                   C256 +
               (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
                C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                   C251 -
               (C120 * C267 + C108 * C286 + C119 * C266 + C107 * C281 +
                C118 * C265 + C106 * C280 + C117 * C264 + C105 * C279) *
                   C257 -
               (C120 * C287 + C108 * C297 + C119 * C285 + C107 * C296 +
                C118 * C284 + C106 * C295 + C117 * C283 + C105 * C294) *
                   C50884) *
                  C51006 * C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C396 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C257 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C251 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C256) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C50884) *
              C51006 * C51018 * C397 +
          ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
            C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
               C256 +
           (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
            C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
               C251 -
           (C120 * C408 + C108 * C427 + C119 * C407 + C107 * C422 +
            C118 * C406 + C106 * C421 + C117 * C405 + C105 * C420) *
               C257 -
           (C120 * C428 + C108 * C438 + C119 * C426 + C107 * C437 +
            C118 * C425 + C106 * C436 + C117 * C424 + C105 * C435) *
               C50884) *
              C51006 * C51018 * C398) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) * C109 -
           (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) * C111 -
           (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C262 + C2171 * C276 + C2177 * C258 + C50866 * C268) * C121 +
           (C2176 * C275 + C2171 * C291 + C2177 * C274 + C50866 * C290) * C109 -
           (C2177 * C259 + C50866 * C269 + C2176 * C258 + C2171 * C268) * C122 -
           (C2177 * C273 + C50866 * C289 + C2176 * C274 + C2171 * C290) * C110 +
           (C2176 * C259 + C2171 * C269 + C2177 * C260 + C50866 * C270) * C123 +
           (C2176 * C273 + C2171 * C289 + C2177 * C272 + C50866 * C288) * C111 -
           (C2177 * C261 + C50866 * C271 + C2176 * C260 + C2171 * C270) * C124 -
           (C2177 * C277 + C50866 * C292 + C2176 * C272 + C2171 * C288) *
               C112) *
              C2174 +
          ((C2176 * C263 + C2171 * C278 + C2177 * C264 + C50866 * C279) * C121 +
           (C2176 * C282 + C2171 * C293 + C2177 * C283 + C50866 * C294) * C109 -
           (C2177 * C265 + C50866 * C280 + C2176 * C264 + C2171 * C279) * C122 -
           (C2177 * C284 + C50866 * C295 + C2176 * C283 + C2171 * C294) * C110 +
           (C2176 * C265 + C2171 * C280 + C2177 * C266 + C50866 * C281) * C123 +
           (C2176 * C284 + C2171 * C295 + C2177 * C285 + C50866 * C296) * C111 -
           (C2177 * C267 + C50866 * C286 + C2176 * C266 + C2171 * C281) * C124 -
           (C2177 * C287 + C50866 * C297 + C2176 * C285 + C2171 * C296) *
               C112) *
              C2175) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
               C2174 +
           C2419 * C2175) *
              C51018 * C50920 * C253 +
          (((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C50884) *
               C2173 +
           ((C2398 + C2397) * C257 -
            ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
            (C2400 + C2399) * C50884) *
               C2174 +
           ((C2401 + C2402) * C257 -
            ((C2403 + C2404) * C251 + (C2405 + C2406) * C256) +
            (C2407 + C2408) * C50884) *
               C2175) *
              C51018 * C50920 * C254 +
          (C2419 * C2173 +
           ((C2406 + C2405) * C256 + (C2404 + C2403) * C251 -
            (C2402 + C2401) * C257 - (C2408 + C2407) * C50884) *
               C2174 +
           ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50866 * C2328) *
                C256 +
            (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50866 * C2334) *
                C251 -
            (C2177 * C2326 + C50866 * C2331 + C2176 * C2325 + C2171 * C2328) *
                C257 -
            (C2177 * C2332 + C50866 * C2335 + C2176 * C2330 + C2171 * C2334) *
                C50884) *
               C2175) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
               C2174 +
           C2419 * C2175) *
              C51018 * C396 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C257 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C251 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C256) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C50884) *
               C2173 +
           ((C2176 * C784 + C2171 * C789 + C2177 * C785 + C50866 * C790) *
                C257 -
            ((C2177 * C793 + C50866 * C799 + C2176 * C792 + C2171 * C798) *
                 C251 +
             (C2177 * C784 + C50866 * C789 + C2176 * C783 + C2171 * C788) *
                 C256) +
            (C2176 * C793 + C2171 * C799 + C2177 * C794 + C50866 * C800) *
                C50884) *
               C2174 +
           ((C2176 * C1446 + C2171 * C1454 + C2177 * C1445 + C50866 * C1453) *
                C257 -
            ((C2177 * C1450 + C50866 * C1458 + C2176 * C1451 + C2171 * C1459) *
                 C251 +
             (C2177 * C1446 + C50866 * C1454 + C2176 * C1447 + C2171 * C1455) *
                 C256) +
            (C2176 * C1450 + C2171 * C1458 + C2177 * C1449 + C50866 * C1457) *
                C50884) *
               C2175) *
              C51018 * C397 +
          (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C256 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C251 -
            (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) *
                C257 -
            (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) *
                C50884) *
               C2173 +
           ((C2176 * C1098 + C2171 * C1106 + C2177 * C1097 + C50866 * C1105) *
                C256 +
            (C2176 * C1102 + C2171 * C1110 + C2177 * C1101 + C50866 * C1109) *
                C251 -
            (C2177 * C1096 + C50866 * C1104 + C2176 * C1097 + C2171 * C1105) *
                C257 -
            (C2177 * C1100 + C50866 * C1108 + C2176 * C1101 + C2171 * C1109) *
                C50884) *
               C2174 +
           ((C2176 * C2565 + C2171 * C2568 + C2177 * C2566 + C50866 * C2569) *
                C256 +
            (C2176 * C2570 + C2171 * C2574 + C2177 * C2571 + C50866 * C2575) *
                C251 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C257 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C2175) *
              C51018 * C398) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) * C109 -
           (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) * C111 -
           (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C51006 * C5105 +
          ((C2176 * C403 + C2171 * C417 + C2177 * C399 + C50866 * C409) * C121 +
           (C2176 * C416 + C2171 * C432 + C2177 * C415 + C50866 * C431) * C109 -
           (C2177 * C400 + C50866 * C410 + C2176 * C399 + C2171 * C409) * C122 -
           (C2177 * C414 + C50866 * C430 + C2176 * C415 + C2171 * C431) * C110 +
           (C2176 * C400 + C2171 * C410 + C2177 * C401 + C50866 * C411) * C123 +
           (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50866 * C429) * C111 -
           (C2177 * C402 + C50866 * C412 + C2176 * C401 + C2171 * C411) * C124 -
           (C2177 * C418 + C50866 * C433 + C2176 * C413 + C2171 * C429) *
               C112) *
              C51006 * C5106 +
          ((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) * C121 +
           (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) * C109 -
           (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) * C122 -
           (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) * C110 +
           (C2176 * C406 + C2171 * C421 + C2177 * C407 + C50866 * C422) * C123 +
           (C2176 * C425 + C2171 * C436 + C2177 * C426 + C50866 * C437) * C111 -
           (C2177 * C408 + C50866 * C427 + C2176 * C407 + C2171 * C422) * C124 -
           (C2177 * C428 + C50866 * C438 + C2176 * C426 + C2171 * C437) *
               C112) *
              C51006 * C5107) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C51006 * C5105 +
           ((C2176 * C403 + C2171 * C417 + C2177 * C399 + C50866 * C409) *
                C256 +
            (C2176 * C416 + C2171 * C432 + C2177 * C415 + C50866 * C431) *
                C251 -
            (C2177 * C400 + C50866 * C410 + C2176 * C399 + C2171 * C409) *
                C257 -
            (C2177 * C414 + C50866 * C430 + C2176 * C415 + C2171 * C431) *
                C50884) *
               C51006 * C5106 +
           ((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C256 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C251 -
            (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) *
                C257 -
            (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) *
                C50884) *
               C51006 * C5107) *
              C50920 * C253 +
          (((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C50884) *
               C51006 * C5105 +
           ((C3132 + C3133) * C257 -
            ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
            (C3138 + C3139) * C50884) *
               C51006 * C5106 +
           ((C2176 * C1097 + C2171 * C1105 + C2177 * C1096 + C50866 * C1104) *
                C257 -
            ((C3593 + C3592) * C251 + (C3591 + C3590) * C256) +
            (C2176 * C1101 + C2171 * C1109 + C2177 * C1100 + C50866 * C1108) *
                C50884) *
               C51006 * C5107) *
              C50920 * C254 +
          (C2419 * C51006 * C5105 +
           ((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
            (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
               C51006 * C5106 +
           ((C3594 + C3595) * C256 + (C3596 + C3597) * C251 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C257 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C51006 * C5107) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C51006 * C5105 +
           ((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
            (C5465 + C5466) * C257 - (C5467 + C5468) * C50884) *
               C51006 * C5106 +
           C5496 * C5107) *
              C396 +
          (((C5466 + C5465) * C257 -
            ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
            (C5468 + C5467) * C50884) *
               C51006 * C5105 +
           ((C5474 + C5473) * C257 -
            ((C5472 + C5471) * C251 + (C5470 + C5469) * C256) +
            (C5476 + C5475) * C50884) *
               C51006 * C5106 +
           ((C5477 + C5478) * C257 -
            ((C5479 + C5480) * C251 + (C5481 + C5482) * C256) +
            (C5483 + C5484) * C50884) *
               C51006 * C5107) *
              C397 +
          (C5496 * C5105 +
           ((C5482 + C5481) * C256 + (C5480 + C5479) * C251 -
            (C5478 + C5477) * C257 - (C5484 + C5483) * C50884) *
               C51006 * C5106 +
           ((C2176 * C5400 + C2171 * C5403 + C2177 * C5401 + C50866 * C5404) *
                C256 +
            (C2176 * C5405 + C2171 * C5409 + C2177 * C5406 + C50866 * C5410) *
                C251 -
            (C2177 * C5402 + C50866 * C5407 + C2176 * C5401 + C2171 * C5404) *
                C257 -
            (C2177 * C5408 + C50866 * C5411 + C2176 * C5406 + C2171 * C5410) *
                C50884) *
               C51006 * C5107) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C542 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51190 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C543 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C51191 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C544 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C539) *
               C2173 +
           ((C2385 + C2386) * C542 + (C2387 + C2388) * C51190 -
            (C2389 + C2390) * C543 - (C2391 + C2392) * C51191 +
            (C2740 + C2741) * C544 + (C2742 + C2743) * C539) *
               C2174 +
           (C2409 * C542 + C2410 * C51190 - C2411 * C543 - C2412 * C51191 +
            (C2744 + C2745) * C544 + (C2746 + C2747) * C539) *
               C2175) *
              C51018 * C51148 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C543 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C51190 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C542) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C51191 -
            (C2177 * C401 + C50866 * C411 + C2176 * C400 + C2171 * C410) *
                C544 -
            (C2177 * C413 + C50866 * C429 + C2176 * C414 + C2171 * C430) *
                C539) *
               C2173 +
           ((C2176 * C784 + C2171 * C789 + C2177 * C785 + C50866 * C790) *
                C543 -
            ((C2177 * C793 + C50866 * C799 + C2176 * C792 + C2171 * C798) *
                 C51190 +
             (C2177 * C784 + C50866 * C789 + C2176 * C783 + C2171 * C788) *
                 C542) +
            (C2176 * C793 + C2171 * C799 + C2177 * C794 + C50866 * C800) *
                C51191 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C544 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C539) *
               C2174 +
           ((C2176 * C1446 + C2171 * C1454 + C2177 * C1445 + C50866 * C1453) *
                C543 -
            ((C2177 * C1450 + C50866 * C1458 + C2176 * C1451 + C2171 * C1459) *
                 C51190 +
             (C2177 * C1446 + C50866 * C1454 + C2176 * C1447 + C2171 * C1455) *
                 C542) +
            (C2176 * C1450 + C2171 * C1458 + C2177 * C1449 + C50866 * C1457) *
                C51191 -
            (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                C544 -
            (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                C539) *
               C2175) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C542 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51190 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C543 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51191 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C544 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C539) *
              C51006 * C51018 * C51148 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C543 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C51190 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C542) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C51191 -
           (C120 * C649 + C108 * C650 + C119 * C402 + C107 * C412 +
            C118 * C401 + C106 * C411 + C117 * C400 + C105 * C410) *
               C544 -
           (C120 * C651 + C108 * C652 + C119 * C418 + C107 * C433 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C539) *
              C51006 * C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C542 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51190 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C543 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C51191 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C544 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C539) *
               C51006 * C5105 +
           ((C5461 + C5462) * C542 + (C5463 + C5464) * C51190 -
            (C5465 + C5466) * C543 - (C5467 + C5468) * C51191 +
            (C5805 + C5806) * C544 + (C5807 + C5808) * C539) *
               C51006 * C5106 +
           (C5485 * C542 + C5486 * C51190 - C5487 * C543 - C5488 * C51191 +
            (C5809 + C5810) * C544 + (C5811 + C5812) * C539) *
               C51006 * C5107) *
              C51148 +
          (((C5466 + C5465) * C543 -
            ((C5464 + C5463) * C51190 + (C5462 + C5461) * C542) +
            (C5468 + C5467) * C51191 - (C5806 + C5805) * C544 -
            (C5808 + C5807) * C539) *
               C51006 * C5105 +
           ((C5474 + C5473) * C543 -
            ((C5472 + C5471) * C51190 + (C5470 + C5469) * C542) +
            (C5476 + C5475) * C51191 - (C5810 + C5809) * C544 -
            (C5812 + C5811) * C539) *
               C51006 * C5106 +
           ((C5477 + C5478) * C543 -
            ((C5479 + C5480) * C51190 + (C5481 + C5482) * C542) +
            (C5483 + C5484) * C51191 -
            (C2177 * C1728 + C50866 * C1736 + C2176 * C1729 + C2171 * C1737) *
                C544 -
            (C2177 * C1732 + C50866 * C1740 + C2176 * C1733 + C2171 * C1741) *
                C539) *
               C51006 * C5107) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C50920 * C253 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C257 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C251 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C256) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C50884) *
              C51006 * C51018 * C50920 * C254 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C256 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C251 -
           (C120 * C267 + C108 * C286 + C119 * C266 + C107 * C281 +
            C118 * C265 + C106 * C280 + C117 * C264 + C105 * C279) *
               C257 -
           (C120 * C287 + C108 * C297 + C119 * C285 + C107 * C296 +
            C118 * C284 + C106 * C295 + C117 * C283 + C105 * C294) *
               C50884) *
              C51006 * C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51006 * C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) * C109 -
           (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) * C111 -
           (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C262 + C2171 * C276 + C2177 * C258 + C50866 * C268) * C121 +
           (C2176 * C275 + C2171 * C291 + C2177 * C274 + C50866 * C290) * C109 -
           (C2177 * C259 + C50866 * C269 + C2176 * C258 + C2171 * C268) * C122 -
           (C2177 * C273 + C50866 * C289 + C2176 * C274 + C2171 * C290) * C110 +
           (C2176 * C259 + C2171 * C269 + C2177 * C260 + C50866 * C270) * C123 +
           (C2176 * C273 + C2171 * C289 + C2177 * C272 + C50866 * C288) * C111 -
           (C2177 * C261 + C50866 * C271 + C2176 * C260 + C2171 * C270) * C124 -
           (C2177 * C277 + C50866 * C292 + C2176 * C272 + C2171 * C288) *
               C112) *
              C2174 +
          ((C2176 * C263 + C2171 * C278 + C2177 * C264 + C50866 * C279) * C121 +
           (C2176 * C282 + C2171 * C293 + C2177 * C283 + C50866 * C294) * C109 -
           (C2177 * C265 + C50866 * C280 + C2176 * C264 + C2171 * C279) * C122 -
           (C2177 * C284 + C50866 * C295 + C2176 * C283 + C2171 * C294) * C110 +
           (C2176 * C265 + C2171 * C280 + C2177 * C266 + C50866 * C281) * C123 +
           (C2176 * C284 + C2171 * C295 + C2177 * C285 + C50866 * C296) * C111 -
           (C2177 * C267 + C50866 * C286 + C2176 * C266 + C2171 * C281) * C124 -
           (C2177 * C287 + C50866 * C297 + C2176 * C285 + C2171 * C296) *
               C112) *
              C2175) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
               C2174 +
           C2419 * C2175) *
              C51018 * C50920 * C253 +
          (((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C50884) *
               C2173 +
           ((C2398 + C2397) * C257 -
            ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
            (C2400 + C2399) * C50884) *
               C2174 +
           ((C2401 + C2402) * C257 -
            ((C2403 + C2404) * C251 + (C2405 + C2406) * C256) +
            (C2407 + C2408) * C50884) *
               C2175) *
              C51018 * C50920 * C254 +
          (C2419 * C2173 +
           ((C2406 + C2405) * C256 + (C2404 + C2403) * C251 -
            (C2402 + C2401) * C257 - (C2408 + C2407) * C50884) *
               C2174 +
           ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50866 * C2328) *
                C256 +
            (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50866 * C2334) *
                C251 -
            (C2177 * C2326 + C50866 * C2331 + C2176 * C2325 + C2171 * C2328) *
                C257 -
            (C2177 * C2332 + C50866 * C2335 + C2176 * C2330 + C2171 * C2334) *
                C50884) *
               C2175) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) * C109 -
           (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) * C111 -
           (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C51006 * C5105 +
          ((C2176 * C403 + C2171 * C417 + C2177 * C399 + C50866 * C409) * C121 +
           (C2176 * C416 + C2171 * C432 + C2177 * C415 + C50866 * C431) * C109 -
           (C2177 * C400 + C50866 * C410 + C2176 * C399 + C2171 * C409) * C122 -
           (C2177 * C414 + C50866 * C430 + C2176 * C415 + C2171 * C431) * C110 +
           (C2176 * C400 + C2171 * C410 + C2177 * C401 + C50866 * C411) * C123 +
           (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50866 * C429) * C111 -
           (C2177 * C402 + C50866 * C412 + C2176 * C401 + C2171 * C411) * C124 -
           (C2177 * C418 + C50866 * C433 + C2176 * C413 + C2171 * C429) *
               C112) *
              C51006 * C5106 +
          ((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) * C121 +
           (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) * C109 -
           (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) * C122 -
           (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) * C110 +
           (C2176 * C406 + C2171 * C421 + C2177 * C407 + C50866 * C422) * C123 +
           (C2176 * C425 + C2171 * C436 + C2177 * C426 + C50866 * C437) * C111 -
           (C2177 * C408 + C50866 * C427 + C2176 * C407 + C2171 * C422) * C124 -
           (C2177 * C428 + C50866 * C438 + C2176 * C426 + C2171 * C437) *
               C112) *
              C51006 * C5107) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C51006 * C5105 +
           ((C2176 * C403 + C2171 * C417 + C2177 * C399 + C50866 * C409) *
                C256 +
            (C2176 * C416 + C2171 * C432 + C2177 * C415 + C50866 * C431) *
                C251 -
            (C2177 * C400 + C50866 * C410 + C2176 * C399 + C2171 * C409) *
                C257 -
            (C2177 * C414 + C50866 * C430 + C2176 * C415 + C2171 * C431) *
                C50884) *
               C51006 * C5106 +
           ((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C256 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C251 -
            (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) *
                C257 -
            (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) *
                C50884) *
               C51006 * C5107) *
              C50920 * C253 +
          (((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C50884) *
               C51006 * C5105 +
           ((C3132 + C3133) * C257 -
            ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
            (C3138 + C3139) * C50884) *
               C51006 * C5106 +
           ((C2176 * C1097 + C2171 * C1105 + C2177 * C1096 + C50866 * C1104) *
                C257 -
            ((C3593 + C3592) * C251 + (C3591 + C3590) * C256) +
            (C2176 * C1101 + C2171 * C1109 + C2177 * C1100 + C50866 * C1108) *
                C50884) *
               C51006 * C5107) *
              C50920 * C254 +
          (C2419 * C51006 * C5105 +
           ((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
            (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
               C51006 * C5106 +
           ((C3594 + C3595) * C256 + (C3596 + C3597) * C251 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C257 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C51006 * C5107) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51139 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
            (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
               C2174 +
           C3750 * C2175) *
              C51018 * C50920 * C51192 +
          (((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50884) *
               C2173 +
           ((C2398 + C2397) * C50000 -
            ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
            (C2400 + C2399) * C50884) *
               C2174 +
           ((C2401 + C2402) * C50000 - (C3402 * C51139 + C3403 * C50007) +
            (C2407 + C2408) * C50884) *
               C2175) *
              C51018 * C50920 * C51193 +
          (C3750 * C2173 +
           ((C2406 + C2405) * C50007 + (C2404 + C2403) * C51139 -
            (C2402 + C2401) * C50000 - (C2408 + C2407) * C50884) *
               C2174 +
           ((C3415 + C3416) * C50007 + (C3417 + C3418) * C51139 -
            (C2177 * C2326 + C50866 * C2331 + C2176 * C2325 + C2171 * C2328) *
                C50000 -
            (C2177 * C2332 + C50866 * C2335 + C2176 * C2330 + C2171 * C2334) *
                C50884) *
               C2175) *
              C51018 * C50920 * C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51139 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C50920 * C51192 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C50000 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C51139 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C50007) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C50884) *
              C51006 * C51018 * C50920 * C51193 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C50007 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C51139 -
           (C120 * C267 + C108 * C286 + C119 * C266 + C107 * C281 +
            C118 * C265 + C106 * C280 + C117 * C264 + C105 * C279) *
               C50000 -
           (C120 * C287 + C108 * C297 + C119 * C285 + C107 * C296 +
            C118 * C284 + C106 * C295 + C117 * C283 + C105 * C294) *
               C50884) *
              C51006 * C51018 * C50920 * C1213)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51139 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C51006 * C5105 +
           ((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
            (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
               C51006 * C5106 +
           (C5485 * C50007 + C5486 * C51139 - C5487 * C50000 - C5488 * C50884) *
               C51006 * C5107) *
              C50920 * C51192 +
          (((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50884) *
               C51006 * C5105 +
           ((C3132 + C3133) * C50000 -
            ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
            (C3138 + C3139) * C50884) *
               C51006 * C5106 +
           ((C6019 + C6020) * C50000 - (C6431 * C51139 + C6432 * C50007) +
            (C6021 + C6022) * C50884) *
               C51006 * C5107) *
              C50920 * C51193 +
          (C3750 * C51006 * C5105 +
           ((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
            (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
               C51006 * C5106 +
           ((C3594 + C3595) * C50007 + (C3596 + C3597) * C51139 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C50000 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C51006 * C5107) *
              C50920 * C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C51148 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C50984) *
              C51192 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C50984 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C51148) *
              C51193 +
          ((C3412 * C2173 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
            ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
               C51018 * C51148 -
           (((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C2175 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C2174 +
            C4115 * C2173) *
               C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C51148 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C50984) *
              C51192 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C50984 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C51148) *
              C51193 +
          (((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
             C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                C980 +
            (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
             C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                C50879) *
               C51006 * C51018 * C51148 -
           ((C120 * C1448 + C108 * C1456 + C119 * C1449 + C107 * C1457 +
             C118 * C1450 + C106 * C1458 + C117 * C1451 + C105 * C1459) *
                C50879 +
            (C120 * C1444 + C108 * C1452 + C119 * C1445 + C107 * C1453 +
             C118 * C1446 + C106 * C1454 + C117 * C1447 + C105 * C1455) *
                C980) *
               C51006 * C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C5105 +
            ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
                C5106 +
            C6440 * C5107) *
               C51148 -
           (((C5479 + C5480) * C50879 + (C5481 + C5482) * C980) * C51006 *
                C5107 +
            ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51006 *
                C5106 +
            ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51006 *
                C5105) *
               C50984) *
              C51192 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C51006 *
                C5105 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C51006 *
                C5106 +
            ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51006 *
                C5107) *
               C50984 -
           (C6442 * C5107 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
                C5106 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
                C5105) *
               C51148) *
              C51193 +
          ((C3412 * C51006 * C5105 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51006 *
                C5106 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51006 *
                C5107) *
               C51148 -
           (((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                 C50879 +
             (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                 C980) *
                C51006 * C5107 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51006 *
                C5106 +
            C4115 * C51006 * C5105) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C906 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C901 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C907 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C902 +
               (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
                C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                   C908 +
               (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
                C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                   C903) *
                  C51006 * C51018 * C50920 * C904 +
              ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
                C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                   C907 -
               ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
                 C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                    C901 +
                (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
                 C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                    C906) +
               (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
                C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                   C902 -
               (C120 * C545 + C108 * C546 + C119 * C261 + C107 * C271 +
                C118 * C260 + C106 * C270 + C117 * C259 + C105 * C269) *
                   C908 -
               (C120 * C547 + C108 * C548 + C119 * C277 + C107 * C292 +
                C118 * C272 + C106 * C288 + C117 * C273 + C105 * C289) *
                   C903) *
                  C51006 * C51018 * C50920 * C50958) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C980 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C50879) *
                  C51006 * C51018 * C50920 * C976 -
              ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
                C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                   C50879 +
               (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
                C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                   C980) *
                  C51006 * C51018 * C50920 * C977 +
              ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
                C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                   C980 +
               (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
                C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                   C50879) *
                  C51006 * C51018 * C50920 * C978 -
              ((C120 * C985 + C108 * C993 + C119 * C986 + C107 * C994 +
                C118 * C987 + C106 * C995 + C117 * C988 + C105 * C996) *
                   C50879 +
               (C120 * C981 + C108 * C989 + C119 * C982 + C107 * C990 +
                C118 * C983 + C106 * C991 + C117 * C984 + C105 * C992) *
                   C980) *
                  C51006 * C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C396 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C397 +
           ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
             C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
                C980 +
            (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
             C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
                C50879) *
               C51006 * C51018 * C398) *
              C904 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C397 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C396 -
           ((C120 * C1099 + C108 * C1107 + C119 * C1100 + C107 * C1108 +
             C118 * C1101 + C106 * C1109 + C117 * C1102 + C105 * C1110) *
                C50879 +
            (C120 * C1095 + C108 * C1103 + C119 * C1096 + C107 * C1104 +
             C118 * C1097 + C106 * C1105 + C117 * C1098 + C105 * C1106) *
                C980) *
               C51006 * C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C50920 * C904 +
          (((C2390 + C2389) * C907 -
            ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
            (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
            (C2743 + C2742) * C903) *
               C2173 +
           ((C2398 + C2397) * C907 -
            ((C2396 + C2395) * C901 + (C2394 + C2393) * C906) +
            (C2400 + C2399) * C902 - (C2745 + C2744) * C908 -
            (C2747 + C2746) * C903) *
               C2174 +
           ((C2401 + C2402) * C907 -
            ((C2403 + C2404) * C901 + (C2405 + C2406) * C906) +
            (C2407 + C2408) * C902 -
            (C2177 * C981 + C50866 * C989 + C2176 * C982 + C2171 * C990) *
                C908 -
            (C2177 * C985 + C50866 * C993 + C2176 * C986 + C2171 * C994) *
                C903) *
               C2175) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C2173 +
           ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
           C3412 * C2175) *
              C51018 * C50920 * C976 -
          (C3419 * C2175 +
           ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
           ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
              C51018 * C50920 * C977 +
          (C3412 * C2173 +
           ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
           ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
              C51018 * C50920 * C978 -
          (((C2177 * C3393 + C50866 * C3397 + C2176 * C3394 + C2171 * C3398) *
                C50879 +
            (C2177 * C3391 + C50866 * C3395 + C2176 * C3392 + C2171 * C3396) *
                C980) *
               C2175 +
           ((C3418 + C3417) * C50879 + (C3416 + C3415) * C980) * C2174 +
           C3419 * C2173) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C396 -
           (((C3142 + C3143) * C50879 + (C3144 + C3145) * C980) * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C397 +
           (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                 C980 +
             (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                 C50879) *
                C2173 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C2174 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C2175) *
               C51018 * C398) *
              C904 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C2176 * C3087 + C2171 * C3090 + C2177 * C3088 + C50866 * C3091) *
                 C980 +
             (C2176 * C3092 + C2171 * C3096 + C2177 * C3093 + C50866 * C3097) *
                 C50879) *
                C2175) *
               C51018 * C397 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C396 -
           (((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                 C50879 +
             (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                 C980) *
                C2175 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C2174 +
            ((C3593 + C3592) * C50879 + (C3591 + C3590) * C980) * C2173) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C51006 * C5105 +
           ((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
            (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
            (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
               C51006 * C5106 +
           (C5485 * C906 + C5486 * C901 - C5487 * C907 - C5488 * C902 +
            (C5809 + C5810) * C908 + (C5811 + C5812) * C903) *
               C51006 * C5107) *
              C50920 * C904 +
          (((C2390 + C2389) * C907 -
            ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
            (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
            (C2743 + C2742) * C903) *
               C51006 * C5105 +
           ((C3132 + C3133) * C907 -
            ((C3134 + C3135) * C901 + (C3136 + C3137) * C906) +
            (C3138 + C3139) * C902 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C908 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C903) *
               C51006 * C5106 +
           ((C6019 + C6020) * C907 -
            ((C3593 + C3592) * C901 + (C3591 + C3590) * C906) +
            (C6021 + C6022) * C902 -
            (C2177 * C1095 + C50866 * C1103 + C2176 * C1096 + C2171 * C1104) *
                C908 -
            (C2177 * C1099 + C50866 * C1107 + C2176 * C1100 + C2171 * C1108) *
                C903) *
               C51006 * C5107) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C51006 * C5105 +
           ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
               C5106 +
           (C5485 * C980 + C5486 * C50879) * C51006 * C5107) *
              C50920 * C976 -
          (((C3593 + C3592) * C50879 + (C3591 + C3590) * C980) * C51006 *
               C5107 +
           ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
               C5106 +
           ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
               C5105) *
              C50920 * C977 +
          (C3412 * C51006 * C5105 +
           ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51006 *
               C5106 +
           ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51006 *
               C5107) *
              C50920 * C978 -
          (((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                C50879 +
            (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                C980) *
               C51006 * C5107 +
           ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51006 *
               C5106 +
           C3419 * C51006 * C5105) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C5105 +
            ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
                C5106 +
            C6440 * C5107) *
               C396 -
           (((C5479 + C5480) * C50879 + (C5481 + C5482) * C980) * C51006 *
                C5107 +
            ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51006 *
                C5106 +
            ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51006 *
                C5105) *
               C397 +
           (C6440 * C5105 +
            ((C5482 + C5481) * C980 + (C5480 + C5479) * C50879) * C51006 *
                C5106 +
            ((C2176 * C5400 + C2171 * C5403 + C2177 * C5401 + C50866 * C5404) *
                 C980 +
             (C2176 * C5405 + C2171 * C5409 + C2177 * C5406 + C50866 * C5410) *
                 C50879) *
                C51006 * C5107) *
               C398) *
              C904 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C51006 *
                C5105 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C51006 *
                C5106 +
            ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51006 *
                C5107) *
               C397 -
           (C6442 * C5107 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
                C5106 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
                C5105) *
               C396 -
           (((C2177 * C6414 + C50866 * C6418 + C2176 * C6415 + C2171 * C6419) *
                 C50879 +
             (C2177 * C6412 + C50866 * C6416 + C2176 * C6413 + C2171 * C6417) *
                 C980) *
                C51006 * C5107 +
            ((C6437 + C6436) * C50879 + (C6435 + C6434) * C980) * C51006 *
                C5106 +
            C6442 * C5105) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C2173 +
            ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
             (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                C2174 +
            C3750 * C2175) *
               C51018 * C51148 +
           (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                 C50000 -
             ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                  C51139 +
              (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                  C50007) +
             (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                 C50884) *
                C2173 +
            ((C3132 + C3133) * C50000 -
             ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
             (C3138 + C3139) * C50884) *
                C2174 +
            ((C3140 + C3141) * C50000 -
             ((C3142 + C3143) * C51139 + (C3144 + C3145) * C50007) +
             (C3146 + C3147) * C50884) *
                C2175) *
               C51018 * C50984) *
              C904 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C2173 +
            ((C2398 + C2397) * C50000 -
             ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
             (C2400 + C2399) * C50884) *
                C2174 +
            ((C2401 + C2402) * C50000 - (C3402 * C51139 + C3403 * C50007) +
             (C2407 + C2408) * C50884) *
                C2175) *
               C51018 * C51148 +
           (((C3137 + C3136) * C50007 + (C3135 + C3134) * C51139 -
             (C3133 + C3132) * C50000 - (C3139 + C3138) * C50884) *
                C2173 +
            ((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
             (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
                C2174 +
            ((C2176 * C3087 + C2171 * C3090 + C2177 * C3088 + C50866 * C3091) *
                 C50007 +
             (C2176 * C3092 + C2171 * C3096 + C2177 * C3093 + C50866 * C3097) *
                 C51139 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C50000 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C2175) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51139 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
             C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                C50000 -
            ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
              C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                 C51139 +
             (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
              C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                 C50007) +
            (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
             C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                C50884) *
               C51006 * C51018 * C50984) *
              C904 +
          (((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
             C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                C50000 -
            ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
              C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                 C51139 +
             (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
              C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                 C50007) +
            (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
             C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C50007 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C51139 -
            (C120 * C787 + C108 * C796 + C119 * C786 + C107 * C791 +
             C118 * C785 + C106 * C790 + C117 * C784 + C105 * C789) *
                C50000 -
            (C120 * C797 + C108 * C802 + C119 * C795 + C107 * C801 +
             C118 * C794 + C106 * C800 + C117 * C793 + C105 * C799) *
                C50884) *
               C51006 * C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51006 * C5105 +
            ((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
             (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
                C51006 * C5106 +
            (C5485 * C50007 + C5486 * C51139 - C5487 * C50000 -
             C5488 * C50884) *
                C51006 * C5107) *
               C51148 +
           (((C5466 + C5465) * C50000 -
             ((C5464 + C5463) * C51139 + (C5462 + C5461) * C50007) +
             (C5468 + C5467) * C50884) *
                C51006 * C5105 +
            ((C5474 + C5473) * C50000 -
             ((C5472 + C5471) * C51139 + (C5470 + C5469) * C50007) +
             (C5476 + C5475) * C50884) *
                C51006 * C5106 +
            ((C5477 + C5478) * C50000 -
             ((C5479 + C5480) * C51139 + (C5481 + C5482) * C50007) +
             (C5483 + C5484) * C50884) *
                C51006 * C5107) *
               C50984) *
              C904 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C51006 * C5105 +
            ((C3132 + C3133) * C50000 -
             ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
             (C3138 + C3139) * C50884) *
                C51006 * C5106 +
            ((C6019 + C6020) * C50000 - (C6431 * C51139 + C6432 * C50007) +
             (C6021 + C6022) * C50884) *
                C51006 * C5107) *
               C51148 +
           (((C3137 + C3136) * C50007 + (C3135 + C3134) * C51139 -
             (C3133 + C3132) * C50000 - (C3139 + C3138) * C50884) *
                C51006 * C5105 +
            ((C3590 + C3591) * C50007 + (C3592 + C3593) * C51139 -
             (C6020 + C6019) * C50000 - (C6022 + C6021) * C50884) *
                C51006 * C5106 +
            ((C6434 + C6435) * C50007 + (C6436 + C6437) * C51139 -
             (C2177 * C6006 + C50866 * C6007 + C2176 * C4507 + C2171 * C4515) *
                 C50000 -
             (C2177 * C6008 + C50866 * C6009 + C2176 * C4513 + C2171 * C4519) *
                 C50884) *
                C51006 * C5107) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C980 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50879) *
              C51006 * C51018 * C50920 * C976 -
          ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
            C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
               C50879 +
           (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
            C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
               C980) *
              C51006 * C51018 * C50920 * C977 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C980 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C50879) *
              C51006 * C51018 * C50920 * C978 -
          ((C120 * C985 + C108 * C993 + C119 * C986 + C107 * C994 +
            C118 * C987 + C106 * C995 + C117 * C988 + C105 * C996) *
               C50879 +
           (C120 * C981 + C108 * C989 + C119 * C982 + C107 * C990 +
            C118 * C983 + C106 * C991 + C117 * C984 + C105 * C992) *
               C980) *
              C51006 * C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C906 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C901 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C907 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C902 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C908 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C903) *
              C51006 * C51018 * C50920 * C904 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C907 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C901 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C906) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C902 -
           (C120 * C545 + C108 * C546 + C119 * C261 + C107 * C271 +
            C118 * C260 + C106 * C270 + C117 * C259 + C105 * C269) *
               C908 -
           (C120 * C547 + C108 * C548 + C119 * C277 + C107 * C292 +
            C118 * C272 + C106 * C288 + C117 * C273 + C105 * C289) *
               C903) *
              C51006 * C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C50920 * C904 +
          (((C2390 + C2389) * C907 -
            ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
            (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
            (C2743 + C2742) * C903) *
               C2173 +
           ((C2398 + C2397) * C907 -
            ((C2396 + C2395) * C901 + (C2394 + C2393) * C906) +
            (C2400 + C2399) * C902 - (C2745 + C2744) * C908 -
            (C2747 + C2746) * C903) *
               C2174 +
           ((C2401 + C2402) * C907 -
            ((C2403 + C2404) * C901 + (C2405 + C2406) * C906) +
            (C2407 + C2408) * C902 -
            (C2177 * C981 + C50866 * C989 + C2176 * C982 + C2171 * C990) *
                C908 -
            (C2177 * C985 + C50866 * C993 + C2176 * C986 + C2171 * C994) *
                C903) *
               C2175) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C2173 +
           ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
           C3412 * C2175) *
              C51018 * C50920 * C976 -
          (C3419 * C2175 +
           ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
           ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
              C51018 * C50920 * C977 +
          (C3412 * C2173 +
           ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
           ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
              C51018 * C50920 * C978 -
          (((C2177 * C3393 + C50866 * C3397 + C2176 * C3394 + C2171 * C3398) *
                C50879 +
            (C2177 * C3391 + C50866 * C3395 + C2176 * C3392 + C2171 * C3396) *
                C980) *
               C2175 +
           ((C3418 + C3417) * C50879 + (C3416 + C3415) * C980) * C2174 +
           C3419 * C2173) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C51006 * C5105 +
           ((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
            (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
            (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
               C51006 * C5106 +
           (C5485 * C906 + C5486 * C901 - C5487 * C907 - C5488 * C902 +
            (C5809 + C5810) * C908 + (C5811 + C5812) * C903) *
               C51006 * C5107) *
              C50920 * C904 +
          (((C2390 + C2389) * C907 -
            ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
            (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
            (C2743 + C2742) * C903) *
               C51006 * C5105 +
           ((C3132 + C3133) * C907 -
            ((C3134 + C3135) * C901 + (C3136 + C3137) * C906) +
            (C3138 + C3139) * C902 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C908 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C903) *
               C51006 * C5106 +
           ((C6019 + C6020) * C907 -
            ((C3593 + C3592) * C901 + (C3591 + C3590) * C906) +
            (C6021 + C6022) * C902 -
            (C2177 * C1095 + C50866 * C1103 + C2176 * C1096 + C2171 * C1104) *
                C908 -
            (C2177 * C1099 + C50866 * C1107 + C2176 * C1100 + C2171 * C1108) *
                C903) *
               C51006 * C5107) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C51006 * C5105 +
           ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
               C5106 +
           (C5485 * C980 + C5486 * C50879) * C51006 * C5107) *
              C50920 * C976 -
          (((C3593 + C3592) * C50879 + (C3591 + C3590) * C980) * C51006 *
               C5107 +
           ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
               C5106 +
           ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
               C5105) *
              C50920 * C977 +
          (C3412 * C51006 * C5105 +
           ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51006 *
               C5106 +
           ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51006 *
               C5107) *
              C50920 * C978 -
          (((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                C50879 +
            (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                C980) *
               C51006 * C5107 +
           ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C51006 *
               C5106 +
           C3419 * C51006 * C5105) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C2173 +
            ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
             (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                C2174 +
            C3750 * C2175) *
               C51018 * C1558 +
           (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                 C50000 -
             ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                  C51139 +
              (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                  C50007) +
             (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                 C50884) *
                C2173 +
            ((C3132 + C3133) * C50000 -
             ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
             (C3138 + C3139) * C50884) *
                C2174 +
            ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
             (C3146 + C3147) * C50884) *
                C2175) *
               C51018 * C50984) *
              C51147 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C2173 +
            ((C2398 + C2397) * C50000 -
             ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
             (C2400 + C2399) * C50884) *
                C2174 +
            ((C2401 + C2402) * C50000 - (C3402 * C51139 + C3403 * C50007) +
             (C2407 + C2408) * C50884) *
                C2175) *
               C51018 * C1558 +
           (((C3137 + C3136) * C50007 + (C3135 + C3134) * C51139 -
             (C3133 + C3132) * C50000 - (C3139 + C3138) * C50884) *
                C2173 +
            ((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
             (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
                C2174 +
            ((C4111 + C4112) * C50007 + (C4113 + C4114) * C51139 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C50000 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C2175) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51139 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50884) *
               C51006 * C51018 * C1558 +
           ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
             C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                C50000 -
            ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
              C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                 C51139 +
             (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
              C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                 C50007) +
            (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
             C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                C50884) *
               C51006 * C51018 * C50984) *
              C51147 +
          (((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
             C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                C50000 -
            ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
              C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                 C51139 +
             (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
              C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                 C50007) +
            (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
             C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                C50884) *
               C51006 * C51018 * C1558 +
           ((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C50007 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C51139 -
            (C120 * C787 + C108 * C796 + C119 * C786 + C107 * C791 +
             C118 * C785 + C106 * C790 + C117 * C784 + C105 * C789) *
                C50000 -
            (C120 * C797 + C108 * C802 + C119 * C795 + C107 * C801 +
             C118 * C794 + C106 * C800 + C117 * C793 + C105 * C799) *
                C50884) *
               C51006 * C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C51006 * C5105 +
            ((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
             (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
                C51006 * C5106 +
            (C5485 * C50007 + C5486 * C51139 - C5487 * C50000 -
             C5488 * C50884) *
                C51006 * C5107) *
               C1558 +
           (((C5466 + C5465) * C50000 -
             ((C5464 + C5463) * C51139 + (C5462 + C5461) * C50007) +
             (C5468 + C5467) * C50884) *
                C51006 * C5105 +
            ((C5474 + C5473) * C50000 -
             ((C5472 + C5471) * C51139 + (C5470 + C5469) * C50007) +
             (C5476 + C5475) * C50884) *
                C51006 * C5106 +
            ((C5477 + C5478) * C50000 - (C7327 * C51139 + C7328 * C50007) +
             (C5483 + C5484) * C50884) *
                C51006 * C5107) *
               C50984) *
              C51147 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C51006 * C5105 +
            ((C3132 + C3133) * C50000 -
             ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
             (C3138 + C3139) * C50884) *
                C51006 * C5106 +
            ((C6019 + C6020) * C50000 - (C6431 * C51139 + C6432 * C50007) +
             (C6021 + C6022) * C50884) *
                C51006 * C5107) *
               C1558 +
           (((C3137 + C3136) * C50007 + (C3135 + C3134) * C51139 -
             (C3133 + C3132) * C50000 - (C3139 + C3138) * C50884) *
                C51006 * C5105 +
            ((C3590 + C3591) * C50007 + (C3592 + C3593) * C51139 -
             (C6020 + C6019) * C50000 - (C6022 + C6021) * C50884) *
                C51006 * C5106 +
            ((C6434 + C6435) * C50007 + (C6436 + C6437) * C51139 -
             (C2177 * C6006 + C50866 * C6007 + C2176 * C4507 + C2171 * C4515) *
                 C50000 -
             (C2177 * C6008 + C50866 * C6009 + C2176 * C4513 + C2171 * C4519) *
                 C50884) *
                C51006 * C5107) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C51194 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C51195 +
           (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                 C980 +
             (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                 C50879) *
                C2173 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C2174 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C2175) *
               C51018 * C1974) *
              C51147 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C51195 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C51194 -
           (((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                 C50879 +
             (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                 C980) *
                C2175 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C2174 +
            ((C3593 + C3592) * C50879 + (C3591 + C3590) * C980) * C2173) *
               C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C51194 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C51195 +
           ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
             C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
                C980 +
            (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
             C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
                C50879) *
               C51006 * C51018 * C1974) *
              C51147 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C51195 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C51194 -
           ((C120 * C1099 + C108 * C1107 + C119 * C1100 + C107 * C1108 +
             C118 * C1101 + C106 * C1109 + C117 * C1102 + C105 * C1110) *
                C50879 +
            (C120 * C1095 + C108 * C1103 + C119 * C1096 + C107 * C1104 +
             C118 * C1097 + C106 * C1105 + C117 * C1098 + C105 * C1106) *
                C980) *
               C51006 * C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C5105 +
            ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
                C5106 +
            C6440 * C5107) *
               C51194 -
           (C7344 * C5107 +
            ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51006 *
                C5106 +
            ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51006 *
                C5105) *
               C51195 +
           (C6440 * C5105 +
            ((C5482 + C5481) * C980 + (C5480 + C5479) * C50879) * C51006 *
                C5106 +
            ((C7339 + C7340) * C980 + (C7341 + C7342) * C50879) * C51006 *
                C5107) *
               C1974) *
              C51147 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C51006 *
                C5105 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C51006 *
                C5106 +
            ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51006 *
                C5107) *
               C51195 -
           (C6442 * C5107 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
                C5106 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
                C5105) *
               C51194 -
           (((C2177 * C6414 + C50866 * C6418 + C2176 * C6415 + C2171 * C6419) *
                 C50879 +
             (C2177 * C6412 + C50866 * C6416 + C2176 * C6413 + C2171 * C6417) *
                 C980) *
                C51006 * C5107 +
            ((C6437 + C6436) * C50879 + (C6435 + C6434) * C980) * C51006 *
                C5106 +
            C6442 * C5105) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C906 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C901 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C907 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C902 +
               (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
                C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                   C908 +
               (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
                C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                   C903) *
                  C51006 * C51018 * C1558 +
              ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
                C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                   C907 -
               ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
                 C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                    C901 +
                (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
                 C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                    C906) +
               (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
                C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                   C902 -
               (C120 * C649 + C108 * C650 + C119 * C402 + C107 * C412 +
                C118 * C401 + C106 * C411 + C117 * C400 + C105 * C410) *
                   C908 -
               (C120 * C651 + C108 * C652 + C119 * C418 + C107 * C433 +
                C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                   C903) *
                  C51006 * C51018 * C50984) *
             C50908 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                 C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                    C980 +
                (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                 C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                    C50879) *
                   C51006 * C51018 * C1558 -
               ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
                 C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                    C50879 +
                (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
                 C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                    C980) *
                   C51006 * C51018 * C50984) *
                  C253 +
              (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
                 C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                    C980 +
                (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
                 C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                    C50879) *
                   C51006 * C51018 * C50984 -
               ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
                 C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                    C50879 +
                (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
                 C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                    C980) *
                   C51006 * C51018 * C1558) *
                  C254 +
              (((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
                 C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                    C980 +
                (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
                 C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                    C50879) *
                   C51006 * C51018 * C1558 -
               ((C120 * C1448 + C108 * C1456 + C119 * C1449 + C107 * C1457 +
                 C118 * C1450 + C106 * C1458 + C117 * C1451 + C105 * C1459) *
                    C50879 +
                (C120 * C1444 + C108 * C1452 + C119 * C1445 + C107 * C1453 +
                 C118 * C1446 + C106 * C1454 + C117 * C1447 + C105 * C1455) *
                    C980) *
                   C51006 * C51018 * C50984) *
                  C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C980 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50879) *
              C51006 * C51018 * C1724 -
          ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
            C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
               C50879 +
           (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
            C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
               C980) *
              C51006 * C51018 * C1725 +
          ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
            C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
               C980 +
           (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
            C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
               C50879) *
              C51006 * C51018 * C1726 -
          ((C120 * C1732 + C108 * C1740 + C119 * C1733 + C107 * C1741 +
            C118 * C1734 + C106 * C1742 + C117 * C1735 + C105 * C1743) *
               C50879 +
           (C120 * C1728 + C108 * C1736 + C119 * C1729 + C107 * C1737 +
            C118 * C1730 + C106 * C1738 + C117 * C1731 + C105 * C1739) *
               C980) *
              C51006 * C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C1558 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C907 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C901 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C906) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C902 -
            (C2177 * C401 + C50866 * C411 + C2176 * C400 + C2171 * C410) *
                C908 -
            (C2177 * C413 + C50866 * C429 + C2176 * C414 + C2171 * C430) *
                C903) *
               C2173 +
           ((C3132 + C3133) * C907 -
            ((C3134 + C3135) * C901 + (C3136 + C3137) * C906) +
            (C3138 + C3139) * C902 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C908 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C903) *
               C2174 +
           ((C3140 + C3141) * C907 - (C4099 * C901 + C4100 * C906) +
            (C3146 + C3147) * C902 -
            (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                C908 -
            (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                C903) *
               C2175) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C1558 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C50984) *
              C253 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C50984 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C1558) *
              C254 +
          ((C3412 * C2173 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
            ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
               C51018 * C1558 -
           (((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C2175 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C2174 +
            C4115 * C2173) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C2173 +
           ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
           C3412 * C2175) *
              C51018 * C1724 -
          (C4115 * C2175 +
           ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
           ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                C50879 +
            (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                C980) *
               C2173) *
              C51018 * C1725 +
          (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C980 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C50879) *
               C2173 +
           ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C2174 +
           ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C2175) *
              C51018 * C1726 -
          (((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                C50879 +
            (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                C980) *
               C2175 +
           ((C2177 * C4513 + C50866 * C4519 + C2176 * C4514 + C2171 * C4520) *
                C50879 +
            (C2177 * C4507 + C50866 * C4515 + C2176 * C4508 + C2171 * C4516) *
                C980) *
               C2174 +
           ((C2177 * C1734 + C50866 * C1742 + C2176 * C1735 + C2171 * C1743) *
                C50879 +
            (C2177 * C1730 + C50866 * C1738 + C2176 * C1731 + C2171 * C1739) *
                C980) *
               C2173) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C51006 * C5105 +
           ((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
            (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
            (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
               C51006 * C5106 +
           (C5485 * C906 + C5486 * C901 - C5487 * C907 - C5488 * C902 +
            (C5809 + C5810) * C908 + (C5811 + C5812) * C903) *
               C51006 * C5107) *
              C1558 +
          (((C5466 + C5465) * C907 -
            ((C5464 + C5463) * C901 + (C5462 + C5461) * C906) +
            (C5468 + C5467) * C902 - (C5806 + C5805) * C908 -
            (C5808 + C5807) * C903) *
               C51006 * C5105 +
           ((C5474 + C5473) * C907 -
            ((C5472 + C5471) * C901 + (C5470 + C5469) * C906) +
            (C5476 + C5475) * C902 - (C5810 + C5809) * C908 -
            (C5812 + C5811) * C903) *
               C51006 * C5106 +
           ((C5477 + C5478) * C907 -
            ((C5479 + C5480) * C901 + (C5481 + C5482) * C906) +
            (C5483 + C5484) * C902 -
            (C2177 * C1728 + C50866 * C1736 + C2176 * C1729 + C2171 * C1737) *
                C908 -
            (C2177 * C1732 + C50866 * C1740 + C2176 * C1733 + C2171 * C1741) *
                C903) *
               C51006 * C5107) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C5105 +
            ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
                C5106 +
            C6440 * C5107) *
               C1558 -
           (((C5479 + C5480) * C50879 + (C5481 + C5482) * C980) * C51006 *
                C5107 +
            ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51006 *
                C5106 +
            ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51006 *
                C5105) *
               C50984) *
              C253 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C51006 *
                C5105 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C51006 *
                C5106 +
            ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51006 *
                C5107) *
               C50984 -
           (C6442 * C5107 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
                C5106 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
                C5105) *
               C1558) *
              C254 +
          ((C3412 * C51006 * C5105 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51006 *
                C5106 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51006 *
                C5107) *
               C1558 -
           (((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                 C50879 +
             (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                 C980) *
                C51006 * C5107 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51006 *
                C5106 +
            C4115 * C51006 * C5105) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C51006 * C5105 +
           ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
               C5106 +
           C6440 * C5107) *
              C1724 -
          (C7344 * C5107 +
           ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51006 *
               C5106 +
           ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51006 *
               C5105) *
              C1725 +
          (C6440 * C5105 +
           ((C5482 + C5481) * C980 + (C5480 + C5479) * C50879) * C51006 *
               C5106 +
           ((C7339 + C7340) * C980 + (C7341 + C7342) * C50879) * C51006 *
               C5107) *
              C1726 -
          (((C2177 * C7320 + C50866 * C7324 + C2176 * C7321 + C2171 * C7325) *
                C50879 +
            (C2177 * C7318 + C50866 * C7322 + C2176 * C7319 + C2171 * C7323) *
                C980) *
               C51006 * C5107 +
           ((C7342 + C7341) * C50879 + (C7340 + C7339) * C980) * C51006 *
               C5106 +
           C7344 * C5105) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51139 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
            (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
               C2174 +
           C3750 * C2175) *
              C51018 * C51194 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C50000 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C51139 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C50007) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C50884) *
               C2173 +
           ((C3132 + C3133) * C50000 -
            ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
            (C3138 + C3139) * C50884) *
               C2174 +
           ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
            (C3146 + C3147) * C50884) *
               C2175) *
              C51018 * C51195 +
          (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C50007 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C51139 -
            (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) *
                C50000 -
            (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) *
                C50884) *
               C2173 +
           ((C3590 + C3591) * C50007 + (C3592 + C3593) * C51139 -
            (C2177 * C1096 + C50866 * C1104 + C2176 * C1097 + C2171 * C1105) *
                C50000 -
            (C2177 * C1100 + C50866 * C1108 + C2176 * C1101 + C2171 * C1109) *
                C50884) *
               C2174 +
           ((C3594 + C3595) * C50007 + (C3596 + C3597) * C51139 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C50000 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C2175) *
              C51018 * C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51139 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C51194 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C50000 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C51139 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C50007) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C50884) *
              C51006 * C51018 * C51195 +
          ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
            C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
               C50007 +
           (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
            C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
               C51139 -
           (C120 * C408 + C108 * C427 + C119 * C407 + C107 * C422 +
            C118 * C406 + C106 * C421 + C117 * C405 + C105 * C420) *
               C50000 -
           (C120 * C428 + C108 * C438 + C119 * C426 + C107 * C437 +
            C118 * C425 + C106 * C436 + C117 * C424 + C105 * C435) *
               C50884) *
              C51006 * C51018 * C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51139 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C51006 * C5105 +
           ((C5461 + C5462) * C50007 + (C5463 + C5464) * C51139 -
            (C5465 + C5466) * C50000 - (C5467 + C5468) * C50884) *
               C51006 * C5106 +
           C7692 * C5107) *
              C51194 +
          (((C5466 + C5465) * C50000 -
            ((C5464 + C5463) * C51139 + (C5462 + C5461) * C50007) +
            (C5468 + C5467) * C50884) *
               C51006 * C5105 +
           ((C5474 + C5473) * C50000 -
            ((C5472 + C5471) * C51139 + (C5470 + C5469) * C50007) +
            (C5476 + C5475) * C50884) *
               C51006 * C5106 +
           ((C5477 + C5478) * C50000 - (C7327 * C51139 + C7328 * C50007) +
            (C5483 + C5484) * C50884) *
               C51006 * C5107) *
              C51195 +
          (C7692 * C5105 +
           ((C5482 + C5481) * C50007 + (C5480 + C5479) * C51139 -
            (C5478 + C5477) * C50000 - (C5484 + C5483) * C50884) *
               C51006 * C5106 +
           ((C7339 + C7340) * C50007 + (C7341 + C7342) * C51139 -
            (C2177 * C5402 + C50866 * C5407 + C2176 * C5401 + C2171 * C5404) *
                C50000 -
            (C2177 * C5408 + C50866 * C5411 + C2176 * C5406 + C2171 * C5410) *
                C50884) *
               C51006 * C5107) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C1558 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C50984) *
              C253 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C50984 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C1558) *
              C254 +
          (((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
             C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                C980 +
            (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
             C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                C50879) *
               C51006 * C51018 * C1558 -
           ((C120 * C1448 + C108 * C1456 + C119 * C1449 + C107 * C1457 +
             C118 * C1450 + C106 * C1458 + C117 * C1451 + C105 * C1459) *
                C50879 +
            (C120 * C1444 + C108 * C1452 + C119 * C1445 + C107 * C1453 +
             C118 * C1446 + C106 * C1454 + C117 * C1447 + C105 * C1455) *
                C980) *
               C51006 * C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C906 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C901 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C907 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C902 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C908 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C903) *
              C51006 * C51018 * C1558 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C907 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C901 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C906) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C902 -
           (C120 * C649 + C108 * C650 + C119 * C402 + C107 * C412 +
            C118 * C401 + C106 * C411 + C117 * C400 + C105 * C410) *
               C908 -
           (C120 * C651 + C108 * C652 + C119 * C418 + C107 * C433 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C903) *
              C51006 * C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C1558 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C907 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C901 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C906) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C902 -
            (C2177 * C401 + C50866 * C411 + C2176 * C400 + C2171 * C410) *
                C908 -
            (C2177 * C413 + C50866 * C429 + C2176 * C414 + C2171 * C430) *
                C903) *
               C2173 +
           ((C3132 + C3133) * C907 -
            ((C3134 + C3135) * C901 + (C3136 + C3137) * C906) +
            (C3138 + C3139) * C902 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C908 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C903) *
               C2174 +
           ((C3140 + C3141) * C907 - (C4099 * C901 + C4100 * C906) +
            (C3146 + C3147) * C902 -
            (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                C908 -
            (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                C903) *
               C2175) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C1558 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C50984) *
              C253 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C50984 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C1558) *
              C254 +
          ((C3412 * C2173 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
            ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
               C51018 * C1558 -
           (((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C2175 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C2174 +
            C4115 * C2173) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C51006 * C5105 +
           ((C5461 + C5462) * C906 + (C5463 + C5464) * C901 -
            (C5465 + C5466) * C907 - (C5467 + C5468) * C902 +
            (C5805 + C5806) * C908 + (C5807 + C5808) * C903) *
               C51006 * C5106 +
           (C5485 * C906 + C5486 * C901 - C5487 * C907 - C5488 * C902 +
            (C5809 + C5810) * C908 + (C5811 + C5812) * C903) *
               C51006 * C5107) *
              C1558 +
          (((C5466 + C5465) * C907 -
            ((C5464 + C5463) * C901 + (C5462 + C5461) * C906) +
            (C5468 + C5467) * C902 - (C5806 + C5805) * C908 -
            (C5808 + C5807) * C903) *
               C51006 * C5105 +
           ((C5474 + C5473) * C907 -
            ((C5472 + C5471) * C901 + (C5470 + C5469) * C906) +
            (C5476 + C5475) * C902 - (C5810 + C5809) * C908 -
            (C5812 + C5811) * C903) *
               C51006 * C5106 +
           ((C5477 + C5478) * C907 -
            ((C5479 + C5480) * C901 + (C5481 + C5482) * C906) +
            (C5483 + C5484) * C902 -
            (C2177 * C1728 + C50866 * C1736 + C2176 * C1729 + C2171 * C1737) *
                C908 -
            (C2177 * C1732 + C50866 * C1740 + C2176 * C1733 + C2171 * C1741) *
                C903) *
               C51006 * C5107) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C5105 +
            ((C5461 + C5462) * C980 + (C5463 + C5464) * C50879) * C51006 *
                C5106 +
            C6440 * C5107) *
               C1558 -
           (((C5479 + C5480) * C50879 + (C5481 + C5482) * C980) * C51006 *
                C5107 +
            ((C5472 + C5471) * C50879 + (C5470 + C5469) * C980) * C51006 *
                C5106 +
            ((C5464 + C5463) * C50879 + (C5462 + C5461) * C980) * C51006 *
                C5105) *
               C50984) *
              C253 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C51006 *
                C5105 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C51006 *
                C5106 +
            ((C6434 + C6435) * C980 + (C6436 + C6437) * C50879) * C51006 *
                C5107) *
               C50984 -
           (C6442 * C5107 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C51006 *
                C5106 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C51006 *
                C5105) *
               C1558) *
              C254 +
          ((C3412 * C51006 * C5105 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C51006 *
                C5106 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C51006 *
                C5107) *
               C1558 -
           (((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                 C50879 +
             (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                 C980) *
                C51006 * C5107 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C51006 *
                C5106 +
            C4115 * C51006 * C5105) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C542 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C51190 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C543 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C51191 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C544 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C539) *
               C51006 * C51161 +
           ((C11095 + C11096 + C11097) * C542 +
            (C11098 + C11099 + C11100) * C51190 -
            (C11101 + C11102 + C11103) * C543 -
            (C11104 + C11105 + C11106) * C51191 +
            (C7941 * C400 + C51188 * C410 + C7942 * C401 + C51189 * C411 +
             C7943 * C402 + C7938 * C412) *
                C544 +
            (C7941 * C414 + C51188 * C430 + C7942 * C413 + C51189 * C429 +
             C7943 * C418 + C7938 * C433) *
                C539) *
               C51006 * C51082) *
              C50920 * C51147 +
          (((C8147 + C8146 + C8145) * C543 -
            ((C8144 + C8143 + C8142) * C51190 +
             (C8141 + C8140 + C8139) * C542) +
            (C8150 + C8149 + C8148) * C51191 - (C8469 + C8468 + C8467) * C544 -
            (C8472 + C8471 + C8470) * C539) *
               C51006 * C51161 +
           ((C8837 + C8838 + C8839) * C543 -
            ((C8840 + C8841 + C8842) * C51190 +
             (C8843 + C8844 + C8845) * C542) +
            (C8846 + C8847 + C8848) * C51191 -
            (C7943 * C787 + C7938 * C796 + C7942 * C786 + C51189 * C791 +
             C7941 * C785 + C51188 * C790) *
                C544 -
            (C7943 * C797 + C7938 * C802 + C7942 * C795 + C51189 * C801 +
             C7941 * C794 + C51188 * C800) *
                C539) *
               C51006 * C51082) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C256 +
             (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C251 -
             (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
              C7941 * C126 + C51188 * C133) *
                 C257 -
             (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
              C7941 * C137 + C51188 * C147) *
                 C50884) *
                C51006 * C51161 +
            ((C11095 + C11096 + C11097) * C256 +
             (C11098 + C11099 + C11100) * C251 -
             (C11101 + C11102 + C11103) * C257 -
             (C11104 + C11105 + C11106) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C11103 + C11102 + C11101) * C257 -
             ((C11100 + C11099 + C11098) * C251 +
              (C11097 + C11096 + C11095) * C256) +
             (C11106 + C11105 + C11104) * C50884) *
                C51006 * C51161 +
            ((C11107 + C11108 + C11109) * C257 -
             ((C11110 + C11111 + C11112) * C251 +
              (C11113 + C11114 + C11115) * C256) +
             (C11116 + C11117 + C11118) * C50884) *
                C51006 * C51082) *
               C50984) *
              C51147 +
          ((((C8147 + C8146 + C8145) * C257 -
             ((C8144 + C8143 + C8142) * C251 + (C8141 + C8140 + C8139) * C256) +
             (C8150 + C8149 + C8148) * C50884) *
                C51006 * C51161 +
            ((C8837 + C8838 + C8839) * C257 -
             ((C8840 + C8841 + C8842) * C251 + (C8843 + C8844 + C8845) * C256) +
             (C8846 + C8847 + C8848) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C8845 + C8844 + C8843) * C256 + (C8842 + C8841 + C8840) * C251 -
             (C8839 + C8838 + C8837) * C257 -
             (C8848 + C8847 + C8846) * C50884) *
                C51006 * C51161 +
            ((C9269 + C9270 + C9271) * C256 + (C9272 + C9273 + C9274) * C251 -
             (C7943 * C1095 + C7938 * C1103 + C7942 * C1096 + C51189 * C1104 +
              C7941 * C1097 + C51188 * C1105) *
                 C257 -
             (C7943 * C1099 + C7938 * C1107 + C7942 * C1100 + C51189 * C1108 +
              C7941 * C1101 + C51188 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C50884) *
               C51006 * C51161 +
           ((C7941 * C403 + C51188 * C417 + C7942 * C399 + C51189 * C409 +
             C7943 * C400 + C7938 * C410) *
                C256 +
            (C7941 * C416 + C51188 * C432 + C7942 * C415 + C51189 * C431 +
             C7943 * C414 + C7938 * C430) *
                C251 -
            (C7943 * C401 + C7938 * C411 + C7942 * C400 + C51189 * C410 +
             C7941 * C399 + C51188 * C409) *
                C257 -
            (C7943 * C413 + C7938 * C429 + C7942 * C414 + C51189 * C430 +
             C7941 * C415 + C51188 * C431) *
                C50884) *
               C51006 * C51082) *
              C50920 * C253 +
          (((C8147 + C8146 + C8145) * C257 -
            ((C8144 + C8143 + C8142) * C251 + (C8141 + C8140 + C8139) * C256) +
            (C8150 + C8149 + C8148) * C50884) *
               C51006 * C51161 +
           ((C8837 + C8838 + C8839) * C257 -
            ((C8840 + C8841 + C8842) * C251 + (C8843 + C8844 + C8845) * C256) +
            (C8846 + C8847 + C8848) * C50884) *
               C51006 * C51082) *
              C50920 * C254 +
          (((C8159 + C8158 + C8157) * C256 + (C8156 + C8155 + C8154) * C251 -
            (C8153 + C8152 + C8151) * C257 - (C8162 + C8161 + C8160) * C50884) *
               C51006 * C51161 +
           ((C9773 + C9774 + C9775) * C256 + (C9776 + C9777 + C9778) * C251 -
            (C7943 * C1444 + C7938 * C1452 + C7942 * C1445 + C51189 * C1453 +
             C7941 * C1446 + C51188 * C1454) *
                C257 -
            (C7943 * C1448 + C7938 * C1456 + C7942 * C1449 + C51189 * C1457 +
             C7941 * C1450 + C51188 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
            C7943 * C127 + C7938 * C134) *
               C121 +
           (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
            C7943 * C138 + C7938 * C148) *
               C109 -
           (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
            C7941 * C126 + C51188 * C133) *
               C122 -
           (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
            C7941 * C137 + C51188 * C147) *
               C110 +
           (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
            C7943 * C129 + C7938 * C140) *
               C123 +
           (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
            C7943 * C141 + C7938 * C150) *
               C111 -
           (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51189 * C140 +
            C7941 * C128 + C51188 * C135) *
               C124 -
           (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51189 * C150 +
            C7941 * C139 + C51188 * C149) *
               C112) *
              C51006 * C51161 +
          ((C7941 * C403 + C51188 * C417 + C7942 * C399 + C51189 * C409 +
            C7943 * C400 + C7938 * C410) *
               C121 +
           (C7941 * C416 + C51188 * C432 + C7942 * C415 + C51189 * C431 +
            C7943 * C414 + C7938 * C430) *
               C109 -
           (C7943 * C401 + C7938 * C411 + C7942 * C400 + C51189 * C410 +
            C7941 * C399 + C51188 * C409) *
               C122 -
           (C7943 * C413 + C7938 * C429 + C7942 * C414 + C51189 * C430 +
            C7941 * C415 + C51188 * C431) *
               C110 +
           (C7941 * C400 + C51188 * C410 + C7942 * C401 + C51189 * C411 +
            C7943 * C402 + C7938 * C412) *
               C123 +
           (C7941 * C414 + C51188 * C430 + C7942 * C413 + C51189 * C429 +
            C7943 * C418 + C7938 * C433) *
               C111 -
           (C7943 * C649 + C7938 * C650 + C7942 * C402 + C51189 * C412 +
            C7941 * C401 + C51188 * C411) *
               C124 -
           (C7943 * C651 + C7938 * C652 + C7942 * C418 + C51189 * C433 +
            C7941 * C413 + C51188 * C429) *
               C112) *
              C51006 * C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C50884) *
               C51006 * C51161 +
           ((C11095 + C11096 + C11097) * C256 +
            (C11098 + C11099 + C11100) * C251 -
            (C11101 + C11102 + C11103) * C257 -
            (C11104 + C11105 + C11106) * C50884) *
               C51006 * C51082) *
              C396 +
          (((C11103 + C11102 + C11101) * C257 -
            ((C11100 + C11099 + C11098) * C251 +
             (C11097 + C11096 + C11095) * C256) +
            (C11106 + C11105 + C11104) * C50884) *
               C51006 * C51161 +
           ((C11107 + C11108 + C11109) * C257 -
            ((C11110 + C11111 + C11112) * C251 +
             (C11113 + C11114 + C11115) * C256) +
            (C11116 + C11117 + C11118) * C50884) *
               C51006 * C51082) *
              C397 +
          (((C11115 + C11114 + C11113) * C256 +
            (C11112 + C11111 + C11110) * C251 -
            (C11109 + C11108 + C11107) * C257 -
            (C11118 + C11117 + C11116) * C50884) *
               C51006 * C51161 +
           ((C7941 * C1731 + C51188 * C1739 + C7942 * C1730 + C51189 * C1738 +
             C7943 * C1729 + C7938 * C1737) *
                C256 +
            (C7941 * C1735 + C51188 * C1743 + C7942 * C1734 + C51189 * C1742 +
             C7943 * C1733 + C7938 * C1741) *
                C251 -
            (C7943 * C1728 + C7938 * C1736 + C7942 * C1729 + C51189 * C1737 +
             C7941 * C1730 + C51188 * C1738) *
                C257 -
            (C7943 * C1732 + C7938 * C1740 + C7942 * C1733 + C51189 * C1741 +
             C7941 * C1734 + C51188 * C1742) *
                C50884) *
               C51006 * C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C542 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C51190 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C543 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C51191 +
                    (C7941 * C127 + C51188 * C134 + C7942 * C128 +
                     C51189 * C135 + C7943 * C129 + C7938 * C140) *
                        C544 +
                    (C7941 * C138 + C51188 * C148 + C7942 * C139 +
                     C51189 * C149 + C7943 * C141 + C7938 * C150) *
                        C539) *
                       C51006 * C51161 +
                   ((C11095 + C11096 + C11097) * C542 +
                    (C11098 + C11099 + C11100) * C51190 -
                    (C11101 + C11102 + C11103) * C543 -
                    (C11104 + C11105 + C11106) * C51191 +
                    (C11423 + C11424 + C11425) * C544 +
                    (C11426 + C11427 + C11428) * C539) *
                       C51006 * C51082) *
                      C51148 +
                  (((C11103 + C11102 + C11101) * C543 -
                    ((C11100 + C11099 + C11098) * C51190 +
                     (C11097 + C11096 + C11095) * C542) +
                    (C11106 + C11105 + C11104) * C51191 -
                    (C11425 + C11424 + C11423) * C544 -
                    (C11428 + C11427 + C11426) * C539) *
                       C51006 * C51161 +
                   ((C11107 + C11108 + C11109) * C543 -
                    ((C11110 + C11111 + C11112) * C51190 +
                     (C11113 + C11114 + C11115) * C542) +
                    (C11116 + C11117 + C11118) * C51191 -
                    (C7943 * C408 + C7938 * C427 + C7942 * C407 +
                     C51189 * C422 + C7941 * C406 + C51188 * C421) *
                        C544 -
                    (C7943 * C428 + C7938 * C438 + C7942 * C426 +
                     C51189 * C437 + C7941 * C425 + C51188 * C436) *
                        C539) *
                       C51006 * C51082) *
                      C50984) *
                 C50908) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
            C7943 * C127 + C7938 * C134) *
               C121 +
           (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
            C7943 * C138 + C7938 * C148) *
               C109 -
           (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
            C7941 * C126 + C51188 * C133) *
               C122 -
           (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
            C7941 * C137 + C51188 * C147) *
               C110 +
           (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
            C7943 * C129 + C7938 * C140) *
               C123 +
           (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
            C7943 * C141 + C7938 * C150) *
               C111 -
           (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51189 * C140 +
            C7941 * C128 + C51188 * C135) *
               C124 -
           (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51189 * C150 +
            C7941 * C139 + C51188 * C149) *
               C112) *
              C51006 * C51161 +
          ((C7941 * C403 + C51188 * C417 + C7942 * C399 + C51189 * C409 +
            C7943 * C400 + C7938 * C410) *
               C121 +
           (C7941 * C416 + C51188 * C432 + C7942 * C415 + C51189 * C431 +
            C7943 * C414 + C7938 * C430) *
               C109 -
           (C7943 * C401 + C7938 * C411 + C7942 * C400 + C51189 * C410 +
            C7941 * C399 + C51188 * C409) *
               C122 -
           (C7943 * C413 + C7938 * C429 + C7942 * C414 + C51189 * C430 +
            C7941 * C415 + C51188 * C431) *
               C110 +
           (C7941 * C400 + C51188 * C410 + C7942 * C401 + C51189 * C411 +
            C7943 * C402 + C7938 * C412) *
               C123 +
           (C7941 * C414 + C51188 * C430 + C7942 * C413 + C51189 * C429 +
            C7943 * C418 + C7938 * C433) *
               C111 -
           (C7943 * C649 + C7938 * C650 + C7942 * C402 + C51189 * C412 +
            C7941 * C401 + C51188 * C411) *
               C124 -
           (C7943 * C651 + C7938 * C652 + C7942 * C418 + C51189 * C433 +
            C7941 * C413 + C51188 * C429) *
               C112) *
              C51006 * C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C50884) *
               C51006 * C51161 +
           ((C7941 * C403 + C51188 * C417 + C7942 * C399 + C51189 * C409 +
             C7943 * C400 + C7938 * C410) *
                C256 +
            (C7941 * C416 + C51188 * C432 + C7942 * C415 + C51189 * C431 +
             C7943 * C414 + C7938 * C430) *
                C251 -
            (C7943 * C401 + C7938 * C411 + C7942 * C400 + C51189 * C410 +
             C7941 * C399 + C51188 * C409) *
                C257 -
            (C7943 * C413 + C7938 * C429 + C7942 * C414 + C51189 * C430 +
             C7941 * C415 + C51188 * C431) *
                C50884) *
               C51006 * C51082) *
              C50920 * C253 +
          (((C8147 + C8146 + C8145) * C257 -
            ((C8144 + C8143 + C8142) * C251 + (C8141 + C8140 + C8139) * C256) +
            (C8150 + C8149 + C8148) * C50884) *
               C51006 * C51161 +
           ((C8837 + C8838 + C8839) * C257 -
            ((C8840 + C8841 + C8842) * C251 + (C8843 + C8844 + C8845) * C256) +
            (C8846 + C8847 + C8848) * C50884) *
               C51006 * C51082) *
              C50920 * C254 +
          (((C8159 + C8158 + C8157) * C256 + (C8156 + C8155 + C8154) * C251 -
            (C8153 + C8152 + C8151) * C257 - (C8162 + C8161 + C8160) * C50884) *
               C51006 * C51161 +
           ((C9773 + C9774 + C9775) * C256 + (C9776 + C9777 + C9778) * C251 -
            (C7943 * C1444 + C7938 * C1452 + C7942 * C1445 + C51189 * C1453 +
             C7941 * C1446 + C51188 * C1454) *
                C257 -
            (C7943 * C1448 + C7938 * C1456 + C7942 * C1449 + C51189 * C1457 +
             C7941 * C1450 + C51188 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C51139 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C50884) *
                       C51006 * C51161 +
                   ((C11095 + C11096 + C11097) * C50007 +
                    (C11098 + C11099 + C11100) * C51139 -
                    (C11101 + C11102 + C11103) * C50000 -
                    (C11104 + C11105 + C11106) * C50884) *
                       C51006 * C51082) *
                      C50920 * C51192 +
                  (((C8147 + C8146 + C8145) * C50000 -
                    ((C8144 + C8143 + C8142) * C51139 +
                     (C8141 + C8140 + C8139) * C50007) +
                    (C8150 + C8149 + C8148) * C50884) *
                       C51006 * C51161 +
                   ((C8837 + C8838 + C8839) * C50000 -
                    ((C8840 + C8841 + C8842) * C51139 +
                     (C8843 + C8844 + C8845) * C50007) +
                    (C8846 + C8847 + C8848) * C50884) *
                       C51006 * C51082) *
                      C50920 * C51193 +
                  (((C8159 + C8158 + C8157) * C50007 +
                    (C8156 + C8155 + C8154) * C51139 -
                    (C8153 + C8152 + C8151) * C50000 -
                    (C8162 + C8161 + C8160) * C50884) *
                       C51006 * C51161 +
                   ((C9773 + C9774 + C9775) * C50007 +
                    (C9776 + C9777 + C9778) * C51139 -
                    (C7943 * C1444 + C7938 * C1452 + C7942 * C1445 +
                     C51189 * C1453 + C7941 * C1446 + C51188 * C1454) *
                        C50000 -
                    (C7943 * C1448 + C7938 * C1456 + C7942 * C1449 +
                     C51189 * C1457 + C7941 * C1450 + C51188 * C1458) *
                        C50884) *
                       C51006 * C51082) *
                      C50920 * C1213)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C980 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C50879) *
                        C51006 * C51161 +
                    ((C11095 + C11096 + C11097) * C980 +
                     (C11098 + C11099 + C11100) * C50879) *
                        C51006 * C51082) *
                       C51148 -
                   (((C11110 + C11111 + C11112) * C50879 +
                     (C11113 + C11114 + C11115) * C980) *
                        C51006 * C51082 +
                    ((C11100 + C11099 + C11098) * C50879 +
                     (C11097 + C11096 + C11095) * C980) *
                        C51006 * C51161) *
                       C50984) *
                      C51192 +
                  ((((C8845 + C8844 + C8843) * C980 +
                     (C8842 + C8841 + C8840) * C50879) *
                        C51006 * C51161 +
                    ((C9269 + C9270 + C9271) * C980 +
                     (C9272 + C9273 + C9274) * C50879) *
                        C51006 * C51082) *
                       C50984 -
                   (((C8840 + C8841 + C8842) * C50879 +
                     (C8843 + C8844 + C8845) * C980) *
                        C51006 * C51082 +
                    ((C8144 + C8143 + C8142) * C50879 +
                     (C8141 + C8140 + C8139) * C980) *
                        C51006 * C51161) *
                       C51148) *
                      C51193 +
                  ((((C8159 + C8158 + C8157) * C980 +
                     (C8156 + C8155 + C8154) * C50879) *
                        C51006 * C51161 +
                    ((C9773 + C9774 + C9775) * C980 +
                     (C9776 + C9777 + C9778) * C50879) *
                        C51006 * C51082) *
                       C51148 -
                   (((C7943 * C2573 + C7938 * C2576 + C7942 * C2571 +
                      C51189 * C2575 + C7941 * C2570 + C51188 * C2574) *
                         C50879 +
                     (C7943 * C2567 + C7938 * C2572 + C7942 * C2566 +
                      C51189 * C2569 + C7941 * C2565 + C51188 * C2568) *
                         C980) *
                        C51006 * C51082 +
                    ((C9778 + C9777 + C9776) * C50879 +
                     (C9775 + C9774 + C9773) * C980) *
                        C51006 * C51161) *
                       C50984) *
                      C1213)) /
                (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C980 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50879) *
               C51006 * C51161 +
           ((C11095 + C11096 + C11097) * C980 +
            (C11098 + C11099 + C11100) * C50879) *
               C51006 * C51082) *
              C50920 * C976 -
          (((C8840 + C8841 + C8842) * C50879 + (C8843 + C8844 + C8845) * C980) *
               C51006 * C51082 +
           ((C8144 + C8143 + C8142) * C50879 + (C8141 + C8140 + C8139) * C980) *
               C51006 * C51161) *
              C50920 * C977 +
          (((C8159 + C8158 + C8157) * C980 + (C8156 + C8155 + C8154) * C50879) *
               C51006 * C51161 +
           ((C9773 + C9774 + C9775) * C980 + (C9776 + C9777 + C9778) * C50879) *
               C51006 * C51082) *
              C50920 * C978 -
          (((C7943 * C3095 + C7938 * C3098 + C7942 * C3093 + C51189 * C3097 +
             C7941 * C3092 + C51188 * C3096) *
                C50879 +
            (C7943 * C3089 + C7938 * C3094 + C7942 * C3088 + C51189 * C3091 +
             C7941 * C3087 + C51188 * C3090) *
                C980) *
               C51006 * C51082 +
           ((C9110 + C9109 + C9108) * C50879 + (C9107 + C9106 + C9105) * C980) *
               C51006 * C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C906 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C901 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C907 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C902 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C908 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C903) *
               C51006 * C51161 +
           ((C11095 + C11096 + C11097) * C906 +
            (C11098 + C11099 + C11100) * C901 -
            (C11101 + C11102 + C11103) * C907 -
            (C11104 + C11105 + C11106) * C902 +
            (C11423 + C11424 + C11425) * C908 +
            (C11426 + C11427 + C11428) * C903) *
               C51006 * C51082) *
              C50920 * C904 +
          (((C8147 + C8146 + C8145) * C907 -
            ((C8144 + C8143 + C8142) * C901 + (C8141 + C8140 + C8139) * C906) +
            (C8150 + C8149 + C8148) * C902 - (C8469 + C8468 + C8467) * C908 -
            (C8472 + C8471 + C8470) * C903) *
               C51006 * C51161 +
           ((C8837 + C8838 + C8839) * C907 -
            ((C8840 + C8841 + C8842) * C901 + (C8843 + C8844 + C8845) * C906) +
            (C8846 + C8847 + C8848) * C902 -
            (C7943 * C787 + C7938 * C796 + C7942 * C786 + C51189 * C791 +
             C7941 * C785 + C51188 * C790) *
                C908 -
            (C7943 * C797 + C7938 * C802 + C7942 * C795 + C51189 * C801 +
             C7941 * C794 + C51188 * C800) *
                C903) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C980 +
             (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50879) *
                C51006 * C51161 +
            ((C11095 + C11096 + C11097) * C980 +
             (C11098 + C11099 + C11100) * C50879) *
                C51006 * C51082) *
               C396 -
           (((C11110 + C11111 + C11112) * C50879 +
             (C11113 + C11114 + C11115) * C980) *
                C51006 * C51082 +
            ((C11100 + C11099 + C11098) * C50879 +
             (C11097 + C11096 + C11095) * C980) *
                C51006 * C51161) *
               C397 +
           (((C11115 + C11114 + C11113) * C980 +
             (C11112 + C11111 + C11110) * C50879) *
                C51006 * C51161 +
            ((C7941 * C1731 + C51188 * C1739 + C7942 * C1730 + C51189 * C1738 +
              C7943 * C1729 + C7938 * C1737) *
                 C980 +
             (C7941 * C1735 + C51188 * C1743 + C7942 * C1734 + C51189 * C1742 +
              C7943 * C1733 + C7938 * C1741) *
                 C50879) *
                C51006 * C51082) *
               C398) *
              C904 +
          ((((C8845 + C8844 + C8843) * C980 +
             (C8842 + C8841 + C8840) * C50879) *
                C51006 * C51161 +
            ((C9269 + C9270 + C9271) * C980 +
             (C9272 + C9273 + C9274) * C50879) *
                C51006 * C51082) *
               C397 -
           (((C8840 + C8841 + C8842) * C50879 +
             (C8843 + C8844 + C8845) * C980) *
                C51006 * C51082 +
            ((C8144 + C8143 + C8142) * C50879 +
             (C8141 + C8140 + C8139) * C980) *
                C51006 * C51161) *
               C396 -
           (((C7943 * C6008 + C7938 * C6009 + C7942 * C4513 + C51189 * C4519 +
              C7941 * C4514 + C51188 * C4520) *
                 C50879 +
             (C7943 * C6006 + C7938 * C6007 + C7942 * C4507 + C51189 * C4515 +
              C7941 * C4508 + C51188 * C4516) *
                 C980) *
                C51006 * C51082 +
            ((C9274 + C9273 + C9272) * C50879 +
             (C9271 + C9270 + C9269) * C980) *
                C51006 * C51161) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C50007 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C51139 -
                     (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                      C51189 * C134 + C7941 * C126 + C51188 * C133) *
                         C50000 -
                     (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                      C51189 * C148 + C7941 * C137 + C51188 * C147) *
                         C50884) *
                        C51006 * C51161 +
                    ((C11095 + C11096 + C11097) * C50007 +
                     (C11098 + C11099 + C11100) * C51139 -
                     (C11101 + C11102 + C11103) * C50000 -
                     (C11104 + C11105 + C11106) * C50884) *
                        C51006 * C51082) *
                       C51148 +
                   (((C11103 + C11102 + C11101) * C50000 -
                     ((C11100 + C11099 + C11098) * C51139 +
                      (C11097 + C11096 + C11095) * C50007) +
                     (C11106 + C11105 + C11104) * C50884) *
                        C51006 * C51161 +
                    ((C11107 + C11108 + C11109) * C50000 -
                     ((C11110 + C11111 + C11112) * C51139 +
                      (C11113 + C11114 + C11115) * C50007) +
                     (C11116 + C11117 + C11118) * C50884) *
                        C51006 * C51082) *
                       C50984) *
                      C904 +
                  ((((C8147 + C8146 + C8145) * C50000 -
                     ((C8144 + C8143 + C8142) * C51139 +
                      (C8141 + C8140 + C8139) * C50007) +
                     (C8150 + C8149 + C8148) * C50884) *
                        C51006 * C51161 +
                    ((C8837 + C8838 + C8839) * C50000 -
                     ((C8840 + C8841 + C8842) * C51139 +
                      (C8843 + C8844 + C8845) * C50007) +
                     (C8846 + C8847 + C8848) * C50884) *
                        C51006 * C51082) *
                       C51148 +
                   (((C8845 + C8844 + C8843) * C50007 +
                     (C8842 + C8841 + C8840) * C51139 -
                     (C8839 + C8838 + C8837) * C50000 -
                     (C8848 + C8847 + C8846) * C50884) *
                        C51006 * C51161 +
                    ((C9269 + C9270 + C9271) * C50007 +
                     (C9272 + C9273 + C9274) * C51139 -
                     (C7943 * C1095 + C7938 * C1103 + C7942 * C1096 +
                      C51189 * C1104 + C7941 * C1097 + C51188 * C1105) *
                         C50000 -
                     (C7943 * C1099 + C7938 * C1107 + C7942 * C1100 +
                      C51189 * C1108 + C7941 * C1101 + C51188 * C1109) *
                         C50884) *
                        C51006 * C51082) *
                       C50984) *
                      C50958)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C906 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C901 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51189 * C134 +
             C7941 * C126 + C51188 * C133) *
                C907 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51189 * C148 +
             C7941 * C137 + C51188 * C147) *
                C902 +
            (C7941 * C127 + C51188 * C134 + C7942 * C128 + C51189 * C135 +
             C7943 * C129 + C7938 * C140) *
                C908 +
            (C7941 * C138 + C51188 * C148 + C7942 * C139 + C51189 * C149 +
             C7943 * C141 + C7938 * C150) *
                C903) *
               C51006 * C51161 +
           ((C11095 + C11096 + C11097) * C906 +
            (C11098 + C11099 + C11100) * C901 -
            (C11101 + C11102 + C11103) * C907 -
            (C11104 + C11105 + C11106) * C902 +
            (C11423 + C11424 + C11425) * C908 +
            (C11426 + C11427 + C11428) * C903) *
               C51006 * C51082) *
              C50920 * C904 +
          (((C8147 + C8146 + C8145) * C907 -
            ((C8144 + C8143 + C8142) * C901 + (C8141 + C8140 + C8139) * C906) +
            (C8150 + C8149 + C8148) * C902 - (C8469 + C8468 + C8467) * C908 -
            (C8472 + C8471 + C8470) * C903) *
               C51006 * C51161 +
           ((C8837 + C8838 + C8839) * C907 -
            ((C8840 + C8841 + C8842) * C901 + (C8843 + C8844 + C8845) * C906) +
            (C8846 + C8847 + C8848) * C902 -
            (C7943 * C787 + C7938 * C796 + C7942 * C786 + C51189 * C791 +
             C7941 * C785 + C51188 * C790) *
                C908 -
            (C7943 * C797 + C7938 * C802 + C7942 * C795 + C51189 * C801 +
             C7941 * C794 + C51188 * C800) *
                C903) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51188 * C132 + C7942 * C126 + C51189 * C133 +
             C7943 * C127 + C7938 * C134) *
                C980 +
            (C7941 * C136 + C51188 * C146 + C7942 * C137 + C51189 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50879) *
               C51006 * C51161 +
           ((C11095 + C11096 + C11097) * C980 +
            (C11098 + C11099 + C11100) * C50879) *
               C51006 * C51082) *
              C50920 * C976 -
          (((C8840 + C8841 + C8842) * C50879 + (C8843 + C8844 + C8845) * C980) *
               C51006 * C51082 +
           ((C8144 + C8143 + C8142) * C50879 + (C8141 + C8140 + C8139) * C980) *
               C51006 * C51161) *
              C50920 * C977 +
          (((C8159 + C8158 + C8157) * C980 + (C8156 + C8155 + C8154) * C50879) *
               C51006 * C51161 +
           ((C9773 + C9774 + C9775) * C980 + (C9776 + C9777 + C9778) * C50879) *
               C51006 * C51082) *
              C50920 * C978 -
          (((C7943 * C3095 + C7938 * C3098 + C7942 * C3093 + C51189 * C3097 +
             C7941 * C3092 + C51188 * C3096) *
                C50879 +
            (C7943 * C3089 + C7938 * C3094 + C7942 * C3088 + C51189 * C3091 +
             C7941 * C3087 + C51188 * C3090) *
                C980) *
               C51006 * C51082 +
           ((C9110 + C9109 + C9108) * C50879 + (C9107 + C9106 + C9105) * C980) *
               C51006 * C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C50007 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C51139 -
                     (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                      C51189 * C134 + C7941 * C126 + C51188 * C133) *
                         C50000 -
                     (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                      C51189 * C148 + C7941 * C137 + C51188 * C147) *
                         C50884) *
                        C51006 * C51161 +
                    ((C11095 + C11096 + C11097) * C50007 +
                     (C11098 + C11099 + C11100) * C51139 -
                     (C11101 + C11102 + C11103) * C50000 -
                     (C11104 + C11105 + C11106) * C50884) *
                        C51006 * C51082) *
                       C1558 +
                   (((C11103 + C11102 + C11101) * C50000 -
                     ((C11100 + C11099 + C11098) * C51139 +
                      (C11097 + C11096 + C11095) * C50007) +
                     (C11106 + C11105 + C11104) * C50884) *
                        C51006 * C51161 +
                    ((C11107 + C11108 + C11109) * C50000 -
                     ((C11110 + C11111 + C11112) * C51139 +
                      (C11113 + C11114 + C11115) * C50007) +
                     (C11116 + C11117 + C11118) * C50884) *
                        C51006 * C51082) *
                       C50984) *
                      C51147 +
                  ((((C8147 + C8146 + C8145) * C50000 -
                     ((C8144 + C8143 + C8142) * C51139 +
                      (C8141 + C8140 + C8139) * C50007) +
                     (C8150 + C8149 + C8148) * C50884) *
                        C51006 * C51161 +
                    ((C8837 + C8838 + C8839) * C50000 -
                     ((C8840 + C8841 + C8842) * C51139 +
                      (C8843 + C8844 + C8845) * C50007) +
                     (C8846 + C8847 + C8848) * C50884) *
                        C51006 * C51082) *
                       C1558 +
                   (((C8845 + C8844 + C8843) * C50007 +
                     (C8842 + C8841 + C8840) * C51139 -
                     (C8839 + C8838 + C8837) * C50000 -
                     (C8848 + C8847 + C8846) * C50884) *
                        C51006 * C51161 +
                    ((C9269 + C9270 + C9271) * C50007 +
                     (C9272 + C9273 + C9274) * C51139 -
                     (C7943 * C1095 + C7938 * C1103 + C7942 * C1096 +
                      C51189 * C1104 + C7941 * C1097 + C51188 * C1105) *
                         C50000 -
                     (C7943 * C1099 + C7938 * C1107 + C7942 * C1100 +
                      C51189 * C1108 + C7941 * C1101 + C51188 * C1109) *
                         C50884) *
                        C51006 * C51082) *
                       C50984) *
                      C50958)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C980 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C50879) *
                        C51006 * C51161 +
                    ((C11095 + C11096 + C11097) * C980 +
                     (C11098 + C11099 + C11100) * C50879) *
                        C51006 * C51082) *
                       C51194 -
                   (((C11110 + C11111 + C11112) * C50879 +
                     (C11113 + C11114 + C11115) * C980) *
                        C51006 * C51082 +
                    ((C11100 + C11099 + C11098) * C50879 +
                     (C11097 + C11096 + C11095) * C980) *
                        C51006 * C51161) *
                       C51195 +
                   (((C11115 + C11114 + C11113) * C980 +
                     (C11112 + C11111 + C11110) * C50879) *
                        C51006 * C51161 +
                    ((C12901 + C12902 + C12903) * C980 +
                     (C12904 + C12905 + C12906) * C50879) *
                        C51006 * C51082) *
                       C1974) *
                      C51147 +
                  ((((C8845 + C8844 + C8843) * C980 +
                     (C8842 + C8841 + C8840) * C50879) *
                        C51006 * C51161 +
                    ((C9269 + C9270 + C9271) * C980 +
                     (C9272 + C9273 + C9274) * C50879) *
                        C51006 * C51082) *
                       C51195 -
                   (((C8840 + C8841 + C8842) * C50879 +
                     (C8843 + C8844 + C8845) * C980) *
                        C51006 * C51082 +
                    ((C8144 + C8143 + C8142) * C50879 +
                     (C8141 + C8140 + C8139) * C980) *
                        C51006 * C51161) *
                       C51194 -
                   (((C7943 * C6008 + C7938 * C6009 + C7942 * C4513 +
                      C51189 * C4519 + C7941 * C4514 + C51188 * C4520) *
                         C50879 +
                     (C7943 * C6006 + C7938 * C6007 + C7942 * C4507 +
                      C51189 * C4515 + C7941 * C4508 + C51188 * C4516) *
                         C980) *
                        C51006 * C51082 +
                    ((C9274 + C9273 + C9272) * C50879 +
                     (C9271 + C9270 + C9269) * C980) *
                        C51006 * C51161) *
                       C1974) *
                      C50958)) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C980 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C50879) *
                        C51006 * C51161 +
                    ((C11095 + C11096 + C11097) * C980 +
                     (C11098 + C11099 + C11100) * C50879) *
                        C51006 * C51082) *
                       C1558 -
                   (((C11110 + C11111 + C11112) * C50879 +
                     (C11113 + C11114 + C11115) * C980) *
                        C51006 * C51082 +
                    ((C11100 + C11099 + C11098) * C50879 +
                     (C11097 + C11096 + C11095) * C980) *
                        C51006 * C51161) *
                       C50984) *
                      C253 +
                  ((((C8845 + C8844 + C8843) * C980 +
                     (C8842 + C8841 + C8840) * C50879) *
                        C51006 * C51161 +
                    ((C9269 + C9270 + C9271) * C980 +
                     (C9272 + C9273 + C9274) * C50879) *
                        C51006 * C51082) *
                       C50984 -
                   (((C8840 + C8841 + C8842) * C50879 +
                     (C8843 + C8844 + C8845) * C980) *
                        C51006 * C51082 +
                    ((C8144 + C8143 + C8142) * C50879 +
                     (C8141 + C8140 + C8139) * C980) *
                        C51006 * C51161) *
                       C1558) *
                      C254 +
                  ((((C8159 + C8158 + C8157) * C980 +
                     (C8156 + C8155 + C8154) * C50879) *
                        C51006 * C51161 +
                    ((C9773 + C9774 + C9775) * C980 +
                     (C9776 + C9777 + C9778) * C50879) *
                        C51006 * C51082) *
                       C1558 -
                   (((C7943 * C2573 + C7938 * C2576 + C7942 * C2571 +
                      C51189 * C2575 + C7941 * C2570 + C51188 * C2574) *
                         C50879 +
                     (C7943 * C2567 + C7938 * C2572 + C7942 * C2566 +
                      C51189 * C2569 + C7941 * C2565 + C51188 * C2568) *
                         C980) *
                        C51006 * C51082 +
                    ((C9778 + C9777 + C9776) * C50879 +
                     (C9775 + C9774 + C9773) * C980) *
                        C51006 * C51161) *
                       C50984) *
                      C255)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C906 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C901 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C907 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C902 +
                    (C7941 * C127 + C51188 * C134 + C7942 * C128 +
                     C51189 * C135 + C7943 * C129 + C7938 * C140) *
                        C908 +
                    (C7941 * C138 + C51188 * C148 + C7942 * C139 +
                     C51189 * C149 + C7943 * C141 + C7938 * C150) *
                        C903) *
                       C51006 * C51161 +
                   ((C11095 + C11096 + C11097) * C906 +
                    (C11098 + C11099 + C11100) * C901 -
                    (C11101 + C11102 + C11103) * C907 -
                    (C11104 + C11105 + C11106) * C902 +
                    (C11423 + C11424 + C11425) * C908 +
                    (C11426 + C11427 + C11428) * C903) *
                       C51006 * C51082) *
                      C1558 +
                  (((C11103 + C11102 + C11101) * C907 -
                    ((C11100 + C11099 + C11098) * C901 +
                     (C11097 + C11096 + C11095) * C906) +
                    (C11106 + C11105 + C11104) * C902 -
                    (C11425 + C11424 + C11423) * C908 -
                    (C11428 + C11427 + C11426) * C903) *
                       C51006 * C51161 +
                   ((C11107 + C11108 + C11109) * C907 -
                    ((C11110 + C11111 + C11112) * C901 +
                     (C11113 + C11114 + C11115) * C906) +
                    (C11116 + C11117 + C11118) * C902 -
                    (C7943 * C408 + C7938 * C427 + C7942 * C407 +
                     C51189 * C422 + C7941 * C406 + C51188 * C421) *
                        C908 -
                    (C7943 * C428 + C7938 * C438 + C7942 * C426 +
                     C51189 * C437 + C7941 * C425 + C51188 * C436) *
                        C903) *
                       C51006 * C51082) *
                      C50984) *
                 C50908) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C980 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C50879) *
                       C51006 * C51161 +
                   ((C11095 + C11096 + C11097) * C980 +
                    (C11098 + C11099 + C11100) * C50879) *
                       C51006 * C51082) *
                      C1724 -
                  (((C11110 + C11111 + C11112) * C50879 +
                    (C11113 + C11114 + C11115) * C980) *
                       C51006 * C51082 +
                   ((C11100 + C11099 + C11098) * C50879 +
                    (C11097 + C11096 + C11095) * C980) *
                       C51006 * C51161) *
                      C1725 +
                  (((C11115 + C11114 + C11113) * C980 +
                    (C11112 + C11111 + C11110) * C50879) *
                       C51006 * C51161 +
                   ((C12901 + C12902 + C12903) * C980 +
                    (C12904 + C12905 + C12906) * C50879) *
                       C51006 * C51082) *
                      C1726 -
                  (((C7943 * C5408 + C7938 * C5411 + C7942 * C5406 +
                     C51189 * C5410 + C7941 * C5405 + C51188 * C5409) *
                        C50879 +
                    (C7943 * C5402 + C7938 * C5407 + C7942 * C5401 +
                     C51189 * C5404 + C7941 * C5400 + C51188 * C5403) *
                        C980) *
                       C51006 * C51082 +
                   ((C12906 + C12905 + C12904) * C50879 +
                    (C12903 + C12902 + C12901) * C980) *
                       C51006 * C51161) *
                      C1727) *
                 C50908) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C51139 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C50884) *
                       C51006 * C51161 +
                   ((C11095 + C11096 + C11097) * C50007 +
                    (C11098 + C11099 + C11100) * C51139 -
                    (C11101 + C11102 + C11103) * C50000 -
                    (C11104 + C11105 + C11106) * C50884) *
                       C51006 * C51082) *
                      C51194 +
                  (((C11103 + C11102 + C11101) * C50000 -
                    ((C11100 + C11099 + C11098) * C51139 +
                     (C11097 + C11096 + C11095) * C50007) +
                    (C11106 + C11105 + C11104) * C50884) *
                       C51006 * C51161 +
                   ((C11107 + C11108 + C11109) * C50000 -
                    ((C11110 + C11111 + C11112) * C51139 +
                     (C11113 + C11114 + C11115) * C50007) +
                    (C11116 + C11117 + C11118) * C50884) *
                       C51006 * C51082) *
                      C51195 +
                  (((C11115 + C11114 + C11113) * C50007 +
                    (C11112 + C11111 + C11110) * C51139 -
                    (C11109 + C11108 + C11107) * C50000 -
                    (C11118 + C11117 + C11116) * C50884) *
                       C51006 * C51161 +
                   ((C12901 + C12902 + C12903) * C50007 +
                    (C12904 + C12905 + C12906) * C51139 -
                    (C7943 * C1728 + C7938 * C1736 + C7942 * C1729 +
                     C51189 * C1737 + C7941 * C1730 + C51188 * C1738) *
                        C50000 -
                    (C7943 * C1732 + C7938 * C1740 + C7942 * C1733 +
                     C51189 * C1741 + C7941 * C1734 + C51188 * C1742) *
                        C50884) *
                       C51006 * C51082) *
                      C1974) *
                 C50908) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                     C51189 * C133 + C7943 * C127 + C7938 * C134) *
                        C906 +
                    (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                     C51189 * C147 + C7943 * C138 + C7938 * C148) *
                        C901 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51189 * C134 + C7941 * C126 + C51188 * C133) *
                        C907 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51189 * C148 + C7941 * C137 + C51188 * C147) *
                        C902 +
                    (C7941 * C127 + C51188 * C134 + C7942 * C128 +
                     C51189 * C135 + C7943 * C129 + C7938 * C140) *
                        C908 +
                    (C7941 * C138 + C51188 * C148 + C7942 * C139 +
                     C51189 * C149 + C7943 * C141 + C7938 * C150) *
                        C903) *
                       C51006 * C51161 +
                   ((C11095 + C11096 + C11097) * C906 +
                    (C11098 + C11099 + C11100) * C901 -
                    (C11101 + C11102 + C11103) * C907 -
                    (C11104 + C11105 + C11106) * C902 +
                    (C11423 + C11424 + C11425) * C908 +
                    (C11426 + C11427 + C11428) * C903) *
                       C51006 * C51082) *
                      C1558 +
                  (((C11103 + C11102 + C11101) * C907 -
                    ((C11100 + C11099 + C11098) * C901 +
                     (C11097 + C11096 + C11095) * C906) +
                    (C11106 + C11105 + C11104) * C902 -
                    (C11425 + C11424 + C11423) * C908 -
                    (C11428 + C11427 + C11426) * C903) *
                       C51006 * C51161 +
                   ((C11107 + C11108 + C11109) * C907 -
                    ((C11110 + C11111 + C11112) * C901 +
                     (C11113 + C11114 + C11115) * C906) +
                    (C11116 + C11117 + C11118) * C902 -
                    (C7943 * C408 + C7938 * C427 + C7942 * C407 +
                     C51189 * C422 + C7941 * C406 + C51188 * C421) *
                        C908 -
                    (C7943 * C428 + C7938 * C438 + C7942 * C426 +
                     C51189 * C437 + C7941 * C425 + C51188 * C436) *
                        C903) *
                       C51006 * C51082) *
                      C50984) *
                 C50908) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51188 * C132 + C7942 * C126 +
                      C51189 * C133 + C7943 * C127 + C7938 * C134) *
                         C980 +
                     (C7941 * C136 + C51188 * C146 + C7942 * C137 +
                      C51189 * C147 + C7943 * C138 + C7938 * C148) *
                         C50879) *
                        C51006 * C51161 +
                    ((C11095 + C11096 + C11097) * C980 +
                     (C11098 + C11099 + C11100) * C50879) *
                        C51006 * C51082) *
                       C1558 -
                   (((C11110 + C11111 + C11112) * C50879 +
                     (C11113 + C11114 + C11115) * C980) *
                        C51006 * C51082 +
                    ((C11100 + C11099 + C11098) * C50879 +
                     (C11097 + C11096 + C11095) * C980) *
                        C51006 * C51161) *
                       C50984) *
                      C253 +
                  ((((C8845 + C8844 + C8843) * C980 +
                     (C8842 + C8841 + C8840) * C50879) *
                        C51006 * C51161 +
                    ((C9269 + C9270 + C9271) * C980 +
                     (C9272 + C9273 + C9274) * C50879) *
                        C51006 * C51082) *
                       C50984 -
                   (((C8840 + C8841 + C8842) * C50879 +
                     (C8843 + C8844 + C8845) * C980) *
                        C51006 * C51082 +
                    ((C8144 + C8143 + C8142) * C50879 +
                     (C8141 + C8140 + C8139) * C980) *
                        C51006 * C51161) *
                       C1558) *
                      C254 +
                  ((((C8159 + C8158 + C8157) * C980 +
                     (C8156 + C8155 + C8154) * C50879) *
                        C51006 * C51161 +
                    ((C9773 + C9774 + C9775) * C980 +
                     (C9776 + C9777 + C9778) * C50879) *
                        C51006 * C51082) *
                       C1558 -
                   (((C7943 * C2573 + C7938 * C2576 + C7942 * C2571 +
                      C51189 * C2575 + C7941 * C2570 + C51188 * C2574) *
                         C50879 +
                     (C7943 * C2567 + C7938 * C2572 + C7942 * C2566 +
                      C51189 * C2569 + C7941 * C2565 + C51188 * C2568) *
                         C980) *
                        C51006 * C51082 +
                    ((C9778 + C9777 + C9776) * C50879 +
                     (C9775 + C9774 + C9773) * C980) *
                        C51006 * C51161) *
                       C50984) *
                      C255)) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C542 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51190 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C543 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51191 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C544 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C539) *
              C51006 * C51018 * C50920 * C51147 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C543 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C51190 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C542) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C51191 -
           (C120 * C545 + C108 * C546 + C119 * C261 + C107 * C271 +
            C118 * C260 + C106 * C270 + C117 * C259 + C105 * C269) *
               C544 -
           (C120 * C547 + C108 * C548 + C119 * C277 + C107 * C292 +
            C118 * C272 + C106 * C288 + C117 * C273 + C105 * C289) *
               C539) *
              C51006 * C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C542 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51190 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C543 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C51191 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C544 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C539) *
               C2173 +
           ((C2385 + C2386) * C542 + (C2387 + C2388) * C51190 -
            (C2389 + C2390) * C543 - (C2391 + C2392) * C51191 +
            (C2740 + C2741) * C544 + (C2742 + C2743) * C539) *
               C2174 +
           (C2409 * C542 + C2410 * C51190 - C2411 * C543 - C2412 * C51191 +
            (C2744 + C2745) * C544 + (C2746 + C2747) * C539) *
               C2175) *
              C51018 * C50920 * C51147 +
          (((C2390 + C2389) * C543 -
            ((C2388 + C2387) * C51190 + (C2386 + C2385) * C542) +
            (C2392 + C2391) * C51191 - (C2741 + C2740) * C544 -
            (C2743 + C2742) * C539) *
               C2173 +
           ((C2398 + C2397) * C543 -
            ((C2396 + C2395) * C51190 + (C2394 + C2393) * C542) +
            (C2400 + C2399) * C51191 - (C2745 + C2744) * C544 -
            (C2747 + C2746) * C539) *
               C2174 +
           ((C2401 + C2402) * C543 -
            ((C2403 + C2404) * C51190 + (C2405 + C2406) * C542) +
            (C2407 + C2408) * C51191 -
            (C2177 * C981 + C50866 * C989 + C2176 * C982 + C2171 * C990) *
                C544 -
            (C2177 * C985 + C50866 * C993 + C2176 * C986 + C2171 * C994) *
                C539) *
               C2175) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C256 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C251 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C257 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
             C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                C257 -
            ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
              C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                 C251 +
             (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
              C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                 C256) +
            (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
             C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                C50884) *
               C51006 * C51018 * C50984) *
              C51147 +
          (((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
             C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                C257 -
            ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
              C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                 C251 +
             (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
              C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                 C256) +
            (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
             C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C256 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C251 -
            (C120 * C787 + C108 * C796 + C119 * C786 + C107 * C791 +
             C118 * C785 + C106 * C790 + C117 * C784 + C105 * C789) *
                C257 -
            (C120 * C797 + C108 * C802 + C119 * C795 + C107 * C801 +
             C118 * C794 + C106 * C800 + C117 * C793 + C105 * C799) *
                C50884) *
               C51006 * C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C251 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C2173 +
            ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
             (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
                C2174 +
            C2419 * C2175) *
               C51018 * C51148 +
           (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                 C257 -
             ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                  C251 +
              (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                  C256) +
             (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                 C50884) *
                C2173 +
            ((C3132 + C3133) * C257 -
             ((C3134 + C3135) * C251 + (C3136 + C3137) * C256) +
             (C3138 + C3139) * C50884) *
                C2174 +
            ((C3140 + C3141) * C257 -
             ((C3142 + C3143) * C251 + (C3144 + C3145) * C256) +
             (C3146 + C3147) * C50884) *
                C2175) *
               C51018 * C50984) *
              C51147 +
          ((((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C50884) *
                C2173 +
            ((C2398 + C2397) * C257 -
             ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
             (C2400 + C2399) * C50884) *
                C2174 +
            ((C2401 + C2402) * C257 -
             ((C2403 + C2404) * C251 + (C2405 + C2406) * C256) +
             (C2407 + C2408) * C50884) *
                C2175) *
               C51018 * C51148 +
           (((C3137 + C3136) * C256 + (C3135 + C3134) * C251 -
             (C3133 + C3132) * C257 - (C3139 + C3138) * C50884) *
                C2173 +
            ((C3145 + C3144) * C256 + (C3143 + C3142) * C251 -
             (C3141 + C3140) * C257 - (C3147 + C3146) * C50884) *
                C2174 +
            ((C2176 * C3087 + C2171 * C3090 + C2177 * C3088 + C50866 * C3091) *
                 C256 +
             (C2176 * C3092 + C2171 * C3096 + C2177 * C3093 + C50866 * C3097) *
                 C251 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C257 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C2175) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C50920 * C253 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C257 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C251 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C256) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C50884) *
              C51006 * C51018 * C50920 * C254 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C256 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C251 -
           (C120 * C267 + C108 * C286 + C119 * C266 + C107 * C281 +
            C118 * C265 + C106 * C280 + C117 * C264 + C105 * C279) *
               C257 -
           (C120 * C287 + C108 * C297 + C119 * C285 + C107 * C296 +
            C118 * C284 + C106 * C295 + C117 * C283 + C105 * C294) *
               C50884) *
              C51006 * C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51006 * C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C396 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C257 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C251 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C256) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C50884) *
              C51006 * C51018 * C397 +
          ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
            C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
               C256 +
           (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
            C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
               C251 -
           (C120 * C408 + C108 * C427 + C119 * C407 + C107 * C422 +
            C118 * C406 + C106 * C421 + C117 * C405 + C105 * C420) *
               C257 -
           (C120 * C428 + C108 * C438 + C119 * C426 + C107 * C437 +
            C118 * C425 + C106 * C436 + C117 * C424 + C105 * C435) *
               C50884) *
              C51006 * C51018 * C398) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) * C109 -
           (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) * C111 -
           (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C262 + C2171 * C276 + C2177 * C258 + C50866 * C268) * C121 +
           (C2176 * C275 + C2171 * C291 + C2177 * C274 + C50866 * C290) * C109 -
           (C2177 * C259 + C50866 * C269 + C2176 * C258 + C2171 * C268) * C122 -
           (C2177 * C273 + C50866 * C289 + C2176 * C274 + C2171 * C290) * C110 +
           (C2176 * C259 + C2171 * C269 + C2177 * C260 + C50866 * C270) * C123 +
           (C2176 * C273 + C2171 * C289 + C2177 * C272 + C50866 * C288) * C111 -
           (C2177 * C261 + C50866 * C271 + C2176 * C260 + C2171 * C270) * C124 -
           (C2177 * C277 + C50866 * C292 + C2176 * C272 + C2171 * C288) *
               C112) *
              C2174 +
          ((C2176 * C263 + C2171 * C278 + C2177 * C264 + C50866 * C279) * C121 +
           (C2176 * C282 + C2171 * C293 + C2177 * C283 + C50866 * C294) * C109 -
           (C2177 * C265 + C50866 * C280 + C2176 * C264 + C2171 * C279) * C122 -
           (C2177 * C284 + C50866 * C295 + C2176 * C283 + C2171 * C294) * C110 +
           (C2176 * C265 + C2171 * C280 + C2177 * C266 + C50866 * C281) * C123 +
           (C2176 * C284 + C2171 * C295 + C2177 * C285 + C50866 * C296) * C111 -
           (C2177 * C267 + C50866 * C286 + C2176 * C266 + C2171 * C281) * C124 -
           (C2177 * C287 + C50866 * C297 + C2176 * C285 + C2171 * C296) *
               C112) *
              C2175) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
               C2174 +
           C2419 * C2175) *
              C51018 * C50920 * C253 +
          (((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C50884) *
               C2173 +
           ((C2398 + C2397) * C257 -
            ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
            (C2400 + C2399) * C50884) *
               C2174 +
           ((C2401 + C2402) * C257 -
            ((C2403 + C2404) * C251 + (C2405 + C2406) * C256) +
            (C2407 + C2408) * C50884) *
               C2175) *
              C51018 * C50920 * C254 +
          (C2419 * C2173 +
           ((C2406 + C2405) * C256 + (C2404 + C2403) * C251 -
            (C2402 + C2401) * C257 - (C2408 + C2407) * C50884) *
               C2174 +
           ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50866 * C2328) *
                C256 +
            (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50866 * C2334) *
                C251 -
            (C2177 * C2326 + C50866 * C2331 + C2176 * C2325 + C2171 * C2328) *
                C257 -
            (C2177 * C2332 + C50866 * C2335 + C2176 * C2330 + C2171 * C2334) *
                C50884) *
               C2175) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
               C2174 +
           C2419 * C2175) *
              C51018 * C396 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C257 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C251 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C256) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C50884) *
               C2173 +
           ((C2176 * C784 + C2171 * C789 + C2177 * C785 + C50866 * C790) *
                C257 -
            ((C2177 * C793 + C50866 * C799 + C2176 * C792 + C2171 * C798) *
                 C251 +
             (C2177 * C784 + C50866 * C789 + C2176 * C783 + C2171 * C788) *
                 C256) +
            (C2176 * C793 + C2171 * C799 + C2177 * C794 + C50866 * C800) *
                C50884) *
               C2174 +
           ((C2176 * C1446 + C2171 * C1454 + C2177 * C1445 + C50866 * C1453) *
                C257 -
            ((C2177 * C1450 + C50866 * C1458 + C2176 * C1451 + C2171 * C1459) *
                 C251 +
             (C2177 * C1446 + C50866 * C1454 + C2176 * C1447 + C2171 * C1455) *
                 C256) +
            (C2176 * C1450 + C2171 * C1458 + C2177 * C1449 + C50866 * C1457) *
                C50884) *
               C2175) *
              C51018 * C397 +
          (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C256 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C251 -
            (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) *
                C257 -
            (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) *
                C50884) *
               C2173 +
           ((C2176 * C1098 + C2171 * C1106 + C2177 * C1097 + C50866 * C1105) *
                C256 +
            (C2176 * C1102 + C2171 * C1110 + C2177 * C1101 + C50866 * C1109) *
                C251 -
            (C2177 * C1096 + C50866 * C1104 + C2176 * C1097 + C2171 * C1105) *
                C257 -
            (C2177 * C1100 + C50866 * C1108 + C2176 * C1101 + C2171 * C1109) *
                C50884) *
               C2174 +
           ((C2176 * C2565 + C2171 * C2568 + C2177 * C2566 + C50866 * C2569) *
                C256 +
            (C2176 * C2570 + C2171 * C2574 + C2177 * C2571 + C50866 * C2575) *
                C251 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C257 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C2175) *
              C51018 * C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C542 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51190 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C543 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51191 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C544 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C539) *
              C51006 * C51018 * C51148 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C543 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C51190 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C542) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C51191 -
           (C120 * C649 + C108 * C650 + C119 * C402 + C107 * C412 +
            C118 * C401 + C106 * C411 + C117 * C400 + C105 * C410) *
               C544 -
           (C120 * C651 + C108 * C652 + C119 * C418 + C107 * C433 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C539) *
              C51006 * C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C542 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51190 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C543 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C51191 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C544 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C539) *
               C2173 +
           ((C2385 + C2386) * C542 + (C2387 + C2388) * C51190 -
            (C2389 + C2390) * C543 - (C2391 + C2392) * C51191 +
            (C2740 + C2741) * C544 + (C2742 + C2743) * C539) *
               C2174 +
           (C2409 * C542 + C2410 * C51190 - C2411 * C543 - C2412 * C51191 +
            (C2744 + C2745) * C544 + (C2746 + C2747) * C539) *
               C2175) *
              C51018 * C51148 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C543 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C51190 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C542) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C51191 -
            (C2177 * C401 + C50866 * C411 + C2176 * C400 + C2171 * C410) *
                C544 -
            (C2177 * C413 + C50866 * C429 + C2176 * C414 + C2171 * C430) *
                C539) *
               C2173 +
           ((C2176 * C784 + C2171 * C789 + C2177 * C785 + C50866 * C790) *
                C543 -
            ((C2177 * C793 + C50866 * C799 + C2176 * C792 + C2171 * C798) *
                 C51190 +
             (C2177 * C784 + C50866 * C789 + C2176 * C783 + C2171 * C788) *
                 C542) +
            (C2176 * C793 + C2171 * C799 + C2177 * C794 + C50866 * C800) *
                C51191 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C544 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C539) *
               C2174 +
           ((C2176 * C1446 + C2171 * C1454 + C2177 * C1445 + C50866 * C1453) *
                C543 -
            ((C2177 * C1450 + C50866 * C1458 + C2176 * C1451 + C2171 * C1459) *
                 C51190 +
             (C2177 * C1446 + C50866 * C1454 + C2176 * C1447 + C2171 * C1455) *
                 C542) +
            (C2176 * C1450 + C2171 * C1458 + C2177 * C1449 + C50866 * C1457) *
                C51191 -
            (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                C544 -
            (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                C539) *
               C2175) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51006 * C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C50920 * C253 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C257 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C251 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C256) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C50884) *
              C51006 * C51018 * C50920 * C254 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C256 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C251 -
           (C120 * C267 + C108 * C286 + C119 * C266 + C107 * C281 +
            C118 * C265 + C106 * C280 + C117 * C264 + C105 * C279) *
               C257 -
           (C120 * C287 + C108 * C297 + C119 * C285 + C107 * C296 +
            C118 * C284 + C106 * C295 + C117 * C283 + C105 * C294) *
               C50884) *
              C51006 * C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) * C109 -
           (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) * C111 -
           (C2177 * C129 + C50866 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50866 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C262 + C2171 * C276 + C2177 * C258 + C50866 * C268) * C121 +
           (C2176 * C275 + C2171 * C291 + C2177 * C274 + C50866 * C290) * C109 -
           (C2177 * C259 + C50866 * C269 + C2176 * C258 + C2171 * C268) * C122 -
           (C2177 * C273 + C50866 * C289 + C2176 * C274 + C2171 * C290) * C110 +
           (C2176 * C259 + C2171 * C269 + C2177 * C260 + C50866 * C270) * C123 +
           (C2176 * C273 + C2171 * C289 + C2177 * C272 + C50866 * C288) * C111 -
           (C2177 * C261 + C50866 * C271 + C2176 * C260 + C2171 * C270) * C124 -
           (C2177 * C277 + C50866 * C292 + C2176 * C272 + C2171 * C288) *
               C112) *
              C2174 +
          ((C2176 * C263 + C2171 * C278 + C2177 * C264 + C50866 * C279) * C121 +
           (C2176 * C282 + C2171 * C293 + C2177 * C283 + C50866 * C294) * C109 -
           (C2177 * C265 + C50866 * C280 + C2176 * C264 + C2171 * C279) * C122 -
           (C2177 * C284 + C50866 * C295 + C2176 * C283 + C2171 * C294) * C110 +
           (C2176 * C265 + C2171 * C280 + C2177 * C266 + C50866 * C281) * C123 +
           (C2176 * C284 + C2171 * C295 + C2177 * C285 + C50866 * C296) * C111 -
           (C2177 * C267 + C50866 * C286 + C2176 * C266 + C2171 * C281) * C124 -
           (C2177 * C287 + C50866 * C297 + C2176 * C285 + C2171 * C296) *
               C112) *
              C2175) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C251 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C50884) *
               C2174 +
           C2419 * C2175) *
              C51018 * C50920 * C253 +
          (((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C50884) *
               C2173 +
           ((C2398 + C2397) * C257 -
            ((C2396 + C2395) * C251 + (C2394 + C2393) * C256) +
            (C2400 + C2399) * C50884) *
               C2174 +
           ((C2401 + C2402) * C257 -
            ((C2403 + C2404) * C251 + (C2405 + C2406) * C256) +
            (C2407 + C2408) * C50884) *
               C2175) *
              C51018 * C50920 * C254 +
          (C2419 * C2173 +
           ((C2406 + C2405) * C256 + (C2404 + C2403) * C251 -
            (C2402 + C2401) * C257 - (C2408 + C2407) * C50884) *
               C2174 +
           ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50866 * C2328) *
                C256 +
            (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50866 * C2334) *
                C251 -
            (C2177 * C2326 + C50866 * C2331 + C2176 * C2325 + C2171 * C2328) *
                C257 -
            (C2177 * C2332 + C50866 * C2335 + C2176 * C2330 + C2171 * C2334) *
                C50884) *
               C2175) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51139 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C50920 * C51192 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C50000 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C51139 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C50007) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C50884) *
              C51006 * C51018 * C50920 * C51193 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C50007 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C51139 -
           (C120 * C267 + C108 * C286 + C119 * C266 + C107 * C281 +
            C118 * C265 + C106 * C280 + C117 * C264 + C105 * C279) *
               C50000 -
           (C120 * C287 + C108 * C297 + C119 * C285 + C107 * C296 +
            C118 * C284 + C106 * C295 + C117 * C283 + C105 * C294) *
               C50884) *
              C51006 * C51018 * C50920 * C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51139 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
            (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
               C2174 +
           C3750 * C2175) *
              C51018 * C50920 * C51192 +
          (((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50884) *
               C2173 +
           ((C2398 + C2397) * C50000 -
            ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
            (C2400 + C2399) * C50884) *
               C2174 +
           ((C2401 + C2402) * C50000 - (C3402 * C51139 + C3403 * C50007) +
            (C2407 + C2408) * C50884) *
               C2175) *
              C51018 * C50920 * C51193 +
          (C3750 * C2173 +
           ((C2406 + C2405) * C50007 + (C2404 + C2403) * C51139 -
            (C2402 + C2401) * C50000 - (C2408 + C2407) * C50884) *
               C2174 +
           ((C3415 + C3416) * C50007 + (C3417 + C3418) * C51139 -
            (C2177 * C2326 + C50866 * C2331 + C2176 * C2325 + C2171 * C2328) *
                C50000 -
            (C2177 * C2332 + C50866 * C2335 + C2176 * C2330 + C2171 * C2334) *
                C50884) *
               C2175) *
              C51018 * C50920 * C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C51148 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C50984) *
              C51192 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C50984 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C51148) *
              C51193 +
          (((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
             C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                C980 +
            (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
             C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                C50879) *
               C51006 * C51018 * C51148 -
           ((C120 * C1448 + C108 * C1456 + C119 * C1449 + C107 * C1457 +
             C118 * C1450 + C106 * C1458 + C117 * C1451 + C105 * C1459) *
                C50879 +
            (C120 * C1444 + C108 * C1452 + C119 * C1445 + C107 * C1453 +
             C118 * C1446 + C106 * C1454 + C117 * C1447 + C105 * C1455) *
                C980) *
               C51006 * C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C51148 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C50984) *
              C51192 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C50984 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C51148) *
              C51193 +
          ((C3412 * C2173 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
            ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
               C51018 * C51148 -
           (((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C2175 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C2174 +
            C4115 * C2173) *
               C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C980 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50879) *
              C51006 * C51018 * C50920 * C976 -
          ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
            C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
               C50879 +
           (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
            C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
               C980) *
              C51006 * C51018 * C50920 * C977 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C980 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C50879) *
              C51006 * C51018 * C50920 * C978 -
          ((C120 * C985 + C108 * C993 + C119 * C986 + C107 * C994 +
            C118 * C987 + C106 * C995 + C117 * C988 + C105 * C996) *
               C50879 +
           (C120 * C981 + C108 * C989 + C119 * C982 + C107 * C990 +
            C118 * C983 + C106 * C991 + C117 * C984 + C105 * C992) *
               C980) *
              C51006 * C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C906 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C901 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C907 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C902 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C908 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C903) *
              C51006 * C51018 * C50920 * C904 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C907 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C901 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C906) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C902 -
           (C120 * C545 + C108 * C546 + C119 * C261 + C107 * C271 +
            C118 * C260 + C106 * C270 + C117 * C259 + C105 * C269) *
               C908 -
           (C120 * C547 + C108 * C548 + C119 * C277 + C107 * C292 +
            C118 * C272 + C106 * C288 + C117 * C273 + C105 * C289) *
               C903) *
              C51006 * C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C396 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C397 +
           ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
             C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
                C980 +
            (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
             C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
                C50879) *
               C51006 * C51018 * C398) *
              C904 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C397 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C396 -
           ((C120 * C1099 + C108 * C1107 + C119 * C1100 + C107 * C1108 +
             C118 * C1101 + C106 * C1109 + C117 * C1102 + C105 * C1110) *
                C50879 +
            (C120 * C1095 + C108 * C1103 + C119 * C1096 + C107 * C1104 +
             C118 * C1097 + C106 * C1105 + C117 * C1098 + C105 * C1106) *
                C980) *
               C51006 * C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C50920 * C904 +
          (((C2390 + C2389) * C907 -
            ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
            (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
            (C2743 + C2742) * C903) *
               C2173 +
           ((C2398 + C2397) * C907 -
            ((C2396 + C2395) * C901 + (C2394 + C2393) * C906) +
            (C2400 + C2399) * C902 - (C2745 + C2744) * C908 -
            (C2747 + C2746) * C903) *
               C2174 +
           ((C2401 + C2402) * C907 -
            ((C2403 + C2404) * C901 + (C2405 + C2406) * C906) +
            (C2407 + C2408) * C902 -
            (C2177 * C981 + C50866 * C989 + C2176 * C982 + C2171 * C990) *
                C908 -
            (C2177 * C985 + C50866 * C993 + C2176 * C986 + C2171 * C994) *
                C903) *
               C2175) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C2173 +
           ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
           C3412 * C2175) *
              C51018 * C50920 * C976 -
          (C3419 * C2175 +
           ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
           ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
              C51018 * C50920 * C977 +
          (C3412 * C2173 +
           ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
           ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
              C51018 * C50920 * C978 -
          (((C2177 * C3393 + C50866 * C3397 + C2176 * C3394 + C2171 * C3398) *
                C50879 +
            (C2177 * C3391 + C50866 * C3395 + C2176 * C3392 + C2171 * C3396) *
                C980) *
               C2175 +
           ((C3418 + C3417) * C50879 + (C3416 + C3415) * C980) * C2174 +
           C3419 * C2173) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C396 -
           (((C3142 + C3143) * C50879 + (C3144 + C3145) * C980) * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C397 +
           (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                 C980 +
             (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                 C50879) *
                C2173 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C2174 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C2175) *
               C51018 * C398) *
              C904 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C2176 * C3087 + C2171 * C3090 + C2177 * C3088 + C50866 * C3091) *
                 C980 +
             (C2176 * C3092 + C2171 * C3096 + C2177 * C3093 + C50866 * C3097) *
                 C50879) *
                C2175) *
               C51018 * C397 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C396 -
           (((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                 C50879 +
             (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                 C980) *
                C2175 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C2174 +
            ((C3593 + C3592) * C50879 + (C3591 + C3590) * C980) * C2173) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51139 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
             C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                C50000 -
            ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
              C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                 C51139 +
             (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
              C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                 C50007) +
            (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
             C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                C50884) *
               C51006 * C51018 * C50984) *
              C904 +
          (((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
             C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                C50000 -
            ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
              C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                 C51139 +
             (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
              C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                 C50007) +
            (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
             C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                C50884) *
               C51006 * C51018 * C51148 +
           ((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C50007 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C51139 -
            (C120 * C787 + C108 * C796 + C119 * C786 + C107 * C791 +
             C118 * C785 + C106 * C790 + C117 * C784 + C105 * C789) *
                C50000 -
            (C120 * C797 + C108 * C802 + C119 * C795 + C107 * C801 +
             C118 * C794 + C106 * C800 + C117 * C793 + C105 * C799) *
                C50884) *
               C51006 * C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C2173 +
            ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
             (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                C2174 +
            C3750 * C2175) *
               C51018 * C51148 +
           (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                 C50000 -
             ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                  C51139 +
              (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                  C50007) +
             (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                 C50884) *
                C2173 +
            ((C3132 + C3133) * C50000 -
             ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
             (C3138 + C3139) * C50884) *
                C2174 +
            ((C3140 + C3141) * C50000 -
             ((C3142 + C3143) * C51139 + (C3144 + C3145) * C50007) +
             (C3146 + C3147) * C50884) *
                C2175) *
               C51018 * C50984) *
              C904 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C2173 +
            ((C2398 + C2397) * C50000 -
             ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
             (C2400 + C2399) * C50884) *
                C2174 +
            ((C2401 + C2402) * C50000 - (C3402 * C51139 + C3403 * C50007) +
             (C2407 + C2408) * C50884) *
                C2175) *
               C51018 * C51148 +
           (((C3137 + C3136) * C50007 + (C3135 + C3134) * C51139 -
             (C3133 + C3132) * C50000 - (C3139 + C3138) * C50884) *
                C2173 +
            ((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
             (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
                C2174 +
            ((C2176 * C3087 + C2171 * C3090 + C2177 * C3088 + C50866 * C3091) *
                 C50007 +
             (C2176 * C3092 + C2171 * C3096 + C2177 * C3093 + C50866 * C3097) *
                 C51139 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C50000 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C2175) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C906 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C901 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C907 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C902 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C908 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C903) *
              C51006 * C51018 * C50920 * C904 +
          ((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
            C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
               C907 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C901 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C906) +
           (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
            C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
               C902 -
           (C120 * C545 + C108 * C546 + C119 * C261 + C107 * C271 +
            C118 * C260 + C106 * C270 + C117 * C259 + C105 * C269) *
               C908 -
           (C120 * C547 + C108 * C548 + C119 * C277 + C107 * C292 +
            C118 * C272 + C106 * C288 + C117 * C273 + C105 * C289) *
               C903) *
              C51006 * C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C980 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50879) *
              C51006 * C51018 * C50920 * C976 -
          ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
            C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
               C50879 +
           (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
            C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
               C980) *
              C51006 * C51018 * C50920 * C977 +
          ((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
            C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
               C980 +
           (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
            C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
               C50879) *
              C51006 * C51018 * C50920 * C978 -
          ((C120 * C985 + C108 * C993 + C119 * C986 + C107 * C994 +
            C118 * C987 + C106 * C995 + C117 * C988 + C105 * C996) *
               C50879 +
           (C120 * C981 + C108 * C989 + C119 * C982 + C107 * C990 +
            C118 * C983 + C106 * C991 + C117 * C984 + C105 * C992) *
               C980) *
              C51006 * C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C50920 * C904 +
          (((C2390 + C2389) * C907 -
            ((C2388 + C2387) * C901 + (C2386 + C2385) * C906) +
            (C2392 + C2391) * C902 - (C2741 + C2740) * C908 -
            (C2743 + C2742) * C903) *
               C2173 +
           ((C2398 + C2397) * C907 -
            ((C2396 + C2395) * C901 + (C2394 + C2393) * C906) +
            (C2400 + C2399) * C902 - (C2745 + C2744) * C908 -
            (C2747 + C2746) * C903) *
               C2174 +
           ((C2401 + C2402) * C907 -
            ((C2403 + C2404) * C901 + (C2405 + C2406) * C906) +
            (C2407 + C2408) * C902 -
            (C2177 * C981 + C50866 * C989 + C2176 * C982 + C2171 * C990) *
                C908 -
            (C2177 * C985 + C50866 * C993 + C2176 * C986 + C2171 * C994) *
                C903) *
               C2175) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C2173 +
           ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
           C3412 * C2175) *
              C51018 * C50920 * C976 -
          (C3419 * C2175 +
           ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
           ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
              C51018 * C50920 * C977 +
          (C3412 * C2173 +
           ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
           ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
              C51018 * C50920 * C978 -
          (((C2177 * C3393 + C50866 * C3397 + C2176 * C3394 + C2171 * C3398) *
                C50879 +
            (C2177 * C3391 + C50866 * C3395 + C2176 * C3392 + C2171 * C3396) *
                C980) *
               C2175 +
           ((C3418 + C3417) * C50879 + (C3416 + C3415) * C980) * C2174 +
           C3419 * C2173) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51139 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50884) *
               C51006 * C51018 * C1558 +
           ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
             C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
                C50000 -
            ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
              C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                 C51139 +
             (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
              C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                 C50007) +
            (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
             C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
                C50884) *
               C51006 * C51018 * C50984) *
              C51147 +
          (((C117 * C258 + C105 * C268 + C118 * C259 + C106 * C269 +
             C119 * C260 + C107 * C270 + C120 * C261 + C108 * C271) *
                C50000 -
            ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
              C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                 C51139 +
             (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
              C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                 C50007) +
            (C117 * C274 + C105 * C290 + C118 * C273 + C106 * C289 +
             C119 * C272 + C107 * C288 + C120 * C277 + C108 * C292) *
                C50884) *
               C51006 * C51018 * C1558 +
           ((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C50007 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C51139 -
            (C120 * C787 + C108 * C796 + C119 * C786 + C107 * C791 +
             C118 * C785 + C106 * C790 + C117 * C784 + C105 * C789) *
                C50000 -
            (C120 * C797 + C108 * C802 + C119 * C795 + C107 * C801 +
             C118 * C794 + C106 * C800 + C117 * C793 + C105 * C799) *
                C50884) *
               C51006 * C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C51139 -
             (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                 C50884) *
                C2173 +
            ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
             (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
                C2174 +
            C3750 * C2175) *
               C51018 * C1558 +
           (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                 C50000 -
             ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                  C51139 +
              (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                  C50007) +
             (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                 C50884) *
                C2173 +
            ((C3132 + C3133) * C50000 -
             ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
             (C3138 + C3139) * C50884) *
                C2174 +
            ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
             (C3146 + C3147) * C50884) *
                C2175) *
               C51018 * C50984) *
              C51147 +
          ((((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51139 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50884) *
                C2173 +
            ((C2398 + C2397) * C50000 -
             ((C2396 + C2395) * C51139 + (C2394 + C2393) * C50007) +
             (C2400 + C2399) * C50884) *
                C2174 +
            ((C2401 + C2402) * C50000 - (C3402 * C51139 + C3403 * C50007) +
             (C2407 + C2408) * C50884) *
                C2175) *
               C51018 * C1558 +
           (((C3137 + C3136) * C50007 + (C3135 + C3134) * C51139 -
             (C3133 + C3132) * C50000 - (C3139 + C3138) * C50884) *
                C2173 +
            ((C3145 + C3144) * C50007 + (C3143 + C3142) * C51139 -
             (C3141 + C3140) * C50000 - (C3147 + C3146) * C50884) *
                C2174 +
            ((C4111 + C4112) * C50007 + (C4113 + C4114) * C51139 -
             (C2177 * C3089 + C50866 * C3094 + C2176 * C3088 + C2171 * C3091) *
                 C50000 -
             (C2177 * C3095 + C50866 * C3098 + C2176 * C3093 + C2171 * C3097) *
                 C50884) *
                C2175) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C51194 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C51195 +
           ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
             C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
                C980 +
            (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
             C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
                C50879) *
               C51006 * C51018 * C1974) *
              C51147 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C51195 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C51194 -
           ((C120 * C1099 + C108 * C1107 + C119 * C1100 + C107 * C1108 +
             C118 * C1101 + C106 * C1109 + C117 * C1102 + C105 * C1110) *
                C50879 +
            (C120 * C1095 + C108 * C1103 + C119 * C1096 + C107 * C1104 +
             C118 * C1097 + C106 * C1105 + C117 * C1098 + C105 * C1106) *
                C980) *
               C51006 * C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C51194 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C51195 +
           (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                 C980 +
             (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                 C50879) *
                C2173 +
            ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C2174 +
            ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C2175) *
               C51018 * C1974) *
              C51147 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C51195 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C51194 -
           (((C2177 * C3567 + C50866 * C3571 + C2176 * C3568 + C2171 * C3572) *
                 C50879 +
             (C2177 * C3565 + C50866 * C3569 + C2176 * C3566 + C2171 * C3570) *
                 C980) *
                C2175 +
            ((C3597 + C3596) * C50879 + (C3595 + C3594) * C980) * C2174 +
            ((C3593 + C3592) * C50879 + (C3591 + C3590) * C980) * C2173) *
               C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C1558 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C50984) *
              C253 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C50984 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C1558) *
              C254 +
          (((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
             C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                C980 +
            (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
             C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                C50879) *
               C51006 * C51018 * C1558 -
           ((C120 * C1448 + C108 * C1456 + C119 * C1449 + C107 * C1457 +
             C118 * C1450 + C106 * C1458 + C117 * C1451 + C105 * C1459) *
                C50879 +
            (C120 * C1444 + C108 * C1452 + C119 * C1445 + C107 * C1453 +
             C118 * C1446 + C106 * C1454 + C117 * C1447 + C105 * C1455) *
                C980) *
               C51006 * C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C906 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C901 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C907 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C902 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C908 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C903) *
              C51006 * C51018 * C1558 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C907 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C901 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C906) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C902 -
           (C120 * C649 + C108 * C650 + C119 * C402 + C107 * C412 +
            C118 * C401 + C106 * C411 + C117 * C400 + C105 * C410) *
               C908 -
           (C120 * C651 + C108 * C652 + C119 * C418 + C107 * C433 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C903) *
              C51006 * C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C980 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50879) *
              C51006 * C51018 * C1724 -
          ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
            C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
               C50879 +
           (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
            C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
               C980) *
              C51006 * C51018 * C1725 +
          ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
            C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
               C980 +
           (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
            C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
               C50879) *
              C51006 * C51018 * C1726 -
          ((C120 * C1732 + C108 * C1740 + C119 * C1733 + C107 * C1741 +
            C118 * C1734 + C106 * C1742 + C117 * C1735 + C105 * C1743) *
               C50879 +
           (C120 * C1728 + C108 * C1736 + C119 * C1729 + C107 * C1737 +
            C118 * C1730 + C106 * C1738 + C117 * C1731 + C105 * C1739) *
               C980) *
              C51006 * C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C1558 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C907 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C901 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C906) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C902 -
            (C2177 * C401 + C50866 * C411 + C2176 * C400 + C2171 * C410) *
                C908 -
            (C2177 * C413 + C50866 * C429 + C2176 * C414 + C2171 * C430) *
                C903) *
               C2173 +
           ((C3132 + C3133) * C907 -
            ((C3134 + C3135) * C901 + (C3136 + C3137) * C906) +
            (C3138 + C3139) * C902 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C908 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C903) *
               C2174 +
           ((C3140 + C3141) * C907 - (C4099 * C901 + C4100 * C906) +
            (C3146 + C3147) * C902 -
            (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                C908 -
            (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                C903) *
               C2175) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C1558 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C50984) *
              C253 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C50984 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C1558) *
              C254 +
          ((C3412 * C2173 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
            ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
               C51018 * C1558 -
           (((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C2175 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C2174 +
            C4115 * C2173) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C980 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C50879) *
               C2173 +
           ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
           C3412 * C2175) *
              C51018 * C1724 -
          (C4115 * C2175 +
           ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
           ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                C50879 +
            (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                C980) *
               C2173) *
              C51018 * C1725 +
          (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C980 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C50879) *
               C2173 +
           ((C3590 + C3591) * C980 + (C3592 + C3593) * C50879) * C2174 +
           ((C3594 + C3595) * C980 + (C3596 + C3597) * C50879) * C2175) *
              C51018 * C1726 -
          (((C2177 * C4509 + C50866 * C4517 + C2176 * C4510 + C2171 * C4518) *
                C50879 +
            (C2177 * C4505 + C50866 * C4511 + C2176 * C4506 + C2171 * C4512) *
                C980) *
               C2175 +
           ((C2177 * C4513 + C50866 * C4519 + C2176 * C4514 + C2171 * C4520) *
                C50879 +
            (C2177 * C4507 + C50866 * C4515 + C2176 * C4508 + C2171 * C4516) *
                C980) *
               C2174 +
           ((C2177 * C1734 + C50866 * C1742 + C2176 * C1735 + C2171 * C1743) *
                C50879 +
            (C2177 * C1730 + C50866 * C1738 + C2176 * C1731 + C2171 * C1739) *
                C980) *
               C2173) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51139 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50884) *
              C51006 * C51018 * C51194 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C50000 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C51139 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C50007) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C50884) *
              C51006 * C51018 * C51195 +
          ((C117 * C404 + C105 * C419 + C118 * C405 + C106 * C420 +
            C119 * C406 + C107 * C421 + C120 * C407 + C108 * C422) *
               C50007 +
           (C117 * C423 + C105 * C434 + C118 * C424 + C106 * C435 +
            C119 * C425 + C107 * C436 + C120 * C426 + C108 * C437) *
               C51139 -
           (C120 * C408 + C108 * C427 + C119 * C407 + C107 * C422 +
            C118 * C406 + C106 * C421 + C117 * C405 + C105 * C420) *
               C50000 -
           (C120 * C428 + C108 * C438 + C119 * C426 + C107 * C437 +
            C118 * C425 + C106 * C436 + C117 * C424 + C105 * C435) *
               C50884) *
              C51006 * C51018 * C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C51139 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C50884) *
               C2173 +
           ((C2385 + C2386) * C50007 + (C2387 + C2388) * C51139 -
            (C2389 + C2390) * C50000 - (C2391 + C2392) * C50884) *
               C2174 +
           C3750 * C2175) *
              C51018 * C51194 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C50000 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C51139 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C50007) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C50884) *
               C2173 +
           ((C3132 + C3133) * C50000 -
            ((C3134 + C3135) * C51139 + (C3136 + C3137) * C50007) +
            (C3138 + C3139) * C50884) *
               C2174 +
           ((C3140 + C3141) * C50000 - (C4099 * C51139 + C4100 * C50007) +
            (C3146 + C3147) * C50884) *
               C2175) *
              C51018 * C51195 +
          (((C2176 * C404 + C2171 * C419 + C2177 * C405 + C50866 * C420) *
                C50007 +
            (C2176 * C423 + C2171 * C434 + C2177 * C424 + C50866 * C435) *
                C51139 -
            (C2177 * C406 + C50866 * C421 + C2176 * C405 + C2171 * C420) *
                C50000 -
            (C2177 * C425 + C50866 * C436 + C2176 * C424 + C2171 * C435) *
                C50884) *
               C2173 +
           ((C3590 + C3591) * C50007 + (C3592 + C3593) * C51139 -
            (C2177 * C1096 + C50866 * C1104 + C2176 * C1097 + C2171 * C1105) *
                C50000 -
            (C2177 * C1100 + C50866 * C1108 + C2176 * C1101 + C2171 * C1109) *
                C50884) *
               C2174 +
           ((C3594 + C3595) * C50007 + (C3596 + C3597) * C51139 -
            (C2177 * C2567 + C50866 * C2572 + C2176 * C2566 + C2171 * C2569) *
                C50000 -
            (C2177 * C2573 + C50866 * C2576 + C2176 * C2571 + C2171 * C2575) *
                C50884) *
               C2175) *
              C51018 * C1974) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C906 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C901 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C907 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C902 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C908 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C903) *
              C51006 * C51018 * C1558 +
          ((C117 * C399 + C105 * C409 + C118 * C400 + C106 * C410 +
            C119 * C401 + C107 * C411 + C120 * C402 + C108 * C412) *
               C907 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C901 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C906) +
           (C117 * C415 + C105 * C431 + C118 * C414 + C106 * C430 +
            C119 * C413 + C107 * C429 + C120 * C418 + C108 * C433) *
               C902 -
           (C120 * C649 + C108 * C650 + C119 * C402 + C107 * C412 +
            C118 * C401 + C106 * C411 + C117 * C400 + C105 * C410) *
               C908 -
           (C120 * C651 + C108 * C652 + C119 * C418 + C107 * C433 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C903) *
              C51006 * C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C980 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50879) *
               C51006 * C51018 * C1558 -
           ((C120 * C413 + C108 * C429 + C119 * C414 + C107 * C430 +
             C118 * C415 + C106 * C431 + C117 * C416 + C105 * C432) *
                C50879 +
            (C120 * C401 + C108 * C411 + C119 * C400 + C107 * C410 +
             C118 * C399 + C106 * C409 + C117 * C403 + C105 * C417) *
                C980) *
               C51006 * C51018 * C50984) *
              C253 +
          (((C117 * C783 + C105 * C788 + C118 * C784 + C106 * C789 +
             C119 * C785 + C107 * C790 + C120 * C786 + C108 * C791) *
                C980 +
            (C117 * C792 + C105 * C798 + C118 * C793 + C106 * C799 +
             C119 * C794 + C107 * C800 + C120 * C795 + C108 * C801) *
                C50879) *
               C51006 * C51018 * C50984 -
           ((C120 * C272 + C108 * C288 + C119 * C273 + C107 * C289 +
             C118 * C274 + C106 * C290 + C117 * C275 + C105 * C291) *
                C50879 +
            (C120 * C260 + C108 * C270 + C119 * C259 + C107 * C269 +
             C118 * C258 + C106 * C268 + C117 * C262 + C105 * C276) *
                C980) *
               C51006 * C51018 * C1558) *
              C254 +
          (((C117 * C263 + C105 * C278 + C118 * C264 + C106 * C279 +
             C119 * C265 + C107 * C280 + C120 * C266 + C108 * C281) *
                C980 +
            (C117 * C282 + C105 * C293 + C118 * C283 + C106 * C294 +
             C119 * C284 + C107 * C295 + C120 * C285 + C108 * C296) *
                C50879) *
               C51006 * C51018 * C1558 -
           ((C120 * C1448 + C108 * C1456 + C119 * C1449 + C107 * C1457 +
             C118 * C1450 + C106 * C1458 + C117 * C1451 + C105 * C1459) *
                C50879 +
            (C120 * C1444 + C108 * C1452 + C119 * C1445 + C107 * C1453 +
             C118 * C1446 + C106 * C1454 + C117 * C1447 + C105 * C1455) *
                C980) *
               C51006 * C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                C906 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                C901 -
            (C2177 * C127 + C50866 * C134 + C2176 * C126 + C2171 * C133) *
                C907 -
            (C2177 * C138 + C50866 * C148 + C2176 * C137 + C2171 * C147) *
                C902 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50866 * C135) *
                C908 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50866 * C149) *
                C903) *
               C2173 +
           ((C2385 + C2386) * C906 + (C2387 + C2388) * C901 -
            (C2389 + C2390) * C907 - (C2391 + C2392) * C902 +
            (C2740 + C2741) * C908 + (C2742 + C2743) * C903) *
               C2174 +
           (C2409 * C906 + C2410 * C901 - C2411 * C907 - C2412 * C902 +
            (C2744 + C2745) * C908 + (C2746 + C2747) * C903) *
               C2175) *
              C51018 * C1558 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C400 + C50866 * C410) *
                C907 -
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C901 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C906) +
            (C2176 * C415 + C2171 * C431 + C2177 * C414 + C50866 * C430) *
                C902 -
            (C2177 * C401 + C50866 * C411 + C2176 * C400 + C2171 * C410) *
                C908 -
            (C2177 * C413 + C50866 * C429 + C2176 * C414 + C2171 * C430) *
                C903) *
               C2173 +
           ((C3132 + C3133) * C907 -
            ((C3134 + C3135) * C901 + (C3136 + C3137) * C906) +
            (C3138 + C3139) * C902 -
            (C2177 * C786 + C50866 * C791 + C2176 * C785 + C2171 * C790) *
                C908 -
            (C2177 * C795 + C50866 * C801 + C2176 * C794 + C2171 * C800) *
                C903) *
               C2174 +
           ((C3140 + C3141) * C907 - (C4099 * C901 + C4100 * C906) +
            (C3146 + C3147) * C902 -
            (C2177 * C1444 + C50866 * C1452 + C2176 * C1445 + C2171 * C1453) *
                C908 -
            (C2177 * C1448 + C50866 * C1456 + C2176 * C1449 + C2171 * C1457) *
                C903) *
               C2175) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50866 * C133) *
                 C980 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50866 * C147) *
                 C50879) *
                C2173 +
            ((C2385 + C2386) * C980 + (C2387 + C2388) * C50879) * C2174 +
            C3412 * C2175) *
               C51018 * C1558 -
           (C4115 * C2175 +
            ((C3134 + C3135) * C50879 + (C3136 + C3137) * C980) * C2174 +
            ((C2177 * C415 + C50866 * C431 + C2176 * C416 + C2171 * C432) *
                 C50879 +
             (C2177 * C399 + C50866 * C409 + C2176 * C403 + C2171 * C417) *
                 C980) *
                C2173) *
               C51018 * C50984) *
              C253 +
          ((((C3137 + C3136) * C980 + (C3135 + C3134) * C50879) * C2173 +
            ((C3145 + C3144) * C980 + (C3143 + C3142) * C50879) * C2174 +
            ((C4111 + C4112) * C980 + (C4113 + C4114) * C50879) * C2175) *
               C51018 * C50984 -
           (C3419 * C2175 +
            ((C2396 + C2395) * C50879 + (C2394 + C2393) * C980) * C2174 +
            ((C2388 + C2387) * C50879 + (C2386 + C2385) * C980) * C2173) *
               C51018 * C1558) *
              C254 +
          ((C3412 * C2173 +
            ((C2406 + C2405) * C980 + (C2404 + C2403) * C50879) * C2174 +
            ((C3415 + C3416) * C980 + (C3417 + C3418) * C50879) * C2175) *
               C51018 * C1558 -
           (((C2177 * C4092 + C50866 * C4096 + C2176 * C4093 + C2171 * C4097) *
                 C50879 +
             (C2177 * C4090 + C50866 * C4094 + C2176 * C4091 + C2171 * C4095) *
                 C980) *
                C2175 +
            ((C4114 + C4113) * C50879 + (C4112 + C4111) * C980) * C2174 +
            C4115 * C2173) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C542 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51190 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C543 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C51191 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C544 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C539) *
               C51196 +
           ((C25020 + C25021) * C542 + (C25022 + C25023) * C51190 -
            (C25024 + C25025) * C543 - (C25026 + C25027) * C51191 +
            (C25363 + C25364) * C544 + (C25365 + C25366) * C539) *
               C51197 +
           (C25044 * C542 + C25045 * C51190 - C25046 * C543 - C25047 * C51191 +
            (C25367 + C25368) * C544 + (C25369 + C25370) * C539) *
               C24822) *
              C51018 * C50920 * C51147 +
          (((C25025 + C25024) * C543 -
            ((C25023 + C25022) * C51190 + (C25021 + C25020) * C542) +
            (C25027 + C25026) * C51191 - (C25364 + C25363) * C544 -
            (C25366 + C25365) * C539) *
               C51196 +
           ((C25033 + C25032) * C543 -
            ((C25031 + C25030) * C51190 + (C25029 + C25028) * C542) +
            (C25035 + C25034) * C51191 - (C25368 + C25367) * C544 -
            (C25370 + C25369) * C539) *
               C51197 +
           ((C25036 + C25037) * C543 -
            ((C25038 + C25039) * C51190 + (C25040 + C25041) * C542) +
            (C25042 + C25043) * C51191 -
            (C49954 * C981 + C50866 * C989 + C49961 * C982 + C51132 * C990) *
                C544 -
            (C49954 * C985 + C50866 * C993 + C49961 * C986 + C51132 * C994) *
                C539) *
               C24822) *
              C51018 * C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51196 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51197 +
            C25054 * C24822) *
               C51018 * C51148 +
           (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                 C257 -
             ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                  C251 +
              (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                  C256) +
             (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                 C50884) *
                C51196 +
            ((C25743 + C25744) * C257 -
             ((C25745 + C25746) * C251 + (C25747 + C25748) * C256) +
             (C25749 + C25750) * C50884) *
                C51197 +
            ((C25751 + C25752) * C257 -
             ((C25753 + C25754) * C251 + (C25755 + C25756) * C256) +
             (C25757 + C25758) * C50884) *
                C24822) *
               C51018 * C50984) *
              C51147 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C50884) *
                C51196 +
            ((C25033 + C25032) * C257 -
             ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
             (C25035 + C25034) * C50884) *
                C51197 +
            ((C25036 + C25037) * C257 -
             ((C25038 + C25039) * C251 + (C25040 + C25041) * C256) +
             (C25042 + C25043) * C50884) *
                C24822) *
               C51018 * C51148 +
           (((C25748 + C25747) * C256 + (C25746 + C25745) * C251 -
             (C25744 + C25743) * C257 - (C25750 + C25749) * C50884) *
                C51196 +
            ((C25756 + C25755) * C256 + (C25754 + C25753) * C251 -
             (C25752 + C25751) * C257 - (C25758 + C25757) * C50884) *
                C51197 +
            ((C49961 * C3087 + C51132 * C3090 + C49954 * C3088 +
              C50866 * C3091) *
                 C256 +
             (C49961 * C3092 + C51132 * C3096 + C49954 * C3093 +
              C50866 * C3097) *
                 C251 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C257 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C24822) *
               C51018 * C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C256 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C251 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C257 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51196 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
               C51197 +
           C25054 * C24822) *
              C51018 * C50920 * C253 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C50884) *
               C51196 +
           ((C25033 + C25032) * C257 -
            ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
            (C25035 + C25034) * C50884) *
               C51197 +
           ((C25036 + C25037) * C257 -
            ((C25038 + C25039) * C251 + (C25040 + C25041) * C256) +
            (C25042 + C25043) * C50884) *
               C24822) *
              C51018 * C50920 * C254 +
          (C25054 * C51196 +
           ((C25041 + C25040) * C256 + (C25039 + C25038) * C251 -
            (C25037 + C25036) * C257 - (C25043 + C25042) * C50884) *
               C51197 +
           ((C49961 * C2324 + C51132 * C2327 + C49954 * C2325 +
             C50866 * C2328) *
                C256 +
            (C49961 * C2329 + C51132 * C2333 + C49954 * C2330 +
             C50866 * C2334) *
                C251 -
            (C49954 * C2326 + C50866 * C2331 + C49961 * C2325 +
             C51132 * C2328) *
                C257 -
            (C49954 * C2332 + C50866 * C2335 + C49961 * C2330 +
             C51132 * C2334) *
                C50884) *
               C24822) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
               C121 +
           (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
               C109 -
           (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
               C122 -
           (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
               C110 +
           (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
               C123 +
           (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
               C111 -
           (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
               C124 -
           (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
               C112) *
              C51196 +
          ((C49961 * C262 + C51132 * C276 + C49954 * C258 + C50866 * C268) *
               C121 +
           (C49961 * C275 + C51132 * C291 + C49954 * C274 + C50866 * C290) *
               C109 -
           (C49954 * C259 + C50866 * C269 + C49961 * C258 + C51132 * C268) *
               C122 -
           (C49954 * C273 + C50866 * C289 + C49961 * C274 + C51132 * C290) *
               C110 +
           (C49961 * C259 + C51132 * C269 + C49954 * C260 + C50866 * C270) *
               C123 +
           (C49961 * C273 + C51132 * C289 + C49954 * C272 + C50866 * C288) *
               C111 -
           (C49954 * C261 + C50866 * C271 + C49961 * C260 + C51132 * C270) *
               C124 -
           (C49954 * C277 + C50866 * C292 + C49961 * C272 + C51132 * C288) *
               C112) *
              C51197 +
          ((C49961 * C263 + C51132 * C278 + C49954 * C264 + C50866 * C279) *
               C121 +
           (C49961 * C282 + C51132 * C293 + C49954 * C283 + C50866 * C294) *
               C109 -
           (C49954 * C265 + C50866 * C280 + C49961 * C264 + C51132 * C279) *
               C122 -
           (C49954 * C284 + C50866 * C295 + C49961 * C283 + C51132 * C294) *
               C110 +
           (C49961 * C265 + C51132 * C280 + C49954 * C266 + C50866 * C281) *
               C123 +
           (C49961 * C284 + C51132 * C295 + C49954 * C285 + C50866 * C296) *
               C111 -
           (C49954 * C267 + C50866 * C286 + C49961 * C266 + C51132 * C281) *
               C124 -
           (C49954 * C287 + C50866 * C297 + C49961 * C285 + C51132 * C296) *
               C112) *
              C24822) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C256 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C251 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C257 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51196 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
               C51197 +
           C25054 * C24822) *
              C51018 * C396 +
          (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                C257 -
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C251 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C256) +
            (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                C50884) *
               C51196 +
           ((C49961 * C784 + C51132 * C789 + C49954 * C785 + C50866 * C790) *
                C257 -
            ((C49954 * C793 + C50866 * C799 + C49961 * C792 + C51132 * C798) *
                 C251 +
             (C49954 * C784 + C50866 * C789 + C49961 * C783 + C51132 * C788) *
                 C256) +
            (C49961 * C793 + C51132 * C799 + C49954 * C794 + C50866 * C800) *
                C50884) *
               C51197 +
           ((C49961 * C1446 + C51132 * C1454 + C49954 * C1445 +
             C50866 * C1453) *
                C257 -
            ((C49954 * C1450 + C50866 * C1458 + C49961 * C1451 +
              C51132 * C1459) *
                 C251 +
             (C49954 * C1446 + C50866 * C1454 + C49961 * C1447 +
              C51132 * C1455) *
                 C256) +
            (C49961 * C1450 + C51132 * C1458 + C49954 * C1449 +
             C50866 * C1457) *
                C50884) *
               C24822) *
              C51018 * C397 +
          (((C49961 * C404 + C51132 * C419 + C49954 * C405 + C50866 * C420) *
                C256 +
            (C49961 * C423 + C51132 * C434 + C49954 * C424 + C50866 * C435) *
                C251 -
            (C49954 * C406 + C50866 * C421 + C49961 * C405 + C51132 * C420) *
                C257 -
            (C49954 * C425 + C50866 * C436 + C49961 * C424 + C51132 * C435) *
                C50884) *
               C51196 +
           ((C49961 * C1098 + C51132 * C1106 + C49954 * C1097 +
             C50866 * C1105) *
                C256 +
            (C49961 * C1102 + C51132 * C1110 + C49954 * C1101 +
             C50866 * C1109) *
                C251 -
            (C49954 * C1096 + C50866 * C1104 + C49961 * C1097 +
             C51132 * C1105) *
                C257 -
            (C49954 * C1100 + C50866 * C1108 + C49961 * C1101 +
             C51132 * C1109) *
                C50884) *
               C51197 +
           ((C49961 * C2565 + C51132 * C2568 + C49954 * C2566 +
             C50866 * C2569) *
                C256 +
            (C49961 * C2570 + C51132 * C2574 + C49954 * C2571 +
             C50866 * C2575) *
                C251 -
            (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
             C51132 * C2569) *
                C257 -
            (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
             C51132 * C2575) *
                C50884) *
               C24822) *
              C51018 * C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C542 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51190 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C543 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C51191 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C544 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C539) *
               C51196 +
           ((C25020 + C25021) * C542 + (C25022 + C25023) * C51190 -
            (C25024 + C25025) * C543 - (C25026 + C25027) * C51191 +
            (C25363 + C25364) * C544 + (C25365 + C25366) * C539) *
               C51197 +
           (C25044 * C542 + C25045 * C51190 - C25046 * C543 - C25047 * C51191 +
            (C25367 + C25368) * C544 + (C25369 + C25370) * C539) *
               C24822) *
              C51018 * C51148 +
          (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                C543 -
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C51190 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C542) +
            (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                C51191 -
            (C49954 * C401 + C50866 * C411 + C49961 * C400 + C51132 * C410) *
                C544 -
            (C49954 * C413 + C50866 * C429 + C49961 * C414 + C51132 * C430) *
                C539) *
               C51196 +
           ((C49961 * C784 + C51132 * C789 + C49954 * C785 + C50866 * C790) *
                C543 -
            ((C49954 * C793 + C50866 * C799 + C49961 * C792 + C51132 * C798) *
                 C51190 +
             (C49954 * C784 + C50866 * C789 + C49961 * C783 + C51132 * C788) *
                 C542) +
            (C49961 * C793 + C51132 * C799 + C49954 * C794 + C50866 * C800) *
                C51191 -
            (C49954 * C786 + C50866 * C791 + C49961 * C785 + C51132 * C790) *
                C544 -
            (C49954 * C795 + C50866 * C801 + C49961 * C794 + C51132 * C800) *
                C539) *
               C51197 +
           ((C49961 * C1446 + C51132 * C1454 + C49954 * C1445 +
             C50866 * C1453) *
                C543 -
            ((C49954 * C1450 + C50866 * C1458 + C49961 * C1451 +
              C51132 * C1459) *
                 C51190 +
             (C49954 * C1446 + C50866 * C1454 + C49961 * C1447 +
              C51132 * C1455) *
                 C542) +
            (C49961 * C1450 + C51132 * C1458 + C49954 * C1449 +
             C50866 * C1457) *
                C51191 -
            (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
             C51132 * C1453) *
                C544 -
            (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
             C51132 * C1457) *
                C539) *
               C24822) *
              C51018 * C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
               C121 +
           (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
               C109 -
           (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
               C122 -
           (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
               C110 +
           (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
               C123 +
           (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
               C111 -
           (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
               C124 -
           (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
               C112) *
              C51196 +
          ((C49961 * C262 + C51132 * C276 + C49954 * C258 + C50866 * C268) *
               C121 +
           (C49961 * C275 + C51132 * C291 + C49954 * C274 + C50866 * C290) *
               C109 -
           (C49954 * C259 + C50866 * C269 + C49961 * C258 + C51132 * C268) *
               C122 -
           (C49954 * C273 + C50866 * C289 + C49961 * C274 + C51132 * C290) *
               C110 +
           (C49961 * C259 + C51132 * C269 + C49954 * C260 + C50866 * C270) *
               C123 +
           (C49961 * C273 + C51132 * C289 + C49954 * C272 + C50866 * C288) *
               C111 -
           (C49954 * C261 + C50866 * C271 + C49961 * C260 + C51132 * C270) *
               C124 -
           (C49954 * C277 + C50866 * C292 + C49961 * C272 + C51132 * C288) *
               C112) *
              C51197 +
          ((C49961 * C263 + C51132 * C278 + C49954 * C264 + C50866 * C279) *
               C121 +
           (C49961 * C282 + C51132 * C293 + C49954 * C283 + C50866 * C294) *
               C109 -
           (C49954 * C265 + C50866 * C280 + C49961 * C264 + C51132 * C279) *
               C122 -
           (C49954 * C284 + C50866 * C295 + C49961 * C283 + C51132 * C294) *
               C110 +
           (C49961 * C265 + C51132 * C280 + C49954 * C266 + C50866 * C281) *
               C123 +
           (C49961 * C284 + C51132 * C295 + C49954 * C285 + C50866 * C296) *
               C111 -
           (C49954 * C267 + C50866 * C286 + C49961 * C266 + C51132 * C281) *
               C124 -
           (C49954 * C287 + C50866 * C297 + C49961 * C285 + C51132 * C296) *
               C112) *
              C24822) *
         C51018 * C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C256 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C251 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C257 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51196 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
               C51197 +
           C25054 * C24822) *
              C51018 * C50920 * C253 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C50884) *
               C51196 +
           ((C25033 + C25032) * C257 -
            ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
            (C25035 + C25034) * C50884) *
               C51197 +
           ((C25036 + C25037) * C257 -
            ((C25038 + C25039) * C251 + (C25040 + C25041) * C256) +
            (C25042 + C25043) * C50884) *
               C24822) *
              C51018 * C50920 * C254 +
          (C25054 * C51196 +
           ((C25041 + C25040) * C256 + (C25039 + C25038) * C251 -
            (C25037 + C25036) * C257 - (C25043 + C25042) * C50884) *
               C51197 +
           ((C49961 * C2324 + C51132 * C2327 + C49954 * C2325 +
             C50866 * C2328) *
                C256 +
            (C49961 * C2329 + C51132 * C2333 + C49954 * C2330 +
             C50866 * C2334) *
                C251 -
            (C49954 * C2326 + C50866 * C2331 + C49961 * C2325 +
             C51132 * C2328) *
                C257 -
            (C49954 * C2332 + C50866 * C2335 + C49961 * C2330 +
             C51132 * C2334) *
                C50884) *
               C24822) *
              C51018 * C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C50007 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51139 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C50000 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51196 +
           ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
            (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
               C51197 +
           C26345 * C24822) *
              C51018 * C50920 * C51192 +
          (((C25025 + C25024) * C50000 -
            ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
            (C25027 + C25026) * C50884) *
               C51196 +
           ((C25033 + C25032) * C50000 -
            ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
            (C25035 + C25034) * C50884) *
               C51197 +
           ((C25036 + C25037) * C50000 - (C26005 * C51139 + C26006 * C50007) +
            (C25042 + C25043) * C50884) *
               C24822) *
              C51018 * C50920 * C51193 +
          (C26345 * C51196 +
           ((C25041 + C25040) * C50007 + (C25039 + C25038) * C51139 -
            (C25037 + C25036) * C50000 - (C25043 + C25042) * C50884) *
               C51197 +
           ((C26018 + C26019) * C50007 + (C26020 + C26021) * C51139 -
            (C49954 * C2326 + C50866 * C2331 + C49961 * C2325 +
             C51132 * C2328) *
                C50000 -
            (C49954 * C2332 + C50866 * C2335 + C49961 * C2330 +
             C51132 * C2334) *
                C50884) *
               C24822) *
              C51018 * C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51196 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
            C26015 * C24822) *
               C51018 * C51148 -
           (C26702 * C24822 +
            ((C25745 + C25746) * C50879 + (C25747 + C25748) * C980) * C51197 +
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C50879 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C980) *
                C51196) *
               C51018 * C50984) *
              C51192 +
          ((((C25748 + C25747) * C980 + (C25746 + C25745) * C50879) * C51196 +
            ((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C51197 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C24822) *
               C51018 * C50984 -
           (C26022 * C24822 +
            ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
               C51018 * C51148) *
              C51193 +
          ((C26015 * C51196 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51197 +
            ((C26018 + C26019) * C980 + (C26020 + C26021) * C50879) * C24822) *
               C51018 * C51148 -
           (((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C24822 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51197 +
            C26702 * C51196) *
               C51018 * C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C980 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C50879) *
               C51196 +
           ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
           C26015 * C24822) *
              C51018 * C50920 * C976 -
          (C26022 * C24822 +
           ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
           ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
              C51018 * C50920 * C977 +
          (C26015 * C51196 +
           ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51197 +
           ((C26018 + C26019) * C980 + (C26020 + C26021) * C50879) * C24822) *
              C51018 * C50920 * C978 -
          (((C49954 * C3393 + C50866 * C3397 + C49961 * C3394 +
             C51132 * C3398) *
                C50879 +
            (C49954 * C3391 + C50866 * C3395 + C49961 * C3392 +
             C51132 * C3396) *
                C980) *
               C24822 +
           ((C26021 + C26020) * C50879 + (C26019 + C26018) * C980) * C51197 +
           C26022 * C51196) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51196 +
           ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
            (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
            (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
               C51197 +
           (C25044 * C906 + C25045 * C901 - C25046 * C907 - C25047 * C902 +
            (C25367 + C25368) * C908 + (C25369 + C25370) * C903) *
               C24822) *
              C51018 * C50920 * C904 +
          (((C25025 + C25024) * C907 -
            ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
            (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
            (C25366 + C25365) * C903) *
               C51196 +
           ((C25033 + C25032) * C907 -
            ((C25031 + C25030) * C901 + (C25029 + C25028) * C906) +
            (C25035 + C25034) * C902 - (C25368 + C25367) * C908 -
            (C25370 + C25369) * C903) *
               C51197 +
           ((C25036 + C25037) * C907 -
            ((C25038 + C25039) * C901 + (C25040 + C25041) * C906) +
            (C25042 + C25043) * C902 -
            (C49954 * C981 + C50866 * C989 + C49961 * C982 + C51132 * C990) *
                C908 -
            (C49954 * C985 + C50866 * C993 + C49961 * C986 + C51132 * C994) *
                C903) *
               C24822) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51196 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
            C26015 * C24822) *
               C51018 * C396 -
           (((C25753 + C25754) * C50879 + (C25755 + C25756) * C980) * C24822 +
            ((C25745 + C25746) * C50879 + (C25747 + C25748) * C980) * C51197 +
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C50879 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C980) *
                C51196) *
               C51018 * C397 +
           (((C49961 * C404 + C51132 * C419 + C49954 * C405 + C50866 * C420) *
                 C980 +
             (C49961 * C423 + C51132 * C434 + C49954 * C424 + C50866 * C435) *
                 C50879) *
                C51196 +
            ((C26185 + C26186) * C980 + (C26187 + C26188) * C50879) * C51197 +
            ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C24822) *
               C51018 * C398) *
              C904 +
          ((((C25748 + C25747) * C980 + (C25746 + C25745) * C50879) * C51196 +
            ((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C51197 +
            ((C49961 * C3087 + C51132 * C3090 + C49954 * C3088 +
              C50866 * C3091) *
                 C980 +
             (C49961 * C3092 + C51132 * C3096 + C49954 * C3093 +
              C50866 * C3097) *
                 C50879) *
                C24822) *
               C51018 * C397 -
           (C26022 * C24822 +
            ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
               C51018 * C396 -
           (((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
              C51132 * C3572) *
                 C50879 +
             (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
              C51132 * C3570) *
                 C980) *
                C24822 +
            ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51197 +
            ((C26188 + C26187) * C50879 + (C26186 + C26185) * C980) * C51196) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51196 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                C51197 +
            C26345 * C24822) *
               C51018 * C51148 +
           (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                 C50000 -
             ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                  C51139 +
              (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                  C50007) +
             (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                 C50884) *
                C51196 +
            ((C25743 + C25744) * C50000 -
             ((C25745 + C25746) * C51139 + (C25747 + C25748) * C50007) +
             (C25749 + C25750) * C50884) *
                C51197 +
            ((C25751 + C25752) * C50000 -
             ((C25753 + C25754) * C51139 + (C25755 + C25756) * C50007) +
             (C25757 + C25758) * C50884) *
                C24822) *
               C51018 * C50984) *
              C904 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50884) *
                C51196 +
            ((C25033 + C25032) * C50000 -
             ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
             (C25035 + C25034) * C50884) *
                C51197 +
            ((C25036 + C25037) * C50000 - (C26005 * C51139 + C26006 * C50007) +
             (C25042 + C25043) * C50884) *
                C24822) *
               C51018 * C51148 +
           (((C25748 + C25747) * C50007 + (C25746 + C25745) * C51139 -
             (C25744 + C25743) * C50000 - (C25750 + C25749) * C50884) *
                C51196 +
            ((C25756 + C25755) * C50007 + (C25754 + C25753) * C51139 -
             (C25752 + C25751) * C50000 - (C25758 + C25757) * C50884) *
                C51197 +
            ((C49961 * C3087 + C51132 * C3090 + C49954 * C3088 +
              C50866 * C3091) *
                 C50007 +
             (C49961 * C3092 + C51132 * C3096 + C49954 * C3093 +
              C50866 * C3097) *
                 C51139 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C50000 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C24822) *
               C51018 * C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51196 +
           ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
            (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
            (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
               C51197 +
           (C25044 * C906 + C25045 * C901 - C25046 * C907 - C25047 * C902 +
            (C25367 + C25368) * C908 + (C25369 + C25370) * C903) *
               C24822) *
              C51018 * C50920 * C904 +
          (((C25025 + C25024) * C907 -
            ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
            (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
            (C25366 + C25365) * C903) *
               C51196 +
           ((C25033 + C25032) * C907 -
            ((C25031 + C25030) * C901 + (C25029 + C25028) * C906) +
            (C25035 + C25034) * C902 - (C25368 + C25367) * C908 -
            (C25370 + C25369) * C903) *
               C51197 +
           ((C25036 + C25037) * C907 -
            ((C25038 + C25039) * C901 + (C25040 + C25041) * C906) +
            (C25042 + C25043) * C902 -
            (C49954 * C981 + C50866 * C989 + C49961 * C982 + C51132 * C990) *
                C908 -
            (C49954 * C985 + C50866 * C993 + C49961 * C986 + C51132 * C994) *
                C903) *
               C24822) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C980 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C50879) *
               C51196 +
           ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
           C26015 * C24822) *
              C51018 * C50920 * C976 -
          (C26022 * C24822 +
           ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
           ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
              C51018 * C50920 * C977 +
          (C26015 * C51196 +
           ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51197 +
           ((C26018 + C26019) * C980 + (C26020 + C26021) * C50879) * C24822) *
              C51018 * C50920 * C978 -
          (((C49954 * C3393 + C50866 * C3397 + C49961 * C3394 +
             C51132 * C3398) *
                C50879 +
            (C49954 * C3391 + C50866 * C3395 + C49961 * C3392 +
             C51132 * C3396) *
                C980) *
               C24822 +
           ((C26021 + C26020) * C50879 + (C26019 + C26018) * C980) * C51197 +
           C26022 * C51196) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51196 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                C51197 +
            C26345 * C24822) *
               C51018 * C1558 +
           (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                 C50000 -
             ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                  C51139 +
              (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                  C50007) +
             (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                 C50884) *
                C51196 +
            ((C25743 + C25744) * C50000 -
             ((C25745 + C25746) * C51139 + (C25747 + C25748) * C50007) +
             (C25749 + C25750) * C50884) *
                C51197 +
            ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
             (C25757 + C25758) * C50884) *
                C24822) *
               C51018 * C50984) *
              C51147 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50884) *
                C51196 +
            ((C25033 + C25032) * C50000 -
             ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
             (C25035 + C25034) * C50884) *
                C51197 +
            ((C25036 + C25037) * C50000 - (C26005 * C51139 + C26006 * C50007) +
             (C25042 + C25043) * C50884) *
                C24822) *
               C51018 * C1558 +
           (((C25748 + C25747) * C50007 + (C25746 + C25745) * C51139 -
             (C25744 + C25743) * C50000 - (C25750 + C25749) * C50884) *
                C51196 +
            ((C25756 + C25755) * C50007 + (C25754 + C25753) * C51139 -
             (C25752 + C25751) * C50000 - (C25758 + C25757) * C50884) *
                C51197 +
            ((C26698 + C26699) * C50007 + (C26700 + C26701) * C51139 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C50000 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C24822) *
               C51018 * C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51196 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
            C26015 * C24822) *
               C51018 * C51194 -
           (C26702 * C24822 +
            ((C25745 + C25746) * C50879 + (C25747 + C25748) * C980) * C51197 +
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C50879 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C980) *
                C51196) *
               C51018 * C51195 +
           (((C49961 * C404 + C51132 * C419 + C49954 * C405 + C50866 * C420) *
                 C980 +
             (C49961 * C423 + C51132 * C434 + C49954 * C424 + C50866 * C435) *
                 C50879) *
                C51196 +
            ((C26185 + C26186) * C980 + (C26187 + C26188) * C50879) * C51197 +
            ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C24822) *
               C51018 * C1974) *
              C51147 +
          ((((C25748 + C25747) * C980 + (C25746 + C25745) * C50879) * C51196 +
            ((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C51197 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C24822) *
               C51018 * C51195 -
           (C26022 * C24822 +
            ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
               C51018 * C51194 -
           (((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
              C51132 * C3572) *
                 C50879 +
             (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
              C51132 * C3570) *
                 C980) *
                C24822 +
            ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51197 +
            ((C26188 + C26187) * C50879 + (C26186 + C26185) * C980) * C51196) *
               C51018 * C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51196 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
            C26015 * C24822) *
               C51018 * C1558 -
           (C26702 * C24822 +
            ((C25745 + C25746) * C50879 + (C25747 + C25748) * C980) * C51197 +
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C50879 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C980) *
                C51196) *
               C51018 * C50984) *
              C253 +
          ((((C25748 + C25747) * C980 + (C25746 + C25745) * C50879) * C51196 +
            ((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C51197 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C24822) *
               C51018 * C50984 -
           (C26022 * C24822 +
            ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
               C51018 * C1558) *
              C254 +
          ((C26015 * C51196 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51197 +
            ((C26018 + C26019) * C980 + (C26020 + C26021) * C50879) * C24822) *
               C51018 * C1558 -
           (((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C24822 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51197 +
            C26702 * C51196) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51196 +
           ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
            (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
            (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
               C51197 +
           (C25044 * C906 + C25045 * C901 - C25046 * C907 - C25047 * C902 +
            (C25367 + C25368) * C908 + (C25369 + C25370) * C903) *
               C24822) *
              C51018 * C1558 +
          (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                C907 -
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C901 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C906) +
            (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                C902 -
            (C49954 * C401 + C50866 * C411 + C49961 * C400 + C51132 * C410) *
                C908 -
            (C49954 * C413 + C50866 * C429 + C49961 * C414 + C51132 * C430) *
                C903) *
               C51196 +
           ((C25743 + C25744) * C907 -
            ((C25745 + C25746) * C901 + (C25747 + C25748) * C906) +
            (C25749 + C25750) * C902 -
            (C49954 * C786 + C50866 * C791 + C49961 * C785 + C51132 * C790) *
                C908 -
            (C49954 * C795 + C50866 * C801 + C49961 * C794 + C51132 * C800) *
                C903) *
               C51197 +
           ((C25751 + C25752) * C907 - (C26686 * C901 + C26687 * C906) +
            (C25757 + C25758) * C902 -
            (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
             C51132 * C1453) *
                C908 -
            (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
             C51132 * C1457) *
                C903) *
               C24822) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C980 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C50879) *
               C51196 +
           ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
           C26015 * C24822) *
              C51018 * C1724 -
          (C26702 * C24822 +
           ((C25745 + C25746) * C50879 + (C25747 + C25748) * C980) * C51197 +
           ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                C50879 +
            (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                C980) *
               C51196) *
              C51018 * C1725 +
          (((C49961 * C404 + C51132 * C419 + C49954 * C405 + C50866 * C420) *
                C980 +
            (C49961 * C423 + C51132 * C434 + C49954 * C424 + C50866 * C435) *
                C50879) *
               C51196 +
           ((C26185 + C26186) * C980 + (C26187 + C26188) * C50879) * C51197 +
           ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C24822) *
              C51018 * C1726 -
          (((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
             C51132 * C4518) *
                C50879 +
            (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
             C51132 * C4512) *
                C980) *
               C24822 +
           ((C49954 * C4513 + C50866 * C4519 + C49961 * C4514 +
             C51132 * C4520) *
                C50879 +
            (C49954 * C4507 + C50866 * C4515 + C49961 * C4508 +
             C51132 * C4516) *
                C980) *
               C51197 +
           ((C49954 * C1734 + C50866 * C1742 + C49961 * C1735 +
             C51132 * C1743) *
                C50879 +
            (C49954 * C1730 + C50866 * C1738 + C49961 * C1731 +
             C51132 * C1739) *
                C980) *
               C51196) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C50007 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51139 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C50000 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51196 +
           ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
            (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
               C51197 +
           C26345 * C24822) *
              C51018 * C51194 +
          (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                C50000 -
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C51139 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C50007) +
            (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                C50884) *
               C51196 +
           ((C25743 + C25744) * C50000 -
            ((C25745 + C25746) * C51139 + (C25747 + C25748) * C50007) +
            (C25749 + C25750) * C50884) *
               C51197 +
           ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
            (C25757 + C25758) * C50884) *
               C24822) *
              C51018 * C51195 +
          (((C49961 * C404 + C51132 * C419 + C49954 * C405 + C50866 * C420) *
                C50007 +
            (C49961 * C423 + C51132 * C434 + C49954 * C424 + C50866 * C435) *
                C51139 -
            (C49954 * C406 + C50866 * C421 + C49961 * C405 + C51132 * C420) *
                C50000 -
            (C49954 * C425 + C50866 * C436 + C49961 * C424 + C51132 * C435) *
                C50884) *
               C51196 +
           ((C26185 + C26186) * C50007 + (C26187 + C26188) * C51139 -
            (C49954 * C1096 + C50866 * C1104 + C49961 * C1097 +
             C51132 * C1105) *
                C50000 -
            (C49954 * C1100 + C50866 * C1108 + C49961 * C1101 +
             C51132 * C1109) *
                C50884) *
               C51197 +
           ((C26189 + C26190) * C50007 + (C26191 + C26192) * C51139 -
            (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
             C51132 * C2569) *
                C50000 -
            (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
             C51132 * C2575) *
                C50884) *
               C24822) *
              C51018 * C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51196 +
           ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
            (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
            (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
               C51197 +
           (C25044 * C906 + C25045 * C901 - C25046 * C907 - C25047 * C902 +
            (C25367 + C25368) * C908 + (C25369 + C25370) * C903) *
               C24822) *
              C51018 * C1558 +
          (((C49961 * C399 + C51132 * C409 + C49954 * C400 + C50866 * C410) *
                C907 -
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C901 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C906) +
            (C49961 * C415 + C51132 * C431 + C49954 * C414 + C50866 * C430) *
                C902 -
            (C49954 * C401 + C50866 * C411 + C49961 * C400 + C51132 * C410) *
                C908 -
            (C49954 * C413 + C50866 * C429 + C49961 * C414 + C51132 * C430) *
                C903) *
               C51196 +
           ((C25743 + C25744) * C907 -
            ((C25745 + C25746) * C901 + (C25747 + C25748) * C906) +
            (C25749 + C25750) * C902 -
            (C49954 * C786 + C50866 * C791 + C49961 * C785 + C51132 * C790) *
                C908 -
            (C49954 * C795 + C50866 * C801 + C49961 * C794 + C51132 * C800) *
                C903) *
               C51197 +
           ((C25751 + C25752) * C907 - (C26686 * C901 + C26687 * C906) +
            (C25757 + C25758) * C902 -
            (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
             C51132 * C1453) *
                C908 -
            (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
             C51132 * C1457) *
                C903) *
               C24822) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51196 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51197 +
            C26015 * C24822) *
               C51018 * C1558 -
           (C26702 * C24822 +
            ((C25745 + C25746) * C50879 + (C25747 + C25748) * C980) * C51197 +
            ((C49954 * C415 + C50866 * C431 + C49961 * C416 + C51132 * C432) *
                 C50879 +
             (C49954 * C399 + C50866 * C409 + C49961 * C403 + C51132 * C417) *
                 C980) *
                C51196) *
               C51018 * C50984) *
              C253 +
          ((((C25748 + C25747) * C980 + (C25746 + C25745) * C50879) * C51196 +
            ((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C51197 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C24822) *
               C51018 * C50984 -
           (C26022 * C24822 +
            ((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51197 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51196) *
               C51018 * C1558) *
              C254 +
          ((C26015 * C51196 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51197 +
            ((C26018 + C26019) * C980 + (C26020 + C26021) * C50879) * C24822) *
               C51018 * C1558 -
           (((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C24822 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51197 +
            C26702 * C51196) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C51196 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C51197 +
            (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C24822) *
               C51161 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C51196 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C51197 +
            (C31775 + C31776 - C31777 - C31778 + C31785 + C31786) * C24822) *
               C51082) *
              C50920 * C51147 +
          (((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C51196 +
            (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C51197 +
            (C20219 - (C20218 + C20217) + C20220 - C20235 - C20236) * C24822) *
               C51161 +
           ((C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C51196 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C51197 +
            (C20497 * C543 - (C20498 * C51190 + C20499 * C542) +
             C20500 * C51191 - (C19835 * C3089 + C50861 * C3094) * C544 -
             (C19835 * C3095 + C50861 * C3098) * C539) *
                C24822) *
               C51082) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C256 +
              (C19835 * C136 + C50861 * C146) * C251 -
              (C19835 * C126 + C50861 * C133) * C257 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C51196 +
             (C19983 + C19984 - C19985 - C19986) * C51197 + C20003 * C24822) *
                C51161 +
            ((C22277 + C22278 - C22279 - C22280) * C51196 + C22840 * C51197 +
             C31482 * C24822) *
                C51082) *
               C51148 +
           (((C22279 - (C22278 + C22277) + C22280) * C51196 + C22841 * C51197 +
             C32129 * C24822) *
                C51161 +
            ((C22283 - (C22282 + C22281) + C22284) * C51196 + C22842 * C51197 +
             (C22079 - (C22069 + C22070) + C22080) * C24822) *
                C51082) *
               C50984) *
              C51147 +
          ((((C19985 - (C19984 + C19983) + C19986) * C51196 +
             (C19989 - (C19988 + C19987) + C19990) * C51197 +
             (C19993 - (C19992 + C19991) + C19994) * C24822) *
                C51161 +
            (C22841 * C51196 + C32129 * C51197 +
             (C20509 - (C20510 + C20511) + C20512) * C24822) *
                C51082) *
               C51148 +
           ((C22840 * C51196 + C31482 * C51197 +
             (C20511 + C20510 - C20509 - C20512) * C24822) *
                C51161 +
            (C22285 * C51196 + (C22070 + C22069 - C22079 - C22080) * C51197 +
             (C20843 * C256 + C20844 * C251 -
              (C19835 * C3565 + C50861 * C3569) * C257 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C24822) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51196 +
            (C19983 + C19984 - C19985 - C19986) * C51197 + C20003 * C24822) *
               C51161 +
           ((C22277 + C22278 - C22279 - C22280) * C51196 + C22840 * C51197 +
            C31482 * C24822) *
               C51082) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C51196 +
            (C19989 - (C19988 + C19987) + C19990) * C51197 +
            (C19993 - (C19992 + C19991) + C19994) * C24822) *
               C51161 +
           (C22841 * C51196 + (C20505 - (C20506 + C20507) + C20508) * C51197 +
            (C20509 - (C20510 + C20511) + C20512) * C24822) *
               C51082) *
              C50920 * C254 +
          ((C20003 * C51196 + C20004 * C51197 +
            (C19997 + C19996 - C19995 - C19998) * C24822) *
               C51161 +
           (C31482 * C51196 + (C20511 + C20510 - C20509 - C20512) * C51197 +
            (C21221 * C256 + C21222 * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C24822) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C51196 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C51197 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C20227 * C123 + C20228 * C111 -
            (C19835 * C266 + C50861 * C281) * C124 -
            (C19835 * C285 + C50861 * C296) * C112) *
               C24822) *
              C51161 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C51196 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C51197 +
           (C20495 * C121 + C20494 * C109 - C20493 * C122 - C20496 * C110 +
            (C19835 * C1445 + C50861 * C1453) * C123 +
            (C19835 * C1449 + C50861 * C1457) * C111 -
            (C19835 * C1444 + C50861 * C1452) * C124 -
            (C19835 * C1448 + C50861 * C1456) * C112) *
               C24822) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51196 +
            (C19983 + C19984 - C19985 - C19986) * C51197 + C20003 * C24822) *
               C51161 +
           ((C22277 + C22278 - C22279 - C22280) * C51196 + C22840 * C51197 +
            C31482 * C24822) *
               C51082) *
              C396 +
          (((C22279 - (C22278 + C22277) + C22280) * C51196 + C22841 * C51197 +
            (C20505 - (C20506 + C20507) + C20508) * C24822) *
               C51161 +
           ((C22283 - (C22282 + C22281) + C22284) * C51196 + C22842 * C51197 +
            (C22079 - (C22069 + C22070) + C22080) * C24822) *
               C51082) *
              C397 +
          ((C22297 * C51196 + C22285 * C51197 +
            (C22070 + C22069 - C22079 - C22080) * C24822) *
               C51161 +
           ((C22288 + C22287 - C22286 - C22289) * C51196 +
            (C22292 + C22291 - C22290 - C22293) * C51197 +
            (C23276 * C256 + C23277 * C251 -
             (C19835 * C4505 + C50861 * C4511) * C257 -
             (C19835 * C4509 + C50861 * C4517) * C50884) *
                C24822) *
               C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C51196 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C51197 +
            (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C24822) *
               C51161 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C51196 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C51197 +
            (C31775 + C31776 - C31777 - C31778 + C31785 + C31786) * C24822) *
               C51082) *
              C51148 +
          (((C22618 - (C22617 + C22616) + C22619 - C22636 - C22637) * C51196 +
            (C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C51197 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C24822) *
               C51161 +
           ((C22626 - (C22625 + C22624) + C22627 - C22638 - C22639) * C51196 +
            (C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C51197 +
            (C22075 * C543 - (C20842 * C51190 + C20841 * C542) +
             C22076 * C51191 - (C19835 * C2567 + C50861 * C2572) * C544 -
             (C19835 * C2573 + C50861 * C2576) * C539) *
                C24822) *
               C51082) *
              C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C51196 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C51197 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C20227 * C123 + C20228 * C111 -
            (C19835 * C266 + C50861 * C281) * C124 -
            (C19835 * C285 + C50861 * C296) * C112) *
               C24822) *
              C51161 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C51196 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C51197 +
           (C20495 * C121 + C20494 * C109 - C20493 * C122 - C20496 * C110 +
            (C19835 * C1445 + C50861 * C1453) * C123 +
            (C19835 * C1449 + C50861 * C1457) * C111 -
            (C19835 * C1444 + C50861 * C1452) * C124 -
            (C19835 * C1448 + C50861 * C1456) * C112) *
               C24822) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51196 +
            (C19983 + C19984 - C19985 - C19986) * C51197 + C20003 * C24822) *
               C51161 +
           ((C22277 + C22278 - C22279 - C22280) * C51196 + C22840 * C51197 +
            C31482 * C24822) *
               C51082) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C51196 +
            (C19989 - (C19988 + C19987) + C19990) * C51197 +
            (C19993 - (C19992 + C19991) + C19994) * C24822) *
               C51161 +
           (C22841 * C51196 + (C20505 - (C20506 + C20507) + C20508) * C51197 +
            (C20509 - (C20510 + C20511) + C20512) * C24822) *
               C51082) *
              C50920 * C254 +
          ((C20003 * C51196 + C20004 * C51197 +
            (C19997 + C19996 - C19995 - C19998) * C24822) *
               C51161 +
           (C31482 * C51196 + (C20511 + C20510 - C20509 - C20512) * C51197 +
            (C21221 * C256 + C21222 * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C24822) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51196 +
            (C20949 + C20950 - C20951 - C20952) * C51197 + C20969 * C24822) *
               C51161 +
           ((C23635 + C23636 - C23637 - C23638) * C51196 + C23655 * C51197 +
            C32674 * C24822) *
               C51082) *
              C50920 * C51192 +
          (((C20951 - (C20950 + C20949) + C20952) * C51196 +
            (C20955 - (C20954 + C20953) + C20956) * C51197 +
            (C20959 - (C20958 + C20957) + C20960) * C24822) *
               C51161 +
           (C23657 * C51196 + (C21105 - (C21106 + C21107) + C21108) * C51197 +
            (C21109 - (C21110 + C21111) + C21112) * C24822) *
               C51082) *
              C50920 * C51193 +
          ((C20969 * C51196 + C20970 * C51197 +
            (C20963 + C20962 - C20961 - C20964) * C24822) *
               C51161 +
           (C32674 * C51196 + (C21111 + C21110 - C21109 - C21112) * C51197 +
            (C21221 * C50007 + C21222 * C51139 -
             (C19835 * C4090 + C50861 * C4094) * C50000 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C24822) *
               C51082) *
              C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51196 +
             (C20699 + C20700) * C51197 + C20711 * C24822) *
                C51161 +
            ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
                C51082) *
               C51148 -
           ((C23269 * C24822 + C23259 * C51197 + (C23253 + C23252) * C51196) *
                C51082 +
            (C21216 * C24822 + C23260 * C51197 + (C23250 + C23249) * C51196) *
                C51161) *
               C50984) *
              C51192 +
          (((C23251 * C51196 + C23805 * C51197 + C33018 * C24822) * C51161 +
            (C23254 * C51196 + C23806 * C51197 + (C20849 + C20850) * C24822) *
                C51082) *
               C50984 -
           ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
            (C20714 * C24822 + (C20702 + C20701) * C51197 +
             (C20700 + C20699) * C51196) *
                C51161) *
               C51148) *
              C51193 +
          (((C20711 * C51196 + C20712 * C51197 + (C20706 + C20705) * C24822) *
                C51161 +
            (C23805 * C51196 + C33018 * C51197 + (C21223 + C21224) * C24822) *
                C51082) *
               C51148 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C24822 +
             (C20850 + C20849) * C51197 + C23269 * C51196) *
                C51082 +
            ((C21224 + C21223) * C24822 + C21215 * C51197 + C21216 * C51196) *
                C51161) *
               C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51196 +
            (C20699 + C20700) * C51197 + C20711 * C24822) *
               C51161 +
           ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
               C51082) *
              C50920 * C976 -
          ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
           (C20714 * C24822 + (C20702 + C20701) * C51197 +
            (C20700 + C20699) * C51196) *
               C51161) *
              C50920 * C977 +
          ((C20711 * C51196 + C20712 * C51197 + (C20706 + C20705) * C24822) *
               C51161 +
           (C23805 * C51196 + (C20822 + C20821) * C51197 +
            (C21223 + C21224) * C24822) *
               C51082) *
              C50920 * C978 -
          ((((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C24822 +
            (C21224 + C21223) * C51197 + C21215 * C51196) *
               C51082 +
           ((C20718 + C20717) * C24822 + C20713 * C51197 + C20714 * C51196) *
               C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51196 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51197 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C24822) *
               C51161 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51196 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51197 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C24822) *
               C51082) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C51196 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C51197 +
            (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C24822) *
               C51161 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51196 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C51197 +
            (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
             (C19835 * C3089 + C50861 * C3094) * C908 -
             (C19835 * C3095 + C50861 * C3098) * C903) *
                C24822) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51196 +
             (C20699 + C20700) * C51197 + C20711 * C24822) *
                C51161 +
            ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
                C51082) *
               C396 -
           ((C23269 * C24822 + C23259 * C51197 + (C23253 + C23252) * C51196) *
                C51082 +
            (C21216 * C24822 + C23260 * C51197 + (C23250 + C23249) * C51196) *
                C51161) *
               C397 +
           ((C23270 * C51196 + C23254 * C51197 + C23806 * C24822) * C51161 +
            ((C23258 + C23257) * C51196 + C23273 * C51197 +
             (C23283 + C23284) * C24822) *
                C51082) *
               C398) *
              C904 +
          (((C23251 * C51196 + C23805 * C51197 + (C20822 + C20821) * C24822) *
                C51161 +
            (C23254 * C51196 + C23806 * C51197 + (C20849 + C20850) * C24822) *
                C51082) *
               C397 -
           ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
            (C20714 * C24822 + (C20702 + C20701) * C51197 +
             (C20700 + C20699) * C51196) *
                C51161) *
               C396 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C24822 +
             (C23284 + C23283) * C51197 + C23272 * C51196) *
                C51082 +
            ((C20850 + C20849) * C24822 + C23269 * C51197 + C23259 * C51196) *
                C51161) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C51196 +
             (C20949 + C20950 - C20951 - C20952) * C51197 + C20969 * C24822) *
                C51161 +
            ((C23635 + C23636 - C23637 - C23638) * C51196 + C23655 * C51197 +
             C32674 * C24822) *
                C51082) *
               C51148 +
           (((C23637 - (C23636 + C23635) + C23638) * C51196 + C23657 * C51197 +
             C32871 * C24822) *
                C51161 +
            ((C23642 - (C23641 + C23640) + C23643) * C51196 + C23658 * C51197 +
             (C23437 - (C23438 + C23439) + C23440) * C24822) *
                C51082) *
               C50984) *
              C904 +
          ((((C20951 - (C20950 + C20949) + C20952) * C51196 +
             (C20955 - (C20954 + C20953) + C20956) * C51197 +
             (C20959 - (C20958 + C20957) + C20960) * C24822) *
                C51161 +
            (C23657 * C51196 + C32871 * C51197 +
             (C21109 - (C21110 + C21111) + C21112) * C24822) *
                C51082) *
               C51148 +
           ((C23655 * C51196 + C32674 * C51197 +
             (C21111 + C21110 - C21109 - C21112) * C24822) *
                C51161 +
            (C23656 * C51196 + (C23439 + C23438 - C23437 - C23440) * C51197 +
             (C20843 * C50007 + C20844 * C51139 -
              (C19835 * C3565 + C50861 * C3569) * C50000 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C24822) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51196 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51197 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C24822) *
               C51161 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51196 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51197 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C24822) *
               C51082) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C51196 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C51197 +
            (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C24822) *
               C51161 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51196 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C51197 +
            (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
             (C19835 * C3089 + C50861 * C3094) * C908 -
             (C19835 * C3095 + C50861 * C3098) * C903) *
                C24822) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51196 +
            (C20699 + C20700) * C51197 + C20711 * C24822) *
               C51161 +
           ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
               C51082) *
              C50920 * C976 -
          ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
           (C20714 * C24822 + (C20702 + C20701) * C51197 +
            (C20700 + C20699) * C51196) *
               C51161) *
              C50920 * C977 +
          ((C20711 * C51196 + C20712 * C51197 + (C20706 + C20705) * C24822) *
               C51161 +
           (C23805 * C51196 + (C20822 + C20821) * C51197 +
            (C21223 + C21224) * C24822) *
               C51082) *
              C50920 * C978 -
          ((((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C24822 +
            (C21224 + C21223) * C51197 + C21215 * C51196) *
               C51082 +
           ((C20718 + C20717) * C24822 + C20713 * C51197 + C20714 * C51196) *
               C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C51196 +
             (C20949 + C20950 - C20951 - C20952) * C51197 + C20969 * C24822) *
                C51161 +
            ((C23635 + C23636 - C23637 - C23638) * C51196 + C23655 * C51197 +
             C32674 * C24822) *
                C51082) *
               C1558 +
           (((C23637 - (C23636 + C23635) + C23638) * C51196 + C23657 * C51197 +
             C32871 * C24822) *
                C51161 +
            ((C23642 - (C23641 + C23640) + C23643) * C51196 + C23658 * C51197 +
             (C23437 - (C23438 + C23439) + C23440) * C24822) *
                C51082) *
               C50984) *
              C51147 +
          ((((C20951 - (C20950 + C20949) + C20952) * C51196 +
             (C20955 - (C20954 + C20953) + C20956) * C51197 +
             (C20959 - (C20958 + C20957) + C20960) * C24822) *
                C51161 +
            (C23657 * C51196 + C32871 * C51197 +
             (C21109 - (C21110 + C21111) + C21112) * C24822) *
                C51082) *
               C1558 +
           ((C23655 * C51196 + C32674 * C51197 +
             (C21111 + C21110 - C21109 - C21112) * C24822) *
                C51161 +
            (C23656 * C51196 + (C23439 + C23438 - C23437 - C23440) * C51197 +
             (C20843 * C50007 + C20844 * C51139 -
              (C19835 * C3565 + C50861 * C3569) * C50000 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C24822) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51196 +
             (C20699 + C20700) * C51197 + C20711 * C24822) *
                C51161 +
            ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
                C51082) *
               C51194 -
           ((C23269 * C24822 + C23259 * C51197 + (C23253 + C23252) * C51196) *
                C51082 +
            (C21216 * C24822 + C23260 * C51197 + (C23250 + C23249) * C51196) *
                C51161) *
               C51195 +
           ((C23270 * C51196 + C23254 * C51197 + C23806 * C24822) * C51161 +
            ((C23258 + C23257) * C51196 + C23273 * C51197 +
             (C23283 + C23284) * C24822) *
                C51082) *
               C1974) *
              C51147 +
          (((C23251 * C51196 + C23805 * C51197 + C33018 * C24822) * C51161 +
            (C23254 * C51196 + C23806 * C51197 + (C20849 + C20850) * C24822) *
                C51082) *
               C51195 -
           ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
            (C20714 * C24822 + (C20702 + C20701) * C51197 +
             (C20700 + C20699) * C51196) *
                C51161) *
               C51194 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C24822 +
             (C23284 + C23283) * C51197 + C23272 * C51196) *
                C51082 +
            ((C20850 + C20849) * C24822 + C23269 * C51197 + C23259 * C51196) *
                C51161) *
               C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51196 +
             (C20699 + C20700) * C51197 + C20711 * C24822) *
                C51161 +
            ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
                C51082) *
               C1558 -
           ((C23269 * C24822 + C23259 * C51197 + (C23253 + C23252) * C51196) *
                C51082 +
            (C21216 * C24822 + C23260 * C51197 + (C23250 + C23249) * C51196) *
                C51161) *
               C50984) *
              C253 +
          (((C23251 * C51196 + C23805 * C51197 + C33018 * C24822) * C51161 +
            (C23254 * C51196 + C23806 * C51197 + (C20849 + C20850) * C24822) *
                C51082) *
               C50984 -
           ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
            (C20714 * C24822 + (C20702 + C20701) * C51197 +
             (C20700 + C20699) * C51196) *
                C51161) *
               C1558) *
              C254 +
          (((C20711 * C51196 + C20712 * C51197 + (C20706 + C20705) * C24822) *
                C51161 +
            (C23805 * C51196 + C33018 * C51197 + (C21223 + C21224) * C24822) *
                C51082) *
               C1558 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C24822 +
             (C20850 + C20849) * C51197 + C23269 * C51196) *
                C51082 +
            ((C21224 + C21223) * C24822 + C21215 * C51197 + C21216 * C51196) *
                C51161) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51196 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51197 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C24822) *
               C51161 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51196 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51197 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C24822) *
               C51082) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C51196 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51197 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C24822) *
               C51161 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C51196 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51197 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C24822) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51196 +
            (C20699 + C20700) * C51197 + C20711 * C24822) *
               C51161 +
           ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
               C51082) *
              C1724 -
          ((C23269 * C24822 + C23259 * C51197 + (C23253 + C23252) * C51196) *
               C51082 +
           (C21216 * C24822 + C23260 * C51197 + (C23250 + C23249) * C51196) *
               C51161) *
              C1725 +
          ((C23270 * C51196 + C23254 * C51197 + C23806 * C24822) * C51161 +
           ((C23258 + C23257) * C51196 + C23273 * C51197 +
            (C23283 + C23284) * C24822) *
               C51082) *
              C1726 -
          ((((C19835 * C23245 + C50861 * C23247) * C50879 +
             (C19835 * C23244 + C50861 * C23246) * C980) *
                C24822 +
            (C23282 + C23281) * C51197 + (C24224 + C24223) * C51196) *
               C51082 +
           ((C23284 + C23283) * C24822 + C23272 * C51197 + C24214 * C51196) *
               C51161) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51196 +
            (C20949 + C20950 - C20951 - C20952) * C51197 + C20969 * C24822) *
               C51161 +
           ((C23635 + C23636 - C23637 - C23638) * C51196 + C23655 * C51197 +
            C32674 * C24822) *
               C51082) *
              C51194 +
          (((C23637 - (C23636 + C23635) + C23638) * C51196 + C23657 * C51197 +
            C32871 * C24822) *
               C51161 +
           ((C23642 - (C23641 + C23640) + C23643) * C51196 + C23658 * C51197 +
            (C23437 - (C23438 + C23439) + C23440) * C24822) *
               C51082) *
              C51195 +
          ((C24572 * C51196 + C23656 * C51197 +
            (C23439 + C23438 - C23437 - C23440) * C24822) *
               C51161 +
           ((C24569 + C24568 - C24567 - C24570) * C51196 +
            (C23649 + C23648 - C23647 - C23650) * C51197 +
            (C23276 * C50007 + C23277 * C51139 -
             (C19835 * C4505 + C50861 * C4511) * C50000 -
             (C19835 * C4509 + C50861 * C4517) * C50884) *
                C24822) *
               C51082) *
              C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51196 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51197 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C24822) *
               C51161 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51196 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51197 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C24822) *
               C51082) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C51196 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51197 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C24822) *
               C51161 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C51196 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51197 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C24822) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51196 +
             (C20699 + C20700) * C51197 + C20711 * C24822) *
                C51161 +
            ((C23249 + C23250) * C51196 + C23251 * C51197 + C23805 * C24822) *
                C51082) *
               C1558 -
           ((C23269 * C24822 + C23259 * C51197 + (C23253 + C23252) * C51196) *
                C51082 +
            (C21216 * C24822 + C23260 * C51197 + (C23250 + C23249) * C51196) *
                C51161) *
               C50984) *
              C253 +
          (((C23251 * C51196 + C23805 * C51197 + C33018 * C24822) * C51161 +
            (C23254 * C51196 + C23806 * C51197 + (C20849 + C20850) * C24822) *
                C51082) *
               C50984 -
           ((C21215 * C24822 + C21216 * C51197 + C23260 * C51196) * C51082 +
            (C20714 * C24822 + (C20702 + C20701) * C51197 +
             (C20700 + C20699) * C51196) *
                C51161) *
               C1558) *
              C254 +
          (((C20711 * C51196 + C20712 * C51197 + (C20706 + C20705) * C24822) *
                C51161 +
            (C23805 * C51196 + C33018 * C51197 + (C21223 + C21224) * C24822) *
                C51082) *
               C1558 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C24822 +
             (C20850 + C20849) * C51197 + C23269 * C51196) *
                C51082 +
            ((C21224 + C21223) * C24822 + C21215 * C51197 + C21216 * C51196) *
                C51161) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C542 +
            (C19835 * C136 + C50861 * C146) * C51190 -
            (C19835 * C126 + C50861 * C133) * C543 -
            (C19835 * C137 + C50861 * C147) * C51191 +
            (C19835 * C127 + C50861 * C134) * C544 +
            (C19835 * C138 + C50861 * C148) * C539) *
               C19831 +
           (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C19832 +
           (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C19833 +
           (C20217 + C20218 - C20219 - C20220 + C20235 + C20236) * C19834) *
              C51018 * C50920 * C51147 +
          ((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C19831 +
           (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C19832 +
           (C20219 - (C20218 + C20217) + C20220 - C20235 - C20236) * C19833 +
           (C19979 * C543 - (C19980 * C51190 + C19981 * C542) +
            C19982 * C51191 - (C19835 * C2326 + C50861 * C2331) * C544 -
            (C19835 * C2332 + C50861 * C2335) * C539) *
               C19834) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C17049 +
           ((C17249 + C17250 + C17251) * C542 +
            (C17252 + C17253 + C17254) * C51190 -
            (C17255 + C17256 + C17257) * C543 -
            (C17258 + C17259 + C17260) * C51191 +
            (C17577 + C17578 + C17579) * C544 +
            (C17580 + C17581 + C17582) * C539) *
               C51056) *
              C51018 * C50920 * C51147 +
          (((C17257 + C17256 + C17255) * C543 -
            ((C17254 + C17253 + C17252) * C51190 +
             (C17251 + C17250 + C17249) * C542) +
            (C17260 + C17259 + C17258) * C51191 -
            (C17579 + C17578 + C17577) * C544 -
            (C17582 + C17581 + C17580) * C539) *
               C17049 +
           ((C17261 + C17262 + C17263) * C543 -
            ((C17264 + C17265 + C17266) * C51190 +
             (C17267 + C17268 + C17269) * C542) +
            (C17270 + C17271 + C17272) * C51191 -
            (C17053 * C267 + C17048 * C286 + C17052 * C266 + C17047 * C281 +
             C17051 * C265 + C17046 * C280) *
                C544 -
            (C17053 * C287 + C17048 * C297 + C17052 * C285 + C17047 * C296 +
             C17051 * C284 + C17046 * C295) *
                C539) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C17049 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C51056) *
               C5105 +
           ((C22260 * C542 + C22261 * C51190 - C22262 * C543 - C22263 * C51191 +
             (C19835 * C400 + C50861 * C410) * C544 +
             (C19835 * C414 + C50861 * C430) * C539) *
                C17049 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C51056) *
               C5106 +
           ((C22264 * C542 + C22265 * C51190 - C22266 * C543 - C22267 * C51191 +
             (C19835 * C406 + C50861 * C421) * C544 +
             (C19835 * C425 + C50861 * C436) * C539) *
                C17049 +
            (C22454 + C22455 - C22456 - C22457 + C22468 + C22469) * C51056) *
               C5107) *
              C50920 * C51147 +
          (((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C17049 +
            (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C51056) *
               C5105 +
           ((C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C17049 +
            (C20493 * C543 - (C20494 * C51190 + C20495 * C542) +
             C20496 * C51191 - (C19835 * C1445 + C50861 * C1453) * C544 -
             (C19835 * C1449 + C50861 * C1457) * C539) *
                C51056) *
               C5106 +
           ((C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C17049 +
            (C22075 * C543 - (C20842 * C51190 + C20841 * C542) +
             C22076 * C51191 - (C19835 * C2567 + C50861 * C2572) * C544 -
             (C19835 * C2573 + C50861 * C2576) * C539) *
                C51056) *
               C5107) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C19831 +
            (C19983 + C19984 - C19985 - C19986) * C19832 + C20003 * C19833 +
            C20004 * C19834) *
               C51018 * C51148 +
           (((C19835 * C399 + C50861 * C409) * C257 -
             ((C19835 * C416 + C50861 * C432) * C251 +
              (C19835 * C403 + C50861 * C417) * C256) +
             (C19835 * C415 + C50861 * C431) * C50884) *
                C19831 +
            (C20501 - (C20502 + C20503) + C20504) * C19832 +
            (C20505 - (C20506 + C20507) + C20508) * C19833 +
            (C20509 - (C20510 + C20511) + C20512) * C19834) *
               C51018 * C50984) *
              C51147 +
          (((C19985 - (C19984 + C19983) + C19986) * C19831 +
            (C19989 - (C19988 + C19987) + C19990) * C19832 +
            (C19993 - (C19992 + C19991) + C19994) * C19833 +
            (C19995 - (C19996 + C19997) + C19998) * C19834) *
               C51018 * C51148 +
           ((C20503 + C20502 - C20501 - C20504) * C19831 +
            (C20507 + C20506 - C20505 - C20508) * C19832 +
            (C20511 + C20510 - C20509 - C20512) * C19833 +
            ((C19835 * C4091 + C50861 * C4095) * C256 +
             (C19835 * C4093 + C50861 * C4097) * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C19834) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C256 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C251 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C257 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C17049 +
            ((C17249 + C17250 + C17251) * C256 +
             (C17252 + C17253 + C17254) * C251 -
             (C17255 + C17256 + C17257) * C257 -
             (C17258 + C17259 + C17260) * C50884) *
                C51056) *
               C51018 * C51148 +
           (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
              C17053 * C401 + C17048 * C411) *
                 C257 -
             ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
               C17051 * C416 + C17046 * C432) *
                  C251 +
              (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
               C17051 * C403 + C17046 * C417) *
                  C256) +
             (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
              C17053 * C413 + C17048 * C429) *
                 C50884) *
                C17049 +
            ((C17947 + C17948 + C17949) * C257 -
             ((C17950 + C17951 + C17952) * C251 +
              (C17953 + C17954 + C17955) * C256) +
             (C17956 + C17957 + C17958) * C50884) *
                C51056) *
               C51018 * C50984) *
              C51147 +
          ((((C17257 + C17256 + C17255) * C257 -
             ((C17254 + C17253 + C17252) * C251 +
              (C17251 + C17250 + C17249) * C256) +
             (C17260 + C17259 + C17258) * C50884) *
                C17049 +
            ((C17261 + C17262 + C17263) * C257 -
             ((C17264 + C17265 + C17266) * C251 +
              (C17267 + C17268 + C17269) * C256) +
             (C17270 + C17271 + C17272) * C50884) *
                C51056) *
               C51018 * C51148 +
           (((C17955 + C17954 + C17953) * C256 +
             (C17952 + C17951 + C17950) * C251 -
             (C17949 + C17948 + C17947) * C257 -
             (C17958 + C17957 + C17956) * C50884) *
                C17049 +
            ((C17051 * C1447 + C17046 * C1455 + C17052 * C1446 +
              C17047 * C1454 + C17053 * C1445 + C17048 * C1453) *
                 C256 +
             (C17051 * C1451 + C17046 * C1459 + C17052 * C1450 +
              C17047 * C1458 + C17053 * C1449 + C17048 * C1457) *
                 C251 -
             (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
              C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                 C257 -
             (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
              C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                 C50884) *
                C51056) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C256 +
              (C19835 * C136 + C50861 * C146) * C251 -
              (C19835 * C126 + C50861 * C133) * C257 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C17049 +
             (C19983 + C19984 - C19985 - C19986) * C51056) *
                C5105 +
            ((C22277 + C22278 - C22279 - C22280) * C17049 + C22840 * C51056) *
                C5106 +
            C22299 * C5107) *
               C51148 +
           (((C22279 - (C22278 + C22277) + C22280) * C17049 + C22841 * C51056) *
                C5105 +
            ((C22283 - (C22282 + C22281) + C22284) * C17049 + C22842 * C51056) *
                C5106 +
            ((C22286 - (C22287 + C22288) + C22289) * C17049 +
             (C22290 - (C22291 + C22292) + C22293) * C51056) *
                C5107) *
               C50984) *
              C51147 +
          ((((C19985 - (C19984 + C19983) + C19986) * C17049 +
             (C19989 - (C19988 + C19987) + C19990) * C51056) *
                C5105 +
            (C22841 * C17049 + (C20505 - (C20506 + C20507) + C20508) * C51056) *
                C5106 +
            (C22842 * C17049 + (C22079 - (C22069 + C22070) + C22080) * C51056) *
                C5107) *
               C51148 +
           ((C22840 * C17049 + (C20507 + C20506 - C20505 - C20508) * C51056) *
                C5105 +
            (C22285 * C17049 + (C22070 + C22069 - C22079 - C22080) * C51056) *
                C5106 +
            ((C22292 + C22291 - C22290 - C22293) * C17049 +
             ((C19835 * C4506 + C50861 * C4512) * C256 +
              (C19835 * C4510 + C50861 * C4518) * C251 -
              (C19835 * C4505 + C50861 * C4511) * C257 -
              (C19835 * C4509 + C50861 * C4517) * C50884) *
                 C51056) *
                C5107) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] += (0.5 * std::pow(Pi, 2.5) *
                      (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                         C17047 * C133 + C17053 * C127 + C17048 * C134) *
                            C121 +
                        (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                         C17047 * C147 + C17053 * C138 + C17048 * C148) *
                            C109 -
                        (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                         C17047 * C134 + C17051 * C126 + C17046 * C133) *
                            C122 -
                        (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                         C17047 * C148 + C17051 * C137 + C17046 * C147) *
                            C110 +
                        (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                         C17047 * C135 + C17053 * C129 + C17048 * C140) *
                            C123 +
                        (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                         C17047 * C149 + C17053 * C141 + C17048 * C150) *
                            C111 -
                        (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                         C17047 * C140 + C17051 * C128 + C17046 * C135) *
                            C124 -
                        (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                         C17047 * C150 + C17051 * C139 + C17046 * C149) *
                            C112) *
                           C17049 +
                       ((C17051 * C262 + C17046 * C276 + C17052 * C258 +
                         C17047 * C268 + C17053 * C259 + C17048 * C269) *
                            C121 +
                        (C17051 * C275 + C17046 * C291 + C17052 * C274 +
                         C17047 * C290 + C17053 * C273 + C17048 * C289) *
                            C109 -
                        (C17053 * C260 + C17048 * C270 + C17052 * C259 +
                         C17047 * C269 + C17051 * C258 + C17046 * C268) *
                            C122 -
                        (C17053 * C272 + C17048 * C288 + C17052 * C273 +
                         C17047 * C289 + C17051 * C274 + C17046 * C290) *
                            C110 +
                        (C17051 * C259 + C17046 * C269 + C17052 * C260 +
                         C17047 * C270 + C17053 * C261 + C17048 * C271) *
                            C123 +
                        (C17051 * C273 + C17046 * C289 + C17052 * C272 +
                         C17047 * C288 + C17053 * C277 + C17048 * C292) *
                            C111 -
                        (C17053 * C545 + C17048 * C546 + C17052 * C261 +
                         C17047 * C271 + C17051 * C260 + C17046 * C270) *
                            C124 -
                        (C17053 * C547 + C17048 * C548 + C17052 * C277 +
                         C17047 * C292 + C17051 * C272 + C17046 * C288) *
                            C112) *
                           C51056) *
                      C51018 * C50920 * C50908 +
                  0.5 * std::pow(Pi, 2.5) *
                      ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                          C17047 * C133 + C17053 * C127 + C17048 * C134) *
                             C256 +
                         (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                          C17047 * C147 + C17053 * C138 + C17048 * C148) *
                             C251 -
                         (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                          C17047 * C134 + C17051 * C126 + C17046 * C133) *
                             C257 -
                         (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                          C17047 * C148 + C17051 * C137 + C17046 * C147) *
                             C50884) *
                            C17049 +
                        ((C17249 + C17250 + C17251) * C256 +
                         (C17252 + C17253 + C17254) * C251 -
                         (C17255 + C17256 + C17257) * C257 -
                         (C17258 + C17259 + C17260) * C50884) *
                            C51056) *
                           C51018 * C50920 * C253 +
                       (((C17257 + C17256 + C17255) * C257 -
                         ((C17254 + C17253 + C17252) * C251 +
                          (C17251 + C17250 + C17249) * C256) +
                         (C17260 + C17259 + C17258) * C50884) *
                            C17049 +
                        ((C17261 + C17262 + C17263) * C257 -
                         ((C17264 + C17265 + C17266) * C251 +
                          (C17267 + C17268 + C17269) * C256) +
                         (C17270 + C17271 + C17272) * C50884) *
                            C51056) *
                           C51018 * C50920 * C254 +
                       (((C17269 + C17268 + C17267) * C256 +
                         (C17266 + C17265 + C17264) * C251 -
                         (C17263 + C17262 + C17261) * C257 -
                         (C17272 + C17271 + C17270) * C50884) *
                            C17049 +
                        ((C17051 * C984 + C17046 * C992 + C17052 * C983 +
                          C17047 * C991 + C17053 * C982 + C17048 * C990) *
                             C256 +
                         (C17051 * C988 + C17046 * C996 + C17052 * C987 +
                          C17047 * C995 + C17053 * C986 + C17048 * C994) *
                             C251 -
                         (C17053 * C981 + C17048 * C989 + C17052 * C982 +
                          C17047 * C990 + C17051 * C983 + C17046 * C991) *
                             C257 -
                         (C17053 * C985 + C17048 * C993 + C17052 * C986 +
                          C17047 * C994 + C17051 * C987 + C17046 * C995) *
                             C50884) *
                            C51056) *
                           C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C256 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C251 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C257 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C256 +
                     (C17252 + C17253 + C17254) * C251 -
                     (C17255 + C17256 + C17257) * C257 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C396 +
                   (((C17051 * C399 + C17046 * C409 + C17052 * C400 +
                      C17047 * C410 + C17053 * C401 + C17048 * C411) *
                         C257 -
                     ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                       C17047 * C431 + C17051 * C416 + C17046 * C432) *
                          C251 +
                      (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                       C17047 * C409 + C17051 * C403 + C17046 * C417) *
                          C256) +
                     (C17051 * C415 + C17046 * C431 + C17052 * C414 +
                      C17047 * C430 + C17053 * C413 + C17048 * C429) *
                         C50884) *
                        C17049 +
                    ((C17051 * C784 + C17046 * C789 + C17052 * C785 +
                      C17047 * C790 + C17053 * C786 + C17048 * C791) *
                         C257 -
                     ((C17053 * C794 + C17048 * C800 + C17052 * C793 +
                       C17047 * C799 + C17051 * C792 + C17046 * C798) *
                          C251 +
                      (C17053 * C785 + C17048 * C790 + C17052 * C784 +
                       C17047 * C789 + C17051 * C783 + C17046 * C788) *
                          C256) +
                     (C17051 * C793 + C17046 * C799 + C17052 * C794 +
                      C17047 * C800 + C17053 * C795 + C17048 * C801) *
                         C50884) *
                        C51056) *
                       C51018 * C397 +
                   (((C17051 * C404 + C17046 * C419 + C17052 * C405 +
                      C17047 * C420 + C17053 * C406 + C17048 * C421) *
                         C256 +
                     (C17051 * C423 + C17046 * C434 + C17052 * C424 +
                      C17047 * C435 + C17053 * C425 + C17048 * C436) *
                         C251 -
                     (C17053 * C407 + C17048 * C422 + C17052 * C406 +
                      C17047 * C421 + C17051 * C405 + C17046 * C420) *
                         C257 -
                     (C17053 * C426 + C17048 * C437 + C17052 * C425 +
                      C17047 * C436 + C17051 * C424 + C17046 * C435) *
                         C50884) *
                        C17049 +
                    ((C17051 * C1098 + C17046 * C1106 + C17052 * C1097 +
                      C17047 * C1105 + C17053 * C1096 + C17048 * C1104) *
                         C256 +
                     (C17051 * C1102 + C17046 * C1110 + C17052 * C1101 +
                      C17047 * C1109 + C17053 * C1100 + C17048 * C1108) *
                         C251 -
                     (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
                      C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                         C257 -
                     (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
                      C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                         C50884) *
                        C51056) *
                       C51018 * C398) *
                  C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (0.5 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50861 * C132) * C121 +
                    (C19835 * C136 + C50861 * C146) * C109 -
                    (C19835 * C126 + C50861 * C133) * C122 -
                    (C19835 * C137 + C50861 * C147) * C110 +
                    (C19835 * C127 + C50861 * C134) * C123 +
                    (C19835 * C138 + C50861 * C148) * C111 -
                    (C19835 * C128 + C50861 * C135) * C124 -
                    (C19835 * C139 + C50861 * C149) * C112) *
                       C19831 +
                   ((C19835 * C262 + C50861 * C276) * C121 +
                    (C19835 * C275 + C50861 * C291) * C109 -
                    (C19835 * C258 + C50861 * C268) * C122 -
                    (C19835 * C274 + C50861 * C290) * C110 +
                    (C19835 * C259 + C50861 * C269) * C123 +
                    (C19835 * C273 + C50861 * C289) * C111 -
                    (C19835 * C260 + C50861 * C270) * C124 -
                    (C19835 * C272 + C50861 * C288) * C112) *
                       C19832 +
                   ((C19835 * C263 + C50861 * C278) * C121 +
                    (C19835 * C282 + C50861 * C293) * C109 -
                    (C19835 * C264 + C50861 * C279) * C122 -
                    (C19835 * C283 + C50861 * C294) * C110 +
                    (C19835 * C265 + C50861 * C280) * C123 +
                    (C19835 * C284 + C50861 * C295) * C111 -
                    (C19835 * C266 + C50861 * C281) * C124 -
                    (C19835 * C285 + C50861 * C296) * C112) *
                       C19833 +
                   ((C19835 * C984 + C50861 * C992) * C121 +
                    (C19835 * C988 + C50861 * C996) * C109 -
                    (C19835 * C983 + C50861 * C991) * C122 -
                    (C19835 * C987 + C50861 * C995) * C110 +
                    (C19835 * C982 + C50861 * C990) * C123 +
                    (C19835 * C986 + C50861 * C994) * C111 -
                    (C19835 * C981 + C50861 * C989) * C124 -
                    (C19835 * C985 + C50861 * C993) * C112) *
                       C19834) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (0.5 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C256 +
                     (C19835 * C136 + C50861 * C146) * C251 -
                     (C19835 * C126 + C50861 * C133) * C257 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C19983 + C19984 - C19985 - C19986) * C19832 +
                    C20003 * C19833 + C20004 * C19834) *
                       C51018 * C50920 * C253 +
                   ((C19985 - (C19984 + C19983) + C19986) * C19831 +
                    (C19989 - (C19988 + C19987) + C19990) * C19832 +
                    (C19993 - (C19992 + C19991) + C19994) * C19833 +
                    (C19995 - (C19996 + C19997) + C19998) * C19834) *
                       C51018 * C50920 * C254 +
                   (C20003 * C19831 + C20004 * C19832 +
                    (C19997 + C19996 - C19995 - C19998) * C19833 +
                    ((C19835 * C3392 + C50861 * C3396) * C256 +
                     (C19835 * C3394 + C50861 * C3398) * C251 -
                     (C19835 * C3391 + C50861 * C3395) * C257 -
                     (C19835 * C3393 + C50861 * C3397) * C50884) *
                        C19834) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C256 +
                     (C19835 * C136 + C50861 * C146) * C251 -
                     (C19835 * C126 + C50861 * C133) * C257 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C19983 + C19984 - C19985 - C19986) * C19832 +
                    C20003 * C19833 + C20004 * C19834) *
                       C51018 * C396 +
                   (((C19835 * C399 + C50861 * C409) * C257 -
                     ((C19835 * C416 + C50861 * C432) * C251 +
                      (C19835 * C403 + C50861 * C417) * C256) +
                     (C19835 * C415 + C50861 * C431) * C50884) *
                        C19831 +
                    ((C19835 * C784 + C50861 * C789) * C257 -
                     ((C19835 * C792 + C50861 * C798) * C251 +
                      (C19835 * C783 + C50861 * C788) * C256) +
                     (C19835 * C793 + C50861 * C799) * C50884) *
                        C19832 +
                    ((C19835 * C1446 + C50861 * C1454) * C257 -
                     ((C19835 * C1451 + C50861 * C1459) * C251 +
                      (C19835 * C1447 + C50861 * C1455) * C256) +
                     (C19835 * C1450 + C50861 * C1458) * C50884) *
                        C19833 +
                    ((C19835 * C3088 + C50861 * C3091) * C257 -
                     ((C19835 * C3092 + C50861 * C3096) * C251 +
                      (C19835 * C3087 + C50861 * C3090) * C256) +
                     (C19835 * C3093 + C50861 * C3097) * C50884) *
                        C19834) *
                       C51018 * C397 +
                   (((C19835 * C404 + C50861 * C419) * C256 +
                     (C19835 * C423 + C50861 * C434) * C251 -
                     (C19835 * C405 + C50861 * C420) * C257 -
                     (C19835 * C424 + C50861 * C435) * C50884) *
                        C19831 +
                    ((C19835 * C1098 + C50861 * C1106) * C256 +
                     (C19835 * C1102 + C50861 * C1110) * C251 -
                     (C19835 * C1097 + C50861 * C1105) * C257 -
                     (C19835 * C1101 + C50861 * C1109) * C50884) *
                        C19832 +
                    ((C19835 * C2565 + C50861 * C2568) * C256 +
                     (C19835 * C2570 + C50861 * C2574) * C251 -
                     (C19835 * C2566 + C50861 * C2569) * C257 -
                     (C19835 * C2571 + C50861 * C2575) * C50884) *
                        C19833 +
                    ((C19835 * C3566 + C50861 * C3570) * C256 +
                     (C19835 * C3568 + C50861 * C3572) * C251 -
                     (C19835 * C3565 + C50861 * C3569) * C257 -
                     (C19835 * C3567 + C50861 * C3571) * C50884) *
                        C19834) *
                       C51018 * C398) *
                  C50908) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C121 +
                     (C19835 * C136 + C50861 * C146) * C109 -
                     (C19835 * C126 + C50861 * C133) * C122 -
                     (C19835 * C137 + C50861 * C147) * C110 +
                     (C19835 * C127 + C50861 * C134) * C123 +
                     (C19835 * C138 + C50861 * C148) * C111 -
                     (C19835 * C128 + C50861 * C135) * C124 -
                     (C19835 * C139 + C50861 * C149) * C112) *
                        C17049 +
                    (C19967 * C121 + C19968 * C109 - C19969 * C122 -
                     C19970 * C110 + C20225 * C123 + C20226 * C111 -
                     (C19835 * C260 + C50861 * C270) * C124 -
                     (C19835 * C272 + C50861 * C288) * C112) *
                        C51056) *
                       C5105 +
                   (((C19835 * C403 + C50861 * C417) * C121 +
                     (C19835 * C416 + C50861 * C432) * C109 -
                     (C19835 * C399 + C50861 * C409) * C122 -
                     (C19835 * C415 + C50861 * C431) * C110 +
                     (C19835 * C400 + C50861 * C410) * C123 +
                     (C19835 * C414 + C50861 * C430) * C111 -
                     (C19835 * C401 + C50861 * C411) * C124 -
                     (C19835 * C413 + C50861 * C429) * C112) *
                        C17049 +
                    (C20491 * C121 + C20490 * C109 - C20489 * C122 -
                     C20492 * C110 + (C19835 * C785 + C50861 * C790) * C123 +
                     (C19835 * C794 + C50861 * C800) * C111 -
                     (C19835 * C786 + C50861 * C791) * C124 -
                     (C19835 * C795 + C50861 * C801) * C112) *
                        C51056) *
                       C5106 +
                   (((C19835 * C404 + C50861 * C419) * C121 +
                     (C19835 * C423 + C50861 * C434) * C109 -
                     (C19835 * C405 + C50861 * C420) * C122 -
                     (C19835 * C424 + C50861 * C435) * C110 +
                     (C19835 * C406 + C50861 * C421) * C123 +
                     (C19835 * C425 + C50861 * C436) * C111 -
                     (C19835 * C407 + C50861 * C422) * C124 -
                     (C19835 * C426 + C50861 * C437) * C112) *
                        C17049 +
                    (C20839 * C121 + C20840 * C109 -
                     (C19835 * C1097 + C50861 * C1105) * C122 -
                     (C19835 * C1101 + C50861 * C1109) * C110 +
                     (C19835 * C1096 + C50861 * C1104) * C123 +
                     (C19835 * C1100 + C50861 * C1108) * C111 -
                     (C19835 * C1095 + C50861 * C1103) * C124 -
                     (C19835 * C1099 + C50861 * C1107) * C112) *
                        C51056) *
                       C5107) *
                  C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C256 +
                      (C19835 * C136 + C50861 * C146) * C251 -
                      (C19835 * C126 + C50861 * C133) * C257 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C17049 +
                     (C19983 + C19984 - C19985 - C19986) * C51056) *
                        C5105 +
                    (((C19835 * C403 + C50861 * C417) * C256 +
                      (C19835 * C416 + C50861 * C432) * C251 -
                      (C19835 * C399 + C50861 * C409) * C257 -
                      (C19835 * C415 + C50861 * C431) * C50884) *
                         C17049 +
                     (C20503 + C20502 - C20501 - C20504) * C51056) *
                        C5106 +
                    (((C19835 * C404 + C50861 * C419) * C256 +
                      (C19835 * C423 + C50861 * C434) * C251 -
                      (C19835 * C405 + C50861 * C420) * C257 -
                      (C19835 * C424 + C50861 * C435) * C50884) *
                         C17049 +
                     (C22061 + C22062 - C22077 - C22078) * C51056) *
                        C5107) *
                       C50920 * C253 +
                   (((C19985 - (C19984 + C19983) + C19986) * C17049 +
                     (C19989 - (C19988 + C19987) + C19990) * C51056) *
                        C5105 +
                    ((C20501 - (C20502 + C20503) + C20504) * C17049 +
                     (C20505 - (C20506 + C20507) + C20508) * C51056) *
                        C5106 +
                    ((C22077 - (C22062 + C22061) + C22078) * C17049 +
                     (C22079 - (C22069 + C22070) + C22080) * C51056) *
                        C5107) *
                       C50920 * C254 +
                   ((C20003 * C17049 + C20004 * C51056) * C5105 +
                    ((C20507 + C20506 - C20505 - C20508) * C17049 +
                     (C20511 + C20510 - C20509 - C20512) * C51056) *
                        C5106 +
                    ((C22070 + C22069 - C22079 - C22080) * C17049 +
                     (C20843 * C256 + C20844 * C251 -
                      (C19835 * C3565 + C50861 * C3569) * C257 -
                      (C19835 * C3567 + C50861 * C3571) * C50884) *
                         C51056) *
                        C5107) *
                       C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C256 +
                      (C19835 * C136 + C50861 * C146) * C251 -
                      (C19835 * C126 + C50861 * C133) * C257 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C17049 +
                     (C19983 + C19984 - C19985 - C19986) * C51056) *
                        C5105 +
                    ((C22277 + C22278 - C22279 - C22280) * C17049 +
                     (C20503 + C20502 - C20501 - C20504) * C51056) *
                        C5106 +
                    C22299 * C5107) *
                       C396 +
                   (((C22279 - (C22278 + C22277) + C22280) * C17049 +
                     (C20501 - (C20502 + C20503) + C20504) * C51056) *
                        C5105 +
                    ((C22283 - (C22282 + C22281) + C22284) * C17049 +
                     (C22077 - (C22062 + C22061) + C22078) * C51056) *
                        C5106 +
                    ((C22286 - (C22287 + C22288) + C22289) * C17049 +
                     (C22290 - (C22291 + C22292) + C22293) * C51056) *
                        C5107) *
                       C397 +
                   (C22299 * C5105 +
                    ((C22288 + C22287 - C22286 - C22289) * C17049 +
                     (C22292 + C22291 - C22290 - C22293) * C51056) *
                        C5106 +
                    (((C19835 * C5400 + C50861 * C5403) * C256 +
                      (C19835 * C5405 + C50861 * C5409) * C251 -
                      (C19835 * C5401 + C50861 * C5404) * C257 -
                      (C19835 * C5406 + C50861 * C5410) * C50884) *
                         C17049 +
                     ((C19835 * C6413 + C50861 * C6417) * C256 +
                      (C19835 * C6415 + C50861 * C6419) * C251 -
                      (C19835 * C6412 + C50861 * C6416) * C257 -
                      (C19835 * C6414 + C50861 * C6418) * C50884) *
                         C51056) *
                        C5107) *
                       C398) *
                  C50908) /
                     (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C542 +
            (C19835 * C136 + C50861 * C146) * C51190 -
            (C19835 * C126 + C50861 * C133) * C543 -
            (C19835 * C137 + C50861 * C147) * C51191 +
            (C19835 * C127 + C50861 * C134) * C544 +
            (C19835 * C138 + C50861 * C148) * C539) *
               C19831 +
           (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C19832 +
           (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C19833 +
           (C20217 + C20218 - C20219 - C20220 + C20235 + C20236) * C19834) *
              C51018 * C51148 +
          (((C19835 * C399 + C50861 * C409) * C543 -
            ((C19835 * C416 + C50861 * C432) * C51190 +
             (C19835 * C403 + C50861 * C417) * C542) +
            (C19835 * C415 + C50861 * C431) * C51191 -
            (C19835 * C400 + C50861 * C410) * C544 -
            (C19835 * C414 + C50861 * C430) * C539) *
               C19831 +
           ((C19835 * C784 + C50861 * C789) * C543 -
            ((C19835 * C792 + C50861 * C798) * C51190 +
             (C19835 * C783 + C50861 * C788) * C542) +
            (C19835 * C793 + C50861 * C799) * C51191 -
            (C19835 * C785 + C50861 * C790) * C544 -
            (C19835 * C794 + C50861 * C800) * C539) *
               C19832 +
           ((C19835 * C1446 + C50861 * C1454) * C543 -
            ((C19835 * C1451 + C50861 * C1459) * C51190 +
             (C19835 * C1447 + C50861 * C1455) * C542) +
            (C19835 * C1450 + C50861 * C1458) * C51191 -
            (C19835 * C1445 + C50861 * C1453) * C544 -
            (C19835 * C1449 + C50861 * C1457) * C539) *
               C19833 +
           ((C19835 * C3088 + C50861 * C3091) * C543 -
            ((C19835 * C3092 + C50861 * C3096) * C51190 +
             (C19835 * C3087 + C50861 * C3090) * C542) +
            (C19835 * C3093 + C50861 * C3097) * C51191 -
            (C19835 * C3089 + C50861 * C3094) * C544 -
            (C19835 * C3095 + C50861 * C3098) * C539) *
               C19834) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C17049 +
           ((C17249 + C17250 + C17251) * C542 +
            (C17252 + C17253 + C17254) * C51190 -
            (C17255 + C17256 + C17257) * C543 -
            (C17258 + C17259 + C17260) * C51191 +
            (C17577 + C17578 + C17579) * C544 +
            (C17580 + C17581 + C17582) * C539) *
               C51056) *
              C51018 * C51148 +
          (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
             C17053 * C401 + C17048 * C411) *
                C543 -
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C51190 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C542) +
            (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
             C17053 * C413 + C17048 * C429) *
                C51191 -
            (C17053 * C402 + C17048 * C412 + C17052 * C401 + C17047 * C411 +
             C17051 * C400 + C17046 * C410) *
                C544 -
            (C17053 * C418 + C17048 * C433 + C17052 * C413 + C17047 * C429 +
             C17051 * C414 + C17046 * C430) *
                C539) *
               C17049 +
           ((C17051 * C784 + C17046 * C789 + C17052 * C785 + C17047 * C790 +
             C17053 * C786 + C17048 * C791) *
                C543 -
            ((C17053 * C794 + C17048 * C800 + C17052 * C793 + C17047 * C799 +
              C17051 * C792 + C17046 * C798) *
                 C51190 +
             (C17053 * C785 + C17048 * C790 + C17052 * C784 + C17047 * C789 +
              C17051 * C783 + C17046 * C788) *
                 C542) +
            (C17051 * C793 + C17046 * C799 + C17052 * C794 + C17047 * C800 +
             C17053 * C795 + C17048 * C801) *
                C51191 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C544 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C539) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C17049 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C51056) *
               C5105 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C17049 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C51056) *
               C5106 +
           ((C22624 + C22625 - C22626 - C22627 + C22638 + C22639) * C17049 +
            (C22454 + C22455 - C22456 - C22457 + C22468 + C22469) * C51056) *
               C5107) *
              C51148 +
          (((C22618 - (C22617 + C22616) + C22619 - C22636 - C22637) * C17049 +
            (C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C51056) *
               C5105 +
           ((C22626 - (C22625 + C22624) + C22627 - C22638 - C22639) * C17049 +
            (C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C51056) *
               C5106 +
           ((C22269 * C543 - (C22270 * C51190 + C22271 * C542) +
             C22272 * C51191 - (C19835 * C1729 + C50861 * C1737) * C544 -
             (C19835 * C1733 + C50861 * C1741) * C539) *
                C17049 +
            (C22273 * C543 - (C22274 * C51190 + C22275 * C542) +
             C22276 * C51191 - (C19835 * C6006 + C50861 * C6007) * C544 -
             (C19835 * C6008 + C50861 * C6009) * C539) *
                C51056) *
               C5107) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[109] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C256 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C251 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C257 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C256 +
                     (C17252 + C17253 + C17254) * C251 -
                     (C17255 + C17256 + C17257) * C257 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C50920 * C253 +
                   (((C17257 + C17256 + C17255) * C257 -
                     ((C17254 + C17253 + C17252) * C251 +
                      (C17251 + C17250 + C17249) * C256) +
                     (C17260 + C17259 + C17258) * C50884) *
                        C17049 +
                    ((C17261 + C17262 + C17263) * C257 -
                     ((C17264 + C17265 + C17266) * C251 +
                      (C17267 + C17268 + C17269) * C256) +
                     (C17270 + C17271 + C17272) * C50884) *
                        C51056) *
                       C51018 * C50920 * C254 +
                   (((C17269 + C17268 + C17267) * C256 +
                     (C17266 + C17265 + C17264) * C251 -
                     (C17263 + C17262 + C17261) * C257 -
                     (C17272 + C17271 + C17270) * C50884) *
                        C17049 +
                    ((C17051 * C984 + C17046 * C992 + C17052 * C983 +
                      C17047 * C991 + C17053 * C982 + C17048 * C990) *
                         C256 +
                     (C17051 * C988 + C17046 * C996 + C17052 * C987 +
                      C17047 * C995 + C17053 * C986 + C17048 * C994) *
                         C251 -
                     (C17053 * C981 + C17048 * C989 + C17052 * C982 +
                      C17047 * C990 + C17051 * C983 + C17046 * C991) *
                         C257 -
                     (C17053 * C985 + C17048 * C993 + C17052 * C986 +
                      C17047 * C994 + C17051 * C987 + C17046 * C995) *
                         C50884) *
                        C51056) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                     C17047 * C133 + C17053 * C127 + C17048 * C134) *
                        C121 +
                    (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                     C17047 * C147 + C17053 * C138 + C17048 * C148) *
                        C109 -
                    (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                     C17047 * C134 + C17051 * C126 + C17046 * C133) *
                        C122 -
                    (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                     C17047 * C148 + C17051 * C137 + C17046 * C147) *
                        C110 +
                    (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                     C17047 * C135 + C17053 * C129 + C17048 * C140) *
                        C123 +
                    (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                     C17047 * C149 + C17053 * C141 + C17048 * C150) *
                        C111 -
                    (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                     C17047 * C140 + C17051 * C128 + C17046 * C135) *
                        C124 -
                    (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                     C17047 * C150 + C17051 * C139 + C17046 * C149) *
                        C112) *
                       C17049 +
                   ((C17051 * C262 + C17046 * C276 + C17052 * C258 +
                     C17047 * C268 + C17053 * C259 + C17048 * C269) *
                        C121 +
                    (C17051 * C275 + C17046 * C291 + C17052 * C274 +
                     C17047 * C290 + C17053 * C273 + C17048 * C289) *
                        C109 -
                    (C17053 * C260 + C17048 * C270 + C17052 * C259 +
                     C17047 * C269 + C17051 * C258 + C17046 * C268) *
                        C122 -
                    (C17053 * C272 + C17048 * C288 + C17052 * C273 +
                     C17047 * C289 + C17051 * C274 + C17046 * C290) *
                        C110 +
                    (C17051 * C259 + C17046 * C269 + C17052 * C260 +
                     C17047 * C270 + C17053 * C261 + C17048 * C271) *
                        C123 +
                    (C17051 * C273 + C17046 * C289 + C17052 * C272 +
                     C17047 * C288 + C17053 * C277 + C17048 * C292) *
                        C111 -
                    (C17053 * C545 + C17048 * C546 + C17052 * C261 +
                     C17047 * C271 + C17051 * C260 + C17046 * C270) *
                        C124 -
                    (C17053 * C547 + C17048 * C548 + C17052 * C277 +
                     C17047 * C292 + C17051 * C272 + C17046 * C288) *
                        C112) *
                       C51056) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50861 * C132) * C121 +
                    (C19835 * C136 + C50861 * C146) * C109 -
                    (C19835 * C126 + C50861 * C133) * C122 -
                    (C19835 * C137 + C50861 * C147) * C110 +
                    (C19835 * C127 + C50861 * C134) * C123 +
                    (C19835 * C138 + C50861 * C148) * C111 -
                    (C19835 * C128 + C50861 * C135) * C124 -
                    (C19835 * C139 + C50861 * C149) * C112) *
                       C19831 +
                   ((C19835 * C262 + C50861 * C276) * C121 +
                    (C19835 * C275 + C50861 * C291) * C109 -
                    (C19835 * C258 + C50861 * C268) * C122 -
                    (C19835 * C274 + C50861 * C290) * C110 +
                    (C19835 * C259 + C50861 * C269) * C123 +
                    (C19835 * C273 + C50861 * C289) * C111 -
                    (C19835 * C260 + C50861 * C270) * C124 -
                    (C19835 * C272 + C50861 * C288) * C112) *
                       C19832 +
                   ((C19835 * C263 + C50861 * C278) * C121 +
                    (C19835 * C282 + C50861 * C293) * C109 -
                    (C19835 * C264 + C50861 * C279) * C122 -
                    (C19835 * C283 + C50861 * C294) * C110 +
                    (C19835 * C265 + C50861 * C280) * C123 +
                    (C19835 * C284 + C50861 * C295) * C111 -
                    (C19835 * C266 + C50861 * C281) * C124 -
                    (C19835 * C285 + C50861 * C296) * C112) *
                       C19833 +
                   ((C19835 * C984 + C50861 * C992) * C121 +
                    (C19835 * C988 + C50861 * C996) * C109 -
                    (C19835 * C983 + C50861 * C991) * C122 -
                    (C19835 * C987 + C50861 * C995) * C110 +
                    (C19835 * C982 + C50861 * C990) * C123 +
                    (C19835 * C986 + C50861 * C994) * C111 -
                    (C19835 * C981 + C50861 * C989) * C124 -
                    (C19835 * C985 + C50861 * C993) * C112) *
                       C19834) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C256 +
                     (C19835 * C136 + C50861 * C146) * C251 -
                     (C19835 * C126 + C50861 * C133) * C257 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C19983 + C19984 - C19985 - C19986) * C19832 +
                    C20003 * C19833 + C20004 * C19834) *
                       C51018 * C50920 * C253 +
                   ((C19985 - (C19984 + C19983) + C19986) * C19831 +
                    (C19989 - (C19988 + C19987) + C19990) * C19832 +
                    (C19993 - (C19992 + C19991) + C19994) * C19833 +
                    (C19995 - (C19996 + C19997) + C19998) * C19834) *
                       C51018 * C50920 * C254 +
                   (C20003 * C19831 + C20004 * C19832 +
                    (C19997 + C19996 - C19995 - C19998) * C19833 +
                    ((C19835 * C3392 + C50861 * C3396) * C256 +
                     (C19835 * C3394 + C50861 * C3398) * C251 -
                     (C19835 * C3391 + C50861 * C3395) * C257 -
                     (C19835 * C3393 + C50861 * C3397) * C50884) *
                        C19834) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C121 +
                     (C19835 * C136 + C50861 * C146) * C109 -
                     (C19835 * C126 + C50861 * C133) * C122 -
                     (C19835 * C137 + C50861 * C147) * C110 +
                     (C19835 * C127 + C50861 * C134) * C123 +
                     (C19835 * C138 + C50861 * C148) * C111 -
                     (C19835 * C128 + C50861 * C135) * C124 -
                     (C19835 * C139 + C50861 * C149) * C112) *
                        C17049 +
                    (C19967 * C121 + C19968 * C109 - C19969 * C122 -
                     C19970 * C110 + C20225 * C123 + C20226 * C111 -
                     (C19835 * C260 + C50861 * C270) * C124 -
                     (C19835 * C272 + C50861 * C288) * C112) *
                        C51056) *
                       C5105 +
                   (((C19835 * C403 + C50861 * C417) * C121 +
                     (C19835 * C416 + C50861 * C432) * C109 -
                     (C19835 * C399 + C50861 * C409) * C122 -
                     (C19835 * C415 + C50861 * C431) * C110 +
                     (C19835 * C400 + C50861 * C410) * C123 +
                     (C19835 * C414 + C50861 * C430) * C111 -
                     (C19835 * C401 + C50861 * C411) * C124 -
                     (C19835 * C413 + C50861 * C429) * C112) *
                        C17049 +
                    (C20491 * C121 + C20490 * C109 - C20489 * C122 -
                     C20492 * C110 + (C19835 * C785 + C50861 * C790) * C123 +
                     (C19835 * C794 + C50861 * C800) * C111 -
                     (C19835 * C786 + C50861 * C791) * C124 -
                     (C19835 * C795 + C50861 * C801) * C112) *
                        C51056) *
                       C5106 +
                   (((C19835 * C404 + C50861 * C419) * C121 +
                     (C19835 * C423 + C50861 * C434) * C109 -
                     (C19835 * C405 + C50861 * C420) * C122 -
                     (C19835 * C424 + C50861 * C435) * C110 +
                     (C19835 * C406 + C50861 * C421) * C123 +
                     (C19835 * C425 + C50861 * C436) * C111 -
                     (C19835 * C407 + C50861 * C422) * C124 -
                     (C19835 * C426 + C50861 * C437) * C112) *
                        C17049 +
                    (C20839 * C121 + C20840 * C109 -
                     (C19835 * C1097 + C50861 * C1105) * C122 -
                     (C19835 * C1101 + C50861 * C1109) * C110 +
                     (C19835 * C1096 + C50861 * C1104) * C123 +
                     (C19835 * C1100 + C50861 * C1108) * C111 -
                     (C19835 * C1095 + C50861 * C1103) * C124 -
                     (C19835 * C1099 + C50861 * C1107) * C112) *
                        C51056) *
                       C5107) *
                  C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C256 +
                      (C19835 * C136 + C50861 * C146) * C251 -
                      (C19835 * C126 + C50861 * C133) * C257 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C17049 +
                     (C19983 + C19984 - C19985 - C19986) * C51056) *
                        C5105 +
                    (((C19835 * C403 + C50861 * C417) * C256 +
                      (C19835 * C416 + C50861 * C432) * C251 -
                      (C19835 * C399 + C50861 * C409) * C257 -
                      (C19835 * C415 + C50861 * C431) * C50884) *
                         C17049 +
                     (C20503 + C20502 - C20501 - C20504) * C51056) *
                        C5106 +
                    (((C19835 * C404 + C50861 * C419) * C256 +
                      (C19835 * C423 + C50861 * C434) * C251 -
                      (C19835 * C405 + C50861 * C420) * C257 -
                      (C19835 * C424 + C50861 * C435) * C50884) *
                         C17049 +
                     (C22061 + C22062 - C22077 - C22078) * C51056) *
                        C5107) *
                       C50920 * C253 +
                   (((C19985 - (C19984 + C19983) + C19986) * C17049 +
                     (C19989 - (C19988 + C19987) + C19990) * C51056) *
                        C5105 +
                    ((C20501 - (C20502 + C20503) + C20504) * C17049 +
                     (C20505 - (C20506 + C20507) + C20508) * C51056) *
                        C5106 +
                    ((C22077 - (C22062 + C22061) + C22078) * C17049 +
                     (C22079 - (C22069 + C22070) + C22080) * C51056) *
                        C5107) *
                       C50920 * C254 +
                   ((C20003 * C17049 + C20004 * C51056) * C5105 +
                    ((C20507 + C20506 - C20505 - C20508) * C17049 +
                     (C20511 + C20510 - C20509 - C20512) * C51056) *
                        C5106 +
                    ((C22070 + C22069 - C22079 - C22080) * C17049 +
                     (C20843 * C256 + C20844 * C251 -
                      (C19835 * C3565 + C50861 * C3569) * C257 -
                      (C19835 * C3567 + C50861 * C3571) * C50884) *
                         C51056) *
                        C5107) *
                       C50920 * C255)) /
                     (p * q * std::sqrt(p + q));
    d2ee[110] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C50007 +
                     (C19835 * C136 + C50861 * C146) * C51139 -
                     (C19835 * C126 + C50861 * C133) * C50000 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C20949 + C20950 - C20951 - C20952) * C19832 +
                    C20969 * C19833 + C20970 * C19834) *
                       C51018 * C50920 * C51192 +
                   ((C20951 - (C20950 + C20949) + C20952) * C19831 +
                    (C20955 - (C20954 + C20953) + C20956) * C19832 +
                    (C20959 - (C20958 + C20957) + C20960) * C19833 +
                    (C20961 - (C20962 + C20963) + C20964) * C19834) *
                       C51018 * C50920 * C51193 +
                   (C20969 * C19831 + C20970 * C19832 +
                    (C20963 + C20962 - C20961 - C20964) * C19833 +
                    (C20715 * C50007 + C20716 * C51139 -
                     (C19835 * C3391 + C50861 * C3395) * C50000 -
                     (C19835 * C3393 + C50861 * C3397) * C50884) *
                        C19834) *
                       C51018 * C50920 * C1213)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51139 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C50007 +
                     (C17252 + C17253 + C17254) * C51139 -
                     (C17255 + C17256 + C17257) * C50000 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C50920 * C51192 +
                   (((C17257 + C17256 + C17255) * C50000 -
                     ((C17254 + C17253 + C17252) * C51139 +
                      (C17251 + C17250 + C17249) * C50007) +
                     (C17260 + C17259 + C17258) * C50884) *
                        C17049 +
                    ((C17261 + C17262 + C17263) * C50000 -
                     ((C17264 + C17265 + C17266) * C51139 +
                      (C17267 + C17268 + C17269) * C50007) +
                     (C17270 + C17271 + C17272) * C50884) *
                        C51056) *
                       C51018 * C50920 * C51193 +
                   (((C17269 + C17268 + C17267) * C50007 +
                     (C17266 + C17265 + C17264) * C51139 -
                     (C17263 + C17262 + C17261) * C50000 -
                     (C17272 + C17271 + C17270) * C50884) *
                        C17049 +
                    ((C18215 + C18216 + C18217) * C50007 +
                     (C18218 + C18219 + C18220) * C51139 -
                     (C17053 * C981 + C17048 * C989 + C17052 * C982 +
                      C17047 * C990 + C17051 * C983 + C17046 * C991) *
                         C50000 -
                     (C17053 * C985 + C17048 * C993 + C17052 * C986 +
                      C17047 * C994 + C17051 * C987 + C17046 * C995) *
                         C50884) *
                        C51056) *
                       C51018 * C50920 * C1213)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C50007 +
                      (C19835 * C136 + C50861 * C146) * C51139 -
                      (C19835 * C126 + C50861 * C133) * C50000 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C17049 +
                     (C20949 + C20950 - C20951 - C20952) * C51056) *
                        C5105 +
                    ((C22260 * C50007 + C22261 * C51139 - C22262 * C50000 -
                      C22263 * C50884) *
                         C17049 +
                     (C21103 + C21102 - C21101 - C21104) * C51056) *
                        C5106 +
                    ((C22264 * C50007 + C22265 * C51139 - C22266 * C50000 -
                      C22267 * C50884) *
                         C17049 +
                     (C23433 + C23434 - C23435 - C23436) * C51056) *
                        C5107) *
                       C50920 * C51192 +
                   (((C20951 - (C20950 + C20949) + C20952) * C17049 +
                     (C20955 - (C20954 + C20953) + C20956) * C51056) *
                        C5105 +
                    ((C21101 - (C21102 + C21103) + C21104) * C17049 +
                     (C21105 - (C21106 + C21107) + C21108) * C51056) *
                        C5106 +
                    ((C23435 - (C23434 + C23433) + C23436) * C17049 +
                     (C23437 - (C23438 + C23439) + C23440) * C51056) *
                        C5107) *
                       C50920 * C51193 +
                   ((C20969 * C17049 + C20970 * C51056) * C5105 +
                    ((C21107 + C21106 - C21105 - C21108) * C17049 +
                     (C21111 + C21110 - C21109 - C21112) * C51056) *
                        C5106 +
                    ((C23439 + C23438 - C23437 - C23440) * C17049 +
                     (C20843 * C50007 + C20844 * C51139 -
                      (C19835 * C3565 + C50861 * C3569) * C50000 -
                      (C19835 * C3567 + C50861 * C3571) * C50884) *
                         C51056) *
                        C5107) *
                       C50920 * C1213)) /
                     (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C51148 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C50984) *
              C51192 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C50984 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C51148) *
              C51193 +
          ((C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
            (C20717 + C20718) * C19834) *
               C51018 * C51148 -
           (((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C19834 +
            (C21224 + C21223) * C19833 + C21215 * C19832 + C21216 * C19831) *
               C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C51148 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C50984) *
              C51192 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C51148) *
              C51193 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C17049 +
            ((C18215 + C18216 + C18217) * C980 +
             (C18218 + C18219 + C18220) * C50879) *
                C51056) *
               C51018 * C51148 -
           (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
              C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                 C50879 +
             (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
              C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                 C980) *
                C51056 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C17049) *
               C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C17049 +
             (C20699 + C20700) * C51056) *
                C5105 +
            ((C23249 + C23250) * C17049 + C23251 * C51056) * C5106 +
            C23286 * C5107) *
               C51148 -
           ((C23272 * C51056 + (C23257 + C23258) * C17049) * C5107 +
            (C23259 * C51056 + (C23253 + C23252) * C17049) * C5106 +
            (C23260 * C51056 + (C23250 + C23249) * C17049) * C5105) *
               C50984) *
              C51192 +
          (((C23251 * C17049 + C23805 * C51056) * C5105 +
            (C23254 * C17049 + C23806 * C51056) * C5106 +
            (C23273 * C17049 + (C23283 + C23284) * C51056) * C5107) *
               C50984 -
           (C23285 * C5107 + (C21216 * C51056 + C23260 * C17049) * C5106 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
               C51148) *
              C51193 +
          (((C20711 * C17049 + C20712 * C51056) * C5105 +
            (C23805 * C17049 + (C20822 + C20821) * C51056) * C5106 +
            (C23806 * C17049 + (C20849 + C20850) * C51056) * C5107) *
               C51148 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C51056 +
             (C23284 + C23283) * C17049) *
                C5107 +
            ((C20850 + C20849) * C51056 + C23269 * C17049) * C5106 +
            (C21215 * C51056 + C21216 * C17049) * C5105) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C906 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C901 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C907 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C902 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C908 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C903) *
                   C17049 +
               ((C17249 + C17250 + C17251) * C906 +
                (C17252 + C17253 + C17254) * C901 -
                (C17255 + C17256 + C17257) * C907 -
                (C17258 + C17259 + C17260) * C902 +
                (C17577 + C17578 + C17579) * C908 +
                (C17580 + C17581 + C17582) * C903) *
                   C51056) *
                  C51018 * C50920 * C904 +
              (((C17257 + C17256 + C17255) * C907 -
                ((C17254 + C17253 + C17252) * C901 +
                 (C17251 + C17250 + C17249) * C906) +
                (C17260 + C17259 + C17258) * C902 -
                (C17579 + C17578 + C17577) * C908 -
                (C17582 + C17581 + C17580) * C903) *
                   C17049 +
               ((C17261 + C17262 + C17263) * C907 -
                ((C17264 + C17265 + C17266) * C901 +
                 (C17267 + C17268 + C17269) * C906) +
                (C17270 + C17271 + C17272) * C902 -
                (C17053 * C267 + C17048 * C286 + C17052 * C266 + C17047 * C281 +
                 C17051 * C265 + C17046 * C280) *
                    C908 -
                (C17053 * C287 + C17048 * C297 + C17052 * C285 + C17047 * C296 +
                 C17051 * C284 + C17046 * C295) *
                    C903) *
                   C51056) *
                  C51018 * C50920 * C50958) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C980 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C50879) *
                   C17049 +
               ((C17249 + C17250 + C17251) * C980 +
                (C17252 + C17253 + C17254) * C50879) *
                   C51056) *
                  C51018 * C50920 * C976 -
              (((C17264 + C17265 + C17266) * C50879 +
                (C17267 + C17268 + C17269) * C980) *
                   C51056 +
               ((C17254 + C17253 + C17252) * C50879 +
                (C17251 + C17250 + C17249) * C980) *
                   C17049) *
                  C51018 * C50920 * C977 +
              (((C17269 + C17268 + C17267) * C980 +
                (C17266 + C17265 + C17264) * C50879) *
                   C17049 +
               ((C18215 + C18216 + C18217) * C980 +
                (C18218 + C18219 + C18220) * C50879) *
                   C51056) *
                  C51018 * C50920 * C978 -
              (((C17053 * C2332 + C17048 * C2335 + C17052 * C2330 +
                 C17047 * C2334 + C17051 * C2329 + C17046 * C2333) *
                    C50879 +
                (C17053 * C2326 + C17048 * C2331 + C17052 * C2325 +
                 C17047 * C2328 + C17051 * C2324 + C17046 * C2327) *
                    C980) *
                   C51056 +
               ((C18220 + C18219 + C18218) * C50879 +
                (C18217 + C18216 + C18215) * C980) *
                   C17049) *
                  C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C396 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C397 +
           (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
              C17053 * C406 + C17048 * C421) *
                 C980 +
             (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
              C17053 * C425 + C17048 * C436) *
                 C50879) *
                C17049 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51056) *
               C51018 * C398) *
              C904 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C17051 * C1447 + C17046 * C1455 + C17052 * C1446 +
              C17047 * C1454 + C17053 * C1445 + C17048 * C1453) *
                 C980 +
             (C17051 * C1451 + C17046 * C1459 + C17052 * C1450 +
              C17047 * C1458 + C17053 * C1449 + C17048 * C1457) *
                 C50879) *
                C51056) *
               C51018 * C397 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C396 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51056 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C17049) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C50920 * C904 +
          ((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C19831 +
           (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C19832 +
           (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C19833 +
           (C19979 * C907 - (C19980 * C901 + C19981 * C906) + C19982 * C902 -
            (C19835 * C2326 + C50861 * C2331) * C908 -
            (C19835 * C2332 + C50861 * C2335) * C903) *
               C19834) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C19831 +
           (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
              C51018 * C50920 * C976 -
          (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
           (C20700 + C20699) * C19831) *
              C51018 * C50920 * C977 +
          (C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
           (C20717 + C20718) * C19834) *
              C51018 * C50920 * C978 -
          (((C19835 * C20695 + C50861 * C20697) * C50879 +
            (C19835 * C20694 + C50861 * C20696) * C980) *
               C19834 +
           (C20718 + C20717) * C19833 + C20713 * C19832 + C20714 * C19831) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C396 -
           ((C20821 + C20822) * C19834 + (C20823 + C20824) * C19833 +
            (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C397 +
           (((C19835 * C404 + C50861 * C419) * C980 +
             (C19835 * C423 + C50861 * C434) * C50879) *
                C19831 +
            (C20845 + C20846) * C19832 + (C20847 + C20848) * C19833 +
            (C20849 + C20850) * C19834) *
               C51018 * C398) *
              C904 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 +
            ((C19835 * C4091 + C50861 * C4095) * C980 +
             (C19835 * C4093 + C50861 * C4097) * C50879) *
                C19834) *
               C51018 * C397 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C396 -
           (((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C19834 +
            (C20850 + C20849) * C19833 + (C20848 + C20847) * C19832 +
            (C20846 + C20845) * C19831) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C17049 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C5105 +
           ((C22260 * C906 + C22261 * C901 - C22262 * C907 - C22263 * C902 +
             C22632 * C908 + C22633 * C903) *
                C17049 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C5106 +
           ((C22264 * C906 + C22265 * C901 - C22266 * C907 - C22267 * C902 +
             C22634 * C908 + C22635 * C903) *
                C17049 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C5107) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C17049 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C51056) *
               C5105 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C17049 +
            (C20493 * C907 - (C20494 * C901 + C20495 * C906) + C20496 * C902 -
             (C19835 * C1445 + C50861 * C1453) * C908 -
             (C19835 * C1449 + C50861 * C1457) * C903) *
                C51056) *
               C5106 +
           ((C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C17049 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C51056) *
               C5107) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C17049 +
            (C20699 + C20700) * C51056) *
               C5105 +
           ((C22260 * C980 + C22261 * C50879) * C17049 +
            (C20826 + C20825) * C51056) *
               C5106 +
           ((C22264 * C980 + C22265 * C50879) * C17049 +
            (C20845 + C20846) * C51056) *
               C5107) *
              C50920 * C976 -
          (((C20848 + C20847) * C51056 + (C20846 + C20845) * C17049) * C5107 +
           (C21216 * C51056 + (C20825 + C20826) * C17049) * C5106 +
           ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
              C50920 * C977 +
          ((C20711 * C17049 + C20712 * C51056) * C5105 +
           ((C20824 + C20823) * C17049 + (C20822 + C20821) * C51056) * C5106 +
           ((C20847 + C20848) * C17049 + (C20849 + C20850) * C51056) * C5107) *
              C50920 * C978 -
          ((((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C51056 +
            (C20850 + C20849) * C17049) *
               C5107 +
           ((C21224 + C21223) * C51056 + C21215 * C17049) * C5106 +
           (C20713 * C51056 + C20714 * C17049) * C5105) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C17049 +
             (C20699 + C20700) * C51056) *
                C5105 +
            ((C23249 + C23250) * C17049 + C23251 * C51056) * C5106 +
            C23286 * C5107) *
               C396 -
           ((C23272 * C51056 + (C23257 + C23258) * C17049) * C5107 +
            (C23259 * C51056 + (C23253 + C23252) * C17049) * C5106 +
            (C23260 * C51056 + (C23250 + C23249) * C17049) * C5105) *
               C397 +
           (C23286 * C5105 +
            ((C23258 + C23257) * C17049 + C23273 * C51056) * C5106 +
            (((C19835 * C5400 + C50861 * C5403) * C980 +
              (C19835 * C5405 + C50861 * C5409) * C50879) *
                 C17049 +
             (C23281 + C23282) * C51056) *
                C5107) *
               C398) *
              C904 +
          (((C23251 * C17049 + (C20824 + C20823) * C51056) * C5105 +
            (C23254 * C17049 + (C20847 + C20848) * C51056) * C5106 +
            (C23273 * C17049 + (C23283 + C23284) * C51056) * C5107) *
               C397 -
           (C23285 * C5107 + (C21216 * C51056 + C23260 * C17049) * C5106 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
               C396 -
           ((((C19835 * C23245 + C50861 * C23247) * C50879 +
              (C19835 * C23244 + C50861 * C23246) * C980) *
                 C51056 +
             (C23282 + C23281) * C17049) *
                C5107 +
            ((C23284 + C23283) * C51056 + C23272 * C17049) * C5106 +
            C23285 * C5105) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C19831 +
            (C20949 + C20950 - C20951 - C20952) * C19832 + C20969 * C19833 +
            C20970 * C19834) *
               C51018 * C51148 +
           (((C19835 * C399 + C50861 * C409) * C50000 -
             ((C19835 * C416 + C50861 * C432) * C51139 +
              (C19835 * C403 + C50861 * C417) * C50007) +
             (C19835 * C415 + C50861 * C431) * C50884) *
                C19831 +
            (C21101 - (C21102 + C21103) + C21104) * C19832 +
            (C21105 - (C21106 + C21107) + C21108) * C19833 +
            (C21109 - (C21110 + C21111) + C21112) * C19834) *
               C51018 * C50984) *
              C904 +
          (((C20951 - (C20950 + C20949) + C20952) * C19831 +
            (C20955 - (C20954 + C20953) + C20956) * C19832 +
            (C20959 - (C20958 + C20957) + C20960) * C19833 +
            (C20961 - (C20962 + C20963) + C20964) * C19834) *
               C51018 * C51148 +
           ((C21103 + C21102 - C21101 - C21104) * C19831 +
            (C21107 + C21106 - C21105 - C21108) * C19832 +
            (C21111 + C21110 - C21109 - C21112) * C19833 +
            ((C19835 * C4091 + C50861 * C4095) * C50007 +
             (C19835 * C4093 + C50861 * C4097) * C51139 -
             (C19835 * C4090 + C50861 * C4094) * C50000 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C19834) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51139 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C17049 +
            ((C17249 + C17250 + C17251) * C50007 +
             (C17252 + C17253 + C17254) * C51139 -
             (C17255 + C17256 + C17257) * C50000 -
             (C17258 + C17259 + C17260) * C50884) *
                C51056) *
               C51018 * C51148 +
           (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
              C17053 * C401 + C17048 * C411) *
                 C50000 -
             ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
               C17051 * C416 + C17046 * C432) *
                  C51139 +
              (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
               C17051 * C403 + C17046 * C417) *
                  C50007) +
             (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
              C17053 * C413 + C17048 * C429) *
                 C50884) *
                C17049 +
            ((C17947 + C17948 + C17949) * C50000 -
             ((C17950 + C17951 + C17952) * C51139 +
              (C17953 + C17954 + C17955) * C50007) +
             (C17956 + C17957 + C17958) * C50884) *
                C51056) *
               C51018 * C50984) *
              C904 +
          ((((C17257 + C17256 + C17255) * C50000 -
             ((C17254 + C17253 + C17252) * C51139 +
              (C17251 + C17250 + C17249) * C50007) +
             (C17260 + C17259 + C17258) * C50884) *
                C17049 +
            ((C17261 + C17262 + C17263) * C50000 -
             ((C17264 + C17265 + C17266) * C51139 +
              (C17267 + C17268 + C17269) * C50007) +
             (C17270 + C17271 + C17272) * C50884) *
                C51056) *
               C51018 * C51148 +
           (((C17955 + C17954 + C17953) * C50007 +
             (C17952 + C17951 + C17950) * C51139 -
             (C17949 + C17948 + C17947) * C50000 -
             (C17958 + C17957 + C17956) * C50884) *
                C17049 +
            ((C17051 * C1447 + C17046 * C1455 + C17052 * C1446 +
              C17047 * C1454 + C17053 * C1445 + C17048 * C1453) *
                 C50007 +
             (C17051 * C1451 + C17046 * C1459 + C17052 * C1450 +
              C17047 * C1458 + C17053 * C1449 + C17048 * C1457) *
                 C51139 -
             (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
              C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                 C50000 -
             (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
              C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                 C50884) *
                C51056) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C17049 +
             (C20949 + C20950 - C20951 - C20952) * C51056) *
                C5105 +
            ((C23635 + C23636 - C23637 - C23638) * C17049 + C23655 * C51056) *
                C5106 +
            ((C23640 + C23641 - C23642 - C23643) * C17049 + C23656 * C51056) *
                C5107) *
               C51148 +
           (((C23637 - (C23636 + C23635) + C23638) * C17049 + C23657 * C51056) *
                C5105 +
            ((C23642 - (C23641 + C23640) + C23643) * C17049 + C23658 * C51056) *
                C5106 +
            ((C22269 * C50000 - (C22270 * C51139 + C22271 * C50007) +
              C22272 * C50884) *
                 C17049 +
             (C23647 - (C23648 + C23649) + C23650) * C51056) *
                C5107) *
               C50984) *
              C904 +
          ((((C20951 - (C20950 + C20949) + C20952) * C17049 +
             (C20955 - (C20954 + C20953) + C20956) * C51056) *
                C5105 +
            (C23657 * C17049 + (C21105 - (C21106 + C21107) + C21108) * C51056) *
                C5106 +
            (C23658 * C17049 + (C23437 - (C23438 + C23439) + C23440) * C51056) *
                C5107) *
               C51148 +
           ((C23655 * C17049 + (C21107 + C21106 - C21105 - C21108) * C51056) *
                C5105 +
            (C23656 * C17049 + (C23439 + C23438 - C23437 - C23440) * C51056) *
                C5106 +
            ((C23649 + C23648 - C23647 - C23650) * C17049 +
             (C23276 * C50007 + C23277 * C51139 -
              (C19835 * C4505 + C50861 * C4511) * C50000 -
              (C19835 * C4509 + C50861 * C4517) * C50884) *
                 C51056) *
                C5107) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C17049 +
           ((C17249 + C17250 + C17251) * C980 +
            (C17252 + C17253 + C17254) * C50879) *
               C51056) *
              C51018 * C50920 * C976 -
          (((C17264 + C17265 + C17266) * C50879 +
            (C17267 + C17268 + C17269) * C980) *
               C51056 +
           ((C17254 + C17253 + C17252) * C50879 +
            (C17251 + C17250 + C17249) * C980) *
               C17049) *
              C51018 * C50920 * C977 +
          (((C17269 + C17268 + C17267) * C980 +
            (C17266 + C17265 + C17264) * C50879) *
               C17049 +
           ((C18215 + C18216 + C18217) * C980 +
            (C18218 + C18219 + C18220) * C50879) *
               C51056) *
              C51018 * C50920 * C978 -
          (((C17053 * C2332 + C17048 * C2335 + C17052 * C2330 + C17047 * C2334 +
             C17051 * C2329 + C17046 * C2333) *
                C50879 +
            (C17053 * C2326 + C17048 * C2331 + C17052 * C2325 + C17047 * C2328 +
             C17051 * C2324 + C17046 * C2327) *
                C980) *
               C51056 +
           ((C18220 + C18219 + C18218) * C50879 +
            (C18217 + C18216 + C18215) * C980) *
               C17049) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C17049 +
           ((C17249 + C17250 + C17251) * C906 +
            (C17252 + C17253 + C17254) * C901 -
            (C17255 + C17256 + C17257) * C907 -
            (C17258 + C17259 + C17260) * C902 +
            (C17577 + C17578 + C17579) * C908 +
            (C17580 + C17581 + C17582) * C903) *
               C51056) *
              C51018 * C50920 * C904 +
          (((C17257 + C17256 + C17255) * C907 -
            ((C17254 + C17253 + C17252) * C901 +
             (C17251 + C17250 + C17249) * C906) +
            (C17260 + C17259 + C17258) * C902 -
            (C17579 + C17578 + C17577) * C908 -
            (C17582 + C17581 + C17580) * C903) *
               C17049 +
           ((C17261 + C17262 + C17263) * C907 -
            ((C17264 + C17265 + C17266) * C901 +
             (C17267 + C17268 + C17269) * C906) +
            (C17270 + C17271 + C17272) * C902 -
            (C17053 * C267 + C17048 * C286 + C17052 * C266 + C17047 * C281 +
             C17051 * C265 + C17046 * C280) *
                C908 -
            (C17053 * C287 + C17048 * C297 + C17052 * C285 + C17047 * C296 +
             C17051 * C284 + C17046 * C295) *
                C903) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C50920 * C904 +
          ((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C19831 +
           (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C19832 +
           (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C19833 +
           (C19979 * C907 - (C19980 * C901 + C19981 * C906) + C19982 * C902 -
            (C19835 * C2326 + C50861 * C2331) * C908 -
            (C19835 * C2332 + C50861 * C2335) * C903) *
               C19834) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C19831 +
           (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
              C51018 * C50920 * C976 -
          (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
           (C20700 + C20699) * C19831) *
              C51018 * C50920 * C977 +
          (C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
           (C20717 + C20718) * C19834) *
              C51018 * C50920 * C978 -
          (((C19835 * C20695 + C50861 * C20697) * C50879 +
            (C19835 * C20694 + C50861 * C20696) * C980) *
               C19834 +
           (C20718 + C20717) * C19833 + C20713 * C19832 + C20714 * C19831) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C17049 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C5105 +
           ((C22260 * C906 + C22261 * C901 - C22262 * C907 - C22263 * C902 +
             C22632 * C908 + C22633 * C903) *
                C17049 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C5106 +
           ((C22264 * C906 + C22265 * C901 - C22266 * C907 - C22267 * C902 +
             C22634 * C908 + C22635 * C903) *
                C17049 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C5107) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C17049 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C51056) *
               C5105 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C17049 +
            (C20493 * C907 - (C20494 * C901 + C20495 * C906) + C20496 * C902 -
             (C19835 * C1445 + C50861 * C1453) * C908 -
             (C19835 * C1449 + C50861 * C1457) * C903) *
                C51056) *
               C5106 +
           ((C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C17049 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C51056) *
               C5107) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C17049 +
            (C20699 + C20700) * C51056) *
               C5105 +
           ((C22260 * C980 + C22261 * C50879) * C17049 +
            (C20826 + C20825) * C51056) *
               C5106 +
           ((C22264 * C980 + C22265 * C50879) * C17049 +
            (C20845 + C20846) * C51056) *
               C5107) *
              C50920 * C976 -
          (((C20848 + C20847) * C51056 + (C20846 + C20845) * C17049) * C5107 +
           (C21216 * C51056 + (C20825 + C20826) * C17049) * C5106 +
           ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
              C50920 * C977 +
          ((C20711 * C17049 + C20712 * C51056) * C5105 +
           ((C20824 + C20823) * C17049 + (C20822 + C20821) * C51056) * C5106 +
           ((C20847 + C20848) * C17049 + (C20849 + C20850) * C51056) * C5107) *
              C50920 * C978 -
          ((((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C51056 +
            (C20850 + C20849) * C17049) *
               C5107 +
           ((C21224 + C21223) * C51056 + C21215 * C17049) * C5106 +
           (C20713 * C51056 + C20714 * C17049) * C5105) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C19831 +
            (C20949 + C20950 - C20951 - C20952) * C19832 + C20969 * C19833 +
            C20970 * C19834) *
               C51018 * C1558 +
           (((C19835 * C399 + C50861 * C409) * C50000 -
             ((C19835 * C416 + C50861 * C432) * C51139 +
              (C19835 * C403 + C50861 * C417) * C50007) +
             (C19835 * C415 + C50861 * C431) * C50884) *
                C19831 +
            (C21101 - (C21102 + C21103) + C21104) * C19832 +
            (C21105 - (C21106 + C21107) + C21108) * C19833 +
            (C21109 - (C21110 + C21111) + C21112) * C19834) *
               C51018 * C50984) *
              C51147 +
          (((C20951 - (C20950 + C20949) + C20952) * C19831 +
            (C20955 - (C20954 + C20953) + C20956) * C19832 +
            (C20959 - (C20958 + C20957) + C20960) * C19833 +
            (C20961 - (C20962 + C20963) + C20964) * C19834) *
               C51018 * C1558 +
           ((C21103 + C21102 - C21101 - C21104) * C19831 +
            (C21107 + C21106 - C21105 - C21108) * C19832 +
            (C21111 + C21110 - C21109 - C21112) * C19833 +
            (C21221 * C50007 + C21222 * C51139 -
             (C19835 * C4090 + C50861 * C4094) * C50000 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C19834) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51139 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C17049 +
            ((C17249 + C17250 + C17251) * C50007 +
             (C17252 + C17253 + C17254) * C51139 -
             (C17255 + C17256 + C17257) * C50000 -
             (C17258 + C17259 + C17260) * C50884) *
                C51056) *
               C51018 * C1558 +
           (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
              C17053 * C401 + C17048 * C411) *
                 C50000 -
             ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
               C17051 * C416 + C17046 * C432) *
                  C51139 +
              (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
               C17051 * C403 + C17046 * C417) *
                  C50007) +
             (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
              C17053 * C413 + C17048 * C429) *
                 C50884) *
                C17049 +
            ((C17947 + C17948 + C17949) * C50000 -
             ((C17950 + C17951 + C17952) * C51139 +
              (C17953 + C17954 + C17955) * C50007) +
             (C17956 + C17957 + C17958) * C50884) *
                C51056) *
               C51018 * C50984) *
              C51147 +
          ((((C17257 + C17256 + C17255) * C50000 -
             ((C17254 + C17253 + C17252) * C51139 +
              (C17251 + C17250 + C17249) * C50007) +
             (C17260 + C17259 + C17258) * C50884) *
                C17049 +
            ((C17261 + C17262 + C17263) * C50000 -
             ((C17264 + C17265 + C17266) * C51139 +
              (C17267 + C17268 + C17269) * C50007) +
             (C17270 + C17271 + C17272) * C50884) *
                C51056) *
               C51018 * C1558 +
           (((C17955 + C17954 + C17953) * C50007 +
             (C17952 + C17951 + C17950) * C51139 -
             (C17949 + C17948 + C17947) * C50000 -
             (C17958 + C17957 + C17956) * C50884) *
                C17049 +
            ((C18883 + C18884 + C18885) * C50007 +
             (C18886 + C18887 + C18888) * C51139 -
             (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
              C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                 C50000 -
             (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
              C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                 C50884) *
                C51056) *
               C51018 * C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C17049 +
             (C20949 + C20950 - C20951 - C20952) * C51056) *
                C5105 +
            ((C23635 + C23636 - C23637 - C23638) * C17049 + C23655 * C51056) *
                C5106 +
            ((C23640 + C23641 - C23642 - C23643) * C17049 + C23656 * C51056) *
                C5107) *
               C1558 +
           (((C23637 - (C23636 + C23635) + C23638) * C17049 + C23657 * C51056) *
                C5105 +
            ((C23642 - (C23641 + C23640) + C23643) * C17049 + C23658 * C51056) *
                C5106 +
            ((C22269 * C50000 - (C22270 * C51139 + C22271 * C50007) +
              C22272 * C50884) *
                 C17049 +
             (C23647 - (C23648 + C23649) + C23650) * C51056) *
                C5107) *
               C50984) *
              C51147 +
          ((((C20951 - (C20950 + C20949) + C20952) * C17049 +
             (C20955 - (C20954 + C20953) + C20956) * C51056) *
                C5105 +
            (C23657 * C17049 + (C21105 - (C21106 + C21107) + C21108) * C51056) *
                C5106 +
            (C23658 * C17049 + (C23437 - (C23438 + C23439) + C23440) * C51056) *
                C5107) *
               C1558 +
           ((C23655 * C17049 + (C21107 + C21106 - C21105 - C21108) * C51056) *
                C5105 +
            (C23656 * C17049 + (C23439 + C23438 - C23437 - C23440) * C51056) *
                C5106 +
            ((C23649 + C23648 - C23647 - C23650) * C17049 +
             (C23276 * C50007 + C23277 * C51139 -
              (C19835 * C4505 + C50861 * C4511) * C50000 -
              (C19835 * C4509 + C50861 * C4517) * C50884) *
                 C51056) *
                C5107) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C51194 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C51195 +
           (((C19835 * C404 + C50861 * C419) * C980 +
             (C19835 * C423 + C50861 * C434) * C50879) *
                C19831 +
            (C20845 + C20846) * C19832 + (C20847 + C20848) * C19833 +
            (C20849 + C20850) * C19834) *
               C51018 * C1974) *
              C51147 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C51195 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C51194 -
           (((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C19834 +
            (C20850 + C20849) * C19833 + (C20848 + C20847) * C19832 +
            (C20846 + C20845) * C19831) *
               C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C51194 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C51195 +
           (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
              C17053 * C406 + C17048 * C421) *
                 C980 +
             (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
              C17053 * C425 + C17048 * C436) *
                 C50879) *
                C17049 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51056) *
               C51018 * C1974) *
              C51147 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C51195 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C51194 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51056 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C17049) *
               C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C17049 +
             (C20699 + C20700) * C51056) *
                C5105 +
            ((C23249 + C23250) * C17049 + C23251 * C51056) * C5106 +
            C23286 * C5107) *
               C51194 -
           (C24222 * C5107 +
            (C23259 * C51056 + (C23253 + C23252) * C17049) * C5106 +
            (C23260 * C51056 + (C23250 + C23249) * C17049) * C5105) *
               C51195 +
           (C23286 * C5105 +
            ((C23258 + C23257) * C17049 + C23273 * C51056) * C5106 +
            ((C24223 + C24224) * C17049 + (C23281 + C23282) * C51056) * C5107) *
               C1974) *
              C51147 +
          (((C23251 * C17049 + C23805 * C51056) * C5105 +
            (C23254 * C17049 + C23806 * C51056) * C5106 +
            (C23273 * C17049 + (C23283 + C23284) * C51056) * C5107) *
               C51195 -
           (C23285 * C5107 + (C21216 * C51056 + C23260 * C17049) * C5106 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
               C51194 -
           ((((C19835 * C23245 + C50861 * C23247) * C50879 +
              (C19835 * C23244 + C50861 * C23246) * C980) *
                 C51056 +
             (C23282 + C23281) * C17049) *
                C5107 +
            ((C23284 + C23283) * C51056 + C23272 * C17049) * C5106 +
            C23285 * C5105) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C906 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C901 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C907 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C902 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C908 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C903) *
                   C17049 +
               ((C17249 + C17250 + C17251) * C906 +
                (C17252 + C17253 + C17254) * C901 -
                (C17255 + C17256 + C17257) * C907 -
                (C17258 + C17259 + C17260) * C902 +
                (C17577 + C17578 + C17579) * C908 +
                (C17580 + C17581 + C17582) * C903) *
                   C51056) *
                  C51018 * C1558 +
              (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
                 C17053 * C401 + C17048 * C411) *
                    C907 -
                ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                  C17047 * C431 + C17051 * C416 + C17046 * C432) *
                     C901 +
                 (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                  C17047 * C409 + C17051 * C403 + C17046 * C417) *
                     C906) +
                (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
                 C17053 * C413 + C17048 * C429) *
                    C902 -
                (C17053 * C402 + C17048 * C412 + C17052 * C401 + C17047 * C411 +
                 C17051 * C400 + C17046 * C410) *
                    C908 -
                (C17053 * C418 + C17048 * C433 + C17052 * C413 + C17047 * C429 +
                 C17051 * C414 + C17046 * C430) *
                    C903) *
                   C17049 +
               ((C17947 + C17948 + C17949) * C907 -
                ((C17950 + C17951 + C17952) * C901 +
                 (C17953 + C17954 + C17955) * C906) +
                (C17956 + C17957 + C17958) * C902 -
                (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
                 C17051 * C785 + C17046 * C790) *
                    C908 -
                (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
                 C17051 * C794 + C17046 * C800) *
                    C903) *
                   C51056) *
                  C51018 * C50984) *
             C50908 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                  C17047 * C133 + C17053 * C127 + C17048 * C134) *
                     C980 +
                 (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                  C17047 * C147 + C17053 * C138 + C17048 * C148) *
                     C50879) *
                    C17049 +
                ((C17249 + C17250 + C17251) * C980 +
                 (C17252 + C17253 + C17254) * C50879) *
                    C51056) *
                   C51018 * C1558 -
               (((C17950 + C17951 + C17952) * C50879 +
                 (C17953 + C17954 + C17955) * C980) *
                    C51056 +
                ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                  C17047 * C431 + C17051 * C416 + C17046 * C432) *
                     C50879 +
                 (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                  C17047 * C409 + C17051 * C403 + C17046 * C417) *
                     C980) *
                    C17049) *
                   C51018 * C50984) *
                  C253 +
              ((((C17955 + C17954 + C17953) * C980 +
                 (C17952 + C17951 + C17950) * C50879) *
                    C17049 +
                ((C18883 + C18884 + C18885) * C980 +
                 (C18886 + C18887 + C18888) * C50879) *
                    C51056) *
                   C51018 * C50984 -
               (((C17264 + C17265 + C17266) * C50879 +
                 (C17267 + C17268 + C17269) * C980) *
                    C51056 +
                ((C17254 + C17253 + C17252) * C50879 +
                 (C17251 + C17250 + C17249) * C980) *
                    C17049) *
                   C51018 * C1558) *
                  C254 +
              ((((C17269 + C17268 + C17267) * C980 +
                 (C17266 + C17265 + C17264) * C50879) *
                    C17049 +
                ((C18215 + C18216 + C18217) * C980 +
                 (C18218 + C18219 + C18220) * C50879) *
                    C51056) *
                   C51018 * C1558 -
               (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
                  C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                     C50879 +
                 (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
                  C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                     C980) *
                    C51056 +
                ((C18888 + C18887 + C18886) * C50879 +
                 (C18885 + C18884 + C18883) * C980) *
                    C17049) *
                   C51018 * C50984) *
                  C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C17049 +
           ((C17249 + C17250 + C17251) * C980 +
            (C17252 + C17253 + C17254) * C50879) *
               C51056) *
              C51018 * C1724 -
          (((C17950 + C17951 + C17952) * C50879 +
            (C17953 + C17954 + C17955) * C980) *
               C51056 +
           ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
             C17051 * C416 + C17046 * C432) *
                C50879 +
            (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
             C17051 * C403 + C17046 * C417) *
                C980) *
               C17049) *
              C51018 * C1725 +
          (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
             C17053 * C406 + C17048 * C421) *
                C980 +
            (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
             C17053 * C425 + C17048 * C436) *
                C50879) *
               C17049 +
           ((C18379 + C18380 + C18381) * C980 +
            (C18382 + C18383 + C18384) * C50879) *
               C51056) *
              C51018 * C1726 -
          (((C17053 * C6008 + C17048 * C6009 + C17052 * C4513 + C17047 * C4519 +
             C17051 * C4514 + C17046 * C4520) *
                C50879 +
            (C17053 * C6006 + C17048 * C6007 + C17052 * C4507 + C17047 * C4515 +
             C17051 * C4508 + C17046 * C4516) *
                C980) *
               C51056 +
           ((C17053 * C1733 + C17048 * C1741 + C17052 * C1734 + C17047 * C1742 +
             C17051 * C1735 + C17046 * C1743) *
                C50879 +
            (C17053 * C1729 + C17048 * C1737 + C17052 * C1730 + C17047 * C1738 +
             C17051 * C1731 + C17046 * C1739) *
                C980) *
               C17049) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C1558 +
          (((C19835 * C399 + C50861 * C409) * C907 -
            ((C19835 * C416 + C50861 * C432) * C901 +
             (C19835 * C403 + C50861 * C417) * C906) +
            (C19835 * C415 + C50861 * C431) * C902 -
            (C19835 * C400 + C50861 * C410) * C908 -
            (C19835 * C414 + C50861 * C430) * C903) *
               C19831 +
           (C20489 * C907 - (C20490 * C901 + C20491 * C906) + C20492 * C902 -
            (C19835 * C785 + C50861 * C790) * C908 -
            (C19835 * C794 + C50861 * C800) * C903) *
               C19832 +
           (C20493 * C907 - (C20494 * C901 + C20495 * C906) + C20496 * C902 -
            (C19835 * C1445 + C50861 * C1453) * C908 -
            (C19835 * C1449 + C50861 * C1457) * C903) *
               C19833 +
           (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
            (C19835 * C3089 + C50861 * C3094) * C908 -
            (C19835 * C3095 + C50861 * C3098) * C903) *
               C19834) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C1558 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C50984) *
              C253 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C50984 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C1558) *
              C254 +
          ((C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
            (C20717 + C20718) * C19834) *
               C51018 * C1558 -
           (((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C19834 +
            (C21224 + C21223) * C19833 + C21215 * C19832 + C21216 * C19831) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C19831 +
           (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
              C51018 * C1724 -
          (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
           ((C19835 * C416 + C50861 * C432) * C50879 +
            (C19835 * C403 + C50861 * C417) * C980) *
               C19831) *
              C51018 * C1725 +
          (((C19835 * C404 + C50861 * C419) * C980 +
            (C19835 * C423 + C50861 * C434) * C50879) *
               C19831 +
           (C20845 + C20846) * C19832 + (C20847 + C20848) * C19833 +
           (C20849 + C20850) * C19834) *
              C51018 * C1726 -
          (((C19835 * C21487 + C50861 * C21489) * C50879 +
            (C19835 * C21486 + C50861 * C21488) * C980) *
               C19834 +
           ((C19835 * C4510 + C50861 * C4518) * C50879 +
            (C19835 * C4506 + C50861 * C4512) * C980) *
               C19833 +
           ((C19835 * C4514 + C50861 * C4520) * C50879 +
            (C19835 * C4508 + C50861 * C4516) * C980) *
               C19832 +
           ((C19835 * C1735 + C50861 * C1743) * C50879 +
            (C19835 * C1731 + C50861 * C1739) * C980) *
               C19831) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C17049 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C5105 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C17049 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C5106 +
           ((C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C17049 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C5107) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C17049 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51056) *
               C5105 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C17049 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51056) *
               C5106 +
           ((C22269 * C907 - (C22270 * C901 + C22271 * C906) + C22272 * C902 -
             (C19835 * C1729 + C50861 * C1737) * C908 -
             (C19835 * C1733 + C50861 * C1741) * C903) *
                C17049 +
            (C22273 * C907 - (C22274 * C901 + C22275 * C906) + C22276 * C902 -
             (C19835 * C6006 + C50861 * C6007) * C908 -
             (C19835 * C6008 + C50861 * C6009) * C903) *
                C51056) *
               C5107) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C17049 +
             (C20699 + C20700) * C51056) *
                C5105 +
            ((C23249 + C23250) * C17049 + C23251 * C51056) * C5106 +
            C23286 * C5107) *
               C1558 -
           ((C23272 * C51056 + (C23257 + C23258) * C17049) * C5107 +
            (C23259 * C51056 + (C23253 + C23252) * C17049) * C5106 +
            (C23260 * C51056 + (C23250 + C23249) * C17049) * C5105) *
               C50984) *
              C253 +
          (((C23251 * C17049 + C23805 * C51056) * C5105 +
            (C23254 * C17049 + C23806 * C51056) * C5106 +
            (C23273 * C17049 + (C23283 + C23284) * C51056) * C5107) *
               C50984 -
           (C23285 * C5107 + (C21216 * C51056 + C23260 * C17049) * C5106 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
               C1558) *
              C254 +
          (((C20711 * C17049 + C20712 * C51056) * C5105 +
            (C23805 * C17049 + (C20822 + C20821) * C51056) * C5106 +
            (C23806 * C17049 + (C20849 + C20850) * C51056) * C5107) *
               C1558 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C51056 +
             (C23284 + C23283) * C17049) *
                C5107 +
            ((C20850 + C20849) * C51056 + C23269 * C17049) * C5106 +
            (C21215 * C51056 + C21216 * C17049) * C5105) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C17049 +
            (C20699 + C20700) * C51056) *
               C5105 +
           ((C23249 + C23250) * C17049 + C23251 * C51056) * C5106 +
           C23286 * C5107) *
              C1724 -
          (C24222 * C5107 +
           (C23259 * C51056 + (C23253 + C23252) * C17049) * C5106 +
           (C23260 * C51056 + (C23250 + C23249) * C17049) * C5105) *
              C1725 +
          (C23286 * C5105 +
           ((C23258 + C23257) * C17049 + C23273 * C51056) * C5106 +
           ((C24223 + C24224) * C17049 + (C23281 + C23282) * C51056) * C5107) *
              C1726 -
          ((((C19835 * C24209 + C50861 * C24211) * C50879 +
             (C19835 * C24208 + C50861 * C24210) * C980) *
                C51056 +
            ((C19835 * C7321 + C50861 * C7325) * C50879 +
             (C19835 * C7319 + C50861 * C7323) * C980) *
                C17049) *
               C5107 +
           ((C23282 + C23281) * C51056 + (C24224 + C24223) * C17049) * C5106 +
           C24222 * C5105) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C50007 +
            (C19835 * C136 + C50861 * C146) * C51139 -
            (C19835 * C126 + C50861 * C133) * C50000 -
            (C19835 * C137 + C50861 * C147) * C50884) *
               C19831 +
           (C20949 + C20950 - C20951 - C20952) * C19832 + C20969 * C19833 +
           C20970 * C19834) *
              C51018 * C51194 +
          (((C19835 * C399 + C50861 * C409) * C50000 -
            ((C19835 * C416 + C50861 * C432) * C51139 +
             (C19835 * C403 + C50861 * C417) * C50007) +
            (C19835 * C415 + C50861 * C431) * C50884) *
               C19831 +
           (C21101 - (C21102 + C21103) + C21104) * C19832 +
           (C21105 - (C21106 + C21107) + C21108) * C19833 +
           (C21109 - (C21110 + C21111) + C21112) * C19834) *
              C51018 * C51195 +
          (((C19835 * C404 + C50861 * C419) * C50007 +
            (C19835 * C423 + C50861 * C434) * C51139 -
            (C19835 * C405 + C50861 * C420) * C50000 -
            (C19835 * C424 + C50861 * C435) * C50884) *
               C19831 +
           (C20839 * C50007 + C20840 * C51139 -
            (C19835 * C1097 + C50861 * C1105) * C50000 -
            (C19835 * C1101 + C50861 * C1109) * C50884) *
               C19832 +
           (C20841 * C50007 + C20842 * C51139 -
            (C19835 * C2566 + C50861 * C2569) * C50000 -
            (C19835 * C2571 + C50861 * C2575) * C50884) *
               C19833 +
           (C20843 * C50007 + C20844 * C51139 -
            (C19835 * C3565 + C50861 * C3569) * C50000 -
            (C19835 * C3567 + C50861 * C3571) * C50884) *
               C19834) *
              C51018 * C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51139 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C17049 +
           ((C17249 + C17250 + C17251) * C50007 +
            (C17252 + C17253 + C17254) * C51139 -
            (C17255 + C17256 + C17257) * C50000 -
            (C17258 + C17259 + C17260) * C50884) *
               C51056) *
              C51018 * C51194 +
          (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
             C17053 * C401 + C17048 * C411) *
                C50000 -
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C51139 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C50007) +
            (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
             C17053 * C413 + C17048 * C429) *
                C50884) *
               C17049 +
           ((C17947 + C17948 + C17949) * C50000 -
            ((C17950 + C17951 + C17952) * C51139 +
             (C17953 + C17954 + C17955) * C50007) +
            (C17956 + C17957 + C17958) * C50884) *
               C51056) *
              C51018 * C51195 +
          (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
             C17053 * C406 + C17048 * C421) *
                C50007 +
            (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
             C17053 * C425 + C17048 * C436) *
                C51139 -
            (C17053 * C407 + C17048 * C422 + C17052 * C406 + C17047 * C421 +
             C17051 * C405 + C17046 * C420) *
                C50000 -
            (C17053 * C426 + C17048 * C437 + C17052 * C425 + C17047 * C436 +
             C17051 * C424 + C17046 * C435) *
                C50884) *
               C17049 +
           ((C18379 + C18380 + C18381) * C50007 +
            (C18382 + C18383 + C18384) * C51139 -
            (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 + C17047 * C1104 +
             C17051 * C1097 + C17046 * C1105) *
                C50000 -
            (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 + C17047 * C1108 +
             C17051 * C1101 + C17046 * C1109) *
                C50884) *
               C51056) *
              C51018 * C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C17049 +
            (C20949 + C20950 - C20951 - C20952) * C51056) *
               C5105 +
           ((C23635 + C23636 - C23637 - C23638) * C17049 + C23655 * C51056) *
               C5106 +
           C24574 * C5107) *
              C51194 +
          (((C23637 - (C23636 + C23635) + C23638) * C17049 + C23657 * C51056) *
               C5105 +
           ((C23642 - (C23641 + C23640) + C23643) * C17049 + C23658 * C51056) *
               C5106 +
           ((C24567 - (C24568 + C24569) + C24570) * C17049 +
            (C23647 - (C23648 + C23649) + C23650) * C51056) *
               C5107) *
              C51195 +
          (C24574 * C5105 +
           ((C24569 + C24568 - C24567 - C24570) * C17049 +
            (C23649 + C23648 - C23647 - C23650) * C51056) *
               C5106 +
           ((C24220 * C50007 + C24221 * C51139 -
             (C19835 * C5401 + C50861 * C5404) * C50000 -
             (C19835 * C5406 + C50861 * C5410) * C50884) *
                C17049 +
            (C23274 * C50007 + C23275 * C51139 -
             (C19835 * C6412 + C50861 * C6416) * C50000 -
             (C19835 * C6414 + C50861 * C6418) * C50884) *
                C51056) *
               C5107) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C50984) *
              C253 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C1558) *
              C254 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C17049 +
            ((C18215 + C18216 + C18217) * C980 +
             (C18218 + C18219 + C18220) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
              C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                 C50879 +
             (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
              C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                 C980) *
                C51056 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C17049) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C17049 +
           ((C17249 + C17250 + C17251) * C906 +
            (C17252 + C17253 + C17254) * C901 -
            (C17255 + C17256 + C17257) * C907 -
            (C17258 + C17259 + C17260) * C902 +
            (C17577 + C17578 + C17579) * C908 +
            (C17580 + C17581 + C17582) * C903) *
               C51056) *
              C51018 * C1558 +
          (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
             C17053 * C401 + C17048 * C411) *
                C907 -
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C901 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C906) +
            (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
             C17053 * C413 + C17048 * C429) *
                C902 -
            (C17053 * C402 + C17048 * C412 + C17052 * C401 + C17047 * C411 +
             C17051 * C400 + C17046 * C410) *
                C908 -
            (C17053 * C418 + C17048 * C433 + C17052 * C413 + C17047 * C429 +
             C17051 * C414 + C17046 * C430) *
                C903) *
               C17049 +
           ((C17947 + C17948 + C17949) * C907 -
            ((C17950 + C17951 + C17952) * C901 +
             (C17953 + C17954 + C17955) * C906) +
            (C17956 + C17957 + C17958) * C902 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C908 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C903) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C1558 +
          (((C19835 * C399 + C50861 * C409) * C907 -
            ((C19835 * C416 + C50861 * C432) * C901 +
             (C19835 * C403 + C50861 * C417) * C906) +
            (C19835 * C415 + C50861 * C431) * C902 -
            (C19835 * C400 + C50861 * C410) * C908 -
            (C19835 * C414 + C50861 * C430) * C903) *
               C19831 +
           (C20489 * C907 - (C20490 * C901 + C20491 * C906) + C20492 * C902 -
            (C19835 * C785 + C50861 * C790) * C908 -
            (C19835 * C794 + C50861 * C800) * C903) *
               C19832 +
           (C20493 * C907 - (C20494 * C901 + C20495 * C906) + C20496 * C902 -
            (C19835 * C1445 + C50861 * C1453) * C908 -
            (C19835 * C1449 + C50861 * C1457) * C903) *
               C19833 +
           (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
            (C19835 * C3089 + C50861 * C3094) * C908 -
            (C19835 * C3095 + C50861 * C3098) * C903) *
               C19834) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C1558 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C50984) *
              C253 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C50984 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C1558) *
              C254 +
          ((C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
            (C20717 + C20718) * C19834) *
               C51018 * C1558 -
           (((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C19834 +
            (C21224 + C21223) * C19833 + C21215 * C19832 + C21216 * C19831) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C17049 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C5105 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C17049 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C5106 +
           ((C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C17049 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C5107) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C17049 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51056) *
               C5105 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C17049 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51056) *
               C5106 +
           ((C22269 * C907 - (C22270 * C901 + C22271 * C906) + C22272 * C902 -
             (C19835 * C1729 + C50861 * C1737) * C908 -
             (C19835 * C1733 + C50861 * C1741) * C903) *
                C17049 +
            (C22273 * C907 - (C22274 * C901 + C22275 * C906) + C22276 * C902 -
             (C19835 * C6006 + C50861 * C6007) * C908 -
             (C19835 * C6008 + C50861 * C6009) * C903) *
                C51056) *
               C5107) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C17049 +
             (C20699 + C20700) * C51056) *
                C5105 +
            ((C23249 + C23250) * C17049 + C23251 * C51056) * C5106 +
            C23286 * C5107) *
               C1558 -
           ((C23272 * C51056 + (C23257 + C23258) * C17049) * C5107 +
            (C23259 * C51056 + (C23253 + C23252) * C17049) * C5106 +
            (C23260 * C51056 + (C23250 + C23249) * C17049) * C5105) *
               C50984) *
              C253 +
          (((C23251 * C17049 + C23805 * C51056) * C5105 +
            (C23254 * C17049 + C23806 * C51056) * C5106 +
            (C23273 * C17049 + (C23283 + C23284) * C51056) * C5107) *
               C50984 -
           (C23285 * C5107 + (C21216 * C51056 + C23260 * C17049) * C5106 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C17049) * C5105) *
               C1558) *
              C254 +
          (((C20711 * C17049 + C20712 * C51056) * C5105 +
            (C23805 * C17049 + (C20822 + C20821) * C51056) * C5106 +
            (C23806 * C17049 + (C20849 + C20850) * C51056) * C5107) *
               C1558 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C51056 +
             (C23284 + C23283) * C17049) *
                C5107 +
            ((C20850 + C20849) * C51056 + C23269 * C17049) * C5106 +
            (C21215 * C51056 + C21216 * C17049) * C5105) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C542 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51190 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C543 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C51191 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C544 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C539) *
                C17049 +
            ((C25020 + C25021) * C542 + (C25022 + C25023) * C51190 -
             (C25024 + C25025) * C543 - (C25026 + C25027) * C51191 +
             (C25363 + C25364) * C544 + (C25365 + C25366) * C539) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C542 + (C28139 + C28140) * C51190 -
             (C28141 + C28142) * C543 - (C28143 + C28144) * C51191 +
             (C49961 * C400 + C51132 * C410 + C49954 * C401 + C50866 * C411) *
                 C544 +
             (C49961 * C414 + C51132 * C430 + C49954 * C413 + C50866 * C429) *
                 C539) *
                C17049 +
            ((C25748 + C25747) * C542 + (C25746 + C25745) * C51190 -
             (C25744 + C25743) * C543 - (C25750 + C25749) * C51191 +
             (C28359 + C28360) * C544 + (C28361 + C28362) * C539) *
                C51056) *
               C51082) *
              C50920 * C51147 +
          ((((C25025 + C25024) * C543 -
             ((C25023 + C25022) * C51190 + (C25021 + C25020) * C542) +
             (C25027 + C25026) * C51191 - (C25364 + C25363) * C544 -
             (C25366 + C25365) * C539) *
                C17049 +
            ((C25033 + C25032) * C543 -
             ((C25031 + C25030) * C51190 + (C25029 + C25028) * C542) +
             (C25035 + C25034) * C51191 - (C25368 + C25367) * C544 -
             (C25370 + C25369) * C539) *
                C51056) *
               C51161 +
           (((C25743 + C25744) * C543 -
             ((C25745 + C25746) * C51190 + (C25747 + C25748) * C542) +
             (C25749 + C25750) * C51191 - (C28360 + C28359) * C544 -
             (C28362 + C28361) * C539) *
                C17049 +
            ((C25751 + C25752) * C543 - (C26686 * C51190 + C26687 * C542) +
             (C25757 + C25758) * C51191 -
             (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
              C51132 * C1453) *
                 C544 -
             (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
              C51132 * C1457) *
                 C539) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C256 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C251 -
              (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                  C257 -
              (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                  C50884) *
                 C17049 +
             ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
              (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                 C51056) *
                C51161 +
            (((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
              (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                 C17049 +
             C28847 * C51056) *
                C51082) *
               C51148 +
           ((((C28142 + C28141) * C257 -
              ((C28140 + C28139) * C251 + (C28138 + C28137) * C256) +
              (C28144 + C28143) * C50884) *
                 C17049 +
             C28848 * C51056) *
                C51161 +
            (((C28145 + C28146) * C257 -
              ((C28147 + C28148) * C251 + (C28149 + C28150) * C256) +
              (C28151 + C28152) * C50884) *
                 C17049 +
             ((C28153 + C28154) * C257 -
              ((C26188 + C26187) * C251 + (C26186 + C26185) * C256) +
              (C28155 + C28156) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C51147 +
          (((((C25025 + C25024) * C257 -
              ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
              (C25027 + C25026) * C50884) *
                 C17049 +
             ((C25033 + C25032) * C257 -
              ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
              (C25035 + C25034) * C50884) *
                 C51056) *
                C51161 +
            (C28848 * C17049 +
             ((C25751 + C25752) * C257 - (C26686 * C251 + C26687 * C256) +
              (C25757 + C25758) * C50884) *
                 C51056) *
                C51082) *
               C51148 +
           ((C28847 * C17049 +
             ((C25756 + C25755) * C256 + (C25754 + C25753) * C251 -
              (C25752 + C25751) * C257 - (C25758 + C25757) * C50884) *
                 C51056) *
                C51161 +
            (((C26185 + C26186) * C256 + (C26187 + C26188) * C251 -
              (C28154 + C28153) * C257 - (C28156 + C28155) * C50884) *
                 C17049 +
             ((C26189 + C26190) * C256 + (C26191 + C26192) * C251 -
              (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
               C51132 * C2569) *
                  C257 -
              (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
               C51132 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51056) *
               C51161 +
           (((C49961 * C403 + C51132 * C417 + C49954 * C399 + C50866 * C409) *
                 C256 +
             (C49961 * C416 + C51132 * C432 + C49954 * C415 + C50866 * C431) *
                 C251 -
             (C49954 * C400 + C50866 * C410 + C49961 * C399 + C51132 * C409) *
                 C257 -
             (C49954 * C414 + C50866 * C430 + C49961 * C415 + C51132 * C431) *
                 C50884) *
                C17049 +
            ((C25748 + C25747) * C256 + (C25746 + C25745) * C251 -
             (C25744 + C25743) * C257 - (C25750 + C25749) * C50884) *
                C51056) *
               C51082) *
              C50920 * C253 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C50884) *
                C17049 +
            ((C25033 + C25032) * C257 -
             ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
             (C25035 + C25034) * C50884) *
                C51056) *
               C51161 +
           (((C25743 + C25744) * C257 -
             ((C25745 + C25746) * C251 + (C25747 + C25748) * C256) +
             (C25749 + C25750) * C50884) *
                C17049 +
            ((C25751 + C25752) * C257 - (C26686 * C251 + C26687 * C256) +
             (C25757 + C25758) * C50884) *
                C51056) *
               C51082) *
              C50920 * C254 +
          ((C25054 * C17049 +
            ((C25041 + C25040) * C256 + (C25039 + C25038) * C251 -
             (C25037 + C25036) * C257 - (C25043 + C25042) * C50884) *
                C51056) *
               C51161 +
           (((C25756 + C25755) * C256 + (C25754 + C25753) * C251 -
             (C25752 + C25751) * C257 - (C25758 + C25757) * C50884) *
                C17049 +
            ((C26698 + C26699) * C256 + (C26700 + C26701) * C251 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C257 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C121 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C109 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C122 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C110 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C123 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C111 -
            (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
                C124 -
            (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
                C112) *
               C17049 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25363 + C25364) * C123 + (C25365 + C25366) * C111 -
            (C49954 * C261 + C50866 * C271 + C49961 * C260 + C51132 * C270) *
                C124 -
            (C49954 * C277 + C50866 * C292 + C49961 * C272 + C51132 * C288) *
                C112) *
               C51056) *
              C51161 +
          (((C49961 * C403 + C51132 * C417 + C49954 * C399 + C50866 * C409) *
                C121 +
            (C49961 * C416 + C51132 * C432 + C49954 * C415 + C50866 * C431) *
                C109 -
            (C49954 * C400 + C50866 * C410 + C49961 * C399 + C51132 * C409) *
                C122 -
            (C49954 * C414 + C50866 * C430 + C49961 * C415 + C51132 * C431) *
                C110 +
            (C49961 * C400 + C51132 * C410 + C49954 * C401 + C50866 * C411) *
                C123 +
            (C49961 * C414 + C51132 * C430 + C49954 * C413 + C50866 * C429) *
                C111 -
            (C49954 * C402 + C50866 * C412 + C49961 * C401 + C51132 * C411) *
                C124 -
            (C49954 * C418 + C50866 * C433 + C49961 * C413 + C51132 * C429) *
                C112) *
               C17049 +
           ((C25748 + C25747) * C121 + (C25746 + C25745) * C109 -
            (C25744 + C25743) * C122 - (C25750 + C25749) * C110 +
            (C49961 * C785 + C51132 * C790 + C49954 * C786 + C50866 * C791) *
                C123 +
            (C49961 * C794 + C51132 * C800 + C49954 * C795 + C50866 * C801) *
                C111 -
            (C49954 * C787 + C50866 * C796 + C49961 * C786 + C51132 * C791) *
                C124 -
            (C49954 * C797 + C50866 * C802 + C49961 * C795 + C51132 * C801) *
                C112) *
               C51056) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
             (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                C17049 +
            ((C25748 + C25747) * C256 + (C25746 + C25745) * C251 -
             (C25744 + C25743) * C257 - (C25750 + C25749) * C50884) *
                C51056) *
               C51082) *
              C396 +
          ((((C28142 + C28141) * C257 -
             ((C28140 + C28139) * C251 + (C28138 + C28137) * C256) +
             (C28144 + C28143) * C50884) *
                C17049 +
            ((C25743 + C25744) * C257 -
             ((C25745 + C25746) * C251 + (C25747 + C25748) * C256) +
             (C25749 + C25750) * C50884) *
                C51056) *
               C51161 +
           (((C28145 + C28146) * C257 -
             ((C28147 + C28148) * C251 + (C28149 + C28150) * C256) +
             (C28151 + C28152) * C50884) *
                C17049 +
            ((C28153 + C28154) * C257 -
             ((C26188 + C26187) * C251 + (C26186 + C26185) * C256) +
             (C28155 + C28156) * C50884) *
                C51056) *
               C51082) *
              C397 +
          ((((C28150 + C28149) * C256 + (C28148 + C28147) * C251 -
             (C28146 + C28145) * C257 - (C28152 + C28151) * C50884) *
                C17049 +
            ((C26185 + C26186) * C256 + (C26187 + C26188) * C251 -
             (C28154 + C28153) * C257 - (C28156 + C28155) * C50884) *
                C51056) *
               C51161 +
           (((C49961 * C1731 + C51132 * C1739 + C49954 * C1730 +
              C50866 * C1738) *
                 C256 +
             (C49961 * C1735 + C51132 * C1743 + C49954 * C1734 +
              C50866 * C1742) *
                 C251 -
             (C49954 * C1729 + C50866 * C1737 + C49961 * C1730 +
              C51132 * C1738) *
                 C257 -
             (C49954 * C1733 + C50866 * C1741 + C49961 * C1734 +
              C51132 * C1742) *
                 C50884) *
                C17049 +
            ((C49961 * C4508 + C51132 * C4516 + C49954 * C4507 +
              C50866 * C4515) *
                 C256 +
             (C49961 * C4514 + C51132 * C4520 + C49954 * C4513 +
              C50866 * C4519) *
                 C251 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C257 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51056) *
               C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C542 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51190 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C543 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C51191 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C544 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C539) *
                C17049 +
            ((C25020 + C25021) * C542 + (C25022 + C25023) * C51190 -
             (C25024 + C25025) * C543 - (C25026 + C25027) * C51191 +
             (C25363 + C25364) * C544 + (C25365 + C25366) * C539) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C542 + (C28139 + C28140) * C51190 -
             (C28141 + C28142) * C543 - (C28143 + C28144) * C51191 +
             (C28565 + C28566) * C544 + (C28567 + C28568) * C539) *
                C17049 +
            ((C25748 + C25747) * C542 + (C25746 + C25745) * C51190 -
             (C25744 + C25743) * C543 - (C25750 + C25749) * C51191 +
             (C28359 + C28360) * C544 + (C28361 + C28362) * C539) *
                C51056) *
               C51082) *
              C51148 +
          ((((C28142 + C28141) * C543 -
             ((C28140 + C28139) * C51190 + (C28138 + C28137) * C542) +
             (C28144 + C28143) * C51191 - (C28566 + C28565) * C544 -
             (C28568 + C28567) * C539) *
                C17049 +
            ((C25743 + C25744) * C543 -
             ((C25745 + C25746) * C51190 + (C25747 + C25748) * C542) +
             (C25749 + C25750) * C51191 - (C28360 + C28359) * C544 -
             (C28362 + C28361) * C539) *
                C51056) *
               C51161 +
           (((C28145 + C28146) * C543 -
             ((C28147 + C28148) * C51190 + (C28149 + C28150) * C542) +
             (C28151 + C28152) * C51191 -
             (C49954 * C407 + C50866 * C422 + C49961 * C406 + C51132 * C421) *
                 C544 -
             (C49954 * C426 + C50866 * C437 + C49961 * C425 + C51132 * C436) *
                 C539) *
                C17049 +
            ((C28153 + C28154) * C543 -
             ((C26188 + C26187) * C51190 + (C26186 + C26185) * C542) +
             (C28155 + C28156) * C51191 -
             (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
              C51132 * C1104) *
                 C544 -
             (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
              C51132 * C1108) *
                 C539) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C121 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C109 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C122 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C110 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C123 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C111 -
            (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
                C124 -
            (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
                C112) *
               C17049 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25363 + C25364) * C123 + (C25365 + C25366) * C111 -
            (C49954 * C261 + C50866 * C271 + C49961 * C260 + C51132 * C270) *
                C124 -
            (C49954 * C277 + C50866 * C292 + C49961 * C272 + C51132 * C288) *
                C112) *
               C51056) *
              C51161 +
          (((C49961 * C403 + C51132 * C417 + C49954 * C399 + C50866 * C409) *
                C121 +
            (C49961 * C416 + C51132 * C432 + C49954 * C415 + C50866 * C431) *
                C109 -
            (C49954 * C400 + C50866 * C410 + C49961 * C399 + C51132 * C409) *
                C122 -
            (C49954 * C414 + C50866 * C430 + C49961 * C415 + C51132 * C431) *
                C110 +
            (C49961 * C400 + C51132 * C410 + C49954 * C401 + C50866 * C411) *
                C123 +
            (C49961 * C414 + C51132 * C430 + C49954 * C413 + C50866 * C429) *
                C111 -
            (C49954 * C402 + C50866 * C412 + C49961 * C401 + C51132 * C411) *
                C124 -
            (C49954 * C418 + C50866 * C433 + C49961 * C413 + C51132 * C429) *
                C112) *
               C17049 +
           ((C25748 + C25747) * C121 + (C25746 + C25745) * C109 -
            (C25744 + C25743) * C122 - (C25750 + C25749) * C110 +
            (C49961 * C785 + C51132 * C790 + C49954 * C786 + C50866 * C791) *
                C123 +
            (C49961 * C794 + C51132 * C800 + C49954 * C795 + C50866 * C801) *
                C111 -
            (C49954 * C787 + C50866 * C796 + C49961 * C786 + C51132 * C791) *
                C124 -
            (C49954 * C797 + C50866 * C802 + C49961 * C795 + C51132 * C801) *
                C112) *
               C51056) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51056) *
               C51161 +
           (((C49961 * C403 + C51132 * C417 + C49954 * C399 + C50866 * C409) *
                 C256 +
             (C49961 * C416 + C51132 * C432 + C49954 * C415 + C50866 * C431) *
                 C251 -
             (C49954 * C400 + C50866 * C410 + C49961 * C399 + C51132 * C409) *
                 C257 -
             (C49954 * C414 + C50866 * C430 + C49961 * C415 + C51132 * C431) *
                 C50884) *
                C17049 +
            ((C25748 + C25747) * C256 + (C25746 + C25745) * C251 -
             (C25744 + C25743) * C257 - (C25750 + C25749) * C50884) *
                C51056) *
               C51082) *
              C50920 * C253 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C50884) *
                C17049 +
            ((C25033 + C25032) * C257 -
             ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
             (C25035 + C25034) * C50884) *
                C51056) *
               C51161 +
           (((C25743 + C25744) * C257 -
             ((C25745 + C25746) * C251 + (C25747 + C25748) * C256) +
             (C25749 + C25750) * C50884) *
                C17049 +
            ((C25751 + C25752) * C257 - (C26686 * C251 + C26687 * C256) +
             (C25757 + C25758) * C50884) *
                C51056) *
               C51082) *
              C50920 * C254 +
          ((C25054 * C17049 +
            ((C25041 + C25040) * C256 + (C25039 + C25038) * C251 -
             (C25037 + C25036) * C257 - (C25043 + C25042) * C50884) *
                C51056) *
               C51161 +
           (((C25756 + C25755) * C256 + (C25754 + C25753) * C251 -
             (C25752 + C25751) * C257 - (C25758 + C25757) * C50884) *
                C17049 +
            ((C26698 + C26699) * C256 + (C26700 + C26701) * C251 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C257 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C17049 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
             (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                C17049 +
            (C28827 * C50007 + C28828 * C51139 - C28829 * C50000 -
             C28830 * C50884) *
                C51056) *
               C51082) *
              C50920 * C51192 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50884) *
                C17049 +
            ((C25033 + C25032) * C50000 -
             ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
             (C25035 + C25034) * C50884) *
                C51056) *
               C51161 +
           ((C28831 * C50000 - (C28832 * C51139 + C28833 * C50007) +
             C28834 * C50884) *
                C17049 +
            ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
             (C25757 + C25758) * C50884) *
                C51056) *
               C51082) *
              C50920 * C51193 +
          ((C26345 * C17049 +
            ((C25041 + C25040) * C50007 + (C25039 + C25038) * C51139 -
             (C25037 + C25036) * C50000 - (C25043 + C25042) * C50884) *
                C51056) *
               C51161 +
           (((C25756 + C25755) * C50007 + (C25754 + C25753) * C51139 -
             (C25752 + C25751) * C50000 - (C25758 + C25757) * C50884) *
                C17049 +
            ((C26698 + C26699) * C50007 + (C26700 + C26701) * C51139 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C50000 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C17049 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C51161 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
             C29383 * C51056) *
                C51082) *
               C51148 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C17049) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C17049) *
                C51161) *
               C50984) *
              C51192 +
          (((C29383 * C17049 + C30059 * C51056) * C51161 +
            (C29394 * C17049 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C26702 * C51056 + C29386 * C17049) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
                C51161) *
               C51148) *
              C51193 +
          (((C26015 * C17049 +
             ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
                C51161 +
            (C30059 * C17049 +
             ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
                C51082) *
               C51148 -
           ((((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
               C51132 * C3572) *
                  C50879 +
              (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
               C51132 * C3570) *
                  C980) *
                 C51056 +
             ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C17049) *
                C51082 +
            (((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51056 +
             C26702 * C17049) *
                C51161) *
               C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C17049 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
               C51161 +
           (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
            (C28827 * C980 + C28828 * C50879) * C51056) *
               C51082) *
              C50920 * C976 -
          ((C26702 * C51056 + (C28832 * C50879 + C28833 * C980) * C17049) *
               C51082 +
           (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
               C51161) *
              C50920 * C977 +
          ((C26015 * C17049 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
               C51161 +
           (((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C17049 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
               C51082) *
              C50920 * C978 -
          ((((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C51056 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C17049) *
               C51082 +
           (((C26021 + C26020) * C50879 + (C26019 + C26018) * C980) * C51056 +
            C26022 * C17049) *
               C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C17049 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C17049 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C50920 * C904 +
          ((((C25025 + C25024) * C907 -
             ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
             (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
             (C25366 + C25365) * C903) *
                C17049 +
            ((C25033 + C25032) * C907 -
             ((C25031 + C25030) * C901 + (C25029 + C25028) * C906) +
             (C25035 + C25034) * C902 - (C25368 + C25367) * C908 -
             (C25370 + C25369) * C903) *
                C51056) *
               C51161 +
           ((C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C17049 +
            ((C25751 + C25752) * C907 - (C26686 * C901 + C26687 * C906) +
             (C25757 + C25758) * C902 -
             (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
              C51132 * C1453) *
                 C908 -
             (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
              C51132 * C1457) *
                 C903) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C17049 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C51161 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
             C29383 * C51056) *
                C51082) *
               C396 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C17049) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C17049) *
                C51161) *
               C397 +
           ((((C28150 + C28149) * C980 + (C28148 + C28147) * C50879) * C17049 +
             C29394 * C51056) *
                C51161 +
            (((C49961 * C1731 + C51132 * C1739 + C49954 * C1730 +
               C50866 * C1738) *
                  C980 +
              (C49961 * C1735 + C51132 * C1743 + C49954 * C1734 +
               C50866 * C1742) *
                  C50879) *
                 C17049 +
             ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51056) *
                C51082) *
               C398) *
              C904 +
          (((C29383 * C17049 +
             ((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C51056) *
                C51161 +
            (C29394 * C17049 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C397 -
           ((C26702 * C51056 + C29386 * C17049) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
                C51161) *
               C396 -
           ((((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
               C51132 * C4518) *
                  C50879 +
              (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
               C51132 * C4512) *
                  C980) *
                 C51056 +
             ((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C17049) *
                C51082 +
            (((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51056 +
             C29393 * C17049) *
                C51161) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C50007 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C51139 -
              (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                  C50000 -
              (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                  C50884) *
                 C17049 +
             ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
              (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                 C51056) *
                C51161 +
            (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
              (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                 C17049 +
             C29859 * C51056) *
                C51082) *
               C51148 +
           ((((C28142 + C28141) * C50000 -
              ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
              (C28144 + C28143) * C50884) *
                 C17049 +
             C29860 * C51056) *
                C51161 +
            (((C28145 + C28146) * C50000 -
              ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
              (C28151 + C28152) * C50884) *
                 C17049 +
             ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
              (C28155 + C28156) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C904 +
          (((((C25025 + C25024) * C50000 -
              ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
              (C25027 + C25026) * C50884) *
                 C17049 +
             ((C25033 + C25032) * C50000 -
              ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
              (C25035 + C25034) * C50884) *
                 C51056) *
                C51161 +
            (C29860 * C17049 +
             ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
              (C25757 + C25758) * C50884) *
                 C51056) *
                C51082) *
               C51148 +
           ((C29859 * C17049 +
             ((C25756 + C25755) * C50007 + (C25754 + C25753) * C51139 -
              (C25752 + C25751) * C50000 - (C25758 + C25757) * C50884) *
                 C51056) *
                C51161 +
            ((C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
              (C28156 + C28155) * C50884) *
                 C17049 +
             ((C26189 + C26190) * C50007 + (C26191 + C26192) * C51139 -
              (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
               C51132 * C2569) *
                  C50000 -
              (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
               C51132 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C17049 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C17049 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C50920 * C904 +
          ((((C25025 + C25024) * C907 -
             ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
             (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
             (C25366 + C25365) * C903) *
                C17049 +
            ((C25033 + C25032) * C907 -
             ((C25031 + C25030) * C901 + (C25029 + C25028) * C906) +
             (C25035 + C25034) * C902 - (C25368 + C25367) * C908 -
             (C25370 + C25369) * C903) *
                C51056) *
               C51161 +
           ((C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C17049 +
            ((C25751 + C25752) * C907 - (C26686 * C901 + C26687 * C906) +
             (C25757 + C25758) * C902 -
             (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
              C51132 * C1453) *
                 C908 -
             (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
              C51132 * C1457) *
                 C903) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C17049 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
               C51161 +
           (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
            (C28827 * C980 + C28828 * C50879) * C51056) *
               C51082) *
              C50920 * C976 -
          ((C26702 * C51056 + (C28832 * C50879 + C28833 * C980) * C17049) *
               C51082 +
           (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
               C51161) *
              C50920 * C977 +
          ((C26015 * C17049 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
               C51161 +
           (((C25756 + C25755) * C980 + (C25754 + C25753) * C50879) * C17049 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
               C51082) *
              C50920 * C978 -
          ((((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C51056 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C17049) *
               C51082 +
           (((C26021 + C26020) * C50879 + (C26019 + C26018) * C980) * C51056 +
            C26022 * C17049) *
               C51161) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C50007 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C51139 -
              (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                  C50000 -
              (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                  C50884) *
                 C17049 +
             ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
              (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                 C51056) *
                C51161 +
            (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
              (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                 C17049 +
             C29859 * C51056) *
                C51082) *
               C1558 +
           ((((C28142 + C28141) * C50000 -
              ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
              (C28144 + C28143) * C50884) *
                 C17049 +
             C29860 * C51056) *
                C51161 +
            (((C28145 + C28146) * C50000 -
              ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
              (C28151 + C28152) * C50884) *
                 C17049 +
             ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
              (C28155 + C28156) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C51147 +
          (((((C25025 + C25024) * C50000 -
              ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
              (C25027 + C25026) * C50884) *
                 C17049 +
             ((C25033 + C25032) * C50000 -
              ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
              (C25035 + C25034) * C50884) *
                 C51056) *
                C51161 +
            (C29860 * C17049 +
             ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
              (C25757 + C25758) * C50884) *
                 C51056) *
                C51082) *
               C1558 +
           ((C29859 * C17049 +
             (C30055 * C50007 + C30056 * C51139 - (C25752 + C25751) * C50000 -
              (C25758 + C25757) * C50884) *
                 C51056) *
                C51161 +
            ((C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
              (C28156 + C28155) * C50884) *
                 C17049 +
             ((C26189 + C26190) * C50007 + (C26191 + C26192) * C51139 -
              (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
               C51132 * C2569) *
                  C50000 -
              (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
               C51132 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C17049 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C51161 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
             C29383 * C51056) *
                C51082) *
               C51194 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C17049) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C17049) *
                C51161) *
               C51195 +
           ((((C28150 + C28149) * C980 + (C28148 + C28147) * C50879) * C17049 +
             C29394 * C51056) *
                C51161 +
            (((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C17049 +
             ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51056) *
                C51082) *
               C1974) *
              C51147 +
          (((C29383 * C17049 + C30059 * C51056) * C51161 +
            (C29394 * C17049 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C51195 -
           ((C26702 * C51056 + C29386 * C17049) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
                C51161) *
               C51194 -
           ((((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
               C51132 * C4518) *
                  C50879 +
              (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
               C51132 * C4512) *
                  C980) *
                 C51056 +
             ((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C17049) *
                C51082 +
            (((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51056 +
             C29393 * C17049) *
                C51161) *
               C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C17049 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C51161 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
             C29383 * C51056) *
                C51082) *
               C1558 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C17049) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C17049) *
                C51161) *
               C50984) *
              C253 +
          (((C29383 * C17049 + C30059 * C51056) * C51161 +
            (C29394 * C17049 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C26702 * C51056 + C29386 * C17049) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
                C51161) *
               C1558) *
              C254 +
          (((C26015 * C17049 +
             ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
                C51161 +
            (C30059 * C17049 +
             ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
                C51082) *
               C1558 -
           ((((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
               C51132 * C3572) *
                  C50879 +
              (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
               C51132 * C3570) *
                  C980) *
                 C51056 +
             ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C17049) *
                C51082 +
            (((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51056 +
             C26702 * C17049) *
                C51161) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C17049 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C17049 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C1558 +
          ((((C28142 + C28141) * C907 -
             ((C28140 + C28139) * C901 + (C28138 + C28137) * C906) +
             (C28144 + C28143) * C902 - (C28566 + C28565) * C908 -
             (C28568 + C28567) * C903) *
                C17049 +
            (C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C51056) *
               C51161 +
           (((C28145 + C28146) * C907 -
             ((C28147 + C28148) * C901 + (C28149 + C28150) * C906) +
             (C28151 + C28152) * C902 -
             (C49954 * C407 + C50866 * C422 + C49961 * C406 + C51132 * C421) *
                 C908 -
             (C49954 * C426 + C50866 * C437 + C49961 * C425 + C51132 * C436) *
                 C903) *
                C17049 +
            ((C28153 + C28154) * C907 - (C29369 * C901 + C29370 * C906) +
             (C28155 + C28156) * C902 -
             (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
              C51132 * C1104) *
                 C908 -
             (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
              C51132 * C1108) *
                 C903) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C17049 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
               C51161 +
           (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
            C29383 * C51056) *
               C51082) *
              C1724 -
          ((C29393 * C51056 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C17049) *
               C51082 +
           (C29386 * C51056 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C17049) *
               C51161) *
              C1725 +
          ((((C28150 + C28149) * C980 + (C28148 + C28147) * C50879) * C17049 +
            C29394 * C51056) *
               C51161 +
           (((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C17049 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51056) *
               C51082) *
              C1726 -
          ((((C49954 * C6414 + C50866 * C6418 + C49961 * C6415 +
              C51132 * C6419) *
                 C50879 +
             (C49954 * C6412 + C50866 * C6416 + C49961 * C6413 +
              C51132 * C6417) *
                 C980) *
                C51056 +
            ((C49954 * C5406 + C50866 * C5410 + C49961 * C5405 +
              C51132 * C5409) *
                 C50879 +
             (C49954 * C5401 + C50866 * C5404 + C49961 * C5400 +
              C51132 * C5403) *
                 C980) *
                C17049) *
               C51082 +
           (((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C51056 +
            ((C30589 + C30588) * C50879 + (C30587 + C30586) * C980) * C17049) *
               C51161) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C17049 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
             (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                C17049 +
            C29859 * C51056) *
               C51082) *
              C51194 +
          ((((C28142 + C28141) * C50000 -
             ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
             (C28144 + C28143) * C50884) *
                C17049 +
            C29860 * C51056) *
               C51161 +
           (((C28145 + C28146) * C50000 -
             ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
             (C28151 + C28152) * C50884) *
                C17049 +
            ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
             (C28155 + C28156) * C50884) *
                C51056) *
               C51082) *
              C51195 +
          ((((C28150 + C28149) * C50007 + (C28148 + C28147) * C51139 -
             (C28146 + C28145) * C50000 - (C28152 + C28151) * C50884) *
                C17049 +
            (C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
             (C28156 + C28155) * C50884) *
                C51056) *
               C51161 +
           (((C30586 + C30587) * C50007 + (C30588 + C30589) * C51139 -
             (C49954 * C1729 + C50866 * C1737 + C49961 * C1730 +
              C51132 * C1738) *
                 C50000 -
             (C49954 * C1733 + C50866 * C1741 + C49961 * C1734 +
              C51132 * C1742) *
                 C50884) *
                C17049 +
            ((C29389 + C29390) * C50007 + (C29391 + C29392) * C51139 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C50000 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51056) *
               C51082) *
              C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C17049 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C51161 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C17049 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C1558 +
          ((((C28142 + C28141) * C907 -
             ((C28140 + C28139) * C901 + (C28138 + C28137) * C906) +
             (C28144 + C28143) * C902 - (C28566 + C28565) * C908 -
             (C28568 + C28567) * C903) *
                C17049 +
            (C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C51056) *
               C51161 +
           (((C28145 + C28146) * C907 -
             ((C28147 + C28148) * C901 + (C28149 + C28150) * C906) +
             (C28151 + C28152) * C902 -
             (C49954 * C407 + C50866 * C422 + C49961 * C406 + C51132 * C421) *
                 C908 -
             (C49954 * C426 + C50866 * C437 + C49961 * C425 + C51132 * C436) *
                 C903) *
                C17049 +
            ((C28153 + C28154) * C907 - (C29369 * C901 + C29370 * C906) +
             (C28155 + C28156) * C902 -
             (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
              C51132 * C1104) *
                 C908 -
             (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
              C51132 * C1108) *
                 C903) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C17049 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C51161 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C17049 +
             C29383 * C51056) *
                C51082) *
               C1558 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C17049) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C17049) *
                C51161) *
               C50984) *
              C253 +
          (((C29383 * C17049 + C30059 * C51056) * C51161 +
            (C29394 * C17049 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C26702 * C51056 + C29386 * C17049) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C17049) *
                C51161) *
               C1558) *
              C254 +
          (((C26015 * C17049 +
             ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
                C51161 +
            (C30059 * C17049 +
             ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
                C51082) *
               C1558 -
           ((((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
               C51132 * C3572) *
                  C50879 +
              (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
               C51132 * C3570) *
                  C980) *
                 C51056 +
             ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C17049) *
                C51082 +
            (((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51056 +
             C26702 * C17049) *
                C51161) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C17049 +
           ((C17249 + C17250 + C17251) * C542 +
            (C17252 + C17253 + C17254) * C51190 -
            (C17255 + C17256 + C17257) * C543 -
            (C17258 + C17259 + C17260) * C51191 +
            (C17577 + C17578 + C17579) * C544 +
            (C17580 + C17581 + C17582) * C539) *
               C51056) *
              C51018 * C50920 * C51147 +
          (((C17257 + C17256 + C17255) * C543 -
            ((C17254 + C17253 + C17252) * C51190 +
             (C17251 + C17250 + C17249) * C542) +
            (C17260 + C17259 + C17258) * C51191 -
            (C17579 + C17578 + C17577) * C544 -
            (C17582 + C17581 + C17580) * C539) *
               C17049 +
           ((C17261 + C17262 + C17263) * C543 -
            ((C17264 + C17265 + C17266) * C51190 +
             (C17267 + C17268 + C17269) * C542) +
            (C17270 + C17271 + C17272) * C51191 -
            (C17053 * C267 + C17048 * C286 + C17052 * C266 + C17047 * C281 +
             C17051 * C265 + C17046 * C280) *
                C544 -
            (C17053 * C287 + C17048 * C297 + C17052 * C285 + C17047 * C296 +
             C17051 * C284 + C17046 * C295) *
                C539) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C542 +
            (C19835 * C136 + C50861 * C146) * C51190 -
            (C19835 * C126 + C50861 * C133) * C543 -
            (C19835 * C137 + C50861 * C147) * C51191 +
            (C19835 * C127 + C50861 * C134) * C544 +
            (C19835 * C138 + C50861 * C148) * C539) *
               C19831 +
           (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C19832 +
           (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C19833 +
           (C20217 + C20218 - C20219 - C20220 + C20235 + C20236) * C19834) *
              C51018 * C50920 * C51147 +
          ((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C19831 +
           (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C19832 +
           (C20219 - (C20218 + C20217) + C20220 - C20235 - C20236) * C19833 +
           (C19979 * C543 - (C19980 * C51190 + C19981 * C542) +
            C19982 * C51191 - (C19835 * C2326 + C50861 * C2331) * C544 -
            (C19835 * C2332 + C50861 * C2335) * C539) *
               C19834) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                       C17047 * C133 + C17053 * C127 + C17048 * C134) *
                          C256 +
                      (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                       C17047 * C147 + C17053 * C138 + C17048 * C148) *
                          C251 -
                      (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                       C17047 * C134 + C17051 * C126 + C17046 * C133) *
                          C257 -
                      (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                       C17047 * C148 + C17051 * C137 + C17046 * C147) *
                          C50884) *
                         C17049 +
                     ((C17249 + C17250 + C17251) * C256 +
                      (C17252 + C17253 + C17254) * C251 -
                      (C17255 + C17256 + C17257) * C257 -
                      (C17258 + C17259 + C17260) * C50884) *
                         C51056) *
                        C51018 * C51148 +
                    (((C17051 * C399 + C17046 * C409 + C17052 * C400 +
                       C17047 * C410 + C17053 * C401 + C17048 * C411) *
                          C257 -
                      ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                        C17047 * C431 + C17051 * C416 + C17046 * C432) *
                           C251 +
                       (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                        C17047 * C409 + C17051 * C403 + C17046 * C417) *
                           C256) +
                      (C17051 * C415 + C17046 * C431 + C17052 * C414 +
                       C17047 * C430 + C17053 * C413 + C17048 * C429) *
                          C50884) *
                         C17049 +
                     ((C17947 + C17948 + C17949) * C257 -
                      ((C17950 + C17951 + C17952) * C251 +
                       (C17953 + C17954 + C17955) * C256) +
                      (C17956 + C17957 + C17958) * C50884) *
                         C51056) *
                        C51018 * C50984) *
                       C51147 +
                   ((((C17257 + C17256 + C17255) * C257 -
                      ((C17254 + C17253 + C17252) * C251 +
                       (C17251 + C17250 + C17249) * C256) +
                      (C17260 + C17259 + C17258) * C50884) *
                         C17049 +
                     ((C17261 + C17262 + C17263) * C257 -
                      ((C17264 + C17265 + C17266) * C251 +
                       (C17267 + C17268 + C17269) * C256) +
                      (C17270 + C17271 + C17272) * C50884) *
                         C51056) *
                        C51018 * C51148 +
                    (((C17955 + C17954 + C17953) * C256 +
                      (C17952 + C17951 + C17950) * C251 -
                      (C17949 + C17948 + C17947) * C257 -
                      (C17958 + C17957 + C17956) * C50884) *
                         C17049 +
                     ((C17051 * C1447 + C17046 * C1455 + C17052 * C1446 +
                       C17047 * C1454 + C17053 * C1445 + C17048 * C1453) *
                          C256 +
                      (C17051 * C1451 + C17046 * C1459 + C17052 * C1450 +
                       C17047 * C1458 + C17053 * C1449 + C17048 * C1457) *
                          C251 -
                      (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
                       C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                          C257 -
                      (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
                       C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                          C50884) *
                         C51056) *
                        C51018 * C50984) *
                       C50958)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C256 +
                      (C19835 * C136 + C50861 * C146) * C251 -
                      (C19835 * C126 + C50861 * C133) * C257 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C19831 +
                     (C19983 + C19984 - C19985 - C19986) * C19832 +
                     C20003 * C19833 + C20004 * C19834) *
                        C51018 * C51148 +
                    (((C19835 * C399 + C50861 * C409) * C257 -
                      ((C19835 * C416 + C50861 * C432) * C251 +
                       (C19835 * C403 + C50861 * C417) * C256) +
                      (C19835 * C415 + C50861 * C431) * C50884) *
                         C19831 +
                     (C20501 - (C20502 + C20503) + C20504) * C19832 +
                     (C20505 - (C20506 + C20507) + C20508) * C19833 +
                     (C20509 - (C20510 + C20511) + C20512) * C19834) *
                        C51018 * C50984) *
                       C51147 +
                   (((C19985 - (C19984 + C19983) + C19986) * C19831 +
                     (C19989 - (C19988 + C19987) + C19990) * C19832 +
                     (C19993 - (C19992 + C19991) + C19994) * C19833 +
                     (C19995 - (C19996 + C19997) + C19998) * C19834) *
                        C51018 * C51148 +
                    ((C20503 + C20502 - C20501 - C20504) * C19831 +
                     (C20507 + C20506 - C20505 - C20508) * C19832 +
                     (C20511 + C20510 - C20509 - C20512) * C19833 +
                     ((C19835 * C4091 + C50861 * C4095) * C256 +
                      (C19835 * C4093 + C50861 * C4097) * C251 -
                      (C19835 * C4090 + C50861 * C4094) * C257 -
                      (C19835 * C4092 + C50861 * C4096) * C50884) *
                         C19834) *
                        C51018 * C50984) *
                       C50958)) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C256 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C251 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C257 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C256 +
                     (C17252 + C17253 + C17254) * C251 -
                     (C17255 + C17256 + C17257) * C257 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C50920 * C253 +
                   (((C17257 + C17256 + C17255) * C257 -
                     ((C17254 + C17253 + C17252) * C251 +
                      (C17251 + C17250 + C17249) * C256) +
                     (C17260 + C17259 + C17258) * C50884) *
                        C17049 +
                    ((C17261 + C17262 + C17263) * C257 -
                     ((C17264 + C17265 + C17266) * C251 +
                      (C17267 + C17268 + C17269) * C256) +
                     (C17270 + C17271 + C17272) * C50884) *
                        C51056) *
                       C51018 * C50920 * C254 +
                   (((C17269 + C17268 + C17267) * C256 +
                     (C17266 + C17265 + C17264) * C251 -
                     (C17263 + C17262 + C17261) * C257 -
                     (C17272 + C17271 + C17270) * C50884) *
                        C17049 +
                    ((C17051 * C984 + C17046 * C992 + C17052 * C983 +
                      C17047 * C991 + C17053 * C982 + C17048 * C990) *
                         C256 +
                     (C17051 * C988 + C17046 * C996 + C17052 * C987 +
                      C17047 * C995 + C17053 * C986 + C17048 * C994) *
                         C251 -
                     (C17053 * C981 + C17048 * C989 + C17052 * C982 +
                      C17047 * C990 + C17051 * C983 + C17046 * C991) *
                         C257 -
                     (C17053 * C985 + C17048 * C993 + C17052 * C986 +
                      C17047 * C994 + C17051 * C987 + C17046 * C995) *
                         C50884) *
                        C51056) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                     C17047 * C133 + C17053 * C127 + C17048 * C134) *
                        C121 +
                    (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                     C17047 * C147 + C17053 * C138 + C17048 * C148) *
                        C109 -
                    (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                     C17047 * C134 + C17051 * C126 + C17046 * C133) *
                        C122 -
                    (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                     C17047 * C148 + C17051 * C137 + C17046 * C147) *
                        C110 +
                    (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                     C17047 * C135 + C17053 * C129 + C17048 * C140) *
                        C123 +
                    (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                     C17047 * C149 + C17053 * C141 + C17048 * C150) *
                        C111 -
                    (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                     C17047 * C140 + C17051 * C128 + C17046 * C135) *
                        C124 -
                    (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                     C17047 * C150 + C17051 * C139 + C17046 * C149) *
                        C112) *
                       C17049 +
                   ((C17051 * C262 + C17046 * C276 + C17052 * C258 +
                     C17047 * C268 + C17053 * C259 + C17048 * C269) *
                        C121 +
                    (C17051 * C275 + C17046 * C291 + C17052 * C274 +
                     C17047 * C290 + C17053 * C273 + C17048 * C289) *
                        C109 -
                    (C17053 * C260 + C17048 * C270 + C17052 * C259 +
                     C17047 * C269 + C17051 * C258 + C17046 * C268) *
                        C122 -
                    (C17053 * C272 + C17048 * C288 + C17052 * C273 +
                     C17047 * C289 + C17051 * C274 + C17046 * C290) *
                        C110 +
                    (C17051 * C259 + C17046 * C269 + C17052 * C260 +
                     C17047 * C270 + C17053 * C261 + C17048 * C271) *
                        C123 +
                    (C17051 * C273 + C17046 * C289 + C17052 * C272 +
                     C17047 * C288 + C17053 * C277 + C17048 * C292) *
                        C111 -
                    (C17053 * C545 + C17048 * C546 + C17052 * C261 +
                     C17047 * C271 + C17051 * C260 + C17046 * C270) *
                        C124 -
                    (C17053 * C547 + C17048 * C548 + C17052 * C277 +
                     C17047 * C292 + C17051 * C272 + C17046 * C288) *
                        C112) *
                       C51056) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C256 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C251 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C257 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C256 +
                     (C17252 + C17253 + C17254) * C251 -
                     (C17255 + C17256 + C17257) * C257 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C396 +
                   (((C17051 * C399 + C17046 * C409 + C17052 * C400 +
                      C17047 * C410 + C17053 * C401 + C17048 * C411) *
                         C257 -
                     ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                       C17047 * C431 + C17051 * C416 + C17046 * C432) *
                          C251 +
                      (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                       C17047 * C409 + C17051 * C403 + C17046 * C417) *
                          C256) +
                     (C17051 * C415 + C17046 * C431 + C17052 * C414 +
                      C17047 * C430 + C17053 * C413 + C17048 * C429) *
                         C50884) *
                        C17049 +
                    ((C17051 * C784 + C17046 * C789 + C17052 * C785 +
                      C17047 * C790 + C17053 * C786 + C17048 * C791) *
                         C257 -
                     ((C17053 * C794 + C17048 * C800 + C17052 * C793 +
                       C17047 * C799 + C17051 * C792 + C17046 * C798) *
                          C251 +
                      (C17053 * C785 + C17048 * C790 + C17052 * C784 +
                       C17047 * C789 + C17051 * C783 + C17046 * C788) *
                          C256) +
                     (C17051 * C793 + C17046 * C799 + C17052 * C794 +
                      C17047 * C800 + C17053 * C795 + C17048 * C801) *
                         C50884) *
                        C51056) *
                       C51018 * C397 +
                   (((C17051 * C404 + C17046 * C419 + C17052 * C405 +
                      C17047 * C420 + C17053 * C406 + C17048 * C421) *
                         C256 +
                     (C17051 * C423 + C17046 * C434 + C17052 * C424 +
                      C17047 * C435 + C17053 * C425 + C17048 * C436) *
                         C251 -
                     (C17053 * C407 + C17048 * C422 + C17052 * C406 +
                      C17047 * C421 + C17051 * C405 + C17046 * C420) *
                         C257 -
                     (C17053 * C426 + C17048 * C437 + C17052 * C425 +
                      C17047 * C436 + C17051 * C424 + C17046 * C435) *
                         C50884) *
                        C17049 +
                    ((C17051 * C1098 + C17046 * C1106 + C17052 * C1097 +
                      C17047 * C1105 + C17053 * C1096 + C17048 * C1104) *
                         C256 +
                     (C17051 * C1102 + C17046 * C1110 + C17052 * C1101 +
                      C17047 * C1109 + C17053 * C1100 + C17048 * C1108) *
                         C251 -
                     (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
                      C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                         C257 -
                     (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
                      C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                         C50884) *
                        C51056) *
                       C51018 * C398) *
                  C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50861 * C132) * C121 +
                    (C19835 * C136 + C50861 * C146) * C109 -
                    (C19835 * C126 + C50861 * C133) * C122 -
                    (C19835 * C137 + C50861 * C147) * C110 +
                    (C19835 * C127 + C50861 * C134) * C123 +
                    (C19835 * C138 + C50861 * C148) * C111 -
                    (C19835 * C128 + C50861 * C135) * C124 -
                    (C19835 * C139 + C50861 * C149) * C112) *
                       C19831 +
                   ((C19835 * C262 + C50861 * C276) * C121 +
                    (C19835 * C275 + C50861 * C291) * C109 -
                    (C19835 * C258 + C50861 * C268) * C122 -
                    (C19835 * C274 + C50861 * C290) * C110 +
                    (C19835 * C259 + C50861 * C269) * C123 +
                    (C19835 * C273 + C50861 * C289) * C111 -
                    (C19835 * C260 + C50861 * C270) * C124 -
                    (C19835 * C272 + C50861 * C288) * C112) *
                       C19832 +
                   ((C19835 * C263 + C50861 * C278) * C121 +
                    (C19835 * C282 + C50861 * C293) * C109 -
                    (C19835 * C264 + C50861 * C279) * C122 -
                    (C19835 * C283 + C50861 * C294) * C110 +
                    (C19835 * C265 + C50861 * C280) * C123 +
                    (C19835 * C284 + C50861 * C295) * C111 -
                    (C19835 * C266 + C50861 * C281) * C124 -
                    (C19835 * C285 + C50861 * C296) * C112) *
                       C19833 +
                   ((C19835 * C984 + C50861 * C992) * C121 +
                    (C19835 * C988 + C50861 * C996) * C109 -
                    (C19835 * C983 + C50861 * C991) * C122 -
                    (C19835 * C987 + C50861 * C995) * C110 +
                    (C19835 * C982 + C50861 * C990) * C123 +
                    (C19835 * C986 + C50861 * C994) * C111 -
                    (C19835 * C981 + C50861 * C989) * C124 -
                    (C19835 * C985 + C50861 * C993) * C112) *
                       C19834) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C256 +
                     (C19835 * C136 + C50861 * C146) * C251 -
                     (C19835 * C126 + C50861 * C133) * C257 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C19983 + C19984 - C19985 - C19986) * C19832 +
                    C20003 * C19833 + C20004 * C19834) *
                       C51018 * C50920 * C253 +
                   ((C19985 - (C19984 + C19983) + C19986) * C19831 +
                    (C19989 - (C19988 + C19987) + C19990) * C19832 +
                    (C19993 - (C19992 + C19991) + C19994) * C19833 +
                    (C19995 - (C19996 + C19997) + C19998) * C19834) *
                       C51018 * C50920 * C254 +
                   (C20003 * C19831 + C20004 * C19832 +
                    (C19997 + C19996 - C19995 - C19998) * C19833 +
                    ((C19835 * C3392 + C50861 * C3396) * C256 +
                     (C19835 * C3394 + C50861 * C3398) * C251 -
                     (C19835 * C3391 + C50861 * C3395) * C257 -
                     (C19835 * C3393 + C50861 * C3397) * C50884) *
                        C19834) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C256 +
                     (C19835 * C136 + C50861 * C146) * C251 -
                     (C19835 * C126 + C50861 * C133) * C257 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C19983 + C19984 - C19985 - C19986) * C19832 +
                    C20003 * C19833 + C20004 * C19834) *
                       C51018 * C396 +
                   (((C19835 * C399 + C50861 * C409) * C257 -
                     ((C19835 * C416 + C50861 * C432) * C251 +
                      (C19835 * C403 + C50861 * C417) * C256) +
                     (C19835 * C415 + C50861 * C431) * C50884) *
                        C19831 +
                    ((C19835 * C784 + C50861 * C789) * C257 -
                     ((C19835 * C792 + C50861 * C798) * C251 +
                      (C19835 * C783 + C50861 * C788) * C256) +
                     (C19835 * C793 + C50861 * C799) * C50884) *
                        C19832 +
                    ((C19835 * C1446 + C50861 * C1454) * C257 -
                     ((C19835 * C1451 + C50861 * C1459) * C251 +
                      (C19835 * C1447 + C50861 * C1455) * C256) +
                     (C19835 * C1450 + C50861 * C1458) * C50884) *
                        C19833 +
                    ((C19835 * C3088 + C50861 * C3091) * C257 -
                     ((C19835 * C3092 + C50861 * C3096) * C251 +
                      (C19835 * C3087 + C50861 * C3090) * C256) +
                     (C19835 * C3093 + C50861 * C3097) * C50884) *
                        C19834) *
                       C51018 * C397 +
                   (((C19835 * C404 + C50861 * C419) * C256 +
                     (C19835 * C423 + C50861 * C434) * C251 -
                     (C19835 * C405 + C50861 * C420) * C257 -
                     (C19835 * C424 + C50861 * C435) * C50884) *
                        C19831 +
                    ((C19835 * C1098 + C50861 * C1106) * C256 +
                     (C19835 * C1102 + C50861 * C1110) * C251 -
                     (C19835 * C1097 + C50861 * C1105) * C257 -
                     (C19835 * C1101 + C50861 * C1109) * C50884) *
                        C19832 +
                    ((C19835 * C2565 + C50861 * C2568) * C256 +
                     (C19835 * C2570 + C50861 * C2574) * C251 -
                     (C19835 * C2566 + C50861 * C2569) * C257 -
                     (C19835 * C2571 + C50861 * C2575) * C50884) *
                        C19833 +
                    ((C19835 * C3566 + C50861 * C3570) * C256 +
                     (C19835 * C3568 + C50861 * C3572) * C251 -
                     (C19835 * C3565 + C50861 * C3569) * C257 -
                     (C19835 * C3567 + C50861 * C3571) * C50884) *
                        C19834) *
                       C51018 * C398) *
                  C50908) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C17049 +
           ((C17249 + C17250 + C17251) * C542 +
            (C17252 + C17253 + C17254) * C51190 -
            (C17255 + C17256 + C17257) * C543 -
            (C17258 + C17259 + C17260) * C51191 +
            (C17577 + C17578 + C17579) * C544 +
            (C17580 + C17581 + C17582) * C539) *
               C51056) *
              C51018 * C51148 +
          (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
             C17053 * C401 + C17048 * C411) *
                C543 -
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C51190 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C542) +
            (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
             C17053 * C413 + C17048 * C429) *
                C51191 -
            (C17053 * C402 + C17048 * C412 + C17052 * C401 + C17047 * C411 +
             C17051 * C400 + C17046 * C410) *
                C544 -
            (C17053 * C418 + C17048 * C433 + C17052 * C413 + C17047 * C429 +
             C17051 * C414 + C17046 * C430) *
                C539) *
               C17049 +
           ((C17051 * C784 + C17046 * C789 + C17052 * C785 + C17047 * C790 +
             C17053 * C786 + C17048 * C791) *
                C543 -
            ((C17053 * C794 + C17048 * C800 + C17052 * C793 + C17047 * C799 +
              C17051 * C792 + C17046 * C798) *
                 C51190 +
             (C17053 * C785 + C17048 * C790 + C17052 * C784 + C17047 * C789 +
              C17051 * C783 + C17046 * C788) *
                 C542) +
            (C17051 * C793 + C17046 * C799 + C17052 * C794 + C17047 * C800 +
             C17053 * C795 + C17048 * C801) *
                C51191 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C544 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C539) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C542 +
            (C19835 * C136 + C50861 * C146) * C51190 -
            (C19835 * C126 + C50861 * C133) * C543 -
            (C19835 * C137 + C50861 * C147) * C51191 +
            (C19835 * C127 + C50861 * C134) * C544 +
            (C19835 * C138 + C50861 * C148) * C539) *
               C19831 +
           (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C19832 +
           (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C19833 +
           (C20217 + C20218 - C20219 - C20220 + C20235 + C20236) * C19834) *
              C51018 * C51148 +
          (((C19835 * C399 + C50861 * C409) * C543 -
            ((C19835 * C416 + C50861 * C432) * C51190 +
             (C19835 * C403 + C50861 * C417) * C542) +
            (C19835 * C415 + C50861 * C431) * C51191 -
            (C19835 * C400 + C50861 * C410) * C544 -
            (C19835 * C414 + C50861 * C430) * C539) *
               C19831 +
           ((C19835 * C784 + C50861 * C789) * C543 -
            ((C19835 * C792 + C50861 * C798) * C51190 +
             (C19835 * C783 + C50861 * C788) * C542) +
            (C19835 * C793 + C50861 * C799) * C51191 -
            (C19835 * C785 + C50861 * C790) * C544 -
            (C19835 * C794 + C50861 * C800) * C539) *
               C19832 +
           ((C19835 * C1446 + C50861 * C1454) * C543 -
            ((C19835 * C1451 + C50861 * C1459) * C51190 +
             (C19835 * C1447 + C50861 * C1455) * C542) +
            (C19835 * C1450 + C50861 * C1458) * C51191 -
            (C19835 * C1445 + C50861 * C1453) * C544 -
            (C19835 * C1449 + C50861 * C1457) * C539) *
               C19833 +
           ((C19835 * C3088 + C50861 * C3091) * C543 -
            ((C19835 * C3092 + C50861 * C3096) * C51190 +
             (C19835 * C3087 + C50861 * C3090) * C542) +
            (C19835 * C3093 + C50861 * C3097) * C51191 -
            (C19835 * C3089 + C50861 * C3094) * C544 -
            (C19835 * C3095 + C50861 * C3098) * C539) *
               C19834) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                     C17047 * C133 + C17053 * C127 + C17048 * C134) *
                        C121 +
                    (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                     C17047 * C147 + C17053 * C138 + C17048 * C148) *
                        C109 -
                    (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                     C17047 * C134 + C17051 * C126 + C17046 * C133) *
                        C122 -
                    (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                     C17047 * C148 + C17051 * C137 + C17046 * C147) *
                        C110 +
                    (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                     C17047 * C135 + C17053 * C129 + C17048 * C140) *
                        C123 +
                    (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                     C17047 * C149 + C17053 * C141 + C17048 * C150) *
                        C111 -
                    (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                     C17047 * C140 + C17051 * C128 + C17046 * C135) *
                        C124 -
                    (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                     C17047 * C150 + C17051 * C139 + C17046 * C149) *
                        C112) *
                       C17049 +
                   ((C17051 * C262 + C17046 * C276 + C17052 * C258 +
                     C17047 * C268 + C17053 * C259 + C17048 * C269) *
                        C121 +
                    (C17051 * C275 + C17046 * C291 + C17052 * C274 +
                     C17047 * C290 + C17053 * C273 + C17048 * C289) *
                        C109 -
                    (C17053 * C260 + C17048 * C270 + C17052 * C259 +
                     C17047 * C269 + C17051 * C258 + C17046 * C268) *
                        C122 -
                    (C17053 * C272 + C17048 * C288 + C17052 * C273 +
                     C17047 * C289 + C17051 * C274 + C17046 * C290) *
                        C110 +
                    (C17051 * C259 + C17046 * C269 + C17052 * C260 +
                     C17047 * C270 + C17053 * C261 + C17048 * C271) *
                        C123 +
                    (C17051 * C273 + C17046 * C289 + C17052 * C272 +
                     C17047 * C288 + C17053 * C277 + C17048 * C292) *
                        C111 -
                    (C17053 * C545 + C17048 * C546 + C17052 * C261 +
                     C17047 * C271 + C17051 * C260 + C17046 * C270) *
                        C124 -
                    (C17053 * C547 + C17048 * C548 + C17052 * C277 +
                     C17047 * C292 + C17051 * C272 + C17046 * C288) *
                        C112) *
                       C51056) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C256 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C251 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C257 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C256 +
                     (C17252 + C17253 + C17254) * C251 -
                     (C17255 + C17256 + C17257) * C257 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C50920 * C253 +
                   (((C17257 + C17256 + C17255) * C257 -
                     ((C17254 + C17253 + C17252) * C251 +
                      (C17251 + C17250 + C17249) * C256) +
                     (C17260 + C17259 + C17258) * C50884) *
                        C17049 +
                    ((C17261 + C17262 + C17263) * C257 -
                     ((C17264 + C17265 + C17266) * C251 +
                      (C17267 + C17268 + C17269) * C256) +
                     (C17270 + C17271 + C17272) * C50884) *
                        C51056) *
                       C51018 * C50920 * C254 +
                   (((C17269 + C17268 + C17267) * C256 +
                     (C17266 + C17265 + C17264) * C251 -
                     (C17263 + C17262 + C17261) * C257 -
                     (C17272 + C17271 + C17270) * C50884) *
                        C17049 +
                    ((C17051 * C984 + C17046 * C992 + C17052 * C983 +
                      C17047 * C991 + C17053 * C982 + C17048 * C990) *
                         C256 +
                     (C17051 * C988 + C17046 * C996 + C17052 * C987 +
                      C17047 * C995 + C17053 * C986 + C17048 * C994) *
                         C251 -
                     (C17053 * C981 + C17048 * C989 + C17052 * C982 +
                      C17047 * C990 + C17051 * C983 + C17046 * C991) *
                         C257 -
                     (C17053 * C985 + C17048 * C993 + C17052 * C986 +
                      C17047 * C994 + C17051 * C987 + C17046 * C995) *
                         C50884) *
                        C51056) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50861 * C132) * C121 +
                    (C19835 * C136 + C50861 * C146) * C109 -
                    (C19835 * C126 + C50861 * C133) * C122 -
                    (C19835 * C137 + C50861 * C147) * C110 +
                    (C19835 * C127 + C50861 * C134) * C123 +
                    (C19835 * C138 + C50861 * C148) * C111 -
                    (C19835 * C128 + C50861 * C135) * C124 -
                    (C19835 * C139 + C50861 * C149) * C112) *
                       C19831 +
                   ((C19835 * C262 + C50861 * C276) * C121 +
                    (C19835 * C275 + C50861 * C291) * C109 -
                    (C19835 * C258 + C50861 * C268) * C122 -
                    (C19835 * C274 + C50861 * C290) * C110 +
                    (C19835 * C259 + C50861 * C269) * C123 +
                    (C19835 * C273 + C50861 * C289) * C111 -
                    (C19835 * C260 + C50861 * C270) * C124 -
                    (C19835 * C272 + C50861 * C288) * C112) *
                       C19832 +
                   ((C19835 * C263 + C50861 * C278) * C121 +
                    (C19835 * C282 + C50861 * C293) * C109 -
                    (C19835 * C264 + C50861 * C279) * C122 -
                    (C19835 * C283 + C50861 * C294) * C110 +
                    (C19835 * C265 + C50861 * C280) * C123 +
                    (C19835 * C284 + C50861 * C295) * C111 -
                    (C19835 * C266 + C50861 * C281) * C124 -
                    (C19835 * C285 + C50861 * C296) * C112) *
                       C19833 +
                   ((C19835 * C984 + C50861 * C992) * C121 +
                    (C19835 * C988 + C50861 * C996) * C109 -
                    (C19835 * C983 + C50861 * C991) * C122 -
                    (C19835 * C987 + C50861 * C995) * C110 +
                    (C19835 * C982 + C50861 * C990) * C123 +
                    (C19835 * C986 + C50861 * C994) * C111 -
                    (C19835 * C981 + C50861 * C989) * C124 -
                    (C19835 * C985 + C50861 * C993) * C112) *
                       C19834) *
                  C51018 * C50920 * C50908) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C256 +
                     (C19835 * C136 + C50861 * C146) * C251 -
                     (C19835 * C126 + C50861 * C133) * C257 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C19983 + C19984 - C19985 - C19986) * C19832 +
                    C20003 * C19833 + C20004 * C19834) *
                       C51018 * C50920 * C253 +
                   ((C19985 - (C19984 + C19983) + C19986) * C19831 +
                    (C19989 - (C19988 + C19987) + C19990) * C19832 +
                    (C19993 - (C19992 + C19991) + C19994) * C19833 +
                    (C19995 - (C19996 + C19997) + C19998) * C19834) *
                       C51018 * C50920 * C254 +
                   (C20003 * C19831 + C20004 * C19832 +
                    (C19997 + C19996 - C19995 - C19998) * C19833 +
                    ((C19835 * C3392 + C50861 * C3396) * C256 +
                     (C19835 * C3394 + C50861 * C3398) * C251 -
                     (C19835 * C3391 + C50861 * C3395) * C257 -
                     (C19835 * C3393 + C50861 * C3397) * C50884) *
                        C19834) *
                       C51018 * C50920 * C255)) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51139 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C50007 +
                     (C17252 + C17253 + C17254) * C51139 -
                     (C17255 + C17256 + C17257) * C50000 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C50920 * C51192 +
                   (((C17257 + C17256 + C17255) * C50000 -
                     ((C17254 + C17253 + C17252) * C51139 +
                      (C17251 + C17250 + C17249) * C50007) +
                     (C17260 + C17259 + C17258) * C50884) *
                        C17049 +
                    ((C17261 + C17262 + C17263) * C50000 -
                     ((C17264 + C17265 + C17266) * C51139 +
                      (C17267 + C17268 + C17269) * C50007) +
                     (C17270 + C17271 + C17272) * C50884) *
                        C51056) *
                       C51018 * C50920 * C51193 +
                   (((C17269 + C17268 + C17267) * C50007 +
                     (C17266 + C17265 + C17264) * C51139 -
                     (C17263 + C17262 + C17261) * C50000 -
                     (C17272 + C17271 + C17270) * C50884) *
                        C17049 +
                    ((C18215 + C18216 + C18217) * C50007 +
                     (C18218 + C18219 + C18220) * C51139 -
                     (C17053 * C981 + C17048 * C989 + C17052 * C982 +
                      C17047 * C990 + C17051 * C983 + C17046 * C991) *
                         C50000 -
                     (C17053 * C985 + C17048 * C993 + C17052 * C986 +
                      C17047 * C994 + C17051 * C987 + C17046 * C995) *
                         C50884) *
                        C51056) *
                       C51018 * C50920 * C1213)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C50007 +
                     (C19835 * C136 + C50861 * C146) * C51139 -
                     (C19835 * C126 + C50861 * C133) * C50000 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C20949 + C20950 - C20951 - C20952) * C19832 +
                    C20969 * C19833 + C20970 * C19834) *
                       C51018 * C50920 * C51192 +
                   ((C20951 - (C20950 + C20949) + C20952) * C19831 +
                    (C20955 - (C20954 + C20953) + C20956) * C19832 +
                    (C20959 - (C20958 + C20957) + C20960) * C19833 +
                    (C20961 - (C20962 + C20963) + C20964) * C19834) *
                       C51018 * C50920 * C51193 +
                   (C20969 * C19831 + C20970 * C19832 +
                    (C20963 + C20962 - C20961 - C20964) * C19833 +
                    (C20715 * C50007 + C20716 * C51139 -
                     (C19835 * C3391 + C50861 * C3395) * C50000 -
                     (C19835 * C3393 + C50861 * C3397) * C50884) *
                        C19834) *
                       C51018 * C50920 * C1213)) /
                     (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C51148 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C50984) *
              C51192 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C51148) *
              C51193 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C17049 +
            ((C18215 + C18216 + C18217) * C980 +
             (C18218 + C18219 + C18220) * C50879) *
                C51056) *
               C51018 * C51148 -
           (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
              C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                 C50879 +
             (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
              C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                 C980) *
                C51056 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C17049) *
               C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C51148 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C50984) *
              C51192 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C50984 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C51148) *
              C51193 +
          ((C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
            (C20717 + C20718) * C19834) *
               C51018 * C51148 -
           (((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C19834 +
            (C21224 + C21223) * C19833 + C21215 * C19832 + C21216 * C19831) *
               C51018 * C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C17049 +
           ((C17249 + C17250 + C17251) * C980 +
            (C17252 + C17253 + C17254) * C50879) *
               C51056) *
              C51018 * C50920 * C976 -
          (((C17264 + C17265 + C17266) * C50879 +
            (C17267 + C17268 + C17269) * C980) *
               C51056 +
           ((C17254 + C17253 + C17252) * C50879 +
            (C17251 + C17250 + C17249) * C980) *
               C17049) *
              C51018 * C50920 * C977 +
          (((C17269 + C17268 + C17267) * C980 +
            (C17266 + C17265 + C17264) * C50879) *
               C17049 +
           ((C18215 + C18216 + C18217) * C980 +
            (C18218 + C18219 + C18220) * C50879) *
               C51056) *
              C51018 * C50920 * C978 -
          (((C17053 * C2332 + C17048 * C2335 + C17052 * C2330 + C17047 * C2334 +
             C17051 * C2329 + C17046 * C2333) *
                C50879 +
            (C17053 * C2326 + C17048 * C2331 + C17052 * C2325 + C17047 * C2328 +
             C17051 * C2324 + C17046 * C2327) *
                C980) *
               C51056 +
           ((C18220 + C18219 + C18218) * C50879 +
            (C18217 + C18216 + C18215) * C980) *
               C17049) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C17049 +
           ((C17249 + C17250 + C17251) * C906 +
            (C17252 + C17253 + C17254) * C901 -
            (C17255 + C17256 + C17257) * C907 -
            (C17258 + C17259 + C17260) * C902 +
            (C17577 + C17578 + C17579) * C908 +
            (C17580 + C17581 + C17582) * C903) *
               C51056) *
              C51018 * C50920 * C904 +
          (((C17257 + C17256 + C17255) * C907 -
            ((C17254 + C17253 + C17252) * C901 +
             (C17251 + C17250 + C17249) * C906) +
            (C17260 + C17259 + C17258) * C902 -
            (C17579 + C17578 + C17577) * C908 -
            (C17582 + C17581 + C17580) * C903) *
               C17049 +
           ((C17261 + C17262 + C17263) * C907 -
            ((C17264 + C17265 + C17266) * C901 +
             (C17267 + C17268 + C17269) * C906) +
            (C17270 + C17271 + C17272) * C902 -
            (C17053 * C267 + C17048 * C286 + C17052 * C266 + C17047 * C281 +
             C17051 * C265 + C17046 * C280) *
                C908 -
            (C17053 * C287 + C17048 * C297 + C17052 * C285 + C17047 * C296 +
             C17051 * C284 + C17046 * C295) *
                C903) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C396 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C397 +
           (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
              C17053 * C406 + C17048 * C421) *
                 C980 +
             (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
              C17053 * C425 + C17048 * C436) *
                 C50879) *
                C17049 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51056) *
               C51018 * C398) *
              C904 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C17051 * C1447 + C17046 * C1455 + C17052 * C1446 +
              C17047 * C1454 + C17053 * C1445 + C17048 * C1453) *
                 C980 +
             (C17051 * C1451 + C17046 * C1459 + C17052 * C1450 +
              C17047 * C1458 + C17053 * C1449 + C17048 * C1457) *
                 C50879) *
                C51056) *
               C51018 * C397 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C396 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51056 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C17049) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C50920 * C904 +
          ((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C19831 +
           (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C19832 +
           (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C19833 +
           (C19979 * C907 - (C19980 * C901 + C19981 * C906) + C19982 * C902 -
            (C19835 * C2326 + C50861 * C2331) * C908 -
            (C19835 * C2332 + C50861 * C2335) * C903) *
               C19834) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C19831 +
           (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
              C51018 * C50920 * C976 -
          (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
           (C20700 + C20699) * C19831) *
              C51018 * C50920 * C977 +
          (C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
           (C20717 + C20718) * C19834) *
              C51018 * C50920 * C978 -
          (((C19835 * C20695 + C50861 * C20697) * C50879 +
            (C19835 * C20694 + C50861 * C20696) * C980) *
               C19834 +
           (C20718 + C20717) * C19833 + C20713 * C19832 + C20714 * C19831) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C396 -
           ((C20821 + C20822) * C19834 + (C20823 + C20824) * C19833 +
            (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C397 +
           (((C19835 * C404 + C50861 * C419) * C980 +
             (C19835 * C423 + C50861 * C434) * C50879) *
                C19831 +
            (C20845 + C20846) * C19832 + (C20847 + C20848) * C19833 +
            (C20849 + C20850) * C19834) *
               C51018 * C398) *
              C904 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 +
            ((C19835 * C4091 + C50861 * C4095) * C980 +
             (C19835 * C4093 + C50861 * C4097) * C50879) *
                C19834) *
               C51018 * C397 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C396 -
           (((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C19834 +
            (C20850 + C20849) * C19833 + (C20848 + C20847) * C19832 +
            (C20846 + C20845) * C19831) *
               C51018 * C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                       C17047 * C133 + C17053 * C127 + C17048 * C134) *
                          C50007 +
                      (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                       C17047 * C147 + C17053 * C138 + C17048 * C148) *
                          C51139 -
                      (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                       C17047 * C134 + C17051 * C126 + C17046 * C133) *
                          C50000 -
                      (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                       C17047 * C148 + C17051 * C137 + C17046 * C147) *
                          C50884) *
                         C17049 +
                     ((C17249 + C17250 + C17251) * C50007 +
                      (C17252 + C17253 + C17254) * C51139 -
                      (C17255 + C17256 + C17257) * C50000 -
                      (C17258 + C17259 + C17260) * C50884) *
                         C51056) *
                        C51018 * C51148 +
                    (((C17051 * C399 + C17046 * C409 + C17052 * C400 +
                       C17047 * C410 + C17053 * C401 + C17048 * C411) *
                          C50000 -
                      ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                        C17047 * C431 + C17051 * C416 + C17046 * C432) *
                           C51139 +
                       (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                        C17047 * C409 + C17051 * C403 + C17046 * C417) *
                           C50007) +
                      (C17051 * C415 + C17046 * C431 + C17052 * C414 +
                       C17047 * C430 + C17053 * C413 + C17048 * C429) *
                          C50884) *
                         C17049 +
                     ((C17947 + C17948 + C17949) * C50000 -
                      ((C17950 + C17951 + C17952) * C51139 +
                       (C17953 + C17954 + C17955) * C50007) +
                      (C17956 + C17957 + C17958) * C50884) *
                         C51056) *
                        C51018 * C50984) *
                       C904 +
                   ((((C17257 + C17256 + C17255) * C50000 -
                      ((C17254 + C17253 + C17252) * C51139 +
                       (C17251 + C17250 + C17249) * C50007) +
                      (C17260 + C17259 + C17258) * C50884) *
                         C17049 +
                     ((C17261 + C17262 + C17263) * C50000 -
                      ((C17264 + C17265 + C17266) * C51139 +
                       (C17267 + C17268 + C17269) * C50007) +
                      (C17270 + C17271 + C17272) * C50884) *
                         C51056) *
                        C51018 * C51148 +
                    (((C17955 + C17954 + C17953) * C50007 +
                      (C17952 + C17951 + C17950) * C51139 -
                      (C17949 + C17948 + C17947) * C50000 -
                      (C17958 + C17957 + C17956) * C50884) *
                         C17049 +
                     ((C17051 * C1447 + C17046 * C1455 + C17052 * C1446 +
                       C17047 * C1454 + C17053 * C1445 + C17048 * C1453) *
                          C50007 +
                      (C17051 * C1451 + C17046 * C1459 + C17052 * C1450 +
                       C17047 * C1458 + C17053 * C1449 + C17048 * C1457) *
                          C51139 -
                      (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
                       C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                          C50000 -
                      (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
                       C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                          C50884) *
                         C51056) *
                        C51018 * C50984) *
                       C50958)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C50007 +
                      (C19835 * C136 + C50861 * C146) * C51139 -
                      (C19835 * C126 + C50861 * C133) * C50000 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C19831 +
                     (C20949 + C20950 - C20951 - C20952) * C19832 +
                     C20969 * C19833 + C20970 * C19834) *
                        C51018 * C51148 +
                    (((C19835 * C399 + C50861 * C409) * C50000 -
                      ((C19835 * C416 + C50861 * C432) * C51139 +
                       (C19835 * C403 + C50861 * C417) * C50007) +
                      (C19835 * C415 + C50861 * C431) * C50884) *
                         C19831 +
                     (C21101 - (C21102 + C21103) + C21104) * C19832 +
                     (C21105 - (C21106 + C21107) + C21108) * C19833 +
                     (C21109 - (C21110 + C21111) + C21112) * C19834) *
                        C51018 * C50984) *
                       C904 +
                   (((C20951 - (C20950 + C20949) + C20952) * C19831 +
                     (C20955 - (C20954 + C20953) + C20956) * C19832 +
                     (C20959 - (C20958 + C20957) + C20960) * C19833 +
                     (C20961 - (C20962 + C20963) + C20964) * C19834) *
                        C51018 * C51148 +
                    ((C21103 + C21102 - C21101 - C21104) * C19831 +
                     (C21107 + C21106 - C21105 - C21108) * C19832 +
                     (C21111 + C21110 - C21109 - C21112) * C19833 +
                     ((C19835 * C4091 + C50861 * C4095) * C50007 +
                      (C19835 * C4093 + C50861 * C4097) * C51139 -
                      (C19835 * C4090 + C50861 * C4094) * C50000 -
                      (C19835 * C4092 + C50861 * C4096) * C50884) *
                         C19834) *
                        C51018 * C50984) *
                       C50958)) /
                     (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C17049 +
           ((C17249 + C17250 + C17251) * C906 +
            (C17252 + C17253 + C17254) * C901 -
            (C17255 + C17256 + C17257) * C907 -
            (C17258 + C17259 + C17260) * C902 +
            (C17577 + C17578 + C17579) * C908 +
            (C17580 + C17581 + C17582) * C903) *
               C51056) *
              C51018 * C50920 * C904 +
          (((C17257 + C17256 + C17255) * C907 -
            ((C17254 + C17253 + C17252) * C901 +
             (C17251 + C17250 + C17249) * C906) +
            (C17260 + C17259 + C17258) * C902 -
            (C17579 + C17578 + C17577) * C908 -
            (C17582 + C17581 + C17580) * C903) *
               C17049 +
           ((C17261 + C17262 + C17263) * C907 -
            ((C17264 + C17265 + C17266) * C901 +
             (C17267 + C17268 + C17269) * C906) +
            (C17270 + C17271 + C17272) * C902 -
            (C17053 * C267 + C17048 * C286 + C17052 * C266 + C17047 * C281 +
             C17051 * C265 + C17046 * C280) *
                C908 -
            (C17053 * C287 + C17048 * C297 + C17052 * C285 + C17047 * C296 +
             C17051 * C284 + C17046 * C295) *
                C903) *
               C51056) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C17049 +
           ((C17249 + C17250 + C17251) * C980 +
            (C17252 + C17253 + C17254) * C50879) *
               C51056) *
              C51018 * C50920 * C976 -
          (((C17264 + C17265 + C17266) * C50879 +
            (C17267 + C17268 + C17269) * C980) *
               C51056 +
           ((C17254 + C17253 + C17252) * C50879 +
            (C17251 + C17250 + C17249) * C980) *
               C17049) *
              C51018 * C50920 * C977 +
          (((C17269 + C17268 + C17267) * C980 +
            (C17266 + C17265 + C17264) * C50879) *
               C17049 +
           ((C18215 + C18216 + C18217) * C980 +
            (C18218 + C18219 + C18220) * C50879) *
               C51056) *
              C51018 * C50920 * C978 -
          (((C17053 * C2332 + C17048 * C2335 + C17052 * C2330 + C17047 * C2334 +
             C17051 * C2329 + C17046 * C2333) *
                C50879 +
            (C17053 * C2326 + C17048 * C2331 + C17052 * C2325 + C17047 * C2328 +
             C17051 * C2324 + C17046 * C2327) *
                C980) *
               C51056 +
           ((C18220 + C18219 + C18218) * C50879 +
            (C18217 + C18216 + C18215) * C980) *
               C17049) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C50920 * C904 +
          ((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C19831 +
           (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C19832 +
           (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C19833 +
           (C19979 * C907 - (C19980 * C901 + C19981 * C906) + C19982 * C902 -
            (C19835 * C2326 + C50861 * C2331) * C908 -
            (C19835 * C2332 + C50861 * C2335) * C903) *
               C19834) *
              C51018 * C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C19831 +
           (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
              C51018 * C50920 * C976 -
          (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
           (C20700 + C20699) * C19831) *
              C51018 * C50920 * C977 +
          (C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
           (C20717 + C20718) * C19834) *
              C51018 * C50920 * C978 -
          (((C19835 * C20695 + C50861 * C20697) * C50879 +
            (C19835 * C20694 + C50861 * C20696) * C980) *
               C19834 +
           (C20718 + C20717) * C19833 + C20713 * C19832 + C20714 * C19831) *
              C51018 * C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                       C17047 * C133 + C17053 * C127 + C17048 * C134) *
                          C50007 +
                      (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                       C17047 * C147 + C17053 * C138 + C17048 * C148) *
                          C51139 -
                      (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                       C17047 * C134 + C17051 * C126 + C17046 * C133) *
                          C50000 -
                      (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                       C17047 * C148 + C17051 * C137 + C17046 * C147) *
                          C50884) *
                         C17049 +
                     ((C17249 + C17250 + C17251) * C50007 +
                      (C17252 + C17253 + C17254) * C51139 -
                      (C17255 + C17256 + C17257) * C50000 -
                      (C17258 + C17259 + C17260) * C50884) *
                         C51056) *
                        C51018 * C1558 +
                    (((C17051 * C399 + C17046 * C409 + C17052 * C400 +
                       C17047 * C410 + C17053 * C401 + C17048 * C411) *
                          C50000 -
                      ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                        C17047 * C431 + C17051 * C416 + C17046 * C432) *
                           C51139 +
                       (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                        C17047 * C409 + C17051 * C403 + C17046 * C417) *
                           C50007) +
                      (C17051 * C415 + C17046 * C431 + C17052 * C414 +
                       C17047 * C430 + C17053 * C413 + C17048 * C429) *
                          C50884) *
                         C17049 +
                     ((C17947 + C17948 + C17949) * C50000 -
                      ((C17950 + C17951 + C17952) * C51139 +
                       (C17953 + C17954 + C17955) * C50007) +
                      (C17956 + C17957 + C17958) * C50884) *
                         C51056) *
                        C51018 * C50984) *
                       C51147 +
                   ((((C17257 + C17256 + C17255) * C50000 -
                      ((C17254 + C17253 + C17252) * C51139 +
                       (C17251 + C17250 + C17249) * C50007) +
                      (C17260 + C17259 + C17258) * C50884) *
                         C17049 +
                     ((C17261 + C17262 + C17263) * C50000 -
                      ((C17264 + C17265 + C17266) * C51139 +
                       (C17267 + C17268 + C17269) * C50007) +
                      (C17270 + C17271 + C17272) * C50884) *
                         C51056) *
                        C51018 * C1558 +
                    (((C17955 + C17954 + C17953) * C50007 +
                      (C17952 + C17951 + C17950) * C51139 -
                      (C17949 + C17948 + C17947) * C50000 -
                      (C17958 + C17957 + C17956) * C50884) *
                         C17049 +
                     ((C18883 + C18884 + C18885) * C50007 +
                      (C18886 + C18887 + C18888) * C51139 -
                      (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
                       C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                          C50000 -
                      (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
                       C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                          C50884) *
                         C51056) *
                        C51018 * C50984) *
                       C50958)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50861 * C132) * C50007 +
                      (C19835 * C136 + C50861 * C146) * C51139 -
                      (C19835 * C126 + C50861 * C133) * C50000 -
                      (C19835 * C137 + C50861 * C147) * C50884) *
                         C19831 +
                     (C20949 + C20950 - C20951 - C20952) * C19832 +
                     C20969 * C19833 + C20970 * C19834) *
                        C51018 * C1558 +
                    (((C19835 * C399 + C50861 * C409) * C50000 -
                      ((C19835 * C416 + C50861 * C432) * C51139 +
                       (C19835 * C403 + C50861 * C417) * C50007) +
                      (C19835 * C415 + C50861 * C431) * C50884) *
                         C19831 +
                     (C21101 - (C21102 + C21103) + C21104) * C19832 +
                     (C21105 - (C21106 + C21107) + C21108) * C19833 +
                     (C21109 - (C21110 + C21111) + C21112) * C19834) *
                        C51018 * C50984) *
                       C51147 +
                   (((C20951 - (C20950 + C20949) + C20952) * C19831 +
                     (C20955 - (C20954 + C20953) + C20956) * C19832 +
                     (C20959 - (C20958 + C20957) + C20960) * C19833 +
                     (C20961 - (C20962 + C20963) + C20964) * C19834) *
                        C51018 * C1558 +
                    ((C21103 + C21102 - C21101 - C21104) * C19831 +
                     (C21107 + C21106 - C21105 - C21108) * C19832 +
                     (C21111 + C21110 - C21109 - C21112) * C19833 +
                     (C21221 * C50007 + C21222 * C51139 -
                      (C19835 * C4090 + C50861 * C4094) * C50000 -
                      (C19835 * C4092 + C50861 * C4096) * C50884) *
                         C19834) *
                        C51018 * C50984) *
                       C50958)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C51194 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C51195 +
           (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
              C17053 * C406 + C17048 * C421) *
                 C980 +
             (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
              C17053 * C425 + C17048 * C436) *
                 C50879) *
                C17049 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51056) *
               C51018 * C1974) *
              C51147 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C51195 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C51194 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51056 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C17049) *
               C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C51194 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C51195 +
           (((C19835 * C404 + C50861 * C419) * C980 +
             (C19835 * C423 + C50861 * C434) * C50879) *
                C19831 +
            (C20845 + C20846) * C19832 + (C20847 + C20848) * C19833 +
            (C20849 + C20850) * C19834) *
               C51018 * C1974) *
              C51147 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C51195 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C51194 -
           (((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C19834 +
            (C20850 + C20849) * C19833 + (C20848 + C20847) * C19832 +
            (C20846 + C20845) * C19831) *
               C51018 * C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C50984) *
              C253 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C1558) *
              C254 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C17049 +
            ((C18215 + C18216 + C18217) * C980 +
             (C18218 + C18219 + C18220) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
              C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                 C50879 +
             (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
              C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                 C980) *
                C51056 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C17049) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C17049 +
           ((C17249 + C17250 + C17251) * C906 +
            (C17252 + C17253 + C17254) * C901 -
            (C17255 + C17256 + C17257) * C907 -
            (C17258 + C17259 + C17260) * C902 +
            (C17577 + C17578 + C17579) * C908 +
            (C17580 + C17581 + C17582) * C903) *
               C51056) *
              C51018 * C1558 +
          (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
             C17053 * C401 + C17048 * C411) *
                C907 -
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C901 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C906) +
            (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
             C17053 * C413 + C17048 * C429) *
                C902 -
            (C17053 * C402 + C17048 * C412 + C17052 * C401 + C17047 * C411 +
             C17051 * C400 + C17046 * C410) *
                C908 -
            (C17053 * C418 + C17048 * C433 + C17052 * C413 + C17047 * C429 +
             C17051 * C414 + C17046 * C430) *
                C903) *
               C17049 +
           ((C17947 + C17948 + C17949) * C907 -
            ((C17950 + C17951 + C17952) * C901 +
             (C17953 + C17954 + C17955) * C906) +
            (C17956 + C17957 + C17958) * C902 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C908 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C903) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C17049 +
           ((C17249 + C17250 + C17251) * C980 +
            (C17252 + C17253 + C17254) * C50879) *
               C51056) *
              C51018 * C1724 -
          (((C17950 + C17951 + C17952) * C50879 +
            (C17953 + C17954 + C17955) * C980) *
               C51056 +
           ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
             C17051 * C416 + C17046 * C432) *
                C50879 +
            (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
             C17051 * C403 + C17046 * C417) *
                C980) *
               C17049) *
              C51018 * C1725 +
          (((C17051 * C404 + C17046 * C419 + C17052 * C405 + C17047 * C420 +
             C17053 * C406 + C17048 * C421) *
                C980 +
            (C17051 * C423 + C17046 * C434 + C17052 * C424 + C17047 * C435 +
             C17053 * C425 + C17048 * C436) *
                C50879) *
               C17049 +
           ((C18379 + C18380 + C18381) * C980 +
            (C18382 + C18383 + C18384) * C50879) *
               C51056) *
              C51018 * C1726 -
          (((C17053 * C6008 + C17048 * C6009 + C17052 * C4513 + C17047 * C4519 +
             C17051 * C4514 + C17046 * C4520) *
                C50879 +
            (C17053 * C6006 + C17048 * C6007 + C17052 * C4507 + C17047 * C4515 +
             C17051 * C4508 + C17046 * C4516) *
                C980) *
               C51056 +
           ((C17053 * C1733 + C17048 * C1741 + C17052 * C1734 + C17047 * C1742 +
             C17051 * C1735 + C17046 * C1743) *
                C50879 +
            (C17053 * C1729 + C17048 * C1737 + C17052 * C1730 + C17047 * C1738 +
             C17051 * C1731 + C17046 * C1739) *
                C980) *
               C17049) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C1558 +
          (((C19835 * C399 + C50861 * C409) * C907 -
            ((C19835 * C416 + C50861 * C432) * C901 +
             (C19835 * C403 + C50861 * C417) * C906) +
            (C19835 * C415 + C50861 * C431) * C902 -
            (C19835 * C400 + C50861 * C410) * C908 -
            (C19835 * C414 + C50861 * C430) * C903) *
               C19831 +
           (C20489 * C907 - (C20490 * C901 + C20491 * C906) + C20492 * C902 -
            (C19835 * C785 + C50861 * C790) * C908 -
            (C19835 * C794 + C50861 * C800) * C903) *
               C19832 +
           (C20493 * C907 - (C20494 * C901 + C20495 * C906) + C20496 * C902 -
            (C19835 * C1445 + C50861 * C1453) * C908 -
            (C19835 * C1449 + C50861 * C1457) * C903) *
               C19833 +
           (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
            (C19835 * C3089 + C50861 * C3094) * C908 -
            (C19835 * C3095 + C50861 * C3098) * C903) *
               C19834) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C1558 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C50984) *
              C253 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C50984 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C1558) *
              C254 +
          ((C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
            (C20717 + C20718) * C19834) *
               C51018 * C1558 -
           (((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C19834 +
            (C21224 + C21223) * C19833 + C21215 * C19832 + C21216 * C19831) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C19831 +
           (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
              C51018 * C1724 -
          (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
           ((C19835 * C416 + C50861 * C432) * C50879 +
            (C19835 * C403 + C50861 * C417) * C980) *
               C19831) *
              C51018 * C1725 +
          (((C19835 * C404 + C50861 * C419) * C980 +
            (C19835 * C423 + C50861 * C434) * C50879) *
               C19831 +
           (C20845 + C20846) * C19832 + (C20847 + C20848) * C19833 +
           (C20849 + C20850) * C19834) *
              C51018 * C1726 -
          (((C19835 * C21487 + C50861 * C21489) * C50879 +
            (C19835 * C21486 + C50861 * C21488) * C980) *
               C19834 +
           ((C19835 * C4510 + C50861 * C4518) * C50879 +
            (C19835 * C4506 + C50861 * C4512) * C980) *
               C19833 +
           ((C19835 * C4514 + C50861 * C4520) * C50879 +
            (C19835 * C4508 + C50861 * C4516) * C980) *
               C19832 +
           ((C19835 * C1735 + C50861 * C1743) * C50879 +
            (C19835 * C1731 + C50861 * C1739) * C980) *
               C19831) *
              C51018 * C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51139 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50884) *
                        C17049 +
                    ((C17249 + C17250 + C17251) * C50007 +
                     (C17252 + C17253 + C17254) * C51139 -
                     (C17255 + C17256 + C17257) * C50000 -
                     (C17258 + C17259 + C17260) * C50884) *
                        C51056) *
                       C51018 * C51194 +
                   (((C17051 * C399 + C17046 * C409 + C17052 * C400 +
                      C17047 * C410 + C17053 * C401 + C17048 * C411) *
                         C50000 -
                     ((C17053 * C414 + C17048 * C430 + C17052 * C415 +
                       C17047 * C431 + C17051 * C416 + C17046 * C432) *
                          C51139 +
                      (C17053 * C400 + C17048 * C410 + C17052 * C399 +
                       C17047 * C409 + C17051 * C403 + C17046 * C417) *
                          C50007) +
                     (C17051 * C415 + C17046 * C431 + C17052 * C414 +
                      C17047 * C430 + C17053 * C413 + C17048 * C429) *
                         C50884) *
                        C17049 +
                    ((C17947 + C17948 + C17949) * C50000 -
                     ((C17950 + C17951 + C17952) * C51139 +
                      (C17953 + C17954 + C17955) * C50007) +
                     (C17956 + C17957 + C17958) * C50884) *
                        C51056) *
                       C51018 * C51195 +
                   (((C17051 * C404 + C17046 * C419 + C17052 * C405 +
                      C17047 * C420 + C17053 * C406 + C17048 * C421) *
                         C50007 +
                     (C17051 * C423 + C17046 * C434 + C17052 * C424 +
                      C17047 * C435 + C17053 * C425 + C17048 * C436) *
                         C51139 -
                     (C17053 * C407 + C17048 * C422 + C17052 * C406 +
                      C17047 * C421 + C17051 * C405 + C17046 * C420) *
                         C50000 -
                     (C17053 * C426 + C17048 * C437 + C17052 * C425 +
                      C17047 * C436 + C17051 * C424 + C17046 * C435) *
                         C50884) *
                        C17049 +
                    ((C18379 + C18380 + C18381) * C50007 +
                     (C18382 + C18383 + C18384) * C51139 -
                     (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
                      C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                         C50000 -
                     (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
                      C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                         C50884) *
                        C51056) *
                       C51018 * C1974) *
                  C50908) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50861 * C132) * C50007 +
                     (C19835 * C136 + C50861 * C146) * C51139 -
                     (C19835 * C126 + C50861 * C133) * C50000 -
                     (C19835 * C137 + C50861 * C147) * C50884) *
                        C19831 +
                    (C20949 + C20950 - C20951 - C20952) * C19832 +
                    C20969 * C19833 + C20970 * C19834) *
                       C51018 * C51194 +
                   (((C19835 * C399 + C50861 * C409) * C50000 -
                     ((C19835 * C416 + C50861 * C432) * C51139 +
                      (C19835 * C403 + C50861 * C417) * C50007) +
                     (C19835 * C415 + C50861 * C431) * C50884) *
                        C19831 +
                    (C21101 - (C21102 + C21103) + C21104) * C19832 +
                    (C21105 - (C21106 + C21107) + C21108) * C19833 +
                    (C21109 - (C21110 + C21111) + C21112) * C19834) *
                       C51018 * C51195 +
                   (((C19835 * C404 + C50861 * C419) * C50007 +
                     (C19835 * C423 + C50861 * C434) * C51139 -
                     (C19835 * C405 + C50861 * C420) * C50000 -
                     (C19835 * C424 + C50861 * C435) * C50884) *
                        C19831 +
                    (C20839 * C50007 + C20840 * C51139 -
                     (C19835 * C1097 + C50861 * C1105) * C50000 -
                     (C19835 * C1101 + C50861 * C1109) * C50884) *
                        C19832 +
                    (C20841 * C50007 + C20842 * C51139 -
                     (C19835 * C2566 + C50861 * C2569) * C50000 -
                     (C19835 * C2571 + C50861 * C2575) * C50884) *
                        C19833 +
                    (C20843 * C50007 + C20844 * C51139 -
                     (C19835 * C3565 + C50861 * C3569) * C50000 -
                     (C19835 * C3567 + C50861 * C3571) * C50884) *
                        C19834) *
                       C51018 * C1974) *
                  C50908) /
                     (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C17049 +
           ((C17249 + C17250 + C17251) * C906 +
            (C17252 + C17253 + C17254) * C901 -
            (C17255 + C17256 + C17257) * C907 -
            (C17258 + C17259 + C17260) * C902 +
            (C17577 + C17578 + C17579) * C908 +
            (C17580 + C17581 + C17582) * C903) *
               C51056) *
              C51018 * C1558 +
          (((C17051 * C399 + C17046 * C409 + C17052 * C400 + C17047 * C410 +
             C17053 * C401 + C17048 * C411) *
                C907 -
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C901 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C906) +
            (C17051 * C415 + C17046 * C431 + C17052 * C414 + C17047 * C430 +
             C17053 * C413 + C17048 * C429) *
                C902 -
            (C17053 * C402 + C17048 * C412 + C17052 * C401 + C17047 * C411 +
             C17051 * C400 + C17046 * C410) *
                C908 -
            (C17053 * C418 + C17048 * C433 + C17052 * C413 + C17047 * C429 +
             C17051 * C414 + C17046 * C430) *
                C903) *
               C17049 +
           ((C17947 + C17948 + C17949) * C907 -
            ((C17950 + C17951 + C17952) * C901 +
             (C17953 + C17954 + C17955) * C906) +
            (C17956 + C17957 + C17958) * C902 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C908 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C903) *
               C51056) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C17049 +
            ((C17249 + C17250 + C17251) * C980 +
             (C17252 + C17253 + C17254) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51056 +
            ((C17053 * C414 + C17048 * C430 + C17052 * C415 + C17047 * C431 +
              C17051 * C416 + C17046 * C432) *
                 C50879 +
             (C17053 * C400 + C17048 * C410 + C17052 * C399 + C17047 * C409 +
              C17051 * C403 + C17046 * C417) *
                 C980) *
                C17049) *
               C51018 * C50984) *
              C253 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C17049 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51056) *
               C51018 * C50984 -
           (((C17264 + C17265 + C17266) * C50879 +
             (C17267 + C17268 + C17269) * C980) *
                C51056 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C17049) *
               C51018 * C1558) *
              C254 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C17049 +
            ((C18215 + C18216 + C18217) * C980 +
             (C18218 + C18219 + C18220) * C50879) *
                C51056) *
               C51018 * C1558 -
           (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
              C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                 C50879 +
             (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
              C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                 C980) *
                C51056 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C17049) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C19831 +
           (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C19832 +
           (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C19833 +
           (C20623 + C20624 - C20625 - C20626 + C20627 + C20628) * C19834) *
              C51018 * C1558 +
          (((C19835 * C399 + C50861 * C409) * C907 -
            ((C19835 * C416 + C50861 * C432) * C901 +
             (C19835 * C403 + C50861 * C417) * C906) +
            (C19835 * C415 + C50861 * C431) * C902 -
            (C19835 * C400 + C50861 * C410) * C908 -
            (C19835 * C414 + C50861 * C430) * C903) *
               C19831 +
           (C20489 * C907 - (C20490 * C901 + C20491 * C906) + C20492 * C902 -
            (C19835 * C785 + C50861 * C790) * C908 -
            (C19835 * C794 + C50861 * C800) * C903) *
               C19832 +
           (C20493 * C907 - (C20494 * C901 + C20495 * C906) + C20496 * C902 -
            (C19835 * C1445 + C50861 * C1453) * C908 -
            (C19835 * C1449 + C50861 * C1457) * C903) *
               C19833 +
           (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
            (C19835 * C3089 + C50861 * C3094) * C908 -
            (C19835 * C3095 + C50861 * C3098) * C903) *
               C19834) *
              C51018 * C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C19831 +
            (C20699 + C20700) * C19832 + C20711 * C19833 + C20712 * C19834) *
               C51018 * C1558 -
           (C21215 * C19834 + C21216 * C19833 + (C20825 + C20826) * C19832 +
            ((C19835 * C416 + C50861 * C432) * C50879 +
             (C19835 * C403 + C50861 * C417) * C980) *
                C19831) *
               C51018 * C50984) *
              C253 +
          (((C20826 + C20825) * C19831 + (C20824 + C20823) * C19832 +
            (C20822 + C20821) * C19833 + (C21223 + C21224) * C19834) *
               C51018 * C50984 -
           (C20713 * C19834 + C20714 * C19833 + (C20702 + C20701) * C19832 +
            (C20700 + C20699) * C19831) *
               C51018 * C1558) *
              C254 +
          ((C20711 * C19831 + C20712 * C19832 + (C20706 + C20705) * C19833 +
            (C20717 + C20718) * C19834) *
               C51018 * C1558 -
           (((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C19834 +
            (C21224 + C21223) * C19833 + C21215 * C19832 + C21216 * C19831) *
               C51018 * C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C542 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51190 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C543 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C51191 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C544 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C539) *
                C51160 +
            ((C25020 + C25021) * C542 + (C25022 + C25023) * C51190 -
             (C25024 + C25025) * C543 - (C25026 + C25027) * C51191 +
             (C25363 + C25364) * C544 + (C25365 + C25366) * C539) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C542 + (C28139 + C28140) * C51190 -
             (C28141 + C28142) * C543 - (C28143 + C28144) * C51191 +
             (C28565 + C28566) * C544 + (C28567 + C28568) * C539) *
                C51160 +
            (C28827 * C542 + C28828 * C51190 - C28829 * C543 - C28830 * C51191 +
             (C28359 + C28360) * C544 + (C28361 + C28362) * C539) *
                C51056) *
               C51082) *
              C50920 * C51147 +
          ((((C25025 + C25024) * C543 -
             ((C25023 + C25022) * C51190 + (C25021 + C25020) * C542) +
             (C25027 + C25026) * C51191 - (C25364 + C25363) * C544 -
             (C25366 + C25365) * C539) *
                C51160 +
            ((C25033 + C25032) * C543 -
             ((C25031 + C25030) * C51190 + (C25029 + C25028) * C542) +
             (C25035 + C25034) * C51191 - (C25368 + C25367) * C544 -
             (C25370 + C25369) * C539) *
                C51056) *
               C33992 +
           ((C28831 * C543 - (C28832 * C51190 + C28833 * C542) +
             C28834 * C51191 - (C28360 + C28359) * C544 -
             (C28362 + C28361) * C539) *
                C51160 +
            ((C25751 + C25752) * C543 - (C26686 * C51190 + C26687 * C542) +
             (C25757 + C25758) * C51191 -
             (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
              C51132 * C1453) *
                 C544 -
             (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
              C51132 * C1457) *
                 C539) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C256 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C251 -
              (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                  C257 -
              (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                  C50884) *
                 C51160 +
             ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
              (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                 C51056) *
                C33992 +
            (((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
              (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                 C51160 +
             C28847 * C51056) *
                C51082) *
               C51148 +
           ((((C28142 + C28141) * C257 -
              ((C28140 + C28139) * C251 + (C28138 + C28137) * C256) +
              (C28144 + C28143) * C50884) *
                 C51160 +
             C28848 * C51056) *
                C33992 +
            (((C28145 + C28146) * C257 -
              ((C28147 + C28148) * C251 + (C28149 + C28150) * C256) +
              (C28151 + C28152) * C50884) *
                 C51160 +
             ((C28153 + C28154) * C257 - (C29369 * C251 + C29370 * C256) +
              (C28155 + C28156) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C51147 +
          (((((C25025 + C25024) * C257 -
              ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
              (C25027 + C25026) * C50884) *
                 C51160 +
             ((C25033 + C25032) * C257 -
              ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
              (C25035 + C25034) * C50884) *
                 C51056) *
                C33992 +
            (C28848 * C51160 +
             ((C25751 + C25752) * C257 - (C26686 * C251 + C26687 * C256) +
              (C25757 + C25758) * C50884) *
                 C51056) *
                C51082) *
               C51148 +
           ((C28847 * C51160 +
             (C30055 * C256 + C30056 * C251 - (C25752 + C25751) * C257 -
              (C25758 + C25757) * C50884) *
                 C51056) *
                C33992 +
            ((C29373 * C256 + C29374 * C251 - (C28154 + C28153) * C257 -
              (C28156 + C28155) * C50884) *
                 C51160 +
             ((C26189 + C26190) * C256 + (C26191 + C26192) * C251 -
              (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
               C51132 * C2569) *
                  C257 -
              (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
               C51132 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51160 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
             (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                C51160 +
            C28847 * C51056) *
               C51082) *
              C50920 * C253 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C50884) *
                C51160 +
            ((C25033 + C25032) * C257 -
             ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
             (C25035 + C25034) * C50884) *
                C51056) *
               C33992 +
           (C28848 * C51160 +
            ((C25751 + C25752) * C257 - (C26686 * C251 + C26687 * C256) +
             (C25757 + C25758) * C50884) *
                C51056) *
               C51082) *
              C50920 * C254 +
          ((C25054 * C51160 +
            ((C25041 + C25040) * C256 + (C25039 + C25038) * C251 -
             (C25037 + C25036) * C257 - (C25043 + C25042) * C50884) *
                C51056) *
               C33992 +
           ((C30055 * C256 + C30056 * C251 - (C25752 + C25751) * C257 -
             (C25758 + C25757) * C50884) *
                C51160 +
            ((C26698 + C26699) * C256 + (C26700 + C26701) * C251 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C257 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C121 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C109 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C122 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C110 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C123 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C111 -
            (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
                C124 -
            (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
                C112) *
               C51160 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25363 + C25364) * C123 + (C25365 + C25366) * C111 -
            (C49954 * C261 + C50866 * C271 + C49961 * C260 + C51132 * C270) *
                C124 -
            (C49954 * C277 + C50866 * C292 + C49961 * C272 + C51132 * C288) *
                C112) *
               C51056) *
              C33992 +
          (((C28137 + C28138) * C121 + (C28139 + C28140) * C109 -
            (C28141 + C28142) * C122 - (C28143 + C28144) * C110 +
            (C28565 + C28566) * C123 + (C28567 + C28568) * C111 -
            (C49954 * C402 + C50866 * C412 + C49961 * C401 + C51132 * C411) *
                C124 -
            (C49954 * C418 + C50866 * C433 + C49961 * C413 + C51132 * C429) *
                C112) *
               C51160 +
           (C28827 * C121 + C28828 * C109 - C28829 * C122 - C28830 * C110 +
            (C28359 + C28360) * C123 + (C28361 + C28362) * C111 -
            (C49954 * C787 + C50866 * C796 + C49961 * C786 + C51132 * C791) *
                C124 -
            (C49954 * C797 + C50866 * C802 + C49961 * C795 + C51132 * C801) *
                C112) *
               C51056) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51160 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
             (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                C51160 +
            C28847 * C51056) *
               C51082) *
              C396 +
          ((((C28142 + C28141) * C257 -
             ((C28140 + C28139) * C251 + (C28138 + C28137) * C256) +
             (C28144 + C28143) * C50884) *
                C51160 +
            C28848 * C51056) *
               C33992 +
           (((C28145 + C28146) * C257 -
             ((C28147 + C28148) * C251 + (C28149 + C28150) * C256) +
             (C28151 + C28152) * C50884) *
                C51160 +
            ((C28153 + C28154) * C257 - (C29369 * C251 + C29370 * C256) +
             (C28155 + C28156) * C50884) *
                C51056) *
               C51082) *
              C397 +
          ((((C28150 + C28149) * C256 + (C28148 + C28147) * C251 -
             (C28146 + C28145) * C257 - (C28152 + C28151) * C50884) *
                C51160 +
            (C29373 * C256 + C29374 * C251 - (C28154 + C28153) * C257 -
             (C28156 + C28155) * C50884) *
                C51056) *
               C33992 +
           (((C30586 + C30587) * C256 + (C30588 + C30589) * C251 -
             (C49954 * C1729 + C50866 * C1737 + C49961 * C1730 +
              C51132 * C1738) *
                 C257 -
             (C49954 * C1733 + C50866 * C1741 + C49961 * C1734 +
              C51132 * C1742) *
                 C50884) *
                C51160 +
            ((C29389 + C29390) * C256 + (C29391 + C29392) * C251 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C257 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51056) *
               C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C542 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51190 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C543 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C51191 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C544 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C539) *
                C51160 +
            ((C25020 + C25021) * C542 + (C25022 + C25023) * C51190 -
             (C25024 + C25025) * C543 - (C25026 + C25027) * C51191 +
             (C25363 + C25364) * C544 + (C25365 + C25366) * C539) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C542 + (C28139 + C28140) * C51190 -
             (C28141 + C28142) * C543 - (C28143 + C28144) * C51191 +
             (C28565 + C28566) * C544 + (C28567 + C28568) * C539) *
                C51160 +
            (C28827 * C542 + C28828 * C51190 - C28829 * C543 - C28830 * C51191 +
             (C28359 + C28360) * C544 + (C28361 + C28362) * C539) *
                C51056) *
               C51082) *
              C51148 +
          ((((C28142 + C28141) * C543 -
             ((C28140 + C28139) * C51190 + (C28138 + C28137) * C542) +
             (C28144 + C28143) * C51191 - (C28566 + C28565) * C544 -
             (C28568 + C28567) * C539) *
                C51160 +
            (C28831 * C543 - (C28832 * C51190 + C28833 * C542) +
             C28834 * C51191 - (C28360 + C28359) * C544 -
             (C28362 + C28361) * C539) *
                C51056) *
               C33992 +
           (((C28145 + C28146) * C543 -
             ((C28147 + C28148) * C51190 + (C28149 + C28150) * C542) +
             (C28151 + C28152) * C51191 -
             (C49954 * C407 + C50866 * C422 + C49961 * C406 + C51132 * C421) *
                 C544 -
             (C49954 * C426 + C50866 * C437 + C49961 * C425 + C51132 * C436) *
                 C539) *
                C51160 +
            ((C28153 + C28154) * C543 - (C29369 * C51190 + C29370 * C542) +
             (C28155 + C28156) * C51191 -
             (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
              C51132 * C1104) *
                 C544 -
             (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
              C51132 * C1108) *
                 C539) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C121 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C109 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C122 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C110 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C123 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C111 -
            (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
                C124 -
            (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
                C112) *
               C51160 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25363 + C25364) * C123 + (C25365 + C25366) * C111 -
            (C49954 * C261 + C50866 * C271 + C49961 * C260 + C51132 * C270) *
                C124 -
            (C49954 * C277 + C50866 * C292 + C49961 * C272 + C51132 * C288) *
                C112) *
               C51056) *
              C33992 +
          (((C28137 + C28138) * C121 + (C28139 + C28140) * C109 -
            (C28141 + C28142) * C122 - (C28143 + C28144) * C110 +
            (C28565 + C28566) * C123 + (C28567 + C28568) * C111 -
            (C49954 * C402 + C50866 * C412 + C49961 * C401 + C51132 * C411) *
                C124 -
            (C49954 * C418 + C50866 * C433 + C49961 * C413 + C51132 * C429) *
                C112) *
               C51160 +
           (C28827 * C121 + C28828 * C109 - C28829 * C122 - C28830 * C110 +
            (C28359 + C28360) * C123 + (C28361 + C28362) * C111 -
            (C49954 * C787 + C50866 * C796 + C49961 * C786 + C51132 * C791) *
                C124 -
            (C49954 * C797 + C50866 * C802 + C49961 * C795 + C51132 * C801) *
                C112) *
               C51056) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51160 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C50884) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
             (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                C51160 +
            C28847 * C51056) *
               C51082) *
              C50920 * C253 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C50884) *
                C51160 +
            ((C25033 + C25032) * C257 -
             ((C25031 + C25030) * C251 + (C25029 + C25028) * C256) +
             (C25035 + C25034) * C50884) *
                C51056) *
               C33992 +
           (C28848 * C51160 +
            ((C25751 + C25752) * C257 - (C26686 * C251 + C26687 * C256) +
             (C25757 + C25758) * C50884) *
                C51056) *
               C51082) *
              C50920 * C254 +
          ((C25054 * C51160 +
            ((C25041 + C25040) * C256 + (C25039 + C25038) * C251 -
             (C25037 + C25036) * C257 - (C25043 + C25042) * C50884) *
                C51056) *
               C33992 +
           ((C30055 * C256 + C30056 * C251 - (C25752 + C25751) * C257 -
             (C25758 + C25757) * C50884) *
                C51160 +
            ((C26698 + C26699) * C256 + (C26700 + C26701) * C251 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C257 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51160 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
             (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                C51160 +
            C29859 * C51056) *
               C51082) *
              C50920 * C51192 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50884) *
                C51160 +
            ((C25033 + C25032) * C50000 -
             ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
             (C25035 + C25034) * C50884) *
                C51056) *
               C33992 +
           (C29860 * C51160 +
            ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
             (C25757 + C25758) * C50884) *
                C51056) *
               C51082) *
              C50920 * C51193 +
          ((C26345 * C51160 +
            ((C25041 + C25040) * C50007 + (C25039 + C25038) * C51139 -
             (C25037 + C25036) * C50000 - (C25043 + C25042) * C50884) *
                C51056) *
               C33992 +
           ((C30055 * C50007 + C30056 * C51139 - (C25752 + C25751) * C50000 -
             (C25758 + C25757) * C50884) *
                C51160 +
            ((C26698 + C26699) * C50007 + (C26700 + C26701) * C51139 -
             (C49954 * C3089 + C50866 * C3094 + C49961 * C3088 +
              C51132 * C3091) *
                 C50000 -
             (C49954 * C3095 + C50866 * C3098 + C49961 * C3093 +
              C51132 * C3097) *
                 C50884) *
                C51056) *
               C51082) *
              C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C33992 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
             C29383 * C51056) *
                C51082) *
               C51148 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51160) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51160) *
                C33992) *
               C50984) *
              C51192 +
          (((C29383 * C51160 + C30059 * C51056) * C33992 +
            (C29394 * C51160 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C26702 * C51056 + C29386 * C51160) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
                C33992) *
               C51148) *
              C51193 +
          (((C26015 * C51160 +
             ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
                C33992 +
            (C30059 * C51160 +
             ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
                C51082) *
               C51148 -
           ((((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
               C51132 * C3572) *
                  C50879 +
              (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
               C51132 * C3570) *
                  C980) *
                 C51056 +
             ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51160) *
                C51082 +
            (((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51056 +
             C26702 * C51160) *
                C33992) *
               C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51160 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
               C33992 +
           (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
            C29383 * C51056) *
               C51082) *
              C50920 * C976 -
          ((C26702 * C51056 + C29386 * C51160) * C51082 +
           (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
               C33992) *
              C50920 * C977 +
          ((C26015 * C51160 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
               C33992 +
           (C30059 * C51160 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
               C51082) *
              C50920 * C978 -
          ((((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C51056 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51160) *
               C51082 +
           (((C26021 + C26020) * C50879 + (C26019 + C26018) * C980) * C51056 +
            C26022 * C51160) *
               C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C51160 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C50920 * C904 +
          ((((C25025 + C25024) * C907 -
             ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
             (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
             (C25366 + C25365) * C903) *
                C51160 +
            ((C25033 + C25032) * C907 -
             ((C25031 + C25030) * C901 + (C25029 + C25028) * C906) +
             (C25035 + C25034) * C902 - (C25368 + C25367) * C908 -
             (C25370 + C25369) * C903) *
                C51056) *
               C33992 +
           ((C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C51160 +
            ((C25751 + C25752) * C907 - (C26686 * C901 + C26687 * C906) +
             (C25757 + C25758) * C902 -
             (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
              C51132 * C1453) *
                 C908 -
             (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
              C51132 * C1457) *
                 C903) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C33992 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
             C29383 * C51056) *
                C51082) *
               C396 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51160) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51160) *
                C33992) *
               C397 +
           ((((C28150 + C28149) * C980 + (C28148 + C28147) * C50879) * C51160 +
             C29394 * C51056) *
                C33992 +
            (((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C51160 +
             ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51056) *
                C51082) *
               C398) *
              C904 +
          (((C29383 * C51160 + C30059 * C51056) * C33992 +
            (C29394 * C51160 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C397 -
           ((C26702 * C51056 + C29386 * C51160) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
                C33992) *
               C396 -
           ((((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
               C51132 * C4518) *
                  C50879 +
              (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
               C51132 * C4512) *
                  C980) *
                 C51056 +
             ((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C51160) *
                C51082 +
            (((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51056 +
             C29393 * C51160) *
                C33992) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C50007 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C51139 -
              (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                  C50000 -
              (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                  C50884) *
                 C51160 +
             ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
              (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                 C51056) *
                C33992 +
            (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
              (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                 C51160 +
             C29859 * C51056) *
                C51082) *
               C51148 +
           ((((C28142 + C28141) * C50000 -
              ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
              (C28144 + C28143) * C50884) *
                 C51160 +
             C29860 * C51056) *
                C33992 +
            (((C28145 + C28146) * C50000 -
              ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
              (C28151 + C28152) * C50884) *
                 C51160 +
             ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
              (C28155 + C28156) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C904 +
          (((((C25025 + C25024) * C50000 -
              ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
              (C25027 + C25026) * C50884) *
                 C51160 +
             ((C25033 + C25032) * C50000 -
              ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
              (C25035 + C25034) * C50884) *
                 C51056) *
                C33992 +
            (C29860 * C51160 +
             ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
              (C25757 + C25758) * C50884) *
                 C51056) *
                C51082) *
               C51148 +
           ((C29859 * C51160 +
             (C30055 * C50007 + C30056 * C51139 - (C25752 + C25751) * C50000 -
              (C25758 + C25757) * C50884) *
                 C51056) *
                C33992 +
            ((C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
              (C28156 + C28155) * C50884) *
                 C51160 +
             ((C26189 + C26190) * C50007 + (C26191 + C26192) * C51139 -
              (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
               C51132 * C2569) *
                  C50000 -
              (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
               C51132 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C51160 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C50920 * C904 +
          ((((C25025 + C25024) * C907 -
             ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
             (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
             (C25366 + C25365) * C903) *
                C51160 +
            ((C25033 + C25032) * C907 -
             ((C25031 + C25030) * C901 + (C25029 + C25028) * C906) +
             (C25035 + C25034) * C902 - (C25368 + C25367) * C908 -
             (C25370 + C25369) * C903) *
                C51056) *
               C33992 +
           ((C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C51160 +
            ((C25751 + C25752) * C907 - (C26686 * C901 + C26687 * C906) +
             (C25757 + C25758) * C902 -
             (C49954 * C1444 + C50866 * C1452 + C49961 * C1445 +
              C51132 * C1453) *
                 C908 -
             (C49954 * C1448 + C50866 * C1456 + C49961 * C1449 +
              C51132 * C1457) *
                 C903) *
                C51056) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51160 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
               C33992 +
           (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
            C29383 * C51056) *
               C51082) *
              C50920 * C976 -
          ((C26702 * C51056 + C29386 * C51160) * C51082 +
           (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
               C33992) *
              C50920 * C977 +
          ((C26015 * C51160 +
            ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
               C33992 +
           (C30059 * C51160 +
            ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
               C51082) *
              C50920 * C978 -
          ((((C49954 * C4092 + C50866 * C4096 + C49961 * C4093 +
              C51132 * C4097) *
                 C50879 +
             (C49954 * C4090 + C50866 * C4094 + C49961 * C4091 +
              C51132 * C4095) *
                 C980) *
                C51056 +
            ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51160) *
               C51082 +
           (((C26021 + C26020) * C50879 + (C26019 + C26018) * C980) * C51056 +
            C26022 * C51160) *
               C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C50007 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C51139 -
              (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                  C50000 -
              (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                  C50884) *
                 C51160 +
             ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
              (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                 C51056) *
                C33992 +
            (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
              (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                 C51160 +
             C29859 * C51056) *
                C51082) *
               C1558 +
           ((((C28142 + C28141) * C50000 -
              ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
              (C28144 + C28143) * C50884) *
                 C51160 +
             C29860 * C51056) *
                C33992 +
            (((C28145 + C28146) * C50000 -
              ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
              (C28151 + C28152) * C50884) *
                 C51160 +
             ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
              (C28155 + C28156) * C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C51147 +
          (((((C25025 + C25024) * C50000 -
              ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
              (C25027 + C25026) * C50884) *
                 C51160 +
             ((C25033 + C25032) * C50000 -
              ((C25031 + C25030) * C51139 + (C25029 + C25028) * C50007) +
              (C25035 + C25034) * C50884) *
                 C51056) *
                C33992 +
            (C29860 * C51160 +
             ((C25751 + C25752) * C50000 - (C26686 * C51139 + C26687 * C50007) +
              (C25757 + C25758) * C50884) *
                 C51056) *
                C51082) *
               C1558 +
           ((C29859 * C51160 +
             (C30055 * C50007 + C30056 * C51139 - (C25752 + C25751) * C50000 -
              (C25758 + C25757) * C50884) *
                 C51056) *
                C33992 +
            ((C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
              (C28156 + C28155) * C50884) *
                 C51160 +
             ((C26189 + C26190) * C50007 + (C26191 + C26192) * C51139 -
              (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
               C51132 * C2569) *
                  C50000 -
              (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
               C51132 * C2575) *
                  C50884) *
                 C51056) *
                C51082) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C33992 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
             C29383 * C51056) *
                C51082) *
               C51194 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51160) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51160) *
                C33992) *
               C51195 +
           ((((C28150 + C28149) * C980 + (C28148 + C28147) * C50879) * C51160 +
             C29394 * C51056) *
                C33992 +
            (((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C51160 +
             ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51056) *
                C51082) *
               C1974) *
              C51147 +
          (((C29383 * C51160 + C30059 * C51056) * C33992 +
            (C29394 * C51160 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C51195 -
           ((C26702 * C51056 + C29386 * C51160) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
                C33992) *
               C51194 -
           ((((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
               C51132 * C4518) *
                  C50879 +
              (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
               C51132 * C4512) *
                  C980) *
                 C51056 +
             ((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C51160) *
                C51082 +
            (((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51056 +
             C29393 * C51160) *
                C33992) *
               C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C33992 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
             C29383 * C51056) *
                C51082) *
               C1558 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51160) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51160) *
                C33992) *
               C50984) *
              C253 +
          (((C29383 * C51160 + C30059 * C51056) * C33992 +
            (C29394 * C51160 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C26702 * C51056 + C29386 * C51160) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
                C33992) *
               C1558) *
              C254 +
          (((C26015 * C51160 +
             ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
                C33992 +
            (C30059 * C51160 +
             ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
                C51082) *
               C1558 -
           ((((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
               C51132 * C3572) *
                  C50879 +
              (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
               C51132 * C3570) *
                  C980) *
                 C51056 +
             ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51160) *
                C51082 +
            (((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51056 +
             C26702 * C51160) *
                C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C51160 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C1558 +
          ((((C28142 + C28141) * C907 -
             ((C28140 + C28139) * C901 + (C28138 + C28137) * C906) +
             (C28144 + C28143) * C902 - (C28566 + C28565) * C908 -
             (C28568 + C28567) * C903) *
                C51160 +
            (C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C51056) *
               C33992 +
           (((C28145 + C28146) * C907 -
             ((C28147 + C28148) * C901 + (C28149 + C28150) * C906) +
             (C28151 + C28152) * C902 -
             (C49954 * C407 + C50866 * C422 + C49961 * C406 + C51132 * C421) *
                 C908 -
             (C49954 * C426 + C50866 * C437 + C49961 * C425 + C51132 * C436) *
                 C903) *
                C51160 +
            ((C28153 + C28154) * C907 - (C29369 * C901 + C29370 * C906) +
             (C28155 + C28156) * C902 -
             (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
              C51132 * C1104) *
                 C908 -
             (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
              C51132 * C1108) *
                 C903) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51160 +
            ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
               C33992 +
           (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
            C29383 * C51056) *
               C51082) *
              C1724 -
          ((C29393 * C51056 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51160) *
               C51082 +
           (C29386 * C51056 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51160) *
               C33992) *
              C1725 +
          ((((C28150 + C28149) * C980 + (C28148 + C28147) * C50879) * C51160 +
            C29394 * C51056) *
               C33992 +
           (((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C51160 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51056) *
               C51082) *
              C1726 -
          ((((C49954 * C6414 + C50866 * C6418 + C49961 * C6415 +
              C51132 * C6419) *
                 C50879 +
             (C49954 * C6412 + C50866 * C6416 + C49961 * C6413 +
              C51132 * C6417) *
                 C980) *
                C51056 +
            ((C49954 * C5406 + C50866 * C5410 + C49961 * C5405 +
              C51132 * C5409) *
                 C50879 +
             (C49954 * C5401 + C50866 * C5404 + C49961 * C5400 +
              C51132 * C5403) *
                 C980) *
                C51160) *
               C51082 +
           (((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C51056 +
            ((C30589 + C30588) * C50879 + (C30587 + C30586) * C980) * C51160) *
               C33992) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51160 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51139 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50884) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
             (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                C51160 +
            C29859 * C51056) *
               C51082) *
              C51194 +
          ((((C28142 + C28141) * C50000 -
             ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
             (C28144 + C28143) * C50884) *
                C51160 +
            C29860 * C51056) *
               C33992 +
           (((C28145 + C28146) * C50000 -
             ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
             (C28151 + C28152) * C50884) *
                C51160 +
            ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
             (C28155 + C28156) * C50884) *
                C51056) *
               C51082) *
              C51195 +
          ((((C28150 + C28149) * C50007 + (C28148 + C28147) * C51139 -
             (C28146 + C28145) * C50000 - (C28152 + C28151) * C50884) *
                C51160 +
            (C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
             (C28156 + C28155) * C50884) *
                C51056) *
               C33992 +
           (((C30586 + C30587) * C50007 + (C30588 + C30589) * C51139 -
             (C49954 * C1729 + C50866 * C1737 + C49961 * C1730 +
              C51132 * C1738) *
                 C50000 -
             (C49954 * C1733 + C50866 * C1741 + C49961 * C1734 +
              C51132 * C1742) *
                 C50884) *
                C51160 +
            ((C29389 + C29390) * C50007 + (C29391 + C29392) * C51139 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C50000 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51056) *
               C51082) *
              C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C906 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C901 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C907 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C902 +
             (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                 C908 +
             (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                 C903) *
                C51160 +
            ((C25020 + C25021) * C906 + (C25022 + C25023) * C901 -
             (C25024 + C25025) * C907 - (C25026 + C25027) * C902 +
             (C25363 + C25364) * C908 + (C25365 + C25366) * C903) *
                C51056) *
               C33992 +
           (((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
             (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
             (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
                C51160 +
            (C28827 * C906 + C28828 * C901 - C28829 * C907 - C28830 * C902 +
             (C28359 + C28360) * C908 + (C28361 + C28362) * C903) *
                C51056) *
               C51082) *
              C1558 +
          ((((C28142 + C28141) * C907 -
             ((C28140 + C28139) * C901 + (C28138 + C28137) * C906) +
             (C28144 + C28143) * C902 - (C28566 + C28565) * C908 -
             (C28568 + C28567) * C903) *
                C51160 +
            (C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
             (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
                C51056) *
               C33992 +
           (((C28145 + C28146) * C907 -
             ((C28147 + C28148) * C901 + (C28149 + C28150) * C906) +
             (C28151 + C28152) * C902 -
             (C49954 * C407 + C50866 * C422 + C49961 * C406 + C51132 * C421) *
                 C908 -
             (C49954 * C426 + C50866 * C437 + C49961 * C425 + C51132 * C436) *
                 C903) *
                C51160 +
            ((C28153 + C28154) * C907 - (C29369 * C901 + C29370 * C906) +
             (C28155 + C28156) * C902 -
             (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
              C51132 * C1104) *
                 C908 -
             (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
              C51132 * C1108) *
                 C903) *
                C51056) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                  C980 +
              (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                  C50879) *
                 C51160 +
             ((C25020 + C25021) * C980 + (C25022 + C25023) * C50879) * C51056) *
                C33992 +
            (((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51160 +
             C29383 * C51056) *
                C51082) *
               C1558 -
           ((C29393 * C51056 +
             ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51160) *
                C51082 +
            (C29386 * C51056 +
             ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51160) *
                C33992) *
               C50984) *
              C253 +
          (((C29383 * C51160 + C30059 * C51056) * C33992 +
            (C29394 * C51160 +
             ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51056) *
                C51082) *
               C50984 -
           ((C26702 * C51056 + C29386 * C51160) * C51082 +
            (((C25031 + C25030) * C50879 + (C25029 + C25028) * C980) * C51056 +
             ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51160) *
                C33992) *
               C1558) *
              C254 +
          (((C26015 * C51160 +
             ((C25041 + C25040) * C980 + (C25039 + C25038) * C50879) * C51056) *
                C33992 +
            (C30059 * C51160 +
             ((C26698 + C26699) * C980 + (C26700 + C26701) * C50879) * C51056) *
                C51082) *
               C1558 -
           ((((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
               C51132 * C3572) *
                  C50879 +
              (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
               C51132 * C3570) *
                  C980) *
                 C51056 +
             ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51160) *
                C51082 +
            (((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51056 +
             C26702 * C51160) *
                C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C51160 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C51056) *
               C51198 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C51160 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C51056) *
               C51199 +
           ((C22624 + C22625 - C22626 - C22627 + C22638 + C22639) * C51160 +
            (C22454 + C22455 - C22456 - C22457 + C22468 + C22469) * C51056) *
               C44682) *
              C50920 * C51147 +
          (((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C51160 +
            (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C51056) *
               C51198 +
           ((C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C51160 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C51056) *
               C51199 +
           ((C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C51160 +
            (C22075 * C543 - (C20842 * C51190 + C20841 * C542) +
             C22076 * C51191 - (C19835 * C2567 + C50861 * C2572) * C544 -
             (C19835 * C2573 + C50861 * C2576) * C539) *
                C51056) *
               C44682) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C256 +
              (C19835 * C136 + C50861 * C146) * C251 -
              (C19835 * C126 + C50861 * C133) * C257 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C51160 +
             (C19983 + C19984 - C19985 - C19986) * C51056) *
                C51198 +
            ((C22277 + C22278 - C22279 - C22280) * C51160 + C22840 * C51056) *
                C51199 +
            C47673 * C44682) *
               C51148 +
           (((C22279 - (C22278 + C22277) + C22280) * C51160 + C22841 * C51056) *
                C51198 +
            ((C22283 - (C22282 + C22281) + C22284) * C51160 + C22842 * C51056) *
                C51199 +
            ((C22286 - (C22287 + C22288) + C22289) * C51160 +
             (C22290 - (C22291 + C22292) + C22293) * C51056) *
                C44682) *
               C50984) *
              C51147 +
          ((((C19985 - (C19984 + C19983) + C19986) * C51160 +
             (C19989 - (C19988 + C19987) + C19990) * C51056) *
                C51198 +
            (C22841 * C51160 + C32129 * C51056) * C51199 +
            (C22842 * C51160 + (C22079 - (C22069 + C22070) + C22080) * C51056) *
                C44682) *
               C51148 +
           ((C22840 * C51160 + C31482 * C51056) * C51198 +
            (C22285 * C51160 + (C22070 + C22069 - C22079 - C22080) * C51056) *
                C51199 +
            ((C22292 + C22291 - C22290 - C22293) * C51160 +
             (C23276 * C256 + C23277 * C251 -
              (C19835 * C4505 + C50861 * C4511) * C257 -
              (C19835 * C4509 + C50861 * C4517) * C50884) *
                 C51056) *
                C44682) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51160 +
            (C19983 + C19984 - C19985 - C19986) * C51056) *
               C51198 +
           ((C22277 + C22278 - C22279 - C22280) * C51160 + C22840 * C51056) *
               C51199 +
           (C22297 * C51160 + C22285 * C51056) * C44682) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C51160 +
            (C19989 - (C19988 + C19987) + C19990) * C51056) *
               C51198 +
           (C22841 * C51160 + C32129 * C51056) * C51199 +
           (C22842 * C51160 + (C22079 - (C22069 + C22070) + C22080) * C51056) *
               C44682) *
              C50920 * C254 +
          ((C20003 * C51160 + C20004 * C51056) * C51198 +
           (C31482 * C51160 + (C20511 + C20510 - C20509 - C20512) * C51056) *
               C51199 +
           ((C22070 + C22069 - C22079 - C22080) * C51160 +
            (C20843 * C256 + C20844 * C251 -
             (C19835 * C3565 + C50861 * C3569) * C257 -
             (C19835 * C3567 + C50861 * C3571) * C50884) *
                C51056) *
               C44682) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C51160 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C51056) *
              C51198 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C51160 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C51056) *
              C51199 +
          ((C22264 * C121 + C22265 * C109 - C22266 * C122 - C22267 * C110 +
            C22634 * C123 + C22635 * C111 -
            (C19835 * C407 + C50861 * C422) * C124 -
            (C19835 * C426 + C50861 * C437) * C112) *
               C51160 +
           (C20839 * C121 + C20840 * C109 - C22073 * C122 - C22074 * C110 +
            C22464 * C123 + C22465 * C111 -
            (C19835 * C1095 + C50861 * C1103) * C124 -
            (C19835 * C1099 + C50861 * C1107) * C112) *
               C51056) *
              C44682) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51160 +
            (C19983 + C19984 - C19985 - C19986) * C51056) *
               C51198 +
           ((C22277 + C22278 - C22279 - C22280) * C51160 + C22840 * C51056) *
               C51199 +
           C47673 * C44682) *
              C396 +
          (((C22279 - (C22278 + C22277) + C22280) * C51160 + C22841 * C51056) *
               C51198 +
           ((C22283 - (C22282 + C22281) + C22284) * C51160 + C22842 * C51056) *
               C51199 +
           ((C22286 - (C22287 + C22288) + C22289) * C51160 +
            (C22290 - (C22291 + C22292) + C22293) * C51056) *
               C44682) *
              C397 +
          (C47673 * C51198 +
           (C39538 * C51160 + (C22292 + C22291 - C22290 - C22293) * C51056) *
               C51199 +
           ((C39532 + C39531 - C39539 - C39540) * C51160 +
            (C23274 * C256 + C23275 * C251 -
             (C19835 * C6412 + C50861 * C6416) * C257 -
             (C19835 * C6414 + C50861 * C6418) * C50884) *
                C51056) *
               C44682) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C51160 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C51056) *
               C51198 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C51160 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C51056) *
               C51199 +
           ((C22624 + C22625 - C22626 - C22627 + C22638 + C22639) * C51160 +
            (C22454 + C22455 - C22456 - C22457 + C22468 + C22469) * C51056) *
               C44682) *
              C51148 +
          (((C22618 - (C22617 + C22616) + C22619 - C22636 - C22637) * C51160 +
            (C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C51056) *
               C51198 +
           ((C22626 - (C22625 + C22624) + C22627 - C22638 - C22639) * C51160 +
            (C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C51056) *
               C51199 +
           ((C39740 - (C39739 + C39738) + C39741 - C39748 - C39749) * C51160 +
            (C22273 * C543 - (C22274 * C51190 + C22275 * C542) +
             C22276 * C51191 - (C19835 * C6006 + C50861 * C6007) * C544 -
             (C19835 * C6008 + C50861 * C6009) * C539) *
                C51056) *
               C44682) *
              C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C51160 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C51056) *
              C51198 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C51160 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C51056) *
              C51199 +
          ((C22264 * C121 + C22265 * C109 - C22266 * C122 - C22267 * C110 +
            C22634 * C123 + C22635 * C111 -
            (C19835 * C407 + C50861 * C422) * C124 -
            (C19835 * C426 + C50861 * C437) * C112) *
               C51160 +
           (C20839 * C121 + C20840 * C109 - C22073 * C122 - C22074 * C110 +
            C22464 * C123 + C22465 * C111 -
            (C19835 * C1095 + C50861 * C1103) * C124 -
            (C19835 * C1099 + C50861 * C1107) * C112) *
               C51056) *
              C44682) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51160 +
            (C19983 + C19984 - C19985 - C19986) * C51056) *
               C51198 +
           ((C22277 + C22278 - C22279 - C22280) * C51160 + C22840 * C51056) *
               C51199 +
           (C22297 * C51160 + C22285 * C51056) * C44682) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C51160 +
            (C19989 - (C19988 + C19987) + C19990) * C51056) *
               C51198 +
           (C22841 * C51160 + C32129 * C51056) * C51199 +
           (C22842 * C51160 + (C22079 - (C22069 + C22070) + C22080) * C51056) *
               C44682) *
              C50920 * C254 +
          ((C20003 * C51160 + C20004 * C51056) * C51198 +
           (C31482 * C51160 + (C20511 + C20510 - C20509 - C20512) * C51056) *
               C51199 +
           ((C22070 + C22069 - C22079 - C22080) * C51160 +
            (C20843 * C256 + C20844 * C251 -
             (C19835 * C3565 + C50861 * C3569) * C257 -
             (C19835 * C3567 + C50861 * C3571) * C50884) *
                C51056) *
               C44682) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51160 +
            (C20949 + C20950 - C20951 - C20952) * C51056) *
               C51198 +
           ((C23635 + C23636 - C23637 - C23638) * C51160 + C23655 * C51056) *
               C51199 +
           (C24572 * C51160 + C23656 * C51056) * C44682) *
              C50920 * C51192 +
          (((C20951 - (C20950 + C20949) + C20952) * C51160 +
            (C20955 - (C20954 + C20953) + C20956) * C51056) *
               C51198 +
           (C23657 * C51160 + C32871 * C51056) * C51199 +
           (C23658 * C51160 + (C23437 - (C23438 + C23439) + C23440) * C51056) *
               C44682) *
              C50920 * C51193 +
          ((C20969 * C51160 + C20970 * C51056) * C51198 +
           (C32674 * C51160 + (C21111 + C21110 - C21109 - C21112) * C51056) *
               C51199 +
           ((C23439 + C23438 - C23437 - C23440) * C51160 +
            (C20843 * C50007 + C20844 * C51139 -
             (C19835 * C3565 + C50861 * C3569) * C50000 -
             (C19835 * C3567 + C50861 * C3571) * C50884) *
                C51056) *
               C44682) *
              C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51160 +
             (C20699 + C20700) * C51056) *
                C51198 +
            ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
            C48554 * C44682) *
               C51148 -
           ((C23272 * C51056 + C24214 * C51160) * C44682 +
            (C23259 * C51056 + (C23253 + C23252) * C51160) * C51199 +
            (C23260 * C51056 + (C23250 + C23249) * C51160) * C51198) *
               C50984) *
              C51192 +
          (((C23251 * C51160 + C23805 * C51056) * C51198 +
            (C23254 * C51160 + C23806 * C51056) * C51199 +
            (C23273 * C51160 + (C23283 + C23284) * C51056) * C44682) *
               C50984 -
           (C48555 * C44682 + (C21216 * C51056 + C23260 * C51160) * C51199 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) *
                C51198) *
               C51148) *
              C51193 +
          (((C20711 * C51160 + C20712 * C51056) * C51198 +
            (C23805 * C51160 + C33018 * C51056) * C51199 +
            (C23806 * C51160 + (C20849 + C20850) * C51056) * C44682) *
               C51148 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C51056 +
             (C23284 + C23283) * C51160) *
                C44682 +
            ((C20850 + C20849) * C51056 + C23269 * C51160) * C51199 +
            (C21215 * C51056 + C21216 * C51160) * C51198) *
               C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51160 +
            (C20699 + C20700) * C51056) *
               C51198 +
           ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
           (C23270 * C51160 + C23254 * C51056) * C44682) *
              C50920 * C976 -
          ((C23269 * C51056 + C23259 * C51160) * C44682 +
           (C21216 * C51056 + C23260 * C51160) * C51199 +
           ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) * C51198) *
              C50920 * C977 +
          ((C20711 * C51160 + C20712 * C51056) * C51198 +
           (C23805 * C51160 + C33018 * C51056) * C51199 +
           (C23806 * C51160 + (C20849 + C20850) * C51056) * C44682) *
              C50920 * C978 -
          ((((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C51056 +
            (C20850 + C20849) * C51160) *
               C44682 +
           ((C21224 + C21223) * C51056 + C21215 * C51160) * C51199 +
           (C20713 * C51056 + C20714 * C51160) * C51198) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51160 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C51198 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51160 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C51199 +
           ((C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51160 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C44682) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C51160 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C51056) *
               C51198 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51160 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C51056) *
               C51199 +
           ((C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51160 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C51056) *
               C44682) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51160 +
             (C20699 + C20700) * C51056) *
                C51198 +
            ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
            C48554 * C44682) *
               C396 -
           ((C23272 * C51056 + C24214 * C51160) * C44682 +
            (C23259 * C51056 + (C23253 + C23252) * C51160) * C51199 +
            (C23260 * C51056 + (C23250 + C23249) * C51160) * C51198) *
               C397 +
           (C48554 * C51198 + (C40143 * C51160 + C23273 * C51056) * C51199 +
            ((C24223 + C24224) * C51160 + (C23281 + C23282) * C51056) *
                C44682) *
               C398) *
              C904 +
          (((C23251 * C51160 + C23805 * C51056) * C51198 +
            (C23254 * C51160 + C23806 * C51056) * C51199 +
            (C23273 * C51160 + (C23283 + C23284) * C51056) * C44682) *
               C397 -
           (C48555 * C44682 + (C21216 * C51056 + C23260 * C51160) * C51199 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) *
                C51198) *
               C396 -
           ((((C19835 * C23245 + C50861 * C23247) * C50879 +
              (C19835 * C23244 + C50861 * C23246) * C980) *
                 C51056 +
             (C23282 + C23281) * C51160) *
                C44682 +
            ((C23284 + C23283) * C51056 + C23272 * C51160) * C51199 +
            C48555 * C51198) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C51160 +
             (C20949 + C20950 - C20951 - C20952) * C51056) *
                C51198 +
            ((C23635 + C23636 - C23637 - C23638) * C51160 + C23655 * C51056) *
                C51199 +
            (C24572 * C51160 + C23656 * C51056) * C44682) *
               C51148 +
           (((C23637 - (C23636 + C23635) + C23638) * C51160 + C23657 * C51056) *
                C51198 +
            ((C23642 - (C23641 + C23640) + C23643) * C51160 + C23658 * C51056) *
                C51199 +
            ((C24567 - (C24568 + C24569) + C24570) * C51160 +
             (C23647 - (C23648 + C23649) + C23650) * C51056) *
                C44682) *
               C50984) *
              C904 +
          ((((C20951 - (C20950 + C20949) + C20952) * C51160 +
             (C20955 - (C20954 + C20953) + C20956) * C51056) *
                C51198 +
            (C23657 * C51160 + C32871 * C51056) * C51199 +
            (C23658 * C51160 + (C23437 - (C23438 + C23439) + C23440) * C51056) *
                C44682) *
               C51148 +
           ((C23655 * C51160 + C32674 * C51056) * C51198 +
            (C23656 * C51160 + (C23439 + C23438 - C23437 - C23440) * C51056) *
                C51199 +
            ((C23649 + C23648 - C23647 - C23650) * C51160 +
             (C23276 * C50007 + C23277 * C51139 -
              (C19835 * C4505 + C50861 * C4511) * C50000 -
              (C19835 * C4509 + C50861 * C4517) * C50884) *
                 C51056) *
                C44682) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51160 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C51198 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51160 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C51199 +
           ((C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51160 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C44682) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C51160 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C51056) *
               C51198 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51160 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C51056) *
               C51199 +
           ((C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51160 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C51056) *
               C44682) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51160 +
            (C20699 + C20700) * C51056) *
               C51198 +
           ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
           (C23270 * C51160 + C23254 * C51056) * C44682) *
              C50920 * C976 -
          ((C23269 * C51056 + C23259 * C51160) * C44682 +
           (C21216 * C51056 + C23260 * C51160) * C51199 +
           ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) * C51198) *
              C50920 * C977 +
          ((C20711 * C51160 + C20712 * C51056) * C51198 +
           (C23805 * C51160 + C33018 * C51056) * C51199 +
           (C23806 * C51160 + (C20849 + C20850) * C51056) * C44682) *
              C50920 * C978 -
          ((((C19835 * C20817 + C50861 * C20819) * C50879 +
             (C19835 * C20816 + C50861 * C20818) * C980) *
                C51056 +
            (C20850 + C20849) * C51160) *
               C44682 +
           ((C21224 + C21223) * C51056 + C21215 * C51160) * C51199 +
           (C20713 * C51056 + C20714 * C51160) * C51198) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C51160 +
             (C20949 + C20950 - C20951 - C20952) * C51056) *
                C51198 +
            ((C23635 + C23636 - C23637 - C23638) * C51160 + C23655 * C51056) *
                C51199 +
            (C24572 * C51160 + C23656 * C51056) * C44682) *
               C1558 +
           (((C23637 - (C23636 + C23635) + C23638) * C51160 + C23657 * C51056) *
                C51198 +
            ((C23642 - (C23641 + C23640) + C23643) * C51160 + C23658 * C51056) *
                C51199 +
            ((C24567 - (C24568 + C24569) + C24570) * C51160 +
             (C23647 - (C23648 + C23649) + C23650) * C51056) *
                C44682) *
               C50984) *
              C51147 +
          ((((C20951 - (C20950 + C20949) + C20952) * C51160 +
             (C20955 - (C20954 + C20953) + C20956) * C51056) *
                C51198 +
            (C23657 * C51160 + C32871 * C51056) * C51199 +
            (C23658 * C51160 + (C23437 - (C23438 + C23439) + C23440) * C51056) *
                C44682) *
               C1558 +
           ((C23655 * C51160 + C32674 * C51056) * C51198 +
            (C23656 * C51160 + (C23439 + C23438 - C23437 - C23440) * C51056) *
                C51199 +
            ((C23649 + C23648 - C23647 - C23650) * C51160 +
             (C23276 * C50007 + C23277 * C51139 -
              (C19835 * C4505 + C50861 * C4511) * C50000 -
              (C19835 * C4509 + C50861 * C4517) * C50884) *
                 C51056) *
                C44682) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51160 +
             (C20699 + C20700) * C51056) *
                C51198 +
            ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
            C48554 * C44682) *
               C51194 -
           (C49434 * C44682 +
            (C23259 * C51056 + (C23253 + C23252) * C51160) * C51199 +
            (C23260 * C51056 + (C23250 + C23249) * C51160) * C51198) *
               C51195 +
           (C48554 * C51198 + (C40143 * C51160 + C23273 * C51056) * C51199 +
            ((C24223 + C24224) * C51160 + (C23281 + C23282) * C51056) *
                C44682) *
               C1974) *
              C51147 +
          (((C23251 * C51160 + C23805 * C51056) * C51198 +
            (C23254 * C51160 + C23806 * C51056) * C51199 +
            (C23273 * C51160 + (C23283 + C23284) * C51056) * C44682) *
               C51195 -
           (C48555 * C44682 + (C21216 * C51056 + C23260 * C51160) * C51199 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) *
                C51198) *
               C51194 -
           ((((C19835 * C23245 + C50861 * C23247) * C50879 +
              (C19835 * C23244 + C50861 * C23246) * C980) *
                 C51056 +
             (C23282 + C23281) * C51160) *
                C44682 +
            ((C23284 + C23283) * C51056 + C23272 * C51160) * C51199 +
            C48555 * C51198) *
               C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51160 +
             (C20699 + C20700) * C51056) *
                C51198 +
            ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
            C48554 * C44682) *
               C1558 -
           ((C23272 * C51056 + C24214 * C51160) * C44682 +
            (C23259 * C51056 + (C23253 + C23252) * C51160) * C51199 +
            (C23260 * C51056 + (C23250 + C23249) * C51160) * C51198) *
               C50984) *
              C253 +
          (((C23251 * C51160 + C23805 * C51056) * C51198 +
            (C23254 * C51160 + C23806 * C51056) * C51199 +
            (C23273 * C51160 + (C23283 + C23284) * C51056) * C44682) *
               C50984 -
           (C48555 * C44682 + (C21216 * C51056 + C23260 * C51160) * C51199 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) *
                C51198) *
               C1558) *
              C254 +
          (((C20711 * C51160 + C20712 * C51056) * C51198 +
            (C23805 * C51160 + C33018 * C51056) * C51199 +
            (C23806 * C51160 + (C20849 + C20850) * C51056) * C44682) *
               C1558 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C51056 +
             (C23284 + C23283) * C51160) *
                C44682 +
            ((C20850 + C20849) * C51056 + C23269 * C51160) * C51199 +
            (C21215 * C51056 + C21216 * C51160) * C51198) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51160 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C51198 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51160 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C51199 +
           ((C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51160 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C44682) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C51160 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51056) *
               C51198 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C51160 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51056) *
               C51199 +
           ((C40573 - (C40572 + C40571) + C40574 - C40575 - C40576) * C51160 +
            (C22273 * C907 - (C22274 * C901 + C22275 * C906) + C22276 * C902 -
             (C19835 * C6006 + C50861 * C6007) * C908 -
             (C19835 * C6008 + C50861 * C6009) * C903) *
                C51056) *
               C44682) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51160 +
            (C20699 + C20700) * C51056) *
               C51198 +
           ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
           C48554 * C44682) *
              C1724 -
          (C49434 * C44682 +
           (C23259 * C51056 + (C23253 + C23252) * C51160) * C51199 +
           (C23260 * C51056 + (C23250 + C23249) * C51160) * C51198) *
              C1725 +
          (C48554 * C51198 + (C40143 * C51160 + C23273 * C51056) * C51199 +
           ((C24223 + C24224) * C51160 + (C23281 + C23282) * C51056) * C44682) *
              C1726 -
          ((((C19835 * C24209 + C50861 * C24211) * C50879 +
             (C19835 * C24208 + C50861 * C24210) * C980) *
                C51056 +
            (C40755 + C40754) * C51160) *
               C44682 +
           ((C23282 + C23281) * C51056 + C40745 * C51160) * C51199 +
           C49434 * C51198) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51160 +
            (C20949 + C20950 - C20951 - C20952) * C51056) *
               C51198 +
           ((C23635 + C23636 - C23637 - C23638) * C51160 + C23655 * C51056) *
               C51199 +
           C49777 * C44682) *
              C51194 +
          (((C23637 - (C23636 + C23635) + C23638) * C51160 + C23657 * C51056) *
               C51198 +
           ((C23642 - (C23641 + C23640) + C23643) * C51160 + C23658 * C51056) *
               C51199 +
           ((C24567 - (C24568 + C24569) + C24570) * C51160 +
            (C23647 - (C23648 + C23649) + C23650) * C51056) *
               C44682) *
              C51195 +
          (C49777 * C51198 +
           (C40991 * C51160 + (C23649 + C23648 - C23647 - C23650) * C51056) *
               C51199 +
           ((C40988 + C40987 - C40986 - C40989) * C51160 +
            (C23274 * C50007 + C23275 * C51139 -
             (C19835 * C6412 + C50861 * C6416) * C50000 -
             (C19835 * C6414 + C50861 * C6418) * C50884) *
                C51056) *
               C44682) *
              C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C51160 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C51056) *
               C51198 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51160 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C51056) *
               C51199 +
           ((C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51160 +
            (C22995 + C22996 - C22997 - C22998 + C22999 + C23000) * C51056) *
               C44682) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C51160 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51056) *
               C51198 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C51160 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51056) *
               C51199 +
           ((C40573 - (C40572 + C40571) + C40574 - C40575 - C40576) * C51160 +
            (C22273 * C907 - (C22274 * C901 + C22275 * C906) + C22276 * C902 -
             (C19835 * C6006 + C50861 * C6007) * C908 -
             (C19835 * C6008 + C50861 * C6009) * C903) *
                C51056) *
               C44682) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C51160 +
             (C20699 + C20700) * C51056) *
                C51198 +
            ((C23249 + C23250) * C51160 + C23251 * C51056) * C51199 +
            C48554 * C44682) *
               C1558 -
           ((C23272 * C51056 + C24214 * C51160) * C44682 +
            (C23259 * C51056 + (C23253 + C23252) * C51160) * C51199 +
            (C23260 * C51056 + (C23250 + C23249) * C51160) * C51198) *
               C50984) *
              C253 +
          (((C23251 * C51160 + C23805 * C51056) * C51198 +
            (C23254 * C51160 + C23806 * C51056) * C51199 +
            (C23273 * C51160 + (C23283 + C23284) * C51056) * C44682) *
               C50984 -
           (C48555 * C44682 + (C21216 * C51056 + C23260 * C51160) * C51199 +
            ((C20702 + C20701) * C51056 + (C20700 + C20699) * C51160) *
                C51198) *
               C1558) *
              C254 +
          (((C20711 * C51160 + C20712 * C51056) * C51198 +
            (C23805 * C51160 + C33018 * C51056) * C51199 +
            (C23806 * C51160 + (C20849 + C20850) * C51056) * C44682) *
               C1558 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C51056 +
             (C23284 + C23283) * C51160) *
                C44682 +
            ((C20850 + C20849) * C51056 + C23269 * C51160) * C51199 +
            (C21215 * C51056 + C21216 * C51160) * C51198) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C2173 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C2174 +
            (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C2175) *
               C33992 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C2173 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C2174 +
            (C31775 + C31776 - C31777 - C31778 + C31785 + C31786) * C2175) *
               C51082) *
              C50920 * C51147 +
          (((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C2173 +
            (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C2174 +
            (C20219 - (C20218 + C20217) + C20220 - C20235 - C20236) * C2175) *
               C33992 +
           ((C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C2173 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C2174 +
            (C20497 * C543 - (C20498 * C51190 + C20499 * C542) +
             C20500 * C51191 - (C19835 * C3089 + C50861 * C3094) * C544 -
             (C19835 * C3095 + C50861 * C3098) * C539) *
                C2175) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C542 +
            (C34338 + C34339 + C34340) * C51190 -
            (C34341 + C34342 + C34343) * C543 -
            (C34344 + C34345 + C34346) * C51191 +
            (C17051 * C400 + C17046 * C410 + C17052 * C401 + C17047 * C411 +
             C17053 * C402 + C17048 * C412) *
                C544 +
            (C17051 * C414 + C17046 * C430 + C17052 * C413 + C17047 * C429 +
             C17053 * C418 + C17048 * C433) *
                C539) *
               C51006 * C51082) *
              C50920 * C51147 +
          (((C17257 + C17256 + C17255) * C543 -
            ((C17254 + C17253 + C17252) * C51190 +
             (C17251 + C17250 + C17249) * C542) +
            (C17260 + C17259 + C17258) * C51191 -
            (C17579 + C17578 + C17577) * C544 -
            (C17582 + C17581 + C17580) * C539) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C543 -
            ((C17950 + C17951 + C17952) * C51190 +
             (C17953 + C17954 + C17955) * C542) +
            (C17956 + C17957 + C17958) * C51191 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C544 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C539) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C542 +
            (C19835 * C136 + C50861 * C146) * C51190 -
            (C19835 * C126 + C50861 * C133) * C543 -
            (C19835 * C137 + C50861 * C147) * C51191 +
            (C19835 * C127 + C50861 * C134) * C544 +
            (C19835 * C138 + C50861 * C148) * C539) *
               C51006 * C39326 +
           (C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C51006 *
               C39327 +
           (C22624 + C22625 - C22626 - C22627 + C22638 + C22639) * C51006 *
               C39328 +
           (C22271 * C542 + C22270 * C51190 - C22269 * C543 - C22272 * C51191 +
            (C19835 * C1729 + C50861 * C1737) * C544 +
            (C19835 * C1733 + C50861 * C1741) * C539) *
               C51006 * C39329) *
              C50920 * C51147 +
          ((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C51006 *
               C39326 +
           (C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C51006 *
               C39327 +
           (C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C51006 *
               C39328 +
           (C22273 * C543 - (C22274 * C51190 + C22275 * C542) +
            C22276 * C51191 - (C19835 * C6006 + C50861 * C6007) * C544 -
            (C19835 * C6008 + C50861 * C6009) * C539) *
               C51006 * C39329) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C256 +
              (C19835 * C136 + C50861 * C146) * C251 -
              (C19835 * C126 + C50861 * C133) * C257 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C2173 +
             (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
                C33992 +
            ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
             C31482 * C2175) *
                C51082) *
               C51148 +
           (((C22279 - (C22278 + C22277) + C22280) * C2173 + C22841 * C2174 +
             C32129 * C2175) *
                C33992 +
            ((C22283 - (C22282 + C22281) + C22284) * C2173 + C22842 * C2174 +
             (C22079 - (C22069 + C22070) + C22080) * C2175) *
                C51082) *
               C50984) *
              C51147 +
          ((((C19985 - (C19984 + C19983) + C19986) * C2173 +
             (C19989 - (C19988 + C19987) + C19990) * C2174 +
             (C19993 - (C19992 + C19991) + C19994) * C2175) *
                C33992 +
            (C22841 * C2173 + C32129 * C2174 +
             (C20509 - (C20510 + C20511) + C20512) * C2175) *
                C51082) *
               C51148 +
           ((C22840 * C2173 + C31482 * C2174 +
             (C20511 + C20510 - C20509 - C20512) * C2175) *
                C33992 +
            (C22285 * C2173 + (C22070 + C22069 - C22079 - C22080) * C2174 +
             (C20843 * C256 + C20844 * C251 -
              (C19835 * C3565 + C50861 * C3569) * C257 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C2175) *
                C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C256 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C251 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C257 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C256 +
             (C34338 + C34339 + C34340) * C251 -
             (C34341 + C34342 + C34343) * C257 -
             (C34344 + C34345 + C34346) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C34343 + C34342 + C34341) * C257 -
             ((C34340 + C34339 + C34338) * C251 +
              (C34337 + C34336 + C34335) * C256) +
             (C34346 + C34345 + C34344) * C50884) *
                C51006 * C33992 +
            ((C34347 + C34348 + C34349) * C257 -
             ((C34350 + C34351 + C34352) * C251 +
              (C34353 + C34354 + C34355) * C256) +
             (C34356 + C34357 + C34358) * C50884) *
                C51006 * C51082) *
               C50984) *
              C51147 +
          ((((C17257 + C17256 + C17255) * C257 -
             ((C17254 + C17253 + C17252) * C251 +
              (C17251 + C17250 + C17249) * C256) +
             (C17260 + C17259 + C17258) * C50884) *
                C51006 * C33992 +
            ((C17947 + C17948 + C17949) * C257 -
             ((C17950 + C17951 + C17952) * C251 +
              (C17953 + C17954 + C17955) * C256) +
             (C17956 + C17957 + C17958) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C17955 + C17954 + C17953) * C256 +
             (C17952 + C17951 + C17950) * C251 -
             (C17949 + C17948 + C17947) * C257 -
             (C17958 + C17957 + C17956) * C50884) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C256 +
             (C18382 + C18383 + C18384) * C251 -
             (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
              C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                 C257 -
             (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
              C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51006 * C39326 +
            (C22277 + C22278 - C22279 - C22280) * C51006 * C39327 +
            C39527 * C39328 + C39541 * C39329) *
               C51148 +
           ((C22279 - (C22278 + C22277) + C22280) * C51006 * C39326 +
            (C22283 - (C22282 + C22281) + C22284) * C51006 * C39327 +
            (C22286 - (C22287 + C22288) + C22289) * C51006 * C39328 +
            (C39539 - (C39531 + C39532) + C39540) * C51006 * C39329) *
               C50984) *
              C51147 +
          (((C19985 - (C19984 + C19983) + C19986) * C51006 * C39326 +
            C22841 * C51006 * C39327 + C22842 * C51006 * C39328 +
            (C22290 - (C22291 + C22292) + C22293) * C51006 * C39329) *
               C51148 +
           (C22840 * C51006 * C39326 + C22285 * C51006 * C39327 +
            (C22292 + C22291 - C22290 - C22293) * C51006 * C39328 +
            (C23274 * C256 + C23275 * C251 -
             (C19835 * C6412 + C50861 * C6416) * C257 -
             (C19835 * C6414 + C50861 * C6418) * C50884) *
                C51006 * C39329) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                C17053 * C127 + C17048 * C134) *
                   C121 +
               (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                C17053 * C138 + C17048 * C148) *
                   C109 -
               (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                C17051 * C126 + C17046 * C133) *
                   C122 -
               (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                C17051 * C137 + C17046 * C147) *
                   C110 +
               (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                C17053 * C129 + C17048 * C140) *
                   C123 +
               (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                C17053 * C141 + C17048 * C150) *
                   C111 -
               (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
                C17051 * C128 + C17046 * C135) *
                   C124 -
               (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
                C17051 * C139 + C17046 * C149) *
                   C112) *
                  C51006 * C33992 +
              ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
                C17053 * C400 + C17048 * C410) *
                   C121 +
               (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
                C17053 * C414 + C17048 * C430) *
                   C109 -
               (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
                C17051 * C399 + C17046 * C409) *
                   C122 -
               (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
                C17051 * C415 + C17046 * C431) *
                   C110 +
               (C17051 * C400 + C17046 * C410 + C17052 * C401 + C17047 * C411 +
                C17053 * C402 + C17048 * C412) *
                   C123 +
               (C17051 * C414 + C17046 * C430 + C17052 * C413 + C17047 * C429 +
                C17053 * C418 + C17048 * C433) *
                   C111 -
               (C17053 * C649 + C17048 * C650 + C17052 * C402 + C17047 * C412 +
                C17051 * C401 + C17046 * C411) *
                   C124 -
               (C17053 * C651 + C17048 * C652 + C17052 * C418 + C17047 * C433 +
                C17051 * C413 + C17046 * C429) *
                   C112) *
                  C51006 * C51082) *
             C50920 * C50908 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C256 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C251 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C257 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C50884) *
                   C51006 * C33992 +
               ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
                 C17053 * C400 + C17048 * C410) *
                    C256 +
                (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
                 C17053 * C414 + C17048 * C430) *
                    C251 -
                (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
                 C17051 * C399 + C17046 * C409) *
                    C257 -
                (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
                 C17051 * C415 + C17046 * C431) *
                    C50884) *
                   C51006 * C51082) *
                  C50920 * C253 +
              (((C17257 + C17256 + C17255) * C257 -
                ((C17254 + C17253 + C17252) * C251 +
                 (C17251 + C17250 + C17249) * C256) +
                (C17260 + C17259 + C17258) * C50884) *
                   C51006 * C33992 +
               ((C17947 + C17948 + C17949) * C257 -
                ((C17950 + C17951 + C17952) * C251 +
                 (C17953 + C17954 + C17955) * C256) +
                (C17956 + C17957 + C17958) * C50884) *
                   C51006 * C51082) *
                  C50920 * C254 +
              (((C17269 + C17268 + C17267) * C256 +
                (C17266 + C17265 + C17264) * C251 -
                (C17263 + C17262 + C17261) * C257 -
                (C17272 + C17271 + C17270) * C50884) *
                   C51006 * C33992 +
               ((C18883 + C18884 + C18885) * C256 +
                (C18886 + C18887 + C18888) * C251 -
                (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 +
                 C17047 * C1453 + C17051 * C1446 + C17046 * C1454) *
                    C257 -
                (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 +
                 C17047 * C1457 + C17051 * C1450 + C17046 * C1458) *
                    C50884) *
                   C51006 * C51082) *
                  C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C256 +
            (C34338 + C34339 + C34340) * C251 -
            (C34341 + C34342 + C34343) * C257 -
            (C34344 + C34345 + C34346) * C50884) *
               C51006 * C51082) *
              C396 +
          (((C34343 + C34342 + C34341) * C257 -
            ((C34340 + C34339 + C34338) * C251 +
             (C34337 + C34336 + C34335) * C256) +
            (C34346 + C34345 + C34344) * C50884) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C257 -
            ((C34350 + C34351 + C34352) * C251 +
             (C34353 + C34354 + C34355) * C256) +
            (C34356 + C34357 + C34358) * C50884) *
               C51006 * C51082) *
              C397 +
          (((C34355 + C34354 + C34353) * C256 +
            (C34352 + C34351 + C34350) * C251 -
            (C34349 + C34348 + C34347) * C257 -
            (C34358 + C34357 + C34356) * C50884) *
               C51006 * C33992 +
           ((C17051 * C1731 + C17046 * C1739 + C17052 * C1730 + C17047 * C1738 +
             C17053 * C1729 + C17048 * C1737) *
                C256 +
            (C17051 * C1735 + C17046 * C1743 + C17052 * C1734 + C17047 * C1742 +
             C17053 * C1733 + C17048 * C1741) *
                C251 -
            (C17053 * C1728 + C17048 * C1736 + C17052 * C1729 + C17047 * C1737 +
             C17051 * C1730 + C17046 * C1738) *
                C257 -
            (C17053 * C1732 + C17048 * C1740 + C17052 * C1733 + C17047 * C1741 +
             C17051 * C1734 + C17046 * C1742) *
                C50884) *
               C51006 * C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C2173 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C2174 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C20227 * C123 + C20228 * C111 -
            (C19835 * C266 + C50861 * C281) * C124 -
            (C19835 * C285 + C50861 * C296) * C112) *
               C2175) *
              C33992 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C2173 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C2174 +
           (C20495 * C121 + C20494 * C109 - C20493 * C122 - C20496 * C110 +
            C31783 * C123 + C31784 * C111 -
            (C19835 * C1444 + C50861 * C1452) * C124 -
            (C19835 * C1448 + C50861 * C1456) * C112) *
               C2175) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
               C33992 +
           ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
            C31482 * C2175) *
               C51082) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C2173 +
            (C19989 - (C19988 + C19987) + C19990) * C2174 +
            (C19993 - (C19992 + C19991) + C19994) * C2175) *
               C33992 +
           (C22841 * C2173 + C32129 * C2174 +
            (C20509 - (C20510 + C20511) + C20512) * C2175) *
               C51082) *
              C50920 * C254 +
          ((C20003 * C2173 + C20004 * C2174 +
            (C19997 + C19996 - C19995 - C19998) * C2175) *
               C33992 +
           (C31482 * C2173 + (C20511 + C20510 - C20509 - C20512) * C2174 +
            (C21221 * C256 + C21222 * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C2175) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
               C33992 +
           ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
            C31482 * C2175) *
               C51082) *
              C396 +
          (((C22279 - (C22278 + C22277) + C22280) * C2173 + C22841 * C2174 +
            C32129 * C2175) *
               C33992 +
           ((C22283 - (C22282 + C22281) + C22284) * C2173 + C22842 * C2174 +
            (C22079 - (C22069 + C22070) + C22080) * C2175) *
               C51082) *
              C397 +
          ((C22297 * C2173 + C22285 * C2174 +
            (C22070 + C22069 - C22079 - C22080) * C2175) *
               C33992 +
           ((C22288 + C22287 - C22286 - C22289) * C2173 +
            (C22292 + C22291 - C22290 - C22293) * C2174 +
            (C23276 * C256 + C23277 * C251 -
             (C19835 * C4505 + C50861 * C4511) * C257 -
             (C19835 * C4509 + C50861 * C4517) * C50884) *
                C2175) *
               C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19835 * C125 + C50861 * C132) * C121 +
           (C19835 * C136 + C50861 * C146) * C109 -
           (C19835 * C126 + C50861 * C133) * C122 -
           (C19835 * C137 + C50861 * C147) * C110 +
           (C19835 * C127 + C50861 * C134) * C123 +
           (C19835 * C138 + C50861 * C148) * C111 -
           (C19835 * C128 + C50861 * C135) * C124 -
           (C19835 * C139 + C50861 * C149) * C112) *
              C51006 * C39326 +
          (C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
           C22632 * C123 + C22633 * C111 -
           (C19835 * C401 + C50861 * C411) * C124 -
           (C19835 * C413 + C50861 * C429) * C112) *
              C51006 * C39327 +
          (C22264 * C121 + C22265 * C109 - C22266 * C122 - C22267 * C110 +
           C22634 * C123 + C22635 * C111 -
           (C19835 * C407 + C50861 * C422) * C124 -
           (C19835 * C426 + C50861 * C437) * C112) *
              C51006 * C39328 +
          (C22271 * C121 + C22270 * C109 - C22269 * C122 - C22272 * C110 +
           (C19835 * C1729 + C50861 * C1737) * C123 +
           (C19835 * C1733 + C50861 * C1741) * C111 -
           (C19835 * C1728 + C50861 * C1736) * C124 -
           (C19835 * C1732 + C50861 * C1740) * C112) *
              C51006 * C39329) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C256 +
            (C19835 * C136 + C50861 * C146) * C251 -
            (C19835 * C126 + C50861 * C133) * C257 -
            (C19835 * C137 + C50861 * C147) * C50884) *
               C51006 * C39326 +
           (C22277 + C22278 - C22279 - C22280) * C51006 * C39327 +
           C22297 * C51006 * C39328 +
           (C22288 + C22287 - C22286 - C22289) * C51006 * C39329) *
              C50920 * C253 +
          ((C19985 - (C19984 + C19983) + C19986) * C51006 * C39326 +
           C22841 * C51006 * C39327 + C22842 * C51006 * C39328 +
           (C22290 - (C22291 + C22292) + C22293) * C51006 * C39329) *
              C50920 * C254 +
          (C20003 * C51006 * C39326 + C31482 * C51006 * C39327 +
           (C22070 + C22069 - C22079 - C22080) * C51006 * C39328 +
           (C23276 * C256 + C23277 * C251 -
            (C19835 * C4505 + C50861 * C4511) * C257 -
            (C19835 * C4509 + C50861 * C4517) * C50884) *
               C51006 * C39329) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C256 +
            (C19835 * C136 + C50861 * C146) * C251 -
            (C19835 * C126 + C50861 * C133) * C257 -
            (C19835 * C137 + C50861 * C147) * C50884) *
               C51006 * C39326 +
           (C22277 + C22278 - C22279 - C22280) * C51006 * C39327 +
           C39527 * C39328 + C39541 * C39329) *
              C396 +
          ((C22279 - (C22278 + C22277) + C22280) * C51006 * C39326 +
           (C22283 - (C22282 + C22281) + C22284) * C51006 * C39327 +
           (C22286 - (C22287 + C22288) + C22289) * C51006 * C39328 +
           (C39539 - (C39531 + C39532) + C39540) * C51006 * C39329) *
              C397 +
          (C39527 * C39326 + C39541 * C39327 +
           (C39532 + C39531 - C39539 - C39540) * C51006 * C39328 +
           ((C19835 * C7319 + C50861 * C7323) * C256 +
            (C19835 * C7321 + C50861 * C7325) * C251 -
            (C19835 * C7318 + C50861 * C7322) * C257 -
            (C19835 * C7320 + C50861 * C7324) * C50884) *
               C51006 * C39329) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C2173 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C2174 +
            (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C2175) *
               C33992 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C2173 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C2174 +
            (C31775 + C31776 - C31777 - C31778 + C31785 + C31786) * C2175) *
               C51082) *
              C51148 +
          (((C22618 - (C22617 + C22616) + C22619 - C22636 - C22637) * C2173 +
            (C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C2174 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C2175) *
               C33992 +
           ((C22626 - (C22625 + C22624) + C22627 - C22638 - C22639) * C2173 +
            (C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C2174 +
            (C22075 * C543 - (C20842 * C51190 + C20841 * C542) +
             C22076 * C51191 - (C19835 * C2567 + C50861 * C2572) * C544 -
             (C19835 * C2573 + C50861 * C2576) * C539) *
                C2175) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C542 +
            (C34338 + C34339 + C34340) * C51190 -
            (C34341 + C34342 + C34343) * C543 -
            (C34344 + C34345 + C34346) * C51191 +
            (C34663 + C34664 + C34665) * C544 +
            (C34666 + C34667 + C34668) * C539) *
               C51006 * C51082) *
              C51148 +
          (((C34343 + C34342 + C34341) * C543 -
            ((C34340 + C34339 + C34338) * C51190 +
             (C34337 + C34336 + C34335) * C542) +
            (C34346 + C34345 + C34344) * C51191 -
            (C34665 + C34664 + C34663) * C544 -
            (C34668 + C34667 + C34666) * C539) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C543 -
            ((C34350 + C34351 + C34352) * C51190 +
             (C34353 + C34354 + C34355) * C542) +
            (C34356 + C34357 + C34358) * C51191 -
            (C17053 * C408 + C17048 * C427 + C17052 * C407 + C17047 * C422 +
             C17051 * C406 + C17046 * C421) *
                C544 -
            (C17053 * C428 + C17048 * C438 + C17052 * C426 + C17047 * C437 +
             C17051 * C425 + C17046 * C436) *
                C539) *
               C51006 * C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C542 +
            (C19835 * C136 + C50861 * C146) * C51190 -
            (C19835 * C126 + C50861 * C133) * C543 -
            (C19835 * C137 + C50861 * C147) * C51191 +
            (C19835 * C127 + C50861 * C134) * C544 +
            (C19835 * C138 + C50861 * C148) * C539) *
               C51006 * C39326 +
           (C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C51006 *
               C39327 +
           (C22624 + C22625 - C22626 - C22627 + C22638 + C22639) * C51006 *
               C39328 +
           (C39738 + C39739 - C39740 - C39741 + C39748 + C39749) * C51006 *
               C39329) *
              C51148 +
          ((C22618 - (C22617 + C22616) + C22619 - C22636 - C22637) * C51006 *
               C39326 +
           (C22626 - (C22625 + C22624) + C22627 - C22638 - C22639) * C51006 *
               C39327 +
           (C39740 - (C39739 + C39738) + C39741 - C39748 - C39749) * C51006 *
               C39328 +
           (C39536 * C543 - (C24221 * C51190 + C24220 * C542) +
            C39537 * C51191 - (C19835 * C5402 + C50861 * C5407) * C544 -
            (C19835 * C5408 + C50861 * C5411) * C539) *
               C51006 * C39329) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
             C17053 * C400 + C17048 * C410) *
                C256 +
            (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
             C17053 * C414 + C17048 * C430) *
                C251 -
            (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
             C17051 * C399 + C17046 * C409) *
                C257 -
            (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
             C17051 * C415 + C17046 * C431) *
                C50884) *
               C51006 * C51082) *
              C50920 * C253 +
          (((C17257 + C17256 + C17255) * C257 -
            ((C17254 + C17253 + C17252) * C251 +
             (C17251 + C17250 + C17249) * C256) +
            (C17260 + C17259 + C17258) * C50884) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C257 -
            ((C17950 + C17951 + C17952) * C251 +
             (C17953 + C17954 + C17955) * C256) +
            (C17956 + C17957 + C17958) * C50884) *
               C51006 * C51082) *
              C50920 * C254 +
          (((C17269 + C17268 + C17267) * C256 +
            (C17266 + C17265 + C17264) * C251 -
            (C17263 + C17262 + C17261) * C257 -
            (C17272 + C17271 + C17270) * C50884) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C256 +
            (C18886 + C18887 + C18888) * C251 -
            (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 + C17047 * C1453 +
             C17051 * C1446 + C17046 * C1454) *
                C257 -
            (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 + C17047 * C1457 +
             C17051 * C1450 + C17046 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
            C17053 * C127 + C17048 * C134) *
               C121 +
           (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
            C17053 * C138 + C17048 * C148) *
               C109 -
           (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
            C17051 * C126 + C17046 * C133) *
               C122 -
           (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
            C17051 * C137 + C17046 * C147) *
               C110 +
           (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
            C17053 * C129 + C17048 * C140) *
               C123 +
           (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
            C17053 * C141 + C17048 * C150) *
               C111 -
           (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
            C17051 * C128 + C17046 * C135) *
               C124 -
           (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
            C17051 * C139 + C17046 * C149) *
               C112) *
              C51006 * C33992 +
          ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
            C17053 * C400 + C17048 * C410) *
               C121 +
           (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
            C17053 * C414 + C17048 * C430) *
               C109 -
           (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
            C17051 * C399 + C17046 * C409) *
               C122 -
           (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
            C17051 * C415 + C17046 * C431) *
               C110 +
           (C17051 * C400 + C17046 * C410 + C17052 * C401 + C17047 * C411 +
            C17053 * C402 + C17048 * C412) *
               C123 +
           (C17051 * C414 + C17046 * C430 + C17052 * C413 + C17047 * C429 +
            C17053 * C418 + C17048 * C433) *
               C111 -
           (C17053 * C649 + C17048 * C650 + C17052 * C402 + C17047 * C412 +
            C17051 * C401 + C17046 * C411) *
               C124 -
           (C17053 * C651 + C17048 * C652 + C17052 * C418 + C17047 * C433 +
            C17051 * C413 + C17046 * C429) *
               C112) *
              C51006 * C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C2173 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C2174 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C20227 * C123 + C20228 * C111 -
            (C19835 * C266 + C50861 * C281) * C124 -
            (C19835 * C285 + C50861 * C296) * C112) *
               C2175) *
              C33992 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C2173 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C2174 +
           (C20495 * C121 + C20494 * C109 - C20493 * C122 - C20496 * C110 +
            C31783 * C123 + C31784 * C111 -
            (C19835 * C1444 + C50861 * C1452) * C124 -
            (C19835 * C1448 + C50861 * C1456) * C112) *
               C2175) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
               C33992 +
           ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
            C31482 * C2175) *
               C51082) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C2173 +
            (C19989 - (C19988 + C19987) + C19990) * C2174 +
            (C19993 - (C19992 + C19991) + C19994) * C2175) *
               C33992 +
           (C22841 * C2173 + C32129 * C2174 +
            (C20509 - (C20510 + C20511) + C20512) * C2175) *
               C51082) *
              C50920 * C254 +
          ((C20003 * C2173 + C20004 * C2174 +
            (C19997 + C19996 - C19995 - C19998) * C2175) *
               C33992 +
           (C31482 * C2173 + (C20511 + C20510 - C20509 - C20512) * C2174 +
            (C21221 * C256 + C21222 * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C2175) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19835 * C125 + C50861 * C132) * C121 +
           (C19835 * C136 + C50861 * C146) * C109 -
           (C19835 * C126 + C50861 * C133) * C122 -
           (C19835 * C137 + C50861 * C147) * C110 +
           (C19835 * C127 + C50861 * C134) * C123 +
           (C19835 * C138 + C50861 * C148) * C111 -
           (C19835 * C128 + C50861 * C135) * C124 -
           (C19835 * C139 + C50861 * C149) * C112) *
              C51006 * C39326 +
          (C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
           C22632 * C123 + C22633 * C111 -
           (C19835 * C401 + C50861 * C411) * C124 -
           (C19835 * C413 + C50861 * C429) * C112) *
              C51006 * C39327 +
          (C22264 * C121 + C22265 * C109 - C22266 * C122 - C22267 * C110 +
           C22634 * C123 + C22635 * C111 -
           (C19835 * C407 + C50861 * C422) * C124 -
           (C19835 * C426 + C50861 * C437) * C112) *
              C51006 * C39328 +
          (C22271 * C121 + C22270 * C109 - C22269 * C122 - C22272 * C110 +
           (C19835 * C1729 + C50861 * C1737) * C123 +
           (C19835 * C1733 + C50861 * C1741) * C111 -
           (C19835 * C1728 + C50861 * C1736) * C124 -
           (C19835 * C1732 + C50861 * C1740) * C112) *
              C51006 * C39329) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C256 +
            (C19835 * C136 + C50861 * C146) * C251 -
            (C19835 * C126 + C50861 * C133) * C257 -
            (C19835 * C137 + C50861 * C147) * C50884) *
               C51006 * C39326 +
           (C22277 + C22278 - C22279 - C22280) * C51006 * C39327 +
           C22297 * C51006 * C39328 +
           (C22288 + C22287 - C22286 - C22289) * C51006 * C39329) *
              C50920 * C253 +
          ((C19985 - (C19984 + C19983) + C19986) * C51006 * C39326 +
           C22841 * C51006 * C39327 + C22842 * C51006 * C39328 +
           (C22290 - (C22291 + C22292) + C22293) * C51006 * C39329) *
              C50920 * C254 +
          (C20003 * C51006 * C39326 + C31482 * C51006 * C39327 +
           (C22070 + C22069 - C22079 - C22080) * C51006 * C39328 +
           (C23276 * C256 + C23277 * C251 -
            (C19835 * C4505 + C50861 * C4511) * C257 -
            (C19835 * C4509 + C50861 * C4517) * C50884) *
               C51006 * C39329) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
               C33992 +
           ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
            C32674 * C2175) *
               C51082) *
              C50920 * C51192 +
          (((C20951 - (C20950 + C20949) + C20952) * C2173 +
            (C20955 - (C20954 + C20953) + C20956) * C2174 +
            (C20959 - (C20958 + C20957) + C20960) * C2175) *
               C33992 +
           (C23657 * C2173 + C32871 * C2174 +
            (C21109 - (C21110 + C21111) + C21112) * C2175) *
               C51082) *
              C50920 * C51193 +
          ((C20969 * C2173 + C20970 * C2174 +
            (C20963 + C20962 - C20961 - C20964) * C2175) *
               C33992 +
           (C32674 * C2173 + (C21111 + C21110 - C21109 - C21112) * C2174 +
            (C21221 * C50007 + C21222 * C51139 -
             (C19835 * C4090 + C50861 * C4094) * C50000 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C2175) *
               C51082) *
              C50920 * C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51139 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C50007 +
            (C34338 + C34339 + C34340) * C51139 -
            (C34341 + C34342 + C34343) * C50000 -
            (C34344 + C34345 + C34346) * C50884) *
               C51006 * C51082) *
              C50920 * C51192 +
          (((C17257 + C17256 + C17255) * C50000 -
            ((C17254 + C17253 + C17252) * C51139 +
             (C17251 + C17250 + C17249) * C50007) +
            (C17260 + C17259 + C17258) * C50884) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C50000 -
            ((C17950 + C17951 + C17952) * C51139 +
             (C17953 + C17954 + C17955) * C50007) +
            (C17956 + C17957 + C17958) * C50884) *
               C51006 * C51082) *
              C50920 * C51193 +
          (((C17269 + C17268 + C17267) * C50007 +
            (C17266 + C17265 + C17264) * C51139 -
            (C17263 + C17262 + C17261) * C50000 -
            (C17272 + C17271 + C17270) * C50884) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C50007 +
            (C18886 + C18887 + C18888) * C51139 -
            (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 + C17047 * C1453 +
             C17051 * C1446 + C17046 * C1454) *
                C50000 -
            (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 + C17047 * C1457 +
             C17051 * C1450 + C17046 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C1213)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C50007 +
            (C19835 * C136 + C50861 * C146) * C51139 -
            (C19835 * C126 + C50861 * C133) * C50000 -
            (C19835 * C137 + C50861 * C147) * C50884) *
               C51006 * C39326 +
           (C23635 + C23636 - C23637 - C23638) * C51006 * C39327 +
           C24572 * C51006 * C39328 +
           (C24569 + C24568 - C24567 - C24570) * C51006 * C39329) *
              C50920 * C51192 +
          ((C20951 - (C20950 + C20949) + C20952) * C51006 * C39326 +
           C23657 * C51006 * C39327 + C23658 * C51006 * C39328 +
           (C23647 - (C23648 + C23649) + C23650) * C51006 * C39329) *
              C50920 * C51193 +
          (C20969 * C51006 * C39326 + C32674 * C51006 * C39327 +
           (C23439 + C23438 - C23437 - C23440) * C51006 * C39328 +
           (C23276 * C50007 + C23277 * C51139 -
            (C19835 * C4505 + C50861 * C4511) * C50000 -
            (C19835 * C4509 + C50861 * C4517) * C50884) *
               C51006 * C39329) *
              C50920 * C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C51148 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C50984) *
              C51192 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C50984 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C51148) *
              C51193 +
          (((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
                C33992 +
            (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
                C51082) *
               C51148 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C2175 +
             (C20850 + C20849) * C2174 + C23269 * C2173) *
                C51082 +
            ((C21224 + C21223) * C2175 + C21215 * C2174 + C21216 * C2173) *
                C33992) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C51148 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C50984) *
              C51192 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C50984 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C51148) *
              C51193 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C51006 * C33992 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51006 * C51082) *
               C51148 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51006 * C51082 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C51006 * C33992) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51006 * C39326 +
            (C23249 + C23250) * C51006 * C39327 + C40142 * C39328 +
            C40146 * C39329) *
               C51148 -
           ((C24224 + C24223) * C51006 * C39329 + C24214 * C51006 * C39328 +
            (C23253 + C23252) * C51006 * C39327 +
            (C23250 + C23249) * C51006 * C39326) *
               C50984) *
              C51192 +
          ((C23251 * C51006 * C39326 + C23254 * C51006 * C39327 +
            C23273 * C51006 * C39328 + (C23281 + C23282) * C51006 * C39329) *
               C50984 -
           (C40144 * C39329 + C40145 * C39328 + C23260 * C51006 * C39327 +
            (C20700 + C20699) * C51006 * C39326) *
               C51148) *
              C51193 +
          ((C20711 * C51006 * C39326 + C23805 * C51006 * C39327 +
            C23806 * C51006 * C39328 + (C23283 + C23284) * C51006 * C39329) *
               C51148 -
           (((C19835 * C23245 + C50861 * C23247) * C50879 +
             (C19835 * C23244 + C50861 * C23246) * C980) *
                C51006 * C39329 +
            (C23284 + C23283) * C51006 * C39328 + C23269 * C51006 * C39327 +
            C21216 * C51006 * C39326) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C906 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C901 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C907 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C902 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C908 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C903) *
                   C51006 * C33992 +
               ((C34335 + C34336 + C34337) * C906 +
                (C34338 + C34339 + C34340) * C901 -
                (C34341 + C34342 + C34343) * C907 -
                (C34344 + C34345 + C34346) * C902 +
                (C34663 + C34664 + C34665) * C908 +
                (C34666 + C34667 + C34668) * C903) *
                   C51006 * C51082) *
                  C50920 * C904 +
              (((C17257 + C17256 + C17255) * C907 -
                ((C17254 + C17253 + C17252) * C901 +
                 (C17251 + C17250 + C17249) * C906) +
                (C17260 + C17259 + C17258) * C902 -
                (C17579 + C17578 + C17577) * C908 -
                (C17582 + C17581 + C17580) * C903) *
                   C51006 * C33992 +
               ((C17947 + C17948 + C17949) * C907 -
                ((C17950 + C17951 + C17952) * C901 +
                 (C17953 + C17954 + C17955) * C906) +
                (C17956 + C17957 + C17958) * C902 -
                (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
                 C17051 * C785 + C17046 * C790) *
                    C908 -
                (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
                 C17051 * C794 + C17046 * C800) *
                    C903) *
                   C51006 * C51082) *
                  C50920 * C50958) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C980 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C50879) *
                   C51006 * C33992 +
               ((C34335 + C34336 + C34337) * C980 +
                (C34338 + C34339 + C34340) * C50879) *
                   C51006 * C51082) *
                  C50920 * C976 -
              (((C17950 + C17951 + C17952) * C50879 +
                (C17953 + C17954 + C17955) * C980) *
                   C51006 * C51082 +
               ((C17254 + C17253 + C17252) * C50879 +
                (C17251 + C17250 + C17249) * C980) *
                   C51006 * C33992) *
                  C50920 * C977 +
              (((C17269 + C17268 + C17267) * C980 +
                (C17266 + C17265 + C17264) * C50879) *
                   C51006 * C33992 +
               ((C18883 + C18884 + C18885) * C980 +
                (C18886 + C18887 + C18888) * C50879) *
                   C51006 * C51082) *
                  C50920 * C978 -
              (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 +
                 C17047 * C3097 + C17051 * C3092 + C17046 * C3096) *
                    C50879 +
                (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 +
                 C17047 * C3091 + C17051 * C3087 + C17046 * C3090) *
                    C980) *
                   C51006 * C51082 +
               ((C18220 + C18219 + C18218) * C50879 +
                (C18217 + C18216 + C18215) * C980) *
                   C51006 * C33992) *
                  C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C396 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C397 +
           (((C34355 + C34354 + C34353) * C980 +
             (C34352 + C34351 + C34350) * C50879) *
                C51006 * C33992 +
            ((C17051 * C1731 + C17046 * C1739 + C17052 * C1730 +
              C17047 * C1738 + C17053 * C1729 + C17048 * C1737) *
                 C980 +
             (C17051 * C1735 + C17046 * C1743 + C17052 * C1734 +
              C17047 * C1742 + C17053 * C1733 + C17048 * C1741) *
                 C50879) *
                C51006 * C51082) *
               C398) *
              C904 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C397 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C396 -
           (((C17053 * C6008 + C17048 * C6009 + C17052 * C4513 +
              C17047 * C4519 + C17051 * C4514 + C17046 * C4520) *
                 C50879 +
             (C17053 * C6006 + C17048 * C6007 + C17052 * C4507 +
              C17047 * C4515 + C17051 * C4508 + C17046 * C4516) *
                 C980) *
                C51006 * C51082 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C51006 * C33992) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C2173 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C2174 +
            (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C2175) *
               C33992 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2173 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2174 +
            (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
             (C19835 * C3089 + C50861 * C3094) * C908 -
             (C19835 * C3095 + C50861 * C3098) * C903) *
                C2175) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C2173 +
            (C20699 + C20700) * C2174 + C20711 * C2175) *
               C33992 +
           ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
               C51082) *
              C50920 * C976 -
          ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
           (C20714 * C2175 + (C20702 + C20701) * C2174 +
            (C20700 + C20699) * C2173) *
               C33992) *
              C50920 * C977 +
          ((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
               C33992 +
           (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
               C51082) *
              C50920 * C978 -
          ((((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C2175 +
            (C21224 + C21223) * C2174 + C21215 * C2173) *
               C51082 +
           ((C20718 + C20717) * C2175 + C20713 * C2174 + C20714 * C2173) *
               C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C396 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C397 +
           ((C23270 * C2173 + C23254 * C2174 + C23806 * C2175) * C33992 +
            ((C23258 + C23257) * C2173 + C23273 * C2174 +
             (C23283 + C23284) * C2175) *
                C51082) *
               C398) *
              C904 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C397 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C396 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C2175 +
             (C23284 + C23283) * C2174 + C23272 * C2173) *
                C51082 +
            ((C20850 + C20849) * C2175 + C23269 * C2174 + C23259 * C2173) *
                C33992) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C51006 * C39326 +
           (C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51006 *
               C39327 +
           (C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51006 *
               C39328 +
           (C22271 * C906 + C22270 * C901 - C22269 * C907 - C22272 * C902 +
            C39746 * C908 + C39747 * C903) *
               C51006 * C39329) *
              C50920 * C904 +
          ((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C51006 *
               C39326 +
           (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51006 *
               C39327 +
           (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51006 *
               C39328 +
           (C22273 * C907 - (C22274 * C901 + C22275 * C906) + C22276 * C902 -
            (C19835 * C6006 + C50861 * C6007) * C908 -
            (C19835 * C6008 + C50861 * C6009) * C903) *
               C51006 * C39329) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C51006 * C39326 +
           (C23249 + C23250) * C51006 * C39327 + C23270 * C51006 * C39328 +
           (C23258 + C23257) * C51006 * C39329) *
              C50920 * C976 -
          (C23272 * C51006 * C39329 + C23259 * C51006 * C39328 +
           C23260 * C51006 * C39327 + (C20700 + C20699) * C51006 * C39326) *
              C50920 * C977 +
          (C20711 * C51006 * C39326 + C23805 * C51006 * C39327 +
           C23806 * C51006 * C39328 + (C23283 + C23284) * C51006 * C39329) *
              C50920 * C978 -
          (((C19835 * C21487 + C50861 * C21489) * C50879 +
            (C19835 * C21486 + C50861 * C21488) * C980) *
               C51006 * C39329 +
           (C20850 + C20849) * C51006 * C39328 + C21215 * C51006 * C39327 +
           C20714 * C51006 * C39326) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51006 * C39326 +
            (C23249 + C23250) * C51006 * C39327 + C40142 * C39328 +
            C40146 * C39329) *
               C396 -
           ((C24224 + C24223) * C51006 * C39329 + C24214 * C51006 * C39328 +
            (C23253 + C23252) * C51006 * C39327 +
            (C23250 + C23249) * C51006 * C39326) *
               C397 +
           (C40142 * C39326 + C40146 * C39327 +
            (C24223 + C24224) * C51006 * C39328 +
            ((C19835 * C7319 + C50861 * C7323) * C980 +
             (C19835 * C7321 + C50861 * C7325) * C50879) *
                C51006 * C39329) *
               C398) *
              C904 +
          ((C23251 * C51006 * C39326 + C23254 * C51006 * C39327 +
            C23273 * C51006 * C39328 + (C23281 + C23282) * C51006 * C39329) *
               C397 -
           (C40144 * C39329 + C40145 * C39328 + C23260 * C51006 * C39327 +
            (C20700 + C20699) * C51006 * C39326) *
               C396 -
           (((C19835 * C24209 + C50861 * C24211) * C50879 +
             (C19835 * C24208 + C50861 * C24210) * C980) *
                C51006 * C39329 +
            (C23282 + C23281) * C51006 * C39328 + C40144 * C39327 +
            C40145 * C39326) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C2173 +
             (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
                C33992 +
            ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
             C32674 * C2175) *
                C51082) *
               C51148 +
           (((C23637 - (C23636 + C23635) + C23638) * C2173 + C23657 * C2174 +
             C32871 * C2175) *
                C33992 +
            ((C23642 - (C23641 + C23640) + C23643) * C2173 + C23658 * C2174 +
             (C23437 - (C23438 + C23439) + C23440) * C2175) *
                C51082) *
               C50984) *
              C904 +
          ((((C20951 - (C20950 + C20949) + C20952) * C2173 +
             (C20955 - (C20954 + C20953) + C20956) * C2174 +
             (C20959 - (C20958 + C20957) + C20960) * C2175) *
                C33992 +
            (C23657 * C2173 + C32871 * C2174 +
             (C21109 - (C21110 + C21111) + C21112) * C2175) *
                C51082) *
               C51148 +
           ((C23655 * C2173 + C32674 * C2174 +
             (C21111 + C21110 - C21109 - C21112) * C2175) *
                C33992 +
            (C23656 * C2173 + (C23439 + C23438 - C23437 - C23440) * C2174 +
             (C20843 * C50007 + C20844 * C51139 -
              (C19835 * C3565 + C50861 * C3569) * C50000 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C2175) *
                C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51139 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C50007 +
             (C34338 + C34339 + C34340) * C51139 -
             (C34341 + C34342 + C34343) * C50000 -
             (C34344 + C34345 + C34346) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C34343 + C34342 + C34341) * C50000 -
             ((C34340 + C34339 + C34338) * C51139 +
              (C34337 + C34336 + C34335) * C50007) +
             (C34346 + C34345 + C34344) * C50884) *
                C51006 * C33992 +
            ((C34347 + C34348 + C34349) * C50000 -
             ((C34350 + C34351 + C34352) * C51139 +
              (C34353 + C34354 + C34355) * C50007) +
             (C34356 + C34357 + C34358) * C50884) *
                C51006 * C51082) *
               C50984) *
              C904 +
          ((((C17257 + C17256 + C17255) * C50000 -
             ((C17254 + C17253 + C17252) * C51139 +
              (C17251 + C17250 + C17249) * C50007) +
             (C17260 + C17259 + C17258) * C50884) *
                C51006 * C33992 +
            ((C17947 + C17948 + C17949) * C50000 -
             ((C17950 + C17951 + C17952) * C51139 +
              (C17953 + C17954 + C17955) * C50007) +
             (C17956 + C17957 + C17958) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C17955 + C17954 + C17953) * C50007 +
             (C17952 + C17951 + C17950) * C51139 -
             (C17949 + C17948 + C17947) * C50000 -
             (C17958 + C17957 + C17956) * C50884) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C50007 +
             (C18382 + C18383 + C18384) * C51139 -
             (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
              C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                 C50000 -
             (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
              C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51006 * C39326 +
            (C23635 + C23636 - C23637 - C23638) * C51006 * C39327 +
            C24572 * C51006 * C39328 +
            (C24569 + C24568 - C24567 - C24570) * C51006 * C39329) *
               C51148 +
           ((C23637 - (C23636 + C23635) + C23638) * C51006 * C39326 +
            (C23642 - (C23641 + C23640) + C23643) * C51006 * C39327 +
            (C24567 - (C24568 + C24569) + C24570) * C51006 * C39328 +
            (C39536 * C50000 - (C24221 * C51139 + C24220 * C50007) +
             C39537 * C50884) *
                C51006 * C39329) *
               C50984) *
              C904 +
          (((C20951 - (C20950 + C20949) + C20952) * C51006 * C39326 +
            C23657 * C51006 * C39327 + C23658 * C51006 * C39328 +
            (C23647 - (C23648 + C23649) + C23650) * C51006 * C39329) *
               C51148 +
           (C23655 * C51006 * C39326 + C23656 * C51006 * C39327 +
            (C23649 + C23648 - C23647 - C23650) * C51006 * C39328 +
            (C23274 * C50007 + C23275 * C51139 -
             (C19835 * C6412 + C50861 * C6416) * C50000 -
             (C19835 * C6414 + C50861 * C6418) * C50884) *
                C51006 * C39329) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C980 +
            (C34338 + C34339 + C34340) * C50879) *
               C51006 * C51082) *
              C50920 * C976 -
          (((C17950 + C17951 + C17952) * C50879 +
            (C17953 + C17954 + C17955) * C980) *
               C51006 * C51082 +
           ((C17254 + C17253 + C17252) * C50879 +
            (C17251 + C17250 + C17249) * C980) *
               C51006 * C33992) *
              C50920 * C977 +
          (((C17269 + C17268 + C17267) * C980 +
            (C17266 + C17265 + C17264) * C50879) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C980 +
            (C18886 + C18887 + C18888) * C50879) *
               C51006 * C51082) *
              C50920 * C978 -
          (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 + C17047 * C3097 +
             C17051 * C3092 + C17046 * C3096) *
                C50879 +
            (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 + C17047 * C3091 +
             C17051 * C3087 + C17046 * C3090) *
                C980) *
               C51006 * C51082 +
           ((C18220 + C18219 + C18218) * C50879 +
            (C18217 + C18216 + C18215) * C980) *
               C51006 * C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C906 +
            (C34338 + C34339 + C34340) * C901 -
            (C34341 + C34342 + C34343) * C907 -
            (C34344 + C34345 + C34346) * C902 +
            (C34663 + C34664 + C34665) * C908 +
            (C34666 + C34667 + C34668) * C903) *
               C51006 * C51082) *
              C50920 * C904 +
          (((C17257 + C17256 + C17255) * C907 -
            ((C17254 + C17253 + C17252) * C901 +
             (C17251 + C17250 + C17249) * C906) +
            (C17260 + C17259 + C17258) * C902 -
            (C17579 + C17578 + C17577) * C908 -
            (C17582 + C17581 + C17580) * C903) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C907 -
            ((C17950 + C17951 + C17952) * C901 +
             (C17953 + C17954 + C17955) * C906) +
            (C17956 + C17957 + C17958) * C902 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C908 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C903) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C2173 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C2174 +
            (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C2175) *
               C33992 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2173 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2174 +
            (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
             (C19835 * C3089 + C50861 * C3094) * C908 -
             (C19835 * C3095 + C50861 * C3098) * C903) *
                C2175) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C2173 +
            (C20699 + C20700) * C2174 + C20711 * C2175) *
               C33992 +
           ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
               C51082) *
              C50920 * C976 -
          ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
           (C20714 * C2175 + (C20702 + C20701) * C2174 +
            (C20700 + C20699) * C2173) *
               C33992) *
              C50920 * C977 +
          ((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
               C33992 +
           (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
               C51082) *
              C50920 * C978 -
          ((((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C2175 +
            (C21224 + C21223) * C2174 + C21215 * C2173) *
               C51082 +
           ((C20718 + C20717) * C2175 + C20713 * C2174 + C20714 * C2173) *
               C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C51006 * C39326 +
           (C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51006 *
               C39327 +
           (C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51006 *
               C39328 +
           (C22271 * C906 + C22270 * C901 - C22269 * C907 - C22272 * C902 +
            C39746 * C908 + C39747 * C903) *
               C51006 * C39329) *
              C50920 * C904 +
          ((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C51006 *
               C39326 +
           (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C51006 *
               C39327 +
           (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C51006 *
               C39328 +
           (C22273 * C907 - (C22274 * C901 + C22275 * C906) + C22276 * C902 -
            (C19835 * C6006 + C50861 * C6007) * C908 -
            (C19835 * C6008 + C50861 * C6009) * C903) *
               C51006 * C39329) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C51006 * C39326 +
           (C23249 + C23250) * C51006 * C39327 + C23270 * C51006 * C39328 +
           (C23258 + C23257) * C51006 * C39329) *
              C50920 * C976 -
          (C23272 * C51006 * C39329 + C23259 * C51006 * C39328 +
           C23260 * C51006 * C39327 + (C20700 + C20699) * C51006 * C39326) *
              C50920 * C977 +
          (C20711 * C51006 * C39326 + C23805 * C51006 * C39327 +
           C23806 * C51006 * C39328 + (C23283 + C23284) * C51006 * C39329) *
              C50920 * C978 -
          (((C19835 * C21487 + C50861 * C21489) * C50879 +
            (C19835 * C21486 + C50861 * C21488) * C980) *
               C51006 * C39329 +
           (C20850 + C20849) * C51006 * C39328 + C21215 * C51006 * C39327 +
           C20714 * C51006 * C39326) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C2173 +
             (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
                C33992 +
            ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
             C32674 * C2175) *
                C51082) *
               C1558 +
           (((C23637 - (C23636 + C23635) + C23638) * C2173 + C23657 * C2174 +
             C32871 * C2175) *
                C33992 +
            ((C23642 - (C23641 + C23640) + C23643) * C2173 + C23658 * C2174 +
             (C23437 - (C23438 + C23439) + C23440) * C2175) *
                C51082) *
               C50984) *
              C51147 +
          ((((C20951 - (C20950 + C20949) + C20952) * C2173 +
             (C20955 - (C20954 + C20953) + C20956) * C2174 +
             (C20959 - (C20958 + C20957) + C20960) * C2175) *
                C33992 +
            (C23657 * C2173 + C32871 * C2174 +
             (C21109 - (C21110 + C21111) + C21112) * C2175) *
                C51082) *
               C1558 +
           ((C23655 * C2173 + C32674 * C2174 +
             (C21111 + C21110 - C21109 - C21112) * C2175) *
                C33992 +
            (C23656 * C2173 + (C23439 + C23438 - C23437 - C23440) * C2174 +
             (C20843 * C50007 + C20844 * C51139 -
              (C19835 * C3565 + C50861 * C3569) * C50000 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C2175) *
                C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51139 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C50007 +
             (C34338 + C34339 + C34340) * C51139 -
             (C34341 + C34342 + C34343) * C50000 -
             (C34344 + C34345 + C34346) * C50884) *
                C51006 * C51082) *
               C1558 +
           (((C34343 + C34342 + C34341) * C50000 -
             ((C34340 + C34339 + C34338) * C51139 +
              (C34337 + C34336 + C34335) * C50007) +
             (C34346 + C34345 + C34344) * C50884) *
                C51006 * C33992 +
            ((C34347 + C34348 + C34349) * C50000 -
             ((C34350 + C34351 + C34352) * C51139 +
              (C34353 + C34354 + C34355) * C50007) +
             (C34356 + C34357 + C34358) * C50884) *
                C51006 * C51082) *
               C50984) *
              C51147 +
          ((((C17257 + C17256 + C17255) * C50000 -
             ((C17254 + C17253 + C17252) * C51139 +
              (C17251 + C17250 + C17249) * C50007) +
             (C17260 + C17259 + C17258) * C50884) *
                C51006 * C33992 +
            ((C17947 + C17948 + C17949) * C50000 -
             ((C17950 + C17951 + C17952) * C51139 +
              (C17953 + C17954 + C17955) * C50007) +
             (C17956 + C17957 + C17958) * C50884) *
                C51006 * C51082) *
               C1558 +
           (((C17955 + C17954 + C17953) * C50007 +
             (C17952 + C17951 + C17950) * C51139 -
             (C17949 + C17948 + C17947) * C50000 -
             (C17958 + C17957 + C17956) * C50884) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C50007 +
             (C18382 + C18383 + C18384) * C51139 -
             (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
              C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                 C50000 -
             (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
              C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C51006 * C39326 +
            (C23635 + C23636 - C23637 - C23638) * C51006 * C39327 +
            C24572 * C51006 * C39328 +
            (C24569 + C24568 - C24567 - C24570) * C51006 * C39329) *
               C1558 +
           ((C23637 - (C23636 + C23635) + C23638) * C51006 * C39326 +
            (C23642 - (C23641 + C23640) + C23643) * C51006 * C39327 +
            (C24567 - (C24568 + C24569) + C24570) * C51006 * C39328 +
            (C39536 * C50000 - (C24221 * C51139 + C24220 * C50007) +
             C39537 * C50884) *
                C51006 * C39329) *
               C50984) *
              C51147 +
          (((C20951 - (C20950 + C20949) + C20952) * C51006 * C39326 +
            C23657 * C51006 * C39327 + C23658 * C51006 * C39328 +
            (C23647 - (C23648 + C23649) + C23650) * C51006 * C39329) *
               C1558 +
           (C23655 * C51006 * C39326 + C23656 * C51006 * C39327 +
            (C23649 + C23648 - C23647 - C23650) * C51006 * C39328 +
            (C23274 * C50007 + C23275 * C51139 -
             (C19835 * C6412 + C50861 * C6416) * C50000 -
             (C19835 * C6414 + C50861 * C6418) * C50884) *
                C51006 * C39329) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C51194 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C51195 +
           ((C23270 * C2173 + C23254 * C2174 + C23806 * C2175) * C33992 +
            ((C23258 + C23257) * C2173 + C23273 * C2174 +
             (C23283 + C23284) * C2175) *
                C51082) *
               C1974) *
              C51147 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C51195 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C51194 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C2175 +
             (C23284 + C23283) * C2174 + C23272 * C2173) *
                C51082 +
            ((C20850 + C20849) * C2175 + C23269 * C2174 + C23259 * C2173) *
                C33992) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C51194 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C51195 +
           (((C34355 + C34354 + C34353) * C980 +
             (C34352 + C34351 + C34350) * C50879) *
                C51006 * C33992 +
            ((C36141 + C36142 + C36143) * C980 +
             (C36144 + C36145 + C36146) * C50879) *
                C51006 * C51082) *
               C1974) *
              C51147 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C51195 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C51194 -
           (((C17053 * C6008 + C17048 * C6009 + C17052 * C4513 +
              C17047 * C4519 + C17051 * C4514 + C17046 * C4520) *
                 C50879 +
             (C17053 * C6006 + C17048 * C6007 + C17052 * C4507 +
              C17047 * C4515 + C17051 * C4508 + C17046 * C4516) *
                 C980) *
                C51006 * C51082 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C51006 * C33992) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51006 * C39326 +
            (C23249 + C23250) * C51006 * C39327 + C40142 * C39328 +
            C40146 * C39329) *
               C51194 -
           (C40751 * C39329 + C40746 * C39328 +
            (C23253 + C23252) * C51006 * C39327 +
            (C23250 + C23249) * C51006 * C39326) *
               C51195 +
           (C40142 * C39326 + C40146 * C39327 +
            (C24223 + C24224) * C51006 * C39328 +
            (C40754 + C40755) * C51006 * C39329) *
               C1974) *
              C51147 +
          ((C23251 * C51006 * C39326 + C23254 * C51006 * C39327 +
            C23273 * C51006 * C39328 + (C23281 + C23282) * C51006 * C39329) *
               C51195 -
           (C40144 * C39329 + C40145 * C39328 + C23260 * C51006 * C39327 +
            (C20700 + C20699) * C51006 * C39326) *
               C51194 -
           (((C19835 * C24209 + C50861 * C24211) * C50879 +
             (C19835 * C24208 + C50861 * C24210) * C980) *
                C51006 * C39329 +
            (C23282 + C23281) * C51006 * C39328 + C40144 * C39327 +
            C40145 * C39326) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C906 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C901 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C907 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C902 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C908 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C903) *
                   C51006 * C33992 +
               ((C34335 + C34336 + C34337) * C906 +
                (C34338 + C34339 + C34340) * C901 -
                (C34341 + C34342 + C34343) * C907 -
                (C34344 + C34345 + C34346) * C902 +
                (C34663 + C34664 + C34665) * C908 +
                (C34666 + C34667 + C34668) * C903) *
                   C51006 * C51082) *
                  C1558 +
              (((C34343 + C34342 + C34341) * C907 -
                ((C34340 + C34339 + C34338) * C901 +
                 (C34337 + C34336 + C34335) * C906) +
                (C34346 + C34345 + C34344) * C902 -
                (C34665 + C34664 + C34663) * C908 -
                (C34668 + C34667 + C34666) * C903) *
                   C51006 * C33992 +
               ((C34347 + C34348 + C34349) * C907 -
                ((C34350 + C34351 + C34352) * C901 +
                 (C34353 + C34354 + C34355) * C906) +
                (C34356 + C34357 + C34358) * C902 -
                (C17053 * C408 + C17048 * C427 + C17052 * C407 + C17047 * C422 +
                 C17051 * C406 + C17046 * C421) *
                    C908 -
                (C17053 * C428 + C17048 * C438 + C17052 * C426 + C17047 * C437 +
                 C17051 * C425 + C17046 * C436) *
                    C903) *
                   C51006 * C51082) *
                  C50984) *
             C50908 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                  C17047 * C133 + C17053 * C127 + C17048 * C134) *
                     C980 +
                 (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                  C17047 * C147 + C17053 * C138 + C17048 * C148) *
                     C50879) *
                    C51006 * C33992 +
                ((C34335 + C34336 + C34337) * C980 +
                 (C34338 + C34339 + C34340) * C50879) *
                    C51006 * C51082) *
                   C1558 -
               (((C34350 + C34351 + C34352) * C50879 +
                 (C34353 + C34354 + C34355) * C980) *
                    C51006 * C51082 +
                ((C34340 + C34339 + C34338) * C50879 +
                 (C34337 + C34336 + C34335) * C980) *
                    C51006 * C33992) *
                   C50984) *
                  C253 +
              ((((C17955 + C17954 + C17953) * C980 +
                 (C17952 + C17951 + C17950) * C50879) *
                    C51006 * C33992 +
                ((C18379 + C18380 + C18381) * C980 +
                 (C18382 + C18383 + C18384) * C50879) *
                    C51006 * C51082) *
                   C50984 -
               (((C17950 + C17951 + C17952) * C50879 +
                 (C17953 + C17954 + C17955) * C980) *
                    C51006 * C51082 +
                ((C17254 + C17253 + C17252) * C50879 +
                 (C17251 + C17250 + C17249) * C980) *
                    C51006 * C33992) *
                   C1558) *
                  C254 +
              ((((C17269 + C17268 + C17267) * C980 +
                 (C17266 + C17265 + C17264) * C50879) *
                    C51006 * C33992 +
                ((C18883 + C18884 + C18885) * C980 +
                 (C18886 + C18887 + C18888) * C50879) *
                    C51006 * C51082) *
                   C1558 -
               (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
                  C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                     C50879 +
                 (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
                  C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                     C980) *
                    C51006 * C51082 +
                ((C18888 + C18887 + C18886) * C50879 +
                 (C18885 + C18884 + C18883) * C980) *
                    C51006 * C33992) *
                   C50984) *
                  C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C980 +
            (C34338 + C34339 + C34340) * C50879) *
               C51006 * C51082) *
              C1724 -
          (((C34350 + C34351 + C34352) * C50879 +
            (C34353 + C34354 + C34355) * C980) *
               C51006 * C51082 +
           ((C34340 + C34339 + C34338) * C50879 +
            (C34337 + C34336 + C34335) * C980) *
               C51006 * C33992) *
              C1725 +
          (((C34355 + C34354 + C34353) * C980 +
            (C34352 + C34351 + C34350) * C50879) *
               C51006 * C33992 +
           ((C36141 + C36142 + C36143) * C980 +
            (C36144 + C36145 + C36146) * C50879) *
               C51006 * C51082) *
              C1726 -
          (((C17053 * C5408 + C17048 * C5411 + C17052 * C5406 + C17047 * C5410 +
             C17051 * C5405 + C17046 * C5409) *
                C50879 +
            (C17053 * C5402 + C17048 * C5407 + C17052 * C5401 + C17047 * C5404 +
             C17051 * C5400 + C17046 * C5403) *
                C980) *
               C51006 * C51082 +
           ((C36146 + C36145 + C36144) * C50879 +
            (C36143 + C36142 + C36141) * C980) *
               C51006 * C33992) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C2173 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2174 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2175) *
               C33992 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C2173 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C2174 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C2175) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C1558 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C50984) *
              C253 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C50984 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C1558) *
              C254 +
          (((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
                C33992 +
            (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
                C51082) *
               C1558 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C2175 +
             (C20850 + C20849) * C2174 + C23269 * C2173) *
                C51082 +
            ((C21224 + C21223) * C2175 + C21215 * C2174 + C21216 * C2173) *
                C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C2173 +
            (C20699 + C20700) * C2174 + C20711 * C2175) *
               C33992 +
           ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
               C51082) *
              C1724 -
          ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
               C51082 +
           (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
               C33992) *
              C1725 +
          ((C23270 * C2173 + C23254 * C2174 + C23806 * C2175) * C33992 +
           ((C23258 + C23257) * C2173 + C23273 * C2174 +
            (C23283 + C23284) * C2175) *
               C51082) *
              C1726 -
          ((((C19835 * C23245 + C50861 * C23247) * C50879 +
             (C19835 * C23244 + C50861 * C23246) * C980) *
                C2175 +
            (C23282 + C23281) * C2174 + (C24224 + C24223) * C2173) *
               C51082 +
           ((C23284 + C23283) * C2175 + C23272 * C2174 + C24214 * C2173) *
               C33992) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C51006 * C39326 +
           (C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51006 *
               C39327 +
           (C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51006 *
               C39328 +
           (C40571 + C40572 - C40573 - C40574 + C40575 + C40576) * C51006 *
               C39329) *
              C1558 +
          ((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C51006 *
               C39326 +
           (C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C51006 *
               C39327 +
           (C40573 - (C40572 + C40571) + C40574 - C40575 - C40576) * C51006 *
               C39328 +
           (C39536 * C907 - (C24221 * C901 + C24220 * C906) + C39537 * C902 -
            (C19835 * C5402 + C50861 * C5407) * C908 -
            (C19835 * C5408 + C50861 * C5411) * C903) *
               C51006 * C39329) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51006 * C39326 +
            (C23249 + C23250) * C51006 * C39327 + C40142 * C39328 +
            C40146 * C39329) *
               C1558 -
           ((C24224 + C24223) * C51006 * C39329 + C24214 * C51006 * C39328 +
            (C23253 + C23252) * C51006 * C39327 +
            (C23250 + C23249) * C51006 * C39326) *
               C50984) *
              C253 +
          ((C23251 * C51006 * C39326 + C23254 * C51006 * C39327 +
            C23273 * C51006 * C39328 + (C23281 + C23282) * C51006 * C39329) *
               C50984 -
           (C40144 * C39329 + C40145 * C39328 + C23260 * C51006 * C39327 +
            (C20700 + C20699) * C51006 * C39326) *
               C1558) *
              C254 +
          ((C20711 * C51006 * C39326 + C23805 * C51006 * C39327 +
            C23806 * C51006 * C39328 + (C23283 + C23284) * C51006 * C39329) *
               C1558 -
           (((C19835 * C23245 + C50861 * C23247) * C50879 +
             (C19835 * C23244 + C50861 * C23246) * C980) *
                C51006 * C39329 +
            (C23284 + C23283) * C51006 * C39328 + C23269 * C51006 * C39327 +
            C21216 * C51006 * C39326) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C980 +
            (C19835 * C136 + C50861 * C146) * C50879) *
               C51006 * C39326 +
           (C23249 + C23250) * C51006 * C39327 + C40142 * C39328 +
           C40146 * C39329) *
              C1724 -
          (C40751 * C39329 + C40746 * C39328 +
           (C23253 + C23252) * C51006 * C39327 +
           (C23250 + C23249) * C51006 * C39326) *
              C1725 +
          (C40142 * C39326 + C40146 * C39327 +
           (C24223 + C24224) * C51006 * C39328 +
           (C40754 + C40755) * C51006 * C39329) *
              C1726 -
          (((C19835 * C40741 + C50861 * C40743) * C50879 +
            (C19835 * C40740 + C50861 * C40742) * C980) *
               C51006 * C39329 +
           (C40755 + C40754) * C51006 * C39328 + C40751 * C39327 +
           C40746 * C39326) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
               C33992 +
           ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
            C32674 * C2175) *
               C51082) *
              C51194 +
          (((C23637 - (C23636 + C23635) + C23638) * C2173 + C23657 * C2174 +
            C32871 * C2175) *
               C33992 +
           ((C23642 - (C23641 + C23640) + C23643) * C2173 + C23658 * C2174 +
            (C23437 - (C23438 + C23439) + C23440) * C2175) *
               C51082) *
              C51195 +
          ((C24572 * C2173 + C23656 * C2174 +
            (C23439 + C23438 - C23437 - C23440) * C2175) *
               C33992 +
           ((C24569 + C24568 - C24567 - C24570) * C2173 +
            (C23649 + C23648 - C23647 - C23650) * C2174 +
            (C23276 * C50007 + C23277 * C51139 -
             (C19835 * C4505 + C50861 * C4511) * C50000 -
             (C19835 * C4509 + C50861 * C4517) * C50884) *
                C2175) *
               C51082) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51139 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C50007 +
            (C34338 + C34339 + C34340) * C51139 -
            (C34341 + C34342 + C34343) * C50000 -
            (C34344 + C34345 + C34346) * C50884) *
               C51006 * C51082) *
              C51194 +
          (((C34343 + C34342 + C34341) * C50000 -
            ((C34340 + C34339 + C34338) * C51139 +
             (C34337 + C34336 + C34335) * C50007) +
            (C34346 + C34345 + C34344) * C50884) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C50000 -
            ((C34350 + C34351 + C34352) * C51139 +
             (C34353 + C34354 + C34355) * C50007) +
            (C34356 + C34357 + C34358) * C50884) *
               C51006 * C51082) *
              C51195 +
          (((C34355 + C34354 + C34353) * C50007 +
            (C34352 + C34351 + C34350) * C51139 -
            (C34349 + C34348 + C34347) * C50000 -
            (C34358 + C34357 + C34356) * C50884) *
               C51006 * C33992 +
           ((C36141 + C36142 + C36143) * C50007 +
            (C36144 + C36145 + C36146) * C51139 -
            (C17053 * C1728 + C17048 * C1736 + C17052 * C1729 + C17047 * C1737 +
             C17051 * C1730 + C17046 * C1738) *
                C50000 -
            (C17053 * C1732 + C17048 * C1740 + C17052 * C1733 + C17047 * C1741 +
             C17051 * C1734 + C17046 * C1742) *
                C50884) *
               C51006 * C51082) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C50007 +
            (C19835 * C136 + C50861 * C146) * C51139 -
            (C19835 * C126 + C50861 * C133) * C50000 -
            (C19835 * C137 + C50861 * C147) * C50884) *
               C51006 * C39326 +
           (C23635 + C23636 - C23637 - C23638) * C51006 * C39327 +
           C40984 * C39328 + C40992 * C39329) *
              C51194 +
          ((C23637 - (C23636 + C23635) + C23638) * C51006 * C39326 +
           (C23642 - (C23641 + C23640) + C23643) * C51006 * C39327 +
           (C24567 - (C24568 + C24569) + C24570) * C51006 * C39328 +
           (C40986 - (C40987 + C40988) + C40989) * C51006 * C39329) *
              C51195 +
          (C40984 * C39326 + C40992 * C39327 +
           (C40988 + C40987 - C40986 - C40989) * C51006 * C39328 +
           (C40752 * C50007 + C40753 * C51139 -
            (C19835 * C7318 + C50861 * C7322) * C50000 -
            (C19835 * C7320 + C50861 * C7324) * C50884) *
               C51006 * C39329) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C1558 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C50984) *
              C253 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C50984 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C1558) *
              C254 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C51006 * C33992 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51006 * C51082) *
               C1558 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51006 * C51082 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C51006 * C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C906 +
            (C34338 + C34339 + C34340) * C901 -
            (C34341 + C34342 + C34343) * C907 -
            (C34344 + C34345 + C34346) * C902 +
            (C34663 + C34664 + C34665) * C908 +
            (C34666 + C34667 + C34668) * C903) *
               C51006 * C51082) *
              C1558 +
          (((C34343 + C34342 + C34341) * C907 -
            ((C34340 + C34339 + C34338) * C901 +
             (C34337 + C34336 + C34335) * C906) +
            (C34346 + C34345 + C34344) * C902 -
            (C34665 + C34664 + C34663) * C908 -
            (C34668 + C34667 + C34666) * C903) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C907 -
            ((C34350 + C34351 + C34352) * C901 +
             (C34353 + C34354 + C34355) * C906) +
            (C34356 + C34357 + C34358) * C902 -
            (C17053 * C408 + C17048 * C427 + C17052 * C407 + C17047 * C422 +
             C17051 * C406 + C17046 * C421) *
                C908 -
            (C17053 * C428 + C17048 * C438 + C17052 * C426 + C17047 * C437 +
             C17051 * C425 + C17046 * C436) *
                C903) *
               C51006 * C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C2173 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2174 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2175) *
               C33992 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C2173 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C2174 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C2175) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C1558 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C50984) *
              C253 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C50984 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C1558) *
              C254 +
          (((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
                C33992 +
            (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
                C51082) *
               C1558 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C2175 +
             (C20850 + C20849) * C2174 + C23269 * C2173) *
                C51082 +
            ((C21224 + C21223) * C2175 + C21215 * C2174 + C21216 * C2173) *
                C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C906 +
            (C19835 * C136 + C50861 * C146) * C901 -
            (C19835 * C126 + C50861 * C133) * C907 -
            (C19835 * C137 + C50861 * C147) * C902 +
            (C19835 * C127 + C50861 * C134) * C908 +
            (C19835 * C138 + C50861 * C148) * C903) *
               C51006 * C39326 +
           (C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C51006 *
               C39327 +
           (C23959 + C23960 - C23961 - C23962 + C23963 + C23964) * C51006 *
               C39328 +
           (C40571 + C40572 - C40573 - C40574 + C40575 + C40576) * C51006 *
               C39329) *
              C1558 +
          ((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C51006 *
               C39326 +
           (C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C51006 *
               C39327 +
           (C40573 - (C40572 + C40571) + C40574 - C40575 - C40576) * C51006 *
               C39328 +
           (C39536 * C907 - (C24221 * C901 + C24220 * C906) + C39537 * C902 -
            (C19835 * C5402 + C50861 * C5407) * C908 -
            (C19835 * C5408 + C50861 * C5411) * C903) *
               C51006 * C39329) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C51006 * C39326 +
            (C23249 + C23250) * C51006 * C39327 + C40142 * C39328 +
            C40146 * C39329) *
               C1558 -
           ((C24224 + C24223) * C51006 * C39329 + C24214 * C51006 * C39328 +
            (C23253 + C23252) * C51006 * C39327 +
            (C23250 + C23249) * C51006 * C39326) *
               C50984) *
              C253 +
          ((C23251 * C51006 * C39326 + C23254 * C51006 * C39327 +
            C23273 * C51006 * C39328 + (C23281 + C23282) * C51006 * C39329) *
               C50984 -
           (C40144 * C39329 + C40145 * C39328 + C23260 * C51006 * C39327 +
            (C20700 + C20699) * C51006 * C39326) *
               C1558) *
              C254 +
          ((C20711 * C51006 * C39326 + C23805 * C51006 * C39327 +
            C23806 * C51006 * C39328 + (C23283 + C23284) * C51006 * C39329) *
               C1558 -
           (((C19835 * C23245 + C50861 * C23247) * C50879 +
             (C19835 * C23244 + C50861 * C23246) * C980) *
                C51006 * C39329 +
            (C23284 + C23283) * C51006 * C39328 + C23269 * C51006 * C39327 +
            C21216 * C51006 * C39326) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C542 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51190 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C543 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C51191 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C544 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C539) *
               C51006 * C51198 +
           ((C28137 + C28138) * C542 + (C28139 + C28140) * C51190 -
            (C28141 + C28142) * C543 - (C28143 + C28144) * C51191 +
            (C28565 + C28566) * C544 + (C28567 + C28568) * C539) *
               C51006 * C51199 +
           (C44976 * C542 + C44977 * C51190 - C44978 * C543 - C44979 * C51191 +
            (C49961 * C406 + C51132 * C421 + C49954 * C407 + C50866 * C422) *
                C544 +
            (C49961 * C425 + C51132 * C436 + C49954 * C426 + C50866 * C437) *
                C539) *
               C51006 * C44682) *
              C50920 * C51147 +
          (((C25025 + C25024) * C543 -
            ((C25023 + C25022) * C51190 + (C25021 + C25020) * C542) +
            (C25027 + C25026) * C51191 - (C25364 + C25363) * C544 -
            (C25366 + C25365) * C539) *
               C51006 * C51198 +
           (C28831 * C543 - (C28832 * C51190 + C28833 * C542) +
            C28834 * C51191 - (C28360 + C28359) * C544 -
            (C28362 + C28361) * C539) *
               C51006 * C51199 +
           ((C28153 + C28154) * C543 - (C29369 * C51190 + C29370 * C542) +
            (C28155 + C28156) * C51191 -
            (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
             C51132 * C1104) *
                C544 -
            (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
             C51132 * C1108) *
                C539) *
               C51006 * C44682) *
              C50920 * C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C256 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C251 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C257 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51006 * C51198 +
            ((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
             (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
                C51006 * C51199 +
            C44999 * C44682) *
               C51148 +
           (((C28142 + C28141) * C257 -
             ((C28140 + C28139) * C251 + (C28138 + C28137) * C256) +
             (C28144 + C28143) * C50884) *
                C51006 * C51198 +
            ((C28145 + C28146) * C257 -
             ((C28147 + C28148) * C251 + (C28149 + C28150) * C256) +
             (C28151 + C28152) * C50884) *
                C51006 * C51199 +
            ((C44992 + C44993) * C257 -
             ((C30589 + C30588) * C251 + (C30587 + C30586) * C256) +
             (C44994 + C44995) * C50884) *
                C51006 * C44682) *
               C50984) *
              C51147 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C50884) *
                C51006 * C51198 +
            C28848 * C51006 * C51199 +
            ((C28153 + C28154) * C257 - (C29369 * C251 + C29370 * C256) +
             (C28155 + C28156) * C50884) *
                C51006 * C44682) *
               C51148 +
           (C28847 * C51006 * C51198 +
            (C29373 * C256 + C29374 * C251 - (C28154 + C28153) * C257 -
             (C28156 + C28155) * C50884) *
                C51006 * C51199 +
            ((C29389 + C29390) * C256 + (C29391 + C29392) * C251 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C257 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51006 * C44682) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C256 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C251 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C257 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51006 * C51198 +
           ((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
            (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
               C51006 * C51199 +
           ((C28150 + C28149) * C256 + (C28148 + C28147) * C251 -
            (C28146 + C28145) * C257 - (C28152 + C28151) * C50884) *
               C51006 * C44682) *
              C50920 * C253 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C50884) *
               C51006 * C51198 +
           C28848 * C51006 * C51199 +
           ((C28153 + C28154) * C257 - (C29369 * C251 + C29370 * C256) +
            (C28155 + C28156) * C50884) *
               C51006 * C44682) *
              C50920 * C254 +
          (C25054 * C51006 * C51198 +
           (C30055 * C256 + C30056 * C251 - (C25752 + C25751) * C257 -
            (C25758 + C25757) * C50884) *
               C51006 * C51199 +
           ((C26189 + C26190) * C256 + (C26191 + C26192) * C251 -
            (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
             C51132 * C2569) *
                C257 -
            (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
             C51132 * C2575) *
                C50884) *
               C51006 * C44682) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
               C121 +
           (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
               C109 -
           (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
               C122 -
           (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
               C110 +
           (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
               C123 +
           (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
               C111 -
           (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
               C124 -
           (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
               C112) *
              C51006 * C51198 +
          ((C28137 + C28138) * C121 + (C28139 + C28140) * C109 -
           (C28141 + C28142) * C122 - (C28143 + C28144) * C110 +
           (C28565 + C28566) * C123 + (C28567 + C28568) * C111 -
           (C49954 * C402 + C50866 * C412 + C49961 * C401 + C51132 * C411) *
               C124 -
           (C49954 * C418 + C50866 * C433 + C49961 * C413 + C51132 * C429) *
               C112) *
              C51006 * C51199 +
          ((C28150 + C28149) * C121 + (C28148 + C28147) * C109 -
           (C28146 + C28145) * C122 - (C28152 + C28151) * C110 +
           (C49961 * C406 + C51132 * C421 + C49954 * C407 + C50866 * C422) *
               C123 +
           (C49961 * C425 + C51132 * C436 + C49954 * C426 + C50866 * C437) *
               C111 -
           (C49954 * C408 + C50866 * C427 + C49961 * C407 + C51132 * C422) *
               C124 -
           (C49954 * C428 + C50866 * C438 + C49961 * C426 + C51132 * C437) *
               C112) *
              C51006 * C44682) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C256 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C251 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C257 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51006 * C51198 +
           ((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
            (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
               C51006 * C51199 +
           C44999 * C44682) *
              C396 +
          (((C28142 + C28141) * C257 -
            ((C28140 + C28139) * C251 + (C28138 + C28137) * C256) +
            (C28144 + C28143) * C50884) *
               C51006 * C51198 +
           ((C28145 + C28146) * C257 -
            ((C28147 + C28148) * C251 + (C28149 + C28150) * C256) +
            (C28151 + C28152) * C50884) *
               C51006 * C51199 +
           ((C44992 + C44993) * C257 -
            ((C30589 + C30588) * C251 + (C30587 + C30586) * C256) +
            (C44994 + C44995) * C50884) *
               C51006 * C44682) *
              C397 +
          (C44999 * C51198 +
           ((C30586 + C30587) * C256 + (C30588 + C30589) * C251 -
            (C44993 + C44992) * C257 - (C44995 + C44994) * C50884) *
               C51006 * C51199 +
           ((C49961 * C5400 + C51132 * C5403 + C49954 * C5401 +
             C50866 * C5404) *
                C256 +
            (C49961 * C5405 + C51132 * C5409 + C49954 * C5406 +
             C50866 * C5410) *
                C251 -
            (C49954 * C5402 + C50866 * C5407 + C49961 * C5401 +
             C51132 * C5404) *
                C257 -
            (C49954 * C5408 + C50866 * C5411 + C49961 * C5406 +
             C51132 * C5410) *
                C50884) *
               C51006 * C44682) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C542 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51190 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C543 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C51191 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C544 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C539) *
               C51006 * C51198 +
           ((C28137 + C28138) * C542 + (C28139 + C28140) * C51190 -
            (C28141 + C28142) * C543 - (C28143 + C28144) * C51191 +
            (C28565 + C28566) * C544 + (C28567 + C28568) * C539) *
               C51006 * C51199 +
           (C44976 * C542 + C44977 * C51190 - C44978 * C543 - C44979 * C51191 +
            (C45300 + C45301) * C544 + (C45302 + C45303) * C539) *
               C51006 * C44682) *
              C51148 +
          (((C28142 + C28141) * C543 -
            ((C28140 + C28139) * C51190 + (C28138 + C28137) * C542) +
            (C28144 + C28143) * C51191 - (C28566 + C28565) * C544 -
            (C28568 + C28567) * C539) *
               C51006 * C51198 +
           ((C28145 + C28146) * C543 -
            ((C28147 + C28148) * C51190 + (C28149 + C28150) * C542) +
            (C28151 + C28152) * C51191 - (C45301 + C45300) * C544 -
            (C45303 + C45302) * C539) *
               C51006 * C51199 +
           ((C44992 + C44993) * C543 -
            ((C30589 + C30588) * C51190 + (C30587 + C30586) * C542) +
            (C44994 + C44995) * C51191 -
            (C49954 * C1728 + C50866 * C1736 + C49961 * C1729 +
             C51132 * C1737) *
                C544 -
            (C49954 * C1732 + C50866 * C1740 + C49961 * C1733 +
             C51132 * C1741) *
                C539) *
               C51006 * C44682) *
              C50984) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
               C121 +
           (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
               C109 -
           (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
               C122 -
           (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
               C110 +
           (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
               C123 +
           (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
               C111 -
           (C49954 * C129 + C50866 * C140 + C49961 * C128 + C51132 * C135) *
               C124 -
           (C49954 * C141 + C50866 * C150 + C49961 * C139 + C51132 * C149) *
               C112) *
              C51006 * C51198 +
          ((C28137 + C28138) * C121 + (C28139 + C28140) * C109 -
           (C28141 + C28142) * C122 - (C28143 + C28144) * C110 +
           (C28565 + C28566) * C123 + (C28567 + C28568) * C111 -
           (C49954 * C402 + C50866 * C412 + C49961 * C401 + C51132 * C411) *
               C124 -
           (C49954 * C418 + C50866 * C433 + C49961 * C413 + C51132 * C429) *
               C112) *
              C51006 * C51199 +
          ((C28150 + C28149) * C121 + (C28148 + C28147) * C109 -
           (C28146 + C28145) * C122 - (C28152 + C28151) * C110 +
           (C49961 * C406 + C51132 * C421 + C49954 * C407 + C50866 * C422) *
               C123 +
           (C49961 * C425 + C51132 * C436 + C49954 * C426 + C50866 * C437) *
               C111 -
           (C49954 * C408 + C50866 * C427 + C49961 * C407 + C51132 * C422) *
               C124 -
           (C49954 * C428 + C50866 * C438 + C49961 * C426 + C51132 * C437) *
               C112) *
              C51006 * C44682) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C256 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C251 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C257 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51006 * C51198 +
           ((C28137 + C28138) * C256 + (C28139 + C28140) * C251 -
            (C28141 + C28142) * C257 - (C28143 + C28144) * C50884) *
               C51006 * C51199 +
           ((C28150 + C28149) * C256 + (C28148 + C28147) * C251 -
            (C28146 + C28145) * C257 - (C28152 + C28151) * C50884) *
               C51006 * C44682) *
              C50920 * C253 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C50884) *
               C51006 * C51198 +
           C28848 * C51006 * C51199 +
           ((C28153 + C28154) * C257 - (C29369 * C251 + C29370 * C256) +
            (C28155 + C28156) * C50884) *
               C51006 * C44682) *
              C50920 * C254 +
          (C25054 * C51006 * C51198 +
           (C30055 * C256 + C30056 * C251 - (C25752 + C25751) * C257 -
            (C25758 + C25757) * C50884) *
               C51006 * C51199 +
           ((C26189 + C26190) * C256 + (C26191 + C26192) * C251 -
            (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
             C51132 * C2569) *
                C257 -
            (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
             C51132 * C2575) *
                C50884) *
               C51006 * C44682) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C50007 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51139 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C50000 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51006 * C51198 +
           ((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
            (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
               C51006 * C51199 +
           (C44976 * C50007 + C44977 * C51139 - C44978 * C50000 -
            C44979 * C50884) *
               C51006 * C44682) *
              C50920 * C51192 +
          (((C25025 + C25024) * C50000 -
            ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
            (C25027 + C25026) * C50884) *
               C51006 * C51198 +
           C29860 * C51006 * C51199 +
           ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
            (C28155 + C28156) * C50884) *
               C51006 * C44682) *
              C50920 * C51193 +
          (C26345 * C51006 * C51198 +
           (C30055 * C50007 + C30056 * C51139 - (C25752 + C25751) * C50000 -
            (C25758 + C25757) * C50884) *
               C51006 * C51199 +
           ((C26189 + C26190) * C50007 + (C26191 + C26192) * C51139 -
            (C49954 * C2567 + C50866 * C2572 + C49961 * C2566 +
             C51132 * C2569) *
                C50000 -
            (C49954 * C2573 + C50866 * C2576 + C49961 * C2571 +
             C51132 * C2575) *
                C50884) *
               C51006 * C44682) *
              C50920 * C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C51198 +
            ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
                C51199 +
            C45892 * C44682) *
               C51148 -
           (((C30589 + C30588) * C50879 + (C30587 + C30586) * C980) * C51006 *
                C44682 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51006 *
                C51199 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51006 *
                C51198) *
               C50984) *
              C51192 +
          ((C29383 * C51006 * C51198 + C29394 * C51006 * C51199 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51006 *
                C44682) *
               C50984 -
           (C45890 * C44682 + C29386 * C51006 * C51199 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
                C51198) *
               C51148) *
              C51193 +
          ((C26015 * C51006 * C51198 + C30059 * C51006 * C51199 +
            ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51006 *
                C44682) *
               C51148 -
           (((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
              C51132 * C4518) *
                 C50879 +
             (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
              C51132 * C4512) *
                 C980) *
                C51006 * C44682 +
            ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51006 *
                C51199 +
            C26702 * C51006 * C51198) *
               C50984) *
              C1213)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C980 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C50879) *
               C51006 * C51198 +
           ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
               C51199 +
           (C44976 * C980 + C44977 * C50879) * C51006 * C44682) *
              C50920 * C976 -
          (C29393 * C51006 * C44682 + C29386 * C51006 * C51199 +
           ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
               C51198) *
              C50920 * C977 +
          (C26015 * C51006 * C51198 + C30059 * C51006 * C51199 +
           ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51006 *
               C44682) *
              C50920 * C978 -
          (((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
             C51132 * C3572) *
                C50879 +
            (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
             C51132 * C3570) *
                C980) *
               C51006 * C44682 +
           ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51006 *
               C51199 +
           C26022 * C51006 * C51198) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51006 * C51198 +
           ((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
            (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
            (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
               C51006 * C51199 +
           (C44976 * C906 + C44977 * C901 - C44978 * C907 - C44979 * C902 +
            (C45300 + C45301) * C908 + (C45302 + C45303) * C903) *
               C51006 * C44682) *
              C50920 * C904 +
          (((C25025 + C25024) * C907 -
            ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
            (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
            (C25366 + C25365) * C903) *
               C51006 * C51198 +
           (C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
            (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
               C51006 * C51199 +
           ((C28153 + C28154) * C907 - (C29369 * C901 + C29370 * C906) +
            (C28155 + C28156) * C902 -
            (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
             C51132 * C1104) *
                C908 -
            (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
             C51132 * C1108) *
                C903) *
               C51006 * C44682) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C51198 +
            ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
                C51199 +
            C45892 * C44682) *
               C396 -
           (((C30589 + C30588) * C50879 + (C30587 + C30586) * C980) * C51006 *
                C44682 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51006 *
                C51199 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51006 *
                C51198) *
               C397 +
           (C45892 * C51198 +
            ((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C51006 *
                C51199 +
            ((C49961 * C5400 + C51132 * C5403 + C49954 * C5401 +
              C50866 * C5404) *
                 C980 +
             (C49961 * C5405 + C51132 * C5409 + C49954 * C5406 +
              C50866 * C5410) *
                 C50879) *
                C51006 * C44682) *
               C398) *
              C904 +
          ((C29383 * C51006 * C51198 + C29394 * C51006 * C51199 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51006 *
                C44682) *
               C397 -
           (C45890 * C44682 + C29386 * C51006 * C51199 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
                C51198) *
               C396 -
           (((C49954 * C6414 + C50866 * C6418 + C49961 * C6415 +
              C51132 * C6419) *
                 C50879 +
             (C49954 * C6412 + C50866 * C6416 + C49961 * C6413 +
              C51132 * C6417) *
                 C980) *
                C51006 * C44682 +
            ((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C51006 *
                C51199 +
            C45890 * C51198) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51006 * C51198 +
            ((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
             (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                C51006 * C51199 +
            (C44976 * C50007 + C44977 * C51139 - C44978 * C50000 -
             C44979 * C50884) *
                C51006 * C44682) *
               C51148 +
           (((C28142 + C28141) * C50000 -
             ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
             (C28144 + C28143) * C50884) *
                C51006 * C51198 +
            ((C28145 + C28146) * C50000 -
             ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
             (C28151 + C28152) * C50884) *
                C51006 * C51199 +
            ((C44992 + C44993) * C50000 -
             ((C30589 + C30588) * C51139 + (C30587 + C30586) * C50007) +
             (C44994 + C44995) * C50884) *
                C51006 * C44682) *
               C50984) *
              C904 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50884) *
                C51006 * C51198 +
            C29860 * C51006 * C51199 +
            ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
             (C28155 + C28156) * C50884) *
                C51006 * C44682) *
               C51148 +
           (C29859 * C51006 * C51198 +
            (C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
             (C28156 + C28155) * C50884) *
                C51006 * C51199 +
            ((C29389 + C29390) * C50007 + (C29391 + C29392) * C51139 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C50000 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51006 * C44682) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51006 * C51198 +
           ((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
            (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
            (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
               C51006 * C51199 +
           (C44976 * C906 + C44977 * C901 - C44978 * C907 - C44979 * C902 +
            (C45300 + C45301) * C908 + (C45302 + C45303) * C903) *
               C51006 * C44682) *
              C50920 * C904 +
          (((C25025 + C25024) * C907 -
            ((C25023 + C25022) * C901 + (C25021 + C25020) * C906) +
            (C25027 + C25026) * C902 - (C25364 + C25363) * C908 -
            (C25366 + C25365) * C903) *
               C51006 * C51198 +
           (C28831 * C907 - (C28832 * C901 + C28833 * C906) + C28834 * C902 -
            (C28360 + C28359) * C908 - (C28362 + C28361) * C903) *
               C51006 * C51199 +
           ((C28153 + C28154) * C907 - (C29369 * C901 + C29370 * C906) +
            (C28155 + C28156) * C902 -
            (C49954 * C1095 + C50866 * C1103 + C49961 * C1096 +
             C51132 * C1104) *
                C908 -
            (C49954 * C1099 + C50866 * C1107 + C49961 * C1100 +
             C51132 * C1108) *
                C903) *
               C51006 * C44682) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C980 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C50879) *
               C51006 * C51198 +
           ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
               C51199 +
           (C44976 * C980 + C44977 * C50879) * C51006 * C44682) *
              C50920 * C976 -
          (C29393 * C51006 * C44682 + C29386 * C51006 * C51199 +
           ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
               C51198) *
              C50920 * C977 +
          (C26015 * C51006 * C51198 + C30059 * C51006 * C51199 +
           ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51006 *
               C44682) *
              C50920 * C978 -
          (((C49954 * C3567 + C50866 * C3571 + C49961 * C3568 +
             C51132 * C3572) *
                C50879 +
            (C49954 * C3565 + C50866 * C3569 + C49961 * C3566 +
             C51132 * C3570) *
                C980) *
               C51006 * C44682 +
           ((C26701 + C26700) * C50879 + (C26699 + C26698) * C980) * C51006 *
               C51199 +
           C26022 * C51006 * C51198) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C50007 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C51139 -
             (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                 C50000 -
             (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                 C50884) *
                C51006 * C51198 +
            ((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
             (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
                C51006 * C51199 +
            (C44976 * C50007 + C44977 * C51139 - C44978 * C50000 -
             C44979 * C50884) *
                C51006 * C44682) *
               C1558 +
           (((C28142 + C28141) * C50000 -
             ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
             (C28144 + C28143) * C50884) *
                C51006 * C51198 +
            ((C28145 + C28146) * C50000 -
             ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
             (C28151 + C28152) * C50884) *
                C51006 * C51199 +
            ((C44992 + C44993) * C50000 - (C46769 * C51139 + C46770 * C50007) +
             (C44994 + C44995) * C50884) *
                C51006 * C44682) *
               C50984) *
              C51147 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51139 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50884) *
                C51006 * C51198 +
            C29860 * C51006 * C51199 +
            ((C28153 + C28154) * C50000 - (C29369 * C51139 + C29370 * C50007) +
             (C28155 + C28156) * C50884) *
                C51006 * C44682) *
               C1558 +
           (C29859 * C51006 * C51198 +
            (C29373 * C50007 + C29374 * C51139 - (C28154 + C28153) * C50000 -
             (C28156 + C28155) * C50884) *
                C51006 * C51199 +
            ((C29389 + C29390) * C50007 + (C29391 + C29392) * C51139 -
             (C49954 * C6006 + C50866 * C6007 + C49961 * C4507 +
              C51132 * C4515) *
                 C50000 -
             (C49954 * C6008 + C50866 * C6009 + C49961 * C4513 +
              C51132 * C4519) *
                 C50884) *
                C51006 * C44682) *
               C50984) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C51198 +
            ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
                C51199 +
            C45892 * C44682) *
               C51194 -
           (C46786 * C44682 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51006 *
                C51199 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51006 *
                C51198) *
               C51195 +
           (C45892 * C51198 +
            ((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C51006 *
                C51199 +
            ((C46781 + C46782) * C980 + (C46783 + C46784) * C50879) * C51006 *
                C44682) *
               C1974) *
              C51147 +
          ((C29383 * C51006 * C51198 + C29394 * C51006 * C51199 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51006 *
                C44682) *
               C51195 -
           (C45890 * C44682 + C29386 * C51006 * C51199 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
                C51198) *
               C51194 -
           (((C49954 * C6414 + C50866 * C6418 + C49961 * C6415 +
              C51132 * C6419) *
                 C50879 +
             (C49954 * C6412 + C50866 * C6416 + C49961 * C6413 +
              C51132 * C6417) *
                 C980) *
                C51006 * C44682 +
            ((C29392 + C29391) * C50879 + (C29390 + C29389) * C980) * C51006 *
                C51199 +
            C45890 * C51198) *
               C1974) *
              C50958)) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C51198 +
            ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
                C51199 +
            C45892 * C44682) *
               C1558 -
           (((C30589 + C30588) * C50879 + (C30587 + C30586) * C980) * C51006 *
                C44682 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51006 *
                C51199 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51006 *
                C51198) *
               C50984) *
              C253 +
          ((C29383 * C51006 * C51198 + C29394 * C51006 * C51199 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51006 *
                C44682) *
               C50984 -
           (C45890 * C44682 + C29386 * C51006 * C51199 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
                C51198) *
               C1558) *
              C254 +
          ((C26015 * C51006 * C51198 + C30059 * C51006 * C51199 +
            ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51006 *
                C44682) *
               C1558 -
           (((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
              C51132 * C4518) *
                 C50879 +
             (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
              C51132 * C4512) *
                 C980) *
                C51006 * C44682 +
            ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51006 *
                C51199 +
            C26702 * C51006 * C51198) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51006 * C51198 +
           ((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
            (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
            (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
               C51006 * C51199 +
           (C44976 * C906 + C44977 * C901 - C44978 * C907 - C44979 * C902 +
            (C45300 + C45301) * C908 + (C45302 + C45303) * C903) *
               C51006 * C44682) *
              C1558 +
          (((C28142 + C28141) * C907 -
            ((C28140 + C28139) * C901 + (C28138 + C28137) * C906) +
            (C28144 + C28143) * C902 - (C28566 + C28565) * C908 -
            (C28568 + C28567) * C903) *
               C51006 * C51198 +
           ((C28145 + C28146) * C907 -
            ((C28147 + C28148) * C901 + (C28149 + C28150) * C906) +
            (C28151 + C28152) * C902 - (C45301 + C45300) * C908 -
            (C45303 + C45302) * C903) *
               C51006 * C51199 +
           ((C44992 + C44993) * C907 -
            ((C30589 + C30588) * C901 + (C30587 + C30586) * C906) +
            (C44994 + C44995) * C902 -
            (C49954 * C1728 + C50866 * C1736 + C49961 * C1729 +
             C51132 * C1737) *
                C908 -
            (C49954 * C1732 + C50866 * C1740 + C49961 * C1733 +
             C51132 * C1741) *
                C903) *
               C51006 * C44682) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C980 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C50879) *
               C51006 * C51198 +
           ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
               C51199 +
           C45892 * C44682) *
              C1724 -
          (C46786 * C44682 +
           ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51006 *
               C51199 +
           ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51006 *
               C51198) *
              C1725 +
          (C45892 * C51198 +
           ((C30586 + C30587) * C980 + (C30588 + C30589) * C50879) * C51006 *
               C51199 +
           ((C46781 + C46782) * C980 + (C46783 + C46784) * C50879) * C51006 *
               C44682) *
              C1726 -
          (((C49954 * C7320 + C50866 * C7324 + C49961 * C7321 +
             C51132 * C7325) *
                C50879 +
            (C49954 * C7318 + C50866 * C7322 + C49961 * C7319 +
             C51132 * C7323) *
                C980) *
               C51006 * C44682 +
           ((C46784 + C46783) * C50879 + (C46782 + C46781) * C980) * C51006 *
               C51199 +
           C46786 * C51198) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C50007 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C51139 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C50000 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C50884) *
               C51006 * C51198 +
           ((C28137 + C28138) * C50007 + (C28139 + C28140) * C51139 -
            (C28141 + C28142) * C50000 - (C28143 + C28144) * C50884) *
               C51006 * C51199 +
           C47134 * C44682) *
              C51194 +
          (((C28142 + C28141) * C50000 -
            ((C28140 + C28139) * C51139 + (C28138 + C28137) * C50007) +
            (C28144 + C28143) * C50884) *
               C51006 * C51198 +
           ((C28145 + C28146) * C50000 -
            ((C28147 + C28148) * C51139 + (C28149 + C28150) * C50007) +
            (C28151 + C28152) * C50884) *
               C51006 * C51199 +
           ((C44992 + C44993) * C50000 - (C46769 * C51139 + C46770 * C50007) +
            (C44994 + C44995) * C50884) *
               C51006 * C44682) *
              C51195 +
          (C47134 * C51198 +
           ((C30586 + C30587) * C50007 + (C30588 + C30589) * C51139 -
            (C44993 + C44992) * C50000 - (C44995 + C44994) * C50884) *
               C51006 * C51199 +
           ((C46781 + C46782) * C50007 + (C46783 + C46784) * C51139 -
            (C49954 * C5402 + C50866 * C5407 + C49961 * C5401 +
             C51132 * C5404) *
                C50000 -
            (C49954 * C5408 + C50866 * C5411 + C49961 * C5406 +
             C51132 * C5410) *
                C50884) *
               C51006 * C44682) *
              C1974) *
         C50908) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                C906 +
            (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                C901 -
            (C49954 * C127 + C50866 * C134 + C49961 * C126 + C51132 * C133) *
                C907 -
            (C49954 * C138 + C50866 * C148 + C49961 * C137 + C51132 * C147) *
                C902 +
            (C49961 * C127 + C51132 * C134 + C49954 * C128 + C50866 * C135) *
                C908 +
            (C49961 * C138 + C51132 * C148 + C49954 * C139 + C50866 * C149) *
                C903) *
               C51006 * C51198 +
           ((C28137 + C28138) * C906 + (C28139 + C28140) * C901 -
            (C28141 + C28142) * C907 - (C28143 + C28144) * C902 +
            (C28565 + C28566) * C908 + (C28567 + C28568) * C903) *
               C51006 * C51199 +
           (C44976 * C906 + C44977 * C901 - C44978 * C907 - C44979 * C902 +
            (C45300 + C45301) * C908 + (C45302 + C45303) * C903) *
               C51006 * C44682) *
              C1558 +
          (((C28142 + C28141) * C907 -
            ((C28140 + C28139) * C901 + (C28138 + C28137) * C906) +
            (C28144 + C28143) * C902 - (C28566 + C28565) * C908 -
            (C28568 + C28567) * C903) *
               C51006 * C51198 +
           ((C28145 + C28146) * C907 -
            ((C28147 + C28148) * C901 + (C28149 + C28150) * C906) +
            (C28151 + C28152) * C902 - (C45301 + C45300) * C908 -
            (C45303 + C45302) * C903) *
               C51006 * C51199 +
           ((C44992 + C44993) * C907 -
            ((C30589 + C30588) * C901 + (C30587 + C30586) * C906) +
            (C44994 + C44995) * C902 -
            (C49954 * C1728 + C50866 * C1736 + C49961 * C1729 +
             C51132 * C1737) *
                C908 -
            (C49954 * C1732 + C50866 * C1740 + C49961 * C1733 +
             C51132 * C1741) *
                C903) *
               C51006 * C44682) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51132 * C132 + C49954 * C126 + C50866 * C133) *
                 C980 +
             (C49961 * C136 + C51132 * C146 + C49954 * C137 + C50866 * C147) *
                 C50879) *
                C51006 * C51198 +
            ((C28137 + C28138) * C980 + (C28139 + C28140) * C50879) * C51006 *
                C51199 +
            C45892 * C44682) *
               C1558 -
           (((C30589 + C30588) * C50879 + (C30587 + C30586) * C980) * C51006 *
                C44682 +
            ((C28147 + C28148) * C50879 + (C28149 + C28150) * C980) * C51006 *
                C51199 +
            ((C28140 + C28139) * C50879 + (C28138 + C28137) * C980) * C51006 *
                C51198) *
               C50984) *
              C253 +
          ((C29383 * C51006 * C51198 + C29394 * C51006 * C51199 +
            ((C29389 + C29390) * C980 + (C29391 + C29392) * C50879) * C51006 *
                C44682) *
               C50984 -
           (C45890 * C44682 + C29386 * C51006 * C51199 +
            ((C25023 + C25022) * C50879 + (C25021 + C25020) * C980) * C51006 *
                C51198) *
               C1558) *
              C254 +
          ((C26015 * C51006 * C51198 + C30059 * C51006 * C51199 +
            ((C26189 + C26190) * C980 + (C26191 + C26192) * C50879) * C51006 *
                C44682) *
               C1558 -
           (((C49954 * C4509 + C50866 * C4517 + C49961 * C4510 +
              C51132 * C4518) *
                 C50879 +
             (C49954 * C4505 + C50866 * C4511 + C49961 * C4506 +
              C51132 * C4512) *
                 C980) *
                C51006 * C44682 +
            ((C26192 + C26191) * C50879 + (C26190 + C26189) * C980) * C51006 *
                C51199 +
            C26702 * C51006 * C51198) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C542 +
            (C34338 + C34339 + C34340) * C51190 -
            (C34341 + C34342 + C34343) * C543 -
            (C34344 + C34345 + C34346) * C51191 +
            (C17051 * C400 + C17046 * C410 + C17052 * C401 + C17047 * C411 +
             C17053 * C402 + C17048 * C412) *
                C544 +
            (C17051 * C414 + C17046 * C430 + C17052 * C413 + C17047 * C429 +
             C17053 * C418 + C17048 * C433) *
                C539) *
               C51006 * C51082) *
              C50920 * C51147 +
          (((C17257 + C17256 + C17255) * C543 -
            ((C17254 + C17253 + C17252) * C51190 +
             (C17251 + C17250 + C17249) * C542) +
            (C17260 + C17259 + C17258) * C51191 -
            (C17579 + C17578 + C17577) * C544 -
            (C17582 + C17581 + C17580) * C539) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C543 -
            ((C17950 + C17951 + C17952) * C51190 +
             (C17953 + C17954 + C17955) * C542) +
            (C17956 + C17957 + C17958) * C51191 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C544 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C539) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C2173 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C2174 +
            (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C2175) *
               C33992 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C2173 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C2174 +
            (C31775 + C31776 - C31777 - C31778 + C31785 + C31786) * C2175) *
               C51082) *
              C50920 * C51147 +
          (((C20203 - (C20202 + C20201) + C20204 - C20231 - C20232) * C2173 +
            (C20211 - (C20210 + C20209) + C20212 - C20233 - C20234) * C2174 +
            (C20219 - (C20218 + C20217) + C20220 - C20235 - C20236) * C2175) *
               C33992 +
           ((C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C2173 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C2174 +
            (C20497 * C543 - (C20498 * C51190 + C20499 * C542) +
             C20500 * C51191 - (C19835 * C3089 + C50861 * C3094) * C544 -
             (C19835 * C3095 + C50861 * C3098) * C539) *
                C2175) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C256 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C251 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C257 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C256 +
             (C34338 + C34339 + C34340) * C251 -
             (C34341 + C34342 + C34343) * C257 -
             (C34344 + C34345 + C34346) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C34343 + C34342 + C34341) * C257 -
             ((C34340 + C34339 + C34338) * C251 +
              (C34337 + C34336 + C34335) * C256) +
             (C34346 + C34345 + C34344) * C50884) *
                C51006 * C33992 +
            ((C34347 + C34348 + C34349) * C257 -
             ((C34350 + C34351 + C34352) * C251 +
              (C34353 + C34354 + C34355) * C256) +
             (C34356 + C34357 + C34358) * C50884) *
                C51006 * C51082) *
               C50984) *
              C51147 +
          ((((C17257 + C17256 + C17255) * C257 -
             ((C17254 + C17253 + C17252) * C251 +
              (C17251 + C17250 + C17249) * C256) +
             (C17260 + C17259 + C17258) * C50884) *
                C51006 * C33992 +
            ((C17947 + C17948 + C17949) * C257 -
             ((C17950 + C17951 + C17952) * C251 +
              (C17953 + C17954 + C17955) * C256) +
             (C17956 + C17957 + C17958) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C17955 + C17954 + C17953) * C256 +
             (C17952 + C17951 + C17950) * C251 -
             (C17949 + C17948 + C17947) * C257 -
             (C17958 + C17957 + C17956) * C50884) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C256 +
             (C18382 + C18383 + C18384) * C251 -
             (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
              C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                 C257 -
             (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
              C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C256 +
              (C19835 * C136 + C50861 * C146) * C251 -
              (C19835 * C126 + C50861 * C133) * C257 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C2173 +
             (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
                C33992 +
            ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
             C31482 * C2175) *
                C51082) *
               C51148 +
           (((C22279 - (C22278 + C22277) + C22280) * C2173 + C22841 * C2174 +
             C32129 * C2175) *
                C33992 +
            ((C22283 - (C22282 + C22281) + C22284) * C2173 + C22842 * C2174 +
             (C22079 - (C22069 + C22070) + C22080) * C2175) *
                C51082) *
               C50984) *
              C51147 +
          ((((C19985 - (C19984 + C19983) + C19986) * C2173 +
             (C19989 - (C19988 + C19987) + C19990) * C2174 +
             (C19993 - (C19992 + C19991) + C19994) * C2175) *
                C33992 +
            (C22841 * C2173 + C32129 * C2174 +
             (C20509 - (C20510 + C20511) + C20512) * C2175) *
                C51082) *
               C51148 +
           ((C22840 * C2173 + C31482 * C2174 +
             (C20511 + C20510 - C20509 - C20512) * C2175) *
                C33992 +
            (C22285 * C2173 + (C22070 + C22069 - C22079 - C22080) * C2174 +
             (C20843 * C256 + C20844 * C251 -
              (C19835 * C3565 + C50861 * C3569) * C257 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C2175) *
                C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
             C17053 * C400 + C17048 * C410) *
                C256 +
            (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
             C17053 * C414 + C17048 * C430) *
                C251 -
            (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
             C17051 * C399 + C17046 * C409) *
                C257 -
            (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
             C17051 * C415 + C17046 * C431) *
                C50884) *
               C51006 * C51082) *
              C50920 * C253 +
          (((C17257 + C17256 + C17255) * C257 -
            ((C17254 + C17253 + C17252) * C251 +
             (C17251 + C17250 + C17249) * C256) +
            (C17260 + C17259 + C17258) * C50884) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C257 -
            ((C17950 + C17951 + C17952) * C251 +
             (C17953 + C17954 + C17955) * C256) +
            (C17956 + C17957 + C17958) * C50884) *
               C51006 * C51082) *
              C50920 * C254 +
          (((C17269 + C17268 + C17267) * C256 +
            (C17266 + C17265 + C17264) * C251 -
            (C17263 + C17262 + C17261) * C257 -
            (C17272 + C17271 + C17270) * C50884) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C256 +
            (C18886 + C18887 + C18888) * C251 -
            (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 + C17047 * C1453 +
             C17051 * C1446 + C17046 * C1454) *
                C257 -
            (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 + C17047 * C1457 +
             C17051 * C1450 + C17046 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
            C17053 * C127 + C17048 * C134) *
               C121 +
           (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
            C17053 * C138 + C17048 * C148) *
               C109 -
           (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
            C17051 * C126 + C17046 * C133) *
               C122 -
           (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
            C17051 * C137 + C17046 * C147) *
               C110 +
           (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
            C17053 * C129 + C17048 * C140) *
               C123 +
           (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
            C17053 * C141 + C17048 * C150) *
               C111 -
           (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
            C17051 * C128 + C17046 * C135) *
               C124 -
           (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
            C17051 * C139 + C17046 * C149) *
               C112) *
              C51006 * C33992 +
          ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
            C17053 * C400 + C17048 * C410) *
               C121 +
           (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
            C17053 * C414 + C17048 * C430) *
               C109 -
           (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
            C17051 * C399 + C17046 * C409) *
               C122 -
           (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
            C17051 * C415 + C17046 * C431) *
               C110 +
           (C17051 * C400 + C17046 * C410 + C17052 * C401 + C17047 * C411 +
            C17053 * C402 + C17048 * C412) *
               C123 +
           (C17051 * C414 + C17046 * C430 + C17052 * C413 + C17047 * C429 +
            C17053 * C418 + C17048 * C433) *
               C111 -
           (C17053 * C649 + C17048 * C650 + C17052 * C402 + C17047 * C412 +
            C17051 * C401 + C17046 * C411) *
               C124 -
           (C17053 * C651 + C17048 * C652 + C17052 * C418 + C17047 * C433 +
            C17051 * C413 + C17046 * C429) *
               C112) *
              C51006 * C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C256 +
            (C34338 + C34339 + C34340) * C251 -
            (C34341 + C34342 + C34343) * C257 -
            (C34344 + C34345 + C34346) * C50884) *
               C51006 * C51082) *
              C396 +
          (((C34343 + C34342 + C34341) * C257 -
            ((C34340 + C34339 + C34338) * C251 +
             (C34337 + C34336 + C34335) * C256) +
            (C34346 + C34345 + C34344) * C50884) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C257 -
            ((C34350 + C34351 + C34352) * C251 +
             (C34353 + C34354 + C34355) * C256) +
            (C34356 + C34357 + C34358) * C50884) *
               C51006 * C51082) *
              C397 +
          (((C34355 + C34354 + C34353) * C256 +
            (C34352 + C34351 + C34350) * C251 -
            (C34349 + C34348 + C34347) * C257 -
            (C34358 + C34357 + C34356) * C50884) *
               C51006 * C33992 +
           ((C17051 * C1731 + C17046 * C1739 + C17052 * C1730 + C17047 * C1738 +
             C17053 * C1729 + C17048 * C1737) *
                C256 +
            (C17051 * C1735 + C17046 * C1743 + C17052 * C1734 + C17047 * C1742 +
             C17053 * C1733 + C17048 * C1741) *
                C251 -
            (C17053 * C1728 + C17048 * C1736 + C17052 * C1729 + C17047 * C1737 +
             C17051 * C1730 + C17046 * C1738) *
                C257 -
            (C17053 * C1732 + C17048 * C1740 + C17052 * C1733 + C17047 * C1741 +
             C17051 * C1734 + C17046 * C1742) *
                C50884) *
               C51006 * C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C2173 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C2174 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C20227 * C123 + C20228 * C111 -
            (C19835 * C266 + C50861 * C281) * C124 -
            (C19835 * C285 + C50861 * C296) * C112) *
               C2175) *
              C33992 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C2173 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C2174 +
           (C20495 * C121 + C20494 * C109 - C20493 * C122 - C20496 * C110 +
            C31783 * C123 + C31784 * C111 -
            (C19835 * C1444 + C50861 * C1452) * C124 -
            (C19835 * C1448 + C50861 * C1456) * C112) *
               C2175) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
               C33992 +
           ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
            C31482 * C2175) *
               C51082) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C2173 +
            (C19989 - (C19988 + C19987) + C19990) * C2174 +
            (C19993 - (C19992 + C19991) + C19994) * C2175) *
               C33992 +
           (C22841 * C2173 + C32129 * C2174 +
            (C20509 - (C20510 + C20511) + C20512) * C2175) *
               C51082) *
              C50920 * C254 +
          ((C20003 * C2173 + C20004 * C2174 +
            (C19997 + C19996 - C19995 - C19998) * C2175) *
               C33992 +
           (C31482 * C2173 + (C20511 + C20510 - C20509 - C20512) * C2174 +
            (C21221 * C256 + C21222 * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C2175) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
               C33992 +
           ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
            C31482 * C2175) *
               C51082) *
              C396 +
          (((C22279 - (C22278 + C22277) + C22280) * C2173 + C22841 * C2174 +
            C32129 * C2175) *
               C33992 +
           ((C22283 - (C22282 + C22281) + C22284) * C2173 + C22842 * C2174 +
            (C22079 - (C22069 + C22070) + C22080) * C2175) *
               C51082) *
              C397 +
          ((C22297 * C2173 + C22285 * C2174 +
            (C22070 + C22069 - C22079 - C22080) * C2175) *
               C33992 +
           ((C22288 + C22287 - C22286 - C22289) * C2173 +
            (C22292 + C22291 - C22290 - C22293) * C2174 +
            (C23276 * C256 + C23277 * C251 -
             (C19835 * C4505 + C50861 * C4511) * C257 -
             (C19835 * C4509 + C50861 * C4517) * C50884) *
                C2175) *
               C51082) *
              C398) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C542 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51190 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C543 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51191 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C544 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C539) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C542 +
            (C34338 + C34339 + C34340) * C51190 -
            (C34341 + C34342 + C34343) * C543 -
            (C34344 + C34345 + C34346) * C51191 +
            (C34663 + C34664 + C34665) * C544 +
            (C34666 + C34667 + C34668) * C539) *
               C51006 * C51082) *
              C51148 +
          (((C34343 + C34342 + C34341) * C543 -
            ((C34340 + C34339 + C34338) * C51190 +
             (C34337 + C34336 + C34335) * C542) +
            (C34346 + C34345 + C34344) * C51191 -
            (C34665 + C34664 + C34663) * C544 -
            (C34668 + C34667 + C34666) * C539) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C543 -
            ((C34350 + C34351 + C34352) * C51190 +
             (C34353 + C34354 + C34355) * C542) +
            (C34356 + C34357 + C34358) * C51191 -
            (C17053 * C408 + C17048 * C427 + C17052 * C407 + C17047 * C422 +
             C17051 * C406 + C17046 * C421) *
                C544 -
            (C17053 * C428 + C17048 * C438 + C17052 * C426 + C17047 * C437 +
             C17051 * C425 + C17046 * C436) *
                C539) *
               C51006 * C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C542 +
             (C19835 * C136 + C50861 * C146) * C51190 -
             (C19835 * C126 + C50861 * C133) * C543 -
             (C19835 * C137 + C50861 * C147) * C51191 +
             (C19835 * C127 + C50861 * C134) * C544 +
             (C19835 * C138 + C50861 * C148) * C539) *
                C2173 +
            (C20201 + C20202 - C20203 - C20204 + C20231 + C20232) * C2174 +
            (C20209 + C20210 - C20211 - C20212 + C20233 + C20234) * C2175) *
               C33992 +
           ((C22616 + C22617 - C22618 - C22619 + C22636 + C22637) * C2173 +
            (C22446 + C22447 - C22448 - C22449 + C22466 + C22467) * C2174 +
            (C31775 + C31776 - C31777 - C31778 + C31785 + C31786) * C2175) *
               C51082) *
              C51148 +
          (((C22618 - (C22617 + C22616) + C22619 - C22636 - C22637) * C2173 +
            (C22448 - (C22447 + C22446) + C22449 - C22466 - C22467) * C2174 +
            (C31777 - (C31776 + C31775) + C31778 - C31785 - C31786) * C2175) *
               C33992 +
           ((C22626 - (C22625 + C22624) + C22627 - C22638 - C22639) * C2173 +
            (C22456 - (C22455 + C22454) + C22457 - C22468 - C22469) * C2174 +
            (C22075 * C543 - (C20842 * C51190 + C20841 * C542) +
             C22076 * C51191 - (C19835 * C2567 + C50861 * C2572) * C544 -
             (C19835 * C2573 + C50861 * C2576) * C539) *
                C2175) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
            C17053 * C127 + C17048 * C134) *
               C121 +
           (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
            C17053 * C138 + C17048 * C148) *
               C109 -
           (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
            C17051 * C126 + C17046 * C133) *
               C122 -
           (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
            C17051 * C137 + C17046 * C147) *
               C110 +
           (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
            C17053 * C129 + C17048 * C140) *
               C123 +
           (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
            C17053 * C141 + C17048 * C150) *
               C111 -
           (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
            C17051 * C128 + C17046 * C135) *
               C124 -
           (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
            C17051 * C139 + C17046 * C149) *
               C112) *
              C51006 * C33992 +
          ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
            C17053 * C400 + C17048 * C410) *
               C121 +
           (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
            C17053 * C414 + C17048 * C430) *
               C109 -
           (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
            C17051 * C399 + C17046 * C409) *
               C122 -
           (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
            C17051 * C415 + C17046 * C431) *
               C110 +
           (C17051 * C400 + C17046 * C410 + C17052 * C401 + C17047 * C411 +
            C17053 * C402 + C17048 * C412) *
               C123 +
           (C17051 * C414 + C17046 * C430 + C17052 * C413 + C17047 * C429 +
            C17053 * C418 + C17048 * C433) *
               C111 -
           (C17053 * C649 + C17048 * C650 + C17052 * C402 + C17047 * C412 +
            C17051 * C401 + C17046 * C411) *
               C124 -
           (C17053 * C651 + C17048 * C652 + C17052 * C418 + C17047 * C433 +
            C17051 * C413 + C17046 * C429) *
               C112) *
              C51006 * C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C17051 * C403 + C17046 * C417 + C17052 * C399 + C17047 * C409 +
             C17053 * C400 + C17048 * C410) *
                C256 +
            (C17051 * C416 + C17046 * C432 + C17052 * C415 + C17047 * C431 +
             C17053 * C414 + C17048 * C430) *
                C251 -
            (C17053 * C401 + C17048 * C411 + C17052 * C400 + C17047 * C410 +
             C17051 * C399 + C17046 * C409) *
                C257 -
            (C17053 * C413 + C17048 * C429 + C17052 * C414 + C17047 * C430 +
             C17051 * C415 + C17046 * C431) *
                C50884) *
               C51006 * C51082) *
              C50920 * C253 +
          (((C17257 + C17256 + C17255) * C257 -
            ((C17254 + C17253 + C17252) * C251 +
             (C17251 + C17250 + C17249) * C256) +
            (C17260 + C17259 + C17258) * C50884) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C257 -
            ((C17950 + C17951 + C17952) * C251 +
             (C17953 + C17954 + C17955) * C256) +
            (C17956 + C17957 + C17958) * C50884) *
               C51006 * C51082) *
              C50920 * C254 +
          (((C17269 + C17268 + C17267) * C256 +
            (C17266 + C17265 + C17264) * C251 -
            (C17263 + C17262 + C17261) * C257 -
            (C17272 + C17271 + C17270) * C50884) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C256 +
            (C18886 + C18887 + C18888) * C251 -
            (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 + C17047 * C1453 +
             C17051 * C1446 + C17046 * C1454) *
                C257 -
            (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 + C17047 * C1457 +
             C17051 * C1450 + C17046 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50861 * C132) * C121 +
            (C19835 * C136 + C50861 * C146) * C109 -
            (C19835 * C126 + C50861 * C133) * C122 -
            (C19835 * C137 + C50861 * C147) * C110 +
            (C19835 * C127 + C50861 * C134) * C123 +
            (C19835 * C138 + C50861 * C148) * C111 -
            (C19835 * C128 + C50861 * C135) * C124 -
            (C19835 * C139 + C50861 * C149) * C112) *
               C2173 +
           (C19967 * C121 + C19968 * C109 - C19969 * C122 - C19970 * C110 +
            C20225 * C123 + C20226 * C111 -
            (C19835 * C260 + C50861 * C270) * C124 -
            (C19835 * C272 + C50861 * C288) * C112) *
               C2174 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C20227 * C123 + C20228 * C111 -
            (C19835 * C266 + C50861 * C281) * C124 -
            (C19835 * C285 + C50861 * C296) * C112) *
               C2175) *
              C33992 +
          ((C22260 * C121 + C22261 * C109 - C22262 * C122 - C22263 * C110 +
            C22632 * C123 + C22633 * C111 -
            (C19835 * C401 + C50861 * C411) * C124 -
            (C19835 * C413 + C50861 * C429) * C112) *
               C2173 +
           (C20491 * C121 + C20490 * C109 - C20489 * C122 - C20492 * C110 +
            C22462 * C123 + C22463 * C111 -
            (C19835 * C786 + C50861 * C791) * C124 -
            (C19835 * C795 + C50861 * C801) * C112) *
               C2174 +
           (C20495 * C121 + C20494 * C109 - C20493 * C122 - C20496 * C110 +
            C31783 * C123 + C31784 * C111 -
            (C19835 * C1444 + C50861 * C1452) * C124 -
            (C19835 * C1448 + C50861 * C1456) * C112) *
               C2175) *
              C51082) *
         C50920 * C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C256 +
             (C19835 * C136 + C50861 * C146) * C251 -
             (C19835 * C126 + C50861 * C133) * C257 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C19983 + C19984 - C19985 - C19986) * C2174 + C20003 * C2175) *
               C33992 +
           ((C22277 + C22278 - C22279 - C22280) * C2173 + C22840 * C2174 +
            C31482 * C2175) *
               C51082) *
              C50920 * C253 +
          (((C19985 - (C19984 + C19983) + C19986) * C2173 +
            (C19989 - (C19988 + C19987) + C19990) * C2174 +
            (C19993 - (C19992 + C19991) + C19994) * C2175) *
               C33992 +
           (C22841 * C2173 + C32129 * C2174 +
            (C20509 - (C20510 + C20511) + C20512) * C2175) *
               C51082) *
              C50920 * C254 +
          ((C20003 * C2173 + C20004 * C2174 +
            (C19997 + C19996 - C19995 - C19998) * C2175) *
               C33992 +
           (C31482 * C2173 + (C20511 + C20510 - C20509 - C20512) * C2174 +
            (C21221 * C256 + C21222 * C251 -
             (C19835 * C4090 + C50861 * C4094) * C257 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C2175) *
               C51082) *
              C50920 * C255)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51139 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C50007 +
            (C34338 + C34339 + C34340) * C51139 -
            (C34341 + C34342 + C34343) * C50000 -
            (C34344 + C34345 + C34346) * C50884) *
               C51006 * C51082) *
              C50920 * C51192 +
          (((C17257 + C17256 + C17255) * C50000 -
            ((C17254 + C17253 + C17252) * C51139 +
             (C17251 + C17250 + C17249) * C50007) +
            (C17260 + C17259 + C17258) * C50884) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C50000 -
            ((C17950 + C17951 + C17952) * C51139 +
             (C17953 + C17954 + C17955) * C50007) +
            (C17956 + C17957 + C17958) * C50884) *
               C51006 * C51082) *
              C50920 * C51193 +
          (((C17269 + C17268 + C17267) * C50007 +
            (C17266 + C17265 + C17264) * C51139 -
            (C17263 + C17262 + C17261) * C50000 -
            (C17272 + C17271 + C17270) * C50884) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C50007 +
            (C18886 + C18887 + C18888) * C51139 -
            (C17053 * C1444 + C17048 * C1452 + C17052 * C1445 + C17047 * C1453 +
             C17051 * C1446 + C17046 * C1454) *
                C50000 -
            (C17053 * C1448 + C17048 * C1456 + C17052 * C1449 + C17047 * C1457 +
             C17051 * C1450 + C17046 * C1458) *
                C50884) *
               C51006 * C51082) *
              C50920 * C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
               C33992 +
           ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
            C32674 * C2175) *
               C51082) *
              C50920 * C51192 +
          (((C20951 - (C20950 + C20949) + C20952) * C2173 +
            (C20955 - (C20954 + C20953) + C20956) * C2174 +
            (C20959 - (C20958 + C20957) + C20960) * C2175) *
               C33992 +
           (C23657 * C2173 + C32871 * C2174 +
            (C21109 - (C21110 + C21111) + C21112) * C2175) *
               C51082) *
              C50920 * C51193 +
          ((C20969 * C2173 + C20970 * C2174 +
            (C20963 + C20962 - C20961 - C20964) * C2175) *
               C33992 +
           (C32674 * C2173 + (C21111 + C21110 - C21109 - C21112) * C2174 +
            (C21221 * C50007 + C21222 * C51139 -
             (C19835 * C4090 + C50861 * C4094) * C50000 -
             (C19835 * C4092 + C50861 * C4096) * C50884) *
                C2175) *
               C51082) *
              C50920 * C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C51148 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C50984) *
              C51192 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C50984 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C51148) *
              C51193 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C51006 * C33992 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51006 * C51082) *
               C51148 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51006 * C51082 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C51006 * C33992) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C51148 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C50984) *
              C51192 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C50984 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C51148) *
              C51193 +
          (((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
                C33992 +
            (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
                C51082) *
               C51148 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C2175 +
             (C20850 + C20849) * C2174 + C23269 * C2173) *
                C51082 +
            ((C21224 + C21223) * C2175 + C21215 * C2174 + C21216 * C2173) *
                C33992) *
               C50984) *
              C1213)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C980 +
            (C34338 + C34339 + C34340) * C50879) *
               C51006 * C51082) *
              C50920 * C976 -
          (((C17950 + C17951 + C17952) * C50879 +
            (C17953 + C17954 + C17955) * C980) *
               C51006 * C51082 +
           ((C17254 + C17253 + C17252) * C50879 +
            (C17251 + C17250 + C17249) * C980) *
               C51006 * C33992) *
              C50920 * C977 +
          (((C17269 + C17268 + C17267) * C980 +
            (C17266 + C17265 + C17264) * C50879) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C980 +
            (C18886 + C18887 + C18888) * C50879) *
               C51006 * C51082) *
              C50920 * C978 -
          (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 + C17047 * C3097 +
             C17051 * C3092 + C17046 * C3096) *
                C50879 +
            (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 + C17047 * C3091 +
             C17051 * C3087 + C17046 * C3090) *
                C980) *
               C51006 * C51082 +
           ((C18220 + C18219 + C18218) * C50879 +
            (C18217 + C18216 + C18215) * C980) *
               C51006 * C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C906 +
            (C34338 + C34339 + C34340) * C901 -
            (C34341 + C34342 + C34343) * C907 -
            (C34344 + C34345 + C34346) * C902 +
            (C34663 + C34664 + C34665) * C908 +
            (C34666 + C34667 + C34668) * C903) *
               C51006 * C51082) *
              C50920 * C904 +
          (((C17257 + C17256 + C17255) * C907 -
            ((C17254 + C17253 + C17252) * C901 +
             (C17251 + C17250 + C17249) * C906) +
            (C17260 + C17259 + C17258) * C902 -
            (C17579 + C17578 + C17577) * C908 -
            (C17582 + C17581 + C17580) * C903) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C907 -
            ((C17950 + C17951 + C17952) * C901 +
             (C17953 + C17954 + C17955) * C906) +
            (C17956 + C17957 + C17958) * C902 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C908 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C903) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C396 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C397 +
           (((C34355 + C34354 + C34353) * C980 +
             (C34352 + C34351 + C34350) * C50879) *
                C51006 * C33992 +
            ((C17051 * C1731 + C17046 * C1739 + C17052 * C1730 +
              C17047 * C1738 + C17053 * C1729 + C17048 * C1737) *
                 C980 +
             (C17051 * C1735 + C17046 * C1743 + C17052 * C1734 +
              C17047 * C1742 + C17053 * C1733 + C17048 * C1741) *
                 C50879) *
                C51006 * C51082) *
               C398) *
              C904 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C397 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C396 -
           (((C17053 * C6008 + C17048 * C6009 + C17052 * C4513 +
              C17047 * C4519 + C17051 * C4514 + C17046 * C4520) *
                 C50879 +
             (C17053 * C6006 + C17048 * C6007 + C17052 * C4507 +
              C17047 * C4515 + C17051 * C4508 + C17046 * C4516) *
                 C980) *
                C51006 * C51082 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C51006 * C33992) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C2173 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C2174 +
            (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C2175) *
               C33992 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2173 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2174 +
            (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
             (C19835 * C3089 + C50861 * C3094) * C908 -
             (C19835 * C3095 + C50861 * C3098) * C903) *
                C2175) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C2173 +
            (C20699 + C20700) * C2174 + C20711 * C2175) *
               C33992 +
           ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
               C51082) *
              C50920 * C976 -
          ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
           (C20714 * C2175 + (C20702 + C20701) * C2174 +
            (C20700 + C20699) * C2173) *
               C33992) *
              C50920 * C977 +
          ((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
               C33992 +
           (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
               C51082) *
              C50920 * C978 -
          ((((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C2175 +
            (C21224 + C21223) * C2174 + C21215 * C2173) *
               C51082 +
           ((C20718 + C20717) * C2175 + C20713 * C2174 + C20714 * C2173) *
               C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C396 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C397 +
           ((C23270 * C2173 + C23254 * C2174 + C23806 * C2175) * C33992 +
            ((C23258 + C23257) * C2173 + C23273 * C2174 +
             (C23283 + C23284) * C2175) *
                C51082) *
               C398) *
              C904 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C397 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C396 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C2175 +
             (C23284 + C23283) * C2174 + C23272 * C2173) *
                C51082 +
            ((C20850 + C20849) * C2175 + C23269 * C2174 + C23259 * C2173) *
                C33992) *
               C398) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51139 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C50007 +
             (C34338 + C34339 + C34340) * C51139 -
             (C34341 + C34342 + C34343) * C50000 -
             (C34344 + C34345 + C34346) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C34343 + C34342 + C34341) * C50000 -
             ((C34340 + C34339 + C34338) * C51139 +
              (C34337 + C34336 + C34335) * C50007) +
             (C34346 + C34345 + C34344) * C50884) *
                C51006 * C33992 +
            ((C34347 + C34348 + C34349) * C50000 -
             ((C34350 + C34351 + C34352) * C51139 +
              (C34353 + C34354 + C34355) * C50007) +
             (C34356 + C34357 + C34358) * C50884) *
                C51006 * C51082) *
               C50984) *
              C904 +
          ((((C17257 + C17256 + C17255) * C50000 -
             ((C17254 + C17253 + C17252) * C51139 +
              (C17251 + C17250 + C17249) * C50007) +
             (C17260 + C17259 + C17258) * C50884) *
                C51006 * C33992 +
            ((C17947 + C17948 + C17949) * C50000 -
             ((C17950 + C17951 + C17952) * C51139 +
              (C17953 + C17954 + C17955) * C50007) +
             (C17956 + C17957 + C17958) * C50884) *
                C51006 * C51082) *
               C51148 +
           (((C17955 + C17954 + C17953) * C50007 +
             (C17952 + C17951 + C17950) * C51139 -
             (C17949 + C17948 + C17947) * C50000 -
             (C17958 + C17957 + C17956) * C50884) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C50007 +
             (C18382 + C18383 + C18384) * C51139 -
             (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
              C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                 C50000 -
             (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
              C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C2173 +
             (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
                C33992 +
            ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
             C32674 * C2175) *
                C51082) *
               C51148 +
           (((C23637 - (C23636 + C23635) + C23638) * C2173 + C23657 * C2174 +
             C32871 * C2175) *
                C33992 +
            ((C23642 - (C23641 + C23640) + C23643) * C2173 + C23658 * C2174 +
             (C23437 - (C23438 + C23439) + C23440) * C2175) *
                C51082) *
               C50984) *
              C904 +
          ((((C20951 - (C20950 + C20949) + C20952) * C2173 +
             (C20955 - (C20954 + C20953) + C20956) * C2174 +
             (C20959 - (C20958 + C20957) + C20960) * C2175) *
                C33992 +
            (C23657 * C2173 + C32871 * C2174 +
             (C21109 - (C21110 + C21111) + C21112) * C2175) *
                C51082) *
               C51148 +
           ((C23655 * C2173 + C32674 * C2174 +
             (C21111 + C21110 - C21109 - C21112) * C2175) *
                C33992 +
            (C23656 * C2173 + (C23439 + C23438 - C23437 - C23440) * C2174 +
             (C20843 * C50007 + C20844 * C51139 -
              (C19835 * C3565 + C50861 * C3569) * C50000 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C2175) *
                C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C906 +
            (C34338 + C34339 + C34340) * C901 -
            (C34341 + C34342 + C34343) * C907 -
            (C34344 + C34345 + C34346) * C902 +
            (C34663 + C34664 + C34665) * C908 +
            (C34666 + C34667 + C34668) * C903) *
               C51006 * C51082) *
              C50920 * C904 +
          (((C17257 + C17256 + C17255) * C907 -
            ((C17254 + C17253 + C17252) * C901 +
             (C17251 + C17250 + C17249) * C906) +
            (C17260 + C17259 + C17258) * C902 -
            (C17579 + C17578 + C17577) * C908 -
            (C17582 + C17581 + C17580) * C903) *
               C51006 * C33992 +
           ((C17947 + C17948 + C17949) * C907 -
            ((C17950 + C17951 + C17952) * C901 +
             (C17953 + C17954 + C17955) * C906) +
            (C17956 + C17957 + C17958) * C902 -
            (C17053 * C787 + C17048 * C796 + C17052 * C786 + C17047 * C791 +
             C17051 * C785 + C17046 * C790) *
                C908 -
            (C17053 * C797 + C17048 * C802 + C17052 * C795 + C17047 * C801 +
             C17051 * C794 + C17046 * C800) *
                C903) *
               C51006 * C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C980 +
            (C34338 + C34339 + C34340) * C50879) *
               C51006 * C51082) *
              C50920 * C976 -
          (((C17950 + C17951 + C17952) * C50879 +
            (C17953 + C17954 + C17955) * C980) *
               C51006 * C51082 +
           ((C17254 + C17253 + C17252) * C50879 +
            (C17251 + C17250 + C17249) * C980) *
               C51006 * C33992) *
              C50920 * C977 +
          (((C17269 + C17268 + C17267) * C980 +
            (C17266 + C17265 + C17264) * C50879) *
               C51006 * C33992 +
           ((C18883 + C18884 + C18885) * C980 +
            (C18886 + C18887 + C18888) * C50879) *
               C51006 * C51082) *
              C50920 * C978 -
          (((C17053 * C3095 + C17048 * C3098 + C17052 * C3093 + C17047 * C3097 +
             C17051 * C3092 + C17046 * C3096) *
                C50879 +
            (C17053 * C3089 + C17048 * C3094 + C17052 * C3088 + C17047 * C3091 +
             C17051 * C3087 + C17046 * C3090) *
                C980) *
               C51006 * C51082 +
           ((C18220 + C18219 + C18218) * C50879 +
            (C18217 + C18216 + C18215) * C980) *
               C51006 * C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C50920 * C904 +
          (((C20613 - (C20612 + C20611) + C20614 - C20615 - C20616) * C2173 +
            (C20619 - (C20618 + C20617) + C20620 - C20621 - C20622) * C2174 +
            (C20625 - (C20624 + C20623) + C20626 - C20627 - C20628) * C2175) *
               C33992 +
           ((C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2173 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2174 +
            (C20497 * C907 - (C20498 * C901 + C20499 * C906) + C20500 * C902 -
             (C19835 * C3089 + C50861 * C3094) * C908 -
             (C19835 * C3095 + C50861 * C3098) * C903) *
                C2175) *
               C51082) *
              C50920 * C50958)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C2173 +
            (C20699 + C20700) * C2174 + C20711 * C2175) *
               C33992 +
           ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
               C51082) *
              C50920 * C976 -
          ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
           (C20714 * C2175 + (C20702 + C20701) * C2174 +
            (C20700 + C20699) * C2173) *
               C33992) *
              C50920 * C977 +
          ((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
               C33992 +
           (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
               C51082) *
              C50920 * C978 -
          ((((C19835 * C21211 + C50861 * C21213) * C50879 +
             (C19835 * C21210 + C50861 * C21212) * C980) *
                C2175 +
            (C21224 + C21223) * C2174 + C21215 * C2173) *
               C51082 +
           ((C20718 + C20717) * C2175 + C20713 * C2174 + C20714 * C2173) *
               C33992) *
              C50920 * C979)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51139 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50884) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C50007 +
             (C34338 + C34339 + C34340) * C51139 -
             (C34341 + C34342 + C34343) * C50000 -
             (C34344 + C34345 + C34346) * C50884) *
                C51006 * C51082) *
               C1558 +
           (((C34343 + C34342 + C34341) * C50000 -
             ((C34340 + C34339 + C34338) * C51139 +
              (C34337 + C34336 + C34335) * C50007) +
             (C34346 + C34345 + C34344) * C50884) *
                C51006 * C33992 +
            ((C34347 + C34348 + C34349) * C50000 -
             ((C34350 + C34351 + C34352) * C51139 +
              (C34353 + C34354 + C34355) * C50007) +
             (C34356 + C34357 + C34358) * C50884) *
                C51006 * C51082) *
               C50984) *
              C51147 +
          ((((C17257 + C17256 + C17255) * C50000 -
             ((C17254 + C17253 + C17252) * C51139 +
              (C17251 + C17250 + C17249) * C50007) +
             (C17260 + C17259 + C17258) * C50884) *
                C51006 * C33992 +
            ((C17947 + C17948 + C17949) * C50000 -
             ((C17950 + C17951 + C17952) * C51139 +
              (C17953 + C17954 + C17955) * C50007) +
             (C17956 + C17957 + C17958) * C50884) *
                C51006 * C51082) *
               C1558 +
           (((C17955 + C17954 + C17953) * C50007 +
             (C17952 + C17951 + C17950) * C51139 -
             (C17949 + C17948 + C17947) * C50000 -
             (C17958 + C17957 + C17956) * C50884) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C50007 +
             (C18382 + C18383 + C18384) * C51139 -
             (C17053 * C1095 + C17048 * C1103 + C17052 * C1096 +
              C17047 * C1104 + C17051 * C1097 + C17046 * C1105) *
                 C50000 -
             (C17053 * C1099 + C17048 * C1107 + C17052 * C1100 +
              C17047 * C1108 + C17051 * C1101 + C17046 * C1109) *
                 C50884) *
                C51006 * C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C50007 +
              (C19835 * C136 + C50861 * C146) * C51139 -
              (C19835 * C126 + C50861 * C133) * C50000 -
              (C19835 * C137 + C50861 * C147) * C50884) *
                 C2173 +
             (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
                C33992 +
            ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
             C32674 * C2175) *
                C51082) *
               C1558 +
           (((C23637 - (C23636 + C23635) + C23638) * C2173 + C23657 * C2174 +
             C32871 * C2175) *
                C33992 +
            ((C23642 - (C23641 + C23640) + C23643) * C2173 + C23658 * C2174 +
             (C23437 - (C23438 + C23439) + C23440) * C2175) *
                C51082) *
               C50984) *
              C51147 +
          ((((C20951 - (C20950 + C20949) + C20952) * C2173 +
             (C20955 - (C20954 + C20953) + C20956) * C2174 +
             (C20959 - (C20958 + C20957) + C20960) * C2175) *
                C33992 +
            (C23657 * C2173 + C32871 * C2174 +
             (C21109 - (C21110 + C21111) + C21112) * C2175) *
                C51082) *
               C1558 +
           ((C23655 * C2173 + C32674 * C2174 +
             (C21111 + C21110 - C21109 - C21112) * C2175) *
                C33992 +
            (C23656 * C2173 + (C23439 + C23438 - C23437 - C23440) * C2174 +
             (C20843 * C50007 + C20844 * C51139 -
              (C19835 * C3565 + C50861 * C3569) * C50000 -
              (C19835 * C3567 + C50861 * C3571) * C50884) *
                 C2175) *
                C51082) *
               C50984) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C51194 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C51195 +
           (((C34355 + C34354 + C34353) * C980 +
             (C34352 + C34351 + C34350) * C50879) *
                C51006 * C33992 +
            ((C36141 + C36142 + C36143) * C980 +
             (C36144 + C36145 + C36146) * C50879) *
                C51006 * C51082) *
               C1974) *
              C51147 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C51195 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C51194 -
           (((C17053 * C6008 + C17048 * C6009 + C17052 * C4513 +
              C17047 * C4519 + C17051 * C4514 + C17046 * C4520) *
                 C50879 +
             (C17053 * C6006 + C17048 * C6007 + C17052 * C4507 +
              C17047 * C4515 + C17051 * C4508 + C17046 * C4516) *
                 C980) *
                C51006 * C51082 +
            ((C18384 + C18383 + C18382) * C50879 +
             (C18381 + C18380 + C18379) * C980) *
                C51006 * C33992) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C51194 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C51195 +
           ((C23270 * C2173 + C23254 * C2174 + C23806 * C2175) * C33992 +
            ((C23258 + C23257) * C2173 + C23273 * C2174 +
             (C23283 + C23284) * C2175) *
                C51082) *
               C1974) *
              C51147 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C51195 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C51194 -
           ((((C19835 * C21487 + C50861 * C21489) * C50879 +
              (C19835 * C21486 + C50861 * C21488) * C980) *
                 C2175 +
             (C23284 + C23283) * C2174 + C23272 * C2173) *
                C51082 +
            ((C20850 + C20849) * C2175 + C23269 * C2174 + C23259 * C2173) *
                C33992) *
               C1974) *
              C50958)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C1558 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C50984) *
              C253 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C50984 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C1558) *
              C254 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C51006 * C33992 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51006 * C51082) *
               C1558 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51006 * C51082 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C51006 * C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C906 +
            (C34338 + C34339 + C34340) * C901 -
            (C34341 + C34342 + C34343) * C907 -
            (C34344 + C34345 + C34346) * C902 +
            (C34663 + C34664 + C34665) * C908 +
            (C34666 + C34667 + C34668) * C903) *
               C51006 * C51082) *
              C1558 +
          (((C34343 + C34342 + C34341) * C907 -
            ((C34340 + C34339 + C34338) * C901 +
             (C34337 + C34336 + C34335) * C906) +
            (C34346 + C34345 + C34344) * C902 -
            (C34665 + C34664 + C34663) * C908 -
            (C34668 + C34667 + C34666) * C903) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C907 -
            ((C34350 + C34351 + C34352) * C901 +
             (C34353 + C34354 + C34355) * C906) +
            (C34356 + C34357 + C34358) * C902 -
            (C17053 * C408 + C17048 * C427 + C17052 * C407 + C17047 * C422 +
             C17051 * C406 + C17046 * C421) *
                C908 -
            (C17053 * C428 + C17048 * C438 + C17052 * C426 + C17047 * C437 +
             C17051 * C425 + C17046 * C436) *
                C903) *
               C51006 * C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C980 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50879) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C980 +
            (C34338 + C34339 + C34340) * C50879) *
               C51006 * C51082) *
              C1724 -
          (((C34350 + C34351 + C34352) * C50879 +
            (C34353 + C34354 + C34355) * C980) *
               C51006 * C51082 +
           ((C34340 + C34339 + C34338) * C50879 +
            (C34337 + C34336 + C34335) * C980) *
               C51006 * C33992) *
              C1725 +
          (((C34355 + C34354 + C34353) * C980 +
            (C34352 + C34351 + C34350) * C50879) *
               C51006 * C33992 +
           ((C36141 + C36142 + C36143) * C980 +
            (C36144 + C36145 + C36146) * C50879) *
               C51006 * C51082) *
              C1726 -
          (((C17053 * C5408 + C17048 * C5411 + C17052 * C5406 + C17047 * C5410 +
             C17051 * C5405 + C17046 * C5409) *
                C50879 +
            (C17053 * C5402 + C17048 * C5407 + C17052 * C5401 + C17047 * C5404 +
             C17051 * C5400 + C17046 * C5403) *
                C980) *
               C51006 * C51082 +
           ((C36146 + C36145 + C36144) * C50879 +
            (C36143 + C36142 + C36141) * C980) *
               C51006 * C33992) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C2173 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2174 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2175) *
               C33992 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C2173 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C2174 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C2175) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C1558 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C50984) *
              C253 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C50984 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C1558) *
              C254 +
          (((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
                C33992 +
            (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
                C51082) *
               C1558 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C2175 +
             (C20850 + C20849) * C2174 + C23269 * C2173) *
                C51082 +
            ((C21224 + C21223) * C2175 + C21215 * C2174 + C21216 * C2173) *
                C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C980 +
             (C19835 * C136 + C50861 * C146) * C50879) *
                C2173 +
            (C20699 + C20700) * C2174 + C20711 * C2175) *
               C33992 +
           ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
               C51082) *
              C1724 -
          ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
               C51082 +
           (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
               C33992) *
              C1725 +
          ((C23270 * C2173 + C23254 * C2174 + C23806 * C2175) * C33992 +
           ((C23258 + C23257) * C2173 + C23273 * C2174 +
            (C23283 + C23284) * C2175) *
               C51082) *
              C1726 -
          ((((C19835 * C23245 + C50861 * C23247) * C50879 +
             (C19835 * C23244 + C50861 * C23246) * C980) *
                C2175 +
            (C23282 + C23281) * C2174 + (C24224 + C24223) * C2173) *
               C51082 +
           ((C23284 + C23283) * C2175 + C23272 * C2174 + C24214 * C2173) *
               C33992) *
              C1727) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51139 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50884) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C50007 +
            (C34338 + C34339 + C34340) * C51139 -
            (C34341 + C34342 + C34343) * C50000 -
            (C34344 + C34345 + C34346) * C50884) *
               C51006 * C51082) *
              C51194 +
          (((C34343 + C34342 + C34341) * C50000 -
            ((C34340 + C34339 + C34338) * C51139 +
             (C34337 + C34336 + C34335) * C50007) +
            (C34346 + C34345 + C34344) * C50884) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C50000 -
            ((C34350 + C34351 + C34352) * C51139 +
             (C34353 + C34354 + C34355) * C50007) +
            (C34356 + C34357 + C34358) * C50884) *
               C51006 * C51082) *
              C51195 +
          (((C34355 + C34354 + C34353) * C50007 +
            (C34352 + C34351 + C34350) * C51139 -
            (C34349 + C34348 + C34347) * C50000 -
            (C34358 + C34357 + C34356) * C50884) *
               C51006 * C33992 +
           ((C36141 + C36142 + C36143) * C50007 +
            (C36144 + C36145 + C36146) * C51139 -
            (C17053 * C1728 + C17048 * C1736 + C17052 * C1729 + C17047 * C1737 +
             C17051 * C1730 + C17046 * C1738) *
                C50000 -
            (C17053 * C1732 + C17048 * C1740 + C17052 * C1733 + C17047 * C1741 +
             C17051 * C1734 + C17046 * C1742) *
                C50884) *
               C51006 * C51082) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C50007 +
             (C19835 * C136 + C50861 * C146) * C51139 -
             (C19835 * C126 + C50861 * C133) * C50000 -
             (C19835 * C137 + C50861 * C147) * C50884) *
                C2173 +
            (C20949 + C20950 - C20951 - C20952) * C2174 + C20969 * C2175) *
               C33992 +
           ((C23635 + C23636 - C23637 - C23638) * C2173 + C23655 * C2174 +
            C32674 * C2175) *
               C51082) *
              C51194 +
          (((C23637 - (C23636 + C23635) + C23638) * C2173 + C23657 * C2174 +
            C32871 * C2175) *
               C33992 +
           ((C23642 - (C23641 + C23640) + C23643) * C2173 + C23658 * C2174 +
            (C23437 - (C23438 + C23439) + C23440) * C2175) *
               C51082) *
              C51195 +
          ((C24572 * C2173 + C23656 * C2174 +
            (C23439 + C23438 - C23437 - C23440) * C2175) *
               C33992 +
           ((C24569 + C24568 - C24567 - C24570) * C2173 +
            (C23649 + C23648 - C23647 - C23650) * C2174 +
            (C23276 * C50007 + C23277 * C51139 -
             (C19835 * C4505 + C50861 * C4511) * C50000 -
             (C19835 * C4509 + C50861 * C4517) * C50884) *
                C2175) *
               C51082) *
              C1974) *
         C50908) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C906 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C901 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C907 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C902 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C908 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C903) *
               C51006 * C33992 +
           ((C34335 + C34336 + C34337) * C906 +
            (C34338 + C34339 + C34340) * C901 -
            (C34341 + C34342 + C34343) * C907 -
            (C34344 + C34345 + C34346) * C902 +
            (C34663 + C34664 + C34665) * C908 +
            (C34666 + C34667 + C34668) * C903) *
               C51006 * C51082) *
              C1558 +
          (((C34343 + C34342 + C34341) * C907 -
            ((C34340 + C34339 + C34338) * C901 +
             (C34337 + C34336 + C34335) * C906) +
            (C34346 + C34345 + C34344) * C902 -
            (C34665 + C34664 + C34663) * C908 -
            (C34668 + C34667 + C34666) * C903) *
               C51006 * C33992 +
           ((C34347 + C34348 + C34349) * C907 -
            ((C34350 + C34351 + C34352) * C901 +
             (C34353 + C34354 + C34355) * C906) +
            (C34356 + C34357 + C34358) * C902 -
            (C17053 * C408 + C17048 * C427 + C17052 * C407 + C17047 * C422 +
             C17051 * C406 + C17046 * C421) *
                C908 -
            (C17053 * C428 + C17048 * C438 + C17052 * C426 + C17047 * C437 +
             C17051 * C425 + C17046 * C436) *
                C903) *
               C51006 * C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C980 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50879) *
                C51006 * C33992 +
            ((C34335 + C34336 + C34337) * C980 +
             (C34338 + C34339 + C34340) * C50879) *
                C51006 * C51082) *
               C1558 -
           (((C34350 + C34351 + C34352) * C50879 +
             (C34353 + C34354 + C34355) * C980) *
                C51006 * C51082 +
            ((C34340 + C34339 + C34338) * C50879 +
             (C34337 + C34336 + C34335) * C980) *
                C51006 * C33992) *
               C50984) *
              C253 +
          ((((C17955 + C17954 + C17953) * C980 +
             (C17952 + C17951 + C17950) * C50879) *
                C51006 * C33992 +
            ((C18379 + C18380 + C18381) * C980 +
             (C18382 + C18383 + C18384) * C50879) *
                C51006 * C51082) *
               C50984 -
           (((C17950 + C17951 + C17952) * C50879 +
             (C17953 + C17954 + C17955) * C980) *
                C51006 * C51082 +
            ((C17254 + C17253 + C17252) * C50879 +
             (C17251 + C17250 + C17249) * C980) *
                C51006 * C33992) *
               C1558) *
              C254 +
          ((((C17269 + C17268 + C17267) * C980 +
             (C17266 + C17265 + C17264) * C50879) *
                C51006 * C33992 +
            ((C18883 + C18884 + C18885) * C980 +
             (C18886 + C18887 + C18888) * C50879) *
                C51006 * C51082) *
               C1558 -
           (((C17053 * C2573 + C17048 * C2576 + C17052 * C2571 +
              C17047 * C2575 + C17051 * C2570 + C17046 * C2574) *
                 C50879 +
             (C17053 * C2567 + C17048 * C2572 + C17052 * C2566 +
              C17047 * C2569 + C17051 * C2565 + C17046 * C2568) *
                 C980) *
                C51006 * C51082 +
            ((C18888 + C18887 + C18886) * C50879 +
             (C18885 + C18884 + C18883) * C980) *
                C51006 * C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50861 * C132) * C906 +
             (C19835 * C136 + C50861 * C146) * C901 -
             (C19835 * C126 + C50861 * C133) * C907 -
             (C19835 * C137 + C50861 * C147) * C902 +
             (C19835 * C127 + C50861 * C134) * C908 +
             (C19835 * C138 + C50861 * C148) * C903) *
                C2173 +
            (C20611 + C20612 - C20613 - C20614 + C20615 + C20616) * C2174 +
            (C20617 + C20618 - C20619 - C20620 + C20621 + C20622) * C2175) *
               C33992 +
           ((C23953 + C23954 - C23955 - C23956 + C23957 + C23958) * C2173 +
            (C22989 + C22990 - C22991 - C22992 + C22993 + C22994) * C2174 +
            (C32276 + C32277 - C32278 - C32279 + C32280 + C32281) * C2175) *
               C51082) *
              C1558 +
          (((C23955 - (C23954 + C23953) + C23956 - C23957 - C23958) * C2173 +
            (C22991 - (C22990 + C22989) + C22992 - C22993 - C22994) * C2174 +
            (C32278 - (C32277 + C32276) + C32279 - C32280 - C32281) * C2175) *
               C33992 +
           ((C23961 - (C23960 + C23959) + C23962 - C23963 - C23964) * C2173 +
            (C22997 - (C22996 + C22995) + C22998 - C22999 - C23000) * C2174 +
            (C22075 * C907 - (C20842 * C901 + C20841 * C906) + C22076 * C902 -
             (C19835 * C2567 + C50861 * C2572) * C908 -
             (C19835 * C2573 + C50861 * C2576) * C903) *
                C2175) *
               C51082) *
              C50984) *
         C50908) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50861 * C132) * C980 +
              (C19835 * C136 + C50861 * C146) * C50879) *
                 C2173 +
             (C20699 + C20700) * C2174 + C20711 * C2175) *
                C33992 +
            ((C23249 + C23250) * C2173 + C23251 * C2174 + C23805 * C2175) *
                C51082) *
               C1558 -
           ((C23269 * C2175 + C23259 * C2174 + (C23253 + C23252) * C2173) *
                C51082 +
            (C21216 * C2175 + C23260 * C2174 + (C23250 + C23249) * C2173) *
                C33992) *
               C50984) *
              C253 +
          (((C23251 * C2173 + C23805 * C2174 + C33018 * C2175) * C33992 +
            (C23254 * C2173 + C23806 * C2174 + (C20849 + C20850) * C2175) *
                C51082) *
               C50984 -
           ((C21215 * C2175 + C21216 * C2174 + C23260 * C2173) * C51082 +
            (C20714 * C2175 + (C20702 + C20701) * C2174 +
             (C20700 + C20699) * C2173) *
                C33992) *
               C1558) *
              C254 +
          (((C20711 * C2173 + C20712 * C2174 + (C20706 + C20705) * C2175) *
                C33992 +
            (C23805 * C2173 + C33018 * C2174 + (C21223 + C21224) * C2175) *
                C51082) *
               C1558 -
           ((((C19835 * C20817 + C50861 * C20819) * C50879 +
              (C19835 * C20816 + C50861 * C20818) * C980) *
                 C2175 +
             (C20850 + C20849) * C2174 + C23269 * C2173) *
                C51082 +
            ((C21224 + C21223) * C2175 + C21215 * C2174 + C21216 * C2173) *
                C33992) *
               C50984) *
              C255)) /
            (p * q * std::sqrt(p + q));
}
