/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AC_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_13_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49695 = 0 * ae;
    const double C49694 = ae * be;
    const double C49693 = 0 * be;
    const double C49692 = ae + be;
    const double C49691 = 0 * be;
    const double C49690 = xA - xB;
    const double C49738 = ce * de;
    const double C49737 = ce + de;
    const double C49736 = 0 * de;
    const double C49735 = zC - zD;
    const double C49766 = 0 * ce;
    const double C49761 = 0 * de;
    const double C49822 = zP - zQ;
    const double C49821 = p + q;
    const double C49820 = p * q;
    const double C49819 = xP - xQ;
    const double C49827 = bs[3];
    const double C49838 = bs[4];
    const double C49846 = bs[5];
    const double C49865 = bs[6];
    const double C49897 = bs[7];
    const double C50018 = yP - yQ;
    const double C50268 = bs[2];
    const double C122 = bs[0];
    const double C50706 = xC - xD;
    const double C50725 = yC - yD;
    const double C50826 = yA - yB;
    const double C50838 = zA - zB;
    const double C49700 = C49695 / C49692;
    const double C49697 = 2 * C49692;
    const double C49696 = std::pow(C49692, 2);
    const double C49699 = C49694 * C49690;
    const double C49698 = C49690 * C49693;
    const double C50682 = C49690 * be;
    const double C50681 = C49690 * ae;
    const double C50680 = std::pow(C49690, 2);
    const double C49739 = std::pow(C49737, 2);
    const double C49762 = 2 * C49737;
    const double C49830 = C49737 * C49692;
    const double C143 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (xP - xQ) * (zP - zQ) * ae * ce) /
                         C49737) /
                        C49692;
    const double C49740 = C49738 * C49735;
    const double C49763 = C49735 * C49736;
    const double C50741 = std::pow(C49735, 2);
    const double C50805 = C49735 * de;
    const double C50804 = C49735 * ce;
    const double C49771 = C49766 / C49737;
    const double C49828 = C49822 * ce;
    const double C50094 = std::pow(C49822, 2);
    const double C49823 = 2 * C49820;
    const double C49829 = C49819 * C49822;
    const double C49848 = std::pow(C49819, 2);
    const double C49942 = C49819 * ae;
    const double C50036 = std::pow(C50018, 2);
    const double C50709 = C50706 * de;
    const double C50708 = C50706 * ce;
    const double C50707 = std::pow(C50706, 2);
    const double C50726 = std::pow(C50725, 2);
    const double C50777 = C50725 * de;
    const double C50776 = C50725 * ce;
    const double C50827 = std::pow(C50826, 2);
    const double C50877 = C50826 * be;
    const double C50876 = C50826 * ae;
    const double C50839 = std::pow(C50838, 2);
    const double C50903 = C50838 * be;
    const double C50902 = C50838 * ae;
    const double C50690 = std::pow(C49697, -1);
    const double C50983 = std::pow(C49697, -2);
    const double C49701 = 2 * C49696;
    const double C50961 = 4 * C49696;
    const double C49702 = C49698 / C49692;
    const double C50683 = C50680 * C49694;
    const double C49741 = 2 * C49739;
    const double C50968 = 4 * C49739;
    const double C50717 = std::pow(C49762, -1);
    const double C50970 = std::pow(C49762, -2);
    const double C49768 = C49763 / C49737;
    const double C50742 = C50741 * C49738;
    const double C49832 = C49827 * C49828;
    const double C49840 = C49838 * C49828;
    const double C49851 = C49846 * C49828;
    const double C49871 = C49865 * C49828;
    const double C49906 = C49897 * C49828;
    const double C49824 = C49823 / C49821;
    const double C133 = (bs[1] * C49828 * C49823) / (C49821 * C49737);
    const double C123 = -(C49819 * bs[1] * C49823) / C49821;
    const double C256 = -(C50018 * bs[1] * C49823) / C49821;
    const double C400 = -(C49822 * bs[1] * C49823) / C49821;
    const double C49833 = C49829 * ae;
    const double C49945 = C49838 * C49942;
    const double C49951 = C49827 * C49942;
    const double C49958 = C49846 * C49942;
    const double C49970 = C49865 * C49942;
    const double C49991 = C49897 * C49942;
    const double C129 = (-(bs[1] * C49942 * C49823) / C49821) / C49692;
    const double C50710 = C50707 * C49738;
    const double C50727 = C50726 * C49738;
    const double C50828 = C50827 * C49694;
    const double C50840 = C50839 * C49694;
    const double C49707 = C49693 / C49701;
    const double C49705 = C49691 / C49701;
    const double C49704 = 0 - C49702;
    const double C50684 = C50683 / C49692;
    const double C49765 = C49736 / C49741;
    const double C49769 = C49761 / C49741;
    const double C49772 = 0 - C49768;
    const double C50743 = C50742 / C49737;
    const double C49826 = -C49824;
    const double C49837 = std::pow(C49824, 4);
    const double C49864 = std::pow(C49824, 6);
    const double C144 =
        (-(C49819 * std::pow(-C49824, 3) * bs[3] * C49819 * C49822 * ae * ce) /
         C49737) /
            C49692 -
        (ae * std::pow(C49824, 2) * bs[2] * C49822 * ce) / (C49737 * C49692);
    const double C50267 = std::pow(C49824, 2);
    const double C130 =
        (C49819 * std::pow(C49824, 2) * bs[2] * C49942) / C49692 -
        (ae * bs[1] * C49823) / (C49821 * C49692);
    const double C49835 = C49833 * ce;
    const double C50711 = C50710 / C49737;
    const double C50728 = C50727 / C49737;
    const double C50829 = C50828 / C49692;
    const double C50841 = C50840 / C49692;
    const double C49709 = C49704 * ae;
    const double C50685 = -C50684;
    const double C49775 = C49772 * ce;
    const double C50744 = -C50743;
    const double C49831 = std::pow(C49826, 3);
    const double C49845 = std::pow(C49826, 5);
    const double C49896 = std::pow(C49826, 7);
    const double C49842 = C49837 * C49840;
    const double C49944 = C49838 * C49837;
    const double C49946 = C49837 * C49945;
    const double C49875 = C49864 * C49871;
    const double C49972 = C49864 * C49970;
    const double C49992 = C49865 * C49864;
    const double C50269 = C50268 * C50267;
    const double C134 = -(C49819 * C50267 * C50268 * C49828) / C49737;
    const double C266 = -(C50018 * C50267 * C50268 * C49828) / C49737;
    const double C270 = (C50018 * C50267 * C50268 * C49942) / C49692;
    const double C410 = (C49822 * C50267 * C50268 * C49942) / C49692;
    const double C414 = (ce * bs[1] * C49823) / (C49821 * C49737) -
                        (C49822 * C50267 * C50268 * C49828) / C49737;
    const double C49839 = C49838 * C49835;
    const double C49849 = C49846 * C49835;
    const double C49868 = C49865 * C49835;
    const double C49902 = C49897 * C49835;
    const double C50712 = -C50711;
    const double C50729 = -C50728;
    const double C50830 = -C50829;
    const double C50842 = -C50841;
    const double C49712 = C49709 / C49692;
    const double C50686 = std::exp(C50685);
    const double C49777 = C49775 / C49737;
    const double C50745 = std::exp(C50744);
    const double C49834 = C49831 * C49832;
    const double C49943 = C49827 * C49831;
    const double C49952 = C49831 * C49951;
    const double C286 =
        (-((yP - yQ) * C49831 * C49827 * C49835) / C49737) / C49692;
    const double C430 =
        (-(C49822 * C49831 * C49827 * C49835) / C49737) / C49692 -
        (std::pow(C49824, 2) * bs[2] * C49942 * ce) / C49830;
    const double C49853 = C49845 * C49851;
    const double C49961 = C49845 * C49958;
    const double C49971 = C49846 * C49845;
    const double C49911 = C49896 * C49906;
    const double C49994 = C49896 * C49991;
    const double C49847 = ae * C49842;
    const double C49844 = C49819 * C49842;
    const double C50437 = C50018 * C49842;
    const double C50445 = C49822 * C49842;
    const double C49960 = C49819 * C49944;
    const double C49959 = C49944 * ae;
    const double C50278 = C49944 * C49848;
    const double C50389 = C49944 * C50036;
    const double C50422 = C50018 * C49944;
    const double C50448 = C49944 * C50094;
    const double C50509 = C49822 * C49944;
    const double C50508 = C49944 * ce;
    const double C49954 = C49819 * C49946;
    const double C50034 = C50018 * C49946;
    const double C50093 = C49946 * ce;
    const double C50091 = C49822 * C49946;
    const double C49878 = C49875 * C49848;
    const double C49898 = ae * C49875;
    const double C49894 = C49819 * C49875;
    const double C50522 = C49875 * C50036;
    const double C50553 = C50018 * C49875;
    const double C50571 = C49822 * C49875;
    const double C49976 = C49819 * C49972;
    const double C50077 = C49972 * C50036;
    const double C50135 = C50018 * C49972;
    const double C50164 = C49972 * C50094;
    const double C50239 = C49972 * ce;
    const double C50237 = C49822 * C49972;
    const double C49997 = C49992 * C49848;
    const double C49996 = C49819 * C49992;
    const double C49995 = C49992 * ae;
    const double C50533 = C49992 * C50036;
    const double C50556 = C50018 * C49992;
    const double C50575 = C49992 * C50094;
    const double C124 = C50269 * C49848 - (bs[1] * C49823) / C49821;
    const double C255 = C50018 * C49819 * C50269;
    const double C257 = C50269 * C50036 - (bs[1] * C49823) / C49821;
    const double C399 = C49822 * C49819 * C50269;
    const double C401 = C50269 * C50094 - (bs[1] * C49823) / C49821;
    const double C780 = C49822 * C50018 * C50269;
    const double C49841 = C49837 * C49839;
    const double C49852 = C49845 * C49849;
    const double C49873 = C49864 * C49868;
    const double C49909 = C49896 * C49902;
    const double C50713 = std::exp(C50712);
    const double C50730 = std::exp(C50729);
    const double C50831 = std::exp(C50830);
    const double C50843 = std::exp(C50842);
    const double C49714 = C49712 - C49705;
    const double C19868 = C50686 * C270;
    const double C22168 = C50686 * C410;
    const double C49703 = C49699 * C50686;
    const double C50687 = C50686 * C50681;
    const double C50691 = C50690 * C50686;
    const double C50958 = C50686 * C50682;
    const double C50955 = C50686 / C49697;
    const double C16980 = C50983 * C50686;
    const double C49779 = C49777 - C49769;
    const double C49742 = C49740 * C50745;
    const double C121 = -(2 * ce * de * (zC - zD) * C50745) / (ce + de);
    const double C50806 = C50745 * C50804;
    const double C50809 = C50717 * C50745;
    const double C50978 = C50745 * C50805;
    const double C50971 = C50745 / C49762;
    const double C393 = C50970 * C50745;
    const double C145 =
        (-(ae * C49819 * C49834) / C49737) / C49692 -
        (C49831 * C49827 * C49835) / C49830 +
        C49819 * ((-(C49819 * std::pow(C49824, 4) * bs[4] * C49835) / C49737) /
                      C49692 -
                  (ae * C49834) / C49830);
    const double C135 = -(C49834 * C49848 + C50267 * C50268 * C49828) / C49737;
    const double C136 = (-2 * C49819 * C49834) / C49737 -
                        (C49819 * (C49842 * C49848 + C49834)) / C49737;
    const double C264 = -(C50018 * (C49842 * C49848 + C49834)) / C49737;
    const double C265 = -(C50018 * C49819 * C49834) / C49737;
    const double C275 = -(C49834 * C50036 + C50267 * C50268 * C49828) / C49737;
    const double C413 =
        -(C49822 * C49819 * C49834 + C49819 * C50269 * ce) / C49737;
    const double C419 = -(C49822 * (C49822 * C49834 + C50269 * ce) +
                          C50267 * C50268 * C49828 + C49822 * C50269 * ce) /
                        C49737;
    const double C789 =
        -(C49822 * C50018 * C49834 + C50018 * C50269 * ce) / C49737;
    const double C981 = (-2 * C50018 * C49834) / C49737 -
                        (C50018 * (C49842 * C50036 + C49834)) / C49737;
    const double C49955 = C49943 * ae;
    const double C50277 = C49819 * C49943;
    const double C50363 = C50018 * C49943;
    const double C50447 = C49822 * C49943;
    const double C50446 = C49943 * ce;
    const double C412 = -(C49822 * (C49842 * C49848 + C49834) +
                          (C50269 + C49943 * C49848) * ce) /
                        C49737;
    const double C1446 = -(C49822 * (C49842 * C50036 + C49834) +
                           (C50269 + C49943 * C50036) * ce) /
                         C49737;
    const double C1736 = (-2 * (C49822 * C49834 + C50269 * ce)) / C49737 -
                         (C49822 * (C49822 * (C49822 * C49842 + C49943 * ce) +
                                    C49834 + C49822 * C49943 * ce)) /
                             C49737 -
                         ((C50269 + C49943 * C50094) * ce) / C49737;
    const double C125 =
        2 * C49819 * C50269 + C49819 * (C50269 + C49943 * C49848);
    const double C254 = C50018 * (C50269 + C49943 * C49848);
    const double C398 = C49822 * (C50269 + C49943 * C49848);
    const double C977 =
        2 * C50018 * C50269 + C50018 * (C50269 + C49943 * C50036);
    const double C1438 = C49822 * (C50269 + C49943 * C50036);
    const double C1728 =
        2 * C49822 * C50269 + C49822 * (C50269 + C49943 * C50094);
    const double C131 =
        (C50267 * C50268 * C49942 + C49819 * (C49819 * C49952 + C50269 * ae) +
         C49819 * C50269 * ae) /
        C49692;
    const double C269 = (C50018 * (C49819 * C49952 + C50269 * ae)) / C49692;
    const double C271 = (C50267 * C50268 * C49942 + C49952 * C50036) / C49692;
    const double C409 = (C49822 * (C49819 * C49952 + C50269 * ae)) / C49692;
    const double C415 = (C50267 * C50268 * C49942 + C49952 * C50094) / C49692;
    const double C785 = (C49822 * C50018 * C49952) / C49692;
    const double C985 =
        (2 * C50018 * C49952 + C50018 * (C49952 + C49946 * C50036)) / C49692;
    const double C1442 = (C49822 * (C49952 + C49946 * C50036)) / C49692;
    const double C1732 =
        (2 * C49822 * C49952 + C49822 * (C49952 + C49946 * C50094)) / C49692;
    const double C19870 = C50686 * C286;
    const double C22170 = C50686 * C430;
    const double C49855 = C49853 * C49848;
    const double C49866 = ae * C49853;
    const double C49862 = C49819 * C49853;
    const double C50408 = C49853 * C50036;
    const double C50482 = C50018 * C49853;
    const double C50507 = C49822 * C49853;
    const double C2329 =
        (-3 * (C49842 * C50036 + C49834)) / C49737 +
        C50018 * ((-2 * C50018 * C49842) / C49737 -
                  (C50018 * (C49853 * C50036 + C49842)) / C49737);
    const double C49963 = C49819 * C49961;
    const double C50048 = C49961 * C50036;
    const double C50076 = C50018 * C49961;
    const double C50097 = C49961 * C50094;
    const double C50163 = C49961 * ce;
    const double C50161 = C49822 * C49961;
    const double C49975 = C49971 * C49848;
    const double C49974 = C49819 * C49971;
    const double C49973 = C49971 * ae;
    const double C50423 = C49971 * C50036;
    const double C50485 = C50018 * C49971;
    const double C50510 = C49971 * C50094;
    const double C50573 = C49822 * C49971;
    const double C50572 = C49971 * ce;
    const double C49914 = C49911 * C49848;
    const double C49998 = C49819 * C49994;
    const double C50194 = C49994 * C50036;
    const double C50215 = C50018 * C49994;
    const double C50241 = C49994 * C50094;
    const double C49850 = C49847 / C49830;
    const double C276 = -(C49844 * C50036 + C49819 * C49834) / C49737;
    const double C49962 = C49960 * ae;
    const double C50281 = 2 * C49960;
    const double C50361 = C50018 * C49960;
    const double C50454 = C49822 * C49960;
    const double C50453 = C49960 * ce;
    const double C50279 = C49943 + C50278;
    const double C50390 = C49943 + C50389;
    const double C50424 = 2 * C50422;
    const double C50484 = C49822 * C50422;
    const double C50483 = C50422 * ce;
    const double C50450 = C49943 + C50448;
    const double C50514 = 2 * C50509;
    const double C50512 = C50509 * ce;
    const double C1095 = (C50018 * C49952 + C50034 * C50094) / C49692;
    const double C50096 = C50093 / C49830;
    const double C49881 = C49878 + C49853;
    const double C49903 = C49898 / C49830;
    const double C49905 = -2 * C49894;
    const double C49901 = ae * C49894;
    const double C50405 = C49894 * C50036;
    const double C50473 = C50018 * C49894;
    const double C50493 = C49822 * C49894;
    const double C50524 = C50522 + C49853;
    const double C50557 = C49822 * C50553;
    const double C50079 = C49961 + C50077;
    const double C50138 = C50135 * C50094;
    const double C50193 = 2 * C50135;
    const double C50214 = C50135 * ce;
    const double C50211 = C49822 * C50135;
    const double C50169 = C49961 + C50164;
    const double C50245 = C50239 / C49830;
    const double C50246 = 2 * C50237;
    const double C50243 = C50237 * ce;
    const double C50000 = C49971 + C49997;
    const double C49999 = C49996 * ae;
    const double C50416 = C49996 * C50036;
    const double C50476 = C50018 * C49996;
    const double C50496 = C49996 * C50094;
    const double C50534 = C49971 + C50533;
    const double C50559 = C50556 * C50094;
    const double C50581 = C49971 + C50575;
    const double C146 =
        2 * ((-(C49819 * C49841) / C49737) / C49692 - (ae * C49834) / C49830) -
        (ae * (C49842 * std::pow(C49819, 2) + C49834)) / C49830 +
        C49819 *
            ((-(ae * C49819 * C49842) / C49737) / C49692 - C49841 / C49830 +
             C49819 *
                 ((-(C49819 * std::pow(C49826, 5) * bs[5] * C49835) / C49737) /
                      C49692 -
                  (ae * C49842) / C49830));
    const double C285 = (yP - yQ) * ((-(C49819 * C49841) / C49737) / C49692 -
                                     (ae * C49834) / C49830);
    const double C287 = (-(C49841 * std::pow(yP - yQ, 2)) / C49737) / C49692 -
                        (C49831 * C49827 * C49835) / C49830;
    const double C429 = C49822 * ((-(C49819 * C49841) / C49737) / C49692 -
                                  (ae * C49834) / C49830) -
                        ((C49819 * C49831 * C49827 * C49942 +
                          bs[2] * std::pow(C49824, 2) * ae) *
                         ce) /
                            C49830;
    const double C431 = (-(C49822 * C49952 * ce) / C49737) / C49692 -
                        (C49831 * C49827 * C49835) / C49830 +
                        C49822 * ((-(C49822 * C49841) / C49737) / C49692 -
                                  (C49952 * ce) / C49830);
    const double C795 = (-(C49822 * C50018 * C49841) / C49737) / C49692 -
                        (C50018 * C49952 * ce) / C49830;
    const double C49854 = C49819 * C49852;
    const double C49863 = C49852 / C49830;
    const double C50087 = C50018 * C49852;
    const double C50092 = C49822 * C49852;
    const double C989 =
        (-2 * C50018 * C49841) / C49830 +
        C50018 * ((-(C49852 * std::pow(C50018, 2)) / C49737) / C49692 -
                  C49841 / C49830);
    const double C1103 =
        (-(C49822 * C50034 * ce) / C49737) / C49692 -
        (C50018 * C49841) / C49830 +
        C49822 * ((-(C49822 * C50018 * C49852) / C49737) / C49692 -
                  (C50034 * ce) / C49830);
    const double C1450 =
        C49822 * ((-(C49852 * C50036) / C49737) / C49692 - C49841 / C49830) -
        ((C49952 + C49946 * C50036) * ce) / C49830;
    const double C1740 =
        2 * ((-(C49822 * C49841) / C49737) / C49692 - (C49952 * ce) / C49830) -
        ((C49952 + C49946 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 *
            ((-(C49822 * C49946 * ce) / C49737) / C49692 - C49841 / C49830 +
             C49822 * ((-(C49822 * C49852) / C49737) / C49692 -
                       (C49946 * ce) / C49830));
    const double C49877 = C49819 * C49873;
    const double C49895 = C49873 / C49830;
    const double C50063 = C49873 * C50036;
    const double C50133 = C50018 * C49873;
    const double C50162 = C49822 * C49873;
    const double C49913 = C49819 * C49909;
    const double C50183 = C49909 * C50036;
    const double C50213 = C50018 * C49909;
    const double C50238 = C49822 * C49909;
    const double C50714 = C50713 * C50708;
    const double C50718 = C50717 * C50713;
    const double C50965 = C50713 * C50709;
    const double C50962 = C50713 / C49762;
    const double C902 = C50970 * C50713;
    const double C50778 = C50730 * C50776;
    const double C50781 = C50717 * C50730;
    const double C50974 = C50730 * C50777;
    const double C50969 = C50730 / C49762;
    const double C250 = C50970 * C50730;
    const double C50878 = C50831 * C50876;
    const double C50881 = C50690 * C50831;
    const double C50987 = C50831 * C50877;
    const double C50982 = C50831 / C49697;
    const double C2175 = C50983 * C50831;
    const double C50904 = C50843 * C50902;
    const double C50907 = C50690 * C50843;
    const double C50991 = C50843 * C50903;
    const double C50984 = C50843 / C49697;
    const double C5107 = C50983 * C50843;
    const double C49708 = C49703 / C49696;
    const double C49706 = 2 * C49703;
    const double C50959 = C50687 / C49701;
    const double C50957 = C50687 / C49692;
    const double C50956 = C50687 * C50682;
    const double C16979 = (2 * C50690 * C50687) / C49692;
    const double C50960 = C50691 * C50682;
    const double C108 = C50691 / C50961;
    const double C7910 = C50691 / C49697;
    const double C50996 = C50958 / C49692;
    const double C16978 = (C50686 * std::pow(C50681, 2)) / C49696 + C50955;
    const double C49767 = C49742 / C49739;
    const double C49764 = 2 * C49742;
    const double C396 = ((0 * ce) / C49737 - C49742 / C49739) / (2 * C49737) +
                        (0 * ce) / C49737;
    const double C644 =
        ((C50745 - (C49735 * 2 * C49742) / C49737) * ce) / C49737 -
        C49736 / C49741;
    const double C645 = (0 * ce) / C49737 - C49742 / C49739;
    const double C1551 =
        (-C49736 / C49737) / (2 * C49737) -
        ((C50745 - (C49735 * 2 * C49742) / C49737) * de) / C49737;
    const double C1552 =
        (-(2 * C49742) / C49737) / (2 * C49737) - (0 * de) / C49737;
    const double C50980 = C50806 / C49741;
    const double C50979 = C50806 * C50805;
    const double C50973 = C50806 / C49737;
    const double C392 = (2 * C50717 * C50806) / C49737;
    const double C395 =
        (((C50745 - (C49735 * 2 * C49742) / C49737) * ce) / C49737 -
         C49736 / C49741) /
            (2 * C49737) +
        ((C49735 * ((0 * ce) / C49737 - C49742 / C49739) + C50809) * ce) /
            C49737;
    const double C50981 = C50809 * C50805;
    const double C1720 = C50809 / C50968;
    const double C1971 = C50809 / C49762;
    const double C51004 = C50978 / C49737;
    const double C391 = (C50745 * std::pow(C50804, 2)) / C49739 + C50971;
    const double C49956 = C49954 + C49955;
    const double C420 = -(C49822 * (C49822 * C49844 + C50277 * ce) +
                          C49819 * C49834 + C49822 * C50277 * ce) /
                        C49737;
    const double C790 =
        -(C49822 * C50018 * C49844 + C50018 * C50277 * ce) / C49737;
    const double C258 = C49819 * C50269 + C50277 * C50036;
    const double C402 = C49819 * C50269 + C50277 * C50094;
    const double C781 = C49822 * C50018 * C50277;
    const double C976 =
        2 * C50018 * C50277 + C50018 * (C50277 + C49960 * C50036);
    const double C1437 = C49822 * (C50277 + C49960 * C50036);
    const double C1727 =
        2 * C49822 * C50277 + C49822 * (C50277 + C49960 * C50094);
    const double C1099 = -(C49822 * (C49822 * C50018 * C49842 + C50363 * ce) +
                           C50018 * C49834 + C49822 * C50363 * ce) /
                         C49737;
    const double C4512 =
        (-2 * (C49822 * C50437 + C50363 * ce)) / C49737 -
        (C49822 * (C49822 * (C49822 * C50018 * C49853 + C50422 * ce) + C50437 +
                   C49822 * C50422 * ce)) /
            C49737 -
        ((C50363 + C50422 * C50094) * ce) / C49737;
    const double C1091 = C50018 * C50269 + C50363 * C50094;
    const double C4506 =
        2 * C49822 * C50363 + C49822 * (C50363 + C50422 * C50094);
    const double C50449 = C50445 + C50446;
    const double C2340 = C50691 * C269;
    const double C19884 = C50686 * C269;
    const double C24837 = C50691 * C269;
    const double C19872 = C50686 * C271;
    const double C5414 = C50691 * C409;
    const double C22184 = C50686 * C409;
    const double C27960 = C50691 * C409;
    const double C22172 = C50686 * C415;
    const double C20386 = C50686 * C785;
    const double C19876 = C50686 * C985;
    const double C20392 = C50686 * C1442;
    const double C22176 = C50686 * C1732;
    const double C49857 = C49855 + C49842;
    const double C49869 = C49866 / C49830;
    const double C49870 = -2 * C49862;
    const double C49867 = ae * C49862;
    const double C50435 = C50018 * C49862;
    const double C50452 = C49822 * C49862;
    const double C980 = (-2 * C50018 * C49844) / C49737 -
                        (C50018 * (C49862 * C50036 + C49844)) / C49737;
    const double C1445 = -(C49822 * (C49862 * C50036 + C49844) +
                           (C50277 + C49960 * C50036) * ce) /
                         C49737;
    const double C1735 = (-2 * (C49822 * C49844 + C50277 * ce)) / C49737 -
                         (C49822 * (C49822 * (C49822 * C49862 + C49960 * ce) +
                                    C49844 + C49822 * C49960 * ce)) /
                             C49737 -
                         ((C50277 + C49960 * C50094) * ce) / C49737;
    const double C2330 =
        (-3 * (C49862 * C50036 + C49844)) / C49737 +
        C50018 * ((-2 * C50018 * C49862) / C49737 -
                  (C50018 * (C49894 * C50036 + C49862)) / C49737);
    const double C50409 = C50408 + C49842;
    const double C50486 = C49822 * C50482;
    const double C50521 = -2 * C50482;
    const double C50511 = C50507 + C50508;
    const double C49964 = C49963 + C49959;
    const double C50049 = C49946 + C50048;
    const double C50078 = 2 * C50076;
    const double C50134 = C50076 * ce;
    const double C50132 = C49822 * C50076;
    const double C4510 =
        (2 * C49822 * C50034 + C49822 * (C50034 + C50076 * C50094)) / C49692;
    const double C50099 = C49946 + C50097;
    const double C50167 = C50163 / C49830;
    const double C50168 = 2 * C50161;
    const double C50165 = C50161 * ce;
    const double C49978 = C49944 + C49975;
    const double C49977 = C49974 * ae;
    const double C49993 = 2 * C49974;
    const double C50392 = C49974 * C50036;
    const double C50415 = C50018 * C49974;
    const double C50455 = C49974 * C50094;
    const double C50495 = C49822 * C49974;
    const double C50494 = C49974 * ce;
    const double C49979 = C49976 + C49973;
    const double C50425 = C49944 + C50423;
    const double C50487 = C50485 * C50094;
    const double C50532 = 2 * C50485;
    const double C50555 = C49822 * C50485;
    const double C50554 = C50485 * ce;
    const double C50513 = C49944 + C50510;
    const double C50582 = 2 * C50573;
    const double C50579 = C50573 * ce;
    const double C50578 = C50571 + C50572;
    const double C49917 = C49914 + C49875;
    const double C50001 = C49998 + C49995;
    const double C50195 = C49972 + C50194;
    const double C50220 = C50215 * C50094;
    const double C50247 = C49972 + C50241;
    const double C1098 = -(C49822 * (C49822 * C50018 * C49862 + C50361 * ce) +
                           C50018 * C49844 + C49822 * C50361 * ce) /
                         C49737;
    const double C1090 = C50018 * C50277 + C50361 * C50094;
    const double C126 = 3 * (C50269 + C49943 * C49848) +
                        C49819 * (2 * C50277 + C49819 * C50279);
    const double C253 = C50018 * (2 * C50277 + C49819 * C50279);
    const double C259 = C50269 + C49943 * C49848 + C50279 * C50036;
    const double C397 = C49822 * (2 * C50277 + C49819 * C50279);
    const double C403 = C50269 + C49943 * C49848 + C50279 * C50094;
    const double C782 = C49822 * C50018 * C50279;
    const double C2569 =
        -(C49822 * (C49822 * (C49853 * C50036 + C49842) + C50390 * ce) +
          C49842 * C50036 + C49834 + C49822 * C50390 * ce) /
        C49737;
    const double C3091 =
        C49822 * ((-2 * C50018 * C49842) / C49737 -
                  (C50018 * (C49853 * C50036 + C49842)) / C49737) -
        ((2 * C50363 + C50018 * C50390) * ce) / C49737;
    const double C2324 = 3 * (C50269 + C49943 * C50036) +
                         C50018 * (2 * C50363 + C50018 * C50390);
    const double C2564 = C50269 + C49943 * C50036 + C50390 * C50094;
    const double C3086 = C49822 * (2 * C50363 + C50018 * C50390);
    const double C5400 = 3 * (C50269 + C49943 * C50094) +
                         C49822 * (2 * C50447 + C49822 * C50450);
    const double C20728 = C50686 * C1095;
    const double C49884 = C49819 * C49881;
    const double C49899 = -3 * C49881;
    const double C49893 = ae * C49881;
    const double C50460 = C49822 * C49881;
    const double C50468 = C50018 * C49881;
    const double C49910 = C49905 / C49737;
    const double C49908 = C49901 / C49737;
    const double C50406 = C50405 + C49862;
    const double C50477 = C49822 * C50473;
    const double C50525 = C50018 * C50524;
    const double C50545 = C49822 * C50524;
    const double C50080 = C50018 * C50079;
    const double C50192 = 3 * C50079;
    const double C50205 = C50079 * ce;
    const double C50203 = C49822 * C50079;
    const double C50140 = C50076 + C50138;
    const double C50218 = C50214 / C49830;
    const double C50219 = 2 * C50211;
    const double C50216 = C50211 * ce;
    const double C50172 = C49822 * C50169;
    const double C50240 = 3 * C50169;
    const double C50236 = C50169 * ce;
    const double C50249 = C50243 / C49737;
    const double C50003 = C49819 * C50000;
    const double C50002 = C50000 * ae;
    const double C50396 = C50000 * C50036;
    const double C50463 = C50000 * C50094;
    const double C50469 = C50018 * C50000;
    const double C50418 = C49974 + C50416;
    const double C50478 = C50476 * C50094;
    const double C50499 = C49974 + C50496;
    const double C50535 = C50018 * C50534;
    const double C50548 = C50534 * C50094;
    const double C50562 = C50485 + C50559;
    const double C50584 = C49822 * C50581;
    const double C2344 = C50691 * C285;
    const double C19886 = C50686 * C285;
    const double C24841 = C50691 * C285;
    const double C19874 = C50686 * C287;
    const double C5418 = C50691 * C429;
    const double C22186 = C50686 * C429;
    const double C27964 = C50691 * C429;
    const double C22174 = C50686 * C431;
    const double C20388 = C50686 * C795;
    const double C49856 = C49854 / C49737;
    const double C2333 =
        3 * ((-(C49852 * C50036) / C49737) / C49692 - C49841 / C49830) +
        C50018 * ((-2 * C50018 * C49852) / C49830 +
                  C50018 * ((-(C49873 * C50036) / C49737) / C49692 - C49863));
    const double C4518 =
        2 * ((-(C49822 * C50087) / C49737) / C49692 - (C50034 * ce) / C49830) -
        ((C50034 + C50076 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 *
            ((-(C49822 * C50076 * ce) / C49737) / C49692 - C50087 / C49830 +
             C49822 * ((-(C49822 * C50018 * C49873) / C49737) / C49692 -
                       (C50076 * ce) / C49830));
    const double C50095 = C50092 / C49737;
    const double C19878 = C50686 * C989;
    const double C20730 = C50686 * C1103;
    const double C20394 = C50686 * C1450;
    const double C22178 = C50686 * C1740;
    const double C49880 = C49877 / C49737;
    const double C50064 = C50063 / C49737;
    const double C50136 = C49822 * C50133;
    const double C50182 = -2 * C50133;
    const double C50212 = C50133 / C49830;
    const double C50166 = C50162 / C49737;
    const double C49916 = C49913 / C49737;
    const double C50185 = C50183 / C49737;
    const double C50217 = C49822 * C50213;
    const double C50244 = C50238 / C49737;
    const double C50966 = C50714 / C49741;
    const double C50964 = C50714 / C49737;
    const double C50963 = C50714 * C50709;
    const double C901 = (2 * C50717 * C50714) / C49737;
    const double C50967 = C50718 * C50709;
    const double C116 = C50718 / C50968;
    const double C539 = C50718 / C49762;
    const double C50999 = C50965 / C49737;
    const double C900 = (C50713 * std::pow(C50708, 2)) / C49739 + C50962;
    const double C50976 = C50778 / C49741;
    const double C50975 = C50778 * C50777;
    const double C50972 = C50778 / C49737;
    const double C249 = (2 * C50717 * C50778) / C49737;
    const double C50977 = C50781 * C50777;
    const double C972 = C50781 / C50968;
    const double C1204 = C50781 / C49762;
    const double C51001 = C50974 / C49737;
    const double C248 = (C50730 * std::pow(C50776, 2)) / C49739 + C50969;
    const double C50989 = C50878 / C49701;
    const double C50988 = C50878 * C50877;
    const double C50985 = C50878 / C49692;
    const double C2174 = (2 * C50690 * C50878) / C49692;
    const double C50990 = C50881 * C50877;
    const double C19766 = C50881 / C50961;
    const double C24684 = C50881 / C49697;
    const double C51007 = C50987 / C49692;
    const double C2173 = (C50831 * std::pow(C50876, 2)) / C49696 + C50982;
    const double C50993 = C50904 / C49701;
    const double C50992 = C50904 * C50903;
    const double C50986 = C50904 / C49692;
    const double C5106 = (2 * C50690 * C50904) / C49692;
    const double C50994 = C50907 * C50903;
    const double C39166 = C50907 / C50961;
    const double C44479 = C50907 / C49697;
    const double C51010 = C50991 / C49692;
    const double C5105 = (C50843 * std::pow(C50902, 2)) / C49696 + C50984;
    const double C49711 = C49700 - C49708;
    const double C49710 = C49690 * C49706;
    const double C2177 = (-C49706 / C49692) / C49697 - (0 * be) / C49692;
    const double C19767 = -C49706 / C49692;
    const double C24863 = C50957 * C285;
    const double C24859 = C50957 * C269;
    const double C24857 = C50957 * C985;
    const double C24853 = C50957 * C989;
    const double C24847 = C50957 * C287;
    const double C24843 = C50957 * C271;
    const double C24839 = C50957 * C286;
    const double C24835 = C50957 * C270;
    const double C25587 = C50957 * C1450;
    const double C25583 = C50957 * C1442;
    const double C25579 = C50957 * C795;
    const double C25575 = C50957 * C785;
    const double C26032 = C50957 * C1103;
    const double C26028 = C50957 * C1095;
    const double C27980 = C50957 * C429;
    const double C27976 = C50957 * C409;
    const double C27972 = C50957 * C431;
    const double C27968 = C50957 * C415;
    const double C27966 = C50957 * C430;
    const double C27962 = C50957 * C410;
    const double C30404 = C50957 * C1740;
    const double C30400 = C50957 * C1732;
    const double C50995 = C50956 / C49696;
    const double C17142 = C16979 * C285;
    const double C17136 = C16979 * C269;
    const double C34133 = C16979 * C429;
    const double C34127 = C16979 * C409;
    const double C50997 = C50960 / C49692;
    const double C2171 = -C50996;
    const double C17164 = C16978 * C285;
    const double C17158 = C16978 * C269;
    const double C17156 = C16978 * C271;
    const double C17150 = C16978 * C287;
    const double C17140 = C16978 * C286;
    const double C17134 = C16978 * C270;
    const double C17866 = C16978 * C795;
    const double C17860 = C16978 * C785;
    const double C18142 = C16978 * C989;
    const double C18136 = C16978 * C985;
    const double C18306 = C16978 * C1103;
    const double C18300 = C16978 * C1095;
    const double C18810 = C16978 * C1450;
    const double C18804 = C16978 * C1442;
    const double C34155 = C16978 * C429;
    const double C34149 = C16978 * C409;
    const double C34143 = C16978 * C431;
    const double C34137 = C16978 * C415;
    const double C34135 = C16978 * C430;
    const double C34129 = C16978 * C410;
    const double C35977 = C16978 * C1740;
    const double C35971 = C16978 * C1732;
    const double C49774 = C49771 - C49767;
    const double C49770 = C49735 * C49764;
    const double C51005 = C50979 / C49739;
    const double C394 =
        (((0 - (C49735 * C49736) / C49737) * ce) / C49737 - (0 * de) / C49741) /
            (2 * C49737) +
        ((C49735 * (((C50745 - (C49735 * 2 * C49742) / C49737) * ce) / C49737 -
                    C49736 / C49741) +
          C50973) *
         ce) /
            C49737 +
        (0 * ce) / C49737 - C49742 / C49739;
    const double C51006 = C50981 / C49737;
    const double C1549 = -C51004;
    const double C132 =
        (2 * (C49819 * C49952 + C50269 * ae) +
         C49819 * (C49952 + C49819 * C49956 + C49819 * C49943 * ae) +
         (C50269 + C49943 * C49848) * ae) /
        C49692;
    const double C268 =
        (C50018 * (C49952 + C49819 * C49956 + C50277 * ae)) / C49692;
    const double C272 =
        (C49819 * C49952 + C50269 * ae + C49956 * C50036) / C49692;
    const double C408 =
        (C49822 * (C49952 + C49819 * C49956 + C50277 * ae)) / C49692;
    const double C416 =
        (C49819 * C49952 + C50269 * ae + C49956 * C50094) / C49692;
    const double C786 = (C49822 * C50018 * C49956) / C49692;
    const double C5405 =
        (-3 * (C49822 * C50449 + C49834 + C50447 * ce)) / C49737 +
        C49822 * ((-2 * C50449) / C49737 -
                  (C49822 * (C49822 * (C49822 * C49853 + C49944 * ce) + C49842 +
                             C49822 * C49944 * ce)) /
                      C49737 -
                  (C50450 * ce) / C49737) -
        ((2 * C50447 + C49822 * C50450) * ce) / C49737;
    const double C137 =
        (-3 * (C49842 * C49848 + C49834)) / C49737 +
        C49819 * ((-2 * C49844) / C49737 - (C49819 * C49857) / C49737);
    const double C263 =
        C50018 * ((-2 * C49844) / C49737 - (C49819 * C49857) / C49737);
    const double C277 = -(C49857 * C50036 + C49842 * C49848 + C49834) / C49737;
    const double C411 =
        C49822 * ((-2 * C49844) / C49737 - (C49819 * C49857) / C49737) -
        ((2 * C50277 + C49819 * C50279) * ce) / C49737;
    const double C421 = -(C49822 * (C49822 * C49857 + C50279 * ce) +
                          C49842 * C49848 + C49834 + C49822 * C50279 * ce) /
                        C49737;
    const double C791 =
        -(C49822 * C50018 * C49857 + C50018 * C50279 * ce) / C49737;
    const double C979 = (-2 * C50018 * C49857) / C49737 -
                        (C50018 * (C49881 * C50036 + C49857)) / C49737;
    const double C49874 = C49870 / C49737;
    const double C49872 = C49867 / C49737;
    const double C50456 = C50452 + C50453;
    const double C3393 =
        4 * ((-2 * C50018 * C49842) / C49737 - (C50018 * C50409) / C49737) +
        C50018 * ((-3 * C50409) / C49737 +
                  C50018 * ((-2 * C50018 * C49853) / C49737 -
                            (C50018 * (C49875 * C50036 + C49853)) / C49737));
    const double C50488 = C50486 + C50483;
    const double C50523 = C50521 / C49737;
    const double C50515 = C49822 * C50511;
    const double C50570 = -2 * C50511;
    const double C49965 = C49819 * C49964;
    const double C49969 = 2 * C49964;
    const double C50032 = C50018 * C49964;
    const double C50105 = C49964 * ce;
    const double C50103 = C49822 * C49964;
    const double C984 =
        (2 * C50018 * C49956 + C50018 * (C49956 + C49964 * C50036)) / C49692;
    const double C1441 = (C49822 * (C49956 + C49964 * C50036)) / C49692;
    const double C1731 =
        (2 * C49822 * C49956 + C49822 * (C49956 + C49964 * C50094)) / C49692;
    const double C2573 =
        (-(C49852 * C50036) / C49737) / C49692 - C49841 / C49830 -
        (C49822 * C50049 * ce) / C49830 +
        C49822 * (C49822 * ((-(C49873 * C50036) / C49737) / C49692 - C49863) -
                  (C50049 * ce) / C49830);
    const double C3095 =
        C49822 * ((-2 * C50018 * C49852) / C49830 +
                  C50018 * ((-(C49873 * C50036) / C49737) / C49692 - C49863)) -
        ((2 * C50034 + C50018 * C50049) * ce) / C49830;
    const double C2327 = (3 * (C49952 + C49946 * C50036) +
                          C50018 * (2 * C50034 + C50018 * C50049)) /
                         C49692;
    const double C2567 = (C49952 + C49946 * C50036 + C50049 * C50094) / C49692;
    const double C3089 = (C49822 * (2 * C50034 + C50018 * C50049)) / C49692;
    const double C4514 =
        (2 * C49822 * C50049 + C49822 * (C50049 + C50079 * C50094)) / C49692;
    const double C50137 = C50134 / C49830;
    const double C22180 = C50686 * C4510;
    const double C29220 = C50957 * C4510;
    const double C5403 = (3 * (C49952 + C49946 * C50094) +
                          C49822 * (2 * C50091 + C49822 * C50099)) /
                         C49692;
    const double C50170 = C50165 / C49737;
    const double C49980 = C49978 * ae;
    const double C50282 = C49819 * C49978;
    const double C50287 = 3 * C49978;
    const double C50359 = C50018 * C49978;
    const double C50462 = C49822 * C49978;
    const double C50461 = C49978 * ce;
    const double C1444 = -(C49822 * (C49881 * C50036 + C49857) +
                           (C50279 + C49978 * C50036) * ce) /
                         C49737;
    const double C1734 = (-2 * (C49822 * C49857 + C50279 * ce)) / C49737 -
                         (C49822 * (C49822 * (C49822 * C49881 + C49978 * ce) +
                                    C49857 + C49822 * C49978 * ce)) /
                             C49737 -
                         ((C50279 + C49978 * C50094) * ce) / C49737;
    const double C975 =
        2 * C50018 * C50279 + C50018 * (C50279 + C49978 * C50036);
    const double C1436 = C49822 * (C50279 + C49978 * C50036);
    const double C1726 =
        2 * C49822 * C50279 + C49822 * (C50279 + C49978 * C50094);
    const double C50393 = C49960 + C50392;
    const double C50417 = 2 * C50415;
    const double C50475 = C49822 * C50415;
    const double C50474 = C50415 * ce;
    const double C4511 =
        (-2 * (C49822 * C50435 + C50361 * ce)) / C49737 -
        (C49822 * (C49822 * (C49822 * C50018 * C49894 + C50415 * ce) + C50435 +
                   C49822 * C50415 * ce)) /
            C49737 -
        ((C50361 + C50415 * C50094) * ce) / C49737;
    const double C4505 =
        2 * C49822 * C50361 + C49822 * (C50361 + C50415 * C50094);
    const double C50457 = C49960 + C50455;
    const double C50500 = 2 * C50495;
    const double C50498 = C50495 * ce;
    const double C50497 = C50493 + C50494;
    const double C49981 = C49819 * C49979;
    const double C49990 = 2 * C49979;
    const double C50051 = C49979 * C50036;
    const double C50069 = C50018 * C49979;
    const double C50106 = C49979 * C50094;
    const double C50147 = C49979 * ce;
    const double C50145 = C49822 * C49979;
    const double C50426 = C50018 * C50425;
    const double C50531 = 3 * C50425;
    const double C50547 = C49822 * C50425;
    const double C50546 = C50425 * ce;
    const double C4516 =
        (-2 * (C49822 * C50409 + C50390 * ce)) / C49737 -
        (C49822 *
         (C49822 * (C49822 * (C49875 * C50036 + C49853) + C50425 * ce) +
          C50409 + C49822 * C50425 * ce)) /
            C49737 -
        ((C50390 + C50425 * C50094) * ce) / C49737;
    const double C4508 =
        2 * C49822 * C50390 + C49822 * (C50390 + C50425 * C50094);
    const double C50489 = C50422 + C50487;
    const double C50560 = 2 * C50555;
    const double C50558 = C50555 * ce;
    const double C50561 = C50557 + C50554;
    const double C50516 = C49822 * C50513;
    const double C50576 = 3 * C50513;
    const double C50574 = C50513 * ce;
    const double C50583 = C49822 * C50578;
    const double C49920 = C49819 * C49917;
    const double C2331 =
        (-3 * (C49881 * C50036 + C49857)) / C49737 +
        C50018 * ((-2 * C50018 * C49881) / C49737 -
                  (C50018 * (C49917 * C50036 + C49881)) / C49737);
    const double C50004 = C49819 * C50001;
    const double C50070 = C50001 * C50036;
    const double C50125 = C50018 * C50001;
    const double C50148 = C50001 * C50094;
    const double C50196 = C50018 * C50195;
    const double C50206 = C50195 * C50094;
    const double C50223 = C50135 + C50220;
    const double C50251 = C49822 * C50247;
    const double C49886 = C49884 / C49737;
    const double C49904 = C49899 / C49737;
    const double C49900 = C49893 / C49830;
    const double C49912 = -C49908;
    const double C3392 =
        4 * ((-2 * C50018 * C49862) / C49737 - (C50018 * C50406) / C49737) +
        C50018 * ((-3 * C50406) / C49737 +
                  C50018 * ((-2 * C50018 * C49894) / C49737 -
                            (C50018 * (C49819 * C49911 * C50036 + C49894)) /
                                C49737));
    const double C50526 = C50525 / C49737;
    const double C50081 = C50078 + C50080;
    const double C50207 = C50205 / C49830;
    const double C6407 = (3 * (C50034 + C50076 * C50094) +
                          C49822 * (2 * C50132 + C49822 * C50140)) /
                         C49692;
    const double C50221 = C50216 / C49737;
    const double C50175 = C50168 + C50172;
    const double C50242 = C50236 / C49830;
    const double C50252 = -C50249;
    const double C50005 = C49993 + C50003;
    const double C50397 = C49978 + C50396;
    const double C50465 = C49978 + C50463;
    const double C50419 = C50018 * C50418;
    const double C50480 = C50415 + C50478;
    const double C50502 = C49822 * C50499;
    const double C50536 = C50532 + C50535;
    const double C50550 = C50425 + C50548;
    const double C50564 = C49822 * C50562;
    const double C50586 = C50582 + C50584;
    const double C49858 = -C49856;
    const double C19880 = C50686 * C2333;
    const double C25871 = C50957 * C2333;
    const double C22182 = C50686 * C4518;
    const double C29224 = C50957 * C4518;
    const double C50098 = -C50095;
    const double C49883 = -C49880;
    const double C50065 = -C50064;
    const double C50139 = C50136 / C49737;
    const double C50184 = C50182 / C49830;
    const double C50171 = -C50166;
    const double C49919 = -C49916;
    const double C50186 = -C50185;
    const double C50222 = C50217 / C49737;
    const double C50250 = -C50244;
    const double C50998 = C50963 / C49739;
    const double C51000 = C50967 / C49737;
    const double C251 = -C50999;
    const double C51002 = C50975 / C49739;
    const double C51003 = C50977 / C49737;
    const double C898 = -C51001;
    const double C51008 = C50988 / C49696;
    const double C51009 = C50990 / C49692;
    const double C16981 = -C51007;
    const double C51011 = C50992 / C49696;
    const double C51012 = C50994 / C49692;
    const double C33829 = -C51010;
    const double C24868 = C49711 * C259;
    const double C24864 = C49711 * C264;
    const double C24860 = C49711 * C254;
    const double C24854 = C49711 * C976;
    const double C24850 = C49711 * C980;
    const double C24848 = C49711 * C276;
    const double C24844 = C49711 * C258;
    const double C24840 = C49711 * C265;
    const double C24836 = C49711 * C255;
    const double C25210 = C49711 * C253;
    const double C25590 = C49711 * C782;
    const double C25584 = C49711 * C1445;
    const double C25580 = C49711 * C1437;
    const double C25576 = C49711 * C790;
    const double C25572 = C49711 * C781;
    const double C25872 = C49711 * C2330;
    const double C26033 = C49711 * C1098;
    const double C26029 = C49711 * C1090;
    const double C27983 = C49711 * C403;
    const double C27981 = C49711 * C412;
    const double C27977 = C49711 * C398;
    const double C27973 = C49711 * C420;
    const double C27969 = C49711 * C402;
    const double C27963 = C49711 * C413;
    const double C27959 = C49711 * C399;
    const double C28419 = C49711 * C397;
    const double C30401 = C49711 * C1735;
    const double C30397 = C49711 * C1727;
    const double C120 =
        (C49711 / C49697 - (0 * be) / C49692) / C49697 + (0 * ae) / C49692;
    const double C7915 = C49711 / C49697 - (0 * be) / C49692;
    const double C16985 = C49711 / C49697 + (0 * ae) / C49692;
    const double C49713 = C49710 / C49692;
    const double C2371 = C2177 * C259;
    const double C2367 = C2177 * C264;
    const double C2363 = C2177 * C254;
    const double C2357 = C2177 * C976;
    const double C2353 = C2177 * C980;
    const double C2351 = C2177 * C276;
    const double C2347 = C2177 * C258;
    const double C2343 = C2177 * C265;
    const double C2339 = C2177 * C255;
    const double C2725 = C2177 * C253;
    const double C3117 = C2177 * C782;
    const double C3111 = C2177 * C1445;
    const double C3107 = C2177 * C1437;
    const double C3103 = C2177 * C790;
    const double C3099 = C2177 * C781;
    const double C3407 = C2177 * C2330;
    const double C3576 = C2177 * C1098;
    const double C3572 = C2177 * C1090;
    const double C5445 = C2177 * C403;
    const double C5443 = C2177 * C412;
    const double C5439 = C2177 * C398;
    const double C5435 = C2177 * C1735;
    const double C5431 = C2177 * C1727;
    const double C5427 = C2177 * C420;
    const double C5423 = C2177 * C402;
    const double C5417 = C2177 * C413;
    const double C5413 = C2177 * C399;
    const double C5781 = C2177 * C397;
    const double C19897 = C19767 * C2330;
    const double C19893 = C19767 * C980;
    const double C19891 = C19767 * C976;
    const double C19889 = C19767 * C276;
    const double C19887 = C19767 * C258;
    const double C19885 = C19767 * C265;
    const double C19883 = C19767 * C255;
    const double C19881 = C19767 * C2324;
    const double C19879 = C19767 * C2329;
    const double C19877 = C19767 * C981;
    const double C19875 = C19767 * C977;
    const double C19873 = C19767 * C275;
    const double C19871 = C19767 * C257;
    const double C19869 = C19767 * C266;
    const double C19867 = C19767 * C256;
    const double C20135 = C19767 * C259;
    const double C20133 = C19767 * C264;
    const double C20131 = C19767 * C254;
    const double C20411 = C19767 * C1445;
    const double C20407 = C19767 * C1437;
    const double C20405 = C19767 * C790;
    const double C20401 = C19767 * C781;
    const double C20399 = C19767 * C3091;
    const double C20397 = C19767 * C3086;
    const double C20393 = C19767 * C1446;
    const double C20391 = C19767 * C1438;
    const double C20387 = C19767 * C789;
    const double C20385 = C19767 * C780;
    const double C20737 = C19767 * C2569;
    const double C20735 = C19767 * C2564;
    const double C20729 = C19767 * C1099;
    const double C20727 = C19767 * C1091;
    const double C22007 = C19767 * C1098;
    const double C22005 = C19767 * C1090;
    const double C22193 = C19767 * C1735;
    const double C22191 = C19767 * C1727;
    const double C22189 = C19767 * C420;
    const double C22187 = C19767 * C402;
    const double C22185 = C19767 * C413;
    const double C22183 = C19767 * C399;
    const double C22181 = C19767 * C4512;
    const double C22179 = C19767 * C4506;
    const double C22177 = C19767 * C1736;
    const double C22175 = C19767 * C1728;
    const double C22173 = C19767 * C419;
    const double C22171 = C19767 * C401;
    const double C22169 = C19767 * C414;
    const double C22167 = C19767 * C400;
    const double C22361 = C19767 * C782;
    const double C22527 = C19767 * C403;
    const double C22525 = C19767 * C412;
    const double C22523 = C19767 * C398;
    const double C24071 = C19767 * C5400;
    const double C51013 = C50955 - C50995;
    const double C51014 = C50959 - C50997;
    const double C2366 = C2171 * C285;
    const double C2362 = C2171 * C269;
    const double C2360 = C2171 * C985;
    const double C2356 = C2171 * C989;
    const double C2350 = C2171 * C287;
    const double C2346 = C2171 * C271;
    const double C2342 = C2171 * C286;
    const double C2338 = C2171 * C270;
    const double C3114 = C2171 * C1450;
    const double C3110 = C2171 * C1442;
    const double C3106 = C2171 * C795;
    const double C3102 = C2171 * C785;
    const double C3406 = C2171 * C2333;
    const double C3575 = C2171 * C1103;
    const double C3571 = C2171 * C1095;
    const double C5442 = C2171 * C429;
    const double C5438 = C2171 * C409;
    const double C5434 = C2171 * C1740;
    const double C5430 = C2171 * C1732;
    const double C5426 = C2171 * C431;
    const double C5422 = C2171 * C415;
    const double C5420 = C2171 * C430;
    const double C5416 = C2171 * C410;
    const double C6422 = C2171 * C4518;
    const double C6418 = C2171 * C4510;
    const double C1724 =
        (C49774 / C49762 - (0 * de) / C49737) / C49762 + (0 * ce) / C49737;
    const double C1974 = C49774 / C49762 - (0 * de) / C49737;
    const double C49773 = C49770 / C49737;
    const double C51019 = C50971 - C51005;
    const double C51020 = C50980 - C51006;
    const double C2364 = C50691 * C268;
    const double C2724 = C2171 * C268;
    const double C8068 = C7910 * C268;
    const double C17160 = C16979 * C268;
    const double C17138 = C16980 * C268;
    const double C17498 = C16978 * C268;
    const double C20132 = C50686 * C268;
    const double C24861 = C50691 * C268;
    const double C25209 = C50957 * C268;
    const double C2370 = C2171 * C272;
    const double C2348 = C50691 * C272;
    const double C17170 = C16978 * C272;
    const double C17154 = C16979 * C272;
    const double C19888 = C50686 * C272;
    const double C24867 = C50957 * C272;
    const double C24845 = C50691 * C272;
    const double C5440 = C50691 * C408;
    const double C5784 = C2171 * C408;
    const double C11020 = C7910 * C408;
    const double C22524 = C50686 * C408;
    const double C27978 = C50691 * C408;
    const double C28422 = C50957 * C408;
    const double C34151 = C16979 * C408;
    const double C34125 = C16980 * C408;
    const double C34493 = C16978 * C408;
    const double C5448 = C2171 * C416;
    const double C5424 = C50691 * C416;
    const double C22188 = C50686 * C416;
    const double C27986 = C50957 * C416;
    const double C27970 = C50691 * C416;
    const double C34165 = C16978 * C416;
    const double C34139 = C16979 * C416;
    const double C3116 = C2171 * C786;
    const double C3100 = C50691 * C786;
    const double C17868 = C16978 * C786;
    const double C17858 = C16979 * C786;
    const double C20402 = C50686 * C786;
    const double C25589 = C50957 * C786;
    const double C25573 = C50691 * C786;
    const double C24073 = C19767 * C5405;
    const double C2729 = C2177 * C263;
    const double C25214 = C49711 * C263;
    const double C2375 = C2177 * C277;
    const double C20137 = C19767 * C277;
    const double C24872 = C49711 * C277;
    const double C5785 = C2177 * C411;
    const double C28423 = C49711 * C411;
    const double C5449 = C2177 * C421;
    const double C22529 = C19767 * C421;
    const double C27987 = C49711 * C421;
    const double C3121 = C2177 * C791;
    const double C22363 = C19767 * C791;
    const double C25594 = C49711 * C791;
    const double C2383 = C2177 * C979;
    const double C20141 = C19767 * C979;
    const double C24880 = C49711 * C979;
    const double C49876 = -C49872;
    const double C20615 = C19767 * C3393;
    const double C50517 = C50515 + C49842;
    const double C50577 = C50570 / C49737;
    const double C49966 = C49946 + C49965;
    const double C1094 = (C50018 * C49956 + C50032 * C50094) / C49692;
    const double C50107 = C50105 / C49830;
    const double C2378 = C2171 * C984;
    const double C2358 = C50691 * C984;
    const double C18138 = C16979 * C984;
    const double C19892 = C50686 * C984;
    const double C24875 = C50957 * C984;
    const double C24855 = C50691 * C984;
    const double C3124 = C2171 * C1441;
    const double C3108 = C50691 * C1441;
    const double C18806 = C16979 * C1441;
    const double C20408 = C50686 * C1441;
    const double C25597 = C50957 * C1441;
    const double C25581 = C50691 * C1441;
    const double C5456 = C2171 * C1731;
    const double C5432 = C50691 * C1731;
    const double C22192 = C50686 * C1731;
    const double C30398 = C50691 * C1731;
    const double C35969 = C16979 * C1731;
    const double C44780 = C50957 * C1731;
    const double C3583 = C2171 * C2573;
    const double C20738 = C50686 * C2573;
    const double C26040 = C50957 * C2573;
    const double C4097 = C2171 * C3095;
    const double C20400 = C50686 * C3095;
    const double C26546 = C50957 * C3095;
    const double C3402 = C2171 * C2327;
    const double C19882 = C50686 * C2327;
    const double C25867 = C50957 * C2327;
    const double C3579 = C2171 * C2567;
    const double C20736 = C50686 * C2567;
    const double C26036 = C50957 * C2567;
    const double C4093 = C2171 * C3089;
    const double C20398 = C50686 * C3089;
    const double C26542 = C50957 * C3089;
    const double C23158 = C50686 * C4514;
    const double C7316 = C2171 * C5403;
    const double C24072 = C50686 * C5403;
    const double C46558 = C50957 * C5403;
    const double C50173 = -C50170;
    const double C50283 = C50281 + C50282;
    const double C1097 = -(C49822 * (C49822 * C50018 * C49881 + C50359 * ce) +
                           C50018 * C49857 + C49822 * C50359 * ce) /
                         C49737;
    const double C6000 =
        (-2 * (C49822 * C50468 + C50359 * ce)) / C49737 -
        (C49822 * (C49822 * (C49822 * C50018 * C49917 + C50469 * ce) + C50468 +
                   C49822 * C50469 * ce)) /
            C49737 -
        ((C50359 + C50469 * C50094) * ce) / C49737;
    const double C1089 = C50018 * C50279 + C50359 * C50094;
    const double C5998 =
        2 * C49822 * C50359 + C49822 * (C50359 + C50469 * C50094);
    const double C50464 = C50460 + C50461;
    const double C3129 = C2177 * C1444;
    const double C25602 = C49711 * C1444;
    const double C31597 = C19767 * C1444;
    const double C5457 = C2177 * C1734;
    const double C39568 = C19767 * C1734;
    const double C44781 = C49711 * C1734;
    const double C2379 = C2177 * C975;
    const double C20139 = C19767 * C975;
    const double C24876 = C49711 * C975;
    const double C3125 = C2177 * C1436;
    const double C25598 = C49711 * C1436;
    const double C31595 = C19767 * C1436;
    const double C5453 = C2177 * C1726;
    const double C39566 = C19767 * C1726;
    const double C44777 = C49711 * C1726;
    const double C2570 =
        -(C49822 * (C49822 * (C49894 * C50036 + C49862) + C50393 * ce) +
          C49862 * C50036 + C49844 + C49822 * C50393 * ce) /
        C49737;
    const double C3092 =
        C49822 * ((-2 * C50018 * C49862) / C49737 -
                  (C50018 * (C49894 * C50036 + C49862)) / C49737) -
        ((2 * C50361 + C50018 * C50393) * ce) / C49737;
    const double C4515 =
        (-2 * (C49822 * C50406 + C50393 * ce)) / C49737 -
        (C49822 * (C49822 * (C49822 * (C49819 * C49911 * C50036 + C49894) +
                             C50418 * ce) +
                   C50406 + C49822 * C50418 * ce)) /
            C49737 -
        ((C50393 + C50418 * C50094) * ce) / C49737;
    const double C2325 = 3 * (C50277 + C49960 * C50036) +
                         C50018 * (2 * C50361 + C50018 * C50393);
    const double C2565 = C50277 + C49960 * C50036 + C50393 * C50094;
    const double C3087 = C49822 * (2 * C50361 + C50018 * C50393);
    const double C4507 =
        2 * C49822 * C50393 + C49822 * (C50393 + C50418 * C50094);
    const double C50479 = C50477 + C50474;
    const double C6419 = C2177 * C4511;
    const double C22197 = C19767 * C4511;
    const double C29225 = C49711 * C4511;
    const double C6415 = C2177 * C4505;
    const double C22195 = C19767 * C4505;
    const double C29221 = C49711 * C4505;
    const double C5406 =
        (-3 * (C49822 * C50456 + C49844 + C50454 * ce)) / C49737 +
        C49822 * ((-2 * C50456) / C49737 -
                  (C49822 * (C49822 * (C49822 * C49894 + C49974 * ce) + C49862 +
                             C49822 * C49974 * ce)) /
                      C49737 -
                  (C50457 * ce) / C49737) -
        ((2 * C50454 + C49822 * C50457) * ce) / C49737;
    const double C5401 = 3 * (C50277 + C49960 * C50094) +
                         C49822 * (2 * C50454 + C49822 * C50457);
    const double C50501 = C49822 * C50497;
    const double C49982 = C49961 + C49981;
    const double C50052 = C49964 + C50051;
    const double C50071 = 2 * C50069;
    const double C50124 = C50069 * ce;
    const double C50122 = C49822 * C50069;
    const double C4509 =
        (2 * C49822 * C50032 + C49822 * (C50032 + C50069 * C50094)) / C49692;
    const double C50108 = C49964 + C50106;
    const double C50150 = C50147 / C49830;
    const double C50151 = 2 * C50145;
    const double C50149 = C50145 * ce;
    const double C50427 = C50424 + C50426;
    const double C50549 = C50545 + C50546;
    const double C23159 = C19767 * C4516;
    const double C23157 = C19767 * C4508;
    const double C6409 =
        (-3 * (C49822 * C50488 + C50437 + C50484 * ce)) / C49737 +
        C49822 * ((-2 * C50488) / C49737 -
                  (C49822 * (C49822 * (C49822 * C50018 * C49875 + C50485 * ce) +
                             C50482 + C49822 * C50485 * ce)) /
                      C49737 -
                  (C50489 * ce) / C49737) -
        ((2 * C50484 + C49822 * C50489) * ce) / C49737;
    const double C6405 = 3 * (C50363 + C50422 * C50094) +
                         C49822 * (2 * C50484 + C49822 * C50489);
    const double C50563 = C49822 * C50561;
    const double C50518 = C50514 + C50516;
    const double C50580 = C50574 / C49737;
    const double C50585 = C50583 + C49853;
    const double C49922 = C49920 / C49737;
    const double C50006 = C49972 + C50004;
    const double C50072 = C49979 + C50070;
    const double C50128 = C50125 * C50094;
    const double C50152 = C49979 + C50148;
    const double C50197 = C50193 + C50196;
    const double C50208 = C50079 + C50206;
    const double C50226 = C49822 * C50223;
    const double C50254 = C50246 + C50251;
    const double C49888 = C49874 - C49886;
    const double C49915 = C49912 / C49692;
    const double C50527 = C50523 - C50526;
    const double C3395 = (4 * (2 * C50034 + C50018 * C50049) +
                          C50018 * (3 * C50049 + C50018 * C50081)) /
                         C49692;
    const double C3564 =
        (2 * C50034 + C50018 * C50049 + C50081 * C50094) / C49692;
    const double C4082 = (C49822 * (3 * C50049 + C50018 * C50081)) / C49692;
    const double C23154 = C50686 * C6407;
    const double C50224 = -C50221;
    const double C7305 = (4 * (2 * C50091 + C49822 * C50099) +
                          C49822 * (3 * C50099 + C49822 * C50175)) /
                         C49692;
    const double C50255 = C50252 / C49692;
    const double C50007 = C50005 * ae;
    const double C50288 = C49819 * C50005;
    const double C50357 = C50018 * C50005;
    const double C2572 =
        -(C49822 * (C49822 * (C49917 * C50036 + C49881) + C50397 * ce) +
          C49881 * C50036 + C49857 + C49822 * C50397 * ce) /
        C49737;
    const double C3094 =
        C49822 * ((-2 * C50018 * C49881) / C49737 -
                  (C50018 * (C49917 * C50036 + C49881)) / C49737) -
        ((2 * C50359 + C50018 * C50397) * ce) / C49737;
    const double C2326 = 3 * (C50279 + C49978 * C50036) +
                         C50018 * (2 * C50359 + C50018 * C50397);
    const double C2566 = C50279 + C49978 * C50036 + C50397 * C50094;
    const double C3088 = C49822 * (2 * C50359 + C50018 * C50397);
    const double C5402 = 3 * (C50279 + C49978 * C50094) +
                         C49822 * (2 * C50462 + C49822 * C50465);
    const double C50420 = C50417 + C50419;
    const double C6404 = 3 * (C50361 + C50415 * C50094) +
                         C49822 * (2 * C50475 + C49822 * C50480);
    const double C50504 = C50500 + C50502;
    const double C50537 = C50018 * C50536;
    const double C23138 = 3 * (C50390 + C50425 * C50094) +
                          C49822 * (2 * C50547 + C49822 * C50550);
    const double C50566 = C50560 + C50564;
    const double C50588 = C49822 * C50586;
    const double C49859 = C49858 / C49692;
    const double C50100 = C50098 / C49692;
    const double C49885 = C49883 / C49692;
    const double C50066 = C50065 / C49692;
    const double C50141 = -C50139;
    const double C50174 = C50171 / C49692;
    const double C49921 = C49919 / C49692;
    const double C50187 = C50186 / C49692;
    const double C50225 = -C50222;
    const double C50253 = C50250 / C49692;
    const double C51015 = C50962 - C50998;
    const double C51016 = C50966 - C51000;
    const double C51017 = C50969 - C51002;
    const double C51018 = C50976 - C51003;
    const double C51021 = C50982 - C51008;
    const double C51022 = C50989 - C51009;
    const double C51023 = C50984 - C51011;
    const double C51024 = C50993 - C51012;
    const double C24885 = C24840 + C24841;
    const double C24883 = C24836 + C24837;
    const double C28001 = C27963 + C27964;
    const double C27999 = C27959 + C27960;
    const double C8097 = C7915 * C263;
    const double C8091 = C7915 * C253;
    const double C8081 = C7915 * C259;
    const double C8075 = C7915 * C277;
    const double C8073 = C7915 * C264;
    const double C8067 = C7915 * C254;
    const double C8791 = C7915 * C791;
    const double C8785 = C7915 * C782;
    const double C9075 = C7915 * C979;
    const double C9069 = C7915 * C975;
    const double C9743 = C7915 * C1444;
    const double C9737 = C7915 * C1436;
    const double C11053 = C7915 * C411;
    const double C11047 = C7915 * C397;
    const double C11041 = C7915 * C421;
    const double C11035 = C7915 * C403;
    const double C11025 = C7915 * C412;
    const double C11019 = C7915 * C398;
    const double C12867 = C7915 * C1734;
    const double C12861 = C7915 * C1726;
    const double C17167 = C16985 * C263;
    const double C17161 = C16985 * C253;
    const double C17151 = C16985 * C259;
    const double C17145 = C16985 * C277;
    const double C17143 = C16985 * C264;
    const double C17137 = C16985 * C254;
    const double C17861 = C16985 * C791;
    const double C17855 = C16985 * C782;
    const double C18145 = C16985 * C979;
    const double C18139 = C16985 * C975;
    const double C18813 = C16985 * C1444;
    const double C18807 = C16985 * C1436;
    const double C34158 = C16985 * C411;
    const double C34152 = C16985 * C397;
    const double C34146 = C16985 * C421;
    const double C34140 = C16985 * C403;
    const double C34130 = C16985 * C412;
    const double C34124 = C16985 * C398;
    const double C35972 = C16985 * C1734;
    const double C35966 = C16985 * C1726;
    const double C49715 = C50686 - C49713;
    const double C2388 = C2343 + C2344;
    const double C2386 = C2339 + C2340;
    const double C5463 = C5417 + C5418;
    const double C5461 = C5413 + C5414;
    const double C19908 = C19885 + C19886;
    const double C19907 = C19883 + C19884;
    const double C19905 = C19879 + C19880;
    const double C19904 = C19877 + C19878;
    const double C19903 = C19875 + C19876;
    const double C19902 = C19873 + C19874;
    const double C19901 = C19871 + C19872;
    const double C19900 = C19869 + C19870;
    const double C19899 = C19867 + C19868;
    const double C20422 = C20393 + C20394;
    const double C20421 = C20391 + C20392;
    const double C20420 = C20387 + C20388;
    const double C20419 = C20385 + C20386;
    const double C20748 = C20729 + C20730;
    const double C20747 = C20727 + C20728;
    const double C22208 = C22185 + C22186;
    const double C22207 = C22183 + C22184;
    const double C22206 = C22181 + C22182;
    const double C22205 = C22179 + C22180;
    const double C22204 = C22177 + C22178;
    const double C22203 = C22175 + C22176;
    const double C22202 = C22173 + C22174;
    const double C22201 = C22171 + C22172;
    const double C22200 = C22169 + C22170;
    const double C22199 = C22167 + C22168;
    const double C8100 = C51013 * C272;
    const double C8094 = C51013 * C285;
    const double C8088 = C51013 * C269;
    const double C8086 = C51013 * C271;
    const double C8080 = C51013 * C287;
    const double C8070 = C51013 * C286;
    const double C8064 = C51013 * C270;
    const double C8428 = C51013 * C268;
    const double C8798 = C51013 * C786;
    const double C8796 = C51013 * C795;
    const double C8790 = C51013 * C785;
    const double C9072 = C51013 * C989;
    const double C9066 = C51013 * C985;
    const double C9236 = C51013 * C1103;
    const double C9230 = C51013 * C1095;
    const double C9740 = C51013 * C1450;
    const double C9734 = C51013 * C1442;
    const double C11060 = C51013 * C416;
    const double C11050 = C51013 * C429;
    const double C11044 = C51013 * C409;
    const double C11038 = C51013 * C431;
    const double C11032 = C51013 * C415;
    const double C11030 = C51013 * C430;
    const double C11024 = C51013 * C410;
    const double C11388 = C51013 * C408;
    const double C12872 = C51013 * C1740;
    const double C12866 = C51013 * C1732;
    const double C105 = (C51013 * C50681) / C49692 + (C50957 - C50996) / C49697;
    const double C8090 = C51014 * C268;
    const double C8084 = C51014 * C272;
    const double C8072 = C51014 * C285;
    const double C8066 = C51014 * C269;
    const double C8788 = C51014 * C786;
    const double C9068 = C51014 * C984;
    const double C9736 = C51014 * C1441;
    const double C11046 = C51014 * C408;
    const double C11034 = C51014 * C416;
    const double C11028 = C51014 * C429;
    const double C11022 = C51014 * C409;
    const double C12864 = C51014 * C1731;
    const double C106 =
        (C51014 * C50681) / C49692 + (2 * C50691 + C51013) / C49697;
    const double C107 = (C50681 * C50691) / C49701 + C51014 / C49697;
    const double C49776 = C50745 - C49773;
    const double C1717 =
        (C51019 * C50804) / C49737 + (C50973 - C51004) / C49762;
    const double C1718 =
        (C51020 * C50804) / C49737 + (2 * C50809 + C51019) / C49762;
    const double C1719 = (C50804 * C50809) / C49741 + C51020 / C49762;
    const double C2398 = C2363 + C2364;
    const double C20143 = C20131 + C20132;
    const double C24895 = C24860 + C24861;
    const double C2390 = C2347 + C2348;
    const double C19909 = C19887 + C19888;
    const double C24887 = C24844 + C24845;
    const double C5474 = C5439 + C5440;
    const double C22531 = C22523 + C22524;
    const double C28008 = C27977 + C27978;
    const double C5466 = C5423 + C5424;
    const double C22209 = C22187 + C22188;
    const double C28004 = C27969 + C27970;
    const double C3131 = C3099 + C3100;
    const double C20425 = C20401 + C20402;
    const double C25604 = C25572 + C25573;
    const double C49879 = C49876 / C49692;
    const double C50519 = C50517 + C50512;
    const double C49967 = C49966 + C49962;
    const double C3573 = C50691 * C1094;
    const double C6006 = C2171 * C1094;
    const double C9232 = C51014 * C1094;
    const double C18302 = C16979 * C1094;
    const double C22006 = C50686 * C1094;
    const double C26030 = C50691 * C1094;
    const double C27994 = C50957 * C1094;
    const double C2395 = C2357 + C2358;
    const double C19911 = C19891 + C19892;
    const double C24892 = C24854 + C24855;
    const double C3135 = C3107 + C3108;
    const double C20427 = C20407 + C20408;
    const double C25608 = C25580 + C25581;
    const double C5470 = C5431 + C5432;
    const double C22211 = C22191 + C22192;
    const double C30405 = C30397 + C30398;
    const double C20750 = C20737 + C20738;
    const double C20424 = C20399 + C20400;
    const double C19906 = C19881 + C19882;
    const double C20749 = C20735 + C20736;
    const double C20423 = C20397 + C20398;
    const double C24075 = C24071 + C24072;
    const double C50176 = C50173 / C49692;
    const double C127 = 4 * (2 * C50277 + C49819 * C50279) +
                        C49819 * (3 * C50279 + C49819 * C50283);
    const double C260 = 2 * C50277 + C49819 * C50279 + C50283 * C50036;
    const double C261 = C50018 * (3 * C50279 + C49819 * C50283);
    const double C404 = 2 * C50277 + C49819 * C50279 + C50283 * C50094;
    const double C405 = C49822 * (3 * C50279 + C49819 * C50283);
    const double C783 = C49822 * C50018 * C50283;
    const double C974 =
        2 * C50018 * C50283 + C50018 * (C50283 + C50005 * C50036);
    const double C1435 = C49822 * (C50283 + C50005 * C50036);
    const double C1725 =
        2 * C49822 * C50283 + C49822 * (C50283 + C50005 * C50094);
    const double C6007 = C2177 * C1097;
    const double C9239 = C7915 * C1097;
    const double C18309 = C16985 * C1097;
    const double C22367 = C19767 * C1097;
    const double C27995 = C49711 * C1097;
    const double C6003 = C2177 * C1089;
    const double C9233 = C7915 * C1089;
    const double C18303 = C16985 * C1089;
    const double C22365 = C19767 * C1089;
    const double C27991 = C49711 * C1089;
    const double C5408 =
        (-3 * (C49822 * C50464 + C49857 + C50462 * ce)) / C49737 +
        C49822 * ((-2 * C50464) / C49737 -
                  (C49822 * (C49822 * (C49822 * C49917 + C50000 * ce) + C49881 +
                             C49822 * C50000 * ce)) /
                      C49737 -
                  (C50465 * ce) / C49737) -
        ((2 * C50462 + C49822 * C50465) * ce) / C49737;
    const double C3584 = C2177 * C2570;
    const double C22011 = C19767 * C2570;
    const double C26041 = C49711 * C2570;
    const double C4098 = C2177 * C3092;
    const double C20417 = C19767 * C3092;
    const double C26547 = C49711 * C3092;
    const double C3403 = C2177 * C2325;
    const double C19895 = C19767 * C2325;
    const double C25868 = C49711 * C2325;
    const double C3580 = C2177 * C2565;
    const double C22009 = C19767 * C2565;
    const double C26037 = C49711 * C2565;
    const double C4094 = C2177 * C3087;
    const double C20413 = C19767 * C3087;
    const double C26543 = C49711 * C3087;
    const double C6408 =
        (-3 * (C49822 * C50479 + C50435 + C50475 * ce)) / C49737 +
        C49822 * ((-2 * C50479) / C49737 -
                  (C49822 *
                   (C49822 * (C49822 * C50018 * C49819 * C49911 + C50476 * ce) +
                    C50473 + C49822 * C50476 * ce)) /
                      C49737 -
                  (C50480 * ce) / C49737) -
        ((2 * C50475 + C49822 * C50480) * ce) / C49737;
    const double C7317 = C2177 * C5406;
    const double C39366 = C19767 * C5406;
    const double C46559 = C49711 * C5406;
    const double C7313 = C2177 * C5401;
    const double C39364 = C19767 * C5401;
    const double C46555 = C49711 * C5401;
    const double C50503 = C50501 + C49862;
    const double C49983 = C49982 + C49977;
    const double C2328 = (3 * (C49956 + C49964 * C50036) +
                          C50018 * (2 * C50032 + C50018 * C50052)) /
                         C49692;
    const double C2568 = (C49956 + C49964 * C50036 + C50052 * C50094) / C49692;
    const double C3090 = (C49822 * (2 * C50032 + C50018 * C50052)) / C49692;
    const double C50127 = C50124 / C49830;
    const double C6416 = C50691 * C4509;
    const double C22196 = C50686 * C4509;
    const double C29222 = C50691 * C4509;
    const double C5404 = (3 * (C49956 + C49964 * C50094) +
                          C49822 * (2 * C50103 + C49822 * C50108)) /
                         C49692;
    const double C50153 = C50149 / C49830;
    const double C3566 =
        (-2 * C50018 * C49842) / C49737 - (C50018 * C50409) / C49737 +
        C49822 * (C49822 * ((-2 * C50018 * C49853) / C49737 -
                            (C50018 * (C49875 * C50036 + C49853)) / C49737) -
                  (C50427 * ce) / C49737) -
        (C49822 * C50427 * ce) / C49737;
    const double C4084 =
        C49822 * ((-3 * C50409) / C49737 +
                  C50018 * ((-2 * C50018 * C49853) / C49737 -
                            (C50018 * (C49875 * C50036 + C49853)) / C49737)) -
        ((3 * C50390 + C50018 * C50427) * ce) / C49737;
    const double C3391 = 4 * (2 * C50363 + C50018 * C50390) +
                         C50018 * (3 * C50390 + C50018 * C50427);
    const double C3562 = 2 * C50363 + C50018 * C50390 + C50427 * C50094;
    const double C4080 = C49822 * (3 * C50390 + C50018 * C50427);
    const double C21388 =
        2 * C49822 * C50427 + C49822 * (C50427 + C50536 * C50094);
    const double C23140 =
        (-3 * (C49822 * C50549 + C50409 + C50547 * ce)) / C49737 +
        C49822 * ((-2 * C50549) / C49737 -
                  (C49822 * (C49822 * (C49822 * (C49911 * C50036 + C49875) +
                                       C50534 * ce) +
                             C50524 + C49822 * C50534 * ce)) /
                      C49737 -
                  (C50550 * ce) / C49737) -
        ((2 * C50547 + C49822 * C50550) * ce) / C49737;
    const double C23163 = C23157 + C23158;
    const double C23155 = C19767 * C6409;
    const double C23153 = C19767 * C6405;
    const double C50565 = C50563 + C50482;
    const double C7303 = 4 * (2 * C50447 + C49822 * C50450) +
                         C49822 * (3 * C50450 + C49822 * C50518);
    const double C50587 = C50585 + C50579;
    const double C49924 = C49910 - C49922;
    const double C50008 = C50006 + C49999;
    const double C50073 = C50018 * C50072;
    const double C4513 =
        (2 * C49822 * C50052 + C49822 * (C50052 + C50072 * C50094)) / C49692;
    const double C50130 = C50069 + C50128;
    const double C50155 = C49822 * C50152;
    const double C50198 = C50018 * C50197;
    const double C21389 =
        (2 * C49822 * C50081 + C49822 * (C50081 + C50197 * C50094)) / C49692;
    const double C23139 = (3 * (C50049 + C50079 * C50094) +
                           C49822 * (2 * C50203 + C49822 * C50208)) /
                          C49692;
    const double C50229 = C50219 + C50226;
    const double C50257 = C49822 * C50254;
    const double C140 =
        4 * ((-2 * C49844) / C49737 - (C49819 * C49857) / C49737) +
        C49819 * ((-3 * C49857) / C49737 + C49819 * C49888);
    const double C278 =
        (-2 * C49844) / C49737 - (C49819 * C49857) / C49737 + C49888 * C50036;
    const double C280 = C50018 * ((-3 * C49857) / C49737 + C49819 * C49888);
    const double C422 = (-2 * C49844) / C49737 - (C49819 * C49857) / C49737 +
                        C49822 * (C49822 * C49888 - (C50283 * ce) / C49737) -
                        (C49822 * C50283 * ce) / C49737;
    const double C424 = C49822 * ((-3 * C49857) / C49737 + C49819 * C49888) -
                        ((3 * C50279 + C49819 * C50283) * ce) / C49737;
    const double C792 =
        C49822 * C50018 * C49888 - (C50018 * C50283 * ce) / C49737;
    const double C49918 = C49915 - C49895;
    const double C20607 =
        5 * ((-3 * C50409) / C49737 + C50018 * C50527) +
        C50018 * (4 * C50527 +
                  C50018 * ((-3 * C50524) / C49737 +
                            C50018 * ((-2 * C50018 * C49875) / C49737 -
                                      (C50018 * (C49911 * C50036 + C49875)) /
                                          C49737)));
    const double C21390 =
        2 * (C49822 * C50527 - (C50427 * ce) / C49737) +
        C49822 * (C50527 +
                  C49822 * (C49822 * ((-2 * C50018 * C49875) / C49737 -
                                      (C50018 * (C49911 * C50036 + C49875)) /
                                          C49737) -
                            (C50536 * ce) / C49737) -
                  (C49822 * C50536 * ce) / C49737) -
        ((C50427 + C50536 * C50094) * ce) / C49737;
    const double C20614 = C50686 * C3395;
    const double C20744 = C50686 * C3564;
    const double C21092 = C50686 * C4082;
    const double C50227 = C50224 / C49692;
    const double C40557 = C50686 * C7305;
    const double C50258 = C50255 - C49895;
    const double C50289 = C50287 + C50288;
    const double C1088 = C50018 * C50283 + C50357 * C50094;
    const double C3565 =
        (-2 * C50018 * C49862) / C49737 - (C50018 * C50406) / C49737 +
        C49822 * (C49822 * ((-2 * C50018 * C49894) / C49737 -
                            (C50018 * (C49819 * C49911 * C50036 + C49894)) /
                                C49737) -
                  (C50420 * ce) / C49737) -
        (C49822 * C50420 * ce) / C49737;
    const double C4083 =
        C49822 * ((-3 * C50406) / C49737 +
                  C50018 * ((-2 * C50018 * C49894) / C49737 -
                            (C50018 * (C49819 * C49911 * C50036 + C49894)) /
                                C49737)) -
        ((3 * C50393 + C50018 * C50420) * ce) / C49737;
    const double C3390 = 4 * (2 * C50361 + C50018 * C50393) +
                         C50018 * (3 * C50393 + C50018 * C50420);
    const double C3561 = 2 * C50361 + C50018 * C50393 + C50420 * C50094;
    const double C4079 = C49822 * (3 * C50393 + C50018 * C50420);
    const double C7302 = 4 * (2 * C50454 + C49822 * C50457) +
                         C49822 * (3 * C50457 + C49822 * C50504);
    const double C50538 = C50531 + C50537;
    const double C24066 = 4 * (2 * C50484 + C49822 * C50489) +
                          C49822 * (3 * C50489 + C49822 * C50566);
    const double C50590 = C50576 + C50588;
    const double C49860 = C49859 - C49850;
    const double C50101 = C50100 - C50096;
    const double C49887 = C49885 - C49869;
    const double C50067 = C50066 - C49863;
    const double C50142 = C50141 / C49692;
    const double C50177 = C50174 - C50167;
    const double C49923 = C49921 - C49903;
    const double C50188 = C50187 - C49895;
    const double C50228 = C50225 / C49692;
    const double C50256 = C50253 - C50245;
    const double C113 = (C51015 * C50708) / C49737 + (C50964 - C50999) / C49762;
    const double C114 =
        (C51016 * C50708) / C49737 + (2 * C50718 + C51015) / C49762;
    const double C115 = (C50708 * C50718) / C49741 + C51016 / C49762;
    const double C969 = (C51017 * C50776) / C49737 + (C50972 - C51001) / C49762;
    const double C970 =
        (C51018 * C50776) / C49737 + (2 * C50781 + C51017) / C49762;
    const double C971 = (C50776 * C50781) / C49741 + C51018 / C49762;
    const double C19763 =
        (C51021 * C50876) / C49692 + (C50985 - C51007) / C49697;
    const double C19764 =
        (C51022 * C50876) / C49692 + (2 * C50881 + C51021) / C49697;
    const double C19765 = (C50876 * C50881) / C49701 + C51022 / C49697;
    const double C39163 =
        (C51023 * C50902) / C49692 + (C50986 - C51010) / C49697;
    const double C39164 =
        (C51024 * C50902) / C49692 + (2 * C50907 + C51023) / C49697;
    const double C39165 = (C50902 * C50907) / C49701 + C51024 / C49697;
    const double C8113 = C8067 + C8068;
    const double C11067 = C11019 + C11020;
    const double C17183 = C17137 + C17138;
    const double C34172 = C34124 + C34125;
    const double C49716 = C49715 * ae;
    const double C2176 = (-C49693 / C49692) / C49697 - (C49715 * be) / C49692;
    const double C19924 = C19908 * C50745;
    const double C20403 = C19908 * C50973;
    const double C21524 = C19908 * C1549;
    const double C19923 = C19907 * C121;
    const double C20404 = C19907 * C644;
    const double C21525 = C19907 * C1551;
    const double C19921 = C19905 * C50745;
    const double C21093 = C19905 * C50973;
    const double C21314 = C19905 * C1549;
    const double C19920 = C19904 * C50745;
    const double C20396 = C19904 * C50973;
    const double C20740 = C19904 * C391;
    const double C21310 = C19904 * C1549;
    const double C21744 = C19904 * C51019;
    const double C19919 = C19903 * C121;
    const double C20395 = C19903 * C644;
    const double C20739 = C19903 * C394;
    const double C21309 = C19903 * C1551;
    const double C19918 = C19902 * C50745;
    const double C20390 = C19902 * C50973;
    const double C20732 = C19902 * C391;
    const double C21306 = C19902 * C1549;
    const double C21738 = C19902 * C51019;
    const double C19917 = C19901 * C121;
    const double C20389 = C19901 * C644;
    const double C20731 = C19901 * C394;
    const double C21305 = C19901 * C1551;
    const double C19916 = C19900 * C50745;
    const double C20384 = C19900 * C50973;
    const double C20724 = C19900 * C391;
    const double C21302 = C19900 * C1549;
    const double C21732 = C19900 * C51019;
    const double C19915 = C19899 * C121;
    const double C20383 = C19899 * C644;
    const double C20723 = C19899 * C394;
    const double C21301 = C19899 * C1551;
    const double C20434 = C20422 * C50809;
    const double C20734 = C20422 * C392;
    const double C21308 = C20422 * C50809;
    const double C21740 = C20422 * C51020;
    const double C21999 = C20422 * C50745;
    const double C23654 = C20422 * C50973;
    const double C23962 = C20422 * C1549;
    const double C32341 = C20422 * C391;
    const double C33727 = C20422 * C51019;
    const double C20433 = C20421 * C645;
    const double C20733 = C20421 * C395;
    const double C21307 = C20421 * C1552;
    const double C22000 = C20421 * C121;
    const double C23655 = C20421 * C644;
    const double C23963 = C20421 * C1551;
    const double C32340 = C20421 * C394;
    const double C20432 = C20420 * C50809;
    const double C20726 = C20420 * C392;
    const double C21304 = C20420 * C50809;
    const double C21734 = C20420 * C51020;
    const double C21994 = C20420 * C50745;
    const double C22730 = C20420 * C50973;
    const double C23144 = C20420 * C391;
    const double C23954 = C20420 * C1549;
    const double C24572 = C20420 * C51019;
    const double C20431 = C20419 * C645;
    const double C20725 = C20419 * C395;
    const double C21303 = C20419 * C1552;
    const double C21993 = C20419 * C121;
    const double C22729 = C20419 * C644;
    const double C23143 = C20419 * C394;
    const double C23953 = C20419 * C1551;
    const double C20754 = C20748 * C393;
    const double C21736 = C20748 * C1971;
    const double C21996 = C20748 * C50745;
    const double C22734 = C20748 * C50973;
    const double C22732 = C20748 * C50809;
    const double C23150 = C20748 * C391;
    const double C23146 = C20748 * C392;
    const double C23958 = C20748 * C1549;
    const double C23956 = C20748 * C50809;
    const double C24578 = C20748 * C51019;
    const double C24574 = C20748 * C51020;
    const double C20753 = C20747 * C396;
    const double C21735 = C20747 * C1974;
    const double C21995 = C20747 * C121;
    const double C22733 = C20747 * C644;
    const double C22731 = C20747 * C645;
    const double C23149 = C20747 * C394;
    const double C23145 = C20747 * C395;
    const double C23957 = C20747 * C1551;
    const double C23955 = C20747 * C1552;
    const double C22736 = C22206 * C50809;
    const double C23152 = C22206 * C392;
    const double C23148 = C22206 * C393;
    const double C23960 = C22206 * C50809;
    const double C24580 = C22206 * C51020;
    const double C24576 = C22206 * C1971;
    const double C22735 = C22205 * C645;
    const double C23151 = C22205 * C395;
    const double C23147 = C22205 * C396;
    const double C23959 = C22205 * C1552;
    const double C24575 = C22205 * C1974;
    const double C49778 = C49776 * ce;
    const double C20149 = C20143 * C121;
    const double C19925 = C19909 * C121;
    const double C20410 = C19909 * C644;
    const double C21529 = C19909 * C1551;
    const double C20437 = C20425 * C645;
    const double C21523 = C20425 * C1552;
    const double C22001 = C20425 * C121;
    const double C22739 = C20425 * C644;
    const double C24273 = C20425 * C1551;
    const double C49882 = C49879 - C49863;
    const double C7307 =
        4 * ((-2 * C50449) / C49737 - (C49822 * C50519) / C49737 -
             (C50450 * ce) / C49737) +
        C49822 *
            ((-3 * C50519) / C49737 +
             C49822 * ((-2 * C50511) / C49737 -
                       (C49822 * (C49822 * (C49822 * C49875 + C49971 * ce) +
                                  C49853 + C49822 * C49971 * ce)) /
                           C49737 -
                       (C50513 * ce) / C49737) -
             (C50518 * ce) / C49737) -
        ((3 * C50450 + C49822 * C50518) * ce) / C49737;
    const double C138 = (3 * (C49952 + C49819 * C49956 + C50277 * ae) +
                         C49819 * (2 * C49956 + C49819 * C49967 + C50279 * ae) +
                         (2 * C50277 + C49819 * C50279) * ae) /
                        C49692;
    const double C267 =
        (C50018 * (2 * C49956 + C49819 * C49967 + C50279 * ae)) / C49692;
    const double C273 =
        (C49952 + C49819 * C49956 + C50277 * ae + C49967 * C50036) / C49692;
    const double C407 =
        (C49822 * (2 * C49956 + C49819 * C49967 + C50279 * ae)) / C49692;
    const double C417 =
        (C49952 + C49819 * C49956 + C50277 * ae + C49967 * C50094) / C49692;
    const double C787 = (C49822 * C50018 * C49967) / C49692;
    const double C3587 = C3572 + C3573;
    const double C22013 = C22005 + C22006;
    const double C26044 = C26029 + C26030;
    const double C19927 = C19911 * C121;
    const double C20416 = C19911 * C644;
    const double C21533 = C19911 * C1551;
    const double C20439 = C20427 * C645;
    const double C21527 = C20427 * C1552;
    const double C22003 = C20427 * C121;
    const double C31945 = C20427 * C644;
    const double C33432 = C20427 * C1551;
    const double C20756 = C20750 * C393;
    const double C21742 = C20750 * C1971;
    const double C21997 = C20750 * C50745;
    const double C23658 = C20750 * C50973;
    const double C23656 = C20750 * C50809;
    const double C23966 = C20750 * C1549;
    const double C23964 = C20750 * C50809;
    const double C32343 = C20750 * C392;
    const double C33729 = C20750 * C51020;
    const double C20436 = C20424 * C50809;
    const double C20742 = C20424 * C392;
    const double C21312 = C20424 * C50809;
    const double C21746 = C20424 * C51020;
    const double C22990 = C20424 * C50745;
    const double C32834 = C20424 * C50973;
    const double C33133 = C20424 * C1549;
    const double C19922 = C19906 * C121;
    const double C21094 = C19906 * C644;
    const double C21315 = C19906 * C1551;
    const double C20755 = C20749 * C396;
    const double C21741 = C20749 * C1974;
    const double C21998 = C20749 * C121;
    const double C23659 = C20749 * C644;
    const double C23653 = C20749 * C645;
    const double C23967 = C20749 * C1551;
    const double C23961 = C20749 * C1552;
    const double C32342 = C20749 * C395;
    const double C20435 = C20423 * C645;
    const double C20741 = C20423 * C395;
    const double C21311 = C20423 * C1552;
    const double C22989 = C20423 * C121;
    const double C32835 = C20423 * C644;
    const double C33134 = C20423 * C1551;
    const double C50178 = C50176 - C49863;
    const double C2733 = C2177 * C260;
    const double C8103 = C7915 * C260;
    const double C17173 = C16985 * C260;
    const double C25218 = C49711 * C260;
    const double C8431 = C7915 * C261;
    const double C17501 = C16985 * C261;
    const double C5789 = C2177 * C404;
    const double C11055 = C7915 * C404;
    const double C34160 = C16985 * C404;
    const double C45081 = C49711 * C404;
    const double C11383 = C7915 * C405;
    const double C34488 = C16985 * C405;
    const double C8801 = C7915 * C783;
    const double C14079 = C2177 * C783;
    const double C17871 = C16985 * C783;
    const double C28215 = C49711 * C783;
    const double C50505 = C50503 + C50498;
    const double C49984 = C49819 * C49983;
    const double C49989 = 3 * C49983;
    const double C50030 = C50018 * C49983;
    const double C50113 = C49983 * ce;
    const double C50111 = C49822 * C49983;
    const double C983 =
        (2 * C50018 * C49967 + C50018 * (C49967 + C49983 * C50036)) / C49692;
    const double C1440 = (C49822 * (C49967 + C49983 * C50036)) / C49692;
    const double C1730 =
        (2 * C49822 * C49967 + C49822 * (C49967 + C49983 * C50094)) / C49692;
    const double C3404 = C50691 * C2328;
    const double C19896 = C50686 * C2328;
    const double C25869 = C50691 * C2328;
    const double C3581 = C50691 * C2568;
    const double C22010 = C50686 * C2568;
    const double C26038 = C50691 * C2568;
    const double C4095 = C50691 * C3090;
    const double C20414 = C50686 * C3090;
    const double C26544 = C50691 * C3090;
    const double C6423 = C6415 + C6416;
    const double C22213 = C22195 + C22196;
    const double C29228 = C29221 + C29222;
    const double C7314 = C50691 * C5404;
    const double C39365 = C50686 * C5404;
    const double C46556 = C50691 * C5404;
    const double C20745 = C19767 * C3566;
    const double C21095 = C19767 * C4084;
    const double C20613 = C19767 * C3391;
    const double C20743 = C19767 * C3562;
    const double C21091 = C19767 * C4080;
    const double C23657 = C23163 * C645;
    const double C23965 = C23163 * C1552;
    const double C32344 = C23163 * C396;
    const double C33730 = C23163 * C1974;
    const double C23161 = C23153 + C23154;
    const double C50567 = C50565 + C50558;
    const double C40556 = C19767 * C7303;
    const double C50589 = C49822 * C50587;
    const double C49926 = C49819 * C49924;
    const double C978 =
        2 * C50018 * C49888 + C50018 * (C49888 + C49924 * C50036);
    const double C1096 =
        C50018 * C49888 +
        C49822 * (C49822 * C50018 * C49924 - (C50357 * ce) / C49737) -
        (C49822 * C50357 * ce) / C49737;
    const double C1443 = C49822 * (C49888 + C49924 * C50036) -
                         ((C50283 + C50005 * C50036) * ce) / C49737;
    const double C1733 =
        2 * (C49822 * C49888 - (C50283 * ce) / C49737) +
        C49822 * (C49888 + C49822 * (C49822 * C49924 - (C50005 * ce) / C49737) -
                  (C49822 * C50005 * ce) / C49737) -
        ((C50283 + C50005 * C50094) * ce) / C49737;
    const double C50009 = C49819 * C50008;
    const double C50054 = C50008 * C50036;
    const double C50114 = C50008 * C50094;
    const double C50120 = C50018 * C50008;
    const double C50074 = C50071 + C50073;
    const double C6406 = (3 * (C50032 + C50069 * C50094) +
                          C49822 * (2 * C50122 + C49822 * C50130)) /
                         C49692;
    const double C50158 = C50151 + C50155;
    const double C50199 = C50192 + C50198;
    const double C24067 = (4 * (2 * C50132 + C49822 * C50140) +
                           C49822 * (3 * C50140 + C49822 * C50229)) /
                          C49692;
    const double C50260 = C50240 + C50257;
    const double C2737 = C2177 * C278;
    const double C8109 = C7915 * C278;
    const double C17179 = C16985 * C278;
    const double C25222 = C49711 * C278;
    const double C8437 = C7915 * C280;
    const double C17507 = C16985 * C280;
    const double C5793 = C2177 * C422;
    const double C11061 = C7915 * C422;
    const double C34166 = C16985 * C422;
    const double C45085 = C49711 * C422;
    const double C11389 = C7915 * C424;
    const double C34494 = C16985 * C424;
    const double C8807 = C7915 * C792;
    const double C14083 = C2177 * C792;
    const double C17877 = C16985 * C792;
    const double C28219 = C49711 * C792;
    const double C50230 = C50227 - C50212;
    const double C128 = 5 * (3 * C50279 + C49819 * C50283) +
                        C49819 * (4 * C50283 + C49819 * C50289);
    const double C262 = 3 * C50279 + C49819 * C50283 + C50289 * C50036;
    const double C406 = 3 * C50279 + C49819 * C50283 + C50289 * C50094;
    const double C540 = C50018 * (4 * C50283 + C49819 * C50289);
    const double C646 = C49822 * (4 * C50283 + C49819 * C50289);
    const double C784 = C49822 * C50018 * C50289;
    const double C20720 =
        (-3 * C50409) / C49737 + C50018 * C50527 +
        C49822 * (C49822 * ((-3 * C50524) / C49737 +
                            C50018 * ((-2 * C50018 * C49875) / C49737 -
                                      (C50018 * (C49911 * C50036 + C49875)) /
                                          C49737)) -
                  (C50538 * ce) / C49737) -
        (C49822 * C50538 * ce) / C49737;
    const double C21086 =
        C49822 * (4 * C50527 +
                  C50018 * ((-3 * C50524) / C49737 +
                            C50018 * ((-2 * C50018 * C49875) / C49737 -
                                      (C50018 * (C49911 * C50036 + C49875)) /
                                          C49737))) -
        ((4 * C50427 + C50018 * C50538) * ce) / C49737;
    const double C20606 = 5 * (3 * C50390 + C50018 * C50427) +
                          C50018 * (4 * C50427 + C50018 * C50538);
    const double C20718 = 3 * C50390 + C50018 * C50427 + C50538 * C50094;
    const double C21084 = C49822 * (4 * C50427 + C50018 * C50538);
    const double C40551 = 5 * (3 * C50450 + C49822 * C50518) +
                          C49822 * (4 * C50518 + C49822 * C50590);
    const double C147 =
        3 * ((-(ae * C49844) / C49737) / C49692 - C49841 / C49830 +
             C49819 * C49860) +
        (((-2 * C49844) / C49737 - (C49819 * C49857) / C49737) * ae) / C49692 +
        C49819 *
            (2 * C49860 - (ae * C49857) / C49830 +
             C49819 *
                 ((-(ae * C49819 * C49853) / C49737) / C49692 -
                  C49852 / C49830 +
                  C49819 * ((-(C49819 * std::pow(C49824, 6) * bs[6] * C49835) /
                             C49737) /
                                C49692 -
                            (ae * C49853) / C49830)));
    const double C284 = (yP - yQ) * ((-(ae * C49844) / C49737) / C49692 -
                                     C49841 / C49830 + C49819 * C49860);
    const double C288 = (-(C49819 * C49841) / C49737) / C49692 -
                        (ae * C49834) / C49830 + C49860 * std::pow(yP - yQ, 2);
    const double C428 =
        C49822 * ((-(ae * C49844) / C49737) / C49692 - C49841 / C49830 +
                  C49819 * C49860) -
        ((C49831 * C49827 * C49942 + C49819 * (C49819 * C49946 + C49943 * ae) +
          C49819 * C49943 * ae) *
         ce) /
            C49830;
    const double C432 = (-(C49819 * C49841) / C49737) / C49692 -
                        (ae * C49834) / C49830 -
                        (C49822 * C49956 * ce) / C49830 +
                        C49822 * (C49822 * C49860 - (C49956 * ce) / C49830);
    const double C796 =
        C49822 * C50018 * C49860 - (C50018 * C49956 * ce) / C49830;
    const double C5409 =
        3 * ((-(C50091 * ce) / C49737) / C49692 - C49841 / C49830 +
             C49822 * C50101) -
        ((2 * C50091 + C49822 * C50099) * ce) / C49830 +
        C49822 *
            (2 * C50101 - (C50099 * ce) / C49830 +
             C49822 * ((-(C49822 * C49961 * ce) / C49737) / C49692 - C49863 +
                       C49822 * ((-(C49822 * C49873) / C49737) / C49692 -
                                 (C49961 * ce) / C49830)));
    const double C49889 = C49819 * C49887;
    const double C49892 = 2 * C49887;
    const double C50085 = C50018 * C49887;
    const double C50104 = C49822 * C49887;
    const double C50156 = C49887 - C50153;
    const double C988 =
        2 * C50018 * C49860 + C50018 * (C49860 + C49887 * std::pow(C50018, 2));
    const double C1102 =
        C50018 * C49860 - (C49822 * C50032 * ce) / C49830 +
        C49822 * (C49822 * C50018 * C49887 - (C50032 * ce) / C49830);
    const double C1449 = C49822 * (C49860 + C49887 * C50036) -
                         ((C49956 + C49964 * C50036) * ce) / C49830;
    const double C1739 =
        2 * (C49822 * C49860 - (C49956 * ce) / C49830) -
        ((C49956 + C49964 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 * (C49860 - (C49822 * C49964 * ce) / C49830 +
                  C49822 * (C49822 * C49887 - (C49964 * ce) / C49830));
    const double C3397 =
        4 * ((-2 * C50018 * C49852) / C49830 + C50018 * C50067) +
        C50018 * (3 * C50067 +
                  C50018 * ((-2 * C50018 * C49873) / C49830 +
                            C50018 * ((-(C49909 * C50036) / C49737) / C49692 -
                                      C49895)));
    const double C3568 =
        (-2 * C50018 * C49852) / C49830 + C50018 * C50067 -
        (C49822 * C50081 * ce) / C49830 +
        C49822 * (C49822 * ((-2 * C50018 * C49873) / C49830 +
                            C50018 * ((-(C49909 * C50036) / C49737) / C49692 -
                                      C49895)) -
                  (C50081 * ce) / C49830);
    const double C4086 =
        C49822 * (3 * C50067 +
                  C50018 * ((-2 * C50018 * C49873) / C49830 +
                            C50018 * ((-(C49909 * C50036) / C49737) / C49692 -
                                      C49895))) -
        ((3 * C50049 + C50018 * C50081) * ce) / C49830;
    const double C4520 =
        2 * (C49822 * C50067 - (C50049 * ce) / C49830) -
        ((C50049 + C50079 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 * (C50067 - (C49822 * C50079 * ce) / C49830 +
                  C49822 * (C49822 * ((-(C49909 * C50036) / C49737) / C49692 -
                                      C49895) -
                            (C50079 * ce) / C49830));
    const double C50143 = C50142 - C50137;
    const double C50179 = C49822 * C50177;
    const double C50235 = 2 * C50177;
    const double C49925 = C49819 * C49923;
    const double C50060 = C49923 * C50036;
    const double C50123 = C50018 * C49923;
    const double C50146 = C49822 * C49923;
    const double C2334 =
        3 * (C49860 + C49887 * C50036) +
        C50018 * (2 * C50018 * C49887 + C50018 * (C49887 + C49923 * C50036));
    const double C2574 =
        C49860 + C49887 * C50036 - (C49822 * C50052 * ce) / C49830 +
        C49822 * (C49822 * (C49887 + C49923 * C50036) - (C50052 * ce) / C49830);
    const double C3096 =
        C49822 * (2 * C50018 * C49887 + C50018 * (C49887 + C49923 * C50036)) -
        ((2 * C50032 + C50018 * C50052) * ce) / C49830;
    const double C50189 = C50018 * C50188;
    const double C50204 = C49822 * C50188;
    const double C50231 = C50228 - C50218;
    const double C50259 = C49822 * C50256;
    const double C49717 = C49716 / C49692;
    const double C2381 = C2176 * C980;
    const double C2377 = C2176 * C976;
    const double C2373 = C2176 * C276;
    const double C2369 = C2176 * C258;
    const double C2365 = C2176 * C265;
    const double C2361 = C2176 * C255;
    const double C2359 = C2176 * C977;
    const double C2355 = C2176 * C981;
    const double C2349 = C2176 * C275;
    const double C2345 = C2176 * C257;
    const double C2341 = C2176 * C266;
    const double C2337 = C2176 * C256;
    const double C2735 = C2176 * C277;
    const double C2731 = C2176 * C259;
    const double C2727 = C2176 * C264;
    const double C2723 = C2176 * C254;
    const double C3127 = C2176 * C1445;
    const double C3123 = C2176 * C1437;
    const double C3119 = C2176 * C790;
    const double C3115 = C2176 * C781;
    const double C3113 = C2176 * C1446;
    const double C3109 = C2176 * C1438;
    const double C3105 = C2176 * C789;
    const double C3101 = C2176 * C780;
    const double C3405 = C2176 * C2329;
    const double C3401 = C2176 * C2324;
    const double C3582 = C2176 * C2569;
    const double C3578 = C2176 * C2564;
    const double C3574 = C2176 * C1099;
    const double C3570 = C2176 * C1091;
    const double C4096 = C2176 * C3091;
    const double C4092 = C2176 * C3086;
    const double C5459 = C2176 * C1735;
    const double C5455 = C2176 * C1727;
    const double C5451 = C2176 * C420;
    const double C5447 = C2176 * C402;
    const double C5441 = C2176 * C413;
    const double C5437 = C2176 * C399;
    const double C5433 = C2176 * C1736;
    const double C5429 = C2176 * C1728;
    const double C5425 = C2176 * C419;
    const double C5421 = C2176 * C401;
    const double C5419 = C2176 * C414;
    const double C5415 = C2176 * C400;
    const double C5795 = C2176 * C421;
    const double C5791 = C2176 * C403;
    const double C5787 = C2176 * C412;
    const double C5783 = C2176 * C398;
    const double C6009 = C2176 * C1098;
    const double C6005 = C2176 * C1090;
    const double C6421 = C2176 * C4512;
    const double C6417 = C2176 * C4506;
    const double C7319 = C2176 * C5405;
    const double C7315 = C2176 * C5400;
    const double C14081 = C2176 * C791;
    const double C14077 = C2176 * C782;
    const double C19932 = C19919 + C19920;
    const double C20612 = C19920 + C19919;
    const double C21090 = C20395 + C20396;
    const double C21318 = C21309 + C21310;
    const double C19931 = C19917 + C19918;
    const double C21089 = C20389 + C20390;
    const double C21317 = C21305 + C21306;
    const double C31299 = C22000 + C21999;
    const double C32832 = C23655 + C23654;
    const double C33131 = C23963 + C23962;
    const double C49780 = C49778 / C49737;
    const double C40558 = C19767 * C7307;
    const double C2726 = C50691 * C267;
    const double C8092 = C7910 * C267;
    const double C8430 = C51014 * C267;
    const double C17162 = C16980 * C267;
    const double C17500 = C16979 * C267;
    const double C25211 = C50691 * C267;
    const double C2372 = C50691 * C273;
    const double C2732 = C2171 * C273;
    const double C8102 = C51014 * C273;
    const double C8082 = C7910 * C273;
    const double C17172 = C16979 * C273;
    const double C17152 = C16980 * C273;
    const double C20136 = C50686 * C273;
    const double C24869 = C50691 * C273;
    const double C25217 = C50957 * C273;
    const double C5782 = C50691 * C407;
    const double C11048 = C7910 * C407;
    const double C11386 = C51014 * C407;
    const double C28420 = C50691 * C407;
    const double C34153 = C16980 * C407;
    const double C34491 = C16979 * C407;
    const double C5446 = C50691 * C417;
    const double C5792 = C2171 * C417;
    const double C11058 = C51014 * C417;
    const double C11036 = C7910 * C417;
    const double C22528 = C50686 * C417;
    const double C27984 = C50691 * C417;
    const double C34163 = C16979 * C417;
    const double C34141 = C16980 * C417;
    const double C45084 = C50957 * C417;
    const double C3118 = C50691 * C787;
    const double C8800 = C51014 * C787;
    const double C8786 = C7910 * C787;
    const double C14078 = C2171 * C787;
    const double C17870 = C16979 * C787;
    const double C17856 = C16980 * C787;
    const double C22362 = C50686 * C787;
    const double C25591 = C50691 * C787;
    const double C28214 = C50957 * C787;
    const double C22017 = C22013 * C121;
    const double C22743 = C22013 * C644;
    const double C22737 = C22013 * C645;
    const double C24277 = C22013 * C1551;
    const double C24271 = C22013 * C1552;
    const double C20611 = C19921 + C19922;
    const double C32191 = C22990 + C22989;
    const double C7306 =
        4 * ((-2 * C50456) / C49737 - (C49822 * C50505) / C49737 -
             (C50457 * ce) / C49737) +
        C49822 *
            ((-3 * C50505) / C49737 +
             C49822 *
                 ((-2 * C50497) / C49737 -
                  (C49822 * (C49822 * (C49822 * C49819 * C49911 + C49996 * ce) +
                             C49894 + C49822 * C49996 * ce)) /
                      C49737 -
                  (C50499 * ce) / C49737) -
             (C50504 * ce) / C49737) -
        ((3 * C50457 + C49822 * C50504) * ce) / C49737;
    const double C49985 = C49969 + C49984;
    const double C1093 = (C50018 * C49967 + C50030 * C50094) / C49692;
    const double C50115 = C50113 / C49830;
    const double C2380 = C50691 * C983;
    const double C9070 = C7910 * C983;
    const double C18140 = C16980 * C983;
    const double C20140 = C50686 * C983;
    const double C24877 = C50691 * C983;
    const double C3126 = C50691 * C1440;
    const double C9738 = C7910 * C1440;
    const double C18808 = C16980 * C1440;
    const double C25599 = C50691 * C1440;
    const double C31596 = C50686 * C1440;
    const double C5454 = C50691 * C1730;
    const double C12862 = C7910 * C1730;
    const double C35967 = C16980 * C1730;
    const double C39567 = C50686 * C1730;
    const double C44778 = C50691 * C1730;
    const double C3412 = C3403 + C3404;
    const double C19913 = C19895 + C19896;
    const double C25877 = C25868 + C25869;
    const double C3591 = C3580 + C3581;
    const double C22015 = C22009 + C22010;
    const double C26048 = C26037 + C26038;
    const double C4104 = C4094 + C4095;
    const double C20429 = C20413 + C20414;
    const double C26553 = C26543 + C26544;
    const double C22741 = C22213 * C645;
    const double C24275 = C22213 * C1552;
    const double C7321 = C7313 + C7314;
    const double C39368 = C39364 + C39365;
    const double C46563 = C46555 + C46556;
    const double C20617 = C20613 + C20614;
    const double C20751 = C20743 + C20744;
    const double C21099 = C21091 + C21092;
    const double C23165 = C23161 * C396;
    const double C24581 = C23161 * C1974;
    const double C24068 =
        4 * ((-2 * C50488) / C49737 - (C49822 * C50567) / C49737 -
             (C50489 * ce) / C49737) +
        C49822 *
            ((-3 * C50567) / C49737 +
             C49822 *
                 ((-2 * C50561) / C49737 -
                  (C49822 * (C49822 * (C49822 * C50018 * C49911 + C50556 * ce) +
                             C50553 + C49822 * C50556 * ce)) /
                      C49737 -
                  (C50562 * ce) / C49737) -
             (C50566 * ce) / C49737) -
        ((3 * C50489 + C49822 * C50566) * ce) / C49737;
    const double C40560 = C40556 + C40557;
    const double C50591 = C50589 / C49737;
    const double C49928 = C49904 + C49926;
    const double C50010 = C49990 + C50009;
    const double C50055 = C49983 + C50054;
    const double C50116 = C49983 + C50114;
    const double C5999 =
        (2 * C49822 * C50030 + C49822 * (C50030 + C50120 * C50094)) / C49692;
    const double C3394 = (4 * (2 * C50032 + C50018 * C50052) +
                          C50018 * (3 * C50052 + C50018 * C50074)) /
                         C49692;
    const double C3563 =
        (2 * C50032 + C50018 * C50052 + C50074 * C50094) / C49692;
    const double C4081 = (C49822 * (3 * C50052 + C50018 * C50074)) / C49692;
    const double C7304 = (4 * (2 * C50103 + C49822 * C50108) +
                          C49822 * (3 * C50108 + C49822 * C50158)) /
                         C49692;
    const double C20608 = (5 * (3 * C50049 + C50018 * C50081) +
                           C50018 * (4 * C50081 + C50018 * C50199)) /
                          C49692;
    const double C20719 =
        (3 * C50049 + C50018 * C50081 + C50199 * C50094) / C49692;
    const double C21085 = (C49822 * (4 * C50081 + C50018 * C50199)) / C49692;
    const double C40552 = (5 * (3 * C50099 + C49822 * C50175) +
                           C49822 * (4 * C50175 + C49822 * C50260)) /
                          C49692;
    const double C2368 = C50691 * C284;
    const double C2728 = C2171 * C284;
    const double C8096 = C51014 * C284;
    const double C8074 = C7910 * C284;
    const double C8434 = C51013 * C284;
    const double C17166 = C16979 * C284;
    const double C17144 = C16980 * C284;
    const double C17504 = C16978 * C284;
    const double C20134 = C50686 * C284;
    const double C24865 = C50691 * C284;
    const double C25213 = C50957 * C284;
    const double C2374 = C2171 * C288;
    const double C2352 = C50691 * C288;
    const double C8106 = C51013 * C288;
    const double C8078 = C51014 * C288;
    const double C17176 = C16978 * C288;
    const double C17148 = C16979 * C288;
    const double C19890 = C50686 * C288;
    const double C24871 = C50957 * C288;
    const double C24849 = C50691 * C288;
    const double C5444 = C50691 * C428;
    const double C5788 = C2171 * C428;
    const double C11052 = C51014 * C428;
    const double C11026 = C7910 * C428;
    const double C11394 = C51013 * C428;
    const double C22526 = C50686 * C428;
    const double C27982 = C50691 * C428;
    const double C28426 = C50957 * C428;
    const double C34157 = C16979 * C428;
    const double C34131 = C16980 * C428;
    const double C34499 = C16978 * C428;
    const double C5452 = C2171 * C432;
    const double C5428 = C50691 * C432;
    const double C11066 = C51013 * C432;
    const double C11040 = C51014 * C432;
    const double C22190 = C50686 * C432;
    const double C27990 = C50957 * C432;
    const double C27974 = C50691 * C432;
    const double C34171 = C16978 * C432;
    const double C34145 = C16979 * C432;
    const double C3120 = C2171 * C796;
    const double C3104 = C50691 * C796;
    const double C8804 = C51013 * C796;
    const double C8794 = C51014 * C796;
    const double C17874 = C16978 * C796;
    const double C17864 = C16979 * C796;
    const double C20406 = C50686 * C796;
    const double C25593 = C50957 * C796;
    const double C25577 = C50691 * C796;
    const double C7320 = C2171 * C5409;
    const double C24074 = C50686 * C5409;
    const double C46562 = C50957 * C5409;
    const double C49890 = C49882 + C49889;
    const double C49907 = C49892 - C49900;
    const double C4517 =
        2 * (C49822 * C50085 - (C50032 * ce) / C49830) -
        ((C50032 + C50069 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 * (C50085 - (C49822 * C50069 * ce) / C49830 +
                  C49822 * (C49822 * C50018 * C49923 - (C50069 * ce) / C49830));
    const double C50109 = C50104 - C50107;
    const double C2382 = C2171 * C988;
    const double C2354 = C50691 * C988;
    const double C9074 = C51014 * C988;
    const double C18144 = C16979 * C988;
    const double C19894 = C50686 * C988;
    const double C24879 = C50957 * C988;
    const double C24851 = C50691 * C988;
    const double C3577 = C50691 * C1102;
    const double C6010 = C2171 * C1102;
    const double C9238 = C51014 * C1102;
    const double C18308 = C16979 * C1102;
    const double C22008 = C50686 * C1102;
    const double C26034 = C50691 * C1102;
    const double C27998 = C50957 * C1102;
    const double C3128 = C2171 * C1449;
    const double C3112 = C50691 * C1449;
    const double C9742 = C51014 * C1449;
    const double C18812 = C16979 * C1449;
    const double C20412 = C50686 * C1449;
    const double C25601 = C50957 * C1449;
    const double C25585 = C50691 * C1449;
    const double C5460 = C2171 * C1739;
    const double C5436 = C50691 * C1739;
    const double C12870 = C51014 * C1739;
    const double C22194 = C50686 * C1739;
    const double C30402 = C50691 * C1739;
    const double C35975 = C16979 * C1739;
    const double C44784 = C50957 * C1739;
    const double C20616 = C50686 * C3397;
    const double C20746 = C50686 * C3568;
    const double C21096 = C50686 * C4086;
    const double C23160 = C50686 * C4520;
    const double C6411 =
        3 * ((-(C50132 * ce) / C49737) / C49692 - C50087 / C49830 +
             C49822 * C50143) -
        ((2 * C50132 + C49822 * C50140) * ce) / C49830 +
        C49822 * (2 * C50143 - (C50140 * ce) / C49830 +
                  C49822 * ((-(C49822 * C50135 * ce) / C49737) / C49692 -
                            C50133 / C49830 +
                            C49822 * ((-(C49822 * C50018 * C49909) / C49737) /
                                          C49692 -
                                      (C50135 * ce) / C49830)));
    const double C50180 = C50178 + C50179;
    const double C50248 = C50235 - C50242;
    const double C49927 = C49918 + C49925;
    const double C50061 = C49887 + C50060;
    const double C50126 = C49822 * C50123;
    const double C50154 = C50146 - C50150;
    const double C3408 = C50691 * C2334;
    const double C19898 = C50686 * C2334;
    const double C25873 = C50691 * C2334;
    const double C3585 = C50691 * C2574;
    const double C22012 = C50686 * C2574;
    const double C26042 = C50691 * C2574;
    const double C4099 = C50691 * C3096;
    const double C20418 = C50686 * C3096;
    const double C26548 = C50691 * C3096;
    const double C50190 = C50184 + C50189;
    const double C50209 = C50204 - C50207;
    const double C50232 = C49822 * C50231;
    const double C50261 = C50258 + C50259;
    const double C49718 = C49717 - C49707;
    const double C2405 = C2377 + C2378;
    const double C2401 = C2369 + C2370;
    const double C2399 = C2365 + C2366;
    const double C2397 = C2361 + C2362;
    const double C2396 = C2359 + C2360;
    const double C2394 = C2355 + C2356;
    const double C2391 = C2349 + C2350;
    const double C2389 = C2345 + C2346;
    const double C2387 = C2341 + C2342;
    const double C2385 = C2337 + C2338;
    const double C2739 = C2723 + C2724;
    const double C3143 = C3123 + C3124;
    const double C3139 = C3115 + C3116;
    const double C3138 = C3113 + C3114;
    const double C3136 = C3109 + C3110;
    const double C3134 = C3105 + C3106;
    const double C3132 = C3101 + C3102;
    const double C3413 = C3405 + C3406;
    const double C3411 = C3401 + C3402;
    const double C3592 = C3582 + C3583;
    const double C3590 = C3578 + C3579;
    const double C3588 = C3574 + C3575;
    const double C3586 = C3570 + C3571;
    const double C4105 = C4096 + C4097;
    const double C4103 = C4092 + C4093;
    const double C5482 = C5455 + C5456;
    const double C5478 = C5447 + C5448;
    const double C5475 = C5441 + C5442;
    const double C5473 = C5437 + C5438;
    const double C5471 = C5433 + C5434;
    const double C5469 = C5429 + C5430;
    const double C5467 = C5425 + C5426;
    const double C5465 = C5421 + C5422;
    const double C5464 = C5419 + C5420;
    const double C5462 = C5415 + C5416;
    const double C5798 = C5783 + C5784;
    const double C6012 = C6005 + C6006;
    const double C6426 = C6421 + C6422;
    const double C6424 = C6417 + C6418;
    const double C7322 = C7315 + C7316;
    const double C21098 = C21090 - C20435;
    const double C21320 = C21318 - C21311;
    const double C21097 = C21089 - C20433;
    const double C21319 = C21317 - C21307;
    const double C32837 = C32832 - C23653;
    const double C33136 = C33131 - C23961;
    const double C49781 = C49780 - C49765;
    const double C2740 = C2725 + C2726;
    const double C8125 = C8091 + C8092;
    const double C17195 = C17161 + C17162;
    const double C25225 = C25210 + C25211;
    const double C2402 = C2371 + C2372;
    const double C2743 = C2731 + C2732;
    const double C8120 = C8081 + C8082;
    const double C17190 = C17151 + C17152;
    const double C20145 = C20135 + C20136;
    const double C24899 = C24868 + C24869;
    const double C5797 = C5781 + C5782;
    const double C11081 = C11047 + C11048;
    const double C28427 = C28419 + C28420;
    const double C34186 = C34152 + C34153;
    const double C5477 = C5445 + C5446;
    const double C5802 = C5791 + C5792;
    const double C11075 = C11035 + C11036;
    const double C22533 = C22527 + C22528;
    const double C28011 = C27983 + C27984;
    const double C34180 = C34140 + C34141;
    const double C3140 = C3117 + C3118;
    const double C8809 = C8785 + C8786;
    const double C14085 = C14077 + C14078;
    const double C17879 = C17855 + C17856;
    const double C22369 = C22361 + C22362;
    const double C25613 = C25590 + C25591;
    const double C49986 = C49985 + C49980;
    const double C6004 = C50691 * C1093;
    const double C9234 = C7910 * C1093;
    const double C18304 = C16980 * C1093;
    const double C22366 = C50686 * C1093;
    const double C27992 = C50691 * C1093;
    const double C2406 = C2379 + C2380;
    const double C9079 = C9069 + C9070;
    const double C18149 = C18139 + C18140;
    const double C20147 = C20139 + C20140;
    const double C24903 = C24876 + C24877;
    const double C3144 = C3125 + C3126;
    const double C9747 = C9737 + C9738;
    const double C18817 = C18807 + C18808;
    const double C25617 = C25598 + C25599;
    const double C31599 = C31595 + C31596;
    const double C5481 = C5453 + C5454;
    const double C12873 = C12861 + C12862;
    const double C35978 = C35966 + C35967;
    const double C39570 = C39566 + C39567;
    const double C44785 = C44777 + C44778;
    const double C19929 = C19913 * C121;
    const double C22019 = C22015 * C121;
    const double C31943 = C22015 * C645;
    const double C33430 = C22015 * C1552;
    const double C20441 = C20429 * C645;
    const double C21531 = C20429 * C1552;
    const double C31300 = C20429 * C121;
    const double C20619 = C20617 * C121;
    const double C20757 = C20751 * C396;
    const double C21747 = C20751 * C1974;
    const double C22991 = C20751 * C121;
    const double C32833 = C20751 * C645;
    const double C33132 = C20751 * C1552;
    const double C21103 = C21099 * C645;
    const double C21313 = C21099 * C1552;
    const double C32192 = C21099 * C121;
    const double C50592 = C50577 - C50591;
    const double C141 = 5 * ((-3 * C49857) / C49737 + C49819 * C49888) +
                        C49819 * (4 * C49888 + C49819 * C49928);
    const double C281 =
        (-3 * C49857) / C49737 + C49819 * C49888 + C49928 * C50036;
    const double C426 = (-3 * C49857) / C49737 + C49819 * C49888 +
                        C49822 * (C49822 * C49928 - (C50289 * ce) / C49737) -
                        (C49822 * C50289 * ce) / C49737;
    const double C541 = C50018 * (4 * C49888 + C49819 * C49928);
    const double C648 = C49822 * (4 * C49888 + C49819 * C49928) -
                        ((4 * C50283 + C49819 * C50289) * ce) / C49737;
    const double C794 =
        C49822 * C50018 * C49928 - (C50018 * C50289 * ce) / C49737;
    const double C50011 = C50010 + C50002;
    const double C2332 = (3 * (C49967 + C49983 * C50036) +
                          C50018 * (2 * C50030 + C50018 * C50055)) /
                         C49692;
    const double C2571 = (C49967 + C49983 * C50036 + C50055 * C50094) / C49692;
    const double C3093 = (C49822 * (2 * C50030 + C50018 * C50055)) / C49692;
    const double C5407 = (3 * (C49967 + C49983 * C50094) +
                          C49822 * (2 * C50111 + C49822 * C50116)) /
                         C49692;
    const double C2400 = C2367 + C2368;
    const double C2741 = C2727 + C2728;
    const double C8116 = C8073 + C8074;
    const double C17186 = C17143 + C17144;
    const double C20144 = C20133 + C20134;
    const double C24897 = C24864 + C24865;
    const double C2403 = C2373 + C2374;
    const double C2392 = C2351 + C2352;
    const double C19910 = C19889 + C19890;
    const double C24889 = C24848 + C24849;
    const double C5476 = C5443 + C5444;
    const double C5800 = C5787 + C5788;
    const double C11070 = C11025 + C11026;
    const double C22532 = C22525 + C22526;
    const double C28010 = C27981 + C27982;
    const double C34175 = C34130 + C34131;
    const double C5480 = C5451 + C5452;
    const double C5468 = C5427 + C5428;
    const double C22210 = C22189 + C22190;
    const double C28006 = C27973 + C27974;
    const double C3141 = C3119 + C3120;
    const double C3133 = C3103 + C3104;
    const double C20426 = C20405 + C20406;
    const double C25606 = C25576 + C25577;
    const double C7324 = C7319 + C7320;
    const double C24076 = C24073 + C24074;
    const double C148 =
        4 * (2 * C49860 - (ae * C49857) / C49830 + C49819 * C49890) +
        (((-3 * C49857) / C49737 + C49819 * C49888) * ae) / C49692 +
        C49819 *
            (3 * C49890 + (C49888 * ae) / C49692 +
             C49819 * (2 * C49887 - (ae * C49881) / C49830 +
                       C49819 * ((-(ae * C49819 * C49875) / C49737) / C49692 -
                                 C49873 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49826, 7) *
                                              bs[7] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49875) / C49830))));
    const double C283 =
        (yP - yQ) * (2 * C49860 - (ae * C49857) / C49830 + C49819 * C49890);
    const double C289 = (-(ae * C49844) / C49737) / C49692 - C49841 / C49830 +
                        C49819 * C49860 + C49890 * std::pow(yP - yQ, 2);
    const double C427 =
        C49822 * (2 * C49860 - (ae * C49857) / C49830 + C49819 * C49890) -
        ((2 * (C49819 * C49946 + C49943 * ae) +
          C49819 * (C49946 +
                    C49819 * (C49819 * C49845 * C49846 * C49942 + C49944 * ae) +
                    C49819 * C49944 * ae) +
          (C49943 + C49944 * C49848) * ae) *
         ce) /
            C49830;
    const double C433 = (-(ae * C49844) / C49737) / C49692 - C49841 / C49830 +
                        C49819 * C49860 - (C49822 * C49967 * ce) / C49830 +
                        C49822 * (C49822 * C49890 - (C49967 * ce) / C49830);
    const double C797 =
        C49822 * C50018 * C49890 - (C50018 * C49967 * ce) / C49830;
    const double C6420 = C50691 * C4517;
    const double C22198 = C50686 * C4517;
    const double C29226 = C50691 * C4517;
    const double C5410 =
        3 * (C49860 - (C50103 * ce) / C49830 + C49822 * C50109) -
        ((2 * C50103 + C49822 * C50108) * ce) / C49830 +
        C49822 *
            (2 * C50109 - (C50108 * ce) / C49830 +
             C49822 * (C49887 - (C49822 * C49979 * ce) / C49830 +
                       C49822 * (C49822 * C49923 - (C49979 * ce) / C49830)));
    const double C2407 = C2381 + C2382;
    const double C2393 = C2353 + C2354;
    const double C19912 = C19893 + C19894;
    const double C24890 = C24850 + C24851;
    const double C3589 = C3576 + C3577;
    const double C6014 = C6009 + C6010;
    const double C22014 = C22007 + C22008;
    const double C26046 = C26033 + C26034;
    const double C3145 = C3127 + C3128;
    const double C3137 = C3111 + C3112;
    const double C20428 = C20411 + C20412;
    const double C25610 = C25584 + C25585;
    const double C5484 = C5459 + C5460;
    const double C5472 = C5435 + C5436;
    const double C22212 = C22193 + C22194;
    const double C30407 = C30401 + C30402;
    const double C20618 = C20615 + C20616;
    const double C20752 = C20745 + C20746;
    const double C21100 = C21095 + C21096;
    const double C23164 = C23159 + C23160;
    const double C23156 = C50686 * C6411;
    const double C7309 =
        4 * (2 * C50101 - (C50099 * ce) / C49830 + C49822 * C50180) -
        ((3 * C50099 + C49822 * C50175) * ce) / C49830 +
        C49822 *
            (3 * C50180 - (C50175 * ce) / C49830 +
             C49822 *
                 (2 * C50177 - (C50169 * ce) / C49830 +
                  C49822 *
                      ((-(C49822 * C49972 * ce) / C49737) / C49692 - C49895 +
                       C49822 * ((-(C49822 * C49909) / C49737) / C49692 -
                                 (C49972 * ce) / C49830))));
    const double C49929 = C49819 * C49927;
    const double C50112 = C49822 * C49927;
    const double C50119 = C50018 * C49927;
    const double C987 =
        2 * C50018 * C49890 + C50018 * (C49890 + C49927 * std::pow(C50018, 2));
    const double C1101 =
        C50018 * C49890 - (C49822 * C50030 * ce) / C49830 +
        C49822 * (C49822 * C50018 * C49927 - (C50030 * ce) / C49830);
    const double C1448 = C49822 * (C49890 + C49927 * C50036) -
                         ((C49967 + C49983 * C50036) * ce) / C49830;
    const double C1738 =
        2 * (C49822 * C49890 - (C49967 * ce) / C49830) -
        ((C49967 + C49983 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 * (C49890 - (C49822 * C49983 * ce) / C49830 +
                  C49822 * (C49822 * C49927 - (C49983 * ce) / C49830));
    const double C2335 =
        3 * (C49890 + C49927 * C50036) +
        C50018 *
            (2 * C50018 * C49927 +
             C50018 *
                 (C49927 +
                  ((-(ae * C49819 * C49911) / C49737) / C49692 -
                   C49909 / C49830 +
                   C49819 * ((-(C49819 * std::pow(C49824, 8) * bs[8] * C49835) /
                              C49737) /
                                 C49692 -
                             (ae * C49911) / C49830)) *
                      C50036));
    const double C2575 =
        C49890 + C49927 * C50036 - (C49822 * C50055 * ce) / C49830 +
        C49822 *
            (C49822 *
                 (C49927 +
                  ((-(ae * C49819 * C49911) / C49737) / C49692 -
                   C49909 / C49830 +
                   C49819 * ((-(C49819 * std::pow(C49824, 8) * bs[8] * C49835) /
                              C49737) /
                                 C49692 -
                             (ae * C49911) / C49830)) *
                      C50036) -
             (C50055 * ce) / C49830);
    const double C3097 =
        C49822 *
            (2 * C50018 * C49927 +
             C50018 *
                 (C49927 +
                  ((-(ae * C49819 * C49911) / C49737) / C49692 -
                   C49909 / C49830 +
                   C49819 * ((-(C49819 * std::pow(C49824, 8) * bs[8] * C49835) /
                              C49737) /
                                 C49692 -
                             (ae * C49911) / C49830)) *
                      C50036)) -
        ((2 * C50030 + C50018 * C50055) * ce) / C49830;
    const double C3396 =
        4 * (2 * C50018 * C49887 + C50018 * C50061) +
        C50018 *
            (3 * C50061 +
             C50018 * (2 * C50018 * C49923 +
                       C50018 * (C49923 + ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830) *
                                              C50036)));
    const double C3567 =
        2 * C50018 * C49887 + C50018 * C50061 -
        (C49822 * C50074 * ce) / C49830 +
        C49822 *
            (C49822 * (2 * C50018 * C49923 +
                       C50018 * (C49923 + ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830) *
                                              C50036)) -
             (C50074 * ce) / C49830);
    const double C4085 =
        C49822 *
            (3 * C50061 +
             C50018 * (2 * C50018 * C49923 +
                       C50018 * (C49923 + ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830) *
                                              C50036))) -
        ((3 * C50052 + C50018 * C50074) * ce) / C49830;
    const double C4519 =
        2 * (C49822 * C50061 - (C50052 * ce) / C49830) -
        ((C50052 + C50072 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 *
            (C50061 - (C49822 * C50072 * ce) / C49830 +
             C49822 * (C49822 * (C49923 + ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830) *
                                              C50036) -
                       (C50072 * ce) / C49830));
    const double C50129 = C50126 - C50127;
    const double C50157 = C49822 * C50154;
    const double C3414 = C3407 + C3408;
    const double C19914 = C19897 + C19898;
    const double C25879 = C25872 + C25873;
    const double C3593 = C3584 + C3585;
    const double C22016 = C22011 + C22012;
    const double C26050 = C26041 + C26042;
    const double C4106 = C4098 + C4099;
    const double C20430 = C20417 + C20418;
    const double C26555 = C26547 + C26548;
    const double C20609 =
        5 * (3 * C50067 + C50018 * C50190) +
        C50018 * (4 * C50190 +
                  C50018 * (3 * C50188 +
                            C50018 * ((-2 * C50018 * C49909) / C49830 +
                                      C50018 * ((-(std::pow(C49824, 8) * bs[8] *
                                                   C49835 * C50036) /
                                                 C49737) /
                                                    C49692 -
                                                C49909 / C49830))));
    const double C20721 =
        3 * C50067 + C50018 * C50190 - (C49822 * C50199 * ce) / C49830 +
        C49822 * (C49822 * (3 * C50188 +
                            C50018 * ((-2 * C50018 * C49909) / C49830 +
                                      C50018 * ((-(std::pow(C49824, 8) * bs[8] *
                                                   C49835 * C50036) /
                                                 C49737) /
                                                    C49692 -
                                                C49909 / C49830))) -
                  (C50199 * ce) / C49830);
    const double C21087 =
        C49822 * (4 * C50190 +
                  C50018 * (3 * C50188 +
                            C50018 * ((-2 * C50018 * C49909) / C49830 +
                                      C50018 * ((-(std::pow(C49824, 8) * bs[8] *
                                                   C49835 * C50036) /
                                                 C49737) /
                                                    C49692 -
                                                C49909 / C49830)))) -
        ((4 * C50081 + C50018 * C50199) * ce) / C49830;
    const double C21391 =
        2 * (C49822 * C50190 - (C50081 * ce) / C49830) -
        ((C50081 + C50197 * C50094) * ce) / C49830 +
        C49822 * (C50190 - (C49822 * C50197 * ce) / C49830 +
                  C49822 * (C49822 * ((-2 * C50018 * C49909) / C49830 +
                                      C50018 * ((-(std::pow(C49824, 8) * bs[8] *
                                                   C49835 * C50036) /
                                                 C49737) /
                                                    C49692 -
                                                C49909 / C49830)) -
                            (C50197 * ce) / C49830));
    const double C23141 =
        3 * (C50067 - (C50203 * ce) / C49830 + C49822 * C50209) -
        ((2 * C50203 + C49822 * C50208) * ce) / C49830 +
        C49822 * (2 * C50209 - (C50208 * ce) / C49830 +
                  C49822 * (C50188 - (C49822 * C50195 * ce) / C49830 +
                            C49822 * (C49822 * ((-(std::pow(C49824, 8) * bs[8] *
                                                   C49835 * C50036) /
                                                 C49737) /
                                                    C49692 -
                                                C49909 / C49830) -
                                      (C50195 * ce) / C49830)));
    const double C50233 = C50230 + C50232;
    const double C50262 = C49822 * C50261;
    const double C24878 = C49718 * C980;
    const double C24874 = C49718 * C976;
    const double C24870 = C49718 * C276;
    const double C24866 = C49718 * C258;
    const double C24862 = C49718 * C265;
    const double C24858 = C49718 * C255;
    const double C24856 = C49718 * C977;
    const double C24852 = C49718 * C981;
    const double C24846 = C49718 * C275;
    const double C24842 = C49718 * C257;
    const double C24838 = C49718 * C266;
    const double C24834 = C49718 * C256;
    const double C25220 = C49718 * C277;
    const double C25216 = C49718 * C259;
    const double C25212 = C49718 * C264;
    const double C25208 = C49718 * C254;
    const double C25600 = C49718 * C1445;
    const double C25596 = C49718 * C1437;
    const double C25592 = C49718 * C790;
    const double C25588 = C49718 * C781;
    const double C25586 = C49718 * C1446;
    const double C25582 = C49718 * C1438;
    const double C25578 = C49718 * C789;
    const double C25574 = C49718 * C780;
    const double C25870 = C49718 * C2329;
    const double C25866 = C49718 * C2324;
    const double C26039 = C49718 * C2569;
    const double C26035 = C49718 * C2564;
    const double C26031 = C49718 * C1099;
    const double C26027 = C49718 * C1091;
    const double C26545 = C49718 * C3091;
    const double C26541 = C49718 * C3086;
    const double C27997 = C49718 * C1098;
    const double C27993 = C49718 * C1090;
    const double C27989 = C49718 * C420;
    const double C27985 = C49718 * C402;
    const double C27979 = C49718 * C413;
    const double C27975 = C49718 * C399;
    const double C27971 = C49718 * C419;
    const double C27967 = C49718 * C401;
    const double C27965 = C49718 * C414;
    const double C27961 = C49718 * C400;
    const double C28217 = C49718 * C791;
    const double C28213 = C49718 * C782;
    const double C28425 = C49718 * C412;
    const double C28421 = C49718 * C398;
    const double C29223 = C49718 * C4512;
    const double C29219 = C49718 * C4506;
    const double C30403 = C49718 * C1736;
    const double C30399 = C49718 * C1728;
    const double C44783 = C49718 * C1735;
    const double C44779 = C49718 * C1727;
    const double C45087 = C49718 * C421;
    const double C45083 = C49718 * C403;
    const double C46561 = C49718 * C5405;
    const double C46557 = C49718 * C5400;
    const double C117 =
        ((((0 - (C49690 * C49691) / C49692) * ae) / C49692 - (0 * be) / C49701 +
          C49693 / C49692) /
             C49697 -
         ((C49690 * C49714 + 0) * be) / C49692) /
            C49697 +
        ((C49690 * (C49714 / C49697 -
                    ((C49690 * C49718 + C50957) * be) / C49692 + C49711) +
          C51013) *
         ae) /
            C49692 +
        C49718 / C49697 - ((C49690 * C49711 + C50691) * be) / C49692;
    const double C118 =
        (C49714 / C49697 - ((C49690 * C49718 + C50957) * be) / C49692 +
         C49711) /
            C49697 +
        ((C49690 *
              (C49718 / C49697 - ((C49690 * C49711 + C50691) * be) / C49692) +
          C51014) *
         ae) /
            C49692 +
        2 * (C49711 / C49697 - (0 * be) / C49692);
    const double C119 =
        (C49718 / C49697 - ((C49690 * C49711 + C50691) * be) / C49692) /
            C49697 +
        ((C49690 * (C49711 / C49697 - (0 * be) / C49692) + C7910) * ae) /
            C49692;
    const double C7913 =
        C49714 / C49697 - ((C49690 * C49718 + C50957) * be) / C49692 + C49711;
    const double C7914 =
        C49718 / C49697 - ((C49690 * C49711 + C50691) * be) / C49692;
    const double C16983 =
        C49714 / C49697 + ((C49690 * C49718 + C50957) * ae) / C49692 + C49711;
    const double C16984 =
        C49718 / C49697 + ((C49690 * C49711 + C50691) * ae) / C49692;
    const double C3400 = C2395 + C2396;
    const double C2409 = C2389 + C2390;
    const double C4090 = C3135 + C3136;
    const double C15715 = C3136 + C3135;
    const double C14543 = C3132 + C3131;
    const double C14541 = C3131 + C3132;
    const double C6413 = C3587 + C3586;
    const double C15067 = C3586 + C3587;
    const double C7311 = C5470 + C5469;
    const double C5485 = C5465 + C5466;
    const double C21102 = C21098 - C20436;
    const double C21322 = C21320 - C21312;
    const double C21101 = C21097 - C20434;
    const double C21321 = C21319 - C21308;
    const double C32838 = C32837 - C23656;
    const double C33137 = C33136 - C23964;
    const double C1721 =
        ((((0 - (C49735 * C49761) / C49737) * ce) / C49737 - (0 * de) / C49741 +
          C49736 / C49737) /
             C49762 -
         ((C49735 * C49779 + 0) * de) / C49737) /
            C49762 +
        ((C49735 * (C49779 / C49762 -
                    ((C49735 * C49781 + C50973) * de) / C49737 + C49774) +
          C51019) *
         ce) /
            C49737 +
        C49781 / C49762 - ((C49735 * C49774 + C50809) * de) / C49737;
    const double C1722 =
        (C49779 / C49762 - ((C49735 * C49781 + C50973) * de) / C49737 +
         C49774) /
            C49762 +
        ((C49735 *
              (C49781 / C49762 - ((C49735 * C49774 + C50809) * de) / C49737) +
          C51020) *
         ce) /
            C49737 +
        2 * (C49774 / C49762 - (0 * de) / C49737);
    const double C1723 =
        (C49781 / C49762 - ((C49735 * C49774 + C50809) * de) / C49737) /
            C49762 +
        ((C49735 * (C49774 / C49762 - (0 * de) / C49737) + C1971) * ce) /
            C49737;
    const double C1972 =
        C49779 / C49762 - ((C49735 * C49781 + C50973) * de) / C49737 + C49774;
    const double C1973 =
        C49781 / C49762 - ((C49735 * C49774 + C50809) * de) / C49737;
    const double C2412 = C2402 + C2401;
    const double C20151 = C20145 * C121;
    const double C5487 = C5477 + C5478;
    const double C14548 = C3140 + C3139;
    const double C14545 = C3139 + C3140;
    const double C22373 = C22369 * C121;
    const double C139 = (4 * (2 * C49956 + C49819 * C49967 + C50279 * ae) +
                         C49819 * (3 * C49967 + C49819 * C49986 + C50283 * ae) +
                         (3 * C50279 + C49819 * C50283) * ae) /
                        C49692;
    const double C274 =
        (2 * C49956 + C49819 * C49967 + C50279 * ae + C49986 * C50036) / C49692;
    const double C279 =
        (C50018 * (3 * C49967 + C49819 * C49986 + C50283 * ae)) / C49692;
    const double C418 =
        (2 * C49956 + C49819 * C49967 + C50279 * ae + C49986 * C50094) / C49692;
    const double C423 =
        (C49822 * (3 * C49967 + C49819 * C49986 + C50283 * ae)) / C49692;
    const double C788 = (C49822 * C50018 * C49986) / C49692;
    const double C6011 = C6003 + C6004;
    const double C9243 = C9233 + C9234;
    const double C18313 = C18303 + C18304;
    const double C22371 = C22365 + C22366;
    const double C28015 = C27991 + C27992;
    const double C20153 = C20147 * C121;
    const double C31601 = C31599 * C121;
    const double C50593 = C50592 - C50580;
    const double C50012 = C49819 * C50011;
    const double C50028 = C50018 * C50011;
    const double C982 =
        (2 * C50018 * C49986 + C50018 * (C49986 + C50011 * C50036)) / C49692;
    const double C1439 = (C49822 * (C49986 + C50011 * C50036)) / C49692;
    const double C1729 =
        (2 * C49822 * C49986 + C49822 * (C49986 + C50011 * C50094)) / C49692;
    const double C20150 = C20144 * C50745;
    const double C2410 = C2391 + C2392;
    const double C19926 = C19910 * C50745;
    const double C20409 = C19910 * C50973;
    const double C21528 = C19910 * C1549;
    const double C5486 = C5467 + C5468;
    const double C14544 = C3134 + C3133;
    const double C14542 = C3133 + C3134;
    const double C20438 = C20426 * C50809;
    const double C21526 = C20426 * C50809;
    const double C22002 = C20426 * C50745;
    const double C22738 = C20426 * C50973;
    const double C24272 = C20426 * C1549;
    const double C2730 = C50691 * C283;
    const double C8098 = C7910 * C283;
    const double C8436 = C51014 * C283;
    const double C17168 = C16980 * C283;
    const double C17506 = C16979 * C283;
    const double C25215 = C50691 * C283;
    const double C2376 = C50691 * C289;
    const double C2736 = C2171 * C289;
    const double C8108 = C51014 * C289;
    const double C8076 = C7910 * C289;
    const double C17178 = C16979 * C289;
    const double C17146 = C16980 * C289;
    const double C20138 = C50686 * C289;
    const double C24873 = C50691 * C289;
    const double C25221 = C50957 * C289;
    const double C5786 = C50691 * C427;
    const double C11054 = C7910 * C427;
    const double C11392 = C51014 * C427;
    const double C28424 = C50691 * C427;
    const double C34159 = C16980 * C427;
    const double C34497 = C16979 * C427;
    const double C5450 = C50691 * C433;
    const double C5796 = C2171 * C433;
    const double C11064 = C51014 * C433;
    const double C11042 = C7910 * C433;
    const double C22530 = C50686 * C433;
    const double C27988 = C50691 * C433;
    const double C34169 = C16979 * C433;
    const double C34147 = C16980 * C433;
    const double C45088 = C50957 * C433;
    const double C3122 = C50691 * C797;
    const double C8806 = C51014 * C797;
    const double C8792 = C7910 * C797;
    const double C14082 = C2171 * C797;
    const double C17876 = C16979 * C797;
    const double C17862 = C16980 * C797;
    const double C22364 = C50686 * C797;
    const double C25595 = C50691 * C797;
    const double C28218 = C50957 * C797;
    const double C6425 = C6419 + C6420;
    const double C22214 = C22197 + C22198;
    const double C29230 = C29225 + C29226;
    const double C7318 = C50691 * C5410;
    const double C39367 = C50686 * C5410;
    const double C46560 = C50691 * C5410;
    const double C3399 = C2393 + C2394;
    const double C19928 = C19912 * C50745;
    const double C20415 = C19912 * C50973;
    const double C21532 = C19912 * C1549;
    const double C6414 = C3589 + C3588;
    const double C15068 = C3588 + C3589;
    const double C22018 = C22014 * C50745;
    const double C22742 = C22014 * C50973;
    const double C22740 = C22014 * C50809;
    const double C24276 = C22014 * C1549;
    const double C24274 = C22014 * C50809;
    const double C4091 = C3137 + C3138;
    const double C15716 = C3138 + C3137;
    const double C20440 = C20428 * C50809;
    const double C21530 = C20428 * C50809;
    const double C22004 = C20428 * C50745;
    const double C31944 = C20428 * C50973;
    const double C33431 = C20428 * C1549;
    const double C7312 = C5472 + C5471;
    const double C20620 = C20618 * C50745;
    const double C20758 = C20752 * C393;
    const double C21748 = C20752 * C1971;
    const double C22992 = C20752 * C50745;
    const double C32836 = C20752 * C50809;
    const double C33135 = C20752 * C50809;
    const double C21104 = C21100 * C50809;
    const double C21316 = C21100 * C50809;
    const double C32193 = C21100 * C50745;
    const double C23660 = C23164 * C50809;
    const double C23968 = C23164 * C50809;
    const double C32345 = C23164 * C393;
    const double C33731 = C23164 * C1971;
    const double C23162 = C23155 + C23156;
    const double C40559 = C50686 * C7309;
    const double C49930 = C49907 + C49929;
    const double C50117 = C50112 - C50115;
    const double C6001 =
        2 * (C49822 * C50119 - (C50030 * ce) / C49830) -
        ((C50030 + C50120 * C50094) * ce) / C49830 +
        C49822 * (C50119 - (C49822 * C50120 * ce) / C49830 +
                  C49822 * (C49822 * C50018 *
                                ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830)) -
                            (C50120 * ce) / C49830));
    const double C2384 = C50691 * C987;
    const double C9076 = C7910 * C987;
    const double C18146 = C16980 * C987;
    const double C20142 = C50686 * C987;
    const double C24881 = C50691 * C987;
    const double C6008 = C50691 * C1101;
    const double C9240 = C7910 * C1101;
    const double C18310 = C16980 * C1101;
    const double C22368 = C50686 * C1101;
    const double C27996 = C50691 * C1101;
    const double C3130 = C50691 * C1448;
    const double C9744 = C7910 * C1448;
    const double C18814 = C16980 * C1448;
    const double C25603 = C50691 * C1448;
    const double C31598 = C50686 * C1448;
    const double C5458 = C50691 * C1738;
    const double C12868 = C7910 * C1738;
    const double C35973 = C16980 * C1738;
    const double C39569 = C50686 * C1738;
    const double C44782 = C50691 * C1738;
    const double C6410 =
        3 * (C50085 - (C50122 * ce) / C49830 + C49822 * C50129) -
        ((2 * C50122 + C49822 * C50130) * ce) / C49830 +
        C49822 * (2 * C50129 - (C50130 * ce) / C49830 +
                  C49822 * (C50123 - (C49822 * C50125 * ce) / C49830 +
                            C49822 * (C49822 * C50018 *
                                          ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830) -
                                      (C50125 * ce) / C49830)));
    const double C50159 = C50156 + C50157;
    const double C19930 = C19914 * C50745;
    const double C22020 = C22016 * C50745;
    const double C31946 = C22016 * C50809;
    const double C33433 = C22016 * C50809;
    const double C20442 = C20430 * C50809;
    const double C21534 = C20430 * C50809;
    const double C31301 = C20430 * C50745;
    const double C24069 =
        4 * (2 * C50143 - (C50140 * ce) / C49830 + C49822 * C50233) -
        ((3 * C50140 + C49822 * C50229) * ce) / C49830 +
        C49822 *
            (3 * C50233 - (C50229 * ce) / C49830 +
             C49822 *
                 (2 * C50231 - (C50223 * ce) / C49830 +
                  C49822 * ((-(C49822 * C50215 * ce) / C49737) / C49692 -
                            C50213 / C49830 +
                            C49822 * ((-(C49822 * C50018 * std::pow(C49824, 8) *
                                         bs[8] * C49835) /
                                       C49737) /
                                          C49692 -
                                      (C50215 * ce) / C49830))));
    const double C50263 = C50248 + C50262;
    const double C24904 = C24878 + C24879;
    const double C24902 = C24874 + C24875;
    const double C24900 = C24870 + C24871;
    const double C24898 = C24866 + C24867;
    const double C24896 = C24862 + C24863;
    const double C24894 = C24858 + C24859;
    const double C24893 = C24856 + C24857;
    const double C24891 = C24852 + C24853;
    const double C24888 = C24846 + C24847;
    const double C24886 = C24842 + C24843;
    const double C24884 = C24838 + C24839;
    const double C24882 = C24834 + C24835;
    const double C25228 = C25216 + C25217;
    const double C25226 = C25212 + C25213;
    const double C25224 = C25208 + C25209;
    const double C25618 = C25600 + C25601;
    const double C25616 = C25596 + C25597;
    const double C25614 = C25592 + C25593;
    const double C25612 = C25588 + C25589;
    const double C25611 = C25586 + C25587;
    const double C25609 = C25582 + C25583;
    const double C25607 = C25578 + C25579;
    const double C25605 = C25574 + C25575;
    const double C25878 = C25870 + C25871;
    const double C25876 = C25866 + C25867;
    const double C26049 = C26039 + C26040;
    const double C26047 = C26035 + C26036;
    const double C26045 = C26031 + C26032;
    const double C26043 = C26027 + C26028;
    const double C26554 = C26545 + C26546;
    const double C26552 = C26541 + C26542;
    const double C28018 = C27997 + C27998;
    const double C28016 = C27993 + C27994;
    const double C28014 = C27989 + C27990;
    const double C28012 = C27985 + C27986;
    const double C28009 = C27979 + C27980;
    const double C28007 = C27975 + C27976;
    const double C28005 = C27971 + C27972;
    const double C28003 = C27967 + C27968;
    const double C28002 = C27965 + C27966;
    const double C28000 = C27961 + C27962;
    const double C28221 = C28213 + C28214;
    const double C28430 = C28425 + C28426;
    const double C28428 = C28421 + C28422;
    const double C29229 = C29223 + C29224;
    const double C29227 = C29219 + C29220;
    const double C30408 = C30403 + C30404;
    const double C30406 = C30399 + C30400;
    const double C44788 = C44783 + C44784;
    const double C44786 = C44779 + C44780;
    const double C45090 = C45083 + C45084;
    const double C46566 = C46561 + C46562;
    const double C46564 = C46557 + C46558;
    const double C8105 = C7913 * C276;
    const double C8099 = C7913 * C258;
    const double C8093 = C7913 * C265;
    const double C8087 = C7913 * C255;
    const double C8085 = C7913 * C257;
    const double C8079 = C7913 * C275;
    const double C8069 = C7913 * C266;
    const double C8063 = C7913 * C256;
    const double C8433 = C7913 * C264;
    const double C8427 = C7913 * C254;
    const double C8803 = C7913 * C790;
    const double C8797 = C7913 * C781;
    const double C8795 = C7913 * C789;
    const double C8789 = C7913 * C780;
    const double C9071 = C7913 * C981;
    const double C9065 = C7913 * C977;
    const double C9235 = C7913 * C1099;
    const double C9229 = C7913 * C1091;
    const double C9739 = C7913 * C1446;
    const double C9733 = C7913 * C1438;
    const double C11065 = C7913 * C420;
    const double C11059 = C7913 * C402;
    const double C11049 = C7913 * C413;
    const double C11043 = C7913 * C399;
    const double C11037 = C7913 * C419;
    const double C11031 = C7913 * C401;
    const double C11029 = C7913 * C414;
    const double C11023 = C7913 * C400;
    const double C11393 = C7913 * C412;
    const double C11387 = C7913 * C398;
    const double C12871 = C7913 * C1736;
    const double C12865 = C7913 * C1728;
    const double C8107 = C7914 * C277;
    const double C8101 = C7914 * C259;
    const double C8095 = C7914 * C264;
    const double C8089 = C7914 * C254;
    const double C8083 = C7914 * C258;
    const double C8077 = C7914 * C276;
    const double C8071 = C7914 * C265;
    const double C8065 = C7914 * C255;
    const double C8435 = C7914 * C263;
    const double C8429 = C7914 * C253;
    const double C8805 = C7914 * C791;
    const double C8799 = C7914 * C782;
    const double C8793 = C7914 * C790;
    const double C8787 = C7914 * C781;
    const double C9073 = C7914 * C980;
    const double C9067 = C7914 * C976;
    const double C9237 = C7914 * C1098;
    const double C9231 = C7914 * C1090;
    const double C9741 = C7914 * C1445;
    const double C9735 = C7914 * C1437;
    const double C11063 = C7914 * C421;
    const double C11057 = C7914 * C403;
    const double C11051 = C7914 * C412;
    const double C11045 = C7914 * C398;
    const double C11039 = C7914 * C420;
    const double C11033 = C7914 * C402;
    const double C11027 = C7914 * C413;
    const double C11021 = C7914 * C399;
    const double C11391 = C7914 * C411;
    const double C11385 = C7914 * C397;
    const double C12869 = C7914 * C1735;
    const double C12863 = C7914 * C1727;
    const double C17175 = C16983 * C276;
    const double C17169 = C16983 * C258;
    const double C17163 = C16983 * C265;
    const double C17157 = C16983 * C255;
    const double C17155 = C16983 * C257;
    const double C17149 = C16983 * C275;
    const double C17139 = C16983 * C266;
    const double C17133 = C16983 * C256;
    const double C17503 = C16983 * C264;
    const double C17497 = C16983 * C254;
    const double C17873 = C16983 * C790;
    const double C17867 = C16983 * C781;
    const double C17865 = C16983 * C789;
    const double C17859 = C16983 * C780;
    const double C18141 = C16983 * C981;
    const double C18135 = C16983 * C977;
    const double C18305 = C16983 * C1099;
    const double C18299 = C16983 * C1091;
    const double C18809 = C16983 * C1446;
    const double C18803 = C16983 * C1438;
    const double C34170 = C16983 * C420;
    const double C34164 = C16983 * C402;
    const double C34154 = C16983 * C413;
    const double C34148 = C16983 * C399;
    const double C34142 = C16983 * C419;
    const double C34136 = C16983 * C401;
    const double C34134 = C16983 * C414;
    const double C34128 = C16983 * C400;
    const double C34498 = C16983 * C412;
    const double C34492 = C16983 * C398;
    const double C35976 = C16983 * C1736;
    const double C35970 = C16983 * C1728;
    const double C17177 = C16984 * C277;
    const double C17171 = C16984 * C259;
    const double C17165 = C16984 * C264;
    const double C17159 = C16984 * C254;
    const double C17153 = C16984 * C258;
    const double C17147 = C16984 * C276;
    const double C17141 = C16984 * C265;
    const double C17135 = C16984 * C255;
    const double C17505 = C16984 * C263;
    const double C17499 = C16984 * C253;
    const double C17875 = C16984 * C791;
    const double C17869 = C16984 * C782;
    const double C17863 = C16984 * C790;
    const double C17857 = C16984 * C781;
    const double C18143 = C16984 * C980;
    const double C18137 = C16984 * C976;
    const double C18307 = C16984 * C1098;
    const double C18301 = C16984 * C1090;
    const double C18811 = C16984 * C1445;
    const double C18805 = C16984 * C1437;
    const double C34168 = C16984 * C421;
    const double C34162 = C16984 * C403;
    const double C34156 = C16984 * C412;
    const double C34150 = C16984 * C398;
    const double C34144 = C16984 * C420;
    const double C34138 = C16984 * C402;
    const double C34132 = C16984 * C413;
    const double C34126 = C16984 * C399;
    const double C34496 = C16984 * C411;
    const double C34490 = C16984 * C397;
    const double C35974 = C16984 * C1735;
    const double C35968 = C16984 * C1727;
    const double C3410 = C3400 * C121;
    const double C2413 = C2409 * C121;
    const double C4088 = C2409 * C644;
    const double C4401 = C2409 * C1551;
    const double C4101 = C4090 * C645;
    const double C4403 = C4090 * C1552;
    const double C21743 = C19903 * C1972;
    const double C21737 = C19901 * C1972;
    const double C21731 = C19899 * C1972;
    const double C24577 = C20747 * C1972;
    const double C24571 = C20419 * C1972;
    const double C33726 = C20421 * C1972;
    const double C21745 = C20423 * C1973;
    const double C21739 = C20421 * C1973;
    const double C21733 = C20419 * C1973;
    const double C24579 = C22205 * C1973;
    const double C24573 = C20747 * C1973;
    const double C33728 = C20749 * C1973;
    const double C2416 = C2412 * C121;
    const double C2734 = C50691 * C274;
    const double C8104 = C7910 * C274;
    const double C17174 = C16980 * C274;
    const double C25219 = C50691 * C274;
    const double C8432 = C7910 * C279;
    const double C17502 = C16980 * C279;
    const double C5790 = C50691 * C418;
    const double C11056 = C7910 * C418;
    const double C34161 = C16980 * C418;
    const double C45082 = C50691 * C418;
    const double C11384 = C7910 * C423;
    const double C34489 = C16980 * C423;
    const double C8802 = C7910 * C788;
    const double C14080 = C50691 * C788;
    const double C17872 = C16980 * C788;
    const double C28216 = C50691 * C788;
    const double C22375 = C22371 * C121;
    const double C40553 =
        5 * ((-3 * C50519) / C49737 + C49822 * C50593 -
             (C50518 * ce) / C49737) +
        C49822 *
            (4 * C50593 +
             C49822 * ((-3 * C50587) / C49737 +
                       C49822 * ((-2 * C50578) / C49737 -
                                 (C49822 *
                                  (C49822 * (C49822 * C49911 + C49992 * ce) +
                                   C49875 + C49822 * C49992 * ce)) /
                                     C49737 -
                                 (C50581 * ce) / C49737) -
                       (C50586 * ce) / C49737) -
             (C50590 * ce) / C49737) -
        ((4 * C50518 + C49822 * C50590) * ce) / C49737;
    const double C50013 = C49989 + C50012;
    const double C1092 = (C50018 * C49986 + C50028 * C50094) / C49692;
    const double C2414 = C2410 * C50745;
    const double C4089 = C2410 * C50973;
    const double C4402 = C2410 * C1549;
    const double C19934 = C19926 + C19925;
    const double C2742 = C2729 + C2730;
    const double C8128 = C8097 + C8098;
    const double C17198 = C17167 + C17168;
    const double C25227 = C25214 + C25215;
    const double C2404 = C2375 + C2376;
    const double C2745 = C2735 + C2736;
    const double C8117 = C8075 + C8076;
    const double C17187 = C17145 + C17146;
    const double C20146 = C20137 + C20138;
    const double C24901 = C24872 + C24873;
    const double C25230 = C25220 + C25221;
    const double C5799 = C5785 + C5786;
    const double C11084 = C11053 + C11054;
    const double C28429 = C28423 + C28424;
    const double C34189 = C34158 + C34159;
    const double C5479 = C5449 + C5450;
    const double C5804 = C5795 + C5796;
    const double C11078 = C11041 + C11042;
    const double C22534 = C22529 + C22530;
    const double C28013 = C27987 + C27988;
    const double C34183 = C34146 + C34147;
    const double C45092 = C45087 + C45088;
    const double C3142 = C3121 + C3122;
    const double C8812 = C8791 + C8792;
    const double C14087 = C14081 + C14082;
    const double C17882 = C17861 + C17862;
    const double C22370 = C22363 + C22364;
    const double C25615 = C25594 + C25595;
    const double C28223 = C28217 + C28218;
    const double C22744 = C22214 * C50809;
    const double C24278 = C22214 * C50809;
    const double C7323 = C7317 + C7318;
    const double C39369 = C39366 + C39367;
    const double C46565 = C46559 + C46560;
    const double C3409 = C3399 * C50745;
    const double C19933 = C19928 + C19927;
    const double C4102 = C4091 * C50809;
    const double C4404 = C4091 * C50809;
    const double C31302 = C22004 + C22003;
    const double C23166 = C23162 * C393;
    const double C24582 = C23162 * C1971;
    const double C40561 = C40558 + C40559;
    const double C149 =
        5 * (3 * C49890 + (C49888 * ae) / C49692 + C49819 * C49930) +
        ((4 * C49888 + C49819 * C49928) * ae) / C49692 +
        C49819 *
            (4 * C49930 + (C49928 * ae) / C49692 +
             C49819 *
                 (3 * C49927 + (C49924 * ae) / C49692 +
                  C49819 *
                      (2 * C49923 - (ae * C49917) / C49830 +
                       C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830)))));
    const double C290 = 2 * C49860 - (ae * C49857) / C49830 + C49819 * C49890 +
                        C49930 * std::pow(yP - yQ, 2);
    const double C291 =
        (yP - yQ) * (3 * C49890 + (C49888 * ae) / C49692 + C49819 * C49930);
    const double C292 =
        3 * C49890 + (C49888 * ae) / C49692 + C49819 * C49930 +
        (3 * C49927 + (C49924 * ae) / C49692 +
         C49819 *
             (2 * C49923 - (ae * C49917) / C49830 +
              C49819 *
                  ((-(ae * C49819 * C49911) / C49737) / C49692 -
                   C49909 / C49830 +
                   C49819 * ((-(C49819 * std::pow(C49824, 8) * bs[8] * C49835) /
                              C49737) /
                                 C49692 -
                             (ae * C49911) / C49830)))) *
            std::pow(yP - yQ, 2);
    const double C434 = 2 * C49860 - (ae * C49857) / C49830 + C49819 * C49890 -
                        (C49822 * C49986 * ce) / C49830 +
                        C49822 * (C49822 * C49930 - (C49986 * ce) / C49830);
    const double C435 =
        C49822 * (3 * C49890 + (C49888 * ae) / C49692 + C49819 * C49930) -
        ((3 * C49967 + C49819 * C49986 + (2 * C49960 + C49819 * C49978) * ae) *
         ce) /
            C49830;
    const double C543 =
        (yP - yQ) *
        (4 * C49930 + (C49928 * ae) / C49692 +
         C49819 *
             (3 * C49927 + (C49924 * ae) / C49692 +
              C49819 * (2 * C49923 - (ae * C49917) / C49830 +
                        C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                  C49909 / C49830 +
                                  C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                               bs[8] * C49835) /
                                             C49737) /
                                                C49692 -
                                            (ae * C49911) / C49830)))));
    const double C798 =
        C49822 * C50018 * C49930 - (C50018 * C49986 * ce) / C49830;
    const double C986 =
        2 * C50018 * C49930 +
        C50018 *
            (C49930 +
             (2 * C49923 - (ae * C49917) / C49830 +
              C49819 *
                  ((-(ae * C49819 * C49911) / C49737) / C49692 -
                   C49909 / C49830 +
                   C49819 * ((-(C49819 * std::pow(C49824, 8) * bs[8] * C49835) /
                              C49737) /
                                 C49692 -
                             (ae * C49911) / C49830))) *
                 std::pow(C50018, 2));
    const double C1100 =
        C50018 * C49930 - (C49822 * C50028 * ce) / C49830 +
        C49822 * (C49822 * C50018 *
                      (2 * C49923 - (ae * C49917) / C49830 +
                       C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830))) -
                  (C50028 * ce) / C49830);
    const double C1447 =
        C49822 *
            (C49930 +
             (2 * C49923 - (ae * C49917) / C49830 +
              C49819 *
                  ((-(ae * C49819 * C49911) / C49737) / C49692 -
                   C49909 / C49830 +
                   C49819 * ((-(C49819 * std::pow(C49824, 8) * bs[8] * C49835) /
                              C49737) /
                                 C49692 -
                             (ae * C49911) / C49830))) *
                 C50036) -
        ((C49986 + C50011 * C50036) * ce) / C49830;
    const double C1737 =
        2 * (C49822 * C49930 - (C49986 * ce) / C49830) -
        ((C49986 + C50011 * std::pow(C49822, 2)) * ce) / C49830 +
        C49822 *
            (C49930 - (C49822 * C50011 * ce) / C49830 +
             C49822 *
                 (C49822 *
                      (2 * C49923 - (ae * C49917) / C49830 +
                       C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830))) -
                  (C50011 * ce) / C49830));
    const double C5411 =
        3 * (C49890 - (C50111 * ce) / C49830 + C49822 * C50117) -
        ((2 * C50111 + C49822 * C50116) * ce) / C49830 +
        C49822 *
            (2 * C50117 - (C50116 * ce) / C49830 +
             C49822 *
                 (C49927 - (C49822 * C50008 * ce) / C49830 +
                  C49822 *
                      (C49822 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830)) -
                       (C50008 * ce) / C49830)));
    const double C2408 = C2383 + C2384;
    const double C9082 = C9075 + C9076;
    const double C18152 = C18145 + C18146;
    const double C20148 = C20141 + C20142;
    const double C24905 = C24880 + C24881;
    const double C6013 = C6007 + C6008;
    const double C9246 = C9239 + C9240;
    const double C18316 = C18309 + C18310;
    const double C22372 = C22367 + C22368;
    const double C28017 = C27995 + C27996;
    const double C3146 = C3129 + C3130;
    const double C9750 = C9743 + C9744;
    const double C18820 = C18813 + C18814;
    const double C25619 = C25602 + C25603;
    const double C31600 = C31597 + C31598;
    const double C5483 = C5457 + C5458;
    const double C12876 = C12867 + C12868;
    const double C35981 = C35972 + C35973;
    const double C39571 = C39568 + C39569;
    const double C44787 = C44781 + C44782;
    const double C7308 =
        4 * (2 * C50109 - (C50108 * ce) / C49830 + C49822 * C50159) -
        ((3 * C50108 + C49822 * C50158) * ce) / C49830 +
        C49822 *
            (3 * C50159 - (C50158 * ce) / C49830 +
             C49822 *
                 (2 * C50154 - (C50152 * ce) / C49830 +
                  C49822 *
                      (C49923 - (C49822 * C50001 * ce) / C49830 +
                       C49822 * (C49822 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830) -
                                 (C50001 * ce) / C49830))));
    const double C40554 =
        5 * (3 * C50180 - (C50175 * ce) / C49830 + C49822 * C50263) -
        ((4 * C50175 + C49822 * C50260) * ce) / C49830 +
        C49822 *
            (4 * C50263 - (C50260 * ce) / C49830 +
             C49822 *
                 (3 * C50261 - (C50254 * ce) / C49830 +
                  C49822 *
                      (2 * C50256 - (C50247 * ce) / C49830 +
                       C49822 * ((-(C49822 * C49994 * ce) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49822 * ((-(C49822 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (C49994 * ce) / C49830)))));
    const double C24909 = C24899 + C24898;
    const double C25865 = C24892 + C24893;
    const double C25864 = C24890 + C24891;
    const double C24907 = C24888 + C24889;
    const double C24906 = C24886 + C24887;
    const double C28696 = C25613 + C25612;
    const double C28693 = C25612 + C25613;
    const double C26540 = C25610 + C25611;
    const double C29878 = C25611 + C25610;
    const double C26539 = C25608 + C25609;
    const double C29877 = C25609 + C25608;
    const double C28692 = C25607 + C25606;
    const double C28690 = C25606 + C25607;
    const double C28691 = C25605 + C25604;
    const double C28689 = C25604 + C25605;
    const double C29218 = C26046 + C26045;
    const double C29216 = C26045 + C26046;
    const double C29217 = C26044 + C26043;
    const double C29215 = C26043 + C26044;
    const double C44775 = C28011 + C28012;
    const double C44774 = C28005 + C28006;
    const double C44773 = C28003 + C28004;
    const double C46554 = C30407 + C30408;
    const double C46553 = C30405 + C30406;
    const double C8132 = C8105 + C8106;
    const double C8129 = C8099 + C8100;
    const double C8126 = C8093 + C8094;
    const double C8123 = C8087 + C8088;
    const double C8122 = C8085 + C8086;
    const double C8119 = C8079 + C8080;
    const double C8114 = C8069 + C8070;
    const double C8111 = C8063 + C8064;
    const double C8442 = C8433 + C8434;
    const double C8439 = C8427 + C8428;
    const double C8818 = C8803 + C8804;
    const double C8815 = C8797 + C8798;
    const double C8814 = C8795 + C8796;
    const double C8811 = C8789 + C8790;
    const double C9080 = C9071 + C9072;
    const double C9077 = C9065 + C9066;
    const double C9244 = C9235 + C9236;
    const double C9241 = C9229 + C9230;
    const double C9748 = C9739 + C9740;
    const double C9745 = C9733 + C9734;
    const double C11090 = C11065 + C11066;
    const double C11087 = C11059 + C11060;
    const double C11082 = C11049 + C11050;
    const double C11079 = C11043 + C11044;
    const double C11076 = C11037 + C11038;
    const double C11073 = C11031 + C11032;
    const double C11072 = C11029 + C11030;
    const double C11069 = C11023 + C11024;
    const double C11400 = C11393 + C11394;
    const double C11397 = C11387 + C11388;
    const double C12878 = C12871 + C12872;
    const double C12875 = C12865 + C12866;
    const double C8133 = C8107 + C8108;
    const double C8130 = C8101 + C8102;
    const double C8127 = C8095 + C8096;
    const double C8124 = C8089 + C8090;
    const double C8121 = C8083 + C8084;
    const double C8118 = C8077 + C8078;
    const double C8115 = C8071 + C8072;
    const double C8112 = C8065 + C8066;
    const double C8443 = C8435 + C8436;
    const double C8440 = C8429 + C8430;
    const double C8819 = C8805 + C8806;
    const double C8816 = C8799 + C8800;
    const double C8813 = C8793 + C8794;
    const double C8810 = C8787 + C8788;
    const double C9081 = C9073 + C9074;
    const double C9078 = C9067 + C9068;
    const double C9245 = C9237 + C9238;
    const double C9242 = C9231 + C9232;
    const double C9749 = C9741 + C9742;
    const double C9746 = C9735 + C9736;
    const double C11089 = C11063 + C11064;
    const double C11086 = C11057 + C11058;
    const double C11083 = C11051 + C11052;
    const double C11080 = C11045 + C11046;
    const double C11077 = C11039 + C11040;
    const double C11074 = C11033 + C11034;
    const double C11071 = C11027 + C11028;
    const double C11068 = C11021 + C11022;
    const double C11399 = C11391 + C11392;
    const double C11396 = C11385 + C11386;
    const double C12877 = C12869 + C12870;
    const double C12874 = C12863 + C12864;
    const double C17202 = C17175 + C17176;
    const double C17199 = C17169 + C17170;
    const double C17196 = C17163 + C17164;
    const double C17193 = C17157 + C17158;
    const double C17192 = C17155 + C17156;
    const double C17189 = C17149 + C17150;
    const double C17184 = C17139 + C17140;
    const double C17181 = C17133 + C17134;
    const double C17512 = C17503 + C17504;
    const double C17509 = C17497 + C17498;
    const double C17888 = C17873 + C17874;
    const double C17885 = C17867 + C17868;
    const double C17884 = C17865 + C17866;
    const double C17881 = C17859 + C17860;
    const double C18150 = C18141 + C18142;
    const double C18147 = C18135 + C18136;
    const double C18314 = C18305 + C18306;
    const double C18311 = C18299 + C18300;
    const double C18818 = C18809 + C18810;
    const double C18815 = C18803 + C18804;
    const double C34195 = C34170 + C34171;
    const double C34192 = C34164 + C34165;
    const double C34187 = C34154 + C34155;
    const double C34184 = C34148 + C34149;
    const double C34181 = C34142 + C34143;
    const double C34178 = C34136 + C34137;
    const double C34177 = C34134 + C34135;
    const double C34174 = C34128 + C34129;
    const double C34505 = C34498 + C34499;
    const double C34502 = C34492 + C34493;
    const double C35983 = C35976 + C35977;
    const double C35980 = C35970 + C35971;
    const double C17203 = C17177 + C17178;
    const double C17200 = C17171 + C17172;
    const double C17197 = C17165 + C17166;
    const double C17194 = C17159 + C17160;
    const double C17191 = C17153 + C17154;
    const double C17188 = C17147 + C17148;
    const double C17185 = C17141 + C17142;
    const double C17182 = C17135 + C17136;
    const double C17513 = C17505 + C17506;
    const double C17510 = C17499 + C17500;
    const double C17889 = C17875 + C17876;
    const double C17886 = C17869 + C17870;
    const double C17883 = C17863 + C17864;
    const double C17880 = C17857 + C17858;
    const double C18151 = C18143 + C18144;
    const double C18148 = C18137 + C18138;
    const double C18315 = C18307 + C18308;
    const double C18312 = C18301 + C18302;
    const double C18819 = C18811 + C18812;
    const double C18816 = C18805 + C18806;
    const double C34194 = C34168 + C34169;
    const double C34191 = C34162 + C34163;
    const double C34188 = C34156 + C34157;
    const double C34185 = C34150 + C34151;
    const double C34182 = C34144 + C34145;
    const double C34179 = C34138 + C34139;
    const double C34176 = C34132 + C34133;
    const double C34173 = C34126 + C34127;
    const double C34504 = C34496 + C34497;
    const double C34501 = C34490 + C34491;
    const double C35982 = C35974 + C35975;
    const double C35979 = C35968 + C35969;
    const double C2744 = C2733 + C2734;
    const double C8131 = C8103 + C8104;
    const double C17201 = C17173 + C17174;
    const double C25229 = C25218 + C25219;
    const double C8441 = C8431 + C8432;
    const double C17511 = C17501 + C17502;
    const double C5801 = C5789 + C5790;
    const double C11085 = C11055 + C11056;
    const double C34190 = C34160 + C34161;
    const double C45089 = C45081 + C45082;
    const double C11395 = C11383 + C11384;
    const double C34500 = C34488 + C34489;
    const double C8817 = C8801 + C8802;
    const double C14086 = C14079 + C14080;
    const double C17887 = C17871 + C17872;
    const double C28222 = C28215 + C28216;
    const double C50014 = C50013 + C50007;
    const double C2417 = C2413 + C2414;
    const double C4100 = C4088 + C4089;
    const double C4405 = C4401 + C4402;
    const double C2411 = C2404 + C2403;
    const double C20152 = C20146 * C50745;
    const double C24908 = C24901 + C24900;
    const double C5488 = C5479 + C5480;
    const double C44776 = C28013 + C28014;
    const double C14547 = C3142 + C3141;
    const double C14546 = C3141 + C3142;
    const double C22374 = C22370 * C50745;
    const double C28695 = C25615 + C25614;
    const double C28694 = C25614 + C25615;
    const double C3415 = C3409 + C3410;
    const double C2738 = C50691 * C290;
    const double C8110 = C7910 * C290;
    const double C17180 = C16980 * C290;
    const double C25223 = C50691 * C290;
    const double C8438 = C7910 * C291;
    const double C17508 = C16980 * C291;
    const double C5794 = C50691 * C434;
    const double C11062 = C7910 * C434;
    const double C34167 = C16980 * C434;
    const double C45086 = C50691 * C434;
    const double C11390 = C7910 * C435;
    const double C34495 = C16980 * C435;
    const double C8808 = C7910 * C798;
    const double C14084 = C50691 * C798;
    const double C17878 = C16980 * C798;
    const double C28220 = C50691 * C798;
    const double C20154 = C20148 * C50745;
    const double C22376 = C22372 * C50745;
    const double C31602 = C31600 * C50745;
    const double C24913 = C24909 * C121;
    const double C25875 = C25865 * C121;
    const double C25874 = C25864 * C50745;
    const double C24911 = C24907 * C50745;
    const double C26538 = C24907 * C50973;
    const double C26851 = C24907 * C1549;
    const double C24910 = C24906 * C121;
    const double C26537 = C24906 * C644;
    const double C26850 = C24906 * C1551;
    const double C26551 = C26540 * C50809;
    const double C26853 = C26540 * C50809;
    const double C26550 = C26539 * C645;
    const double C26852 = C26539 * C1552;
    const double C436 =
        3 * C49890 + (C49888 * ae) / C49692 + C49819 * C49930 -
        (C49822 * C50014 * ce) / C49830 +
        C49822 *
            (C49822 *
                 (3 * C49927 + (C49924 * ae) / C49692 +
                  C49819 *
                      (2 * C49923 - (ae * C49917) / C49830 +
                       C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830)))) -
             (C50014 * ce) / C49830);
    const double C649 =
        C49822 *
            (4 * C49930 + (C49928 * ae) / C49692 +
             C49819 *
                 (3 * C49927 + (C49924 * ae) / C49692 +
                  C49819 *
                      (2 * C49923 - (ae * C49917) / C49830 +
                       C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830))))) -
        ((4 * C49986 + C49819 * C50014 + (3 * C49978 + C49819 * C50005) * ae) *
         ce) /
            C49830;
    const double C799 =
        C49822 * C50018 *
            (3 * C49927 + (C49924 * ae) / C49692 +
             C49819 * (2 * C49923 - (ae * C49917) / C49830 +
                       C49819 * ((-(ae * C49819 * C49911) / C49737) / C49692 -
                                 C49909 / C49830 +
                                 C49819 * ((-(C49819 * std::pow(C49824, 8) *
                                              bs[8] * C49835) /
                                            C49737) /
                                               C49692 -
                                           (ae * C49911) / C49830)))) -
        (C50018 * C50014 * ce) / C49830;
    const double C142 = (5 * (3 * C49967 + C49819 * C49986 + C50283 * ae) +
                         C49819 * (4 * C49986 + C49819 * C50014 + C50289 * ae) +
                         (4 * C50283 + C49819 * C50289) * ae) /
                        C49692;
    const double C282 =
        (3 * C49967 + C49819 * C49986 + C50283 * ae + C50014 * C50036) / C49692;
    const double C425 =
        (3 * C49967 + C49819 * C49986 + C50283 * ae + C50014 * C50094) / C49692;
    const double C542 =
        (C50018 * (4 * C49986 + C49819 * C50014 + C50289 * ae)) / C49692;
    const double C647 =
        (C49822 * (4 * C49986 + C49819 * C50014 + C50289 * ae)) / C49692;
    const double C793 = (C49822 * C50018 * C50014) / C49692;
    const double C4107 = C4100 - C4101;
    const double C4406 = C4405 - C4403;
    const double C2415 = C2411 * C50745;
    const double C24912 = C24908 * C50745;
    const double C2746 = C2737 + C2738;
    const double C8134 = C8109 + C8110;
    const double C17204 = C17179 + C17180;
    const double C25231 = C25222 + C25223;
    const double C8444 = C8437 + C8438;
    const double C17514 = C17507 + C17508;
    const double C5803 = C5793 + C5794;
    const double C11088 = C11061 + C11062;
    const double C34193 = C34166 + C34167;
    const double C45091 = C45085 + C45086;
    const double C11398 = C11389 + C11390;
    const double C34503 = C34494 + C34495;
    const double C8820 = C8807 + C8808;
    const double C14088 = C14083 + C14084;
    const double C17890 = C17877 + C17878;
    const double C28224 = C28219 + C28220;
    const double C25880 = C25874 + C25875;
    const double C24914 = C24910 + C24911;
    const double C26549 = C26537 + C26538;
    const double C26854 = C26850 + C26851;
    const double C4108 = C4107 - C4102;
    const double C4407 = C4406 - C4404;
    const double C2418 = C2415 + C2416;
    const double C24915 = C24912 + C24913;
    const double C26556 = C26549 - C26550;
    const double C26855 = C26854 - C26852;
    const double C26557 = C26556 - C26551;
    const double C26856 = C26855 - C26853;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C50745) *
                       C50985 +
                   ((C8111 + C8112 + C8113) * C121 +
                    (C8114 + C8115 + C8116) * C50745) *
                       C50881) *
                      C50843 * C50972 -
                  (((C8117 + C8118 + C8119) * C50745 +
                    (C8120 + C8121 + C8122) * C121) *
                       C50881 +
                   ((C8116 + C8115 + C8114) * C50745 +
                    (C8113 + C8112 + C8111) * C121) *
                       C50985) *
                      C50843 * C50781) *
                     C51015 +
                 ((((C8123 + C8124 + C8125) * C121 +
                    (C8126 + C8127 + C8128) * C50745) *
                       C50985 +
                   ((C8129 + C8130 + C8131) * C121 +
                    (C8132 + C8133 + C8134) * C50745) *
                       C50881) *
                      C50843 * C50781 -
                  (((C8128 + C8127 + C8126) * C50745 +
                    (C8125 + C8124 + C8123) * C121) *
                       C50881 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51014 * C145 + C7913 * C134 + C51013 * C144) *
                        C50745 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51014 * C131 + C7913 * C123 + C51013 * C130) *
                        C121) *
                       C50985) *
                      C50843 * C50972) *
                     C51016 +
                 ((((C7913 * C124 + C51013 * C131 + C7914 * C125 +
                     C51014 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51013 * C145 + C7914 * C136 +
                     C51014 * C146 + C7915 * C137 + C7910 * C147) *
                        C50745) *
                       C50985 +
                   ((C8439 + C8440 + C8441) * C121 +
                    (C8442 + C8443 + C8444) * C50745) *
                       C50881) *
                      C50843 * C50972 -
                  (((C7915 * C281 + C7910 * C292 + C7914 * C278 +
                     C51014 * C290 + C7913 * C277 + C51013 * C289) *
                        C50745 +
                    (C7915 * C262 + C7910 * C282 + C7914 * C260 +
                     C51014 * C274 + C7913 * C259 + C51013 * C273) *
                        C121) *
                       C50881 +
                   ((C8444 + C8443 + C8442) * C50745 +
                    (C8441 + C8440 + C8439) * C121) *
                       C50985) *
                      C50843 * C50781) *
                     C539)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C644 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50973 -
             (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
              C7913 * C400 + C51013 * C410) *
                 C645 -
             (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
              C7913 * C414 + C51013 * C430) *
                 C50809) *
                C50985 +
            ((C8111 + C8112 + C8113) * C644 + (C8114 + C8115 + C8116) * C50973 -
             (C8809 + C8810 + C8811) * C645 -
             (C8812 + C8813 + C8814) * C50809) *
                C50881) *
               C50843 * C50972 +
           (((C8811 + C8810 + C8809) * C645 -
             ((C8116 + C8115 + C8114) * C50973 +
              (C8113 + C8112 + C8111) * C644) +
             (C8814 + C8813 + C8812) * C50809) *
                C50985 +
            ((C7913 * C1438 + C51013 * C1442 + C7914 * C1437 + C51014 * C1441 +
              C7915 * C1436 + C7910 * C1440) *
                 C645 -
             ((C8117 + C8118 + C8119) * C50973 +
              (C8120 + C8121 + C8122) * C644) +
             (C7913 * C1446 + C51013 * C1450 + C7914 * C1445 + C51014 * C1449 +
              C7915 * C1444 + C7910 * C1448) *
                 C50809) *
                C50881) *
               C50843 * C50781) *
              C251 +
          ((((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
              C7915 * C397 + C7910 * C407) *
                 C645 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
               C7913 * C134 + C51013 * C144) *
                  C50973 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
               C7913 * C123 + C51013 * C130) *
                  C644) +
             (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
              C7915 * C411 + C7910 * C427) *
                 C50809) *
                C50985 +
            ((C8815 + C8816 + C8817) * C645 -
             ((C8128 + C8127 + C8126) * C50973 +
              (C8125 + C8124 + C8123) * C644) +
             (C8818 + C8819 + C8820) * C50809) *
                C50881) *
               C50843 * C50972 +
           (((C8123 + C8124 + C8125) * C644 + (C8126 + C8127 + C8128) * C50973 -
             (C8817 + C8816 + C8815) * C645 -
             (C8820 + C8819 + C8818) * C50809) *
                C50985 +
            ((C8129 + C8130 + C8131) * C644 + (C8132 + C8133 + C8134) * C50973 -
             (C7915 * C1435 + C7910 * C1439 + C7914 * C1436 + C51014 * C1440 +
              C7913 * C1437 + C51013 * C1441) *
                 C645 -
             (C7915 * C1443 + C7910 * C1447 + C7914 * C1444 + C51014 * C1448 +
              C7913 * C1445 + C51013 * C1449) *
                 C50809) *
                C50881) *
               C50843 * C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50745) *
                C50985 +
            ((C8111 + C8112 + C8113) * C121 +
             (C8114 + C8115 + C8116) * C50745) *
                C50881) *
               C50843 * C248 -
           (((C8117 + C8118 + C8119) * C50745 +
             (C8120 + C8121 + C8122) * C121) *
                C50881 +
            ((C8116 + C8115 + C8114) * C50745 +
             (C8113 + C8112 + C8111) * C121) *
                C50985) *
               C50843 * C249 +
           (((C8122 + C8121 + C8120) * C121 +
             (C8119 + C8118 + C8117) * C50745) *
                C50985 +
            ((C7913 * C977 + C51013 * C985 + C7914 * C976 + C51014 * C984 +
              C7915 * C975 + C7910 * C983) *
                 C121 +
             (C7913 * C981 + C51013 * C989 + C7914 * C980 + C51014 * C988 +
              C7915 * C979 + C7910 * C987) *
                 C50745) *
                C50881) *
               C50843 * C250) *
              C251 +
          ((((C8123 + C8124 + C8125) * C121 +
             (C8126 + C8127 + C8128) * C50745) *
                C50985 +
            ((C8129 + C8130 + C8131) * C121 +
             (C8132 + C8133 + C8134) * C50745) *
                C50881) *
               C50843 * C249 -
           (((C8128 + C8127 + C8126) * C50745 +
             (C8125 + C8124 + C8123) * C121) *
                C50881 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C50745 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C121) *
                C50985) *
               C50843 * C248 -
           (((C7915 * C978 + C7910 * C986 + C7914 * C979 + C51014 * C987 +
              C7913 * C980 + C51013 * C988) *
                 C50745 +
             (C7915 * C974 + C7910 * C982 + C7914 * C975 + C51014 * C983 +
              C7913 * C976 + C51013 * C984) *
                 C121) *
                C50881 +
            ((C8134 + C8133 + C8132) * C50745 +
             (C8131 + C8130 + C8129) * C121) *
                C50985) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50745) *
               C50985 +
           ((C7913 * C256 + C51013 * C270 + C7914 * C255 + C51014 * C269 +
             C7915 * C254 + C7910 * C268) *
                C121 +
            (C7913 * C266 + C51013 * C286 + C7914 * C265 + C51014 * C285 +
             C7915 * C264 + C7910 * C284) *
                C50745) *
               C50881) *
              C50843 * C50730 * C113 -
          (((C7915 * C263 + C7910 * C283 + C7914 * C264 + C51014 * C284 +
             C7913 * C265 + C51013 * C285) *
                C50745 +
            (C7915 * C253 + C7910 * C267 + C7914 * C254 + C51014 * C268 +
             C7913 * C255 + C51013 * C269) *
                C121) *
               C50881 +
           ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
             C7913 * C134 + C51013 * C144) *
                C50745 +
            (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
             C7913 * C123 + C51013 * C130) *
                C121) *
               C50985) *
              C50843 * C50730 * C114 +
          (((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
             C7915 * C126 + C7910 * C138) *
                C121 +
            (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50745) *
               C50985 +
           ((C7913 * C254 + C51013 * C268 + C7914 * C253 + C51014 * C267 +
             C7915 * C261 + C7910 * C279) *
                C121 +
            (C7913 * C264 + C51013 * C284 + C7914 * C263 + C51014 * C283 +
             C7915 * C280 + C7910 * C291) *
                C50745) *
               C50881) *
              C50843 * C50730 * C115 -
          (((C7915 * C541 + C7910 * C543 + C7914 * C280 + C51014 * C291 +
             C7913 * C263 + C51013 * C283) *
                C50745 +
            (C7915 * C540 + C7910 * C542 + C7914 * C261 + C51014 * C279 +
             C7913 * C253 + C51013 * C267) *
                C121) *
               C50881 +
           ((C7915 * C140 + C7910 * C148 + C7914 * C137 + C51014 * C147 +
             C7913 * C136 + C51013 * C146) *
                C50745 +
            (C7915 * C127 + C7910 * C139 + C7914 * C126 + C51014 * C138 +
             C7913 * C125 + C51013 * C132) *
                C121) *
               C50985) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C394 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C391 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C395 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C392 +
            (C7913 * C401 + C51013 * C415 + C7914 * C402 + C51014 * C416 +
             C7915 * C403 + C7910 * C417) *
                C396 +
            (C7913 * C419 + C51013 * C431 + C7914 * C420 + C51014 * C432 +
             C7915 * C421 + C7910 * C433) *
                C393) *
               C50985 +
           ((C8111 + C8112 + C8113) * C394 + (C8114 + C8115 + C8116) * C391 -
            (C7915 * C782 + C7910 * C787 + C7914 * C781 + C51014 * C786 +
             C7913 * C780 + C51013 * C785) *
                C395 -
            (C7915 * C791 + C7910 * C797 + C7914 * C790 + C51014 * C796 +
             C7913 * C789 + C51013 * C795) *
                C392 +
            (C7913 * C1091 + C51013 * C1095 + C7914 * C1090 + C51014 * C1094 +
             C7915 * C1089 + C7910 * C1093) *
                C396 +
            (C7913 * C1099 + C51013 * C1103 + C7914 * C1098 + C51014 * C1102 +
             C7915 * C1097 + C7910 * C1101) *
                C393) *
               C50881) *
              C50843 * C50730 * C251 +
          (((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
             C7915 * C397 + C7910 * C407) *
                C395 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C391 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C394) +
            (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
             C7915 * C411 + C7910 * C427) *
                C392 -
            (C7915 * C404 + C7910 * C418 + C7914 * C403 + C51014 * C417 +
             C7913 * C402 + C51013 * C416) *
                C396 -
            (C7915 * C422 + C7910 * C434 + C7914 * C421 + C51014 * C433 +
             C7913 * C420 + C51013 * C432) *
                C393) *
               C50985 +
           ((C7913 * C781 + C51013 * C786 + C7914 * C782 + C51014 * C787 +
             C7915 * C783 + C7910 * C788) *
                C395 -
            ((C8128 + C8127 + C8126) * C391 + (C8125 + C8124 + C8123) * C394) +
            (C7913 * C790 + C51013 * C796 + C7914 * C791 + C51014 * C797 +
             C7915 * C792 + C7910 * C798) *
                C392 -
            (C7915 * C1088 + C7910 * C1092 + C7914 * C1089 + C51014 * C1093 +
             C7913 * C1090 + C51013 * C1094) *
                C396 -
            (C7915 * C1096 + C7910 * C1100 + C7914 * C1097 + C51014 * C1101 +
             C7913 * C1098 + C51013 * C1102) *
                C393) *
               C50881) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C644 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50973 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C645 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C50809) *
               C50985 +
           ((C8111 + C8112 + C8113) * C644 + (C8114 + C8115 + C8116) * C50973 -
            (C7915 * C782 + C7910 * C787 + C7914 * C781 + C51014 * C786 +
             C7913 * C780 + C51013 * C785) *
                C645 -
            (C7915 * C791 + C7910 * C797 + C7914 * C790 + C51014 * C796 +
             C7913 * C789 + C51013 * C795) *
                C50809) *
               C50881) *
              C50843 * C50730 * C51015 +
          (((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
             C7915 * C397 + C7910 * C407) *
                C645 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C50973 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C644) +
            (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
             C7915 * C411 + C7910 * C427) *
                C50809) *
               C50985 +
           ((C7913 * C781 + C51013 * C786 + C7914 * C782 + C51014 * C787 +
             C7915 * C783 + C7910 * C788) *
                C645 -
            ((C8128 + C8127 + C8126) * C50973 +
             (C8125 + C8124 + C8123) * C644) +
            (C7913 * C790 + C51013 * C796 + C7914 * C791 + C51014 * C797 +
             C7915 * C792 + C7910 * C798) *
                C50809) *
               C50881) *
              C50843 * C50730 * C51016 +
          (((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
             C7915 * C126 + C7910 * C138) *
                C644 +
            (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50973 -
            (C7915 * C405 + C7910 * C423 + C7914 * C397 + C51014 * C407 +
             C7913 * C398 + C51013 * C408) *
                C645 -
            (C7915 * C424 + C7910 * C435 + C7914 * C411 + C51014 * C427 +
             C7913 * C412 + C51013 * C428) *
                C50809) *
               C50985 +
           ((C8439 + C8440 + C8441) * C644 + (C8442 + C8443 + C8444) * C50973 -
            (C7915 * C784 + C7910 * C793 + C7914 * C783 + C51014 * C788 +
             C7913 * C782 + C51013 * C787) *
                C645 -
            (C7915 * C794 + C7910 * C799 + C7914 * C792 + C51014 * C798 +
             C7913 * C791 + C51013 * C797) *
                C50809) *
               C50881) *
              C50843 * C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                    C51014 * C130 + C7915 * C124 + C7910 * C131) *
                       C121 +
                   (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                    C51014 * C144 + C7915 * C135 + C7910 * C145) *
                       C50745) *
                      C50985 +
                  ((C7913 * C256 + C51013 * C270 + C7914 * C255 +
                    C51014 * C269 + C7915 * C254 + C7910 * C268) *
                       C121 +
                   (C7913 * C266 + C51013 * C286 + C7914 * C265 +
                    C51014 * C285 + C7915 * C264 + C7910 * C284) *
                       C50745) *
                      C50881) *
                     C50843 * C50730 * C113 -
                 (((C7915 * C263 + C7910 * C283 + C7914 * C264 + C51014 * C284 +
                    C7913 * C265 + C51013 * C285) *
                       C50745 +
                   (C7915 * C253 + C7910 * C267 + C7914 * C254 + C51014 * C268 +
                    C7913 * C255 + C51013 * C269) *
                       C121) *
                      C50881 +
                  ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
                    C7913 * C134 + C51013 * C144) *
                       C50745 +
                   (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
                    C7913 * C123 + C51013 * C130) *
                       C121) *
                      C50985) *
                     C50843 * C50730 * C114 +
                 (((C7913 * C124 + C51013 * C131 + C7914 * C125 +
                    C51014 * C132 + C7915 * C126 + C7910 * C138) *
                       C121 +
                   (C7913 * C135 + C51013 * C145 + C7914 * C136 +
                    C51014 * C146 + C7915 * C137 + C7910 * C147) *
                       C50745) *
                      C50985 +
                  ((C7913 * C254 + C51013 * C268 + C7914 * C253 +
                    C51014 * C267 + C7915 * C261 + C7910 * C279) *
                       C121 +
                   (C7913 * C264 + C51013 * C284 + C7914 * C263 +
                    C51014 * C283 + C7915 * C280 + C7910 * C291) *
                       C50745) *
                      C50881) *
                     C50843 * C50730 * C115 -
                 (((C7915 * C541 + C7910 * C543 + C7914 * C280 + C51014 * C291 +
                    C7913 * C263 + C51013 * C283) *
                       C50745 +
                   (C7915 * C540 + C7910 * C542 + C7914 * C261 + C51014 * C279 +
                    C7913 * C253 + C51013 * C267) *
                       C121) *
                      C50881 +
                  ((C7915 * C140 + C7910 * C148 + C7914 * C137 + C51014 * C147 +
                    C7913 * C136 + C51013 * C146) *
                       C50745 +
                   (C7915 * C127 + C7910 * C139 + C7914 * C126 + C51014 * C138 +
                    C7913 * C125 + C51013 * C132) *
                       C121) *
                      C50985) *
                     C50843 * C50730 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C50745) *
                       C50985 +
                   ((C8111 + C8112 + C8113) * C121 +
                    (C8114 + C8115 + C8116) * C50745) *
                       C50881) *
                      C50843 * C248 -
                  (((C8117 + C8118 + C8119) * C50745 +
                    (C8120 + C8121 + C8122) * C121) *
                       C50881 +
                   ((C8116 + C8115 + C8114) * C50745 +
                    (C8113 + C8112 + C8111) * C121) *
                       C50985) *
                      C50843 * C249 +
                  (((C8122 + C8121 + C8120) * C121 +
                    (C8119 + C8118 + C8117) * C50745) *
                       C50985 +
                   ((C7913 * C977 + C51013 * C985 + C7914 * C976 +
                     C51014 * C984 + C7915 * C975 + C7910 * C983) *
                        C121 +
                    (C7913 * C981 + C51013 * C989 + C7914 * C980 +
                     C51014 * C988 + C7915 * C979 + C7910 * C987) *
                        C50745) *
                       C50881) *
                      C50843 * C250) *
                     C251 +
                 ((((C8123 + C8124 + C8125) * C121 +
                    (C8126 + C8127 + C8128) * C50745) *
                       C50985 +
                   ((C8129 + C8130 + C8131) * C121 +
                    (C8132 + C8133 + C8134) * C50745) *
                       C50881) *
                      C50843 * C249 -
                  (((C8128 + C8127 + C8126) * C50745 +
                    (C8125 + C8124 + C8123) * C121) *
                       C50881 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51014 * C145 + C7913 * C134 + C51013 * C144) *
                        C50745 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51014 * C131 + C7913 * C123 + C51013 * C130) *
                        C121) *
                       C50985) *
                      C50843 * C248 -
                  (((C7915 * C978 + C7910 * C986 + C7914 * C979 +
                     C51014 * C987 + C7913 * C980 + C51013 * C988) *
                        C50745 +
                    (C7915 * C974 + C7910 * C982 + C7914 * C975 +
                     C51014 * C983 + C7913 * C976 + C51013 * C984) *
                        C121) *
                       C50881 +
                   ((C8134 + C8133 + C8132) * C50745 +
                    (C8131 + C8130 + C8129) * C121) *
                       C50985) *
                      C50843 * C250) *
                     C50718)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C50745) *
                       C50985 +
                   ((C8111 + C8112 + C8113) * C121 +
                    (C8114 + C8115 + C8116) * C50745) *
                       C50881) *
                      C50843 * C51017 -
                  (((C8117 + C8118 + C8119) * C50745 +
                    (C8120 + C8121 + C8122) * C121) *
                       C50881 +
                   ((C8116 + C8115 + C8114) * C50745 +
                    (C8113 + C8112 + C8111) * C121) *
                       C50985) *
                      C50843 * C51018 +
                  (((C8122 + C8121 + C8120) * C121 +
                    (C8119 + C8118 + C8117) * C50745) *
                       C50985 +
                   ((C9077 + C9078 + C9079) * C121 +
                    (C9080 + C9081 + C9082) * C50745) *
                       C50881) *
                      C50843 * C1204) *
                     C50964 +
                 ((((C8123 + C8124 + C8125) * C121 +
                    (C8126 + C8127 + C8128) * C50745) *
                       C50985 +
                   ((C8129 + C8130 + C8131) * C121 +
                    (C8132 + C8133 + C8134) * C50745) *
                       C50881) *
                      C50843 * C51018 -
                  (((C8128 + C8127 + C8126) * C50745 +
                    (C8125 + C8124 + C8123) * C121) *
                       C50881 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51014 * C145 + C7913 * C134 + C51013 * C144) *
                        C50745 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51014 * C131 + C7913 * C123 + C51013 * C130) *
                        C121) *
                       C50985) *
                      C50843 * C51017 -
                  (((C7915 * C978 + C7910 * C986 + C7914 * C979 +
                     C51014 * C987 + C7913 * C980 + C51013 * C988) *
                        C50745 +
                    (C7915 * C974 + C7910 * C982 + C7914 * C975 +
                     C51014 * C983 + C7913 * C976 + C51013 * C984) *
                        C121) *
                       C50881 +
                   ((C8134 + C8133 + C8132) * C50745 +
                    (C8131 + C8130 + C8129) * C121) *
                       C50985) *
                      C50843 * C1204) *
                     C50718)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C644 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50973 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C645 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C50809) *
               C50985 +
           ((C8111 + C8112 + C8113) * C644 + (C8114 + C8115 + C8116) * C50973 -
            (C8809 + C8810 + C8811) * C645 - (C8812 + C8813 + C8814) * C50809) *
               C50881) *
              C50843 * C51017 +
          (((C8811 + C8810 + C8809) * C645 -
            ((C8116 + C8115 + C8114) * C50973 +
             (C8113 + C8112 + C8111) * C644) +
            (C8814 + C8813 + C8812) * C50809) *
               C50985 +
           ((C9745 + C9746 + C9747) * C645 -
            ((C8117 + C8118 + C8119) * C50973 +
             (C8120 + C8121 + C8122) * C644) +
            (C9748 + C9749 + C9750) * C50809) *
               C50881) *
              C50843 * C51018 +
          (((C8122 + C8121 + C8120) * C644 + (C8119 + C8118 + C8117) * C50973 -
            (C9747 + C9746 + C9745) * C645 - (C9750 + C9749 + C9748) * C50809) *
               C50985 +
           ((C9077 + C9078 + C9079) * C644 + (C9080 + C9081 + C9082) * C50973 -
            (C7915 * C3088 + C7910 * C3093 + C7914 * C3087 + C51014 * C3090 +
             C7913 * C3086 + C51013 * C3089) *
                C645 -
            (C7915 * C3094 + C7910 * C3097 + C7914 * C3092 + C51014 * C3096 +
             C7913 * C3091 + C51013 * C3095) *
                C50809) *
               C50881) *
              C50843 * C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50745) *
               C50985 +
           ((C8111 + C8112 + C8113) * C121 + (C8114 + C8115 + C8116) * C50745) *
               C50881) *
              C50843 * C969 -
          (((C8117 + C8118 + C8119) * C50745 + (C8120 + C8121 + C8122) * C121) *
               C50881 +
           ((C8116 + C8115 + C8114) * C50745 + (C8113 + C8112 + C8111) * C121) *
               C50985) *
              C50843 * C970 +
          (((C8122 + C8121 + C8120) * C121 + (C8119 + C8118 + C8117) * C50745) *
               C50985 +
           ((C9077 + C9078 + C9079) * C121 + (C9080 + C9081 + C9082) * C50745) *
               C50881) *
              C50843 * C971 -
          (((C7915 * C2331 + C7910 * C2335 + C7914 * C2330 + C51014 * C2334 +
             C7913 * C2329 + C51013 * C2333) *
                C50745 +
            (C7915 * C2326 + C7910 * C2332 + C7914 * C2325 + C51014 * C2328 +
             C7913 * C2324 + C51013 * C2327) *
                C121) *
               C50881 +
           ((C9082 + C9081 + C9080) * C50745 + (C9079 + C9078 + C9077) * C121) *
               C50985) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50745) *
                C50985 +
            ((C8111 + C8112 + C8113) * C121 +
             (C8114 + C8115 + C8116) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C8117 + C8118 + C8119) * C50745 +
             (C8120 + C8121 + C8122) * C121) *
                C50881 +
            ((C8116 + C8115 + C8114) * C50745 +
             (C8113 + C8112 + C8111) * C121) *
                C50985) *
               C50843 * C50781) *
              C900 +
          ((((C8123 + C8124 + C8125) * C121 +
             (C8126 + C8127 + C8128) * C50745) *
                C50985 +
            ((C8129 + C8130 + C8131) * C121 +
             (C8132 + C8133 + C8134) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C8128 + C8127 + C8126) * C50745 +
             (C8125 + C8124 + C8123) * C121) *
                C50881 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C50745 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C121) *
                C50985) *
               C50843 * C898) *
              C901 +
          ((((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50745) *
                C50985 +
            ((C8439 + C8440 + C8441) * C121 +
             (C8442 + C8443 + C8444) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C7915 * C281 + C7910 * C292 + C7914 * C278 + C51014 * C290 +
              C7913 * C277 + C51013 * C289) *
                 C50745 +
             (C7915 * C262 + C7910 * C282 + C7914 * C260 + C51014 * C274 +
              C7913 * C259 + C51013 * C273) *
                 C121) *
                C50881 +
            ((C8444 + C8443 + C8442) * C50745 +
             (C8441 + C8440 + C8439) * C121) *
                C50985) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C394 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C391 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C395 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C392 +
            (C7913 * C401 + C51013 * C415 + C7914 * C402 + C51014 * C416 +
             C7915 * C403 + C7910 * C417) *
                C396 +
            (C7913 * C419 + C51013 * C431 + C7914 * C420 + C51014 * C432 +
             C7915 * C421 + C7910 * C433) *
                C393) *
               C50985 +
           ((C8111 + C8112 + C8113) * C394 + (C8114 + C8115 + C8116) * C391 -
            (C8809 + C8810 + C8811) * C395 - (C8812 + C8813 + C8814) * C392 +
            (C9241 + C9242 + C9243) * C396 + (C9244 + C9245 + C9246) * C393) *
               C50881) *
              C50843 * C898 +
          (((C8811 + C8810 + C8809) * C395 -
            ((C8116 + C8115 + C8114) * C391 + (C8113 + C8112 + C8111) * C394) +
            (C8814 + C8813 + C8812) * C392 - (C9243 + C9242 + C9241) * C396 -
            (C9246 + C9245 + C9244) * C393) *
               C50985 +
           ((C7913 * C1438 + C51013 * C1442 + C7914 * C1437 + C51014 * C1441 +
             C7915 * C1436 + C7910 * C1440) *
                C395 -
            ((C8117 + C8118 + C8119) * C391 + (C8120 + C8121 + C8122) * C394) +
            (C7913 * C1446 + C51013 * C1450 + C7914 * C1445 + C51014 * C1449 +
             C7915 * C1444 + C7910 * C1448) *
                C392 -
            (C7915 * C2566 + C7910 * C2571 + C7914 * C2565 + C51014 * C2568 +
             C7913 * C2564 + C51013 * C2567) *
                C396 -
            (C7915 * C2572 + C7910 * C2575 + C7914 * C2570 + C51014 * C2574 +
             C7913 * C2569 + C51013 * C2573) *
                C393) *
               C50881) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C644 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50973 -
             (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
              C7913 * C400 + C51013 * C410) *
                 C645 -
             (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
              C7913 * C414 + C51013 * C430) *
                 C50809) *
                C50985 +
            ((C8111 + C8112 + C8113) * C644 + (C8114 + C8115 + C8116) * C50973 -
             (C8809 + C8810 + C8811) * C645 -
             (C8812 + C8813 + C8814) * C50809) *
                C50881) *
               C50843 * C898 +
           (((C8811 + C8810 + C8809) * C645 -
             ((C8116 + C8115 + C8114) * C50973 +
              (C8113 + C8112 + C8111) * C644) +
             (C8814 + C8813 + C8812) * C50809) *
                C50985 +
            ((C7913 * C1438 + C51013 * C1442 + C7914 * C1437 + C51014 * C1441 +
              C7915 * C1436 + C7910 * C1440) *
                 C645 -
             ((C8117 + C8118 + C8119) * C50973 +
              (C8120 + C8121 + C8122) * C644) +
             (C7913 * C1446 + C51013 * C1450 + C7914 * C1445 + C51014 * C1449 +
              C7915 * C1444 + C7910 * C1448) *
                 C50809) *
                C50881) *
               C50843 * C50781) *
              C50964 +
          ((((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
              C7915 * C397 + C7910 * C407) *
                 C645 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
               C7913 * C134 + C51013 * C144) *
                  C50973 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
               C7913 * C123 + C51013 * C130) *
                  C644) +
             (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
              C7915 * C411 + C7910 * C427) *
                 C50809) *
                C50985 +
            ((C8815 + C8816 + C8817) * C645 -
             ((C8128 + C8127 + C8126) * C50973 +
              (C8125 + C8124 + C8123) * C644) +
             (C8818 + C8819 + C8820) * C50809) *
                C50881) *
               C50843 * C898 +
           (((C8123 + C8124 + C8125) * C644 + (C8126 + C8127 + C8128) * C50973 -
             (C8817 + C8816 + C8815) * C645 -
             (C8820 + C8819 + C8818) * C50809) *
                C50985 +
            ((C8129 + C8130 + C8131) * C644 + (C8132 + C8133 + C8134) * C50973 -
             (C7915 * C1435 + C7910 * C1439 + C7914 * C1436 + C51014 * C1440 +
              C7913 * C1437 + C51013 * C1441) *
                 C645 -
             (C7915 * C1443 + C7910 * C1447 + C7914 * C1444 + C51014 * C1448 +
              C7913 * C1445 + C51013 * C1449) *
                 C50809) *
                C50881) *
               C50843 * C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50745) *
                C50985 +
            ((C8111 + C8112 + C8113) * C121 +
             (C8114 + C8115 + C8116) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C8117 + C8118 + C8119) * C50745 +
             (C8120 + C8121 + C8122) * C121) *
                C50881 +
            ((C8116 + C8115 + C8114) * C50745 +
             (C8113 + C8112 + C8111) * C121) *
                C50985) *
               C50843 * C50781) *
              C900 +
          ((((C8123 + C8124 + C8125) * C121 +
             (C8126 + C8127 + C8128) * C50745) *
                C50985 +
            ((C8129 + C8130 + C8131) * C121 +
             (C8132 + C8133 + C8134) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C8128 + C8127 + C8126) * C50745 +
             (C8125 + C8124 + C8123) * C121) *
                C50881 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C50745 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C121) *
                C50985) *
               C50843 * C898) *
              C901 +
          ((((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50745) *
                C50985 +
            ((C8439 + C8440 + C8441) * C121 +
             (C8442 + C8443 + C8444) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C7915 * C281 + C7910 * C292 + C7914 * C278 + C51014 * C290 +
              C7913 * C277 + C51013 * C289) *
                 C50745 +
             (C7915 * C262 + C7910 * C282 + C7914 * C260 + C51014 * C274 +
              C7913 * C259 + C51013 * C273) *
                 C121) *
                C50881 +
            ((C8444 + C8443 + C8442) * C50745 +
             (C8441 + C8440 + C8439) * C121) *
                C50985) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50745) *
               C50985 +
           ((C8111 + C8112 + C8113) * C121 + (C8114 + C8115 + C8116) * C50745) *
               C50881) *
              C50843 * C969 -
          (((C8117 + C8118 + C8119) * C50745 + (C8120 + C8121 + C8122) * C121) *
               C50881 +
           ((C8116 + C8115 + C8114) * C50745 + (C8113 + C8112 + C8111) * C121) *
               C50985) *
              C50843 * C970 +
          (((C8122 + C8121 + C8120) * C121 + (C8119 + C8118 + C8117) * C50745) *
               C50985 +
           ((C9077 + C9078 + C9079) * C121 + (C9080 + C9081 + C9082) * C50745) *
               C50881) *
              C50843 * C971 -
          (((C7915 * C2331 + C7910 * C2335 + C7914 * C2330 + C51014 * C2334 +
             C7913 * C2329 + C51013 * C2333) *
                C50745 +
            (C7915 * C2326 + C7910 * C2332 + C7914 * C2325 + C51014 * C2328 +
             C7913 * C2324 + C51013 * C2327) *
                C121) *
               C50881 +
           ((C9082 + C9081 + C9080) * C50745 + (C9079 + C9078 + C9077) * C121) *
               C50985) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C1551 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C1549 -
             (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
              C7913 * C400 + C51013 * C410) *
                 C1552 -
             (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
              C7913 * C414 + C51013 * C430) *
                 C50809) *
                C50985 +
            ((C8111 + C8112 + C8113) * C1551 + (C8114 + C8115 + C8116) * C1549 -
             (C8809 + C8810 + C8811) * C1552 -
             (C8812 + C8813 + C8814) * C50809) *
                C50881) *
               C50843 * C50972 +
           (((C8811 + C8810 + C8809) * C1552 -
             ((C8116 + C8115 + C8114) * C1549 +
              (C8113 + C8112 + C8111) * C1551) +
             (C8814 + C8813 + C8812) * C50809) *
                C50985 +
            ((C9745 + C9746 + C9747) * C1552 -
             ((C8117 + C8118 + C8119) * C1549 +
              (C8120 + C8121 + C8122) * C1551) +
             (C9748 + C9749 + C9750) * C50809) *
                C50881) *
               C50843 * C50781) *
              C50964 +
          ((((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
              C7915 * C397 + C7910 * C407) *
                 C1552 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
               C7913 * C134 + C51013 * C144) *
                  C1549 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
               C7913 * C123 + C51013 * C130) *
                  C1551) +
             (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
              C7915 * C411 + C7910 * C427) *
                 C50809) *
                C50985 +
            ((C8815 + C8816 + C8817) * C1552 -
             ((C8128 + C8127 + C8126) * C1549 +
              (C8125 + C8124 + C8123) * C1551) +
             (C8818 + C8819 + C8820) * C50809) *
                C50881) *
               C50843 * C50972 +
           (((C8123 + C8124 + C8125) * C1551 + (C8126 + C8127 + C8128) * C1549 -
             (C8817 + C8816 + C8815) * C1552 -
             (C8820 + C8819 + C8818) * C50809) *
                C50985 +
            ((C8129 + C8130 + C8131) * C1551 + (C8132 + C8133 + C8134) * C1549 -
             (C7915 * C1435 + C7910 * C1439 + C7914 * C1436 + C51014 * C1440 +
              C7913 * C1437 + C51013 * C1441) *
                 C1552 -
             (C7915 * C1443 + C7910 * C1447 + C7914 * C1444 + C51014 * C1448 +
              C7913 * C1445 + C51013 * C1449) *
                 C50809) *
                C50881) *
               C50843 * C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1972 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C51019 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C1973 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C51020 +
            (C7913 * C401 + C51013 * C415 + C7914 * C402 + C51014 * C416 +
             C7915 * C403 + C7910 * C417) *
                C1974 +
            (C7913 * C419 + C51013 * C431 + C7914 * C420 + C51014 * C432 +
             C7915 * C421 + C7910 * C433) *
                C1971) *
               C50985 +
           ((C8111 + C8112 + C8113) * C1972 + (C8114 + C8115 + C8116) * C51019 -
            (C8809 + C8810 + C8811) * C1973 - (C8812 + C8813 + C8814) * C51020 +
            (C9241 + C9242 + C9243) * C1974 + (C9244 + C9245 + C9246) * C1971) *
               C50881) *
              C50843 * C50972 +
          (((C8811 + C8810 + C8809) * C1973 -
            ((C8116 + C8115 + C8114) * C51019 +
             (C8113 + C8112 + C8111) * C1972) +
            (C8814 + C8813 + C8812) * C51020 - (C9243 + C9242 + C9241) * C1974 -
            (C9246 + C9245 + C9244) * C1971) *
               C50985 +
           ((C9745 + C9746 + C9747) * C1973 -
            ((C8117 + C8118 + C8119) * C51019 +
             (C8120 + C8121 + C8122) * C1972) +
            (C9748 + C9749 + C9750) * C51020 -
            (C7915 * C2566 + C7910 * C2571 + C7914 * C2565 + C51014 * C2568 +
             C7913 * C2564 + C51013 * C2567) *
                C1974 -
            (C7915 * C2572 + C7910 * C2575 + C7914 * C2570 + C51014 * C2574 +
             C7913 * C2569 + C51013 * C2573) *
                C1971) *
               C50881) *
              C50843 * C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C1552 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C50809) *
               C50985 +
           ((C8111 + C8112 + C8113) * C1551 + (C8114 + C8115 + C8116) * C1549 -
            (C8809 + C8810 + C8811) * C1552 -
            (C8812 + C8813 + C8814) * C50809) *
               C50881) *
              C50843 * C248 +
          (((C8811 + C8810 + C8809) * C1552 -
            ((C8116 + C8115 + C8114) * C1549 +
             (C8113 + C8112 + C8111) * C1551) +
            (C8814 + C8813 + C8812) * C50809) *
               C50985 +
           ((C9745 + C9746 + C9747) * C1552 -
            ((C8117 + C8118 + C8119) * C1549 +
             (C8120 + C8121 + C8122) * C1551) +
            (C9748 + C9749 + C9750) * C50809) *
               C50881) *
              C50843 * C249 +
          (((C8122 + C8121 + C8120) * C1551 + (C8119 + C8118 + C8117) * C1549 -
            (C9747 + C9746 + C9745) * C1552 -
            (C9750 + C9749 + C9748) * C50809) *
               C50985 +
           ((C9077 + C9078 + C9079) * C1551 + (C9080 + C9081 + C9082) * C1549 -
            (C7915 * C3088 + C7910 * C3093 + C7914 * C3087 + C51014 * C3090 +
             C7913 * C3086 + C51013 * C3089) *
                C1552 -
            (C7915 * C3094 + C7910 * C3097 + C7914 * C3092 + C51014 * C3096 +
             C7913 * C3091 + C51013 * C3095) *
                C50809) *
               C50881) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C1552 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C50809) *
               C50985 +
           ((C8111 + C8112 + C8113) * C1551 + (C8114 + C8115 + C8116) * C1549 -
            (C8809 + C8810 + C8811) * C1552 -
            (C8812 + C8813 + C8814) * C50809) *
               C50881) *
              C50843 * C50730 * C900 +
          (((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
             C7915 * C397 + C7910 * C407) *
                C1552 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C1549 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C1551) +
            (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
             C7915 * C411 + C7910 * C427) *
                C50809) *
               C50985 +
           ((C8815 + C8816 + C8817) * C1552 -
            ((C8128 + C8127 + C8126) * C1549 +
             (C8125 + C8124 + C8123) * C1551) +
            (C8818 + C8819 + C8820) * C50809) *
               C50881) *
              C50843 * C50730 * C901 +
          (((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
             C7915 * C126 + C7910 * C138) *
                C1551 +
            (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
             C7915 * C137 + C7910 * C147) *
                C1549 -
            (C7915 * C405 + C7910 * C423 + C7914 * C397 + C51014 * C407 +
             C7913 * C398 + C51013 * C408) *
                C1552 -
            (C7915 * C424 + C7910 * C435 + C7914 * C411 + C51014 * C427 +
             C7913 * C412 + C51013 * C428) *
                C50809) *
               C50985 +
           ((C8439 + C8440 + C8441) * C1551 + (C8442 + C8443 + C8444) * C1549 -
            (C7915 * C784 + C7910 * C793 + C7914 * C783 + C51014 * C788 +
             C7913 * C782 + C51013 * C787) *
                C1552 -
            (C7915 * C794 + C7910 * C799 + C7914 * C792 + C51014 * C798 +
             C7913 * C791 + C51013 * C797) *
                C50809) *
               C50881) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
            C7915 * C124 + C7910 * C131) *
               C1721 +
           (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
            C7915 * C135 + C7910 * C145) *
               C1717 -
           (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
            C7913 * C400 + C51013 * C410) *
               C1722 -
           (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
            C7913 * C414 + C51013 * C430) *
               C1718 +
           (C7913 * C401 + C51013 * C415 + C7914 * C402 + C51014 * C416 +
            C7915 * C403 + C7910 * C417) *
               C1723 +
           (C7913 * C419 + C51013 * C431 + C7914 * C420 + C51014 * C432 +
            C7915 * C421 + C7910 * C433) *
               C1719 -
           (C7915 * C1726 + C7910 * C1730 + C7914 * C1727 + C51014 * C1731 +
            C7913 * C1728 + C51013 * C1732) *
               C1724 -
           (C7915 * C1734 + C7910 * C1738 + C7914 * C1735 + C51014 * C1739 +
            C7913 * C1736 + C51013 * C1740) *
               C1720) *
              C50985 +
          ((C8111 + C8112 + C8113) * C1721 + (C8114 + C8115 + C8116) * C1717 -
           (C8809 + C8810 + C8811) * C1722 - (C8812 + C8813 + C8814) * C1718 +
           (C9241 + C9242 + C9243) * C1723 + (C9244 + C9245 + C9246) * C1719 -
           (C7915 * C5998 + C7910 * C5999 + C7914 * C4505 + C51014 * C4509 +
            C7913 * C4506 + C51013 * C4510) *
               C1724 -
           (C7915 * C6000 + C7910 * C6001 + C7914 * C4511 + C51014 * C4517 +
            C7913 * C4512 + C51013 * C4518) *
               C1720) *
              C50881) *
         C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1972 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C51019 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C1973 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C51020 +
            (C7913 * C401 + C51013 * C415 + C7914 * C402 + C51014 * C416 +
             C7915 * C403 + C7910 * C417) *
                C1974 +
            (C7913 * C419 + C51013 * C431 + C7914 * C420 + C51014 * C432 +
             C7915 * C421 + C7910 * C433) *
                C1971) *
               C50985 +
           ((C8111 + C8112 + C8113) * C1972 + (C8114 + C8115 + C8116) * C51019 -
            (C8809 + C8810 + C8811) * C1973 - (C8812 + C8813 + C8814) * C51020 +
            (C9241 + C9242 + C9243) * C1974 + (C9244 + C9245 + C9246) * C1971) *
               C50881) *
              C50843 * C50730 * C50964 +
          (((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
             C7915 * C397 + C7910 * C407) *
                C1973 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C51019 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C1972) +
            (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
             C7915 * C411 + C7910 * C427) *
                C51020 -
            (C7915 * C404 + C7910 * C418 + C7914 * C403 + C51014 * C417 +
             C7913 * C402 + C51013 * C416) *
                C1974 -
            (C7915 * C422 + C7910 * C434 + C7914 * C421 + C51014 * C433 +
             C7913 * C420 + C51013 * C432) *
                C1971) *
               C50985 +
           ((C8815 + C8816 + C8817) * C1973 -
            ((C8128 + C8127 + C8126) * C51019 +
             (C8125 + C8124 + C8123) * C1972) +
            (C8818 + C8819 + C8820) * C51020 -
            (C7915 * C1088 + C7910 * C1092 + C7914 * C1089 + C51014 * C1093 +
             C7913 * C1090 + C51013 * C1094) *
                C1974 -
            (C7915 * C1096 + C7910 * C1100 + C7914 * C1097 + C51014 * C1101 +
             C7913 * C1098 + C51013 * C1102) *
                C1971) *
               C50881) *
              C50843 * C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C1552 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C50809) *
               C50985 +
           ((C8111 + C8112 + C8113) * C1551 + (C8114 + C8115 + C8116) * C1549 -
            (C8809 + C8810 + C8811) * C1552 -
            (C8812 + C8813 + C8814) * C50809) *
               C50881) *
              C50843 * C50730 * C900 +
          (((C7913 * C399 + C51013 * C409 + C7914 * C398 + C51014 * C408 +
             C7915 * C397 + C7910 * C407) *
                C1552 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C1549 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C1551) +
            (C7913 * C413 + C51013 * C429 + C7914 * C412 + C51014 * C428 +
             C7915 * C411 + C7910 * C427) *
                C50809) *
               C50985 +
           ((C8815 + C8816 + C8817) * C1552 -
            ((C8128 + C8127 + C8126) * C1549 +
             (C8125 + C8124 + C8123) * C1551) +
            (C8818 + C8819 + C8820) * C50809) *
               C50881) *
              C50843 * C50730 * C901 +
          (((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
             C7915 * C126 + C7910 * C138) *
                C1551 +
            (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
             C7915 * C137 + C7910 * C147) *
                C1549 -
            (C7915 * C405 + C7910 * C423 + C7914 * C397 + C51014 * C407 +
             C7913 * C398 + C51013 * C408) *
                C1552 -
            (C7915 * C424 + C7910 * C435 + C7914 * C411 + C51014 * C427 +
             C7913 * C412 + C51013 * C428) *
                C50809) *
               C50985 +
           ((C8439 + C8440 + C8441) * C1551 + (C8442 + C8443 + C8444) * C1549 -
            (C7915 * C784 + C7910 * C793 + C7914 * C783 + C51014 * C788 +
             C7913 * C782 + C51013 * C787) *
                C1552 -
            (C7915 * C794 + C7910 * C799 + C7914 * C792 + C51014 * C798 +
             C7913 * C791 + C51013 * C797) *
                C50809) *
               C50881) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C7915 * C398 + C7910 * C408 + C7914 * C399 + C51014 * C409 +
             C7913 * C400 + C51013 * C410) *
                C1552 -
            (C7915 * C412 + C7910 * C428 + C7914 * C413 + C51014 * C429 +
             C7913 * C414 + C51013 * C430) *
                C50809) *
               C50985 +
           ((C8111 + C8112 + C8113) * C1551 + (C8114 + C8115 + C8116) * C1549 -
            (C8809 + C8810 + C8811) * C1552 -
            (C8812 + C8813 + C8814) * C50809) *
               C50881) *
              C50843 * C248 +
          (((C8811 + C8810 + C8809) * C1552 -
            ((C8116 + C8115 + C8114) * C1549 +
             (C8113 + C8112 + C8111) * C1551) +
            (C8814 + C8813 + C8812) * C50809) *
               C50985 +
           ((C9745 + C9746 + C9747) * C1552 -
            ((C8117 + C8118 + C8119) * C1549 +
             (C8120 + C8121 + C8122) * C1551) +
            (C9748 + C9749 + C9750) * C50809) *
               C50881) *
              C50843 * C249 +
          (((C8122 + C8121 + C8120) * C1551 + (C8119 + C8118 + C8117) * C1549 -
            (C9747 + C9746 + C9745) * C1552 -
            (C9750 + C9749 + C9748) * C50809) *
               C50985 +
           ((C9077 + C9078 + C9079) * C1551 + (C9080 + C9081 + C9082) * C1549 -
            (C7915 * C3088 + C7910 * C3093 + C7914 * C3087 + C51014 * C3090 +
             C7913 * C3086 + C51013 * C3089) *
                C1552 -
            (C7915 * C3094 + C7910 * C3097 + C7914 * C3092 + C51014 * C3096 +
             C7913 * C3091 + C51013 * C3095) *
                C50809) *
               C50881) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
                C50986 +
            (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
             ((C3132 + C3131) * C121 + (C3134 + C3133) * C50745) * C50881) *
                C50907) *
               C50972 -
           (((C4091 * C50745 + C4090 * C121) * C50881 +
             ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50985) *
                C50907 +
            (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
             ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
                C50986) *
               C50781) *
              C51015 +
          (((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50985 +
             ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C50881) *
                C50986 +
            (((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50985 +
             ((C3143 + C3144) * C121 + (C3145 + C3146) * C50745) * C50881) *
                C50907) *
               C50781 -
           ((((C3142 + C3141) * C50745 + (C3140 + C3139) * C121) * C50881 +
             ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
                C50907 +
            (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50745 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50985) *
                C50986) *
               C50972) *
              C51016 +
          (((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                  C50745) *
                 C50985 +
             ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C50881) *
                C50986 +
            (((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50985 +
             ((C14085 + C14086) * C121 + (C14087 + C14088) * C50745) * C50881) *
                C50907) *
               C50972 -
           ((((C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                  C50745 +
              (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                  C121) *
                 C50881 +
             ((C14088 + C14087) * C50745 + (C14086 + C14085) * C121) * C50985) *
                C50907 +
            (((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C50881 +
             ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C50985) *
                C50986) *
               C50781) *
              C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C644 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50973 -
              (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
                 C50985 +
             ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
              C14541 * C645 - C14542 * C50809) *
                 C50881) *
                C50986 +
            (((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
              (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
                 C50985 +
             (C14543 * C644 + C14544 * C50973 - C6413 * C645 - C6414 * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           (((C14543 * C645 -
              ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
              C14544 * C50809) *
                 C50985 +
             ((C3136 + C3135) * C645 -
              ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
              (C3138 + C3137) * C50809) *
                 C50881) *
                C50986 +
            (((C3586 + C3587) * C645 - (C14542 * C50973 + C14541 * C644) +
              (C3588 + C3589) * C50809) *
                 C50985 +
             ((C3590 + C3591) * C645 - (C4091 * C50973 + C4090 * C644) +
              (C3592 + C3593) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C251 +
          (((((C5473 + C5474) * C645 -
              ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                   C50973 +
               (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                   C644) +
              (C5475 + C5476) * C50809) *
                 C50985 +
             (C14545 * C645 -
              ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
              C14546 * C50809) *
                 C50881) *
                C50986 +
            (((C5478 + C5477) * C645 -
              ((C5476 + C5475) * C50973 + (C5474 + C5473) * C644) +
              (C5480 + C5479) * C50809) *
                 C50985 +
             ((C6012 + C6011) * C645 - (C14547 * C50973 + C14548 * C644) +
              (C6014 + C6013) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           ((((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
              C14548 * C645 - C14547 * C50809) *
                 C50985 +
             ((C2401 + C2402) * C644 + (C2403 + C2404) * C50973 -
              (C3144 + C3143) * C645 - (C3146 + C3145) * C50809) *
                 C50881) *
                C50986 +
            ((C14545 * C644 + C14546 * C50973 - (C6011 + C6012) * C645 -
              (C6013 + C6014) * C50809) *
                 C50985 +
             ((C3143 + C3144) * C644 + (C3145 + C3146) * C50973 -
              (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                  C645 -
              (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
                C50986 +
            (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
             ((C3132 + C3131) * C121 + (C3134 + C3133) * C50745) * C50881) *
                C50907) *
               C248 -
           (((C4091 * C50745 + C4090 * C121) * C50881 +
             ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50985) *
                C50907 +
            (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
             ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
                C50986) *
               C249 +
           ((C2417 * C50985 +
             ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C50881) *
                C50986 +
            (((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50985 +
             ((C4103 + C4104) * C121 + (C4105 + C4106) * C50745) * C50881) *
                C50907) *
               C250) *
              C251 +
          (((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50985 +
             ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C50881) *
                C50986 +
            (((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50985 +
             ((C3143 + C3144) * C121 + (C3145 + C3146) * C50745) * C50881) *
                C50907) *
               C249 -
           ((((C3142 + C3141) * C50745 + (C3140 + C3139) * C121) * C50881 +
             ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
                C50907 +
            (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50745 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50985) *
                C50986) *
               C248 -
           ((((C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                  C50745 +
              (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                  C121) *
                 C50881 +
             ((C3146 + C3145) * C50745 + (C3144 + C3143) * C121) * C50985) *
                C50907 +
            (((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C50881 +
             C2418 * C50985) *
                C50986) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
               C50986 +
           (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
            ((C3132 + C3131) * C121 + (C3134 + C3133) * C50745) * C50881) *
               C50907) *
              C50730 * C113 -
          ((((C3142 + C3141) * C50745 + (C3140 + C3139) * C121) * C50881 +
            ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
               C50907 +
           (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50985) *
               C50986) *
              C50730 * C114 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C50985 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C50881) *
               C50986 +
           (((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50985 +
            ((C2176 * C782 + C2171 * C787 + C2177 * C783 + C50691 * C788) *
                 C121 +
             (C2176 * C791 + C2171 * C797 + C2177 * C792 + C50691 * C798) *
                 C50745) *
                C50881) *
               C50907) *
              C50730 * C115 -
          ((((C2177 * C794 + C50691 * C799 + C2176 * C792 + C2171 * C798) *
                 C50745 +
             (C2177 * C784 + C50691 * C793 + C2176 * C783 + C2171 * C788) *
                 C121) *
                C50881 +
            ((C2177 * C424 + C50691 * C435 + C2176 * C411 + C2171 * C427) *
                 C50745 +
             (C2177 * C405 + C50691 * C423 + C2176 * C397 + C2171 * C407) *
                 C121) *
                C50985) *
               C50907 +
           (((C2177 * C280 + C50691 * C291 + C2176 * C263 + C2171 * C283) *
                 C50745 +
             (C2177 * C261 + C50691 * C279 + C2176 * C253 + C2171 * C267) *
                 C121) *
                C50881 +
            ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                 C50745 +
             (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                 C121) *
                C50985) *
               C50986) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C394 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C391 -
             (C5461 + C5462) * C395 - (C5463 + C5464) * C392 + C5485 * C396 +
             C5486 * C393) *
                C50985 +
            ((C2385 + C2386) * C394 + (C2387 + C2388) * C391 -
             (C3131 + C3132) * C395 - (C3133 + C3134) * C392 +
             (C3586 + C3587) * C396 + (C3588 + C3589) * C393) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C394 + (C5464 + C5463) * C391 -
             (C5466 + C5465) * C395 - (C5468 + C5467) * C392 +
             (C5469 + C5470) * C396 + (C5471 + C5472) * C393) *
                C50985 +
            ((C3132 + C3131) * C394 + (C3134 + C3133) * C391 - C6413 * C395 -
             C6414 * C392 + (C6424 + C6423) * C396 + (C6426 + C6425) * C393) *
                C50881) *
               C50907) *
              C50730 * C251 +
          ((((C5473 + C5474) * C395 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C391 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C394) +
             (C5475 + C5476) * C392 - C5487 * C396 - C5488 * C393) *
                C50985 +
            ((C3139 + C3140) * C395 -
             ((C2400 + C2399) * C391 + (C2398 + C2397) * C394) +
             (C3141 + C3142) * C392 - (C6011 + C6012) * C396 -
             (C6013 + C6014) * C393) *
                C50881) *
               C50986 +
           (((C5478 + C5477) * C395 -
             ((C5476 + C5475) * C391 + (C5474 + C5473) * C394) +
             (C5480 + C5479) * C392 - (C5481 + C5482) * C396 -
             (C5483 + C5484) * C393) *
                C50985 +
            ((C6012 + C6011) * C395 -
             ((C3142 + C3141) * C391 + (C3140 + C3139) * C394) +
             (C6014 + C6013) * C392 -
             (C2177 * C5998 + C50691 * C5999 + C2176 * C4505 + C2171 * C4509) *
                 C396 -
             (C2177 * C6000 + C50691 * C6001 + C2176 * C4511 + C2171 * C4517) *
                 C393) *
                C50881) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
                C50985 +
            ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
             (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
             (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
                C50985 +
            ((C3132 + C3131) * C644 + (C3134 + C3133) * C50973 - C6413 * C645 -
             C6414 * C50809) *
                C50881) *
               C50907) *
              C50730 * C51015 +
          ((((C5473 + C5474) * C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C5475 + C5476) * C50809) *
                C50985 +
            ((C3139 + C3140) * C645 -
             ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
             (C3141 + C3142) * C50809) *
                C50881) *
               C50986 +
           (((C5478 + C5477) * C645 -
             ((C5476 + C5475) * C50973 + (C5474 + C5473) * C644) +
             (C5480 + C5479) * C50809) *
                C50985 +
            ((C6012 + C6011) * C645 -
             ((C3142 + C3141) * C50973 + (C3140 + C3139) * C644) +
             (C6014 + C6013) * C50809) *
                C50881) *
               C50907) *
              C50730 * C51016 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C644 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50973 -
             (C5797 + C5798) * C645 - (C5799 + C5800) * C50809) *
                C50985 +
            ((C2739 + C2740) * C644 + (C2741 + C2742) * C50973 -
             (C14086 + C14085) * C645 - (C14088 + C14087) * C50809) *
                C50881) *
               C50986 +
           (((C5798 + C5797) * C644 + (C5800 + C5799) * C50973 -
             (C5801 + C5802) * C645 - (C5803 + C5804) * C50809) *
                C50985 +
            ((C14085 + C14086) * C644 + (C14087 + C14088) * C50973 -
             (C2177 * C1088 + C50691 * C1092 + C2176 * C1089 + C2171 * C1093) *
                 C645 -
             (C2177 * C1096 + C50691 * C1100 + C2176 * C1097 + C2171 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
               C50986 +
           (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
            ((C3132 + C3131) * C121 + (C3134 + C3133) * C50745) * C50881) *
               C50907) *
              C50730 * C113 -
          ((((C3142 + C3141) * C50745 + (C3140 + C3139) * C121) * C50881 +
            ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
               C50907 +
           (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50985) *
               C50986) *
              C50730 * C114 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C50985 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C50881) *
               C50986 +
           (((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50985 +
            ((C2176 * C782 + C2171 * C787 + C2177 * C783 + C50691 * C788) *
                 C121 +
             (C2176 * C791 + C2171 * C797 + C2177 * C792 + C50691 * C798) *
                 C50745) *
                C50881) *
               C50907) *
              C50730 * C115 -
          ((((C2177 * C794 + C50691 * C799 + C2176 * C792 + C2171 * C798) *
                 C50745 +
             (C2177 * C784 + C50691 * C793 + C2176 * C783 + C2171 * C788) *
                 C121) *
                C50881 +
            ((C2177 * C424 + C50691 * C435 + C2176 * C411 + C2171 * C427) *
                 C50745 +
             (C2177 * C405 + C50691 * C423 + C2176 * C397 + C2171 * C407) *
                 C121) *
                C50985) *
               C50907 +
           (((C2177 * C280 + C50691 * C291 + C2176 * C263 + C2171 * C283) *
                 C50745 +
             (C2177 * C261 + C50691 * C279 + C2176 * C253 + C2171 * C267) *
                 C121) *
                C50881 +
            ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                 C50745 +
             (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                 C121) *
                C50985) *
               C50986) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
                C50986 +
            (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
             ((C3132 + C3131) * C121 + (C3134 + C3133) * C50745) * C50881) *
                C50907) *
               C248 -
           (((C4091 * C50745 + C4090 * C121) * C50881 +
             ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50985) *
                C50907 +
            (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
             ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
                C50986) *
               C249 +
           ((C2417 * C50985 +
             ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C50881) *
                C50986 +
            (((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50985 +
             ((C4103 + C4104) * C121 + (C4105 + C4106) * C50745) * C50881) *
                C50907) *
               C250) *
              C251 +
          (((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50985 +
             ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C50881) *
                C50986 +
            (((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50985 +
             ((C3143 + C3144) * C121 + (C3145 + C3146) * C50745) * C50881) *
                C50907) *
               C249 -
           ((((C3142 + C3141) * C50745 + (C3140 + C3139) * C121) * C50881 +
             ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
                C50907 +
            (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50745 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50985) *
                C50986) *
               C248 -
           ((((C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                  C50745 +
              (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                  C121) *
                 C50881 +
             ((C3146 + C3145) * C50745 + (C3144 + C3143) * C121) * C50985) *
                C50907 +
            (((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C50881 +
             C2418 * C50985) *
                C50986) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
                C50986 +
            (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
             (C14543 * C121 + C14544 * C50745) * C50881) *
                C50907) *
               C51017 -
           (((C4091 * C50745 + C4090 * C121) * C50881 +
             (C14542 * C50745 + C14541 * C121) * C50985) *
                C50907 +
            (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
             ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
                C50986) *
               C51018 +
           ((C2417 * C50985 +
             ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C50881) *
                C50986 +
            (((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50985 +
             ((C4103 + C4104) * C121 + (C4105 + C4106) * C50745) * C50881) *
                C50907) *
               C1204) *
              C50964 +
          (((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50985 +
             ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C50881) *
                C50986 +
            ((C14545 * C121 + C14546 * C50745) * C50985 +
             ((C3143 + C3144) * C121 + (C3145 + C3146) * C50745) * C50881) *
                C50907) *
               C51018 -
           (((C14547 * C50745 + C14548 * C121) * C50881 +
             ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
                C50907 +
            (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50745 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50985) *
                C50986) *
               C51017 -
           ((((C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                  C50745 +
              (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                  C121) *
                 C50881 +
             ((C3146 + C3145) * C50745 + (C3144 + C3143) * C121) * C50985) *
                C50907 +
            (((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C50881 +
             C2418 * C50985) *
                C50986) *
               C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
                C50985 +
            ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 - C14541 * C645 -
             C14542 * C50809) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
             (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
                C50985 +
            (C14543 * C644 + C14544 * C50973 - C6413 * C645 - C6414 * C50809) *
                C50881) *
               C50907) *
              C51017 +
          (((C14543 * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             C14544 * C50809) *
                C50985 +
            (C15715 * C645 -
             ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
             C15716 * C50809) *
                C50881) *
               C50986 +
           ((C15067 * C645 - (C14542 * C50973 + C14541 * C644) +
             C15068 * C50809) *
                C50985 +
            ((C3590 + C3591) * C645 - (C4091 * C50973 + C4090 * C644) +
             (C3592 + C3593) * C50809) *
                C50881) *
               C50907) *
              C51018 +
          ((C4108 * C50985 +
            ((C2396 + C2395) * C644 + (C2394 + C2393) * C50973 -
             (C4104 + C4103) * C645 - (C4106 + C4105) * C50809) *
                C50881) *
               C50986 +
           ((C15715 * C644 + C15716 * C50973 - (C3591 + C3590) * C645 -
             (C3593 + C3592) * C50809) *
                C50985 +
            ((C4103 + C4104) * C644 + (C4105 + C4106) * C50973 -
             (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                 C645 -
             (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
               C50986 +
           (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
            (C14543 * C121 + C14544 * C50745) * C50881) *
               C50907) *
              C969 -
          (((C4091 * C50745 + C4090 * C121) * C50881 +
            (C14542 * C50745 + C14541 * C121) * C50985) *
               C50907 +
           (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
               C50986) *
              C970 +
          ((C2417 * C50985 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C50881) *
               C50986 +
           (((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50985 +
            ((C4103 + C4104) * C121 + (C4105 + C4106) * C50745) * C50881) *
               C50907) *
              C971 -
          ((((C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                 C50745 +
             (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                 C121) *
                C50881 +
            ((C4106 + C4105) * C50745 + (C4104 + C4103) * C121) * C50985) *
               C50907 +
           (((C3414 + C3413) * C50745 + (C3412 + C3411) * C121) * C50881 +
            C3415 * C50985) *
               C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
                C50986 +
            (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
             (C14543 * C121 + C14544 * C50745) * C50881) *
                C50907) *
               C898 -
           (((C4091 * C50745 + C4090 * C121) * C50881 +
             (C14542 * C50745 + C14541 * C121) * C50985) *
                C50907 +
            (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
             ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
                C50986) *
               C50781) *
              C900 +
          (((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50985 +
             ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C50881) *
                C50986 +
            ((C14545 * C121 + C14546 * C50745) * C50985 +
             ((C3143 + C3144) * C121 + (C3145 + C3146) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C14547 * C50745 + C14548 * C121) * C50881 +
             ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
                C50907 +
            (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50745 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50985) *
                C50986) *
               C898) *
              C901 +
          (((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                  C50745) *
                 C50985 +
             ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C50881) *
                C50986 +
            (((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50985 +
             ((C14085 + C14086) * C121 + (C14087 + C14088) * C50745) * C50881) *
                C50907) *
               C898 -
           ((((C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                  C50745 +
              (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                  C121) *
                 C50881 +
             ((C14088 + C14087) * C50745 + (C14086 + C14085) * C121) * C50985) *
                C50907 +
            (((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C50881 +
             ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C50985) *
                C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C394 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C391 -
             (C5461 + C5462) * C395 - (C5463 + C5464) * C392 + C5485 * C396 +
             C5486 * C393) *
                C50985 +
            ((C2385 + C2386) * C394 + (C2387 + C2388) * C391 - C14541 * C395 -
             C14542 * C392 + C15067 * C396 + C15068 * C393) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C394 + (C5464 + C5463) * C391 -
             (C5466 + C5465) * C395 - (C5468 + C5467) * C392 +
             (C5469 + C5470) * C396 + (C5471 + C5472) * C393) *
                C50985 +
            (C14543 * C394 + C14544 * C391 - C6413 * C395 - C6414 * C392 +
             (C6424 + C6423) * C396 + (C6426 + C6425) * C393) *
                C50881) *
               C50907) *
              C898 +
          (((C14543 * C395 - ((C2388 + C2387) * C391 + (C2386 + C2385) * C394) +
             C14544 * C392 - C6413 * C396 - C6414 * C393) *
                C50985 +
            ((C3136 + C3135) * C395 -
             ((C2392 + C2391) * C391 + (C2390 + C2389) * C394) +
             (C3138 + C3137) * C392 - (C3591 + C3590) * C396 -
             (C3593 + C3592) * C393) *
                C50881) *
               C50986 +
           ((C15067 * C395 - (C14542 * C391 + C14541 * C394) + C15068 * C392 -
             (C6423 + C6424) * C396 - (C6425 + C6426) * C393) *
                C50985 +
            ((C3590 + C3591) * C395 - (C4091 * C391 + C4090 * C394) +
             (C3592 + C3593) * C392 -
             (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
                 C396 -
             (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
                 C393) *
                C50881) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C644 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50973 -
              (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
                 C50985 +
             ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
              C14541 * C645 - C14542 * C50809) *
                 C50881) *
                C50986 +
            (((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
              (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
                 C50985 +
             (C14543 * C644 + C14544 * C50973 - C6413 * C645 - C6414 * C50809) *
                 C50881) *
                C50907) *
               C898 +
           (((C14543 * C645 -
              ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
              C14544 * C50809) *
                 C50985 +
             ((C3136 + C3135) * C645 -
              ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
              (C3138 + C3137) * C50809) *
                 C50881) *
                C50986 +
            ((C15067 * C645 - (C14542 * C50973 + C14541 * C644) +
              C15068 * C50809) *
                 C50985 +
             ((C3590 + C3591) * C645 - (C4091 * C50973 + C4090 * C644) +
              (C3592 + C3593) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50964 +
          (((((C5473 + C5474) * C645 -
              ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                   C50973 +
               (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                   C644) +
              (C5475 + C5476) * C50809) *
                 C50985 +
             (C14545 * C645 -
              ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
              C14546 * C50809) *
                 C50881) *
                C50986 +
            (((C5478 + C5477) * C645 -
              ((C5476 + C5475) * C50973 + (C5474 + C5473) * C644) +
              (C5480 + C5479) * C50809) *
                 C50985 +
             ((C6012 + C6011) * C645 - (C14547 * C50973 + C14548 * C644) +
              (C6014 + C6013) * C50809) *
                 C50881) *
                C50907) *
               C898 +
           ((((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
              C14548 * C645 - C14547 * C50809) *
                 C50985 +
             ((C2401 + C2402) * C644 + (C2403 + C2404) * C50973 -
              (C3144 + C3143) * C645 - (C3146 + C3145) * C50809) *
                 C50881) *
                C50986 +
            ((C14545 * C644 + C14546 * C50973 - (C6011 + C6012) * C645 -
              (C6013 + C6014) * C50809) *
                 C50985 +
             ((C3143 + C3144) * C644 + (C3145 + C3146) * C50973 -
              (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                  C645 -
              (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
                C50986 +
            (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
             (C14543 * C121 + C14544 * C50745) * C50881) *
                C50907) *
               C898 -
           (((C4091 * C50745 + C4090 * C121) * C50881 +
             (C14542 * C50745 + C14541 * C121) * C50985) *
                C50907 +
            (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
             ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
                C50986) *
               C50781) *
              C900 +
          (((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50985 +
             ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C50881) *
                C50986 +
            ((C14545 * C121 + C14546 * C50745) * C50985 +
             ((C3143 + C3144) * C121 + (C3145 + C3146) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C14547 * C50745 + C14548 * C121) * C50881 +
             ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50985) *
                C50907 +
            (((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C50881 +
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50745 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50985) *
                C50986) *
               C898) *
              C901 +
          (((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                  C50745) *
                 C50985 +
             ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C50881) *
                C50986 +
            (((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50985 +
             ((C14085 + C14086) * C121 + (C14087 + C14088) * C50745) * C50881) *
                C50907) *
               C898 -
           ((((C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                  C50745 +
              (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                  C121) *
                 C50881 +
             ((C14088 + C14087) * C50745 + (C14086 + C14085) * C121) * C50985) *
                C50907 +
            (((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C50881 +
             ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C50985) *
                C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C50881) *
               C50986 +
           (((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50985 +
            (C14543 * C121 + C14544 * C50745) * C50881) *
               C50907) *
              C969 -
          (((C4091 * C50745 + C4090 * C121) * C50881 +
            (C14542 * C50745 + C14541 * C121) * C50985) *
               C50907 +
           (((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C50881 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50985) *
               C50986) *
              C970 +
          ((C2417 * C50985 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C50881) *
               C50986 +
           (((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50985 +
            ((C4103 + C4104) * C121 + (C4105 + C4106) * C50745) * C50881) *
               C50907) *
              C971 -
          ((((C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                 C50745 +
             (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                 C121) *
                C50881 +
            ((C4106 + C4105) * C50745 + (C4104 + C4103) * C121) * C50985) *
               C50907 +
           (((C3414 + C3413) * C50745 + (C3412 + C3411) * C121) * C50881 +
            C3415 * C50985) *
               C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                  C1551 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                  C1549 -
              (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
                 C50985 +
             ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
              C14541 * C1552 - C14542 * C50809) *
                 C50881) *
                C50986 +
            (((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
              (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
                 C50985 +
             (C14543 * C1551 + C14544 * C1549 - C6413 * C1552 -
              C6414 * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           (((C14543 * C1552 -
              ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
              C14544 * C50809) *
                 C50985 +
             (C15715 * C1552 -
              ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
              C15716 * C50809) *
                 C50881) *
                C50986 +
            ((C15067 * C1552 - (C14542 * C1549 + C14541 * C1551) +
              C15068 * C50809) *
                 C50985 +
             ((C3590 + C3591) * C1552 - (C4091 * C1549 + C4090 * C1551) +
              (C3592 + C3593) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50964 +
          (((((C5473 + C5474) * C1552 -
              ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                   C1549 +
               (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                   C1551) +
              (C5475 + C5476) * C50809) *
                 C50985 +
             (C14545 * C1552 -
              ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
              C14546 * C50809) *
                 C50881) *
                C50986 +
            (((C5478 + C5477) * C1552 -
              ((C5476 + C5475) * C1549 + (C5474 + C5473) * C1551) +
              (C5480 + C5479) * C50809) *
                 C50985 +
             ((C6012 + C6011) * C1552 - (C14547 * C1549 + C14548 * C1551) +
              (C6014 + C6013) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           ((((C2397 + C2398) * C1551 + (C2399 + C2400) * C1549 -
              C14548 * C1552 - C14547 * C50809) *
                 C50985 +
             ((C2401 + C2402) * C1551 + (C2403 + C2404) * C1549 -
              (C3144 + C3143) * C1552 - (C3146 + C3145) * C50809) *
                 C50881) *
                C50986 +
            ((C14545 * C1551 + C14546 * C1549 - (C6011 + C6012) * C1552 -
              (C6013 + C6014) * C50809) *
                 C50985 +
             ((C3143 + C3144) * C1551 + (C3145 + C3146) * C1549 -
              (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                  C1552 -
              (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1972 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C51019 -
             (C5461 + C5462) * C1973 - (C5463 + C5464) * C51020 +
             C5485 * C1974 + C5486 * C1971) *
                C50985 +
            ((C2385 + C2386) * C1972 + (C2387 + C2388) * C51019 -
             C14541 * C1973 - C14542 * C51020 + C15067 * C1974 +
             C15068 * C1971) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C1972 + (C5464 + C5463) * C51019 -
             (C5466 + C5465) * C1973 - (C5468 + C5467) * C51020 +
             (C5469 + C5470) * C1974 + (C5471 + C5472) * C1971) *
                C50985 +
            (C14543 * C1972 + C14544 * C51019 - C6413 * C1973 - C6414 * C51020 +
             (C6424 + C6423) * C1974 + (C6426 + C6425) * C1971) *
                C50881) *
               C50907) *
              C50972 +
          (((C14543 * C1973 -
             ((C2388 + C2387) * C51019 + (C2386 + C2385) * C1972) +
             C14544 * C51020 - C6413 * C1974 - C6414 * C1971) *
                C50985 +
            (C15715 * C1973 -
             ((C2392 + C2391) * C51019 + (C2390 + C2389) * C1972) +
             C15716 * C51020 - (C3591 + C3590) * C1974 -
             (C3593 + C3592) * C1971) *
                C50881) *
               C50986 +
           ((C15067 * C1973 - (C14542 * C51019 + C14541 * C1972) +
             C15068 * C51020 - (C6423 + C6424) * C1974 -
             (C6425 + C6426) * C1971) *
                C50985 +
            ((C3590 + C3591) * C1973 - (C4091 * C51019 + C4090 * C1972) +
             (C3592 + C3593) * C51020 -
             (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
                 C1974 -
             (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
                 C1971) *
                C50881) *
               C50907) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
                C50985 +
            ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
             C14541 * C1552 - C14542 * C50809) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
             (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
                C50985 +
            (C14543 * C1551 + C14544 * C1549 - C6413 * C1552 - C6414 * C50809) *
                C50881) *
               C50907) *
              C248 +
          (((C14543 * C1552 -
             ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
             C14544 * C50809) *
                C50985 +
            (C15715 * C1552 -
             ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
             C15716 * C50809) *
                C50881) *
               C50986 +
           ((C15067 * C1552 - (C14542 * C1549 + C14541 * C1551) +
             C15068 * C50809) *
                C50985 +
            ((C3590 + C3591) * C1552 - (C4091 * C1549 + C4090 * C1551) +
             (C3592 + C3593) * C50809) *
                C50881) *
               C50907) *
              C249 +
          ((C4407 * C50985 +
            ((C2396 + C2395) * C1551 + (C2394 + C2393) * C1549 -
             (C4104 + C4103) * C1552 - (C4106 + C4105) * C50809) *
                C50881) *
               C50986 +
           ((C15715 * C1551 + C15716 * C1549 - (C3591 + C3590) * C1552 -
             (C3593 + C3592) * C50809) *
                C50985 +
            ((C4103 + C4104) * C1551 + (C4105 + C4106) * C1549 -
             (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                 C1552 -
             (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
                C50985 +
            ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
             C14541 * C1552 - C14542 * C50809) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
             (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
                C50985 +
            (C14543 * C1551 + C14544 * C1549 - C6413 * C1552 - C6414 * C50809) *
                C50881) *
               C50907) *
              C50730 * C900 +
          ((((C5473 + C5474) * C1552 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C1549 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C1551) +
             (C5475 + C5476) * C50809) *
                C50985 +
            (C14545 * C1552 -
             ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
             C14546 * C50809) *
                C50881) *
               C50986 +
           (((C5478 + C5477) * C1552 -
             ((C5476 + C5475) * C1549 + (C5474 + C5473) * C1551) +
             (C5480 + C5479) * C50809) *
                C50985 +
            ((C6012 + C6011) * C1552 - (C14547 * C1549 + C14548 * C1551) +
             (C6014 + C6013) * C50809) *
                C50881) *
               C50907) *
              C50730 * C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C1551 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C1549 -
             (C5797 + C5798) * C1552 - (C5799 + C5800) * C50809) *
                C50985 +
            ((C2739 + C2740) * C1551 + (C2741 + C2742) * C1549 -
             (C14086 + C14085) * C1552 - (C14088 + C14087) * C50809) *
                C50881) *
               C50986 +
           (((C5798 + C5797) * C1551 + (C5800 + C5799) * C1549 -
             (C5801 + C5802) * C1552 - (C5803 + C5804) * C50809) *
                C50985 +
            ((C14085 + C14086) * C1551 + (C14087 + C14088) * C1549 -
             (C2177 * C1088 + C50691 * C1092 + C2176 * C1089 + C2171 * C1093) *
                 C1552 -
             (C2177 * C1096 + C50691 * C1100 + C2176 * C1097 + C2171 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1721 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1717 -
            (C5461 + C5462) * C1722 - (C5463 + C5464) * C1718 + C5485 * C1723 +
            C5486 * C1719 - C7311 * C1724 - C7312 * C1720) *
               C50985 +
           ((C2385 + C2386) * C1721 + (C2387 + C2388) * C1717 - C14541 * C1722 -
            C14542 * C1718 + C15067 * C1723 + C15068 * C1719 -
            (C6423 + C6424) * C1724 - (C6425 + C6426) * C1720) *
               C50881) *
              C50986 +
          (((C5462 + C5461) * C1721 + (C5464 + C5463) * C1717 -
            (C5466 + C5465) * C1722 - (C5468 + C5467) * C1718 +
            (C5469 + C5470) * C1723 + (C5471 + C5472) * C1719 -
            (C7321 + C7322) * C1724 - (C7323 + C7324) * C1720) *
               C50985 +
           (C14543 * C1721 + C14544 * C1717 - C6413 * C1722 - C6414 * C1718 +
            (C6424 + C6423) * C1723 + (C6426 + C6425) * C1719 -
            (C2177 * C6404 + C50691 * C6406 + C2176 * C6405 + C2171 * C6407) *
                C1724 -
            (C2177 * C6408 + C50691 * C6410 + C2176 * C6409 + C2171 * C6411) *
                C1720) *
               C50881) *
              C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1972 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C51019 -
             (C5461 + C5462) * C1973 - (C5463 + C5464) * C51020 +
             C5485 * C1974 + C5486 * C1971) *
                C50985 +
            ((C2385 + C2386) * C1972 + (C2387 + C2388) * C51019 -
             C14541 * C1973 - C14542 * C51020 + C15067 * C1974 +
             C15068 * C1971) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C1972 + (C5464 + C5463) * C51019 -
             (C5466 + C5465) * C1973 - (C5468 + C5467) * C51020 +
             (C5469 + C5470) * C1974 + (C5471 + C5472) * C1971) *
                C50985 +
            (C14543 * C1972 + C14544 * C51019 - C6413 * C1973 - C6414 * C51020 +
             (C6424 + C6423) * C1974 + (C6426 + C6425) * C1971) *
                C50881) *
               C50907) *
              C50730 * C50964 +
          ((((C5473 + C5474) * C1973 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C51019 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C1972) +
             (C5475 + C5476) * C51020 - C5487 * C1974 - C5488 * C1971) *
                C50985 +
            (C14545 * C1973 -
             ((C2400 + C2399) * C51019 + (C2398 + C2397) * C1972) +
             C14546 * C51020 - (C6011 + C6012) * C1974 -
             (C6013 + C6014) * C1971) *
                C50881) *
               C50986 +
           (((C5478 + C5477) * C1973 -
             ((C5476 + C5475) * C51019 + (C5474 + C5473) * C1972) +
             (C5480 + C5479) * C51020 - (C5481 + C5482) * C1974 -
             (C5483 + C5484) * C1971) *
                C50985 +
            ((C6012 + C6011) * C1973 - (C14547 * C51019 + C14548 * C1972) +
             (C6014 + C6013) * C51020 -
             (C2177 * C5998 + C50691 * C5999 + C2176 * C4505 + C2171 * C4509) *
                 C1974 -
             (C2177 * C6000 + C50691 * C6001 + C2176 * C4511 + C2171 * C4517) *
                 C1971) *
                C50881) *
               C50907) *
              C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
                C50985 +
            ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
             C14541 * C1552 - C14542 * C50809) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
             (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
                C50985 +
            (C14543 * C1551 + C14544 * C1549 - C6413 * C1552 - C6414 * C50809) *
                C50881) *
               C50907) *
              C50730 * C900 +
          ((((C5473 + C5474) * C1552 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C1549 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C1551) +
             (C5475 + C5476) * C50809) *
                C50985 +
            (C14545 * C1552 -
             ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
             C14546 * C50809) *
                C50881) *
               C50986 +
           (((C5478 + C5477) * C1552 -
             ((C5476 + C5475) * C1549 + (C5474 + C5473) * C1551) +
             (C5480 + C5479) * C50809) *
                C50985 +
            ((C6012 + C6011) * C1552 - (C14547 * C1549 + C14548 * C1551) +
             (C6014 + C6013) * C50809) *
                C50881) *
               C50907) *
              C50730 * C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C1551 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C1549 -
             (C5797 + C5798) * C1552 - (C5799 + C5800) * C50809) *
                C50985 +
            ((C2739 + C2740) * C1551 + (C2741 + C2742) * C1549 -
             (C14086 + C14085) * C1552 - (C14088 + C14087) * C50809) *
                C50881) *
               C50986 +
           (((C5798 + C5797) * C1551 + (C5800 + C5799) * C1549 -
             (C5801 + C5802) * C1552 - (C5803 + C5804) * C50809) *
                C50985 +
            ((C14085 + C14086) * C1551 + (C14087 + C14088) * C1549 -
             (C2177 * C1088 + C50691 * C1092 + C2176 * C1089 + C2171 * C1093) *
                 C1552 -
             (C2177 * C1096 + C50691 * C1100 + C2176 * C1097 + C2171 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
                C50985 +
            ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
             C14541 * C1552 - C14542 * C50809) *
                C50881) *
               C50986 +
           (((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
             (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
                C50985 +
            (C14543 * C1551 + C14544 * C1549 - C6413 * C1552 - C6414 * C50809) *
                C50881) *
               C50907) *
              C248 +
          (((C14543 * C1552 -
             ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
             C14544 * C50809) *
                C50985 +
            (C15715 * C1552 -
             ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
             C15716 * C50809) *
                C50881) *
               C50986 +
           ((C15067 * C1552 - (C14542 * C1549 + C14541 * C1551) +
             C15068 * C50809) *
                C50985 +
            ((C3590 + C3591) * C1552 - (C4091 * C1549 + C4090 * C1551) +
             (C3592 + C3593) * C50809) *
                C50881) *
               C50907) *
              C249 +
          ((C4407 * C50985 +
            ((C2396 + C2395) * C1551 + (C2394 + C2393) * C1549 -
             (C4104 + C4103) * C1552 - (C4106 + C4105) * C50809) *
                C50881) *
               C50986 +
           ((C15715 * C1551 + C15716 * C1549 - (C3591 + C3590) * C1552 -
             (C3593 + C3592) * C50809) *
                C50985 +
            ((C4103 + C4104) * C1551 + (C4105 + C4106) * C1549 -
             (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                 C1552 -
             (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C50972 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C50781) *
              C51015 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C50781 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C50972) *
              C51016 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C2173 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C2174 +
            ((C2743 + C2744) * C121 + (C2745 + C2746) * C50745) * C2175) *
               C50843 * C50972 -
           (((C2177 * C978 + C50691 * C986 + C2176 * C979 + C2171 * C987) *
                 C50745 +
             (C2177 * C974 + C50691 * C982 + C2176 * C975 + C2171 * C983) *
                 C121) *
                C2175 +
            ((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C2174 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C2173) *
               C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C50972 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C50781) *
              C51015 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C50781 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C50972) *
              C51016 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50745) *
               C50831 * C50843 * C50972 -
           ((C120 * C541 + C108 * C543 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50745 +
            (C120 * C540 + C108 * C542 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50831 * C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C5105 +
            ((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50831 *
                C5106 +
            (C5485 * C121 + C5486 * C50745) * C50831 * C5107) *
               C50972 -
           (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
                C5107 +
            ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
                C5106 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
                C5105) *
               C50781) *
              C51015 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50831 *
                C5105 +
            ((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50831 *
                C5106 +
            ((C2176 * C1090 + C2171 * C1094 + C2177 * C1089 + C50691 * C1093) *
                 C121 +
             (C2176 * C1098 + C2171 * C1102 + C2177 * C1097 + C50691 * C1101) *
                 C50745) *
                C50831 * C5107) *
               C50781 -
           ((C5488 * C50745 + C5487 * C121) * C50831 * C5107 +
            ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50831 *
                C5106 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50831 * C5105) *
               C50972) *
              C51016 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C50831 * C5105 +
            ((C2176 * C398 + C2171 * C408 + C2177 * C397 + C50691 * C407) *
                 C121 +
             (C2176 * C412 + C2171 * C428 + C2177 * C411 + C50691 * C427) *
                 C50745) *
                C50831 * C5106 +
            ((C2176 * C403 + C2171 * C417 + C2177 * C404 + C50691 * C418) *
                 C121 +
             (C2176 * C421 + C2171 * C433 + C2177 * C422 + C50691 * C434) *
                 C50745) *
                C50831 * C5107) *
               C50972 -
           (((C2177 * C1096 + C50691 * C1100 + C2176 * C1097 + C2171 * C1101) *
                 C50745 +
             (C2177 * C1088 + C50691 * C1092 + C2176 * C1089 + C2171 * C1093) *
                 C121) *
                C50831 * C5107 +
            ((C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                 C50745 +
             (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                 C121) *
                C50831 * C5106 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C50831 *
                C5105) *
               C50781) *
              C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                 C645 -
             (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                 C50809) *
                C2173 +
            ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
             (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
                C2174 +
            (C2409 * C644 + C2410 * C50973 - (C3135 + C3136) * C645 -
             (C3137 + C3138) * C50809) *
                C2175) *
               C50843 * C50972 +
           (((C3132 + C3131) * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             (C3134 + C3133) * C50809) *
                C2173 +
            ((C3136 + C3135) * C645 -
             ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
             (C3138 + C3137) * C50809) *
                C2174 +
            ((C2176 * C3086 + C2171 * C3089 + C2177 * C3087 + C50691 * C3090) *
                 C645 -
             ((C2393 + C2394) * C50973 + (C2395 + C2396) * C644) +
             (C2176 * C3091 + C2171 * C3095 + C2177 * C3092 + C50691 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C251 +
          ((((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                 C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                 C50809) *
                C2173 +
            ((C3139 + C3140) * C645 -
             ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
             (C3141 + C3142) * C50809) *
                C2174 +
            ((C3143 + C3144) * C645 - (C2411 * C50973 + C2412 * C644) +
             (C3145 + C3146) * C50809) *
                C2175) *
               C50843 * C50972 +
           (((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
             (C3140 + C3139) * C645 - (C3142 + C3141) * C50809) *
                C2173 +
            ((C2401 + C2402) * C644 + (C2403 + C2404) * C50973 -
             (C3144 + C3143) * C645 - (C3146 + C3145) * C50809) *
                C2174 +
            ((C2405 + C2406) * C644 + (C2407 + C2408) * C50973 -
             (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                 C645 -
             (C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C644 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50973 -
            (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
             C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                C645 -
            (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
             C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
             C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                C645 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50973 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C644) +
            (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
             C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                C50809) *
               C50831 * C50843 * C50781) *
              C251 +
          (((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
             C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                C645 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50973 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C644) +
            (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
             C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C644 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50973 -
            (C120 * C784 + C108 * C793 + C119 * C783 + C107 * C788 +
             C118 * C782 + C106 * C787 + C117 * C781 + C105 * C786) *
                C645 -
            (C120 * C794 + C108 * C799 + C119 * C792 + C107 * C798 +
             C118 * C791 + C106 * C797 + C117 * C790 + C105 * C796) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
                C50831 * C5105 +
            ((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
             (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
                C50831 * C5106 +
            (C5485 * C644 + C5486 * C50973 - (C5470 + C5469) * C645 -
             (C5472 + C5471) * C50809) *
                C50831 * C5107) *
               C50972 +
           (((C3132 + C3131) * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             (C3134 + C3133) * C50809) *
                C50831 * C5105 +
            ((C3586 + C3587) * C645 -
             ((C3133 + C3134) * C50973 + (C3131 + C3132) * C644) +
             (C3588 + C3589) * C50809) *
                C50831 * C5106 +
            ((C2176 * C4506 + C2171 * C4510 + C2177 * C4505 + C50691 * C4509) *
                 C645 -
             ((C3589 + C3588) * C50973 + (C3587 + C3586) * C644) +
             (C2176 * C4512 + C2171 * C4518 + C2177 * C4511 + C50691 * C4517) *
                 C50809) *
                C50831 * C5107) *
               C50781) *
              C251 +
          ((((C5473 + C5474) * C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C5475 + C5476) * C50809) *
                C50831 * C5105 +
            ((C5478 + C5477) * C645 -
             ((C5476 + C5475) * C50973 + (C5474 + C5473) * C644) +
             (C5480 + C5479) * C50809) *
                C50831 * C5106 +
            ((C5482 + C5481) * C645 - (C5488 * C50973 + C5487 * C644) +
             (C5484 + C5483) * C50809) *
                C50831 * C5107) *
               C50972 +
           (((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
             (C3140 + C3139) * C645 - (C3142 + C3141) * C50809) *
                C50831 * C5105 +
            ((C3139 + C3140) * C644 + (C3141 + C3142) * C50973 -
             (C6011 + C6012) * C645 - (C6013 + C6014) * C50809) *
                C50831 * C5106 +
            ((C6012 + C6011) * C644 + (C6014 + C6013) * C50973 -
             (C2177 * C5998 + C50691 * C5999 + C2176 * C4505 + C2171 * C4509) *
                 C645 -
             (C2177 * C6000 + C50691 * C6001 + C2176 * C4511 + C2171 * C4517) *
                 C50809) *
                C50831 * C5107) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50745) *
                  C50831 * C50843 * C50730 * C113 -
              ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                   C50745 +
               (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                   C121) *
                  C50831 * C50843 * C50730 * C114 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C121 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50745) *
                  C50831 * C50843 * C50730 * C115 -
              ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
                C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
                   C50745 +
               (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
                C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
                   C121) *
                  C50831 * C50843 * C50730 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50745) *
                   C50831 * C50843 * C248 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50745 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50831 * C50843 * C249 +
               ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50745) *
                   C50831 * C50843 * C250) *
                  C251 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50745) *
                   C50831 * C50843 * C249 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50745 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50831 * C50843 * C248 -
               ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
                 C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                    C50745 +
                (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
                 C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                    C121) *
                   C50831 * C50843 * C250) *
                  C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C394 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C391 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C395 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C392 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C396 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C393) *
              C50831 * C50843 * C50730 * C251 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C395 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C391 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C394) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C392 -
           (C120 * C406 + C108 * C425 + C119 * C404 + C107 * C418 +
            C118 * C403 + C106 * C417 + C117 * C402 + C105 * C416) *
               C396 -
           (C120 * C426 + C108 * C436 + C119 * C422 + C107 * C434 +
            C118 * C421 + C106 * C433 + C117 * C420 + C105 * C432) *
               C393) *
              C50831 * C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2176 * C256 + C2171 * C270 + C2177 * C255 + C50691 * C269) *
                C121 +
            (C2176 * C266 + C2171 * C286 + C2177 * C265 + C50691 * C285) *
                C50745) *
               C2174 +
           ((C2176 * C257 + C2171 * C271 + C2177 * C258 + C50691 * C272) *
                C121 +
            (C2176 * C275 + C2171 * C287 + C2177 * C276 + C50691 * C288) *
                C50745) *
               C2175) *
              C50843 * C50730 * C113 -
          (((C2177 * C277 + C50691 * C289 + C2176 * C276 + C2171 * C288) *
                C50745 +
            (C2177 * C259 + C50691 * C273 + C2176 * C258 + C2171 * C272) *
                C121) *
               C2175 +
           ((C2177 * C264 + C50691 * C284 + C2176 * C265 + C2171 * C285) *
                C50745 +
            (C2177 * C254 + C50691 * C268 + C2176 * C255 + C2171 * C269) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                C50745 +
            (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50843 * C50730 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50745) *
               C2173 +
           ((C2176 * C254 + C2171 * C268 + C2177 * C253 + C50691 * C267) *
                C121 +
            (C2176 * C264 + C2171 * C284 + C2177 * C263 + C50691 * C283) *
                C50745) *
               C2174 +
           ((C2176 * C259 + C2171 * C273 + C2177 * C260 + C50691 * C274) *
                C121 +
            (C2176 * C277 + C2171 * C289 + C2177 * C278 + C50691 * C290) *
                C50745) *
               C2175) *
              C50843 * C50730 * C115 -
          (((C2177 * C281 + C50691 * C292 + C2176 * C278 + C2171 * C290) *
                C50745 +
            (C2177 * C262 + C50691 * C282 + C2176 * C260 + C2171 * C274) *
                C121) *
               C2175 +
           ((C2177 * C280 + C50691 * C291 + C2176 * C263 + C2171 * C283) *
                C50745 +
            (C2177 * C261 + C50691 * C279 + C2176 * C253 + C2171 * C267) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                C50745 +
            (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C248 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C249 +
           (C2417 * C2173 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
            ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50691 * C2328) *
                 C121 +
             (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50691 * C2334) *
                 C50745) *
                C2175) *
               C50843 * C250) *
              C251 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C249 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C248 -
           (((C2177 * C2331 + C50691 * C2335 + C2176 * C2330 + C2171 * C2334) *
                 C50745 +
             (C2177 * C2326 + C50691 * C2332 + C2176 * C2325 + C2171 * C2328) *
                 C121) *
                C2175 +
            ((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C2174 +
            C2418 * C2173) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C394 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C391 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C395 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C392 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C396 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C393) *
               C2173 +
           ((C2385 + C2386) * C394 + (C2387 + C2388) * C391 -
            (C2177 * C781 + C50691 * C786 + C2176 * C780 + C2171 * C785) *
                C395 -
            (C2177 * C790 + C50691 * C796 + C2176 * C789 + C2171 * C795) *
                C392 +
            (C2176 * C1091 + C2171 * C1095 + C2177 * C1090 + C50691 * C1094) *
                C396 +
            (C2176 * C1099 + C2171 * C1103 + C2177 * C1098 + C50691 * C1102) *
                C393) *
               C2174 +
           (C2409 * C394 + C2410 * C391 -
            (C2177 * C1437 + C50691 * C1441 + C2176 * C1438 + C2171 * C1442) *
                C395 -
            (C2177 * C1445 + C50691 * C1449 + C2176 * C1446 + C2171 * C1450) *
                C392 +
            (C2176 * C2564 + C2171 * C2567 + C2177 * C2565 + C50691 * C2568) *
                C396 +
            (C2176 * C2569 + C2171 * C2573 + C2177 * C2570 + C50691 * C2574) *
                C393) *
               C2175) *
              C50843 * C50730 * C251 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C395 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C391 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C394) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C392 -
            (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                C396 -
            (C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                C393) *
               C2173 +
           ((C2176 * C781 + C2171 * C786 + C2177 * C782 + C50691 * C787) *
                C395 -
            ((C2400 + C2399) * C391 + (C2398 + C2397) * C394) +
            (C2176 * C790 + C2171 * C796 + C2177 * C791 + C50691 * C797) *
                C392 -
            (C2177 * C1089 + C50691 * C1093 + C2176 * C1090 + C2171 * C1094) *
                C396 -
            (C2177 * C1097 + C50691 * C1101 + C2176 * C1098 + C2171 * C1102) *
                C393) *
               C2174 +
           ((C2176 * C1437 + C2171 * C1441 + C2177 * C1436 + C50691 * C1440) *
                C395 -
            (C2411 * C391 + C2412 * C394) +
            (C2176 * C1445 + C2171 * C1449 + C2177 * C1444 + C50691 * C1448) *
                C392 -
            (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                C396 -
            (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                C393) *
               C2175) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C5105 +
           ((C2176 * C400 + C2171 * C410 + C2177 * C399 + C50691 * C409) *
                C121 +
            (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50691 * C429) *
                C50745) *
               C50831 * C5106 +
           ((C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C121 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C50745) *
               C50831 * C5107) *
              C50730 * C113 -
          (((C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                C50745 +
            (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                C121) *
               C50831 * C5107 +
           ((C2177 * C412 + C50691 * C428 + C2176 * C413 + C2171 * C429) *
                C50745 +
            (C2177 * C398 + C50691 * C408 + C2176 * C399 + C2171 * C409) *
                C121) *
               C50831 * C5106 +
           ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                C50745 +
            (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C50831 * C5105) *
              C50730 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50745) *
               C50831 * C5105 +
           ((C2176 * C398 + C2171 * C408 + C2177 * C397 + C50691 * C407) *
                C121 +
            (C2176 * C412 + C2171 * C428 + C2177 * C411 + C50691 * C427) *
                C50745) *
               C50831 * C5106 +
           ((C2176 * C403 + C2171 * C417 + C2177 * C404 + C50691 * C418) *
                C121 +
            (C2176 * C421 + C2171 * C433 + C2177 * C422 + C50691 * C434) *
                C50745) *
               C50831 * C5107) *
              C50730 * C115 -
          (((C2177 * C426 + C50691 * C436 + C2176 * C422 + C2171 * C434) *
                C50745 +
            (C2177 * C406 + C50691 * C425 + C2176 * C404 + C2171 * C418) *
                C121) *
               C50831 * C5107 +
           ((C2177 * C424 + C50691 * C435 + C2176 * C411 + C2171 * C427) *
                C50745 +
            (C2177 * C405 + C50691 * C423 + C2176 * C397 + C2171 * C407) *
                C121) *
               C50831 * C5106 +
           ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                C50745 +
            (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C50831 * C5105) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C5105 +
            ((C2176 * C400 + C2171 * C410 + C2177 * C399 + C50691 * C409) *
                 C121 +
             (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50691 * C429) *
                 C50745) *
                C50831 * C5106 +
            ((C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                 C121 +
             (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                 C50745) *
                C50831 * C5107) *
               C248 -
           (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
                C5107 +
            ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
                C5106 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
                C5105) *
               C249 +
           (C2417 * C50831 * C5105 +
            ((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50831 *
                C5106 +
            ((C3590 + C3591) * C121 + (C3592 + C3593) * C50745) * C50831 *
                C5107) *
               C250) *
              C251 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50831 *
                C5105 +
            ((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50831 *
                C5106 +
            ((C2176 * C1090 + C2171 * C1094 + C2177 * C1089 + C50691 * C1093) *
                 C121 +
             (C2176 * C1098 + C2171 * C1102 + C2177 * C1097 + C50691 * C1101) *
                 C50745) *
                C50831 * C5107) *
               C249 -
           (((C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                 C50745 +
             (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                 C121) *
                C50831 * C5107 +
            ((C2177 * C412 + C50691 * C428 + C2176 * C413 + C2171 * C429) *
                 C50745 +
             (C2177 * C398 + C50691 * C408 + C2176 * C399 + C2171 * C409) *
                 C121) *
                C50831 * C5106 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50831 * C5105) *
               C248 -
           (((C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                 C50745 +
             (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                 C121) *
                C50831 * C5107 +
            ((C3146 + C3145) * C50745 + (C3144 + C3143) * C121) * C50831 *
                C5106 +
            C2418 * C50831 * C5105) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C394 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C391 -
            (C5461 + C5462) * C395 - (C5463 + C5464) * C392 + C5485 * C396 +
            C5486 * C393) *
               C50831 * C5105 +
           ((C5462 + C5461) * C394 + (C5464 + C5463) * C391 -
            (C5466 + C5465) * C395 - (C5468 + C5467) * C392 +
            (C5469 + C5470) * C396 + (C5471 + C5472) * C393) *
               C50831 * C5106 +
           (C5485 * C394 + C5486 * C391 - (C5470 + C5469) * C395 -
            (C5472 + C5471) * C392 +
            (C2176 * C5400 + C2171 * C5403 + C2177 * C5401 + C50691 * C5404) *
                C396 +
            (C2176 * C5405 + C2171 * C5409 + C2177 * C5406 + C50691 * C5410) *
                C393) *
               C50831 * C5107) *
              C50730 * C251 +
          (((C5473 + C5474) * C395 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C391 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C394) +
            (C5475 + C5476) * C392 - C5487 * C396 - C5488 * C393) *
               C50831 * C5105 +
           ((C5478 + C5477) * C395 -
            ((C5476 + C5475) * C391 + (C5474 + C5473) * C394) +
            (C5480 + C5479) * C392 - (C5481 + C5482) * C396 -
            (C5483 + C5484) * C393) *
               C50831 * C5106 +
           ((C5482 + C5481) * C395 - (C5488 * C391 + C5487 * C394) +
            (C5484 + C5483) * C392 -
            (C2177 * C5402 + C50691 * C5407 + C2176 * C5401 + C2171 * C5404) *
                C396 -
            (C2177 * C5408 + C50691 * C5411 + C2176 * C5406 + C2171 * C5410) *
                C393) *
               C50831 * C5107) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C644 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50973 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C645 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
            (C2177 * C781 + C50691 * C786 + C2176 * C780 + C2171 * C785) *
                C645 -
            (C2177 * C790 + C50691 * C796 + C2176 * C789 + C2171 * C795) *
                C50809) *
               C2174 +
           (C2409 * C644 + C2410 * C50973 -
            (C2177 * C1437 + C50691 * C1441 + C2176 * C1438 + C2171 * C1442) *
                C645 -
            (C2177 * C1445 + C50691 * C1449 + C2176 * C1446 + C2171 * C1450) *
                C50809) *
               C2175) *
              C50843 * C50730 * C51015 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C645 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50973 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C644) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C50809) *
               C2173 +
           ((C2176 * C781 + C2171 * C786 + C2177 * C782 + C50691 * C787) *
                C645 -
            ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
            (C2176 * C790 + C2171 * C796 + C2177 * C791 + C50691 * C797) *
                C50809) *
               C2174 +
           ((C2176 * C1437 + C2171 * C1441 + C2177 * C1436 + C50691 * C1440) *
                C645 -
            (C2411 * C50973 + C2412 * C644) +
            (C2176 * C1445 + C2171 * C1449 + C2177 * C1444 + C50691 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C51016 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C644 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50973 -
            (C2177 * C397 + C50691 * C407 + C2176 * C398 + C2171 * C408) *
                C645 -
            (C2177 * C411 + C50691 * C427 + C2176 * C412 + C2171 * C428) *
                C50809) *
               C2173 +
           ((C2739 + C2740) * C644 + (C2741 + C2742) * C50973 -
            (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                C645 -
            (C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                C50809) *
               C2174 +
           ((C2743 + C2744) * C644 + (C2745 + C2746) * C50973 -
            (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                C645 -
            (C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C644 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50973 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C645 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C50730 * C51015 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C645 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50973 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C644) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C50809) *
              C50831 * C50843 * C50730 * C51016 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C644 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50973 -
           (C120 * C646 + C108 * C647 + C119 * C405 + C107 * C423 +
            C118 * C397 + C106 * C407 + C117 * C398 + C105 * C408) *
               C645 -
           (C120 * C648 + C108 * C649 + C119 * C424 + C107 * C435 +
            C118 * C411 + C106 * C427 + C117 * C412 + C105 * C428) *
               C50809) *
              C50831 * C50843 * C50730 * C539)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C644 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50973 -
            (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
               C50831 * C5105 +
           ((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
            (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
               C50831 * C5106 +
           (C5485 * C644 + C5486 * C50973 - (C5470 + C5469) * C645 -
            (C5472 + C5471) * C50809) *
               C50831 * C5107) *
              C50730 * C51015 +
          (((C5473 + C5474) * C645 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50973 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C644) +
            (C5475 + C5476) * C50809) *
               C50831 * C5105 +
           ((C5478 + C5477) * C645 -
            ((C5476 + C5475) * C50973 + (C5474 + C5473) * C644) +
            (C5480 + C5479) * C50809) *
               C50831 * C5106 +
           ((C5482 + C5481) * C645 - (C5488 * C50973 + C5487 * C644) +
            (C5484 + C5483) * C50809) *
               C50831 * C5107) *
              C50730 * C51016 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C644 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50973 -
            (C5797 + C5798) * C645 - (C5799 + C5800) * C50809) *
               C50831 * C5105 +
           ((C5798 + C5797) * C644 + (C5800 + C5799) * C50973 -
            (C5801 + C5802) * C645 - (C5803 + C5804) * C50809) *
               C50831 * C5106 +
           ((C5802 + C5801) * C644 + (C5804 + C5803) * C50973 -
            (C2177 * C1725 + C50691 * C1729 + C2176 * C1726 + C2171 * C1730) *
                C645 -
            (C2177 * C1733 + C50691 * C1737 + C2176 * C1734 + C2171 * C1738) *
                C50809) *
               C50831 * C5107) *
              C50730 * C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50745) *
               C50831 * C50843 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50745 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50831 * C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50745) *
              C50831 * C50843 * C50730 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50745 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50831 * C50843 * C50730 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50745) *
              C50831 * C50843 * C50730 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50745 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50831 * C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2176 * C256 + C2171 * C270 + C2177 * C255 + C50691 * C269) *
                C121 +
            (C2176 * C266 + C2171 * C286 + C2177 * C265 + C50691 * C285) *
                C50745) *
               C2174 +
           ((C2176 * C257 + C2171 * C271 + C2177 * C258 + C50691 * C272) *
                C121 +
            (C2176 * C275 + C2171 * C287 + C2177 * C276 + C50691 * C288) *
                C50745) *
               C2175) *
              C50843 * C50730 * C113 -
          (((C2177 * C277 + C50691 * C289 + C2176 * C276 + C2171 * C288) *
                C50745 +
            (C2177 * C259 + C50691 * C273 + C2176 * C258 + C2171 * C272) *
                C121) *
               C2175 +
           ((C2177 * C264 + C50691 * C284 + C2176 * C265 + C2171 * C285) *
                C50745 +
            (C2177 * C254 + C50691 * C268 + C2176 * C255 + C2171 * C269) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                C50745 +
            (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50843 * C50730 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50745) *
               C2173 +
           ((C2176 * C254 + C2171 * C268 + C2177 * C253 + C50691 * C267) *
                C121 +
            (C2176 * C264 + C2171 * C284 + C2177 * C263 + C50691 * C283) *
                C50745) *
               C2174 +
           ((C2176 * C259 + C2171 * C273 + C2177 * C260 + C50691 * C274) *
                C121 +
            (C2176 * C277 + C2171 * C289 + C2177 * C278 + C50691 * C290) *
                C50745) *
               C2175) *
              C50843 * C50730 * C115 -
          (((C2177 * C281 + C50691 * C292 + C2176 * C278 + C2171 * C290) *
                C50745 +
            (C2177 * C262 + C50691 * C282 + C2176 * C260 + C2171 * C274) *
                C121) *
               C2175 +
           ((C2177 * C280 + C50691 * C291 + C2176 * C263 + C2171 * C283) *
                C50745 +
            (C2177 * C261 + C50691 * C279 + C2176 * C253 + C2171 * C267) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                C50745 +
            (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C248 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C249 +
           (C2417 * C2173 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
            ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50691 * C2328) *
                 C121 +
             (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50691 * C2334) *
                 C50745) *
                C2175) *
               C50843 * C250) *
              C251 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C249 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C248 -
           (((C2177 * C2331 + C50691 * C2335 + C2176 * C2330 + C2171 * C2334) *
                 C50745 +
             (C2177 * C2326 + C50691 * C2332 + C2176 * C2325 + C2171 * C2328) *
                 C121) *
                C2175 +
            ((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C2174 +
            C2418 * C2173) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C5105 +
           ((C2176 * C400 + C2171 * C410 + C2177 * C399 + C50691 * C409) *
                C121 +
            (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50691 * C429) *
                C50745) *
               C50831 * C5106 +
           ((C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C121 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C50745) *
               C50831 * C5107) *
              C50730 * C113 -
          (((C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                C50745 +
            (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                C121) *
               C50831 * C5107 +
           ((C2177 * C412 + C50691 * C428 + C2176 * C413 + C2171 * C429) *
                C50745 +
            (C2177 * C398 + C50691 * C408 + C2176 * C399 + C2171 * C409) *
                C121) *
               C50831 * C5106 +
           ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                C50745 +
            (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C50831 * C5105) *
              C50730 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50745) *
               C50831 * C5105 +
           ((C2176 * C398 + C2171 * C408 + C2177 * C397 + C50691 * C407) *
                C121 +
            (C2176 * C412 + C2171 * C428 + C2177 * C411 + C50691 * C427) *
                C50745) *
               C50831 * C5106 +
           ((C2176 * C403 + C2171 * C417 + C2177 * C404 + C50691 * C418) *
                C121 +
            (C2176 * C421 + C2171 * C433 + C2177 * C422 + C50691 * C434) *
                C50745) *
               C50831 * C5107) *
              C50730 * C115 -
          (((C2177 * C426 + C50691 * C436 + C2176 * C422 + C2171 * C434) *
                C50745 +
            (C2177 * C406 + C50691 * C425 + C2176 * C404 + C2171 * C418) *
                C121) *
               C50831 * C5107 +
           ((C2177 * C424 + C50691 * C435 + C2176 * C411 + C2171 * C427) *
                C50745 +
            (C2177 * C405 + C50691 * C423 + C2176 * C397 + C2171 * C407) *
                C121) *
               C50831 * C5106 +
           ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                C50745 +
            (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C50831 * C5105) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C5105 +
            ((C2176 * C400 + C2171 * C410 + C2177 * C399 + C50691 * C409) *
                 C121 +
             (C2176 * C414 + C2171 * C430 + C2177 * C413 + C50691 * C429) *
                 C50745) *
                C50831 * C5106 +
            ((C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                 C121 +
             (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                 C50745) *
                C50831 * C5107) *
               C248 -
           (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
                C5107 +
            ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
                C5106 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
                C5105) *
               C249 +
           (C2417 * C50831 * C5105 +
            ((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50831 *
                C5106 +
            ((C3590 + C3591) * C121 + (C3592 + C3593) * C50745) * C50831 *
                C5107) *
               C250) *
              C251 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50831 *
                C5105 +
            ((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50831 *
                C5106 +
            ((C2176 * C1090 + C2171 * C1094 + C2177 * C1089 + C50691 * C1093) *
                 C121 +
             (C2176 * C1098 + C2171 * C1102 + C2177 * C1097 + C50691 * C1101) *
                 C50745) *
                C50831 * C5107) *
               C249 -
           (((C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                 C50745 +
             (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                 C121) *
                C50831 * C5107 +
            ((C2177 * C412 + C50691 * C428 + C2176 * C413 + C2171 * C429) *
                 C50745 +
             (C2177 * C398 + C50691 * C408 + C2176 * C399 + C2171 * C409) *
                 C121) *
                C50831 * C5106 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50831 * C5105) *
               C248 -
           (((C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                 C50745 +
             (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                 C121) *
                C50831 * C5107 +
            ((C3146 + C3145) * C50745 + (C3144 + C3143) * C121) * C50831 *
                C5106 +
            C2418 * C50831 * C5105) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C51017 -
           (C3415 * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C51018 +
           (C2417 * C2173 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
            ((C3411 + C3412) * C121 + (C3413 + C3414) * C50745) * C2175) *
               C50843 * C1204) *
              C50964 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C51018 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C51017 -
           (((C2177 * C2331 + C50691 * C2335 + C2176 * C2330 + C2171 * C2334) *
                 C50745 +
             (C2177 * C2326 + C50691 * C2332 + C2176 * C2325 + C2171 * C2328) *
                 C121) *
                C2175 +
            ((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C2174 +
            C2418 * C2173) *
               C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C51017 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C51018 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50745) *
               C50831 * C50843 * C1204) *
              C50964 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C51018 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C51017 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50745 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50831 * C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C5105 +
            ((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50831 *
                C5106 +
            (C5485 * C121 + C5486 * C50745) * C50831 * C5107) *
               C51017 -
           ((C6414 * C50745 + C6413 * C121) * C50831 * C5107 +
            ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
                C5106 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
                C5105) *
               C51018 +
           (C2417 * C50831 * C5105 +
            ((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50831 *
                C5106 +
            ((C3590 + C3591) * C121 + (C3592 + C3593) * C50745) * C50831 *
                C5107) *
               C1204) *
              C50964 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50831 *
                C5105 +
            ((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50831 *
                C5106 +
            ((C6012 + C6011) * C121 + (C6014 + C6013) * C50745) * C50831 *
                C5107) *
               C51018 -
           ((C5488 * C50745 + C5487 * C121) * C50831 * C5107 +
            ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50831 *
                C5106 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50831 * C5105) *
               C51017 -
           (((C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                 C50745 +
             (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                 C121) *
                C50831 * C5107 +
            ((C3146 + C3145) * C50745 + (C3144 + C3143) * C121) * C50831 *
                C5106 +
            C2418 * C50831 * C5105) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C644 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50973 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C645 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
            (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
               C2174 +
           C4108 * C2175) *
              C50843 * C51017 +
          (((C3132 + C3131) * C645 -
            ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
            (C3134 + C3133) * C50809) *
               C2173 +
           ((C3136 + C3135) * C645 -
            ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
            (C3138 + C3137) * C50809) *
               C2174 +
           ((C4103 + C4104) * C645 - (C3399 * C50973 + C3400 * C644) +
            (C4105 + C4106) * C50809) *
               C2175) *
              C50843 * C51018 +
          (C4108 * C2173 +
           ((C2396 + C2395) * C644 + (C2394 + C2393) * C50973 -
            (C4104 + C4103) * C645 - (C4106 + C4105) * C50809) *
               C2174 +
           ((C3411 + C3412) * C644 + (C3413 + C3414) * C50973 -
            (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                C645 -
            (C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                C50809) *
               C2175) *
              C50843 * C1204) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C644 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50973 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C645 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C51017 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C645 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50973 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C644) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C50809) *
              C50831 * C50843 * C51018 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C644 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50973 -
           (C120 * C1435 + C108 * C1439 + C119 * C1436 + C107 * C1440 +
            C118 * C1437 + C106 * C1441 + C117 * C1438 + C105 * C1442) *
               C645 -
           (C120 * C1443 + C108 * C1447 + C119 * C1444 + C107 * C1448 +
            C118 * C1445 + C106 * C1449 + C117 * C1446 + C105 * C1450) *
               C50809) *
              C50831 * C50843 * C1204) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C644 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50973 -
            (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
               C50831 * C5105 +
           ((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
            (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
               C50831 * C5106 +
           (C5485 * C644 + C5486 * C50973 - (C5470 + C5469) * C645 -
            (C5472 + C5471) * C50809) *
               C50831 * C5107) *
              C51017 +
          (((C3132 + C3131) * C645 -
            ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
            (C3134 + C3133) * C50809) *
               C50831 * C5105 +
           ((C3586 + C3587) * C645 -
            ((C3133 + C3134) * C50973 + (C3131 + C3132) * C644) +
            (C3588 + C3589) * C50809) *
               C50831 * C5106 +
           ((C6424 + C6423) * C645 - (C6414 * C50973 + C6413 * C644) +
            (C6426 + C6425) * C50809) *
               C50831 * C5107) *
              C51018 +
          (C4108 * C50831 * C5105 +
           ((C3136 + C3135) * C644 + (C3138 + C3137) * C50973 -
            (C3591 + C3590) * C645 - (C3593 + C3592) * C50809) *
               C50831 * C5106 +
           ((C3590 + C3591) * C644 + (C3592 + C3593) * C50973 -
            (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
                C645 -
            (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
                C50809) *
               C50831 * C5107) *
              C1204) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50745) *
                   C50831 * C50843 * C898 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50745 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50831 * C50843 * C50781) *
                  C900 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50745) *
                   C50831 * C50843 * C50781 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50745 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50831 * C50843 * C898) *
                  C901 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50745) *
                   C50831 * C50843 * C898 -
               ((C120 * C541 + C108 * C543 + C119 * C280 + C107 * C291 +
                 C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                    C50745 +
                (C120 * C540 + C108 * C542 + C119 * C261 + C107 * C279 +
                 C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                    C121) *
                   C50831 * C50843 * C50781) *
                  C902) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50745) *
                  C50831 * C50843 * C969 -
              ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                   C50745 +
               (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                   C121) *
                  C50831 * C50843 * C970 +
              ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                   C121 +
               (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                   C50745) *
                  C50831 * C50843 * C971 -
              ((C120 * C978 + C108 * C986 + C119 * C979 + C107 * C987 +
                C118 * C980 + C106 * C988 + C117 * C981 + C105 * C989) *
                   C50745 +
               (C120 * C974 + C108 * C982 + C119 * C975 + C107 * C983 +
                C118 * C976 + C106 * C984 + C117 * C977 + C105 * C985) *
                   C121) *
                  C50831 * C50843 * C972) *
             C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C394 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C391 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C395 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C392 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C396 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C393) *
              C50831 * C50843 * C898 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C395 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C391 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C394) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C392 -
           (C120 * C1088 + C108 * C1092 + C119 * C1089 + C107 * C1093 +
            C118 * C1090 + C106 * C1094 + C117 * C1091 + C105 * C1095) *
               C396 -
           (C120 * C1096 + C108 * C1100 + C119 * C1097 + C107 * C1101 +
            C118 * C1098 + C106 * C1102 + C117 * C1099 + C105 * C1103) *
               C393) *
              C50831 * C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C898 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C50781) *
              C900 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C50781 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C898) *
              C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C2173 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C2174 +
            ((C2743 + C2744) * C121 + (C2745 + C2746) * C50745) * C2175) *
               C50843 * C898 -
           (((C2177 * C978 + C50691 * C986 + C2176 * C979 + C2171 * C987) *
                 C50745 +
             (C2177 * C974 + C50691 * C982 + C2176 * C975 + C2171 * C983) *
                 C121) *
                C2175 +
            ((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C2174 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C2173) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
           C2417 * C2175) *
              C50843 * C969 -
          (C3415 * C2175 +
           ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
           ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
              C50843 * C970 +
          (C2417 * C2173 +
           ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
           ((C3411 + C3412) * C121 + (C3413 + C3414) * C50745) * C2175) *
              C50843 * C971 -
          (((C2177 * C3392 + C50691 * C3396 + C2176 * C3393 + C2171 * C3397) *
                C50745 +
            (C2177 * C3390 + C50691 * C3394 + C2176 * C3391 + C2171 * C3395) *
                C121) *
               C2175 +
           ((C3414 + C3413) * C50745 + (C3412 + C3411) * C121) * C2174 +
           C3415 * C2173) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C394 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C391 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C395 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C392 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C396 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C393) *
               C2173 +
           ((C2385 + C2386) * C394 + (C2387 + C2388) * C391 -
            (C3131 + C3132) * C395 - (C3133 + C3134) * C392 +
            (C3586 + C3587) * C396 + (C3588 + C3589) * C393) *
               C2174 +
           (C2409 * C394 + C2410 * C391 - (C3135 + C3136) * C395 -
            (C3137 + C3138) * C392 + (C3590 + C3591) * C396 +
            (C3592 + C3593) * C393) *
               C2175) *
              C50843 * C898 +
          (((C3132 + C3131) * C395 -
            ((C2388 + C2387) * C391 + (C2386 + C2385) * C394) +
            (C3134 + C3133) * C392 - (C3587 + C3586) * C396 -
            (C3589 + C3588) * C393) *
               C2173 +
           ((C3136 + C3135) * C395 -
            ((C2392 + C2391) * C391 + (C2390 + C2389) * C394) +
            (C3138 + C3137) * C392 - (C3591 + C3590) * C396 -
            (C3593 + C3592) * C393) *
               C2174 +
           ((C2176 * C3086 + C2171 * C3089 + C2177 * C3087 + C50691 * C3090) *
                C395 -
            (C3399 * C391 + C3400 * C394) +
            (C2176 * C3091 + C2171 * C3095 + C2177 * C3092 + C50691 * C3096) *
                C392 -
            (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                C396 -
            (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                C393) *
               C2175) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C5105 +
            ((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50831 *
                C5106 +
            (C5485 * C121 + C5486 * C50745) * C50831 * C5107) *
               C898 -
           (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
                C5107 +
            ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
                C5106 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
                C5105) *
               C50781) *
              C900 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50831 *
                C5105 +
            ((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50831 *
                C5106 +
            ((C6012 + C6011) * C121 + (C6014 + C6013) * C50745) * C50831 *
                C5107) *
               C50781 -
           ((C5488 * C50745 + C5487 * C121) * C50831 * C5107 +
            ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50831 *
                C5106 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50831 * C5105) *
               C898) *
              C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C50831 * C5105 +
            ((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50831 *
                C5106 +
            ((C5802 + C5801) * C121 + (C5804 + C5803) * C50745) * C50831 *
                C5107) *
               C898 -
           (((C2177 * C1096 + C50691 * C1100 + C2176 * C1097 + C2171 * C1101) *
                 C50745 +
             (C2177 * C1088 + C50691 * C1092 + C2176 * C1089 + C2171 * C1093) *
                 C121) *
                C50831 * C5107 +
            ((C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                 C50745 +
             (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                 C121) *
                C50831 * C5106 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C50831 *
                C5105) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C5105 +
           ((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50831 *
               C5106 +
           (C5485 * C121 + C5486 * C50745) * C50831 * C5107) *
              C969 -
          (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
               C5107 +
           ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
               C5106 +
           ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
               C5105) *
              C970 +
          (C2417 * C50831 * C5105 +
           ((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50831 *
               C5106 +
           ((C3590 + C3591) * C121 + (C3592 + C3593) * C50745) * C50831 *
               C5107) *
              C971 -
          (((C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                C50745 +
            (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                C121) *
               C50831 * C5107 +
           ((C4106 + C4105) * C50745 + (C4104 + C4103) * C121) * C50831 *
               C5106 +
           C3415 * C50831 * C5105) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C394 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C391 -
            (C5461 + C5462) * C395 - (C5463 + C5464) * C392 + C5485 * C396 +
            C5486 * C393) *
               C50831 * C5105 +
           ((C5462 + C5461) * C394 + (C5464 + C5463) * C391 -
            (C5466 + C5465) * C395 - (C5468 + C5467) * C392 +
            (C5469 + C5470) * C396 + (C5471 + C5472) * C393) *
               C50831 * C5106 +
           (C5485 * C394 + C5486 * C391 - (C5470 + C5469) * C395 -
            (C5472 + C5471) * C392 +
            (C2176 * C5400 + C2171 * C5403 + C2177 * C5401 + C50691 * C5404) *
                C396 +
            (C2176 * C5405 + C2171 * C5409 + C2177 * C5406 + C50691 * C5410) *
                C393) *
               C50831 * C5107) *
              C898 +
          (((C3132 + C3131) * C395 -
            ((C2388 + C2387) * C391 + (C2386 + C2385) * C394) +
            (C3134 + C3133) * C392 - C6413 * C396 - C6414 * C393) *
               C50831 * C5105 +
           ((C3586 + C3587) * C395 -
            ((C3133 + C3134) * C391 + (C3131 + C3132) * C394) +
            (C3588 + C3589) * C392 - (C6423 + C6424) * C396 -
            (C6425 + C6426) * C393) *
               C50831 * C5106 +
           ((C6424 + C6423) * C395 - (C6414 * C391 + C6413 * C394) +
            (C6426 + C6425) * C392 -
            (C2177 * C6404 + C50691 * C6406 + C2176 * C6405 + C2171 * C6407) *
                C396 -
            (C2177 * C6408 + C50691 * C6410 + C2176 * C6409 + C2171 * C6411) *
                C393) *
               C50831 * C5107) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                 C645 -
             (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                 C50809) *
                C2173 +
            ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
             (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
                C2174 +
            (C2409 * C644 + C2410 * C50973 - (C3135 + C3136) * C645 -
             (C3137 + C3138) * C50809) *
                C2175) *
               C50843 * C898 +
           (((C3132 + C3131) * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             (C3134 + C3133) * C50809) *
                C2173 +
            ((C3136 + C3135) * C645 -
             ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
             (C3138 + C3137) * C50809) *
                C2174 +
            ((C2176 * C3086 + C2171 * C3089 + C2177 * C3087 + C50691 * C3090) *
                 C645 -
             (C3399 * C50973 + C3400 * C644) +
             (C2176 * C3091 + C2171 * C3095 + C2177 * C3092 + C50691 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50964 +
          ((((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                 C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                 C50809) *
                C2173 +
            ((C3139 + C3140) * C645 -
             ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
             (C3141 + C3142) * C50809) *
                C2174 +
            ((C3143 + C3144) * C645 - (C2411 * C50973 + C2412 * C644) +
             (C3145 + C3146) * C50809) *
                C2175) *
               C50843 * C898 +
           (((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
             (C3140 + C3139) * C645 - (C3142 + C3141) * C50809) *
                C2173 +
            ((C2401 + C2402) * C644 + (C2403 + C2404) * C50973 -
             (C3144 + C3143) * C645 - (C3146 + C3145) * C50809) *
                C2174 +
            ((C2405 + C2406) * C644 + (C2407 + C2408) * C50973 -
             (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                 C645 -
             (C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C644 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50973 -
            (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
             C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                C645 -
            (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
             C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                C50809) *
               C50831 * C50843 * C898 +
           ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
             C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                C645 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50973 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C644) +
            (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
             C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50964 +
          (((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
             C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                C645 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50973 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C644) +
            (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
             C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                C50809) *
               C50831 * C50843 * C898 +
           ((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C644 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50973 -
            (C120 * C784 + C108 * C793 + C119 * C783 + C107 * C788 +
             C118 * C782 + C106 * C787 + C117 * C781 + C105 * C786) *
                C645 -
            (C120 * C794 + C108 * C799 + C119 * C792 + C107 * C798 +
             C118 * C791 + C106 * C797 + C117 * C790 + C105 * C796) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C5461 + C5462) * C645 - (C5463 + C5464) * C50809) *
                C50831 * C5105 +
            ((C5462 + C5461) * C644 + (C5464 + C5463) * C50973 -
             (C5466 + C5465) * C645 - (C5468 + C5467) * C50809) *
                C50831 * C5106 +
            (C5485 * C644 + C5486 * C50973 - (C5470 + C5469) * C645 -
             (C5472 + C5471) * C50809) *
                C50831 * C5107) *
               C898 +
           (((C3132 + C3131) * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             (C3134 + C3133) * C50809) *
                C50831 * C5105 +
            ((C3586 + C3587) * C645 -
             ((C3133 + C3134) * C50973 + (C3131 + C3132) * C644) +
             (C3588 + C3589) * C50809) *
                C50831 * C5106 +
            ((C6424 + C6423) * C645 - (C6414 * C50973 + C6413 * C644) +
             (C6426 + C6425) * C50809) *
                C50831 * C5107) *
               C50781) *
              C50964 +
          ((((C5473 + C5474) * C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C5475 + C5476) * C50809) *
                C50831 * C5105 +
            ((C5478 + C5477) * C645 -
             ((C5476 + C5475) * C50973 + (C5474 + C5473) * C644) +
             (C5480 + C5479) * C50809) *
                C50831 * C5106 +
            ((C5482 + C5481) * C645 - (C5488 * C50973 + C5487 * C644) +
             (C5484 + C5483) * C50809) *
                C50831 * C5107) *
               C898 +
           (((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
             (C3140 + C3139) * C645 - (C3142 + C3141) * C50809) *
                C50831 * C5105 +
            ((C3139 + C3140) * C644 + (C3141 + C3142) * C50973 -
             (C6011 + C6012) * C645 - (C6013 + C6014) * C50809) *
                C50831 * C5106 +
            ((C6012 + C6011) * C644 + (C6014 + C6013) * C50973 -
             (C2177 * C5998 + C50691 * C5999 + C2176 * C4505 + C2171 * C4509) *
                 C645 -
             (C2177 * C6000 + C50691 * C6001 + C2176 * C4511 + C2171 * C4517) *
                 C50809) *
                C50831 * C5107) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50745) *
              C50831 * C50843 * C969 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50745 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50831 * C50843 * C970 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50745) *
              C50831 * C50843 * C971 -
          ((C120 * C978 + C108 * C986 + C119 * C979 + C107 * C987 +
            C118 * C980 + C106 * C988 + C117 * C981 + C105 * C989) *
               C50745 +
           (C120 * C974 + C108 * C982 + C119 * C975 + C107 * C983 +
            C118 * C976 + C106 * C984 + C117 * C977 + C105 * C985) *
               C121) *
              C50831 * C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C898 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C50781) *
              C900 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C50781 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C898) *
              C901 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50745) *
               C50831 * C50843 * C898 -
           ((C120 * C541 + C108 * C543 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50745 +
            (C120 * C540 + C108 * C542 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50831 * C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C898 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C50781) *
              C900 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C50781 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C898) *
              C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C2173 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C2174 +
            ((C2743 + C2744) * C121 + (C2745 + C2746) * C50745) * C2175) *
               C50843 * C898 -
           (((C2177 * C978 + C50691 * C986 + C2176 * C979 + C2171 * C987) *
                 C50745 +
             (C2177 * C974 + C50691 * C982 + C2176 * C975 + C2171 * C983) *
                 C121) *
                C2175 +
            ((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C2174 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C2173) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
           C2417 * C2175) *
              C50843 * C969 -
          (C3415 * C2175 +
           ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
           ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
              C50843 * C970 +
          (C2417 * C2173 +
           ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
           ((C3411 + C3412) * C121 + (C3413 + C3414) * C50745) * C2175) *
              C50843 * C971 -
          (((C2177 * C3392 + C50691 * C3396 + C2176 * C3393 + C2171 * C3397) *
                C50745 +
            (C2177 * C3390 + C50691 * C3394 + C2176 * C3391 + C2171 * C3395) *
                C121) *
               C2175 +
           ((C3414 + C3413) * C50745 + (C3412 + C3411) * C121) * C2174 +
           C3415 * C2173) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C5105 +
            ((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50831 *
                C5106 +
            (C5485 * C121 + C5486 * C50745) * C50831 * C5107) *
               C898 -
           (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
                C5107 +
            ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
                C5106 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
                C5105) *
               C50781) *
              C900 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C50831 *
                C5105 +
            ((C3139 + C3140) * C121 + (C3141 + C3142) * C50745) * C50831 *
                C5106 +
            ((C6012 + C6011) * C121 + (C6014 + C6013) * C50745) * C50831 *
                C5107) *
               C50781 -
           ((C5488 * C50745 + C5487 * C121) * C50831 * C5107 +
            ((C5476 + C5475) * C50745 + (C5474 + C5473) * C121) * C50831 *
                C5106 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50831 * C5105) *
               C898) *
              C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C50831 * C5105 +
            ((C5798 + C5797) * C121 + (C5800 + C5799) * C50745) * C50831 *
                C5106 +
            ((C5802 + C5801) * C121 + (C5804 + C5803) * C50745) * C50831 *
                C5107) *
               C898 -
           (((C2177 * C1096 + C50691 * C1100 + C2176 * C1097 + C2171 * C1101) *
                 C50745 +
             (C2177 * C1088 + C50691 * C1092 + C2176 * C1089 + C2171 * C1093) *
                 C121) *
                C50831 * C5107 +
            ((C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                 C50745 +
             (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                 C121) *
                C50831 * C5106 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C50831 *
                C5105) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C5105 +
           ((C5462 + C5461) * C121 + (C5464 + C5463) * C50745) * C50831 *
               C5106 +
           (C5485 * C121 + C5486 * C50745) * C50831 * C5107) *
              C969 -
          (((C3589 + C3588) * C50745 + (C3587 + C3586) * C121) * C50831 *
               C5107 +
           ((C3133 + C3134) * C50745 + (C3131 + C3132) * C121) * C50831 *
               C5106 +
           ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C50831 *
               C5105) *
              C970 +
          (C2417 * C50831 * C5105 +
           ((C3136 + C3135) * C121 + (C3138 + C3137) * C50745) * C50831 *
               C5106 +
           ((C3590 + C3591) * C121 + (C3592 + C3593) * C50745) * C50831 *
               C5107) *
              C971 -
          (((C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                C50745 +
            (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                C121) *
               C50831 * C5107 +
           ((C4106 + C4105) * C50745 + (C4104 + C4103) * C121) * C50831 *
               C5106 +
           C3415 * C50831 * C5105) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                 C1552 -
             (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                 C50809) *
                C2173 +
            ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
             (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
                C2174 +
            C4407 * C2175) *
               C50843 * C50972 +
           (((C3132 + C3131) * C1552 -
             ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
             (C3134 + C3133) * C50809) *
                C2173 +
            ((C3136 + C3135) * C1552 -
             ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
             (C3138 + C3137) * C50809) *
                C2174 +
            ((C4103 + C4104) * C1552 - (C3399 * C1549 + C3400 * C1551) +
             (C4105 + C4106) * C50809) *
                C2175) *
               C50843 * C50781) *
              C50964 +
          ((((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                 C1552 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C1549 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C1551) +
             (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                 C50809) *
                C2173 +
            ((C3139 + C3140) * C1552 -
             ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
             (C3141 + C3142) * C50809) *
                C2174 +
            ((C3143 + C3144) * C1552 - (C2411 * C1549 + C2412 * C1551) +
             (C3145 + C3146) * C50809) *
                C2175) *
               C50843 * C50972 +
           (((C2397 + C2398) * C1551 + (C2399 + C2400) * C1549 -
             (C3140 + C3139) * C1552 - (C3142 + C3141) * C50809) *
                C2173 +
            ((C2401 + C2402) * C1551 + (C2403 + C2404) * C1549 -
             (C3144 + C3143) * C1552 - (C3146 + C3145) * C50809) *
                C2174 +
            ((C2405 + C2406) * C1551 + (C2407 + C2408) * C1549 -
             (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                 C1552 -
             (C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1551 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1549 -
            (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
             C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                C1552 -
            (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
             C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
             C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                C1552 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C1549 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C1551) +
            (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
             C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50964 +
          (((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
             C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                C1552 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1549 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1551) +
            (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
             C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C1551 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C1549 -
            (C120 * C784 + C108 * C793 + C119 * C783 + C107 * C788 +
             C118 * C782 + C106 * C787 + C117 * C781 + C105 * C786) *
                C1552 -
            (C120 * C794 + C108 * C799 + C119 * C792 + C107 * C798 +
             C118 * C791 + C106 * C797 + C117 * C790 + C105 * C796) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
                C50831 * C5105 +
            ((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
             (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
                C50831 * C5106 +
            (C5485 * C1551 + C5486 * C1549 - C7311 * C1552 - C7312 * C50809) *
                C50831 * C5107) *
               C50972 +
           (((C3132 + C3131) * C1552 -
             ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
             (C3134 + C3133) * C50809) *
                C50831 * C5105 +
            ((C3586 + C3587) * C1552 -
             ((C3133 + C3134) * C1549 + (C3131 + C3132) * C1551) +
             (C3588 + C3589) * C50809) *
                C50831 * C5106 +
            ((C6424 + C6423) * C1552 - (C6414 * C1549 + C6413 * C1551) +
             (C6426 + C6425) * C50809) *
                C50831 * C5107) *
               C50781) *
              C50964 +
          ((((C5473 + C5474) * C1552 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C1549 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C1551) +
             (C5475 + C5476) * C50809) *
                C50831 * C5105 +
            ((C5478 + C5477) * C1552 -
             ((C5476 + C5475) * C1549 + (C5474 + C5473) * C1551) +
             (C5480 + C5479) * C50809) *
                C50831 * C5106 +
            ((C5482 + C5481) * C1552 - (C5488 * C1549 + C5487 * C1551) +
             (C5484 + C5483) * C50809) *
                C50831 * C5107) *
               C50972 +
           (((C2397 + C2398) * C1551 + (C2399 + C2400) * C1549 -
             (C3140 + C3139) * C1552 - (C3142 + C3141) * C50809) *
                C50831 * C5105 +
            ((C3139 + C3140) * C1551 + (C3141 + C3142) * C1549 -
             (C6011 + C6012) * C1552 - (C6013 + C6014) * C50809) *
                C50831 * C5106 +
            ((C6012 + C6011) * C1551 + (C6014 + C6013) * C1549 -
             (C2177 * C5998 + C50691 * C5999 + C2176 * C4505 + C2171 * C4509) *
                 C1552 -
             (C2177 * C6000 + C50691 * C6001 + C2176 * C4511 + C2171 * C4517) *
                 C50809) *
                C50831 * C5107) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1972 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C51019 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1973 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C51020 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C1974 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C1971) *
               C2173 +
           ((C2385 + C2386) * C1972 + (C2387 + C2388) * C51019 -
            (C3131 + C3132) * C1973 - (C3133 + C3134) * C51020 +
            (C3586 + C3587) * C1974 + (C3588 + C3589) * C1971) *
               C2174 +
           (C2409 * C1972 + C2410 * C51019 - C4090 * C1973 - C4091 * C51020 +
            (C3590 + C3591) * C1974 + (C3592 + C3593) * C1971) *
               C2175) *
              C50843 * C50972 +
          (((C3132 + C3131) * C1973 -
            ((C2388 + C2387) * C51019 + (C2386 + C2385) * C1972) +
            (C3134 + C3133) * C51020 - (C3587 + C3586) * C1974 -
            (C3589 + C3588) * C1971) *
               C2173 +
           ((C3136 + C3135) * C1973 -
            ((C2392 + C2391) * C51019 + (C2390 + C2389) * C1972) +
            (C3138 + C3137) * C51020 - (C3591 + C3590) * C1974 -
            (C3593 + C3592) * C1971) *
               C2174 +
           ((C4103 + C4104) * C1973 - (C3399 * C51019 + C3400 * C1972) +
            (C4105 + C4106) * C51020 -
            (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                C1974 -
            (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                C1971) *
               C2175) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1972 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51019 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1973 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C51020 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C1974 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C1971) *
              C50831 * C50843 * C50972 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C1973 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C51019 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C1972) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C51020 -
           (C120 * C1088 + C108 * C1092 + C119 * C1089 + C107 * C1093 +
            C118 * C1090 + C106 * C1094 + C117 * C1091 + C105 * C1095) *
               C1974 -
           (C120 * C1096 + C108 * C1100 + C119 * C1097 + C107 * C1101 +
            C118 * C1098 + C106 * C1102 + C117 * C1099 + C105 * C1103) *
               C1971) *
              C50831 * C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1972 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C51019 -
            (C5461 + C5462) * C1973 - (C5463 + C5464) * C51020 + C5485 * C1974 +
            C5486 * C1971) *
               C50831 * C5105 +
           ((C5462 + C5461) * C1972 + (C5464 + C5463) * C51019 -
            (C5466 + C5465) * C1973 - (C5468 + C5467) * C51020 +
            (C5469 + C5470) * C1974 + (C5471 + C5472) * C1971) *
               C50831 * C5106 +
           (C5485 * C1972 + C5486 * C51019 - C7311 * C1973 - C7312 * C51020 +
            (C7322 + C7321) * C1974 + (C7324 + C7323) * C1971) *
               C50831 * C5107) *
              C50972 +
          (((C3132 + C3131) * C1973 -
            ((C2388 + C2387) * C51019 + (C2386 + C2385) * C1972) +
            (C3134 + C3133) * C51020 - C6413 * C1974 - C6414 * C1971) *
               C50831 * C5105 +
           ((C3586 + C3587) * C1973 -
            ((C3133 + C3134) * C51019 + (C3131 + C3132) * C1972) +
            (C3588 + C3589) * C51020 - (C6423 + C6424) * C1974 -
            (C6425 + C6426) * C1971) *
               C50831 * C5106 +
           ((C6424 + C6423) * C1973 - (C6414 * C51019 + C6413 * C1972) +
            (C6426 + C6425) * C51020 -
            (C2177 * C6404 + C50691 * C6406 + C2176 * C6405 + C2171 * C6407) *
                C1974 -
            (C2177 * C6408 + C50691 * C6410 + C2176 * C6409 + C2171 * C6411) *
                C1971) *
               C50831 * C5107) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C1551 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C1549 -
               (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
                C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                   C1552 -
               (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
                C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                   C50809) *
                  C50831 * C50843 * C50730 * C900 +
              ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
                C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                   C1552 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C1549 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C1551) +
               (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
                C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                   C50809) *
                  C50831 * C50843 * C50730 * C901 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C1551 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C1549 -
               (C120 * C646 + C108 * C647 + C119 * C405 + C107 * C423 +
                C118 * C397 + C106 * C407 + C117 * C398 + C105 * C408) *
                   C1552 -
               (C120 * C648 + C108 * C649 + C119 * C424 + C107 * C435 +
                C118 * C411 + C106 * C427 + C117 * C412 + C105 * C428) *
                   C50809) *
                  C50831 * C50843 * C50730 * C902) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C1551 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C1549 -
               (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
                C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                   C1552 -
               (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
                C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                   C50809) *
                  C50831 * C50843 * C248 +
              ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
                C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                   C1552 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C1549 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C1551) +
               (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
                C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                   C50809) *
                  C50831 * C50843 * C249 +
              ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                   C1551 +
               (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                   C1549 -
               (C120 * C1435 + C108 * C1439 + C119 * C1436 + C107 * C1440 +
                C118 * C1437 + C106 * C1441 + C117 * C1438 + C105 * C1442) *
                   C1552 -
               (C120 * C1443 + C108 * C1447 + C119 * C1444 + C107 * C1448 +
                C118 * C1445 + C106 * C1449 + C117 * C1446 + C105 * C1450) *
                   C50809) *
                  C50831 * C50843 * C250) *
             C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C1721 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C1717 -
          (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 + C118 * C399 +
           C106 * C409 + C117 * C400 + C105 * C410) *
              C1722 -
          (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 + C118 * C413 +
           C106 * C429 + C117 * C414 + C105 * C430) *
              C1718 +
          (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 + C119 * C403 +
           C107 * C417 + C120 * C404 + C108 * C418) *
              C1723 +
          (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 + C119 * C421 +
           C107 * C433 + C120 * C422 + C108 * C434) *
              C1719 -
          (C120 * C1725 + C108 * C1729 + C119 * C1726 + C107 * C1730 +
           C118 * C1727 + C106 * C1731 + C117 * C1728 + C105 * C1732) *
              C1724 -
          (C120 * C1733 + C108 * C1737 + C119 * C1734 + C107 * C1738 +
           C118 * C1735 + C106 * C1739 + C117 * C1736 + C105 * C1740) *
              C1720) *
         C50831 * C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           (C2409 * C1551 + C2410 * C1549 - C4090 * C1552 - C4091 * C50809) *
               C2175) *
              C50843 * C50730 * C900 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C1552 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C1549 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1551) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C50809) *
               C2173 +
           ((C3139 + C3140) * C1552 -
            ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
            (C3141 + C3142) * C50809) *
               C2174 +
           ((C3143 + C3144) * C1552 - (C2411 * C1549 + C2412 * C1551) +
            (C3145 + C3146) * C50809) *
               C2175) *
              C50843 * C50730 * C901 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C1551 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C1549 -
            (C2177 * C397 + C50691 * C407 + C2176 * C398 + C2171 * C408) *
                C1552 -
            (C2177 * C411 + C50691 * C427 + C2176 * C412 + C2171 * C428) *
                C50809) *
               C2173 +
           ((C2739 + C2740) * C1551 + (C2741 + C2742) * C1549 -
            (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                C1552 -
            (C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                C50809) *
               C2174 +
           ((C2743 + C2744) * C1551 + (C2745 + C2746) * C1549 -
            (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                C1552 -
            (C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           C4407 * C2175) *
              C50843 * C248 +
          (((C3132 + C3131) * C1552 -
            ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
            (C3134 + C3133) * C50809) *
               C2173 +
           ((C3136 + C3135) * C1552 -
            ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
            (C3138 + C3137) * C50809) *
               C2174 +
           ((C4103 + C4104) * C1552 - (C3399 * C1549 + C3400 * C1551) +
            (C4105 + C4106) * C50809) *
               C2175) *
              C50843 * C249 +
          (C4407 * C2173 +
           ((C2396 + C2395) * C1551 + (C2394 + C2393) * C1549 -
            (C4104 + C4103) * C1552 - (C4106 + C4105) * C50809) *
               C2174 +
           ((C3411 + C3412) * C1551 + (C3413 + C3414) * C1549 -
            (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                C1552 -
            (C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                C50809) *
               C2175) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
               C1721 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
               C1717 -
           (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
               C1722 -
           (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
               C1718 +
           (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
               C1723 +
           (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
               C1719 -
           (C2177 * C1727 + C50691 * C1731 + C2176 * C1728 + C2171 * C1732) *
               C1724 -
           (C2177 * C1735 + C50691 * C1739 + C2176 * C1736 + C2171 * C1740) *
               C1720) *
              C2173 +
          ((C2385 + C2386) * C1721 + (C2387 + C2388) * C1717 -
           (C3131 + C3132) * C1722 - (C3133 + C3134) * C1718 +
           (C3586 + C3587) * C1723 + (C3588 + C3589) * C1719 -
           (C2177 * C4505 + C50691 * C4509 + C2176 * C4506 + C2171 * C4510) *
               C1724 -
           (C2177 * C4511 + C50691 * C4517 + C2176 * C4512 + C2171 * C4518) *
               C1720) *
              C2174 +
          (C2409 * C1721 + C2410 * C1717 - C4090 * C1722 - C4091 * C1718 +
           (C3590 + C3591) * C1723 + (C3592 + C3593) * C1719 -
           (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
               C1724 -
           (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
               C1720) *
              C2175) *
         C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
               C50831 * C5105 +
           ((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
            (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
               C50831 * C5106 +
           (C5485 * C1551 + C5486 * C1549 - (C5470 + C5469) * C1552 -
            (C5472 + C5471) * C50809) *
               C50831 * C5107) *
              C50730 * C900 +
          (((C5473 + C5474) * C1552 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C1549 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1551) +
            (C5475 + C5476) * C50809) *
               C50831 * C5105 +
           ((C5478 + C5477) * C1552 -
            ((C5476 + C5475) * C1549 + (C5474 + C5473) * C1551) +
            (C5480 + C5479) * C50809) *
               C50831 * C5106 +
           ((C5482 + C5481) * C1552 - (C5488 * C1549 + C5487 * C1551) +
            (C5484 + C5483) * C50809) *
               C50831 * C5107) *
              C50730 * C901 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C1551 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C1549 -
            (C5797 + C5798) * C1552 - (C5799 + C5800) * C50809) *
               C50831 * C5105 +
           ((C5798 + C5797) * C1551 + (C5800 + C5799) * C1549 -
            (C5801 + C5802) * C1552 - (C5803 + C5804) * C50809) *
               C50831 * C5106 +
           ((C5802 + C5801) * C1551 + (C5804 + C5803) * C1549 -
            (C2177 * C1725 + C50691 * C1729 + C2176 * C1726 + C2171 * C1730) *
                C1552 -
            (C2177 * C1733 + C50691 * C1737 + C2176 * C1734 + C2171 * C1738) *
                C50809) *
               C50831 * C5107) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
               C50831 * C5105 +
           ((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
            (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
               C50831 * C5106 +
           (C5485 * C1551 + C5486 * C1549 - (C5470 + C5469) * C1552 -
            (C5472 + C5471) * C50809) *
               C50831 * C5107) *
              C248 +
          (((C3132 + C3131) * C1552 -
            ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
            (C3134 + C3133) * C50809) *
               C50831 * C5105 +
           ((C3586 + C3587) * C1552 -
            ((C3133 + C3134) * C1549 + (C3131 + C3132) * C1551) +
            (C3588 + C3589) * C50809) *
               C50831 * C5106 +
           ((C6424 + C6423) * C1552 - (C6414 * C1549 + C6413 * C1551) +
            (C6426 + C6425) * C50809) *
               C50831 * C5107) *
              C249 +
          (C4407 * C50831 * C5105 +
           ((C3136 + C3135) * C1551 + (C3138 + C3137) * C1549 -
            (C3591 + C3590) * C1552 - (C3593 + C3592) * C50809) *
               C50831 * C5106 +
           ((C3590 + C3591) * C1551 + (C3592 + C3593) * C1549 -
            (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
                C1552 -
            (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
                C50809) *
               C50831 * C5107) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
               C1721 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
               C1717 -
           (C5461 + C5462) * C1722 - (C5463 + C5464) * C1718 + C5485 * C1723 +
           C5486 * C1719 - C7311 * C1724 - C7312 * C1720) *
              C50831 * C5105 +
          ((C5462 + C5461) * C1721 + (C5464 + C5463) * C1717 -
           (C5466 + C5465) * C1722 - (C5468 + C5467) * C1718 +
           (C5469 + C5470) * C1723 + (C5471 + C5472) * C1719 -
           (C7321 + C7322) * C1724 - (C7323 + C7324) * C1720) *
              C50831 * C5106 +
          (C5485 * C1721 + C5486 * C1717 - C7311 * C1722 - C7312 * C1718 +
           (C7322 + C7321) * C1723 + (C7324 + C7323) * C1719 -
           (C2177 * C7302 + C50691 * C7304 + C2176 * C7303 + C2171 * C7305) *
               C1724 -
           (C2177 * C7306 + C50691 * C7308 + C2176 * C7307 + C2171 * C7309) *
               C1720) *
              C50831 * C5107) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1972 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C51019 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1973 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C51020 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C1974 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C1971) *
               C2173 +
           ((C2385 + C2386) * C1972 + (C2387 + C2388) * C51019 -
            (C3131 + C3132) * C1973 - (C3133 + C3134) * C51020 +
            (C3586 + C3587) * C1974 + (C3588 + C3589) * C1971) *
               C2174 +
           (C2409 * C1972 + C2410 * C51019 - C4090 * C1973 - C4091 * C51020 +
            (C3590 + C3591) * C1974 + (C3592 + C3593) * C1971) *
               C2175) *
              C50843 * C50730 * C50964 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C1973 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C51019 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1972) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C51020 -
            (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                C1974 -
            (C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                C1971) *
               C2173 +
           ((C3139 + C3140) * C1973 -
            ((C2400 + C2399) * C51019 + (C2398 + C2397) * C1972) +
            (C3141 + C3142) * C51020 -
            (C2177 * C1089 + C50691 * C1093 + C2176 * C1090 + C2171 * C1094) *
                C1974 -
            (C2177 * C1097 + C50691 * C1101 + C2176 * C1098 + C2171 * C1102) *
                C1971) *
               C2174 +
           ((C3143 + C3144) * C1973 - (C2411 * C51019 + C2412 * C1972) +
            (C3145 + C3146) * C51020 -
            (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                C1974 -
            (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                C1971) *
               C2175) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1972 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51019 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1973 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C51020 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C1974 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C1971) *
              C50831 * C50843 * C50730 * C50964 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C1973 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C51019 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1972) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C51020 -
           (C120 * C406 + C108 * C425 + C119 * C404 + C107 * C418 +
            C118 * C403 + C106 * C417 + C117 * C402 + C105 * C416) *
               C1974 -
           (C120 * C426 + C108 * C436 + C119 * C422 + C107 * C434 +
            C118 * C421 + C106 * C433 + C117 * C420 + C105 * C432) *
               C1971) *
              C50831 * C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1972 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C51019 -
            (C5461 + C5462) * C1973 - (C5463 + C5464) * C51020 + C5485 * C1974 +
            C5486 * C1971) *
               C50831 * C5105 +
           ((C5462 + C5461) * C1972 + (C5464 + C5463) * C51019 -
            (C5466 + C5465) * C1973 - (C5468 + C5467) * C51020 +
            (C5469 + C5470) * C1974 + (C5471 + C5472) * C1971) *
               C50831 * C5106 +
           (C5485 * C1972 + C5486 * C51019 - C7311 * C1973 - C7312 * C51020 +
            (C7322 + C7321) * C1974 + (C7324 + C7323) * C1971) *
               C50831 * C5107) *
              C50730 * C50964 +
          (((C5473 + C5474) * C1973 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C51019 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1972) +
            (C5475 + C5476) * C51020 - C5487 * C1974 - C5488 * C1971) *
               C50831 * C5105 +
           ((C5478 + C5477) * C1973 -
            ((C5476 + C5475) * C51019 + (C5474 + C5473) * C1972) +
            (C5480 + C5479) * C51020 - (C5481 + C5482) * C1974 -
            (C5483 + C5484) * C1971) *
               C50831 * C5106 +
           ((C5482 + C5481) * C1973 - (C5488 * C51019 + C5487 * C1972) +
            (C5484 + C5483) * C51020 -
            (C2177 * C5402 + C50691 * C5407 + C2176 * C5401 + C2171 * C5404) *
                C1974 -
            (C2177 * C5408 + C50691 * C5411 + C2176 * C5406 + C2171 * C5410) *
                C1971) *
               C50831 * C5107) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1551 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1549 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1552 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C248 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C1552 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C1549 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C1551) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C50809) *
              C50831 * C50843 * C249 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C1551 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C1549 -
           (C120 * C1435 + C108 * C1439 + C119 * C1436 + C107 * C1440 +
            C118 * C1437 + C106 * C1441 + C117 * C1438 + C105 * C1442) *
               C1552 -
           (C120 * C1443 + C108 * C1447 + C119 * C1444 + C107 * C1448 +
            C118 * C1445 + C106 * C1449 + C117 * C1446 + C105 * C1450) *
               C50809) *
              C50831 * C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1551 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1549 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1552 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C50730 * C900 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C1552 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1549 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1551) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C50809) *
              C50831 * C50843 * C50730 * C901 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1551 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1549 -
           (C120 * C646 + C108 * C647 + C119 * C405 + C107 * C423 +
            C118 * C397 + C106 * C407 + C117 * C398 + C105 * C408) *
               C1552 -
           (C120 * C648 + C108 * C649 + C119 * C424 + C107 * C435 +
            C118 * C411 + C106 * C427 + C117 * C412 + C105 * C428) *
               C50809) *
              C50831 * C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           (C2409 * C1551 + C2410 * C1549 - C4090 * C1552 - C4091 * C50809) *
               C2175) *
              C50843 * C50730 * C900 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C1552 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C1549 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1551) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C50809) *
               C2173 +
           ((C3139 + C3140) * C1552 -
            ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
            (C3141 + C3142) * C50809) *
               C2174 +
           ((C3143 + C3144) * C1552 - (C2411 * C1549 + C2412 * C1551) +
            (C3145 + C3146) * C50809) *
               C2175) *
              C50843 * C50730 * C901 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C1551 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C1549 -
            (C2177 * C397 + C50691 * C407 + C2176 * C398 + C2171 * C408) *
                C1552 -
            (C2177 * C411 + C50691 * C427 + C2176 * C412 + C2171 * C428) *
                C50809) *
               C2173 +
           ((C2739 + C2740) * C1551 + (C2741 + C2742) * C1549 -
            (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                C1552 -
            (C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                C50809) *
               C2174 +
           ((C2743 + C2744) * C1551 + (C2745 + C2746) * C1549 -
            (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                C1552 -
            (C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           C4407 * C2175) *
              C50843 * C248 +
          (((C3132 + C3131) * C1552 -
            ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
            (C3134 + C3133) * C50809) *
               C2173 +
           ((C3136 + C3135) * C1552 -
            ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
            (C3138 + C3137) * C50809) *
               C2174 +
           ((C4103 + C4104) * C1552 - (C3399 * C1549 + C3400 * C1551) +
            (C4105 + C4106) * C50809) *
               C2175) *
              C50843 * C249 +
          (C4407 * C2173 +
           ((C2396 + C2395) * C1551 + (C2394 + C2393) * C1549 -
            (C4104 + C4103) * C1552 - (C4106 + C4105) * C50809) *
               C2174 +
           ((C3411 + C3412) * C1551 + (C3413 + C3414) * C1549 -
            (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                C1552 -
            (C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                C50809) *
               C2175) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
               C50831 * C5105 +
           ((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
            (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
               C50831 * C5106 +
           (C5485 * C1551 + C5486 * C1549 - (C5470 + C5469) * C1552 -
            (C5472 + C5471) * C50809) *
               C50831 * C5107) *
              C50730 * C900 +
          (((C5473 + C5474) * C1552 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C1549 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1551) +
            (C5475 + C5476) * C50809) *
               C50831 * C5105 +
           ((C5478 + C5477) * C1552 -
            ((C5476 + C5475) * C1549 + (C5474 + C5473) * C1551) +
            (C5480 + C5479) * C50809) *
               C50831 * C5106 +
           ((C5482 + C5481) * C1552 - (C5488 * C1549 + C5487 * C1551) +
            (C5484 + C5483) * C50809) *
               C50831 * C5107) *
              C50730 * C901 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C1551 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C1549 -
            (C5797 + C5798) * C1552 - (C5799 + C5800) * C50809) *
               C50831 * C5105 +
           ((C5798 + C5797) * C1551 + (C5800 + C5799) * C1549 -
            (C5801 + C5802) * C1552 - (C5803 + C5804) * C50809) *
               C50831 * C5106 +
           ((C5802 + C5801) * C1551 + (C5804 + C5803) * C1549 -
            (C2177 * C1725 + C50691 * C1729 + C2176 * C1726 + C2171 * C1730) *
                C1552 -
            (C2177 * C1733 + C50691 * C1737 + C2176 * C1734 + C2171 * C1738) *
                C50809) *
               C50831 * C5107) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C5461 + C5462) * C1552 - (C5463 + C5464) * C50809) *
               C50831 * C5105 +
           ((C5462 + C5461) * C1551 + (C5464 + C5463) * C1549 -
            (C5466 + C5465) * C1552 - (C5468 + C5467) * C50809) *
               C50831 * C5106 +
           (C5485 * C1551 + C5486 * C1549 - (C5470 + C5469) * C1552 -
            (C5472 + C5471) * C50809) *
               C50831 * C5107) *
              C248 +
          (((C3132 + C3131) * C1552 -
            ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
            (C3134 + C3133) * C50809) *
               C50831 * C5105 +
           ((C3586 + C3587) * C1552 -
            ((C3133 + C3134) * C1549 + (C3131 + C3132) * C1551) +
            (C3588 + C3589) * C50809) *
               C50831 * C5106 +
           ((C6424 + C6423) * C1552 - (C6414 * C1549 + C6413 * C1551) +
            (C6426 + C6425) * C50809) *
               C50831 * C5107) *
              C249 +
          (C4407 * C50831 * C5105 +
           ((C3136 + C3135) * C1551 + (C3138 + C3137) * C1549 -
            (C3591 + C3590) * C1552 - (C3593 + C3592) * C50809) *
               C50831 * C5106 +
           ((C3590 + C3591) * C1551 + (C3592 + C3593) * C1549 -
            (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
                C1552 -
            (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
                C50809) *
               C50831 * C5107) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                      C51014 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                      C51014 * C144 + C7915 * C135 + C7910 * C145) *
                         C50745) *
                        C50831 * C50986 +
                    ((C11069 + C11068 + C11067) * C121 +
                     (C11072 + C11071 + C11070) * C50745) *
                        C50831 * C50907) *
                       C50972 -
                   (((C8812 + C8813 + C8814) * C50745 +
                     (C8809 + C8810 + C8811) * C121) *
                        C50831 * C50907 +
                    ((C8116 + C8115 + C8114) * C50745 +
                     (C8113 + C8112 + C8111) * C121) *
                        C50831 * C50986) *
                       C50781) *
                      C51015 +
                  ((((C8123 + C8124 + C8125) * C121 +
                     (C8126 + C8127 + C8128) * C50745) *
                        C50831 * C50986 +
                    ((C8815 + C8816 + C8817) * C121 +
                     (C8818 + C8819 + C8820) * C50745) *
                        C50831 * C50907) *
                       C50781 -
                   (((C11084 + C11083 + C11082) * C50745 +
                     (C11081 + C11080 + C11079) * C121) *
                        C50831 * C50907 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C50745 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C121) *
                        C50831 * C50986) *
                       C50972) *
                      C51016 +
                  ((((C7913 * C124 + C51013 * C131 + C7914 * C125 +
                      C51014 * C132 + C7915 * C126 + C7910 * C138) *
                         C121 +
                     (C7913 * C135 + C51013 * C145 + C7914 * C136 +
                      C51014 * C146 + C7915 * C137 + C7910 * C147) *
                         C50745) *
                        C50831 * C50986 +
                    ((C7913 * C398 + C51013 * C408 + C7914 * C397 +
                      C51014 * C407 + C7915 * C405 + C7910 * C423) *
                         C121 +
                     (C7913 * C412 + C51013 * C428 + C7914 * C411 +
                      C51014 * C427 + C7915 * C424 + C7910 * C435) *
                         C50745) *
                        C50831 * C50907) *
                       C50972 -
                   (((C7915 * C794 + C7910 * C799 + C7914 * C792 +
                      C51014 * C798 + C7913 * C791 + C51013 * C797) *
                         C50745 +
                     (C7915 * C784 + C7910 * C793 + C7914 * C783 +
                      C51014 * C788 + C7913 * C782 + C51013 * C787) *
                         C121) *
                        C50831 * C50907 +
                    ((C8444 + C8443 + C8442) * C50745 +
                     (C8441 + C8440 + C8439) * C121) *
                        C50831 * C50986) *
                       C50781) *
                      C539)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C644 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50973 -
             (C11067 + C11068 + C11069) * C645 -
             (C11070 + C11071 + C11072) * C50809) *
                C50831 * C50986 +
            ((C11069 + C11068 + C11067) * C644 +
             (C11072 + C11071 + C11070) * C50973 -
             (C11075 + C11074 + C11073) * C645 -
             (C11078 + C11077 + C11076) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C8811 + C8810 + C8809) * C645 -
             ((C8116 + C8115 + C8114) * C50973 +
              (C8113 + C8112 + C8111) * C644) +
             (C8814 + C8813 + C8812) * C50809) *
                C50831 * C50986 +
            ((C9241 + C9242 + C9243) * C645 -
             ((C8812 + C8813 + C8814) * C50973 +
              (C8809 + C8810 + C8811) * C644) +
             (C9244 + C9245 + C9246) * C50809) *
                C50831 * C50907) *
               C50781) *
              C251 +
          ((((C11079 + C11080 + C11081) * C645 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
               C7913 * C134 + C51013 * C144) *
                  C50973 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
               C7913 * C123 + C51013 * C130) *
                  C644) +
             (C11082 + C11083 + C11084) * C50809) *
                C50831 * C50986 +
            ((C11087 + C11086 + C11085) * C645 -
             ((C11084 + C11083 + C11082) * C50973 +
              (C11081 + C11080 + C11079) * C644) +
             (C11090 + C11089 + C11088) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C8123 + C8124 + C8125) * C644 + (C8126 + C8127 + C8128) * C50973 -
             (C8817 + C8816 + C8815) * C645 -
             (C8820 + C8819 + C8818) * C50809) *
                C50831 * C50986 +
            ((C8815 + C8816 + C8817) * C644 + (C8818 + C8819 + C8820) * C50973 -
             (C7915 * C1088 + C7910 * C1092 + C7914 * C1089 + C51014 * C1093 +
              C7913 * C1090 + C51013 * C1094) *
                 C645 -
             (C7915 * C1096 + C7910 * C1100 + C7914 * C1097 + C51014 * C1101 +
              C7913 * C1098 + C51013 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                      C51014 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                      C51014 * C144 + C7915 * C135 + C7910 * C145) *
                         C50745) *
                        C50831 * C50986 +
                    ((C7913 * C400 + C51013 * C410 + C7914 * C399 +
                      C51014 * C409 + C7915 * C398 + C7910 * C408) *
                         C121 +
                     (C7913 * C414 + C51013 * C430 + C7914 * C413 +
                      C51014 * C429 + C7915 * C412 + C7910 * C428) *
                         C50745) *
                        C50831 * C50907) *
                       C248 -
                   (((C8812 + C8813 + C8814) * C50745 +
                     (C8809 + C8810 + C8811) * C121) *
                        C50831 * C50907 +
                    ((C8116 + C8115 + C8114) * C50745 +
                     (C8113 + C8112 + C8111) * C121) *
                        C50831 * C50986) *
                       C249 +
                   (((C8122 + C8121 + C8120) * C121 +
                     (C8119 + C8118 + C8117) * C50745) *
                        C50831 * C50986 +
                    ((C9745 + C9746 + C9747) * C121 +
                     (C9748 + C9749 + C9750) * C50745) *
                        C50831 * C50907) *
                       C250) *
                      C251 +
                  ((((C8123 + C8124 + C8125) * C121 +
                     (C8126 + C8127 + C8128) * C50745) *
                        C50831 * C50986 +
                    ((C8815 + C8816 + C8817) * C121 +
                     (C8818 + C8819 + C8820) * C50745) *
                        C50831 * C50907) *
                       C249 -
                   (((C7915 * C411 + C7910 * C427 + C7914 * C412 +
                      C51014 * C428 + C7913 * C413 + C51013 * C429) *
                         C50745 +
                     (C7915 * C397 + C7910 * C407 + C7914 * C398 +
                      C51014 * C408 + C7913 * C399 + C51013 * C409) *
                         C121) *
                        C50831 * C50907 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C50745 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C121) *
                        C50831 * C50986) *
                       C248 -
                   (((C7915 * C1443 + C7910 * C1447 + C7914 * C1444 +
                      C51014 * C1448 + C7913 * C1445 + C51013 * C1449) *
                         C50745 +
                     (C7915 * C1435 + C7910 * C1439 + C7914 * C1436 +
                      C51014 * C1440 + C7913 * C1437 + C51013 * C1441) *
                         C121) *
                        C50831 * C50907 +
                    ((C8134 + C8133 + C8132) * C50745 +
                     (C8131 + C8130 + C8129) * C121) *
                        C50831 * C50986) *
                       C250) *
                      C50718)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C50745) *
                       C50831 * C50986 +
                   ((C7913 * C400 + C51013 * C410 + C7914 * C399 +
                     C51014 * C409 + C7915 * C398 + C7910 * C408) *
                        C121 +
                    (C7913 * C414 + C51013 * C430 + C7914 * C413 +
                     C51014 * C429 + C7915 * C412 + C7910 * C428) *
                        C50745) *
                       C50831 * C50907) *
                      C50730 * C113 -
                  (((C7915 * C411 + C7910 * C427 + C7914 * C412 +
                     C51014 * C428 + C7913 * C413 + C51013 * C429) *
                        C50745 +
                    (C7915 * C397 + C7910 * C407 + C7914 * C398 +
                     C51014 * C408 + C7913 * C399 + C51013 * C409) *
                        C121) *
                       C50831 * C50907 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51014 * C145 + C7913 * C134 + C51013 * C144) *
                        C50745 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51014 * C131 + C7913 * C123 + C51013 * C130) *
                        C121) *
                       C50831 * C50986) *
                      C50730 * C114 +
                  (((C7913 * C124 + C51013 * C131 + C7914 * C125 +
                     C51014 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51013 * C145 + C7914 * C136 +
                     C51014 * C146 + C7915 * C137 + C7910 * C147) *
                        C50745) *
                       C50831 * C50986 +
                   ((C7913 * C398 + C51013 * C408 + C7914 * C397 +
                     C51014 * C407 + C7915 * C405 + C7910 * C423) *
                        C121 +
                    (C7913 * C412 + C51013 * C428 + C7914 * C411 +
                     C51014 * C427 + C7915 * C424 + C7910 * C435) *
                        C50745) *
                       C50831 * C50907) *
                      C50730 * C115 -
                  (((C7915 * C648 + C7910 * C649 + C7914 * C424 +
                     C51014 * C435 + C7913 * C411 + C51013 * C427) *
                        C50745 +
                    (C7915 * C646 + C7910 * C647 + C7914 * C405 +
                     C51014 * C423 + C7913 * C397 + C51013 * C407) *
                        C121) *
                       C50831 * C50907 +
                   ((C7915 * C140 + C7910 * C148 + C7914 * C137 +
                     C51014 * C147 + C7913 * C136 + C51013 * C146) *
                        C50745 +
                    (C7915 * C127 + C7910 * C139 + C7914 * C126 +
                     C51014 * C138 + C7913 * C125 + C51013 * C132) *
                        C121) *
                       C50831 * C50986) *
                      C50730 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C394 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C391 -
                    (C11067 + C11068 + C11069) * C395 -
                    (C11070 + C11071 + C11072) * C392 +
                    (C11073 + C11074 + C11075) * C396 +
                    (C11076 + C11077 + C11078) * C393) *
                       C50831 * C50986 +
                   ((C11069 + C11068 + C11067) * C394 +
                    (C11072 + C11071 + C11070) * C391 -
                    (C11075 + C11074 + C11073) * C395 -
                    (C11078 + C11077 + C11076) * C392 +
                    (C7913 * C1728 + C51013 * C1732 + C7914 * C1727 +
                     C51014 * C1731 + C7915 * C1726 + C7910 * C1730) *
                        C396 +
                    (C7913 * C1736 + C51013 * C1740 + C7914 * C1735 +
                     C51014 * C1739 + C7915 * C1734 + C7910 * C1738) *
                        C393) *
                       C50831 * C50907) *
                      C50730 * C251 +
                  (((C11079 + C11080 + C11081) * C395 -
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C391 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C394) +
                    (C11082 + C11083 + C11084) * C392 -
                    (C11085 + C11086 + C11087) * C396 -
                    (C11088 + C11089 + C11090) * C393) *
                       C50831 * C50986 +
                   ((C11087 + C11086 + C11085) * C395 -
                    ((C11084 + C11083 + C11082) * C391 +
                     (C11081 + C11080 + C11079) * C394) +
                    (C11090 + C11089 + C11088) * C392 -
                    (C7915 * C1725 + C7910 * C1729 + C7914 * C1726 +
                     C51014 * C1730 + C7913 * C1727 + C51013 * C1731) *
                        C396 -
                    (C7915 * C1733 + C7910 * C1737 + C7914 * C1734 +
                     C51014 * C1738 + C7913 * C1735 + C51013 * C1739) *
                        C393) *
                       C50831 * C50907) *
                      C50730 * C50718)) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C644 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C50973 -
                    (C11067 + C11068 + C11069) * C645 -
                    (C11070 + C11071 + C11072) * C50809) *
                       C50831 * C50986 +
                   ((C11069 + C11068 + C11067) * C644 +
                    (C11072 + C11071 + C11070) * C50973 -
                    (C11075 + C11074 + C11073) * C645 -
                    (C11078 + C11077 + C11076) * C50809) *
                       C50831 * C50907) *
                      C50730 * C51015 +
                  (((C11079 + C11080 + C11081) * C645 -
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C50973 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C644) +
                    (C11082 + C11083 + C11084) * C50809) *
                       C50831 * C50986 +
                   ((C11087 + C11086 + C11085) * C645 -
                    ((C11084 + C11083 + C11082) * C50973 +
                     (C11081 + C11080 + C11079) * C644) +
                    (C11090 + C11089 + C11088) * C50809) *
                       C50831 * C50907) *
                      C50730 * C51016 +
                  (((C7913 * C124 + C51013 * C131 + C7914 * C125 +
                     C51014 * C132 + C7915 * C126 + C7910 * C138) *
                        C644 +
                    (C7913 * C135 + C51013 * C145 + C7914 * C136 +
                     C51014 * C146 + C7915 * C137 + C7910 * C147) *
                        C50973 -
                    (C11395 + C11396 + C11397) * C645 -
                    (C11398 + C11399 + C11400) * C50809) *
                       C50831 * C50986 +
                   ((C11397 + C11396 + C11395) * C644 +
                    (C11400 + C11399 + C11398) * C50973 -
                    (C7915 * C406 + C7910 * C425 + C7914 * C404 +
                     C51014 * C418 + C7913 * C403 + C51013 * C417) *
                        C645 -
                    (C7915 * C426 + C7910 * C436 + C7914 * C422 +
                     C51014 * C434 + C7913 * C421 + C51013 * C433) *
                        C50809) *
                       C50831 * C50907) *
                      C50730 * C539)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C50745) *
                       C50831 * C50986 +
                   ((C7913 * C400 + C51013 * C410 + C7914 * C399 +
                     C51014 * C409 + C7915 * C398 + C7910 * C408) *
                        C121 +
                    (C7913 * C414 + C51013 * C430 + C7914 * C413 +
                     C51014 * C429 + C7915 * C412 + C7910 * C428) *
                        C50745) *
                       C50831 * C50907) *
                      C50730 * C113 -
                  (((C7915 * C411 + C7910 * C427 + C7914 * C412 +
                     C51014 * C428 + C7913 * C413 + C51013 * C429) *
                        C50745 +
                    (C7915 * C397 + C7910 * C407 + C7914 * C398 +
                     C51014 * C408 + C7913 * C399 + C51013 * C409) *
                        C121) *
                       C50831 * C50907 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51014 * C145 + C7913 * C134 + C51013 * C144) *
                        C50745 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51014 * C131 + C7913 * C123 + C51013 * C130) *
                        C121) *
                       C50831 * C50986) *
                      C50730 * C114 +
                  (((C7913 * C124 + C51013 * C131 + C7914 * C125 +
                     C51014 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51013 * C145 + C7914 * C136 +
                     C51014 * C146 + C7915 * C137 + C7910 * C147) *
                        C50745) *
                       C50831 * C50986 +
                   ((C7913 * C398 + C51013 * C408 + C7914 * C397 +
                     C51014 * C407 + C7915 * C405 + C7910 * C423) *
                        C121 +
                    (C7913 * C412 + C51013 * C428 + C7914 * C411 +
                     C51014 * C427 + C7915 * C424 + C7910 * C435) *
                        C50745) *
                       C50831 * C50907) *
                      C50730 * C115 -
                  (((C7915 * C648 + C7910 * C649 + C7914 * C424 +
                     C51014 * C435 + C7913 * C411 + C51013 * C427) *
                        C50745 +
                    (C7915 * C646 + C7910 * C647 + C7914 * C405 +
                     C51014 * C423 + C7913 * C397 + C51013 * C407) *
                        C121) *
                       C50831 * C50907 +
                   ((C7915 * C140 + C7910 * C148 + C7914 * C137 +
                     C51014 * C147 + C7913 * C136 + C51013 * C146) *
                        C50745 +
                    (C7915 * C127 + C7910 * C139 + C7914 * C126 +
                     C51014 * C138 + C7913 * C125 + C51013 * C132) *
                        C121) *
                       C50831 * C50986) *
                      C50730 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                      C51014 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                      C51014 * C144 + C7915 * C135 + C7910 * C145) *
                         C50745) *
                        C50831 * C50986 +
                    ((C7913 * C400 + C51013 * C410 + C7914 * C399 +
                      C51014 * C409 + C7915 * C398 + C7910 * C408) *
                         C121 +
                     (C7913 * C414 + C51013 * C430 + C7914 * C413 +
                      C51014 * C429 + C7915 * C412 + C7910 * C428) *
                         C50745) *
                        C50831 * C50907) *
                       C248 -
                   (((C8812 + C8813 + C8814) * C50745 +
                     (C8809 + C8810 + C8811) * C121) *
                        C50831 * C50907 +
                    ((C8116 + C8115 + C8114) * C50745 +
                     (C8113 + C8112 + C8111) * C121) *
                        C50831 * C50986) *
                       C249 +
                   (((C8122 + C8121 + C8120) * C121 +
                     (C8119 + C8118 + C8117) * C50745) *
                        C50831 * C50986 +
                    ((C9745 + C9746 + C9747) * C121 +
                     (C9748 + C9749 + C9750) * C50745) *
                        C50831 * C50907) *
                       C250) *
                      C251 +
                  ((((C8123 + C8124 + C8125) * C121 +
                     (C8126 + C8127 + C8128) * C50745) *
                        C50831 * C50986 +
                    ((C8815 + C8816 + C8817) * C121 +
                     (C8818 + C8819 + C8820) * C50745) *
                        C50831 * C50907) *
                       C249 -
                   (((C7915 * C411 + C7910 * C427 + C7914 * C412 +
                      C51014 * C428 + C7913 * C413 + C51013 * C429) *
                         C50745 +
                     (C7915 * C397 + C7910 * C407 + C7914 * C398 +
                      C51014 * C408 + C7913 * C399 + C51013 * C409) *
                         C121) *
                        C50831 * C50907 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C50745 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C121) *
                        C50831 * C50986) *
                       C248 -
                   (((C7915 * C1443 + C7910 * C1447 + C7914 * C1444 +
                      C51014 * C1448 + C7913 * C1445 + C51013 * C1449) *
                         C50745 +
                     (C7915 * C1435 + C7910 * C1439 + C7914 * C1436 +
                      C51014 * C1440 + C7913 * C1437 + C51013 * C1441) *
                         C121) *
                        C50831 * C50907 +
                    ((C8134 + C8133 + C8132) * C50745 +
                     (C8131 + C8130 + C8129) * C121) *
                        C50831 * C50986) *
                       C250) *
                      C50718)) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                      C51014 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                      C51014 * C144 + C7915 * C135 + C7910 * C145) *
                         C50745) *
                        C50831 * C50986 +
                    ((C11069 + C11068 + C11067) * C121 +
                     (C11072 + C11071 + C11070) * C50745) *
                        C50831 * C50907) *
                       C51017 -
                   (((C8812 + C8813 + C8814) * C50745 +
                     (C8809 + C8810 + C8811) * C121) *
                        C50831 * C50907 +
                    ((C8116 + C8115 + C8114) * C50745 +
                     (C8113 + C8112 + C8111) * C121) *
                        C50831 * C50986) *
                       C51018 +
                   (((C8122 + C8121 + C8120) * C121 +
                     (C8119 + C8118 + C8117) * C50745) *
                        C50831 * C50986 +
                    ((C9745 + C9746 + C9747) * C121 +
                     (C9748 + C9749 + C9750) * C50745) *
                        C50831 * C50907) *
                       C1204) *
                      C50964 +
                  ((((C8123 + C8124 + C8125) * C121 +
                     (C8126 + C8127 + C8128) * C50745) *
                        C50831 * C50986 +
                    ((C8815 + C8816 + C8817) * C121 +
                     (C8818 + C8819 + C8820) * C50745) *
                        C50831 * C50907) *
                       C51018 -
                   (((C11084 + C11083 + C11082) * C50745 +
                     (C11081 + C11080 + C11079) * C121) *
                        C50831 * C50907 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C50745 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C121) *
                        C50831 * C50986) *
                       C51017 -
                   (((C7915 * C1443 + C7910 * C1447 + C7914 * C1444 +
                      C51014 * C1448 + C7913 * C1445 + C51013 * C1449) *
                         C50745 +
                     (C7915 * C1435 + C7910 * C1439 + C7914 * C1436 +
                      C51014 * C1440 + C7913 * C1437 + C51013 * C1441) *
                         C121) *
                        C50831 * C50907 +
                    ((C8134 + C8133 + C8132) * C50745 +
                     (C8131 + C8130 + C8129) * C121) *
                        C50831 * C50986) *
                       C1204) *
                      C50718)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C644 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50973 -
            (C11067 + C11068 + C11069) * C645 -
            (C11070 + C11071 + C11072) * C50809) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C644 +
            (C11072 + C11071 + C11070) * C50973 -
            (C11075 + C11074 + C11073) * C645 -
            (C11078 + C11077 + C11076) * C50809) *
               C50831 * C50907) *
              C51017 +
          (((C8811 + C8810 + C8809) * C645 -
            ((C8116 + C8115 + C8114) * C50973 +
             (C8113 + C8112 + C8111) * C644) +
            (C8814 + C8813 + C8812) * C50809) *
               C50831 * C50986 +
           ((C9241 + C9242 + C9243) * C645 -
            ((C8812 + C8813 + C8814) * C50973 +
             (C8809 + C8810 + C8811) * C644) +
            (C9244 + C9245 + C9246) * C50809) *
               C50831 * C50907) *
              C51018 +
          (((C8122 + C8121 + C8120) * C644 + (C8119 + C8118 + C8117) * C50973 -
            (C9747 + C9746 + C9745) * C645 - (C9750 + C9749 + C9748) * C50809) *
               C50831 * C50986 +
           ((C9745 + C9746 + C9747) * C644 + (C9748 + C9749 + C9750) * C50973 -
            (C7915 * C2566 + C7910 * C2571 + C7914 * C2565 + C51014 * C2568 +
             C7913 * C2564 + C51013 * C2567) *
                C645 -
            (C7915 * C2572 + C7910 * C2575 + C7914 * C2570 + C51014 * C2574 +
             C7913 * C2569 + C51013 * C2573) *
                C50809) *
               C50831 * C50907) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50745) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C121 +
            (C11072 + C11071 + C11070) * C50745) *
               C50831 * C50907) *
              C969 -
          (((C8812 + C8813 + C8814) * C50745 + (C8809 + C8810 + C8811) * C121) *
               C50831 * C50907 +
           ((C8116 + C8115 + C8114) * C50745 + (C8113 + C8112 + C8111) * C121) *
               C50831 * C50986) *
              C970 +
          (((C8122 + C8121 + C8120) * C121 + (C8119 + C8118 + C8117) * C50745) *
               C50831 * C50986 +
           ((C9745 + C9746 + C9747) * C121 + (C9748 + C9749 + C9750) * C50745) *
               C50831 * C50907) *
              C971 -
          (((C7915 * C3094 + C7910 * C3097 + C7914 * C3092 + C51014 * C3096 +
             C7913 * C3091 + C51013 * C3095) *
                C50745 +
            (C7915 * C3088 + C7910 * C3093 + C7914 * C3087 + C51014 * C3090 +
             C7913 * C3086 + C51013 * C3089) *
                C121) *
               C50831 * C50907 +
           ((C9082 + C9081 + C9080) * C50745 + (C9079 + C9078 + C9077) * C121) *
               C50831 * C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50745) *
                C50831 * C50986 +
            ((C11069 + C11068 + C11067) * C121 +
             (C11072 + C11071 + C11070) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C8812 + C8813 + C8814) * C50745 +
             (C8809 + C8810 + C8811) * C121) *
                C50831 * C50907 +
            ((C8116 + C8115 + C8114) * C50745 +
             (C8113 + C8112 + C8111) * C121) *
                C50831 * C50986) *
               C50781) *
              C900 +
          ((((C8123 + C8124 + C8125) * C121 +
             (C8126 + C8127 + C8128) * C50745) *
                C50831 * C50986 +
            ((C8815 + C8816 + C8817) * C121 +
             (C8818 + C8819 + C8820) * C50745) *
                C50831 * C50907) *
               C50781 -
           (((C11084 + C11083 + C11082) * C50745 +
             (C11081 + C11080 + C11079) * C121) *
                C50831 * C50907 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C50745 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C121) *
                C50831 * C50986) *
               C898) *
              C901 +
          ((((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50745) *
                C50831 * C50986 +
            ((C11397 + C11396 + C11395) * C121 +
             (C11400 + C11399 + C11398) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C7915 * C794 + C7910 * C799 + C7914 * C792 + C51014 * C798 +
              C7913 * C791 + C51013 * C797) *
                 C50745 +
             (C7915 * C784 + C7910 * C793 + C7914 * C783 + C51014 * C788 +
              C7913 * C782 + C51013 * C787) *
                 C121) *
                C50831 * C50907 +
            ((C8444 + C8443 + C8442) * C50745 +
             (C8441 + C8440 + C8439) * C121) *
                C50831 * C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C394 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C391 -
            (C11067 + C11068 + C11069) * C395 -
            (C11070 + C11071 + C11072) * C392 +
            (C11073 + C11074 + C11075) * C396 +
            (C11076 + C11077 + C11078) * C393) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C394 +
            (C11072 + C11071 + C11070) * C391 -
            (C11075 + C11074 + C11073) * C395 -
            (C11078 + C11077 + C11076) * C392 +
            (C7913 * C1728 + C51013 * C1732 + C7914 * C1727 + C51014 * C1731 +
             C7915 * C1726 + C7910 * C1730) *
                C396 +
            (C7913 * C1736 + C51013 * C1740 + C7914 * C1735 + C51014 * C1739 +
             C7915 * C1734 + C7910 * C1738) *
                C393) *
               C50831 * C50907) *
              C898 +
          (((C8811 + C8810 + C8809) * C395 -
            ((C8116 + C8115 + C8114) * C391 + (C8113 + C8112 + C8111) * C394) +
            (C8814 + C8813 + C8812) * C392 - (C9243 + C9242 + C9241) * C396 -
            (C9246 + C9245 + C9244) * C393) *
               C50831 * C50986 +
           ((C9241 + C9242 + C9243) * C395 -
            ((C8812 + C8813 + C8814) * C391 + (C8809 + C8810 + C8811) * C394) +
            (C9244 + C9245 + C9246) * C392 -
            (C7915 * C5998 + C7910 * C5999 + C7914 * C4505 + C51014 * C4509 +
             C7913 * C4506 + C51013 * C4510) *
                C396 -
            (C7915 * C6000 + C7910 * C6001 + C7914 * C4511 + C51014 * C4517 +
             C7913 * C4512 + C51013 * C4518) *
                C393) *
               C50831 * C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C644 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50973 -
             (C11067 + C11068 + C11069) * C645 -
             (C11070 + C11071 + C11072) * C50809) *
                C50831 * C50986 +
            ((C11069 + C11068 + C11067) * C644 +
             (C11072 + C11071 + C11070) * C50973 -
             (C11075 + C11074 + C11073) * C645 -
             (C11078 + C11077 + C11076) * C50809) *
                C50831 * C50907) *
               C898 +
           (((C8811 + C8810 + C8809) * C645 -
             ((C8116 + C8115 + C8114) * C50973 +
              (C8113 + C8112 + C8111) * C644) +
             (C8814 + C8813 + C8812) * C50809) *
                C50831 * C50986 +
            ((C9241 + C9242 + C9243) * C645 -
             ((C8812 + C8813 + C8814) * C50973 +
              (C8809 + C8810 + C8811) * C644) +
             (C9244 + C9245 + C9246) * C50809) *
                C50831 * C50907) *
               C50781) *
              C50964 +
          ((((C11079 + C11080 + C11081) * C645 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
               C7913 * C134 + C51013 * C144) *
                  C50973 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
               C7913 * C123 + C51013 * C130) *
                  C644) +
             (C11082 + C11083 + C11084) * C50809) *
                C50831 * C50986 +
            ((C11087 + C11086 + C11085) * C645 -
             ((C11084 + C11083 + C11082) * C50973 +
              (C11081 + C11080 + C11079) * C644) +
             (C11090 + C11089 + C11088) * C50809) *
                C50831 * C50907) *
               C898 +
           (((C8123 + C8124 + C8125) * C644 + (C8126 + C8127 + C8128) * C50973 -
             (C8817 + C8816 + C8815) * C645 -
             (C8820 + C8819 + C8818) * C50809) *
                C50831 * C50986 +
            ((C8815 + C8816 + C8817) * C644 + (C8818 + C8819 + C8820) * C50973 -
             (C7915 * C1088 + C7910 * C1092 + C7914 * C1089 + C51014 * C1093 +
              C7913 * C1090 + C51013 * C1094) *
                 C645 -
             (C7915 * C1096 + C7910 * C1100 + C7914 * C1097 + C51014 * C1101 +
              C7913 * C1098 + C51013 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50745) *
                C50831 * C50986 +
            ((C11069 + C11068 + C11067) * C121 +
             (C11072 + C11071 + C11070) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C8812 + C8813 + C8814) * C50745 +
             (C8809 + C8810 + C8811) * C121) *
                C50831 * C50907 +
            ((C8116 + C8115 + C8114) * C50745 +
             (C8113 + C8112 + C8111) * C121) *
                C50831 * C50986) *
               C50781) *
              C900 +
          ((((C8123 + C8124 + C8125) * C121 +
             (C8126 + C8127 + C8128) * C50745) *
                C50831 * C50986 +
            ((C8815 + C8816 + C8817) * C121 +
             (C8818 + C8819 + C8820) * C50745) *
                C50831 * C50907) *
               C50781 -
           (((C11084 + C11083 + C11082) * C50745 +
             (C11081 + C11080 + C11079) * C121) *
                C50831 * C50907 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C50745 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C121) *
                C50831 * C50986) *
               C898) *
              C901 +
          ((((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50745) *
                C50831 * C50986 +
            ((C11397 + C11396 + C11395) * C121 +
             (C11400 + C11399 + C11398) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C7915 * C794 + C7910 * C799 + C7914 * C792 + C51014 * C798 +
              C7913 * C791 + C51013 * C797) *
                 C50745 +
             (C7915 * C784 + C7910 * C793 + C7914 * C783 + C51014 * C788 +
              C7913 * C782 + C51013 * C787) *
                 C121) *
                C50831 * C50907 +
            ((C8444 + C8443 + C8442) * C50745 +
             (C8441 + C8440 + C8439) * C121) *
                C50831 * C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50745) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C121 +
            (C11072 + C11071 + C11070) * C50745) *
               C50831 * C50907) *
              C969 -
          (((C8812 + C8813 + C8814) * C50745 + (C8809 + C8810 + C8811) * C121) *
               C50831 * C50907 +
           ((C8116 + C8115 + C8114) * C50745 + (C8113 + C8112 + C8111) * C121) *
               C50831 * C50986) *
              C970 +
          (((C8122 + C8121 + C8120) * C121 + (C8119 + C8118 + C8117) * C50745) *
               C50831 * C50986 +
           ((C9745 + C9746 + C9747) * C121 + (C9748 + C9749 + C9750) * C50745) *
               C50831 * C50907) *
              C971 -
          (((C7915 * C3094 + C7910 * C3097 + C7914 * C3092 + C51014 * C3096 +
             C7913 * C3091 + C51013 * C3095) *
                C50745 +
            (C7915 * C3088 + C7910 * C3093 + C7914 * C3087 + C51014 * C3090 +
             C7913 * C3086 + C51013 * C3089) *
                C121) *
               C50831 * C50907 +
           ((C9082 + C9081 + C9080) * C50745 + (C9079 + C9078 + C9077) * C121) *
               C50831 * C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C1551 +
             (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C1549 -
             (C11067 + C11068 + C11069) * C1552 -
             (C11070 + C11071 + C11072) * C50809) *
                C50831 * C50986 +
            ((C11069 + C11068 + C11067) * C1551 +
             (C11072 + C11071 + C11070) * C1549 -
             (C11075 + C11074 + C11073) * C1552 -
             (C11078 + C11077 + C11076) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C8811 + C8810 + C8809) * C1552 -
             ((C8116 + C8115 + C8114) * C1549 +
              (C8113 + C8112 + C8111) * C1551) +
             (C8814 + C8813 + C8812) * C50809) *
                C50831 * C50986 +
            ((C9241 + C9242 + C9243) * C1552 -
             ((C8812 + C8813 + C8814) * C1549 +
              (C8809 + C8810 + C8811) * C1551) +
             (C9244 + C9245 + C9246) * C50809) *
                C50831 * C50907) *
               C50781) *
              C50964 +
          ((((C11079 + C11080 + C11081) * C1552 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
               C7913 * C134 + C51013 * C144) *
                  C1549 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
               C7913 * C123 + C51013 * C130) *
                  C1551) +
             (C11082 + C11083 + C11084) * C50809) *
                C50831 * C50986 +
            ((C11087 + C11086 + C11085) * C1552 -
             ((C11084 + C11083 + C11082) * C1549 +
              (C11081 + C11080 + C11079) * C1551) +
             (C11090 + C11089 + C11088) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C8123 + C8124 + C8125) * C1551 + (C8126 + C8127 + C8128) * C1549 -
             (C8817 + C8816 + C8815) * C1552 -
             (C8820 + C8819 + C8818) * C50809) *
                C50831 * C50986 +
            ((C8815 + C8816 + C8817) * C1551 + (C8818 + C8819 + C8820) * C1549 -
             (C7915 * C1088 + C7910 * C1092 + C7914 * C1089 + C51014 * C1093 +
              C7913 * C1090 + C51013 * C1094) *
                 C1552 -
             (C7915 * C1096 + C7910 * C1100 + C7914 * C1097 + C51014 * C1101 +
              C7913 * C1098 + C51013 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1972 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C51019 -
            (C11067 + C11068 + C11069) * C1973 -
            (C11070 + C11071 + C11072) * C51020 +
            (C11073 + C11074 + C11075) * C1974 +
            (C11076 + C11077 + C11078) * C1971) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C1972 +
            (C11072 + C11071 + C11070) * C51019 -
            (C11075 + C11074 + C11073) * C1973 -
            (C11078 + C11077 + C11076) * C51020 +
            (C12875 + C12874 + C12873) * C1974 +
            (C12878 + C12877 + C12876) * C1971) *
               C50831 * C50907) *
              C50972 +
          (((C8811 + C8810 + C8809) * C1973 -
            ((C8116 + C8115 + C8114) * C51019 +
             (C8113 + C8112 + C8111) * C1972) +
            (C8814 + C8813 + C8812) * C51020 - (C9243 + C9242 + C9241) * C1974 -
            (C9246 + C9245 + C9244) * C1971) *
               C50831 * C50986 +
           ((C9241 + C9242 + C9243) * C1973 -
            ((C8812 + C8813 + C8814) * C51019 +
             (C8809 + C8810 + C8811) * C1972) +
            (C9244 + C9245 + C9246) * C51020 -
            (C7915 * C5998 + C7910 * C5999 + C7914 * C4505 + C51014 * C4509 +
             C7913 * C4506 + C51013 * C4510) *
                C1974 -
            (C7915 * C6000 + C7910 * C6001 + C7914 * C4511 + C51014 * C4517 +
             C7913 * C4512 + C51013 * C4518) *
                C1971) *
               C50831 * C50907) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C11067 + C11068 + C11069) * C1552 -
            (C11070 + C11071 + C11072) * C50809) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C1551 +
            (C11072 + C11071 + C11070) * C1549 -
            (C11075 + C11074 + C11073) * C1552 -
            (C11078 + C11077 + C11076) * C50809) *
               C50831 * C50907) *
              C248 +
          (((C8811 + C8810 + C8809) * C1552 -
            ((C8116 + C8115 + C8114) * C1549 +
             (C8113 + C8112 + C8111) * C1551) +
            (C8814 + C8813 + C8812) * C50809) *
               C50831 * C50986 +
           ((C9241 + C9242 + C9243) * C1552 -
            ((C8812 + C8813 + C8814) * C1549 +
             (C8809 + C8810 + C8811) * C1551) +
            (C9244 + C9245 + C9246) * C50809) *
               C50831 * C50907) *
              C249 +
          (((C8122 + C8121 + C8120) * C1551 + (C8119 + C8118 + C8117) * C1549 -
            (C9747 + C9746 + C9745) * C1552 -
            (C9750 + C9749 + C9748) * C50809) *
               C50831 * C50986 +
           ((C9745 + C9746 + C9747) * C1551 + (C9748 + C9749 + C9750) * C1549 -
            (C7915 * C2566 + C7910 * C2571 + C7914 * C2565 + C51014 * C2568 +
             C7913 * C2564 + C51013 * C2567) *
                C1552 -
            (C7915 * C2572 + C7910 * C2575 + C7914 * C2570 + C51014 * C2574 +
             C7913 * C2569 + C51013 * C2573) *
                C50809) *
               C50831 * C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C11067 + C11068 + C11069) * C1552 -
            (C11070 + C11071 + C11072) * C50809) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C1551 +
            (C11072 + C11071 + C11070) * C1549 -
            (C11075 + C11074 + C11073) * C1552 -
            (C11078 + C11077 + C11076) * C50809) *
               C50831 * C50907) *
              C50730 * C900 +
          (((C11079 + C11080 + C11081) * C1552 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C1549 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C1551) +
            (C11082 + C11083 + C11084) * C50809) *
               C50831 * C50986 +
           ((C11087 + C11086 + C11085) * C1552 -
            ((C11084 + C11083 + C11082) * C1549 +
             (C11081 + C11080 + C11079) * C1551) +
            (C11090 + C11089 + C11088) * C50809) *
               C50831 * C50907) *
              C50730 * C901 +
          (((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
             C7915 * C126 + C7910 * C138) *
                C1551 +
            (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
             C7915 * C137 + C7910 * C147) *
                C1549 -
            (C11395 + C11396 + C11397) * C1552 -
            (C11398 + C11399 + C11400) * C50809) *
               C50831 * C50986 +
           ((C11397 + C11396 + C11395) * C1551 +
            (C11400 + C11399 + C11398) * C1549 -
            (C7915 * C406 + C7910 * C425 + C7914 * C404 + C51014 * C418 +
             C7913 * C403 + C51013 * C417) *
                C1552 -
            (C7915 * C426 + C7910 * C436 + C7914 * C422 + C51014 * C434 +
             C7913 * C421 + C51013 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
            C7915 * C124 + C7910 * C131) *
               C1721 +
           (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
            C7915 * C135 + C7910 * C145) *
               C1717 -
           (C11067 + C11068 + C11069) * C1722 -
           (C11070 + C11071 + C11072) * C1718 +
           (C11073 + C11074 + C11075) * C1723 +
           (C11076 + C11077 + C11078) * C1719 -
           (C12873 + C12874 + C12875) * C1724 -
           (C12876 + C12877 + C12878) * C1720) *
              C50831 * C50986 +
          ((C11069 + C11068 + C11067) * C1721 +
           (C11072 + C11071 + C11070) * C1717 -
           (C11075 + C11074 + C11073) * C1722 -
           (C11078 + C11077 + C11076) * C1718 +
           (C12875 + C12874 + C12873) * C1723 +
           (C12878 + C12877 + C12876) * C1719 -
           (C7915 * C5402 + C7910 * C5407 + C7914 * C5401 + C51014 * C5404 +
            C7913 * C5400 + C51013 * C5403) *
               C1724 -
           (C7915 * C5408 + C7910 * C5411 + C7914 * C5406 + C51014 * C5410 +
            C7913 * C5405 + C51013 * C5409) *
               C1720) *
              C50831 * C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51013 * C129 + C7914 * C123 +
                     C51014 * C130 + C7915 * C124 + C7910 * C131) *
                        C1972 +
                    (C7913 * C133 + C51013 * C143 + C7914 * C134 +
                     C51014 * C144 + C7915 * C135 + C7910 * C145) *
                        C51019 -
                    (C11067 + C11068 + C11069) * C1973 -
                    (C11070 + C11071 + C11072) * C51020 +
                    (C11073 + C11074 + C11075) * C1974 +
                    (C11076 + C11077 + C11078) * C1971) *
                       C50831 * C50986 +
                   ((C11069 + C11068 + C11067) * C1972 +
                    (C11072 + C11071 + C11070) * C51019 -
                    (C11075 + C11074 + C11073) * C1973 -
                    (C11078 + C11077 + C11076) * C51020 +
                    (C12875 + C12874 + C12873) * C1974 +
                    (C12878 + C12877 + C12876) * C1971) *
                       C50831 * C50907) *
                      C50730 * C50964 +
                  (((C11079 + C11080 + C11081) * C1973 -
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51014 * C145 + C7913 * C134 + C51013 * C144) *
                         C51019 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51014 * C131 + C7913 * C123 + C51013 * C130) *
                         C1972) +
                    (C11082 + C11083 + C11084) * C51020 -
                    (C11085 + C11086 + C11087) * C1974 -
                    (C11088 + C11089 + C11090) * C1971) *
                       C50831 * C50986 +
                   ((C11087 + C11086 + C11085) * C1973 -
                    ((C11084 + C11083 + C11082) * C51019 +
                     (C11081 + C11080 + C11079) * C1972) +
                    (C11090 + C11089 + C11088) * C51020 -
                    (C7915 * C1725 + C7910 * C1729 + C7914 * C1726 +
                     C51014 * C1730 + C7913 * C1727 + C51013 * C1731) *
                        C1974 -
                    (C7915 * C1733 + C7910 * C1737 + C7914 * C1734 +
                     C51014 * C1738 + C7913 * C1735 + C51013 * C1739) *
                        C1971) *
                       C50831 * C50907) *
                      C50730 * C50718)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C11067 + C11068 + C11069) * C1552 -
            (C11070 + C11071 + C11072) * C50809) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C1551 +
            (C11072 + C11071 + C11070) * C1549 -
            (C11075 + C11074 + C11073) * C1552 -
            (C11078 + C11077 + C11076) * C50809) *
               C50831 * C50907) *
              C50730 * C900 +
          (((C11079 + C11080 + C11081) * C1552 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51014 * C145 +
              C7913 * C134 + C51013 * C144) *
                 C1549 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51014 * C131 +
              C7913 * C123 + C51013 * C130) *
                 C1551) +
            (C11082 + C11083 + C11084) * C50809) *
               C50831 * C50986 +
           ((C11087 + C11086 + C11085) * C1552 -
            ((C11084 + C11083 + C11082) * C1549 +
             (C11081 + C11080 + C11079) * C1551) +
            (C11090 + C11089 + C11088) * C50809) *
               C50831 * C50907) *
              C50730 * C901 +
          (((C7913 * C124 + C51013 * C131 + C7914 * C125 + C51014 * C132 +
             C7915 * C126 + C7910 * C138) *
                C1551 +
            (C7913 * C135 + C51013 * C145 + C7914 * C136 + C51014 * C146 +
             C7915 * C137 + C7910 * C147) *
                C1549 -
            (C11395 + C11396 + C11397) * C1552 -
            (C11398 + C11399 + C11400) * C50809) *
               C50831 * C50986 +
           ((C11397 + C11396 + C11395) * C1551 +
            (C11400 + C11399 + C11398) * C1549 -
            (C7915 * C406 + C7910 * C425 + C7914 * C404 + C51014 * C418 +
             C7913 * C403 + C51013 * C417) *
                C1552 -
            (C7915 * C426 + C7910 * C436 + C7914 * C422 + C51014 * C434 +
             C7913 * C421 + C51013 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51013 * C129 + C7914 * C123 + C51014 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1551 +
            (C7913 * C133 + C51013 * C143 + C7914 * C134 + C51014 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1549 -
            (C11067 + C11068 + C11069) * C1552 -
            (C11070 + C11071 + C11072) * C50809) *
               C50831 * C50986 +
           ((C11069 + C11068 + C11067) * C1551 +
            (C11072 + C11071 + C11070) * C1549 -
            (C11075 + C11074 + C11073) * C1552 -
            (C11078 + C11077 + C11076) * C50809) *
               C50831 * C50907) *
              C248 +
          (((C8811 + C8810 + C8809) * C1552 -
            ((C8116 + C8115 + C8114) * C1549 +
             (C8113 + C8112 + C8111) * C1551) +
            (C8814 + C8813 + C8812) * C50809) *
               C50831 * C50986 +
           ((C9241 + C9242 + C9243) * C1552 -
            ((C8812 + C8813 + C8814) * C1549 +
             (C8809 + C8810 + C8811) * C1551) +
            (C9244 + C9245 + C9246) * C50809) *
               C50831 * C50907) *
              C249 +
          (((C8122 + C8121 + C8120) * C1551 + (C8119 + C8118 + C8117) * C1549 -
            (C9747 + C9746 + C9745) * C1552 -
            (C9750 + C9749 + C9748) * C50809) *
               C50831 * C50986 +
           ((C9745 + C9746 + C9747) * C1551 + (C9748 + C9749 + C9750) * C1549 -
            (C7915 * C2566 + C7910 * C2571 + C7914 * C2565 + C51014 * C2568 +
             C7913 * C2564 + C51013 * C2567) *
                C1552 -
            (C7915 * C2572 + C7910 * C2575 + C7914 * C2570 + C51014 * C2574 +
             C7913 * C2569 + C51013 * C2573) *
                C50809) *
               C50831 * C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C50972 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C50781) *
              C51015 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C50781 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C50972) *
              C51016 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50745) *
               C50831 * C50843 * C50972 -
           ((C120 * C541 + C108 * C543 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50745 +
            (C120 * C540 + C108 * C542 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50831 * C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C50972 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C50781) *
              C51015 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C50781 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C50972) *
              C51016 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C2173 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C2174 +
            ((C2743 + C2744) * C121 + (C2745 + C2746) * C50745) * C2175) *
               C50843 * C50972 -
           (((C2177 * C978 + C50691 * C986 + C2176 * C979 + C2171 * C987) *
                 C50745 +
             (C2177 * C974 + C50691 * C982 + C2176 * C975 + C2171 * C983) *
                 C121) *
                C2175 +
            ((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C2174 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C2173) *
               C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C644 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50973 -
            (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
             C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                C645 -
            (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
             C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
             C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                C645 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50973 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C644) +
            (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
             C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                C50809) *
               C50831 * C50843 * C50781) *
              C251 +
          (((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
             C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                C645 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50973 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C644) +
            (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
             C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C644 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50973 -
            (C120 * C784 + C108 * C793 + C119 * C783 + C107 * C788 +
             C118 * C782 + C106 * C787 + C117 * C781 + C105 * C786) *
                C645 -
            (C120 * C794 + C108 * C799 + C119 * C792 + C107 * C798 +
             C118 * C791 + C106 * C797 + C117 * C790 + C105 * C796) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                 C645 -
             (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                 C50809) *
                C2173 +
            ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
             (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
                C2174 +
            (C2409 * C644 + C2410 * C50973 - (C3135 + C3136) * C645 -
             (C3137 + C3138) * C50809) *
                C2175) *
               C50843 * C50972 +
           (((C3132 + C3131) * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             (C3134 + C3133) * C50809) *
                C2173 +
            ((C3136 + C3135) * C645 -
             ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
             (C3138 + C3137) * C50809) *
                C2174 +
            ((C2176 * C3086 + C2171 * C3089 + C2177 * C3087 + C50691 * C3090) *
                 C645 -
             ((C2393 + C2394) * C50973 + (C2395 + C2396) * C644) +
             (C2176 * C3091 + C2171 * C3095 + C2177 * C3092 + C50691 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C251 +
          ((((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                 C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                 C50809) *
                C2173 +
            ((C3139 + C3140) * C645 -
             ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
             (C3141 + C3142) * C50809) *
                C2174 +
            ((C3143 + C3144) * C645 - (C2411 * C50973 + C2412 * C644) +
             (C3145 + C3146) * C50809) *
                C2175) *
               C50843 * C50972 +
           (((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
             (C3140 + C3139) * C645 - (C3142 + C3141) * C50809) *
                C2173 +
            ((C2401 + C2402) * C644 + (C2403 + C2404) * C50973 -
             (C3144 + C3143) * C645 - (C3146 + C3145) * C50809) *
                C2174 +
            ((C2405 + C2406) * C644 + (C2407 + C2408) * C50973 -
             (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                 C645 -
             (C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50745) *
               C50831 * C50843 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50745 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50831 * C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50745) *
              C50831 * C50843 * C50730 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50745 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50831 * C50843 * C50730 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50745) *
              C50831 * C50843 * C50730 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50745 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50831 * C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C394 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C391 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C395 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C392 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C396 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C393) *
              C50831 * C50843 * C50730 * C251 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C395 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C391 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C394) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C392 -
           (C120 * C406 + C108 * C425 + C119 * C404 + C107 * C418 +
            C118 * C403 + C106 * C417 + C117 * C402 + C105 * C416) *
               C396 -
           (C120 * C426 + C108 * C436 + C119 * C422 + C107 * C434 +
            C118 * C421 + C106 * C433 + C117 * C420 + C105 * C432) *
               C393) *
              C50831 * C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2176 * C256 + C2171 * C270 + C2177 * C255 + C50691 * C269) *
                C121 +
            (C2176 * C266 + C2171 * C286 + C2177 * C265 + C50691 * C285) *
                C50745) *
               C2174 +
           ((C2176 * C257 + C2171 * C271 + C2177 * C258 + C50691 * C272) *
                C121 +
            (C2176 * C275 + C2171 * C287 + C2177 * C276 + C50691 * C288) *
                C50745) *
               C2175) *
              C50843 * C50730 * C113 -
          (((C2177 * C277 + C50691 * C289 + C2176 * C276 + C2171 * C288) *
                C50745 +
            (C2177 * C259 + C50691 * C273 + C2176 * C258 + C2171 * C272) *
                C121) *
               C2175 +
           ((C2177 * C264 + C50691 * C284 + C2176 * C265 + C2171 * C285) *
                C50745 +
            (C2177 * C254 + C50691 * C268 + C2176 * C255 + C2171 * C269) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                C50745 +
            (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50843 * C50730 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50745) *
               C2173 +
           ((C2176 * C254 + C2171 * C268 + C2177 * C253 + C50691 * C267) *
                C121 +
            (C2176 * C264 + C2171 * C284 + C2177 * C263 + C50691 * C283) *
                C50745) *
               C2174 +
           ((C2176 * C259 + C2171 * C273 + C2177 * C260 + C50691 * C274) *
                C121 +
            (C2176 * C277 + C2171 * C289 + C2177 * C278 + C50691 * C290) *
                C50745) *
               C2175) *
              C50843 * C50730 * C115 -
          (((C2177 * C281 + C50691 * C292 + C2176 * C278 + C2171 * C290) *
                C50745 +
            (C2177 * C262 + C50691 * C282 + C2176 * C260 + C2171 * C274) *
                C121) *
               C2175 +
           ((C2177 * C280 + C50691 * C291 + C2176 * C263 + C2171 * C283) *
                C50745 +
            (C2177 * C261 + C50691 * C279 + C2176 * C253 + C2171 * C267) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                C50745 +
            (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C248 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C249 +
           (C2417 * C2173 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
            ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50691 * C2328) *
                 C121 +
             (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50691 * C2334) *
                 C50745) *
                C2175) *
               C50843 * C250) *
              C251 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C249 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C248 -
           (((C2177 * C2331 + C50691 * C2335 + C2176 * C2330 + C2171 * C2334) *
                 C50745 +
             (C2177 * C2326 + C50691 * C2332 + C2176 * C2325 + C2171 * C2328) *
                 C121) *
                C2175 +
            ((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C2174 +
            C2418 * C2173) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C394 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C391 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C395 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C392 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C396 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C393) *
               C2173 +
           ((C2385 + C2386) * C394 + (C2387 + C2388) * C391 -
            (C2177 * C781 + C50691 * C786 + C2176 * C780 + C2171 * C785) *
                C395 -
            (C2177 * C790 + C50691 * C796 + C2176 * C789 + C2171 * C795) *
                C392 +
            (C2176 * C1091 + C2171 * C1095 + C2177 * C1090 + C50691 * C1094) *
                C396 +
            (C2176 * C1099 + C2171 * C1103 + C2177 * C1098 + C50691 * C1102) *
                C393) *
               C2174 +
           (C2409 * C394 + C2410 * C391 -
            (C2177 * C1437 + C50691 * C1441 + C2176 * C1438 + C2171 * C1442) *
                C395 -
            (C2177 * C1445 + C50691 * C1449 + C2176 * C1446 + C2171 * C1450) *
                C392 +
            (C2176 * C2564 + C2171 * C2567 + C2177 * C2565 + C50691 * C2568) *
                C396 +
            (C2176 * C2569 + C2171 * C2573 + C2177 * C2570 + C50691 * C2574) *
                C393) *
               C2175) *
              C50843 * C50730 * C251 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C395 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C391 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C394) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C392 -
            (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                C396 -
            (C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                C393) *
               C2173 +
           ((C2176 * C781 + C2171 * C786 + C2177 * C782 + C50691 * C787) *
                C395 -
            ((C2400 + C2399) * C391 + (C2398 + C2397) * C394) +
            (C2176 * C790 + C2171 * C796 + C2177 * C791 + C50691 * C797) *
                C392 -
            (C2177 * C1089 + C50691 * C1093 + C2176 * C1090 + C2171 * C1094) *
                C396 -
            (C2177 * C1097 + C50691 * C1101 + C2176 * C1098 + C2171 * C1102) *
                C393) *
               C2174 +
           ((C2176 * C1437 + C2171 * C1441 + C2177 * C1436 + C50691 * C1440) *
                C395 -
            (C2411 * C391 + C2412 * C394) +
            (C2176 * C1445 + C2171 * C1449 + C2177 * C1444 + C50691 * C1448) *
                C392 -
            (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                C396 -
            (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                C393) *
               C2175) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C644 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50973 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C645 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C50730 * C51015 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C645 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50973 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C644) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C50809) *
              C50831 * C50843 * C50730 * C51016 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C644 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50973 -
           (C120 * C646 + C108 * C647 + C119 * C405 + C107 * C423 +
            C118 * C397 + C106 * C407 + C117 * C398 + C105 * C408) *
               C645 -
           (C120 * C648 + C108 * C649 + C119 * C424 + C107 * C435 +
            C118 * C411 + C106 * C427 + C117 * C412 + C105 * C428) *
               C50809) *
              C50831 * C50843 * C50730 * C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C644 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50973 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C645 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
            (C2177 * C781 + C50691 * C786 + C2176 * C780 + C2171 * C785) *
                C645 -
            (C2177 * C790 + C50691 * C796 + C2176 * C789 + C2171 * C795) *
                C50809) *
               C2174 +
           (C2409 * C644 + C2410 * C50973 -
            (C2177 * C1437 + C50691 * C1441 + C2176 * C1438 + C2171 * C1442) *
                C645 -
            (C2177 * C1445 + C50691 * C1449 + C2176 * C1446 + C2171 * C1450) *
                C50809) *
               C2175) *
              C50843 * C50730 * C51015 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C645 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50973 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C644) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C50809) *
               C2173 +
           ((C2176 * C781 + C2171 * C786 + C2177 * C782 + C50691 * C787) *
                C645 -
            ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
            (C2176 * C790 + C2171 * C796 + C2177 * C791 + C50691 * C797) *
                C50809) *
               C2174 +
           ((C2176 * C1437 + C2171 * C1441 + C2177 * C1436 + C50691 * C1440) *
                C645 -
            (C2411 * C50973 + C2412 * C644) +
            (C2176 * C1445 + C2171 * C1449 + C2177 * C1444 + C50691 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C51016 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C644 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50973 -
            (C2177 * C397 + C50691 * C407 + C2176 * C398 + C2171 * C408) *
                C645 -
            (C2177 * C411 + C50691 * C427 + C2176 * C412 + C2171 * C428) *
                C50809) *
               C2173 +
           ((C2739 + C2740) * C644 + (C2741 + C2742) * C50973 -
            (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                C645 -
            (C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                C50809) *
               C2174 +
           ((C2743 + C2744) * C644 + (C2745 + C2746) * C50973 -
            (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                C645 -
            (C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50745) *
              C50831 * C50843 * C50730 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50745 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50831 * C50843 * C50730 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50745) *
              C50831 * C50843 * C50730 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50745 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50831 * C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50745) *
               C50831 * C50843 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50745 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50831 * C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2176 * C256 + C2171 * C270 + C2177 * C255 + C50691 * C269) *
                C121 +
            (C2176 * C266 + C2171 * C286 + C2177 * C265 + C50691 * C285) *
                C50745) *
               C2174 +
           ((C2176 * C257 + C2171 * C271 + C2177 * C258 + C50691 * C272) *
                C121 +
            (C2176 * C275 + C2171 * C287 + C2177 * C276 + C50691 * C288) *
                C50745) *
               C2175) *
              C50843 * C50730 * C113 -
          (((C2177 * C277 + C50691 * C289 + C2176 * C276 + C2171 * C288) *
                C50745 +
            (C2177 * C259 + C50691 * C273 + C2176 * C258 + C2171 * C272) *
                C121) *
               C2175 +
           ((C2177 * C264 + C50691 * C284 + C2176 * C265 + C2171 * C285) *
                C50745 +
            (C2177 * C254 + C50691 * C268 + C2176 * C255 + C2171 * C269) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                C50745 +
            (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50843 * C50730 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C50745) *
               C2173 +
           ((C2176 * C254 + C2171 * C268 + C2177 * C253 + C50691 * C267) *
                C121 +
            (C2176 * C264 + C2171 * C284 + C2177 * C263 + C50691 * C283) *
                C50745) *
               C2174 +
           ((C2176 * C259 + C2171 * C273 + C2177 * C260 + C50691 * C274) *
                C121 +
            (C2176 * C277 + C2171 * C289 + C2177 * C278 + C50691 * C290) *
                C50745) *
               C2175) *
              C50843 * C50730 * C115 -
          (((C2177 * C281 + C50691 * C292 + C2176 * C278 + C2171 * C290) *
                C50745 +
            (C2177 * C262 + C50691 * C282 + C2176 * C260 + C2171 * C274) *
                C121) *
               C2175 +
           ((C2177 * C280 + C50691 * C291 + C2176 * C263 + C2171 * C283) *
                C50745 +
            (C2177 * C261 + C50691 * C279 + C2176 * C253 + C2171 * C267) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50691 * C147 + C2176 * C136 + C2171 * C146) *
                C50745 +
            (C2177 * C126 + C50691 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C248 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C249 +
           (C2417 * C2173 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
            ((C2176 * C2324 + C2171 * C2327 + C2177 * C2325 + C50691 * C2328) *
                 C121 +
             (C2176 * C2329 + C2171 * C2333 + C2177 * C2330 + C50691 * C2334) *
                 C50745) *
                C2175) *
               C50843 * C250) *
              C251 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C249 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C248 -
           (((C2177 * C2331 + C50691 * C2335 + C2176 * C2330 + C2171 * C2334) *
                 C50745 +
             (C2177 * C2326 + C50691 * C2332 + C2176 * C2325 + C2171 * C2328) *
                 C121) *
                C2175 +
            ((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C2174 +
            C2418 * C2173) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C51017 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C51018 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50745) *
               C50831 * C50843 * C1204) *
              C50964 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C51018 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C51017 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50745 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50831 * C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C51017 -
           (C3415 * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C51018 +
           (C2417 * C2173 +
            ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
            ((C3411 + C3412) * C121 + (C3413 + C3414) * C50745) * C2175) *
               C50843 * C1204) *
              C50964 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C51018 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C51017 -
           (((C2177 * C2331 + C50691 * C2335 + C2176 * C2330 + C2171 * C2334) *
                 C50745 +
             (C2177 * C2326 + C50691 * C2332 + C2176 * C2325 + C2171 * C2328) *
                 C121) *
                C2175 +
            ((C2408 + C2407) * C50745 + (C2406 + C2405) * C121) * C2174 +
            C2418 * C2173) *
               C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C644 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50973 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C645 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C51017 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C645 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50973 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C644) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C50809) *
              C50831 * C50843 * C51018 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C644 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50973 -
           (C120 * C1435 + C108 * C1439 + C119 * C1436 + C107 * C1440 +
            C118 * C1437 + C106 * C1441 + C117 * C1438 + C105 * C1442) *
               C645 -
           (C120 * C1443 + C108 * C1447 + C119 * C1444 + C107 * C1448 +
            C118 * C1445 + C106 * C1449 + C117 * C1446 + C105 * C1450) *
               C50809) *
              C50831 * C50843 * C1204) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C644 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50973 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C645 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
            (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
               C2174 +
           C4108 * C2175) *
              C50843 * C51017 +
          (((C3132 + C3131) * C645 -
            ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
            (C3134 + C3133) * C50809) *
               C2173 +
           ((C3136 + C3135) * C645 -
            ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
            (C3138 + C3137) * C50809) *
               C2174 +
           ((C4103 + C4104) * C645 - (C3399 * C50973 + C3400 * C644) +
            (C4105 + C4106) * C50809) *
               C2175) *
              C50843 * C51018 +
          (C4108 * C2173 +
           ((C2396 + C2395) * C644 + (C2394 + C2393) * C50973 -
            (C4104 + C4103) * C645 - (C4106 + C4105) * C50809) *
               C2174 +
           ((C3411 + C3412) * C644 + (C3413 + C3414) * C50973 -
            (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                C645 -
            (C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                C50809) *
               C2175) *
              C50843 * C1204) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50745) *
              C50831 * C50843 * C969 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50745 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50831 * C50843 * C970 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50745) *
              C50831 * C50843 * C971 -
          ((C120 * C978 + C108 * C986 + C119 * C979 + C107 * C987 +
            C118 * C980 + C106 * C988 + C117 * C981 + C105 * C989) *
               C50745 +
           (C120 * C974 + C108 * C982 + C119 * C975 + C107 * C983 +
            C118 * C976 + C106 * C984 + C117 * C977 + C105 * C985) *
               C121) *
              C50831 * C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C898 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C50781) *
              C900 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C50781 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C898) *
              C901 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50745) *
               C50831 * C50843 * C898 -
           ((C120 * C541 + C108 * C543 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50745 +
            (C120 * C540 + C108 * C542 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50831 * C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C394 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C391 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C395 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C392 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C396 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C393) *
              C50831 * C50843 * C898 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C395 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C391 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C394) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C392 -
           (C120 * C1088 + C108 * C1092 + C119 * C1089 + C107 * C1093 +
            C118 * C1090 + C106 * C1094 + C117 * C1091 + C105 * C1095) *
               C396 -
           (C120 * C1096 + C108 * C1100 + C119 * C1097 + C107 * C1101 +
            C118 * C1098 + C106 * C1102 + C117 * C1099 + C105 * C1103) *
               C393) *
              C50831 * C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C898 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C50781) *
              C900 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C50781 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C898) *
              C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C2173 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C2174 +
            ((C2743 + C2744) * C121 + (C2745 + C2746) * C50745) * C2175) *
               C50843 * C898 -
           (((C2177 * C978 + C50691 * C986 + C2176 * C979 + C2171 * C987) *
                 C50745 +
             (C2177 * C974 + C50691 * C982 + C2176 * C975 + C2171 * C983) *
                 C121) *
                C2175 +
            ((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C2174 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C2173) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
           C2417 * C2175) *
              C50843 * C969 -
          (C3415 * C2175 +
           ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
           ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
              C50843 * C970 +
          (C2417 * C2173 +
           ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
           ((C3411 + C3412) * C121 + (C3413 + C3414) * C50745) * C2175) *
              C50843 * C971 -
          (((C2177 * C3392 + C50691 * C3396 + C2176 * C3393 + C2171 * C3397) *
                C50745 +
            (C2177 * C3390 + C50691 * C3394 + C2176 * C3391 + C2171 * C3395) *
                C121) *
               C2175 +
           ((C3414 + C3413) * C50745 + (C3412 + C3411) * C121) * C2174 +
           C3415 * C2173) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C394 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C391 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C395 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C392 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C396 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C393) *
               C2173 +
           ((C2385 + C2386) * C394 + (C2387 + C2388) * C391 -
            (C3131 + C3132) * C395 - (C3133 + C3134) * C392 +
            (C3586 + C3587) * C396 + (C3588 + C3589) * C393) *
               C2174 +
           (C2409 * C394 + C2410 * C391 - (C3135 + C3136) * C395 -
            (C3137 + C3138) * C392 + (C3590 + C3591) * C396 +
            (C3592 + C3593) * C393) *
               C2175) *
              C50843 * C898 +
          (((C3132 + C3131) * C395 -
            ((C2388 + C2387) * C391 + (C2386 + C2385) * C394) +
            (C3134 + C3133) * C392 - (C3587 + C3586) * C396 -
            (C3589 + C3588) * C393) *
               C2173 +
           ((C3136 + C3135) * C395 -
            ((C2392 + C2391) * C391 + (C2390 + C2389) * C394) +
            (C3138 + C3137) * C392 - (C3591 + C3590) * C396 -
            (C3593 + C3592) * C393) *
               C2174 +
           ((C2176 * C3086 + C2171 * C3089 + C2177 * C3087 + C50691 * C3090) *
                C395 -
            (C3399 * C391 + C3400 * C394) +
            (C2176 * C3091 + C2171 * C3095 + C2177 * C3092 + C50691 * C3096) *
                C392 -
            (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                C396 -
            (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                C393) *
               C2175) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C644 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50973 -
            (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
             C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                C645 -
            (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
             C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                C50809) *
               C50831 * C50843 * C898 +
           ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
             C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                C645 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50973 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C644) +
            (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
             C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50964 +
          (((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
             C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                C645 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50973 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C644) +
            (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
             C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                C50809) *
               C50831 * C50843 * C898 +
           ((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C644 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50973 -
            (C120 * C784 + C108 * C793 + C119 * C783 + C107 * C788 +
             C118 * C782 + C106 * C787 + C117 * C781 + C105 * C786) *
                C645 -
            (C120 * C794 + C108 * C799 + C119 * C792 + C107 * C798 +
             C118 * C791 + C106 * C797 + C117 * C790 + C105 * C796) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C644 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50973 -
             (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                 C645 -
             (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                 C50809) *
                C2173 +
            ((C2385 + C2386) * C644 + (C2387 + C2388) * C50973 -
             (C3131 + C3132) * C645 - (C3133 + C3134) * C50809) *
                C2174 +
            (C2409 * C644 + C2410 * C50973 - (C3135 + C3136) * C645 -
             (C3137 + C3138) * C50809) *
                C2175) *
               C50843 * C898 +
           (((C3132 + C3131) * C645 -
             ((C2388 + C2387) * C50973 + (C2386 + C2385) * C644) +
             (C3134 + C3133) * C50809) *
                C2173 +
            ((C3136 + C3135) * C645 -
             ((C2392 + C2391) * C50973 + (C2390 + C2389) * C644) +
             (C3138 + C3137) * C50809) *
                C2174 +
            ((C2176 * C3086 + C2171 * C3089 + C2177 * C3087 + C50691 * C3090) *
                 C645 -
             (C3399 * C50973 + C3400 * C644) +
             (C2176 * C3091 + C2171 * C3095 + C2177 * C3092 + C50691 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50964 +
          ((((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                 C645 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C50973 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C644) +
             (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                 C50809) *
                C2173 +
            ((C3139 + C3140) * C645 -
             ((C2400 + C2399) * C50973 + (C2398 + C2397) * C644) +
             (C3141 + C3142) * C50809) *
                C2174 +
            ((C3143 + C3144) * C645 - (C2411 * C50973 + C2412 * C644) +
             (C3145 + C3146) * C50809) *
                C2175) *
               C50843 * C898 +
           (((C2397 + C2398) * C644 + (C2399 + C2400) * C50973 -
             (C3140 + C3139) * C645 - (C3142 + C3141) * C50809) *
                C2173 +
            ((C2401 + C2402) * C644 + (C2403 + C2404) * C50973 -
             (C3144 + C3143) * C645 - (C3146 + C3145) * C50809) *
                C2174 +
            ((C2405 + C2406) * C644 + (C2407 + C2408) * C50973 -
             (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                 C645 -
             (C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50745) *
               C50831 * C50843 * C898 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50745 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50831 * C50843 * C50781) *
              C900 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50745) *
               C50831 * C50843 * C50781 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50745 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50831 * C50843 * C898) *
              C901 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50745) *
               C50831 * C50843 * C898 -
           ((C120 * C541 + C108 * C543 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50745 +
            (C120 * C540 + C108 * C542 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50831 * C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50745) *
              C50831 * C50843 * C969 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50745 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50831 * C50843 * C970 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50745) *
              C50831 * C50843 * C971 -
          ((C120 * C978 + C108 * C986 + C119 * C979 + C107 * C987 +
            C118 * C980 + C106 * C988 + C117 * C981 + C105 * C989) *
               C50745 +
           (C120 * C974 + C108 * C982 + C119 * C975 + C107 * C983 +
            C118 * C976 + C106 * C984 + C117 * C977 + C105 * C985) *
               C121) *
              C50831 * C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C50745) *
                C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
            C2417 * C2175) *
               C50843 * C898 -
           (((C2393 + C2394) * C50745 + (C2395 + C2396) * C121) * C2175 +
            ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
            ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
               C50843 * C50781) *
              C900 +
          ((((C2397 + C2398) * C121 + (C2399 + C2400) * C50745) * C2173 +
            ((C2401 + C2402) * C121 + (C2403 + C2404) * C50745) * C2174 +
            ((C2405 + C2406) * C121 + (C2407 + C2408) * C50745) * C2175) *
               C50843 * C50781 -
           (C2418 * C2175 +
            ((C2400 + C2399) * C50745 + (C2398 + C2397) * C121) * C2174 +
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C50745 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50843 * C898) *
              C901 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                 C50745) *
                C2173 +
            ((C2739 + C2740) * C121 + (C2741 + C2742) * C50745) * C2174 +
            ((C2743 + C2744) * C121 + (C2745 + C2746) * C50745) * C2175) *
               C50843 * C898 -
           (((C2177 * C978 + C50691 * C986 + C2176 * C979 + C2171 * C987) *
                 C50745 +
             (C2177 * C974 + C50691 * C982 + C2176 * C975 + C2171 * C983) *
                 C121) *
                C2175 +
            ((C2746 + C2745) * C50745 + (C2744 + C2743) * C121) * C2174 +
            ((C2742 + C2741) * C50745 + (C2740 + C2739) * C121) * C2173) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C50745) *
               C2173 +
           ((C2385 + C2386) * C121 + (C2387 + C2388) * C50745) * C2174 +
           C2417 * C2175) *
              C50843 * C969 -
          (C3415 * C2175 +
           ((C2392 + C2391) * C50745 + (C2390 + C2389) * C121) * C2174 +
           ((C2388 + C2387) * C50745 + (C2386 + C2385) * C121) * C2173) *
              C50843 * C970 +
          (C2417 * C2173 +
           ((C2396 + C2395) * C121 + (C2394 + C2393) * C50745) * C2174 +
           ((C3411 + C3412) * C121 + (C3413 + C3414) * C50745) * C2175) *
              C50843 * C971 -
          (((C2177 * C3392 + C50691 * C3396 + C2176 * C3393 + C2171 * C3397) *
                C50745 +
            (C2177 * C3390 + C50691 * C3394 + C2176 * C3391 + C2171 * C3395) *
                C121) *
               C2175 +
           ((C3414 + C3413) * C50745 + (C3412 + C3411) * C121) * C2174 +
           C3415 * C2173) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1551 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1549 -
            (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
             C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
                C1552 -
            (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
             C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
             C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
                C1552 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C1549 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C1551) +
            (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
             C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50964 +
          (((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
             C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
                C1552 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1549 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1551) +
            (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
             C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
                C50809) *
               C50831 * C50843 * C50972 +
           ((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C1551 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C1549 -
            (C120 * C784 + C108 * C793 + C119 * C783 + C107 * C788 +
             C118 * C782 + C106 * C787 + C117 * C781 + C105 * C786) *
                C1552 -
            (C120 * C794 + C108 * C799 + C119 * C792 + C107 * C798 +
             C118 * C791 + C106 * C797 + C117 * C790 + C105 * C796) *
                C50809) *
               C50831 * C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                 C1551 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                 C1549 -
             (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                 C1552 -
             (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                 C50809) *
                C2173 +
            ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
             (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
                C2174 +
            C4407 * C2175) *
               C50843 * C50972 +
           (((C3132 + C3131) * C1552 -
             ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
             (C3134 + C3133) * C50809) *
                C2173 +
            ((C3136 + C3135) * C1552 -
             ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
             (C3138 + C3137) * C50809) *
                C2174 +
            ((C4103 + C4104) * C1552 - (C3399 * C1549 + C3400 * C1551) +
             (C4105 + C4106) * C50809) *
                C2175) *
               C50843 * C50781) *
              C50964 +
          ((((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                 C1552 -
             ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                  C1549 +
              (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                  C1551) +
             (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                 C50809) *
                C2173 +
            ((C3139 + C3140) * C1552 -
             ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
             (C3141 + C3142) * C50809) *
                C2174 +
            ((C3143 + C3144) * C1552 - (C2411 * C1549 + C2412 * C1551) +
             (C3145 + C3146) * C50809) *
                C2175) *
               C50843 * C50972 +
           (((C2397 + C2398) * C1551 + (C2399 + C2400) * C1549 -
             (C3140 + C3139) * C1552 - (C3142 + C3141) * C50809) *
                C2173 +
            ((C2401 + C2402) * C1551 + (C2403 + C2404) * C1549 -
             (C3144 + C3143) * C1552 - (C3146 + C3145) * C50809) *
                C2174 +
            ((C2405 + C2406) * C1551 + (C2407 + C2408) * C1549 -
             (C2177 * C3088 + C50691 * C3093 + C2176 * C3087 + C2171 * C3090) *
                 C1552 -
             (C2177 * C3094 + C50691 * C3097 + C2176 * C3092 + C2171 * C3096) *
                 C50809) *
                C2175) *
               C50843 * C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1972 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51019 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1973 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C51020 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C1974 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C1971) *
              C50831 * C50843 * C50972 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C1973 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C51019 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C1972) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C51020 -
           (C120 * C1088 + C108 * C1092 + C119 * C1089 + C107 * C1093 +
            C118 * C1090 + C106 * C1094 + C117 * C1091 + C105 * C1095) *
               C1974 -
           (C120 * C1096 + C108 * C1100 + C119 * C1097 + C107 * C1101 +
            C118 * C1098 + C106 * C1102 + C117 * C1099 + C105 * C1103) *
               C1971) *
              C50831 * C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1972 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C51019 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1973 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C51020 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C1974 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C1971) *
               C2173 +
           ((C2385 + C2386) * C1972 + (C2387 + C2388) * C51019 -
            (C3131 + C3132) * C1973 - (C3133 + C3134) * C51020 +
            (C3586 + C3587) * C1974 + (C3588 + C3589) * C1971) *
               C2174 +
           (C2409 * C1972 + C2410 * C51019 - C4090 * C1973 - C4091 * C51020 +
            (C3590 + C3591) * C1974 + (C3592 + C3593) * C1971) *
               C2175) *
              C50843 * C50972 +
          (((C3132 + C3131) * C1973 -
            ((C2388 + C2387) * C51019 + (C2386 + C2385) * C1972) +
            (C3134 + C3133) * C51020 - (C3587 + C3586) * C1974 -
            (C3589 + C3588) * C1971) *
               C2173 +
           ((C3136 + C3135) * C1973 -
            ((C2392 + C2391) * C51019 + (C2390 + C2389) * C1972) +
            (C3138 + C3137) * C51020 - (C3591 + C3590) * C1974 -
            (C3593 + C3592) * C1971) *
               C2174 +
           ((C4103 + C4104) * C1973 - (C3399 * C51019 + C3400 * C1972) +
            (C4105 + C4106) * C51020 -
            (C2177 * C3561 + C50691 * C3563 + C2176 * C3562 + C2171 * C3564) *
                C1974 -
            (C2177 * C3565 + C50691 * C3567 + C2176 * C3566 + C2171 * C3568) *
                C1971) *
               C2175) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1551 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1549 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1552 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C248 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C1552 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C1549 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C1551) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C50809) *
              C50831 * C50843 * C249 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C1551 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C1549 -
           (C120 * C1435 + C108 * C1439 + C119 * C1436 + C107 * C1440 +
            C118 * C1437 + C106 * C1441 + C117 * C1438 + C105 * C1442) *
               C1552 -
           (C120 * C1443 + C108 * C1447 + C119 * C1444 + C107 * C1448 +
            C118 * C1445 + C106 * C1449 + C117 * C1446 + C105 * C1450) *
               C50809) *
              C50831 * C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1551 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1549 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1552 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C50730 * C900 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C1552 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1549 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1551) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C50809) *
              C50831 * C50843 * C50730 * C901 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1551 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1549 -
           (C120 * C646 + C108 * C647 + C119 * C405 + C107 * C423 +
            C118 * C397 + C106 * C407 + C117 * C398 + C105 * C408) *
               C1552 -
           (C120 * C648 + C108 * C649 + C119 * C424 + C107 * C435 +
            C118 * C411 + C106 * C427 + C117 * C412 + C105 * C428) *
               C50809) *
              C50831 * C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C1721 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C1717 -
          (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 + C118 * C399 +
           C106 * C409 + C117 * C400 + C105 * C410) *
              C1722 -
          (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 + C118 * C413 +
           C106 * C429 + C117 * C414 + C105 * C430) *
              C1718 +
          (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 + C119 * C403 +
           C107 * C417 + C120 * C404 + C108 * C418) *
              C1723 +
          (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 + C119 * C421 +
           C107 * C433 + C120 * C422 + C108 * C434) *
              C1719 -
          (C120 * C1725 + C108 * C1729 + C119 * C1726 + C107 * C1730 +
           C118 * C1727 + C106 * C1731 + C117 * C1728 + C105 * C1732) *
              C1724 -
          (C120 * C1733 + C108 * C1737 + C119 * C1734 + C107 * C1738 +
           C118 * C1735 + C106 * C1739 + C117 * C1736 + C105 * C1740) *
              C1720) *
         C50831 * C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           (C2409 * C1551 + C2410 * C1549 - C4090 * C1552 - C4091 * C50809) *
               C2175) *
              C50843 * C50730 * C900 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C1552 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C1549 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1551) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C50809) *
               C2173 +
           ((C3139 + C3140) * C1552 -
            ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
            (C3141 + C3142) * C50809) *
               C2174 +
           ((C3143 + C3144) * C1552 - (C2411 * C1549 + C2412 * C1551) +
            (C3145 + C3146) * C50809) *
               C2175) *
              C50843 * C50730 * C901 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C1551 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C1549 -
            (C2177 * C397 + C50691 * C407 + C2176 * C398 + C2171 * C408) *
                C1552 -
            (C2177 * C411 + C50691 * C427 + C2176 * C412 + C2171 * C428) *
                C50809) *
               C2173 +
           ((C2739 + C2740) * C1551 + (C2741 + C2742) * C1549 -
            (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                C1552 -
            (C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                C50809) *
               C2174 +
           ((C2743 + C2744) * C1551 + (C2745 + C2746) * C1549 -
            (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                C1552 -
            (C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           C4407 * C2175) *
              C50843 * C248 +
          (((C3132 + C3131) * C1552 -
            ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
            (C3134 + C3133) * C50809) *
               C2173 +
           ((C3136 + C3135) * C1552 -
            ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
            (C3138 + C3137) * C50809) *
               C2174 +
           ((C4103 + C4104) * C1552 - (C3399 * C1549 + C3400 * C1551) +
            (C4105 + C4106) * C50809) *
               C2175) *
              C50843 * C249 +
          (C4407 * C2173 +
           ((C2396 + C2395) * C1551 + (C2394 + C2393) * C1549 -
            (C4104 + C4103) * C1552 - (C4106 + C4105) * C50809) *
               C2174 +
           ((C3411 + C3412) * C1551 + (C3413 + C3414) * C1549 -
            (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                C1552 -
            (C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                C50809) *
               C2175) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
               C1721 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
               C1717 -
           (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
               C1722 -
           (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
               C1718 +
           (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
               C1723 +
           (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
               C1719 -
           (C2177 * C1727 + C50691 * C1731 + C2176 * C1728 + C2171 * C1732) *
               C1724 -
           (C2177 * C1735 + C50691 * C1739 + C2176 * C1736 + C2171 * C1740) *
               C1720) *
              C2173 +
          ((C2385 + C2386) * C1721 + (C2387 + C2388) * C1717 -
           (C3131 + C3132) * C1722 - (C3133 + C3134) * C1718 +
           (C3586 + C3587) * C1723 + (C3588 + C3589) * C1719 -
           (C2177 * C4505 + C50691 * C4509 + C2176 * C4506 + C2171 * C4510) *
               C1724 -
           (C2177 * C4511 + C50691 * C4517 + C2176 * C4512 + C2171 * C4518) *
               C1720) *
              C2174 +
          (C2409 * C1721 + C2410 * C1717 - C4090 * C1722 - C4091 * C1718 +
           (C3590 + C3591) * C1723 + (C3592 + C3593) * C1719 -
           (C2177 * C4507 + C50691 * C4513 + C2176 * C4508 + C2171 * C4514) *
               C1724 -
           (C2177 * C4515 + C50691 * C4519 + C2176 * C4516 + C2171 * C4520) *
               C1720) *
              C2175) *
         C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1972 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51019 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1973 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C51020 +
           (C117 * C401 + C105 * C415 + C118 * C402 + C106 * C416 +
            C119 * C403 + C107 * C417 + C120 * C404 + C108 * C418) *
               C1974 +
           (C117 * C419 + C105 * C431 + C118 * C420 + C106 * C432 +
            C119 * C421 + C107 * C433 + C120 * C422 + C108 * C434) *
               C1971) *
              C50831 * C50843 * C50730 * C50964 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C1973 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C51019 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1972) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C51020 -
           (C120 * C406 + C108 * C425 + C119 * C404 + C107 * C418 +
            C118 * C403 + C106 * C417 + C117 * C402 + C105 * C416) *
               C1974 -
           (C120 * C426 + C108 * C436 + C119 * C422 + C107 * C434 +
            C118 * C421 + C106 * C433 + C117 * C420 + C105 * C432) *
               C1971) *
              C50831 * C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1972 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C51019 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1973 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C51020 +
            (C2176 * C401 + C2171 * C415 + C2177 * C402 + C50691 * C416) *
                C1974 +
            (C2176 * C419 + C2171 * C431 + C2177 * C420 + C50691 * C432) *
                C1971) *
               C2173 +
           ((C2385 + C2386) * C1972 + (C2387 + C2388) * C51019 -
            (C3131 + C3132) * C1973 - (C3133 + C3134) * C51020 +
            (C3586 + C3587) * C1974 + (C3588 + C3589) * C1971) *
               C2174 +
           (C2409 * C1972 + C2410 * C51019 - C4090 * C1973 - C4091 * C51020 +
            (C3590 + C3591) * C1974 + (C3592 + C3593) * C1971) *
               C2175) *
              C50843 * C50730 * C50964 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C1973 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C51019 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1972) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C51020 -
            (C2177 * C403 + C50691 * C417 + C2176 * C402 + C2171 * C416) *
                C1974 -
            (C2177 * C421 + C50691 * C433 + C2176 * C420 + C2171 * C432) *
                C1971) *
               C2173 +
           ((C3139 + C3140) * C1973 -
            ((C2400 + C2399) * C51019 + (C2398 + C2397) * C1972) +
            (C3141 + C3142) * C51020 -
            (C2177 * C1089 + C50691 * C1093 + C2176 * C1090 + C2171 * C1094) *
                C1974 -
            (C2177 * C1097 + C50691 * C1101 + C2176 * C1098 + C2171 * C1102) *
                C1971) *
               C2174 +
           ((C3143 + C3144) * C1973 - (C2411 * C51019 + C2412 * C1972) +
            (C3145 + C3146) * C51020 -
            (C2177 * C2566 + C50691 * C2571 + C2176 * C2565 + C2171 * C2568) *
                C1974 -
            (C2177 * C2572 + C50691 * C2575 + C2176 * C2570 + C2171 * C2574) *
                C1971) *
               C2175) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1551 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1549 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1552 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C50730 * C900 +
          ((C117 * C399 + C105 * C409 + C118 * C398 + C106 * C408 +
            C119 * C397 + C107 * C407 + C120 * C405 + C108 * C423) *
               C1552 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1549 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1551) +
           (C117 * C413 + C105 * C429 + C118 * C412 + C106 * C428 +
            C119 * C411 + C107 * C427 + C120 * C424 + C108 * C435) *
               C50809) *
              C50831 * C50843 * C50730 * C901 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1551 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1549 -
           (C120 * C646 + C108 * C647 + C119 * C405 + C107 * C423 +
            C118 * C397 + C106 * C407 + C117 * C398 + C105 * C408) *
               C1552 -
           (C120 * C648 + C108 * C649 + C119 * C424 + C107 * C435 +
            C118 * C411 + C106 * C427 + C117 * C412 + C105 * C428) *
               C50809) *
              C50831 * C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1551 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1549 -
           (C120 * C397 + C108 * C407 + C119 * C398 + C107 * C408 +
            C118 * C399 + C106 * C409 + C117 * C400 + C105 * C410) *
               C1552 -
           (C120 * C411 + C108 * C427 + C119 * C412 + C107 * C428 +
            C118 * C413 + C106 * C429 + C117 * C414 + C105 * C430) *
               C50809) *
              C50831 * C50843 * C248 +
          ((C117 * C780 + C105 * C785 + C118 * C781 + C106 * C786 +
            C119 * C782 + C107 * C787 + C120 * C783 + C108 * C788) *
               C1552 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C1549 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C1551) +
           (C117 * C789 + C105 * C795 + C118 * C790 + C106 * C796 +
            C119 * C791 + C107 * C797 + C120 * C792 + C108 * C798) *
               C50809) *
              C50831 * C50843 * C249 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C1551 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C1549 -
           (C120 * C1435 + C108 * C1439 + C119 * C1436 + C107 * C1440 +
            C118 * C1437 + C106 * C1441 + C117 * C1438 + C105 * C1442) *
               C1552 -
           (C120 * C1443 + C108 * C1447 + C119 * C1444 + C107 * C1448 +
            C118 * C1445 + C106 * C1449 + C117 * C1446 + C105 * C1450) *
               C50809) *
              C50831 * C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           (C2409 * C1551 + C2410 * C1549 - C4090 * C1552 - C4091 * C50809) *
               C2175) *
              C50843 * C50730 * C900 +
          (((C2176 * C399 + C2171 * C409 + C2177 * C398 + C50691 * C408) *
                C1552 -
            ((C2177 * C135 + C50691 * C145 + C2176 * C134 + C2171 * C144) *
                 C1549 +
             (C2177 * C124 + C50691 * C131 + C2176 * C123 + C2171 * C130) *
                 C1551) +
            (C2176 * C413 + C2171 * C429 + C2177 * C412 + C50691 * C428) *
                C50809) *
               C2173 +
           ((C3139 + C3140) * C1552 -
            ((C2400 + C2399) * C1549 + (C2398 + C2397) * C1551) +
            (C3141 + C3142) * C50809) *
               C2174 +
           ((C3143 + C3144) * C1552 - (C2411 * C1549 + C2412 * C1551) +
            (C3145 + C3146) * C50809) *
               C2175) *
              C50843 * C50730 * C901 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50691 * C132) *
                C1551 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50691 * C146) *
                C1549 -
            (C2177 * C397 + C50691 * C407 + C2176 * C398 + C2171 * C408) *
                C1552 -
            (C2177 * C411 + C50691 * C427 + C2176 * C412 + C2171 * C428) *
                C50809) *
               C2173 +
           ((C2739 + C2740) * C1551 + (C2741 + C2742) * C1549 -
            (C2177 * C783 + C50691 * C788 + C2176 * C782 + C2171 * C787) *
                C1552 -
            (C2177 * C792 + C50691 * C798 + C2176 * C791 + C2171 * C797) *
                C50809) *
               C2174 +
           ((C2743 + C2744) * C1551 + (C2745 + C2746) * C1549 -
            (C2177 * C1435 + C50691 * C1439 + C2176 * C1436 + C2171 * C1440) *
                C1552 -
            (C2177 * C1443 + C50691 * C1447 + C2176 * C1444 + C2171 * C1448) *
                C50809) *
               C2175) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50691 * C130) *
                C1551 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50691 * C144) *
                C1549 -
            (C2177 * C399 + C50691 * C409 + C2176 * C400 + C2171 * C410) *
                C1552 -
            (C2177 * C413 + C50691 * C429 + C2176 * C414 + C2171 * C430) *
                C50809) *
               C2173 +
           ((C2385 + C2386) * C1551 + (C2387 + C2388) * C1549 -
            (C3131 + C3132) * C1552 - (C3133 + C3134) * C50809) *
               C2174 +
           C4407 * C2175) *
              C50843 * C248 +
          (((C3132 + C3131) * C1552 -
            ((C2388 + C2387) * C1549 + (C2386 + C2385) * C1551) +
            (C3134 + C3133) * C50809) *
               C2173 +
           ((C3136 + C3135) * C1552 -
            ((C2392 + C2391) * C1549 + (C2390 + C2389) * C1551) +
            (C3138 + C3137) * C50809) *
               C2174 +
           ((C4103 + C4104) * C1552 - (C3399 * C1549 + C3400 * C1551) +
            (C4105 + C4106) * C50809) *
               C2175) *
              C50843 * C249 +
          (C4407 * C2173 +
           ((C2396 + C2395) * C1551 + (C2394 + C2393) * C1549 -
            (C4104 + C4103) * C1552 - (C4106 + C4105) * C50809) *
               C2174 +
           ((C3411 + C3412) * C1551 + (C3413 + C3414) * C1549 -
            (C2177 * C4079 + C50691 * C4081 + C2176 * C4080 + C2171 * C4082) *
                C1552 -
            (C2177 * C4083 + C50691 * C4085 + C2176 * C4084 + C2171 * C4086) *
                C50809) *
               C2175) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C51021 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
            C24914 * C24684) *
               C50843 * C50972 -
           (((C24890 + C24891) * C50745 + (C24892 + C24893) * C121) * C24684 +
            ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
               C50843 * C50781) *
              C51015 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C51021 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C51022 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50745) * C24684) *
               C50843 * C50781 -
           (C24915 * C24684 +
            ((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C51022 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C51021) *
               C50843 * C50972) *
              C51016 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C51021 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C51022 +
            ((C25228 + C25229) * C121 + (C25230 + C25231) * C50745) * C24684) *
               C50843 * C50972 -
           (((C49711 * C978 + C50691 * C986 + C49718 * C979 + C50957 * C987) *
                 C50745 +
             (C49711 * C974 + C50691 * C982 + C49718 * C975 + C50957 * C983) *
                 C121) *
                C24684 +
            ((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C51022 +
            ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C51021) *
               C50843 * C50781) *
              C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                 C645 -
             (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                 C50809) *
                C51021 +
            ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
             (C25604 + C25605) * C645 - (C25606 + C25607) * C50809) *
                C51022 +
            (C24906 * C644 + C24907 * C50973 - (C25608 + C25609) * C645 -
             (C25610 + C25611) * C50809) *
                C24684) *
               C50843 * C50972 +
           (((C25605 + C25604) * C645 -
             ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
             (C25607 + C25606) * C50809) *
                C51021 +
            ((C25609 + C25608) * C645 -
             ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
             (C25611 + C25610) * C50809) *
                C51022 +
            ((C49718 * C3086 + C50957 * C3089 + C49711 * C3087 +
              C50691 * C3090) *
                 C645 -
             ((C24890 + C24891) * C50973 + (C24892 + C24893) * C644) +
             (C49718 * C3091 + C50957 * C3095 + C49711 * C3092 +
              C50691 * C3096) *
                 C50809) *
                C24684) *
               C50843 * C50781) *
              C251 +
          ((((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                 C645 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50973 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C644) +
             (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                 C50809) *
                C51021 +
            ((C25612 + C25613) * C645 -
             ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
             (C25614 + C25615) * C50809) *
                C51022 +
            ((C25616 + C25617) * C645 - (C24908 * C50973 + C24909 * C644) +
             (C25618 + C25619) * C50809) *
                C24684) *
               C50843 * C50972 +
           (((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
             (C25613 + C25612) * C645 - (C25615 + C25614) * C50809) *
                C51021 +
            ((C24898 + C24899) * C644 + (C24900 + C24901) * C50973 -
             (C25617 + C25616) * C645 - (C25619 + C25618) * C50809) *
                C51022 +
            ((C24902 + C24903) * C644 + (C24904 + C24905) * C50973 -
             (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
              C50957 * C3090) *
                 C645 -
             (C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
              C50957 * C3096) *
                 C50809) *
                C24684) *
               C50843 * C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C51021 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
            C24914 * C24684) *
               C50843 * C248 -
           (((C24890 + C24891) * C50745 + (C24892 + C24893) * C121) * C24684 +
            ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
               C50843 * C249 +
           (C24914 * C51021 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C51022 +
            ((C49718 * C2324 + C50957 * C2327 + C49711 * C2325 +
              C50691 * C2328) *
                 C121 +
             (C49718 * C2329 + C50957 * C2333 + C49711 * C2330 +
              C50691 * C2334) *
                 C50745) *
                C24684) *
               C50843 * C250) *
              C251 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C51021 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C51022 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50745) * C24684) *
               C50843 * C249 -
           (C24915 * C24684 +
            ((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C51022 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C51021) *
               C50843 * C248 -
           (((C49711 * C2331 + C50691 * C2335 + C49718 * C2330 +
              C50957 * C2334) *
                 C50745 +
             (C49711 * C2326 + C50691 * C2332 + C49718 * C2325 +
              C50957 * C2328) *
                 C121) *
                C24684 +
            ((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C51022 +
            C24915 * C51021) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C51021 +
           ((C49718 * C256 + C50957 * C270 + C49711 * C255 + C50691 * C269) *
                C121 +
            (C49718 * C266 + C50957 * C286 + C49711 * C265 + C50691 * C285) *
                C50745) *
               C51022 +
           ((C49718 * C257 + C50957 * C271 + C49711 * C258 + C50691 * C272) *
                C121 +
            (C49718 * C275 + C50957 * C287 + C49711 * C276 + C50691 * C288) *
                C50745) *
               C24684) *
              C50843 * C50730 * C113 -
          (((C49711 * C277 + C50691 * C289 + C49718 * C276 + C50957 * C288) *
                C50745 +
            (C49711 * C259 + C50691 * C273 + C49718 * C258 + C50957 * C272) *
                C121) *
               C24684 +
           ((C49711 * C264 + C50691 * C284 + C49718 * C265 + C50957 * C285) *
                C50745 +
            (C49711 * C254 + C50691 * C268 + C49718 * C255 + C50957 * C269) *
                C121) *
               C51022 +
           ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                C50745 +
            (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                C121) *
               C51021) *
              C50843 * C50730 * C114 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C121 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C50745) *
               C51021 +
           ((C49718 * C254 + C50957 * C268 + C49711 * C253 + C50691 * C267) *
                C121 +
            (C49718 * C264 + C50957 * C284 + C49711 * C263 + C50691 * C283) *
                C50745) *
               C51022 +
           ((C49718 * C259 + C50957 * C273 + C49711 * C260 + C50691 * C274) *
                C121 +
            (C49718 * C277 + C50957 * C289 + C49711 * C278 + C50691 * C290) *
                C50745) *
               C24684) *
              C50843 * C50730 * C115 -
          (((C49711 * C281 + C50691 * C292 + C49718 * C278 + C50957 * C290) *
                C50745 +
            (C49711 * C262 + C50691 * C282 + C49718 * C260 + C50957 * C274) *
                C121) *
               C24684 +
           ((C49711 * C280 + C50691 * C291 + C49718 * C263 + C50957 * C283) *
                C50745 +
            (C49711 * C261 + C50691 * C279 + C49718 * C253 + C50957 * C267) *
                C121) *
               C51022 +
           ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                C50745 +
            (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                C121) *
               C51021) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C394 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C391 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C395 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C392 +
            (C49718 * C401 + C50957 * C415 + C49711 * C402 + C50691 * C416) *
                C396 +
            (C49718 * C419 + C50957 * C431 + C49711 * C420 + C50691 * C432) *
                C393) *
               C51021 +
           ((C24882 + C24883) * C394 + (C24884 + C24885) * C391 -
            (C49711 * C781 + C50691 * C786 + C49718 * C780 + C50957 * C785) *
                C395 -
            (C49711 * C790 + C50691 * C796 + C49718 * C789 + C50957 * C795) *
                C392 +
            (C49718 * C1091 + C50957 * C1095 + C49711 * C1090 +
             C50691 * C1094) *
                C396 +
            (C49718 * C1099 + C50957 * C1103 + C49711 * C1098 +
             C50691 * C1102) *
                C393) *
               C51022 +
           (C24906 * C394 + C24907 * C391 -
            (C49711 * C1437 + C50691 * C1441 + C49718 * C1438 +
             C50957 * C1442) *
                C395 -
            (C49711 * C1445 + C50691 * C1449 + C49718 * C1446 +
             C50957 * C1450) *
                C392 +
            (C49718 * C2564 + C50957 * C2567 + C49711 * C2565 +
             C50691 * C2568) *
                C396 +
            (C49718 * C2569 + C50957 * C2573 + C49711 * C2570 +
             C50691 * C2574) *
                C393) *
               C24684) *
              C50843 * C50730 * C251 +
          (((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                C395 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C391 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C394) +
            (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                C392 -
            (C49711 * C403 + C50691 * C417 + C49718 * C402 + C50957 * C416) *
                C396 -
            (C49711 * C421 + C50691 * C433 + C49718 * C420 + C50957 * C432) *
                C393) *
               C51021 +
           ((C49718 * C781 + C50957 * C786 + C49711 * C782 + C50691 * C787) *
                C395 -
            ((C24897 + C24896) * C391 + (C24895 + C24894) * C394) +
            (C49718 * C790 + C50957 * C796 + C49711 * C791 + C50691 * C797) *
                C392 -
            (C49711 * C1089 + C50691 * C1093 + C49718 * C1090 +
             C50957 * C1094) *
                C396 -
            (C49711 * C1097 + C50691 * C1101 + C49718 * C1098 +
             C50957 * C1102) *
                C393) *
               C51022 +
           ((C49718 * C1437 + C50957 * C1441 + C49711 * C1436 +
             C50691 * C1440) *
                C395 -
            (C24908 * C391 + C24909 * C394) +
            (C49718 * C1445 + C50957 * C1449 + C49711 * C1444 +
             C50691 * C1448) *
                C392 -
            (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
             C50957 * C2568) *
                C396 -
            (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
             C50957 * C2574) *
                C393) *
               C24684) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C644 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50973 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C645 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C50809) *
               C51021 +
           ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
            (C49711 * C781 + C50691 * C786 + C49718 * C780 + C50957 * C785) *
                C645 -
            (C49711 * C790 + C50691 * C796 + C49718 * C789 + C50957 * C795) *
                C50809) *
               C51022 +
           (C24906 * C644 + C24907 * C50973 -
            (C49711 * C1437 + C50691 * C1441 + C49718 * C1438 +
             C50957 * C1442) *
                C645 -
            (C49711 * C1445 + C50691 * C1449 + C49718 * C1446 +
             C50957 * C1450) *
                C50809) *
               C24684) *
              C50843 * C50730 * C51015 +
          (((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                C645 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50973 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C644) +
            (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                C50809) *
               C51021 +
           ((C49718 * C781 + C50957 * C786 + C49711 * C782 + C50691 * C787) *
                C645 -
            ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
            (C49718 * C790 + C50957 * C796 + C49711 * C791 + C50691 * C797) *
                C50809) *
               C51022 +
           ((C49718 * C1437 + C50957 * C1441 + C49711 * C1436 +
             C50691 * C1440) *
                C645 -
            (C24908 * C50973 + C24909 * C644) +
            (C49718 * C1445 + C50957 * C1449 + C49711 * C1444 +
             C50691 * C1448) *
                C50809) *
               C24684) *
              C50843 * C50730 * C51016 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C644 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C50973 -
            (C49711 * C397 + C50691 * C407 + C49718 * C398 + C50957 * C408) *
                C645 -
            (C49711 * C411 + C50691 * C427 + C49718 * C412 + C50957 * C428) *
                C50809) *
               C51021 +
           ((C25224 + C25225) * C644 + (C25226 + C25227) * C50973 -
            (C49711 * C783 + C50691 * C788 + C49718 * C782 + C50957 * C787) *
                C645 -
            (C49711 * C792 + C50691 * C798 + C49718 * C791 + C50957 * C797) *
                C50809) *
               C51022 +
           ((C25228 + C25229) * C644 + (C25230 + C25231) * C50973 -
            (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
             C50957 * C1440) *
                C645 -
            (C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
             C50957 * C1448) *
                C50809) *
               C24684) *
              C50843 * C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C51021 +
           ((C49718 * C256 + C50957 * C270 + C49711 * C255 + C50691 * C269) *
                C121 +
            (C49718 * C266 + C50957 * C286 + C49711 * C265 + C50691 * C285) *
                C50745) *
               C51022 +
           ((C49718 * C257 + C50957 * C271 + C49711 * C258 + C50691 * C272) *
                C121 +
            (C49718 * C275 + C50957 * C287 + C49711 * C276 + C50691 * C288) *
                C50745) *
               C24684) *
              C50843 * C50730 * C113 -
          (((C49711 * C277 + C50691 * C289 + C49718 * C276 + C50957 * C288) *
                C50745 +
            (C49711 * C259 + C50691 * C273 + C49718 * C258 + C50957 * C272) *
                C121) *
               C24684 +
           ((C49711 * C264 + C50691 * C284 + C49718 * C265 + C50957 * C285) *
                C50745 +
            (C49711 * C254 + C50691 * C268 + C49718 * C255 + C50957 * C269) *
                C121) *
               C51022 +
           ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                C50745 +
            (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                C121) *
               C51021) *
              C50843 * C50730 * C114 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C121 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C50745) *
               C51021 +
           ((C49718 * C254 + C50957 * C268 + C49711 * C253 + C50691 * C267) *
                C121 +
            (C49718 * C264 + C50957 * C284 + C49711 * C263 + C50691 * C283) *
                C50745) *
               C51022 +
           ((C49718 * C259 + C50957 * C273 + C49711 * C260 + C50691 * C274) *
                C121 +
            (C49718 * C277 + C50957 * C289 + C49711 * C278 + C50691 * C290) *
                C50745) *
               C24684) *
              C50843 * C50730 * C115 -
          (((C49711 * C281 + C50691 * C292 + C49718 * C278 + C50957 * C290) *
                C50745 +
            (C49711 * C262 + C50691 * C282 + C49718 * C260 + C50957 * C274) *
                C121) *
               C24684 +
           ((C49711 * C280 + C50691 * C291 + C49718 * C263 + C50957 * C283) *
                C50745 +
            (C49711 * C261 + C50691 * C279 + C49718 * C253 + C50957 * C267) *
                C121) *
               C51022 +
           ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                C50745 +
            (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                C121) *
               C51021) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C51021 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
            C24914 * C24684) *
               C50843 * C248 -
           (((C24890 + C24891) * C50745 + (C24892 + C24893) * C121) * C24684 +
            ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
               C50843 * C249 +
           (C24914 * C51021 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C51022 +
            ((C49718 * C2324 + C50957 * C2327 + C49711 * C2325 +
              C50691 * C2328) *
                 C121 +
             (C49718 * C2329 + C50957 * C2333 + C49711 * C2330 +
              C50691 * C2334) *
                 C50745) *
                C24684) *
               C50843 * C250) *
              C251 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C51021 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C51022 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50745) * C24684) *
               C50843 * C249 -
           (C24915 * C24684 +
            ((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C51022 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C51021) *
               C50843 * C248 -
           (((C49711 * C2331 + C50691 * C2335 + C49718 * C2330 +
              C50957 * C2334) *
                 C50745 +
             (C49711 * C2326 + C50691 * C2332 + C49718 * C2325 +
              C50957 * C2328) *
                 C121) *
                C24684 +
            ((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C51022 +
            C24915 * C51021) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C51021 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
            C24914 * C24684) *
               C50843 * C51017 -
           (C25880 * C24684 +
            ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
               C50843 * C51018 +
           (C24914 * C51021 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C51022 +
            ((C25876 + C25877) * C121 + (C25878 + C25879) * C50745) * C24684) *
               C50843 * C1204) *
              C50964 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C51021 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C51022 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50745) * C24684) *
               C50843 * C51018 -
           (C24915 * C24684 +
            ((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C51022 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C51021) *
               C50843 * C51017 -
           (((C49711 * C2331 + C50691 * C2335 + C49718 * C2330 +
              C50957 * C2334) *
                 C50745 +
             (C49711 * C2326 + C50691 * C2332 + C49718 * C2325 +
              C50957 * C2328) *
                 C121) *
                C24684 +
            ((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C51022 +
            C24915 * C51021) *
               C50843 * C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C644 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50973 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C645 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C50809) *
               C51021 +
           ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
            (C25604 + C25605) * C645 - (C25606 + C25607) * C50809) *
               C51022 +
           C26557 * C24684) *
              C50843 * C51017 +
          (((C25605 + C25604) * C645 -
            ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
            (C25607 + C25606) * C50809) *
               C51021 +
           ((C25609 + C25608) * C645 -
            ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
            (C25611 + C25610) * C50809) *
               C51022 +
           ((C26552 + C26553) * C645 - (C25864 * C50973 + C25865 * C644) +
            (C26554 + C26555) * C50809) *
               C24684) *
              C50843 * C51018 +
          (C26557 * C51021 +
           ((C24893 + C24892) * C644 + (C24891 + C24890) * C50973 -
            (C26553 + C26552) * C645 - (C26555 + C26554) * C50809) *
               C51022 +
           ((C25876 + C25877) * C644 + (C25878 + C25879) * C50973 -
            (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
             C50957 * C4082) *
                C645 -
            (C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
             C50957 * C4086) *
                C50809) *
               C24684) *
              C50843 * C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C51021 +
           ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
           C24914 * C24684) *
              C50843 * C969 -
          (C25880 * C24684 +
           ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
           ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
              C50843 * C970 +
          (C24914 * C51021 +
           ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C51022 +
           ((C25876 + C25877) * C121 + (C25878 + C25879) * C50745) * C24684) *
              C50843 * C971 -
          (((C49711 * C3392 + C50691 * C3396 + C49718 * C3393 +
             C50957 * C3397) *
                C50745 +
            (C49711 * C3390 + C50691 * C3394 + C49718 * C3391 +
             C50957 * C3395) *
                C121) *
               C24684 +
           ((C25879 + C25878) * C50745 + (C25877 + C25876) * C121) * C51022 +
           C25880 * C51021) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C51021 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
            C24914 * C24684) *
               C50843 * C898 -
           (((C24890 + C24891) * C50745 + (C24892 + C24893) * C121) * C24684 +
            ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
               C50843 * C50781) *
              C900 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C51021 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C51022 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50745) * C24684) *
               C50843 * C50781 -
           (C24915 * C24684 +
            ((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C51022 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C51021) *
               C50843 * C898) *
              C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C51021 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C51022 +
            ((C25228 + C25229) * C121 + (C25230 + C25231) * C50745) * C24684) *
               C50843 * C898 -
           (((C49711 * C978 + C50691 * C986 + C49718 * C979 + C50957 * C987) *
                 C50745 +
             (C49711 * C974 + C50691 * C982 + C49718 * C975 + C50957 * C983) *
                 C121) *
                C24684 +
            ((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C51022 +
            ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C51021) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C394 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C391 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C395 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C392 +
            (C49718 * C401 + C50957 * C415 + C49711 * C402 + C50691 * C416) *
                C396 +
            (C49718 * C419 + C50957 * C431 + C49711 * C420 + C50691 * C432) *
                C393) *
               C51021 +
           ((C24882 + C24883) * C394 + (C24884 + C24885) * C391 -
            (C25604 + C25605) * C395 - (C25606 + C25607) * C392 +
            (C26043 + C26044) * C396 + (C26045 + C26046) * C393) *
               C51022 +
           (C24906 * C394 + C24907 * C391 - (C25608 + C25609) * C395 -
            (C25610 + C25611) * C392 + (C26047 + C26048) * C396 +
            (C26049 + C26050) * C393) *
               C24684) *
              C50843 * C898 +
          (((C25605 + C25604) * C395 -
            ((C24885 + C24884) * C391 + (C24883 + C24882) * C394) +
            (C25607 + C25606) * C392 - (C26044 + C26043) * C396 -
            (C26046 + C26045) * C393) *
               C51021 +
           ((C25609 + C25608) * C395 -
            ((C24889 + C24888) * C391 + (C24887 + C24886) * C394) +
            (C25611 + C25610) * C392 - (C26048 + C26047) * C396 -
            (C26050 + C26049) * C393) *
               C51022 +
           ((C49718 * C3086 + C50957 * C3089 + C49711 * C3087 +
             C50691 * C3090) *
                C395 -
            (C25864 * C391 + C25865 * C394) +
            (C49718 * C3091 + C50957 * C3095 + C49711 * C3092 +
             C50691 * C3096) *
                C392 -
            (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
             C50957 * C3564) *
                C396 -
            (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
             C50957 * C3568) *
                C393) *
               C24684) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                 C645 -
             (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                 C50809) *
                C51021 +
            ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
             (C25604 + C25605) * C645 - (C25606 + C25607) * C50809) *
                C51022 +
            (C24906 * C644 + C24907 * C50973 - (C25608 + C25609) * C645 -
             (C25610 + C25611) * C50809) *
                C24684) *
               C50843 * C898 +
           (((C25605 + C25604) * C645 -
             ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
             (C25607 + C25606) * C50809) *
                C51021 +
            ((C25609 + C25608) * C645 -
             ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
             (C25611 + C25610) * C50809) *
                C51022 +
            ((C49718 * C3086 + C50957 * C3089 + C49711 * C3087 +
              C50691 * C3090) *
                 C645 -
             (C25864 * C50973 + C25865 * C644) +
             (C49718 * C3091 + C50957 * C3095 + C49711 * C3092 +
              C50691 * C3096) *
                 C50809) *
                C24684) *
               C50843 * C50781) *
              C50964 +
          ((((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                 C645 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50973 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C644) +
             (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                 C50809) *
                C51021 +
            ((C25612 + C25613) * C645 -
             ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
             (C25614 + C25615) * C50809) *
                C51022 +
            ((C25616 + C25617) * C645 - (C24908 * C50973 + C24909 * C644) +
             (C25618 + C25619) * C50809) *
                C24684) *
               C50843 * C898 +
           (((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
             (C25613 + C25612) * C645 - (C25615 + C25614) * C50809) *
                C51021 +
            ((C24898 + C24899) * C644 + (C24900 + C24901) * C50973 -
             (C25617 + C25616) * C645 - (C25619 + C25618) * C50809) *
                C51022 +
            ((C24902 + C24903) * C644 + (C24904 + C24905) * C50973 -
             (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
              C50957 * C3090) *
                 C645 -
             (C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
              C50957 * C3096) *
                 C50809) *
                C24684) *
               C50843 * C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C51021 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
            C24914 * C24684) *
               C50843 * C898 -
           (((C24890 + C24891) * C50745 + (C24892 + C24893) * C121) * C24684 +
            ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
               C50843 * C50781) *
              C900 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C51021 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C51022 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50745) * C24684) *
               C50843 * C50781 -
           (C24915 * C24684 +
            ((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C51022 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C51021) *
               C50843 * C898) *
              C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C51021 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C51022 +
            ((C25228 + C25229) * C121 + (C25230 + C25231) * C50745) * C24684) *
               C50843 * C898 -
           (((C49711 * C978 + C50691 * C986 + C49718 * C979 + C50957 * C987) *
                 C50745 +
             (C49711 * C974 + C50691 * C982 + C49718 * C975 + C50957 * C983) *
                 C121) *
                C24684 +
            ((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C51022 +
            ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C51021) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C51021 +
           ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C51022 +
           C24914 * C24684) *
              C50843 * C969 -
          (C25880 * C24684 +
           ((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C51022 +
           ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C51021) *
              C50843 * C970 +
          (C24914 * C51021 +
           ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C51022 +
           ((C25876 + C25877) * C121 + (C25878 + C25879) * C50745) * C24684) *
              C50843 * C971 -
          (((C49711 * C3392 + C50691 * C3396 + C49718 * C3393 +
             C50957 * C3397) *
                C50745 +
            (C49711 * C3390 + C50691 * C3394 + C49718 * C3391 +
             C50957 * C3395) *
                C121) *
               C24684 +
           ((C25879 + C25878) * C50745 + (C25877 + C25876) * C121) * C51022 +
           C25880 * C51021) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                 C1552 -
             (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                 C50809) *
                C51021 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             (C25604 + C25605) * C1552 - (C25606 + C25607) * C50809) *
                C51022 +
            C26856 * C24684) *
               C50843 * C50972 +
           (((C25605 + C25604) * C1552 -
             ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
             (C25607 + C25606) * C50809) *
                C51021 +
            ((C25609 + C25608) * C1552 -
             ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
             (C25611 + C25610) * C50809) *
                C51022 +
            ((C26552 + C26553) * C1552 - (C25864 * C1549 + C25865 * C1551) +
             (C26554 + C26555) * C50809) *
                C24684) *
               C50843 * C50781) *
              C50964 +
          ((((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                 C1552 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C1549 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1551) +
             (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                 C50809) *
                C51021 +
            ((C25612 + C25613) * C1552 -
             ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
             (C25614 + C25615) * C50809) *
                C51022 +
            ((C25616 + C25617) * C1552 - (C24908 * C1549 + C24909 * C1551) +
             (C25618 + C25619) * C50809) *
                C24684) *
               C50843 * C50972 +
           (((C24894 + C24895) * C1551 + (C24896 + C24897) * C1549 -
             (C25613 + C25612) * C1552 - (C25615 + C25614) * C50809) *
                C51021 +
            ((C24898 + C24899) * C1551 + (C24900 + C24901) * C1549 -
             (C25617 + C25616) * C1552 - (C25619 + C25618) * C50809) *
                C51022 +
            ((C24902 + C24903) * C1551 + (C24904 + C24905) * C1549 -
             (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
              C50957 * C3090) *
                 C1552 -
             (C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
              C50957 * C3096) *
                 C50809) *
                C24684) *
               C50843 * C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1972 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C51019 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C1973 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C51020 +
            (C49718 * C401 + C50957 * C415 + C49711 * C402 + C50691 * C416) *
                C1974 +
            (C49718 * C419 + C50957 * C431 + C49711 * C420 + C50691 * C432) *
                C1971) *
               C51021 +
           ((C24882 + C24883) * C1972 + (C24884 + C24885) * C51019 -
            (C25604 + C25605) * C1973 - (C25606 + C25607) * C51020 +
            (C26043 + C26044) * C1974 + (C26045 + C26046) * C1971) *
               C51022 +
           (C24906 * C1972 + C24907 * C51019 - C26539 * C1973 -
            C26540 * C51020 + (C26047 + C26048) * C1974 +
            (C26049 + C26050) * C1971) *
               C24684) *
              C50843 * C50972 +
          (((C25605 + C25604) * C1973 -
            ((C24885 + C24884) * C51019 + (C24883 + C24882) * C1972) +
            (C25607 + C25606) * C51020 - (C26044 + C26043) * C1974 -
            (C26046 + C26045) * C1971) *
               C51021 +
           ((C25609 + C25608) * C1973 -
            ((C24889 + C24888) * C51019 + (C24887 + C24886) * C1972) +
            (C25611 + C25610) * C51020 - (C26048 + C26047) * C1974 -
            (C26050 + C26049) * C1971) *
               C51022 +
           ((C26552 + C26553) * C1973 - (C25864 * C51019 + C25865 * C1972) +
            (C26554 + C26555) * C51020 -
            (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
             C50957 * C3564) *
                C1974 -
            (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
             C50957 * C3568) *
                C1971) *
               C24684) *
              C50843 * C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C1552 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C50809) *
               C51021 +
           ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
            (C25604 + C25605) * C1552 - (C25606 + C25607) * C50809) *
               C51022 +
           C26856 * C24684) *
              C50843 * C248 +
          (((C25605 + C25604) * C1552 -
            ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
            (C25607 + C25606) * C50809) *
               C51021 +
           ((C25609 + C25608) * C1552 -
            ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
            (C25611 + C25610) * C50809) *
               C51022 +
           ((C26552 + C26553) * C1552 - (C25864 * C1549 + C25865 * C1551) +
            (C26554 + C26555) * C50809) *
               C24684) *
              C50843 * C249 +
          (C26856 * C51021 +
           ((C24893 + C24892) * C1551 + (C24891 + C24890) * C1549 -
            (C26553 + C26552) * C1552 - (C26555 + C26554) * C50809) *
               C51022 +
           ((C25876 + C25877) * C1551 + (C25878 + C25879) * C1549 -
            (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
             C50957 * C4082) *
                C1552 -
            (C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
             C50957 * C4086) *
                C50809) *
               C24684) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C1552 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C50809) *
               C51021 +
           ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
            (C25604 + C25605) * C1552 - (C25606 + C25607) * C50809) *
               C51022 +
           (C24906 * C1551 + C24907 * C1549 - C26539 * C1552 -
            C26540 * C50809) *
               C24684) *
              C50843 * C50730 * C900 +
          (((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                C1552 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C1549 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C1551) +
            (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                C50809) *
               C51021 +
           ((C25612 + C25613) * C1552 -
            ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
            (C25614 + C25615) * C50809) *
               C51022 +
           ((C25616 + C25617) * C1552 - (C24908 * C1549 + C24909 * C1551) +
            (C25618 + C25619) * C50809) *
               C24684) *
              C50843 * C50730 * C901 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C1551 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C1549 -
            (C49711 * C397 + C50691 * C407 + C49718 * C398 + C50957 * C408) *
                C1552 -
            (C49711 * C411 + C50691 * C427 + C49718 * C412 + C50957 * C428) *
                C50809) *
               C51021 +
           ((C25224 + C25225) * C1551 + (C25226 + C25227) * C1549 -
            (C49711 * C783 + C50691 * C788 + C49718 * C782 + C50957 * C787) *
                C1552 -
            (C49711 * C792 + C50691 * C798 + C49718 * C791 + C50957 * C797) *
                C50809) *
               C51022 +
           ((C25228 + C25229) * C1551 + (C25230 + C25231) * C1549 -
            (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
             C50957 * C1440) *
                C1552 -
            (C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
             C50957 * C1448) *
                C50809) *
               C24684) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
               C1721 +
           (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
               C1717 -
           (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
               C1722 -
           (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
               C1718 +
           (C49718 * C401 + C50957 * C415 + C49711 * C402 + C50691 * C416) *
               C1723 +
           (C49718 * C419 + C50957 * C431 + C49711 * C420 + C50691 * C432) *
               C1719 -
           (C49711 * C1727 + C50691 * C1731 + C49718 * C1728 + C50957 * C1732) *
               C1724 -
           (C49711 * C1735 + C50691 * C1739 + C49718 * C1736 + C50957 * C1740) *
               C1720) *
              C51021 +
          ((C24882 + C24883) * C1721 + (C24884 + C24885) * C1717 -
           (C25604 + C25605) * C1722 - (C25606 + C25607) * C1718 +
           (C26043 + C26044) * C1723 + (C26045 + C26046) * C1719 -
           (C49711 * C4505 + C50691 * C4509 + C49718 * C4506 + C50957 * C4510) *
               C1724 -
           (C49711 * C4511 + C50691 * C4517 + C49718 * C4512 + C50957 * C4518) *
               C1720) *
              C51022 +
          (C24906 * C1721 + C24907 * C1717 - C26539 * C1722 - C26540 * C1718 +
           (C26047 + C26048) * C1723 + (C26049 + C26050) * C1719 -
           (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 + C50957 * C4514) *
               C1724 -
           (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 + C50957 * C4520) *
               C1720) *
              C24684) *
         C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1972 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C51019 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C1973 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C51020 +
            (C49718 * C401 + C50957 * C415 + C49711 * C402 + C50691 * C416) *
                C1974 +
            (C49718 * C419 + C50957 * C431 + C49711 * C420 + C50691 * C432) *
                C1971) *
               C51021 +
           ((C24882 + C24883) * C1972 + (C24884 + C24885) * C51019 -
            (C25604 + C25605) * C1973 - (C25606 + C25607) * C51020 +
            (C26043 + C26044) * C1974 + (C26045 + C26046) * C1971) *
               C51022 +
           (C24906 * C1972 + C24907 * C51019 - C26539 * C1973 -
            C26540 * C51020 + (C26047 + C26048) * C1974 +
            (C26049 + C26050) * C1971) *
               C24684) *
              C50843 * C50730 * C50964 +
          (((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                C1973 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C51019 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C1972) +
            (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                C51020 -
            (C49711 * C403 + C50691 * C417 + C49718 * C402 + C50957 * C416) *
                C1974 -
            (C49711 * C421 + C50691 * C433 + C49718 * C420 + C50957 * C432) *
                C1971) *
               C51021 +
           ((C25612 + C25613) * C1973 -
            ((C24897 + C24896) * C51019 + (C24895 + C24894) * C1972) +
            (C25614 + C25615) * C51020 -
            (C49711 * C1089 + C50691 * C1093 + C49718 * C1090 +
             C50957 * C1094) *
                C1974 -
            (C49711 * C1097 + C50691 * C1101 + C49718 * C1098 +
             C50957 * C1102) *
                C1971) *
               C51022 +
           ((C25616 + C25617) * C1973 - (C24908 * C51019 + C24909 * C1972) +
            (C25618 + C25619) * C51020 -
            (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
             C50957 * C2568) *
                C1974 -
            (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
             C50957 * C2574) *
                C1971) *
               C24684) *
              C50843 * C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C1552 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C50809) *
               C51021 +
           ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
            (C25604 + C25605) * C1552 - (C25606 + C25607) * C50809) *
               C51022 +
           (C24906 * C1551 + C24907 * C1549 - C26539 * C1552 -
            C26540 * C50809) *
               C24684) *
              C50843 * C50730 * C900 +
          (((C49718 * C399 + C50957 * C409 + C49711 * C398 + C50691 * C408) *
                C1552 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C1549 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C1551) +
            (C49718 * C413 + C50957 * C429 + C49711 * C412 + C50691 * C428) *
                C50809) *
               C51021 +
           ((C25612 + C25613) * C1552 -
            ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
            (C25614 + C25615) * C50809) *
               C51022 +
           ((C25616 + C25617) * C1552 - (C24908 * C1549 + C24909 * C1551) +
            (C25618 + C25619) * C50809) *
               C24684) *
              C50843 * C50730 * C901 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C1551 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C1549 -
            (C49711 * C397 + C50691 * C407 + C49718 * C398 + C50957 * C408) *
                C1552 -
            (C49711 * C411 + C50691 * C427 + C49718 * C412 + C50957 * C428) *
                C50809) *
               C51021 +
           ((C25224 + C25225) * C1551 + (C25226 + C25227) * C1549 -
            (C49711 * C783 + C50691 * C788 + C49718 * C782 + C50957 * C787) *
                C1552 -
            (C49711 * C792 + C50691 * C798 + C49718 * C791 + C50957 * C797) *
                C50809) *
               C51022 +
           ((C25228 + C25229) * C1551 + (C25230 + C25231) * C1549 -
            (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
             C50957 * C1440) *
                C1552 -
            (C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
             C50957 * C1448) *
                C50809) *
               C24684) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C49711 * C399 + C50691 * C409 + C49718 * C400 + C50957 * C410) *
                C1552 -
            (C49711 * C413 + C50691 * C429 + C49718 * C414 + C50957 * C430) *
                C50809) *
               C51021 +
           ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
            (C25604 + C25605) * C1552 - (C25606 + C25607) * C50809) *
               C51022 +
           C26856 * C24684) *
              C50843 * C248 +
          (((C25605 + C25604) * C1552 -
            ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
            (C25607 + C25606) * C50809) *
               C51021 +
           ((C25609 + C25608) * C1552 -
            ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
            (C25611 + C25610) * C50809) *
               C51022 +
           ((C26552 + C26553) * C1552 - (C25864 * C1549 + C25865 * C1551) +
            (C26554 + C26555) * C50809) *
               C24684) *
              C50843 * C249 +
          (C26856 * C51021 +
           ((C24893 + C24892) * C1551 + (C24891 + C24890) * C1549 -
            (C26553 + C26552) * C1552 - (C26555 + C26554) * C50809) *
               C51022 +
           ((C25876 + C25877) * C1551 + (C25878 + C25879) * C1549 -
            (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
             C50957 * C4082) *
                C1552 -
            (C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
             C50957 * C4086) *
                C50809) *
               C24684) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C19767 * C122 + C50686 * C129) * C121 +
                      (C19767 * C133 + C50686 * C143) * C50745) *
                         C51021 +
                     (C19915 + C19916) * C51022 + C19931 * C24684) *
                        C50986 +
                    ((C22199 * C121 + C22200 * C50745) * C51021 +
                     (C21993 + C21994) * C51022 + C31299 * C24684) *
                        C50907) *
                       C50972 -
                   (((C22990 + C22989) * C24684 + (C21999 + C22000) * C51022 +
                     (C21994 + C21993) * C51021) *
                        C50907 +
                    (C20612 * C24684 + (C19918 + C19917) * C51022 +
                     (C19916 + C19915) * C51021) *
                        C50986) *
                       C50781) *
                      C51015 +
                  ((((C19923 + C19924) * C51021 + (C19925 + C19926) * C51022 +
                     (C19927 + C19928) * C24684) *
                        C50986 +
                    ((C22001 + C22002) * C51021 + (C22003 + C22004) * C51022 +
                     (C31300 + C31301) * C24684) *
                        C50907) *
                       C50781 -
                   ((C31302 * C24684 + (C22002 + C22001) * C51022 +
                     (C22208 * C50745 + C22207 * C121) * C51021) *
                        C50907 +
                    (C19934 * C24684 + (C19924 + C19923) * C51022 +
                     ((C19767 * C134 + C50686 * C144) * C50745 +
                      (C19767 * C123 + C50686 * C130) * C121) *
                         C51021) *
                        C50986) *
                       C50972) *
                      C51016 +
                  (((((C19767 * C124 + C50686 * C131) * C121 +
                      (C19767 * C135 + C50686 * C145) * C50745) *
                         C51021 +
                     (C20149 + C20150) * C51022 + (C20151 + C20152) * C24684) *
                        C50986 +
                    ((C22531 * C121 + C22532 * C50745) * C51021 +
                     (C22373 + C22374) * C51022 + (C31601 + C31602) * C24684) *
                        C50907) *
                       C50972 -
                   ((((C19767 * C3094 + C50686 * C3097) * C50745 +
                      (C19767 * C3088 + C50686 * C3093) * C121) *
                         C24684 +
                     (C31602 + C31601) * C51022 + (C22374 + C22373) * C51021) *
                        C50907 +
                    ((C20154 + C20153) * C24684 + (C20152 + C20151) * C51022 +
                     (C20150 + C20149) * C51021) *
                        C50986) *
                       C50781) *
                      C539)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C644 +
              (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
              C22200 * C50809) *
                 C51021 +
             (C20383 + C20384 - C20431 - C20432) * C51022 + C21101 * C24684) *
                C50986 +
            ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
              C22202 * C50809) *
                 C51021 +
             (C22729 + C22730 - C22731 - C22732) * C51022 +
             (C23655 + C23654 - C23653 - C23656) * C24684) *
                C50907) *
               C50972 +
           (((C20431 - (C20384 + C20383) + C20432) * C51021 +
             (C20433 - (C20390 + C20389) + C20434) * C51022 +
             (C20435 - (C20396 + C20395) + C20436) * C24684) *
                C50986 +
            ((C22731 - (C22730 + C22729) + C22732) * C51021 +
             (C23653 - (C23654 + C23655) + C23656) * C51022 +
             (C20751 * C645 - (C20424 * C50973 + C20423 * C644) +
              C20752 * C50809) *
                 C24684) *
                C50907) *
               C50781) *
              C251 +
          ((((C22207 * C645 -
              ((C19767 * C134 + C50686 * C144) * C50973 +
               (C19767 * C123 + C50686 * C130) * C644) +
              C22208 * C50809) *
                 C51021 +
             (C20437 - (C20403 + C20404) + C20438) * C51022 +
             (C20439 - (C20409 + C20410) + C20440) * C24684) *
                C50986 +
            ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
              C22210 * C50809) *
                 C51021 +
             (C22737 - (C22738 + C22739) + C22740) * C51022 +
             (C31943 - (C31944 + C31945) + C31946) * C24684) *
                C50907) *
               C50972 +
           (((C20404 + C20403 - C20437 - C20438) * C51021 +
             (C20410 + C20409 - C20439 - C20440) * C51022 +
             (C20416 + C20415 - C20441 - C20442) * C24684) *
                C50986 +
            ((C22739 + C22738 - C22737 - C22740) * C51021 +
             (C31945 + C31944 - C31943 - C31946) * C51022 +
             (C20429 * C644 + C20430 * C50973 -
              (C19767 * C3561 + C50686 * C3563) * C645 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C24684) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C51021 +
             (C19915 + C19916) * C51022 + C19931 * C24684) *
                C50986 +
            ((C22199 * C121 + C22200 * C50745) * C51021 +
             (C21993 + C21994) * C51022 + C31299 * C24684) *
                C50907) *
               C248 -
           (((C22990 + C22989) * C24684 + (C21999 + C22000) * C51022 +
             (C21994 + C21993) * C51021) *
                C50907 +
            (C20612 * C24684 + (C19918 + C19917) * C51022 +
             (C19916 + C19915) * C51021) *
                C50986) *
               C249 +
           ((C19931 * C51021 + C19932 * C51022 + (C19922 + C19921) * C24684) *
                C50986 +
            (C31299 * C51021 + (C22989 + C22990) * C51022 +
             (C21099 * C121 + C21100 * C50745) * C24684) *
                C50907) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C51021 + (C19925 + C19926) * C51022 +
             (C19927 + C19928) * C24684) *
                C50986 +
            ((C22001 + C22002) * C51021 + (C22003 + C22004) * C51022 +
             (C31300 + C31301) * C24684) *
                C50907) *
               C249 -
           ((C31302 * C24684 + (C22002 + C22001) * C51022 +
             (C22208 * C50745 + C22207 * C121) * C51021) *
                C50907 +
            (C19934 * C24684 + (C19924 + C19923) * C51022 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C51021) *
                C50986) *
               C248 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C24684 +
             (C31301 + C31300) * C51022 + C31302 * C51021) *
                C50907 +
            ((C19930 + C19929) * C24684 + C19933 * C51022 + C19934 * C51021) *
                C50986) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C51021 +
            (C19915 + C19916) * C51022 + C19931 * C24684) *
               C50986 +
           ((C22199 * C121 + C22200 * C50745) * C51021 +
            (C21993 + C21994) * C51022 + (C22000 + C21999) * C24684) *
               C50907) *
              C50730 * C113 -
          (((C22004 + C22003) * C24684 + (C22002 + C22001) * C51022 +
            (C22208 * C50745 + C22207 * C121) * C51021) *
               C50907 +
           (C19934 * C24684 + (C19924 + C19923) * C51022 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C51021) *
               C50986) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C51021 +
            (C20149 + C20150) * C51022 + (C20151 + C20152) * C24684) *
               C50986 +
           ((C22531 * C121 + C22532 * C50745) * C51021 +
            (C22373 + C22374) * C51022 +
            ((C19767 * C1436 + C50686 * C1440) * C121 +
             (C19767 * C1444 + C50686 * C1448) * C50745) *
                C24684) *
               C50907) *
              C50730 * C115 -
          ((((C19767 * C1443 + C50686 * C1447) * C50745 +
             (C19767 * C1435 + C50686 * C1439) * C121) *
                C24684 +
            ((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C51022 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C51021) *
               C50907 +
           (((C19767 * C278 + C50686 * C290) * C50745 +
             (C19767 * C260 + C50686 * C274) * C121) *
                C24684 +
            ((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C51022 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C51021) *
               C50986) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C51021 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C51022 +
            (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C24684) *
               C50986 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C51021 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C51022 +
            (C20421 * C394 + C20422 * C391 - C20749 * C395 - C20750 * C392 +
             C23163 * C396 + C23164 * C393) *
                C24684) *
               C50907) *
              C50730 * C251 +
          (((C22207 * C395 -
             ((C19767 * C134 + C50686 * C144) * C391 +
              (C19767 * C123 + C50686 * C130) * C394) +
             C22208 * C392 - C22209 * C396 - C22210 * C393) *
                C51021 +
            (C20425 * C395 - (C19908 * C391 + C19907 * C394) + C20426 * C392 -
             C22013 * C396 - C22014 * C393) *
                C51022 +
            (C20427 * C395 - (C19910 * C391 + C19909 * C394) + C20428 * C392 -
             C22015 * C396 - C22016 * C393) *
                C24684) *
               C50986 +
           ((C22209 * C395 - (C22208 * C391 + C22207 * C394) + C22210 * C392 -
             C22211 * C396 - C22212 * C393) *
                C51021 +
            (C22013 * C395 - (C20426 * C391 + C20425 * C394) + C22014 * C392 -
             C22213 * C396 - C22214 * C393) *
                C51022 +
            (C22015 * C395 - (C20428 * C391 + C20427 * C394) + C22016 * C392 -
             (C19767 * C4507 + C50686 * C4513) * C396 -
             (C19767 * C4515 + C50686 * C4519) * C393) *
                C24684) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C51021 +
            (C20383 + C20384 - C20431 - C20432) * C51022 + C21101 * C24684) *
               C50986 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C51021 +
            (C22729 + C22730 - C22731 - C22732) * C51022 +
            (C23655 + C23654 - C23653 - C23656) * C24684) *
               C50907) *
              C50730 * C51015 +
          (((C22207 * C645 -
             ((C19767 * C134 + C50686 * C144) * C50973 +
              (C19767 * C123 + C50686 * C130) * C644) +
             C22208 * C50809) *
                C51021 +
            (C20437 - (C20403 + C20404) + C20438) * C51022 +
            (C20439 - (C20409 + C20410) + C20440) * C24684) *
               C50986 +
           ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
             C22210 * C50809) *
                C51021 +
            (C22737 - (C22738 + C22739) + C22740) * C51022 +
            (C22015 * C645 - (C20428 * C50973 + C20427 * C644) +
             C22016 * C50809) *
                C24684) *
               C50907) *
              C50730 * C51016 +
          ((((C19767 * C124 + C50686 * C131) * C644 +
             (C19767 * C135 + C50686 * C145) * C50973 - C22531 * C645 -
             C22532 * C50809) *
                C51021 +
            (C20143 * C644 + C20144 * C50973 - C22369 * C645 -
             C22370 * C50809) *
                C51022 +
            (C20145 * C644 + C20146 * C50973 - C31599 * C645 -
             C31600 * C50809) *
                C24684) *
               C50986 +
           ((C22531 * C644 + C22532 * C50973 - C22533 * C645 -
             C22534 * C50809) *
                C51021 +
            (C22369 * C644 + C22370 * C50973 - C22371 * C645 -
             C22372 * C50809) *
                C51022 +
            (C31599 * C644 + C31600 * C50973 -
             (C19767 * C2566 + C50686 * C2571) * C645 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C24684) *
               C50907) *
              C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C51021 +
            (C19915 + C19916) * C51022 + C19931 * C24684) *
               C50986 +
           ((C22199 * C121 + C22200 * C50745) * C51021 +
            (C21993 + C21994) * C51022 + (C22000 + C21999) * C24684) *
               C50907) *
              C50730 * C113 -
          (((C22004 + C22003) * C24684 + (C22002 + C22001) * C51022 +
            (C22208 * C50745 + C22207 * C121) * C51021) *
               C50907 +
           (C19934 * C24684 + (C19924 + C19923) * C51022 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C51021) *
               C50986) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C51021 +
            (C20149 + C20150) * C51022 + (C20151 + C20152) * C24684) *
               C50986 +
           ((C22531 * C121 + C22532 * C50745) * C51021 +
            (C22373 + C22374) * C51022 +
            ((C19767 * C1436 + C50686 * C1440) * C121 +
             (C19767 * C1444 + C50686 * C1448) * C50745) *
                C24684) *
               C50907) *
              C50730 * C115 -
          ((((C19767 * C1443 + C50686 * C1447) * C50745 +
             (C19767 * C1435 + C50686 * C1439) * C121) *
                C24684 +
            ((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C51022 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C51021) *
               C50907 +
           (((C19767 * C278 + C50686 * C290) * C50745 +
             (C19767 * C260 + C50686 * C274) * C121) *
                C24684 +
            ((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C51022 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C51021) *
               C50986) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C51021 +
             (C19915 + C19916) * C51022 + C19931 * C24684) *
                C50986 +
            ((C22199 * C121 + C22200 * C50745) * C51021 +
             (C21993 + C21994) * C51022 + C31299 * C24684) *
                C50907) *
               C248 -
           (((C22990 + C22989) * C24684 + (C21999 + C22000) * C51022 +
             (C21994 + C21993) * C51021) *
                C50907 +
            (C20612 * C24684 + (C19918 + C19917) * C51022 +
             (C19916 + C19915) * C51021) *
                C50986) *
               C249 +
           ((C19931 * C51021 + C19932 * C51022 + (C19922 + C19921) * C24684) *
                C50986 +
            (C31299 * C51021 + (C22989 + C22990) * C51022 +
             (C21099 * C121 + C21100 * C50745) * C24684) *
                C50907) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C51021 + (C19925 + C19926) * C51022 +
             (C19927 + C19928) * C24684) *
                C50986 +
            ((C22001 + C22002) * C51021 + (C22003 + C22004) * C51022 +
             (C31300 + C31301) * C24684) *
                C50907) *
               C249 -
           ((C31302 * C24684 + (C22002 + C22001) * C51022 +
             (C22208 * C50745 + C22207 * C121) * C51021) *
                C50907 +
            (C19934 * C24684 + (C19924 + C19923) * C51022 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C51021) *
                C50986) *
               C248 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C24684 +
             (C31301 + C31300) * C51022 + C31302 * C51021) *
                C50907 +
            ((C19930 + C19929) * C24684 + C19933 * C51022 + C19934 * C51021) *
                C50986) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C51021 +
             (C19915 + C19916) * C51022 + C19931 * C24684) *
                C50986 +
            ((C22199 * C121 + C22200 * C50745) * C51021 +
             (C21993 + C21994) * C51022 + C31299 * C24684) *
                C50907) *
               C51017 -
           ((C32191 * C24684 + (C21999 + C22000) * C51022 +
             (C21994 + C21993) * C51021) *
                C50907 +
            (C20612 * C24684 + (C19918 + C19917) * C51022 +
             (C19916 + C19915) * C51021) *
                C50986) *
               C51018 +
           ((C19931 * C51021 + C19932 * C51022 + (C19922 + C19921) * C24684) *
                C50986 +
            (C31299 * C51021 + (C22989 + C22990) * C51022 +
             (C32192 + C32193) * C24684) *
                C50907) *
               C1204) *
              C50964 +
          ((((C19923 + C19924) * C51021 + (C19925 + C19926) * C51022 +
             (C19927 + C19928) * C24684) *
                C50986 +
            ((C22001 + C22002) * C51021 + (C22003 + C22004) * C51022 +
             (C31300 + C31301) * C24684) *
                C50907) *
               C51018 -
           ((C31302 * C24684 + (C22002 + C22001) * C51022 +
             (C22208 * C50745 + C22207 * C121) * C51021) *
                C50907 +
            (C19934 * C24684 + (C19924 + C19923) * C51022 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C51021) *
                C50986) *
               C51017 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C24684 +
             (C31301 + C31300) * C51022 + C31302 * C51021) *
                C50907 +
            ((C19930 + C19929) * C24684 + C19933 * C51022 + C19934 * C51021) *
                C50986) *
               C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C51021 +
            (C20383 + C20384 - C20431 - C20432) * C51022 + C21101 * C24684) *
               C50986 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C51021 +
            (C22729 + C22730 - C22731 - C22732) * C51022 + C32838 * C24684) *
               C50907) *
              C51017 +
          (((C20431 - (C20384 + C20383) + C20432) * C51021 +
            (C20433 - (C20390 + C20389) + C20434) * C51022 +
            (C20435 - (C20396 + C20395) + C20436) * C24684) *
               C50986 +
           ((C22731 - (C22730 + C22729) + C22732) * C51021 +
            (C23653 - (C23654 + C23655) + C23656) * C51022 +
            (C32833 - (C32834 + C32835) + C32836) * C24684) *
               C50907) *
              C51018 +
          ((C21101 * C51021 + C21102 * C51022 +
            (C21094 + C21093 - C21103 - C21104) * C24684) *
               C50986 +
           (C32838 * C51021 + (C32835 + C32834 - C32833 - C32836) * C51022 +
            (C21099 * C644 + C21100 * C50973 -
             (C19767 * C20718 + C50686 * C20719) * C645 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C24684) *
               C50907) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C51021 +
            (C19915 + C19916) * C51022 + C19931 * C24684) *
               C50986 +
           ((C22199 * C121 + C22200 * C50745) * C51021 +
            (C21993 + C21994) * C51022 + C31299 * C24684) *
               C50907) *
              C969 -
          ((C32191 * C24684 + (C21999 + C22000) * C51022 +
            (C21994 + C21993) * C51021) *
               C50907 +
           (C20612 * C24684 + (C19918 + C19917) * C51022 +
            (C19916 + C19915) * C51021) *
               C50986) *
              C970 +
          ((C19931 * C51021 + C19932 * C51022 + (C19922 + C19921) * C24684) *
               C50986 +
           (C31299 * C51021 + (C22989 + C22990) * C51022 +
            (C32192 + C32193) * C24684) *
               C50907) *
              C971 -
          ((((C19767 * C21086 + C50686 * C21087) * C50745 +
             (C19767 * C21084 + C50686 * C21085) * C121) *
                C24684 +
            (C32193 + C32192) * C51022 + C32191 * C51021) *
               C50907 +
           ((C20620 + C20619) * C24684 + C20611 * C51022 + C20612 * C51021) *
               C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C51021 +
             (C19915 + C19916) * C51022 + C19931 * C24684) *
                C50986 +
            ((C22199 * C121 + C22200 * C50745) * C51021 +
             (C21993 + C21994) * C51022 + C31299 * C24684) *
                C50907) *
               C898 -
           (((C22990 + C22989) * C24684 + (C21999 + C22000) * C51022 +
             (C21994 + C21993) * C51021) *
                C50907 +
            (C20612 * C24684 + (C19918 + C19917) * C51022 +
             (C19916 + C19915) * C51021) *
                C50986) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C51021 + (C19925 + C19926) * C51022 +
             (C19927 + C19928) * C24684) *
                C50986 +
            ((C22001 + C22002) * C51021 + (C22003 + C22004) * C51022 +
             (C31300 + C31301) * C24684) *
                C50907) *
               C50781 -
           ((C31302 * C24684 + (C22002 + C22001) * C51022 +
             (C22208 * C50745 + C22207 * C121) * C51021) *
                C50907 +
            (C19934 * C24684 + (C19924 + C19923) * C51022 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C51021) *
                C50986) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C51021 +
             (C20149 + C20150) * C51022 + (C20151 + C20152) * C24684) *
                C50986 +
            ((C22531 * C121 + C22532 * C50745) * C51021 +
             (C22373 + C22374) * C51022 + (C31601 + C31602) * C24684) *
                C50907) *
               C898 -
           ((((C19767 * C3094 + C50686 * C3097) * C50745 +
              (C19767 * C3088 + C50686 * C3093) * C121) *
                 C24684 +
             (C31602 + C31601) * C51022 + (C22374 + C22373) * C51021) *
                C50907 +
            ((C20154 + C20153) * C24684 + (C20152 + C20151) * C51022 +
             (C20150 + C20149) * C51021) *
                C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C51021 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C51022 +
            (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C24684) *
               C50986 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C51021 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C51022 +
            (C32340 + C32341 - C32342 - C32343 + C32344 + C32345) * C24684) *
               C50907) *
              C898 +
          (((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C51021 +
            (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C51022 +
            (C20741 - (C20740 + C20739) + C20742 - C20757 - C20758) * C24684) *
               C50986 +
           ((C23145 - (C23144 + C23143) + C23146 - C23147 - C23148) * C51021 +
            (C32342 - (C32341 + C32340) + C32343 - C32344 - C32345) * C51022 +
            (C20751 * C395 - (C20424 * C391 + C20423 * C394) + C20752 * C392 -
             (C19767 * C21388 + C50686 * C21389) * C396 -
             (C19767 * C21390 + C50686 * C21391) * C393) *
                C24684) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C644 +
              (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
              C22200 * C50809) *
                 C51021 +
             (C20383 + C20384 - C20431 - C20432) * C51022 + C21101 * C24684) *
                C50986 +
            ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
              C22202 * C50809) *
                 C51021 +
             (C22729 + C22730 - C22731 - C22732) * C51022 +
             (C23655 + C23654 - C23653 - C23656) * C24684) *
                C50907) *
               C898 +
           (((C20431 - (C20384 + C20383) + C20432) * C51021 +
             (C20433 - (C20390 + C20389) + C20434) * C51022 +
             (C20435 - (C20396 + C20395) + C20436) * C24684) *
                C50986 +
            ((C22731 - (C22730 + C22729) + C22732) * C51021 +
             (C23653 - (C23654 + C23655) + C23656) * C51022 +
             (C20751 * C645 - (C20424 * C50973 + C20423 * C644) +
              C20752 * C50809) *
                 C24684) *
                C50907) *
               C50781) *
              C50964 +
          ((((C22207 * C645 -
              ((C19767 * C134 + C50686 * C144) * C50973 +
               (C19767 * C123 + C50686 * C130) * C644) +
              C22208 * C50809) *
                 C51021 +
             (C20437 - (C20403 + C20404) + C20438) * C51022 +
             (C20439 - (C20409 + C20410) + C20440) * C24684) *
                C50986 +
            ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
              C22210 * C50809) *
                 C51021 +
             (C22737 - (C22738 + C22739) + C22740) * C51022 +
             (C31943 - (C31944 + C31945) + C31946) * C24684) *
                C50907) *
               C898 +
           (((C20404 + C20403 - C20437 - C20438) * C51021 +
             (C20410 + C20409 - C20439 - C20440) * C51022 +
             (C20416 + C20415 - C20441 - C20442) * C24684) *
                C50986 +
            ((C22739 + C22738 - C22737 - C22740) * C51021 +
             (C31945 + C31944 - C31943 - C31946) * C51022 +
             (C20429 * C644 + C20430 * C50973 -
              (C19767 * C3561 + C50686 * C3563) * C645 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C24684) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C51021 +
             (C19915 + C19916) * C51022 + C19931 * C24684) *
                C50986 +
            ((C22199 * C121 + C22200 * C50745) * C51021 +
             (C21993 + C21994) * C51022 + C31299 * C24684) *
                C50907) *
               C898 -
           (((C22990 + C22989) * C24684 + (C21999 + C22000) * C51022 +
             (C21994 + C21993) * C51021) *
                C50907 +
            (C20612 * C24684 + (C19918 + C19917) * C51022 +
             (C19916 + C19915) * C51021) *
                C50986) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C51021 + (C19925 + C19926) * C51022 +
             (C19927 + C19928) * C24684) *
                C50986 +
            ((C22001 + C22002) * C51021 + (C22003 + C22004) * C51022 +
             (C31300 + C31301) * C24684) *
                C50907) *
               C50781 -
           ((C31302 * C24684 + (C22002 + C22001) * C51022 +
             (C22208 * C50745 + C22207 * C121) * C51021) *
                C50907 +
            (C19934 * C24684 + (C19924 + C19923) * C51022 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C51021) *
                C50986) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C51021 +
             (C20149 + C20150) * C51022 + (C20151 + C20152) * C24684) *
                C50986 +
            ((C22531 * C121 + C22532 * C50745) * C51021 +
             (C22373 + C22374) * C51022 + (C31601 + C31602) * C24684) *
                C50907) *
               C898 -
           ((((C19767 * C3094 + C50686 * C3097) * C50745 +
              (C19767 * C3088 + C50686 * C3093) * C121) *
                 C24684 +
             (C31602 + C31601) * C51022 + (C22374 + C22373) * C51021) *
                C50907 +
            ((C20154 + C20153) * C24684 + (C20152 + C20151) * C51022 +
             (C20150 + C20149) * C51021) *
                C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C51021 +
            (C19915 + C19916) * C51022 + C19931 * C24684) *
               C50986 +
           ((C22199 * C121 + C22200 * C50745) * C51021 +
            (C21993 + C21994) * C51022 + C31299 * C24684) *
               C50907) *
              C969 -
          ((C32191 * C24684 + (C21999 + C22000) * C51022 +
            (C21994 + C21993) * C51021) *
               C50907 +
           (C20612 * C24684 + (C19918 + C19917) * C51022 +
            (C19916 + C19915) * C51021) *
               C50986) *
              C970 +
          ((C19931 * C51021 + C19932 * C51022 + (C19922 + C19921) * C24684) *
               C50986 +
           (C31299 * C51021 + (C22989 + C22990) * C51022 +
            (C32192 + C32193) * C24684) *
               C50907) *
              C971 -
          ((((C19767 * C21086 + C50686 * C21087) * C50745 +
             (C19767 * C21084 + C50686 * C21085) * C121) *
                C24684 +
            (C32193 + C32192) * C51022 + C32191 * C51021) *
               C50907 +
           ((C20620 + C20619) * C24684 + C20611 * C51022 + C20612 * C51021) *
               C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C1551 +
              (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
              C22200 * C50809) *
                 C51021 +
             (C21301 + C21302 - C21303 - C21304) * C51022 + C21321 * C24684) *
                C50986 +
            ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
              C22202 * C50809) *
                 C51021 +
             (C23953 + C23954 - C23955 - C23956) * C51022 + C33137 * C24684) *
                C50907) *
               C50972 +
           (((C21303 - (C21302 + C21301) + C21304) * C51021 +
             (C21307 - (C21306 + C21305) + C21308) * C51022 +
             (C21311 - (C21310 + C21309) + C21312) * C24684) *
                C50986 +
            ((C23955 - (C23954 + C23953) + C23956) * C51021 +
             (C23961 - (C23962 + C23963) + C23964) * C51022 +
             (C33132 - (C33133 + C33134) + C33135) * C24684) *
                C50907) *
               C50781) *
              C50964 +
          ((((C22207 * C1552 -
              ((C19767 * C134 + C50686 * C144) * C1549 +
               (C19767 * C123 + C50686 * C130) * C1551) +
              C22208 * C50809) *
                 C51021 +
             (C21523 - (C21524 + C21525) + C21526) * C51022 +
             (C21527 - (C21528 + C21529) + C21530) * C24684) *
                C50986 +
            ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
              C22210 * C50809) *
                 C51021 +
             (C24271 - (C24272 + C24273) + C24274) * C51022 +
             (C33430 - (C33431 + C33432) + C33433) * C24684) *
                C50907) *
               C50972 +
           (((C21525 + C21524 - C21523 - C21526) * C51021 +
             (C21529 + C21528 - C21527 - C21530) * C51022 +
             (C21533 + C21532 - C21531 - C21534) * C24684) *
                C50986 +
            ((C24273 + C24272 - C24271 - C24274) * C51021 +
             (C33432 + C33431 - C33430 - C33433) * C51022 +
             (C20429 * C1551 + C20430 * C1549 -
              (C19767 * C3561 + C50686 * C3563) * C1552 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C24684) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C51021 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C51022 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C24684) *
               C50986 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C51021 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C51022 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C24684) *
               C50907) *
              C50972 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C51021 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C51022 +
            (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C24684) *
               C50986 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C51021 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C51022 +
            (C20751 * C1973 - (C20424 * C51019 + C20423 * C1972) +
             C20752 * C51020 - (C19767 * C21388 + C50686 * C21389) * C1974 -
             (C19767 * C21390 + C50686 * C21391) * C1971) *
                C24684) *
               C50907) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C51021 +
            (C21301 + C21302 - C21303 - C21304) * C51022 + C21321 * C24684) *
               C50986 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C51021 +
            (C23953 + C23954 - C23955 - C23956) * C51022 + C33137 * C24684) *
               C50907) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C51021 +
            (C21307 - (C21306 + C21305) + C21308) * C51022 +
            (C21311 - (C21310 + C21309) + C21312) * C24684) *
               C50986 +
           ((C23955 - (C23954 + C23953) + C23956) * C51021 +
            (C23961 - (C23962 + C23963) + C23964) * C51022 +
            (C33132 - (C33133 + C33134) + C33135) * C24684) *
               C50907) *
              C249 +
          ((C21321 * C51021 + C21322 * C51022 +
            (C21315 + C21314 - C21313 - C21316) * C24684) *
               C50986 +
           (C33137 * C51021 + (C33134 + C33133 - C33132 - C33135) * C51022 +
            (C21099 * C1551 + C21100 * C1549 -
             (C19767 * C20718 + C50686 * C20719) * C1552 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C24684) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C51021 +
            (C21301 + C21302 - C21303 - C21304) * C51022 + C21321 * C24684) *
               C50986 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C51021 +
            (C23953 + C23954 - C23955 - C23956) * C51022 +
            (C23963 + C23962 - C23961 - C23964) * C24684) *
               C50907) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C51021 +
            (C21523 - (C21524 + C21525) + C21526) * C51022 +
            (C21527 - (C21528 + C21529) + C21530) * C24684) *
               C50986 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C51021 +
            (C24271 - (C24272 + C24273) + C24274) * C51022 +
            (C22015 * C1552 - (C20428 * C1549 + C20427 * C1551) +
             C22016 * C50809) *
                C24684) *
               C50907) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C51021 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C51022 +
            (C20145 * C1551 + C20146 * C1549 - C31599 * C1552 -
             C31600 * C50809) *
                C24684) *
               C50986 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C51021 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C51022 +
            (C31599 * C1551 + C31600 * C1549 -
             (C19767 * C2566 + C50686 * C2571) * C1552 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C24684) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1721 +
            (C19767 * C133 + C50686 * C143) * C1717 - C22199 * C1722 -
            C22200 * C1718 + C22201 * C1723 + C22202 * C1719 - C22203 * C1724 -
            C22204 * C1720) *
               C51021 +
           (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 - C20420 * C1718 +
            C20747 * C1723 + C20748 * C1719 - C22205 * C1724 - C22206 * C1720) *
               C51022 +
           (C19901 * C1721 + C19902 * C1717 - C20421 * C1722 - C20422 * C1718 +
            C20749 * C1723 + C20750 * C1719 - C23163 * C1724 - C23164 * C1720) *
               C24684) *
              C50986 +
          ((C22199 * C1721 + C22200 * C1717 - C22201 * C1722 - C22202 * C1718 +
            C22203 * C1723 + C22204 * C1719 - C24075 * C1724 - C24076 * C1720) *
               C51021 +
           (C20419 * C1721 + C20420 * C1717 - C20747 * C1722 - C20748 * C1718 +
            C22205 * C1723 + C22206 * C1719 - C23161 * C1724 - C23162 * C1720) *
               C51022 +
           (C20421 * C1721 + C20422 * C1717 - C20749 * C1722 - C20750 * C1718 +
            C23163 * C1723 + C23164 * C1719 -
            (C19767 * C23138 + C50686 * C23139) * C1724 -
            (C19767 * C23140 + C50686 * C23141) * C1720) *
               C24684) *
              C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C51021 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C51022 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C24684) *
               C50986 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C51021 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C51022 +
            (C20421 * C1972 + C20422 * C51019 - C20749 * C1973 -
             C20750 * C51020 + C23163 * C1974 + C23164 * C1971) *
                C24684) *
               C50907) *
              C50730 * C50964 +
          (((C22207 * C1973 -
             ((C19767 * C134 + C50686 * C144) * C51019 +
              (C19767 * C123 + C50686 * C130) * C1972) +
             C22208 * C51020 - C22209 * C1974 - C22210 * C1971) *
                C51021 +
            (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
             C20426 * C51020 - C22013 * C1974 - C22014 * C1971) *
                C51022 +
            (C20427 * C1973 - (C19910 * C51019 + C19909 * C1972) +
             C20428 * C51020 - C22015 * C1974 - C22016 * C1971) *
                C24684) *
               C50986 +
           ((C22209 * C1973 - (C22208 * C51019 + C22207 * C1972) +
             C22210 * C51020 - C22211 * C1974 - C22212 * C1971) *
                C51021 +
            (C22013 * C1973 - (C20426 * C51019 + C20425 * C1972) +
             C22014 * C51020 - C22213 * C1974 - C22214 * C1971) *
                C51022 +
            (C22015 * C1973 - (C20428 * C51019 + C20427 * C1972) +
             C22016 * C51020 - (C19767 * C4507 + C50686 * C4513) * C1974 -
             (C19767 * C4515 + C50686 * C4519) * C1971) *
                C24684) *
               C50907) *
              C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C51021 +
            (C21301 + C21302 - C21303 - C21304) * C51022 + C21321 * C24684) *
               C50986 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C51021 +
            (C23953 + C23954 - C23955 - C23956) * C51022 +
            (C23963 + C23962 - C23961 - C23964) * C24684) *
               C50907) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C51021 +
            (C21523 - (C21524 + C21525) + C21526) * C51022 +
            (C21527 - (C21528 + C21529) + C21530) * C24684) *
               C50986 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C51021 +
            (C24271 - (C24272 + C24273) + C24274) * C51022 +
            (C22015 * C1552 - (C20428 * C1549 + C20427 * C1551) +
             C22016 * C50809) *
                C24684) *
               C50907) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C51021 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C51022 +
            (C20145 * C1551 + C20146 * C1549 - C31599 * C1552 -
             C31600 * C50809) *
                C24684) *
               C50986 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C51021 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C51022 +
            (C31599 * C1551 + C31600 * C1549 -
             (C19767 * C2566 + C50686 * C2571) * C1552 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C24684) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C51021 +
            (C21301 + C21302 - C21303 - C21304) * C51022 + C21321 * C24684) *
               C50986 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C51021 +
            (C23953 + C23954 - C23955 - C23956) * C51022 + C33137 * C24684) *
               C50907) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C51021 +
            (C21307 - (C21306 + C21305) + C21308) * C51022 +
            (C21311 - (C21310 + C21309) + C21312) * C24684) *
               C50986 +
           ((C23955 - (C23954 + C23953) + C23956) * C51021 +
            (C23961 - (C23962 + C23963) + C23964) * C51022 +
            (C33132 - (C33133 + C33134) + C33135) * C24684) *
               C50907) *
              C249 +
          ((C21321 * C51021 + C21322 * C51022 +
            (C21315 + C21314 - C21313 - C21316) * C24684) *
               C50986 +
           (C33137 * C51021 + (C33134 + C33133 - C33132 - C33135) * C51022 +
            (C21099 * C1551 + C21100 * C1549 -
             (C19767 * C20718 + C50686 * C20719) * C1552 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C24684) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C50972 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C50781) *
              C51015 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C50781 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C50972) *
              C51016 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C19763 +
            (C20149 + C20150) * C19764 + (C20151 + C20152) * C19765 +
            (C20153 + C20154) * C19766) *
               C50843 * C50972 -
           (((C19767 * C2331 + C50686 * C2335) * C50745 +
             (C19767 * C2326 + C50686 * C2332) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + (C20152 + C20151) * C19764 +
            (C20150 + C20149) * C19763) *
               C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C50972 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C50781) *
              C51015 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C50972) *
              C51016 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50745) *
                C50881) *
               C50843 * C50972 -
           (((C16985 * C281 + C16980 * C292 + C16984 * C278 + C16979 * C290 +
              C16983 * C277 + C16978 * C289) *
                 C50745 +
             (C16985 * C262 + C16980 * C282 + C16984 * C260 + C16979 * C274 +
              C16983 * C259 + C16978 * C273) *
                 C121) *
                C50881 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C16981 +
             (C19915 + C19916) * C50881) *
                C5105 +
            ((C22199 * C121 + C22200 * C50745) * C16981 +
             (C21993 + C21994) * C50881) *
                C5106 +
            ((C22201 * C121 + C22202 * C50745) * C16981 +
             (C21995 + C21996) * C50881) *
                C5107) *
               C50972 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
               C50781) *
              C51015 +
          ((((C19923 + C19924) * C16981 + (C19925 + C19926) * C50881) * C5105 +
            ((C22001 + C22002) * C16981 + (C22003 + C22004) * C50881) * C5106 +
            ((C22017 + C22018) * C16981 + (C22019 + C22020) * C50881) * C5107) *
               C50781 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C16981) *
                C5107 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C16981) *
                C5106 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C16981) *
                C5105) *
               C50972) *
              C51016 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C16981 +
             (C20149 + C20150) * C50881) *
                C5105 +
            (((C19767 * C398 + C50686 * C408) * C121 +
              (C19767 * C412 + C50686 * C428) * C50745) *
                 C16981 +
             (C22373 + C22374) * C50881) *
                C5106 +
            (((C19767 * C403 + C50686 * C417) * C121 +
              (C19767 * C421 + C50686 * C433) * C50745) *
                 C16981 +
             (C22375 + C22376) * C50881) *
                C5107) *
               C50972 -
           ((((C19767 * C2572 + C50686 * C2575) * C50745 +
              (C19767 * C2566 + C50686 * C2571) * C121) *
                 C50881 +
             (C22376 + C22375) * C16981) *
                C5107 +
            (((C19767 * C1444 + C50686 * C1448) * C50745 +
              (C19767 * C1436 + C50686 * C1440) * C121) *
                 C50881 +
             (C22374 + C22373) * C16981) *
                C5106 +
            ((C20152 + C20151) * C50881 + (C20150 + C20149) * C16981) * C5105) *
               C50781) *
              C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 -
                      (C19767 * C400 + C50686 * C410) * C645 -
                      (C19767 * C414 + C50686 * C430) * C50809) *
                         C19763 +
                     (C20383 + C20384 - C20431 - C20432) * C19764 +
                     (C20389 + C20390 - C20433 - C20434) * C19765 +
                     (C20395 + C20396 - C20435 - C20436) * C19766) *
                        C50843 * C50972 +
                    ((C20431 - (C20384 + C20383) + C20432) * C19763 +
                     (C20433 - (C20390 + C20389) + C20434) * C19764 +
                     (C20435 - (C20396 + C20395) + C20436) * C19765 +
                     ((C19767 * C4080 + C50686 * C4082) * C645 -
                      (C19905 * C50973 + C19906 * C644) +
                      (C19767 * C4084 + C50686 * C4086) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C251 +
                   ((((C19767 * C399 + C50686 * C409) * C645 -
                      ((C19767 * C134 + C50686 * C144) * C50973 +
                       (C19767 * C123 + C50686 * C130) * C644) +
                      (C19767 * C413 + C50686 * C429) * C50809) *
                         C19763 +
                     (C20437 - (C20403 + C20404) + C20438) * C19764 +
                     (C20439 - (C20409 + C20410) + C20440) * C19765 +
                     (C20441 - (C20415 + C20416) + C20442) * C19766) *
                        C50843 * C50972 +
                    ((C20404 + C20403 - C20437 - C20438) * C19763 +
                     (C20410 + C20409 - C20439 - C20440) * C19764 +
                     (C20416 + C20415 - C20441 - C20442) * C19765 +
                     (C19913 * C644 + C19914 * C50973 -
                      (C19767 * C4079 + C50686 * C4081) * C645 -
                      (C19767 * C4083 + C50686 * C4085) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C644 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50973 -
                      (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                       C16979 * C409 + C16983 * C400 + C16978 * C410) *
                          C645 -
                      (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                       C16979 * C429 + C16983 * C414 + C16978 * C430) *
                          C50809) *
                         C16981 +
                     ((C17181 + C17182 + C17183) * C644 +
                      (C17184 + C17185 + C17186) * C50973 -
                      (C17879 + C17880 + C17881) * C645 -
                      (C17882 + C17883 + C17884) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17881 + C17880 + C17879) * C645 -
                      ((C17186 + C17185 + C17184) * C50973 +
                       (C17183 + C17182 + C17181) * C644) +
                      (C17884 + C17883 + C17882) * C50809) *
                         C16981 +
                     ((C16983 * C1438 + C16978 * C1442 + C16984 * C1437 +
                       C16979 * C1441 + C16985 * C1436 + C16980 * C1440) *
                          C645 -
                      ((C17187 + C17188 + C17189) * C50973 +
                       (C17190 + C17191 + C17192) * C644) +
                      (C16983 * C1446 + C16978 * C1450 + C16984 * C1445 +
                       C16979 * C1449 + C16985 * C1444 + C16980 * C1448) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C251 +
                   ((((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                       C16979 * C408 + C16985 * C397 + C16980 * C407) *
                          C645 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C50973 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C644) +
                      (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                       C16979 * C428 + C16985 * C411 + C16980 * C427) *
                          C50809) *
                         C16981 +
                     ((C17885 + C17886 + C17887) * C645 -
                      ((C17198 + C17197 + C17196) * C50973 +
                       (C17195 + C17194 + C17193) * C644) +
                      (C17888 + C17889 + C17890) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17193 + C17194 + C17195) * C644 +
                      (C17196 + C17197 + C17198) * C50973 -
                      (C17887 + C17886 + C17885) * C645 -
                      (C17890 + C17889 + C17888) * C50809) *
                         C16981 +
                     ((C17199 + C17200 + C17201) * C644 +
                      (C17202 + C17203 + C17204) * C50973 -
                      (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                       C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                          C645 -
                      (C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                       C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C644 +
                       (C19767 * C133 + C50686 * C143) * C50973 -
                       C22199 * C645 - C22200 * C50809) *
                          C16981 +
                      (C20383 + C20384 - C20431 - C20432) * C50881) *
                         C5105 +
                     ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                       C22202 * C50809) *
                          C16981 +
                      (C22729 + C22730 - C22731 - C22732) * C50881) *
                         C5106 +
                     ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                       C22204 * C50809) *
                          C16981 +
                      (C22733 + C22734 - C22735 - C22736) * C50881) *
                         C5107) *
                        C50972 +
                    (((C20431 - (C20384 + C20383) + C20432) * C16981 +
                      (C20433 - (C20390 + C20389) + C20434) * C50881) *
                         C5105 +
                     ((C22731 - (C22730 + C22729) + C22732) * C16981 +
                      (C20749 * C645 - (C20422 * C50973 + C20421 * C644) +
                       C20750 * C50809) *
                          C50881) *
                         C5106 +
                     ((C22735 - (C22734 + C22733) + C22736) * C16981 +
                      ((C19767 * C4508 + C50686 * C4514) * C645 -
                       (C20750 * C50973 + C20749 * C644) +
                       (C19767 * C4516 + C50686 * C4520) * C50809) *
                          C50881) *
                         C5107) *
                        C50781) *
                       C251 +
                   ((((C22207 * C645 -
                       ((C19767 * C134 + C50686 * C144) * C50973 +
                        (C19767 * C123 + C50686 * C130) * C644) +
                       C22208 * C50809) *
                          C16981 +
                      (C20437 - (C20403 + C20404) + C20438) * C50881) *
                         C5105 +
                     ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
                       C22210 * C50809) *
                          C16981 +
                      (C22737 - (C22738 + C22739) + C22740) * C50881) *
                         C5106 +
                     ((C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
                       C22212 * C50809) *
                          C16981 +
                      (C22741 - (C22742 + C22743) + C22744) * C50881) *
                         C5107) *
                        C50972 +
                    (((C20404 + C20403 - C20437 - C20438) * C16981 +
                      (C20410 + C20409 - C20439 - C20440) * C50881) *
                         C5105 +
                     ((C22739 + C22738 - C22737 - C22740) * C16981 +
                      (C20427 * C644 + C20428 * C50973 - C22015 * C645 -
                       C22016 * C50809) *
                          C50881) *
                         C5106 +
                     ((C22743 + C22742 - C22741 - C22744) * C16981 +
                      (C22015 * C644 + C22016 * C50973 -
                       (C19767 * C4507 + C50686 * C4513) * C645 -
                       (C19767 * C4515 + C50686 * C4519) * C50809) *
                          C50881) *
                         C5107) *
                        C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50745) *
                   C16981 +
               ((C16983 * C256 + C16978 * C270 + C16984 * C255 + C16979 * C269 +
                 C16985 * C254 + C16980 * C268) *
                    C121 +
                (C16983 * C266 + C16978 * C286 + C16984 * C265 + C16979 * C285 +
                 C16985 * C264 + C16980 * C284) *
                    C50745) *
                   C50881) *
                  C50843 * C50730 * C113 -
              (((C16985 * C263 + C16980 * C283 + C16984 * C264 + C16979 * C284 +
                 C16983 * C265 + C16978 * C285) *
                    C50745 +
                (C16985 * C253 + C16980 * C267 + C16984 * C254 + C16979 * C268 +
                 C16983 * C255 + C16978 * C269) *
                    C121) *
                   C50881 +
               ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
                 C16983 * C134 + C16978 * C144) *
                    C50745 +
                (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
                 C16983 * C123 + C16978 * C130) *
                    C121) *
                   C16981) *
                  C50843 * C50730 * C114 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C121 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C50745) *
                   C16981 +
               ((C16983 * C254 + C16978 * C268 + C16984 * C253 + C16979 * C267 +
                 C16985 * C261 + C16980 * C279) *
                    C121 +
                (C16983 * C264 + C16978 * C284 + C16984 * C263 + C16979 * C283 +
                 C16985 * C280 + C16980 * C291) *
                    C50745) *
                   C50881) *
                  C50843 * C50730 * C115 -
              (((C16985 * C541 + C16980 * C543 + C16984 * C280 + C16979 * C291 +
                 C16983 * C263 + C16978 * C283) *
                    C50745 +
                (C16985 * C540 + C16980 * C542 + C16984 * C261 + C16979 * C279 +
                 C16983 * C253 + C16978 * C267) *
                    C121) *
                   C50881 +
               ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
                 C16983 * C136 + C16978 * C146) *
                    C50745 +
                (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
                 C16983 * C125 + C16978 * C132) *
                    C121) *
                   C16981) *
                  C50843 * C50730 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50745) *
                    C16981 +
                ((C17181 + C17182 + C17183) * C121 +
                 (C17184 + C17185 + C17186) * C50745) *
                    C50881) *
                   C50843 * C248 -
               (((C17187 + C17188 + C17189) * C50745 +
                 (C17190 + C17191 + C17192) * C121) *
                    C50881 +
                ((C17186 + C17185 + C17184) * C50745 +
                 (C17183 + C17182 + C17181) * C121) *
                    C16981) *
                   C50843 * C249 +
               (((C17192 + C17191 + C17190) * C121 +
                 (C17189 + C17188 + C17187) * C50745) *
                    C16981 +
                ((C16983 * C977 + C16978 * C985 + C16984 * C976 +
                  C16979 * C984 + C16985 * C975 + C16980 * C983) *
                     C121 +
                 (C16983 * C981 + C16978 * C989 + C16984 * C980 +
                  C16979 * C988 + C16985 * C979 + C16980 * C987) *
                     C50745) *
                    C50881) *
                   C50843 * C250) *
                  C251 +
              ((((C17193 + C17194 + C17195) * C121 +
                 (C17196 + C17197 + C17198) * C50745) *
                    C16981 +
                ((C17199 + C17200 + C17201) * C121 +
                 (C17202 + C17203 + C17204) * C50745) *
                    C50881) *
                   C50843 * C249 -
               (((C17198 + C17197 + C17196) * C50745 +
                 (C17195 + C17194 + C17193) * C121) *
                    C50881 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50745 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C16981) *
                   C50843 * C248 -
               (((C16985 * C978 + C16980 * C986 + C16984 * C979 +
                  C16979 * C987 + C16983 * C980 + C16978 * C988) *
                     C50745 +
                 (C16985 * C974 + C16980 * C982 + C16984 * C975 +
                  C16979 * C983 + C16983 * C976 + C16978 * C984) *
                     C121) *
                    C50881 +
                ((C17204 + C17203 + C17202) * C50745 +
                 (C17201 + C17200 + C17199) * C121) *
                    C16981) *
                   C50843 * C250) *
                  C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C395 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C392 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C396 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C393) *
               C16981 +
           ((C17181 + C17182 + C17183) * C394 +
            (C17184 + C17185 + C17186) * C391 -
            (C16985 * C782 + C16980 * C787 + C16984 * C781 + C16979 * C786 +
             C16983 * C780 + C16978 * C785) *
                C395 -
            (C16985 * C791 + C16980 * C797 + C16984 * C790 + C16979 * C796 +
             C16983 * C789 + C16978 * C795) *
                C392 +
            (C16983 * C1091 + C16978 * C1095 + C16984 * C1090 + C16979 * C1094 +
             C16985 * C1089 + C16980 * C1093) *
                C396 +
            (C16983 * C1099 + C16978 * C1103 + C16984 * C1098 + C16979 * C1102 +
             C16985 * C1097 + C16980 * C1101) *
                C393) *
               C50881) *
              C50843 * C50730 * C251 +
          (((C16983 * C399 + C16978 * C409 + C16984 * C398 + C16979 * C408 +
             C16985 * C397 + C16980 * C407) *
                C395 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C391 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C394) +
            (C16983 * C413 + C16978 * C429 + C16984 * C412 + C16979 * C428 +
             C16985 * C411 + C16980 * C427) *
                C392 -
            (C16985 * C404 + C16980 * C418 + C16984 * C403 + C16979 * C417 +
             C16983 * C402 + C16978 * C416) *
                C396 -
            (C16985 * C422 + C16980 * C434 + C16984 * C421 + C16979 * C433 +
             C16983 * C420 + C16978 * C432) *
                C393) *
               C16981 +
           ((C16983 * C781 + C16978 * C786 + C16984 * C782 + C16979 * C787 +
             C16985 * C783 + C16980 * C788) *
                C395 -
            ((C17198 + C17197 + C17196) * C391 +
             (C17195 + C17194 + C17193) * C394) +
            (C16983 * C790 + C16978 * C796 + C16984 * C791 + C16979 * C797 +
             C16985 * C792 + C16980 * C798) *
                C392 -
            (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 + C16979 * C1093 +
             C16983 * C1090 + C16978 * C1094) *
                C396 -
            (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 + C16979 * C1101 +
             C16983 * C1098 + C16978 * C1102) *
                C393) *
               C50881) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           ((C19767 * C256 + C50686 * C270) * C121 +
            (C19767 * C266 + C50686 * C286) * C50745) *
               C19764 +
           ((C19767 * C257 + C50686 * C271) * C121 +
            (C19767 * C275 + C50686 * C287) * C50745) *
               C19765 +
           ((C19767 * C977 + C50686 * C985) * C121 +
            (C19767 * C981 + C50686 * C989) * C50745) *
               C19766) *
              C50843 * C50730 * C113 -
          (((C19767 * C980 + C50686 * C988) * C50745 +
            (C19767 * C976 + C50686 * C984) * C121) *
               C19766 +
           ((C19767 * C276 + C50686 * C288) * C50745 +
            (C19767 * C258 + C50686 * C272) * C121) *
               C19765 +
           ((C19767 * C265 + C50686 * C285) * C50745 +
            (C19767 * C255 + C50686 * C269) * C121) *
               C19764 +
           ((C19767 * C134 + C50686 * C144) * C50745 +
            (C19767 * C123 + C50686 * C130) * C121) *
               C19763) *
              C50843 * C50730 * C114 +
          (((C19767 * C124 + C50686 * C131) * C121 +
            (C19767 * C135 + C50686 * C145) * C50745) *
               C19763 +
           ((C19767 * C254 + C50686 * C268) * C121 +
            (C19767 * C264 + C50686 * C284) * C50745) *
               C19764 +
           ((C19767 * C259 + C50686 * C273) * C121 +
            (C19767 * C277 + C50686 * C289) * C50745) *
               C19765 +
           ((C19767 * C975 + C50686 * C983) * C121 +
            (C19767 * C979 + C50686 * C987) * C50745) *
               C19766) *
              C50843 * C50730 * C115 -
          (((C19767 * C978 + C50686 * C986) * C50745 +
            (C19767 * C974 + C50686 * C982) * C121) *
               C19766 +
           ((C19767 * C278 + C50686 * C290) * C50745 +
            (C19767 * C260 + C50686 * C274) * C121) *
               C19765 +
           ((C19767 * C263 + C50686 * C283) * C50745 +
            (C19767 * C253 + C50686 * C267) * C121) *
               C19764 +
           ((C19767 * C136 + C50686 * C146) * C50745 +
            (C19767 * C125 + C50686 * C132) * C121) *
               C19763) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C248 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C249 +
           (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
            ((C19767 * C3391 + C50686 * C3395) * C121 +
             (C19767 * C3393 + C50686 * C3397) * C50745) *
                C19766) *
               C50843 * C250) *
              C251 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C249 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C248 -
           (((C19767 * C3392 + C50686 * C3396) * C50745 +
             (C19767 * C3390 + C50686 * C3394) * C121) *
                C19766 +
            (C19930 + C19929) * C19765 + C19933 * C19764 + C19934 * C19763) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C19767 * C122 + C50686 * C129) * C394 +
                                (C19767 * C133 + C50686 * C143) * C391 -
                                (C19767 * C400 + C50686 * C410) * C395 -
                                (C19767 * C414 + C50686 * C430) * C392 +
                                (C19767 * C401 + C50686 * C415) * C396 +
                                (C19767 * C419 + C50686 * C431) * C393) *
                                   C19763 +
                               (C19899 * C394 + C19900 * C391 -
                                (C19767 * C780 + C50686 * C785) * C395 -
                                (C19767 * C789 + C50686 * C795) * C392 +
                                (C19767 * C1091 + C50686 * C1095) * C396 +
                                (C19767 * C1099 + C50686 * C1103) * C393) *
                                   C19764 +
                               (C19901 * C394 + C19902 * C391 -
                                (C19767 * C1438 + C50686 * C1442) * C395 -
                                (C19767 * C1446 + C50686 * C1450) * C392 +
                                (C19767 * C2564 + C50686 * C2567) * C396 +
                                (C19767 * C2569 + C50686 * C2573) * C393) *
                                   C19765 +
                               (C19903 * C394 + C19904 * C391 -
                                (C19767 * C3086 + C50686 * C3089) * C395 -
                                (C19767 * C3091 + C50686 * C3095) * C392 +
                                (C19767 * C3562 + C50686 * C3564) * C396 +
                                (C19767 * C3566 + C50686 * C3568) * C393) *
                                   C19766) *
                                  C50843 * C50730 * C251 +
                              (((C19767 * C399 + C50686 * C409) * C395 -
                                ((C19767 * C134 + C50686 * C144) * C391 +
                                 (C19767 * C123 + C50686 * C130) * C394) +
                                (C19767 * C413 + C50686 * C429) * C392 -
                                (C19767 * C402 + C50686 * C416) * C396 -
                                (C19767 * C420 + C50686 * C432) * C393) *
                                   C19763 +
                               ((C19767 * C781 + C50686 * C786) * C395 -
                                (C19908 * C391 + C19907 * C394) +
                                (C19767 * C790 + C50686 * C796) * C392 -
                                (C19767 * C1090 + C50686 * C1094) * C396 -
                                (C19767 * C1098 + C50686 * C1102) * C393) *
                                   C19764 +
                               ((C19767 * C1437 + C50686 * C1441) * C395 -
                                (C19910 * C391 + C19909 * C394) +
                                (C19767 * C1445 + C50686 * C1449) * C392 -
                                (C19767 * C2565 + C50686 * C2568) * C396 -
                                (C19767 * C2570 + C50686 * C2574) * C393) *
                                   C19765 +
                               ((C19767 * C3087 + C50686 * C3090) * C395 -
                                (C19912 * C391 + C19911 * C394) +
                                (C19767 * C3092 + C50686 * C3096) * C392 -
                                (C19767 * C3561 + C50686 * C3563) * C396 -
                                (C19767 * C3565 + C50686 * C3567) * C393) *
                                   C19766) *
                                  C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19767 * C122 + C50686 * C129) * C121 +
                                 (C19767 * C133 + C50686 * C143) * C50745) *
                                    C16981 +
                                (C19915 + C19916) * C50881) *
                                   C5105 +
                               (((C19767 * C400 + C50686 * C410) * C121 +
                                 (C19767 * C414 + C50686 * C430) * C50745) *
                                    C16981 +
                                (C20419 * C121 + C20420 * C50745) * C50881) *
                                   C5106 +
                               (((C19767 * C401 + C50686 * C415) * C121 +
                                 (C19767 * C419 + C50686 * C431) * C50745) *
                                    C16981 +
                                (C20747 * C121 + C20748 * C50745) * C50881) *
                                   C5107) *
                                  C50730 * C113 -
                              ((((C19767 * C1098 + C50686 * C1102) * C50745 +
                                 (C19767 * C1090 + C50686 * C1094) * C121) *
                                    C50881 +
                                ((C19767 * C420 + C50686 * C432) * C50745 +
                                 (C19767 * C402 + C50686 * C416) * C121) *
                                    C16981) *
                                   C5107 +
                               ((C20426 * C50745 + C20425 * C121) * C50881 +
                                ((C19767 * C413 + C50686 * C429) * C50745 +
                                 (C19767 * C399 + C50686 * C409) * C121) *
                                    C16981) *
                                   C5106 +
                               ((C19924 + C19923) * C50881 +
                                ((C19767 * C134 + C50686 * C144) * C50745 +
                                 (C19767 * C123 + C50686 * C130) * C121) *
                                    C16981) *
                                   C5105) *
                                  C50730 * C114 +
                              ((((C19767 * C124 + C50686 * C131) * C121 +
                                 (C19767 * C135 + C50686 * C145) * C50745) *
                                    C16981 +
                                (C20149 + C20150) * C50881) *
                                   C5105 +
                               (((C19767 * C398 + C50686 * C408) * C121 +
                                 (C19767 * C412 + C50686 * C428) * C50745) *
                                    C16981 +
                                ((C19767 * C782 + C50686 * C787) * C121 +
                                 (C19767 * C791 + C50686 * C797) * C50745) *
                                    C50881) *
                                   C5106 +
                               (((C19767 * C403 + C50686 * C417) * C121 +
                                 (C19767 * C421 + C50686 * C433) * C50745) *
                                    C16981 +
                                ((C19767 * C1089 + C50686 * C1093) * C121 +
                                 (C19767 * C1097 + C50686 * C1101) * C50745) *
                                    C50881) *
                                   C5107) *
                                  C50730 * C115 -
                              ((((C19767 * C1096 + C50686 * C1100) * C50745 +
                                 (C19767 * C1088 + C50686 * C1092) * C121) *
                                    C50881 +
                                ((C19767 * C422 + C50686 * C434) * C50745 +
                                 (C19767 * C404 + C50686 * C418) * C121) *
                                    C16981) *
                                   C5107 +
                               (((C19767 * C792 + C50686 * C798) * C50745 +
                                 (C19767 * C783 + C50686 * C788) * C121) *
                                    C50881 +
                                ((C19767 * C411 + C50686 * C427) * C50745 +
                                 (C19767 * C397 + C50686 * C407) * C121) *
                                    C16981) *
                                   C5106 +
                               (((C19767 * C263 + C50686 * C283) * C50745 +
                                 (C19767 * C253 + C50686 * C267) * C121) *
                                    C50881 +
                                ((C19767 * C136 + C50686 * C146) * C50745 +
                                 (C19767 * C125 + C50686 * C132) * C121) *
                                    C16981) *
                                   C5105) *
                                  C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C16981 +
             (C19915 + C19916) * C50881) *
                C5105 +
            (((C19767 * C400 + C50686 * C410) * C121 +
              (C19767 * C414 + C50686 * C430) * C50745) *
                 C16981 +
             (C21993 + C21994) * C50881) *
                C5106 +
            (((C19767 * C401 + C50686 * C415) * C121 +
              (C19767 * C419 + C50686 * C431) * C50745) *
                 C16981 +
             (C21995 + C21996) * C50881) *
                C5107) *
               C248 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
               C249 +
           ((C19931 * C16981 + C19932 * C50881) * C5105 +
            ((C22000 + C21999) * C16981 +
             (C20423 * C121 + C20424 * C50745) * C50881) *
                C5106 +
            ((C21998 + C21997) * C16981 +
             (C20751 * C121 + C20752 * C50745) * C50881) *
                C5107) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C16981 + (C19925 + C19926) * C50881) * C5105 +
            ((C22001 + C22002) * C16981 + (C22003 + C22004) * C50881) * C5106 +
            ((C22017 + C22018) * C16981 + (C22019 + C22020) * C50881) * C5107) *
               C249 -
           (((C22018 + C22017) * C50881 +
             ((C19767 * C420 + C50686 * C432) * C50745 +
              (C19767 * C402 + C50686 * C416) * C121) *
                 C16981) *
                C5107 +
            ((C22002 + C22001) * C50881 +
             ((C19767 * C413 + C50686 * C429) * C50745 +
              (C19767 * C399 + C50686 * C409) * C121) *
                 C16981) *
                C5106 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C16981) *
                C5105) *
               C248 -
           ((((C19767 * C3565 + C50686 * C3567) * C50745 +
              (C19767 * C3561 + C50686 * C3563) * C121) *
                 C50881 +
             (C22020 + C22019) * C16981) *
                C5107 +
            ((C20430 * C50745 + C20429 * C121) * C50881 +
             (C22004 + C22003) * C16981) *
                C5106 +
            (C19933 * C50881 + C19934 * C16981) * C5105) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C16981 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C50881) *
               C5105 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C16981 +
            (C20419 * C394 + C20420 * C391 - C20747 * C395 - C20748 * C392 +
             C22205 * C396 + C22206 * C393) *
                C50881) *
               C5106 +
           ((C22201 * C394 + C22202 * C391 - C22203 * C395 - C22204 * C392 +
             (C19767 * C5400 + C50686 * C5403) * C396 +
             (C19767 * C5405 + C50686 * C5409) * C393) *
                C16981 +
            (C20747 * C394 + C20748 * C391 - C22205 * C395 - C22206 * C392 +
             (C19767 * C6405 + C50686 * C6407) * C396 +
             (C19767 * C6409 + C50686 * C6411) * C393) *
                C50881) *
               C5107) *
              C50730 * C251 +
          (((C22207 * C395 -
             ((C19767 * C134 + C50686 * C144) * C391 +
              (C19767 * C123 + C50686 * C130) * C394) +
             C22208 * C392 - C22209 * C396 - C22210 * C393) *
                C16981 +
            (C20425 * C395 - (C19908 * C391 + C19907 * C394) + C20426 * C392 -
             C22013 * C396 - C22014 * C393) *
                C50881) *
               C5105 +
           ((C22209 * C395 - (C22208 * C391 + C22207 * C394) + C22210 * C392 -
             C22211 * C396 - C22212 * C393) *
                C16981 +
            (C22013 * C395 - (C20426 * C391 + C20425 * C394) + C22014 * C392 -
             C22213 * C396 - C22214 * C393) *
                C50881) *
               C5106 +
           ((C22211 * C395 - (C22210 * C391 + C22209 * C394) + C22212 * C392 -
             (C19767 * C5401 + C50686 * C5404) * C396 -
             (C19767 * C5406 + C50686 * C5410) * C393) *
                C16981 +
            (C22213 * C395 - (C22014 * C391 + C22013 * C394) + C22214 * C392 -
             (C19767 * C6404 + C50686 * C6406) * C396 -
             (C19767 * C6408 + C50686 * C6410) * C393) *
                C50881) *
               C5107) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C644 +
                     (C19767 * C133 + C50686 * C143) * C50973 -
                     (C19767 * C400 + C50686 * C410) * C645 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C19899 * C644 + C19900 * C50973 -
                     (C19767 * C780 + C50686 * C785) * C645 -
                     (C19767 * C789 + C50686 * C795) * C50809) *
                        C19764 +
                    (C19901 * C644 + C19902 * C50973 -
                     (C19767 * C1438 + C50686 * C1442) * C645 -
                     (C19767 * C1446 + C50686 * C1450) * C50809) *
                        C19765 +
                    (C19903 * C644 + C19904 * C50973 -
                     (C19767 * C3086 + C50686 * C3089) * C645 -
                     (C19767 * C3091 + C50686 * C3095) * C50809) *
                        C19766) *
                       C50843 * C50730 * C51015 +
                   (((C19767 * C399 + C50686 * C409) * C645 -
                     ((C19767 * C134 + C50686 * C144) * C50973 +
                      (C19767 * C123 + C50686 * C130) * C644) +
                     (C19767 * C413 + C50686 * C429) * C50809) *
                        C19763 +
                    ((C19767 * C781 + C50686 * C786) * C645 -
                     (C19908 * C50973 + C19907 * C644) +
                     (C19767 * C790 + C50686 * C796) * C50809) *
                        C19764 +
                    ((C19767 * C1437 + C50686 * C1441) * C645 -
                     (C19910 * C50973 + C19909 * C644) +
                     (C19767 * C1445 + C50686 * C1449) * C50809) *
                        C19765 +
                    ((C19767 * C3087 + C50686 * C3090) * C645 -
                     (C19912 * C50973 + C19911 * C644) +
                     (C19767 * C3092 + C50686 * C3096) * C50809) *
                        C19766) *
                       C50843 * C50730 * C51016 +
                   (((C19767 * C124 + C50686 * C131) * C644 +
                     (C19767 * C135 + C50686 * C145) * C50973 -
                     (C19767 * C398 + C50686 * C408) * C645 -
                     (C19767 * C412 + C50686 * C428) * C50809) *
                        C19763 +
                    (C20143 * C644 + C20144 * C50973 -
                     (C19767 * C782 + C50686 * C787) * C645 -
                     (C19767 * C791 + C50686 * C797) * C50809) *
                        C19764 +
                    (C20145 * C644 + C20146 * C50973 -
                     (C19767 * C1436 + C50686 * C1440) * C645 -
                     (C19767 * C1444 + C50686 * C1448) * C50809) *
                        C19765 +
                    (C20147 * C644 + C20148 * C50973 -
                     (C19767 * C3088 + C50686 * C3093) * C645 -
                     (C19767 * C3094 + C50686 * C3097) * C50809) *
                        C19766) *
                       C50843 * C50730 * C539)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C644 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50973 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C645 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C644 +
                     (C17184 + C17185 + C17186) * C50973 -
                     (C16985 * C782 + C16980 * C787 + C16984 * C781 +
                      C16979 * C786 + C16983 * C780 + C16978 * C785) *
                         C645 -
                     (C16985 * C791 + C16980 * C797 + C16984 * C790 +
                      C16979 * C796 + C16983 * C789 + C16978 * C795) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C51015 +
                   (((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                      C16979 * C408 + C16985 * C397 + C16980 * C407) *
                         C645 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50973 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C644) +
                     (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                      C16979 * C428 + C16985 * C411 + C16980 * C427) *
                         C50809) *
                        C16981 +
                    ((C16983 * C781 + C16978 * C786 + C16984 * C782 +
                      C16979 * C787 + C16985 * C783 + C16980 * C788) *
                         C645 -
                     ((C17198 + C17197 + C17196) * C50973 +
                      (C17195 + C17194 + C17193) * C644) +
                     (C16983 * C790 + C16978 * C796 + C16984 * C791 +
                      C16979 * C797 + C16985 * C792 + C16980 * C798) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C51016 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C644 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C50973 -
                     (C16985 * C405 + C16980 * C423 + C16984 * C397 +
                      C16979 * C407 + C16983 * C398 + C16978 * C408) *
                         C645 -
                     (C16985 * C424 + C16980 * C435 + C16984 * C411 +
                      C16979 * C427 + C16983 * C412 + C16978 * C428) *
                         C50809) *
                        C16981 +
                    ((C17509 + C17510 + C17511) * C644 +
                     (C17512 + C17513 + C17514) * C50973 -
                     (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                      C16979 * C788 + C16983 * C782 + C16978 * C787) *
                         C645 -
                     (C16985 * C794 + C16980 * C799 + C16984 * C792 +
                      C16979 * C798 + C16983 * C791 + C16978 * C797) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C539)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
                      C22200 * C50809) *
                         C16981 +
                     (C20383 + C20384 - C20431 - C20432) * C50881) *
                        C5105 +
                    ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                      C22202 * C50809) *
                         C16981 +
                     (C20419 * C644 + C20420 * C50973 - C20747 * C645 -
                      C20748 * C50809) *
                         C50881) *
                        C5106 +
                    ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                      C22204 * C50809) *
                         C16981 +
                     (C20747 * C644 + C20748 * C50973 - C22205 * C645 -
                      C22206 * C50809) *
                         C50881) *
                        C5107) *
                       C50730 * C51015 +
                   (((C22207 * C645 -
                      ((C19767 * C134 + C50686 * C144) * C50973 +
                       (C19767 * C123 + C50686 * C130) * C644) +
                      C22208 * C50809) *
                         C16981 +
                     (C20437 - (C20403 + C20404) + C20438) * C50881) *
                        C5105 +
                    ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
                      C22210 * C50809) *
                         C16981 +
                     (C22013 * C645 - (C20426 * C50973 + C20425 * C644) +
                      C22014 * C50809) *
                         C50881) *
                        C5106 +
                    ((C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
                      C22212 * C50809) *
                         C16981 +
                     (C22213 * C645 - (C22014 * C50973 + C22013 * C644) +
                      C22214 * C50809) *
                         C50881) *
                        C5107) *
                       C50730 * C51016 +
                   ((((C19767 * C124 + C50686 * C131) * C644 +
                      (C19767 * C135 + C50686 * C145) * C50973 - C22531 * C645 -
                      C22532 * C50809) *
                         C16981 +
                     (C20143 * C644 + C20144 * C50973 - C22369 * C645 -
                      C22370 * C50809) *
                         C50881) *
                        C5105 +
                    ((C22531 * C644 + C22532 * C50973 - C22533 * C645 -
                      C22534 * C50809) *
                         C16981 +
                     (C22369 * C644 + C22370 * C50973 - C22371 * C645 -
                      C22372 * C50809) *
                         C50881) *
                        C5106 +
                    ((C22533 * C644 + C22534 * C50973 -
                      (C19767 * C1726 + C50686 * C1730) * C645 -
                      (C19767 * C1734 + C50686 * C1738) * C50809) *
                         C16981 +
                     (C22371 * C644 + C22372 * C50973 -
                      (C19767 * C5998 + C50686 * C5999) * C645 -
                      (C19767 * C6000 + C50686 * C6001) * C50809) *
                         C50881) *
                        C5107) *
                       C50730 * C539)) /
                     (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C248 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C249 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C16981 +
            ((C16983 * C977 + C16978 * C985 + C16984 * C976 + C16979 * C984 +
              C16985 * C975 + C16980 * C983) *
                 C121 +
             (C16983 * C981 + C16978 * C989 + C16984 * C980 + C16979 * C988 +
              C16985 * C979 + C16980 * C987) *
                 C50745) *
                C50881) *
               C50843 * C250) *
              C251 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C249 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C248 -
           (((C16985 * C978 + C16980 * C986 + C16984 * C979 + C16979 * C987 +
              C16983 * C980 + C16978 * C988) *
                 C50745 +
             (C16985 * C974 + C16980 * C982 + C16984 * C975 + C16979 * C983 +
              C16983 * C976 + C16978 * C984) *
                 C121) *
                C50881 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C16981) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C16981 +
           ((C16983 * C256 + C16978 * C270 + C16984 * C255 + C16979 * C269 +
             C16985 * C254 + C16980 * C268) *
                C121 +
            (C16983 * C266 + C16978 * C286 + C16984 * C265 + C16979 * C285 +
             C16985 * C264 + C16980 * C284) *
                C50745) *
               C50881) *
              C50843 * C50730 * C113 -
          (((C16985 * C263 + C16980 * C283 + C16984 * C264 + C16979 * C284 +
             C16983 * C265 + C16978 * C285) *
                C50745 +
            (C16985 * C253 + C16980 * C267 + C16984 * C254 + C16979 * C268 +
             C16983 * C255 + C16978 * C269) *
                C121) *
               C50881 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50745 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C16981) *
              C50843 * C50730 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50745) *
               C16981 +
           ((C16983 * C254 + C16978 * C268 + C16984 * C253 + C16979 * C267 +
             C16985 * C261 + C16980 * C279) *
                C121 +
            (C16983 * C264 + C16978 * C284 + C16984 * C263 + C16979 * C283 +
             C16985 * C280 + C16980 * C291) *
                C50745) *
               C50881) *
              C50843 * C50730 * C115 -
          (((C16985 * C541 + C16980 * C543 + C16984 * C280 + C16979 * C291 +
             C16983 * C263 + C16978 * C283) *
                C50745 +
            (C16985 * C540 + C16980 * C542 + C16984 * C261 + C16979 * C279 +
             C16983 * C253 + C16978 * C267) *
                C121) *
               C50881 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50745 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C16981) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           ((C19767 * C256 + C50686 * C270) * C121 +
            (C19767 * C266 + C50686 * C286) * C50745) *
               C19764 +
           ((C19767 * C257 + C50686 * C271) * C121 +
            (C19767 * C275 + C50686 * C287) * C50745) *
               C19765 +
           ((C19767 * C977 + C50686 * C985) * C121 +
            (C19767 * C981 + C50686 * C989) * C50745) *
               C19766) *
              C50843 * C50730 * C113 -
          (((C19767 * C980 + C50686 * C988) * C50745 +
            (C19767 * C976 + C50686 * C984) * C121) *
               C19766 +
           ((C19767 * C276 + C50686 * C288) * C50745 +
            (C19767 * C258 + C50686 * C272) * C121) *
               C19765 +
           ((C19767 * C265 + C50686 * C285) * C50745 +
            (C19767 * C255 + C50686 * C269) * C121) *
               C19764 +
           ((C19767 * C134 + C50686 * C144) * C50745 +
            (C19767 * C123 + C50686 * C130) * C121) *
               C19763) *
              C50843 * C50730 * C114 +
          (((C19767 * C124 + C50686 * C131) * C121 +
            (C19767 * C135 + C50686 * C145) * C50745) *
               C19763 +
           ((C19767 * C254 + C50686 * C268) * C121 +
            (C19767 * C264 + C50686 * C284) * C50745) *
               C19764 +
           ((C19767 * C259 + C50686 * C273) * C121 +
            (C19767 * C277 + C50686 * C289) * C50745) *
               C19765 +
           ((C19767 * C975 + C50686 * C983) * C121 +
            (C19767 * C979 + C50686 * C987) * C50745) *
               C19766) *
              C50843 * C50730 * C115 -
          (((C19767 * C978 + C50686 * C986) * C50745 +
            (C19767 * C974 + C50686 * C982) * C121) *
               C19766 +
           ((C19767 * C278 + C50686 * C290) * C50745 +
            (C19767 * C260 + C50686 * C274) * C121) *
               C19765 +
           ((C19767 * C263 + C50686 * C283) * C50745 +
            (C19767 * C253 + C50686 * C267) * C121) *
               C19764 +
           ((C19767 * C136 + C50686 * C146) * C50745 +
            (C19767 * C125 + C50686 * C132) * C121) *
               C19763) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C248 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C249 +
           (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
            ((C19767 * C3391 + C50686 * C3395) * C121 +
             (C19767 * C3393 + C50686 * C3397) * C50745) *
                C19766) *
               C50843 * C250) *
              C251 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C249 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C248 -
           (((C19767 * C3392 + C50686 * C3396) * C50745 +
             (C19767 * C3390 + C50686 * C3394) * C121) *
                C19766 +
            (C19930 + C19929) * C19765 + C19933 * C19764 + C19934 * C19763) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C16981 +
            (C19915 + C19916) * C50881) *
               C5105 +
           (((C19767 * C400 + C50686 * C410) * C121 +
             (C19767 * C414 + C50686 * C430) * C50745) *
                C16981 +
            (C20419 * C121 + C20420 * C50745) * C50881) *
               C5106 +
           (((C19767 * C401 + C50686 * C415) * C121 +
             (C19767 * C419 + C50686 * C431) * C50745) *
                C16981 +
            (C20747 * C121 + C20748 * C50745) * C50881) *
               C5107) *
              C50730 * C113 -
          ((((C19767 * C1098 + C50686 * C1102) * C50745 +
             (C19767 * C1090 + C50686 * C1094) * C121) *
                C50881 +
            ((C19767 * C420 + C50686 * C432) * C50745 +
             (C19767 * C402 + C50686 * C416) * C121) *
                C16981) *
               C5107 +
           ((C20426 * C50745 + C20425 * C121) * C50881 +
            ((C19767 * C413 + C50686 * C429) * C50745 +
             (C19767 * C399 + C50686 * C409) * C121) *
                C16981) *
               C5106 +
           ((C19924 + C19923) * C50881 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C16981) *
               C5105) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C16981 +
            (C20149 + C20150) * C50881) *
               C5105 +
           (((C19767 * C398 + C50686 * C408) * C121 +
             (C19767 * C412 + C50686 * C428) * C50745) *
                C16981 +
            ((C19767 * C782 + C50686 * C787) * C121 +
             (C19767 * C791 + C50686 * C797) * C50745) *
                C50881) *
               C5106 +
           (((C19767 * C403 + C50686 * C417) * C121 +
             (C19767 * C421 + C50686 * C433) * C50745) *
                C16981 +
            ((C19767 * C1089 + C50686 * C1093) * C121 +
             (C19767 * C1097 + C50686 * C1101) * C50745) *
                C50881) *
               C5107) *
              C50730 * C115 -
          ((((C19767 * C1096 + C50686 * C1100) * C50745 +
             (C19767 * C1088 + C50686 * C1092) * C121) *
                C50881 +
            ((C19767 * C422 + C50686 * C434) * C50745 +
             (C19767 * C404 + C50686 * C418) * C121) *
                C16981) *
               C5107 +
           (((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C50881 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C16981) *
               C5106 +
           (((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C50881 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C16981) *
               C5105) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C16981 +
             (C19915 + C19916) * C50881) *
                C5105 +
            (((C19767 * C400 + C50686 * C410) * C121 +
              (C19767 * C414 + C50686 * C430) * C50745) *
                 C16981 +
             (C21993 + C21994) * C50881) *
                C5106 +
            (((C19767 * C401 + C50686 * C415) * C121 +
              (C19767 * C419 + C50686 * C431) * C50745) *
                 C16981 +
             (C21995 + C21996) * C50881) *
                C5107) *
               C248 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
               C249 +
           ((C19931 * C16981 + C19932 * C50881) * C5105 +
            ((C22000 + C21999) * C16981 +
             (C20423 * C121 + C20424 * C50745) * C50881) *
                C5106 +
            ((C21998 + C21997) * C16981 +
             (C20751 * C121 + C20752 * C50745) * C50881) *
                C5107) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C16981 + (C19925 + C19926) * C50881) * C5105 +
            ((C22001 + C22002) * C16981 + (C22003 + C22004) * C50881) * C5106 +
            ((C22017 + C22018) * C16981 + (C22019 + C22020) * C50881) * C5107) *
               C249 -
           (((C22018 + C22017) * C50881 +
             ((C19767 * C420 + C50686 * C432) * C50745 +
              (C19767 * C402 + C50686 * C416) * C121) *
                 C16981) *
                C5107 +
            ((C22002 + C22001) * C50881 +
             ((C19767 * C413 + C50686 * C429) * C50745 +
              (C19767 * C399 + C50686 * C409) * C121) *
                 C16981) *
                C5106 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C16981) *
                C5105) *
               C248 -
           ((((C19767 * C3565 + C50686 * C3567) * C50745 +
              (C19767 * C3561 + C50686 * C3563) * C121) *
                 C50881 +
             (C22020 + C22019) * C16981) *
                C5107 +
            ((C20430 * C50745 + C20429 * C121) * C50881 +
             (C22004 + C22003) * C16981) *
                C5106 +
            (C19933 * C50881 + C19934 * C16981) * C5105) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C51017 -
           (C20611 * C19766 + C20612 * C19765 + (C19918 + C19917) * C19764 +
            (C19916 + C19915) * C19763) *
               C50843 * C51018 +
           (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
            (C20619 + C20620) * C19766) *
               C50843 * C1204) *
              C50964 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C51018 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C51017 -
           (((C19767 * C3392 + C50686 * C3396) * C50745 +
             (C19767 * C3390 + C50686 * C3394) * C121) *
                C19766 +
            (C19930 + C19929) * C19765 + C19933 * C19764 + C19934 * C19763) *
               C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C51017 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C51018 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C16981 +
            ((C18147 + C18148 + C18149) * C121 +
             (C18150 + C18151 + C18152) * C50745) *
                C50881) *
               C50843 * C1204) *
              C50964 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C51018 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C51017 -
           (((C16985 * C978 + C16980 * C986 + C16984 * C979 + C16979 * C987 +
              C16983 * C980 + C16978 * C988) *
                 C50745 +
             (C16985 * C974 + C16980 * C982 + C16984 * C975 + C16979 * C983 +
              C16983 * C976 + C16978 * C984) *
                 C121) *
                C50881 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C16981) *
               C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C16981 +
             (C19915 + C19916) * C50881) *
                C5105 +
            ((C22199 * C121 + C22200 * C50745) * C16981 +
             (C21993 + C21994) * C50881) *
                C5106 +
            ((C22201 * C121 + C22202 * C50745) * C16981 +
             (C21995 + C21996) * C50881) *
                C5107) *
               C51017 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
               C51018 +
           ((C19931 * C16981 + C19932 * C50881) * C5105 +
            ((C22000 + C21999) * C16981 + (C22989 + C22990) * C50881) * C5106 +
            ((C21998 + C21997) * C16981 + (C22991 + C22992) * C50881) * C5107) *
               C1204) *
              C50964 +
          ((((C19923 + C19924) * C16981 + (C19925 + C19926) * C50881) * C5105 +
            ((C22001 + C22002) * C16981 + (C22003 + C22004) * C50881) * C5106 +
            ((C22017 + C22018) * C16981 + (C22019 + C22020) * C50881) * C5107) *
               C51018 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C16981) *
                C5107 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C16981) *
                C5106 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C16981) *
                C5105) *
               C51017 -
           ((((C19767 * C3565 + C50686 * C3567) * C50745 +
              (C19767 * C3561 + C50686 * C3563) * C121) *
                 C50881 +
             (C22020 + C22019) * C16981) *
                C5107 +
            ((C20430 * C50745 + C20429 * C121) * C50881 +
             (C22004 + C22003) * C16981) *
                C5106 +
            (C19933 * C50881 + C19934 * C16981) * C5105) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C644 +
                     (C19767 * C133 + C50686 * C143) * C50973 -
                     (C19767 * C400 + C50686 * C410) * C645 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C20383 + C20384 - C20431 - C20432) * C19764 +
                    C21101 * C19765 + C21102 * C19766) *
                       C50843 * C51017 +
                   ((C20431 - (C20384 + C20383) + C20432) * C19763 +
                    (C20433 - (C20390 + C20389) + C20434) * C19764 +
                    (C20435 - (C20396 + C20395) + C20436) * C19765 +
                    (C21103 - (C21093 + C21094) + C21104) * C19766) *
                       C50843 * C51018 +
                   (C21101 * C19763 + C21102 * C19764 +
                    (C21094 + C21093 - C21103 - C21104) * C19765 +
                    (C20617 * C644 + C20618 * C50973 -
                     (C19767 * C21084 + C50686 * C21085) * C645 -
                     (C19767 * C21086 + C50686 * C21087) * C50809) *
                        C19766) *
                       C50843 * C1204) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C644 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50973 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C645 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C644 +
                     (C17184 + C17185 + C17186) * C50973 -
                     (C17879 + C17880 + C17881) * C645 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C51017 +
                   (((C17881 + C17880 + C17879) * C645 -
                     ((C17186 + C17185 + C17184) * C50973 +
                      (C17183 + C17182 + C17181) * C644) +
                     (C17884 + C17883 + C17882) * C50809) *
                        C16981 +
                    ((C18815 + C18816 + C18817) * C645 -
                     ((C17187 + C17188 + C17189) * C50973 +
                      (C17190 + C17191 + C17192) * C644) +
                     (C18818 + C18819 + C18820) * C50809) *
                        C50881) *
                       C50843 * C51018 +
                   (((C17192 + C17191 + C17190) * C644 +
                     (C17189 + C17188 + C17187) * C50973 -
                     (C18817 + C18816 + C18815) * C645 -
                     (C18820 + C18819 + C18818) * C50809) *
                        C16981 +
                    ((C18147 + C18148 + C18149) * C644 +
                     (C18150 + C18151 + C18152) * C50973 -
                     (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                      C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                         C645 -
                     (C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                      C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                         C50809) *
                        C50881) *
                       C50843 * C1204) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
                      C22200 * C50809) *
                         C16981 +
                     (C20383 + C20384 - C20431 - C20432) * C50881) *
                        C5105 +
                    ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                      C22202 * C50809) *
                         C16981 +
                     (C22729 + C22730 - C22731 - C22732) * C50881) *
                        C5106 +
                    ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                      C22204 * C50809) *
                         C16981 +
                     (C22733 + C22734 - C22735 - C22736) * C50881) *
                        C5107) *
                       C51017 +
                   (((C20431 - (C20384 + C20383) + C20432) * C16981 +
                     (C20433 - (C20390 + C20389) + C20434) * C50881) *
                        C5105 +
                    ((C22731 - (C22730 + C22729) + C22732) * C16981 +
                     (C23653 - (C23654 + C23655) + C23656) * C50881) *
                        C5106 +
                    ((C22735 - (C22734 + C22733) + C22736) * C16981 +
                     (C23657 - (C23658 + C23659) + C23660) * C50881) *
                        C5107) *
                       C51018 +
                   ((C21101 * C16981 + C21102 * C50881) * C5105 +
                    ((C23655 + C23654 - C23653 - C23656) * C16981 +
                     (C20423 * C644 + C20424 * C50973 - C20751 * C645 -
                      C20752 * C50809) *
                         C50881) *
                        C5106 +
                    ((C23659 + C23658 - C23657 - C23660) * C16981 +
                     (C20751 * C644 + C20752 * C50973 -
                      (C19767 * C21388 + C50686 * C21389) * C645 -
                      (C19767 * C21390 + C50686 * C21391) * C50809) *
                         C50881) *
                        C5107) *
                       C1204) *
                  C50713) /
                     (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50745) *
                    C16981 +
                ((C17181 + C17182 + C17183) * C121 +
                 (C17184 + C17185 + C17186) * C50745) *
                    C50881) *
                   C50843 * C898 -
               (((C17187 + C17188 + C17189) * C50745 +
                 (C17190 + C17191 + C17192) * C121) *
                    C50881 +
                ((C17186 + C17185 + C17184) * C50745 +
                 (C17183 + C17182 + C17181) * C121) *
                    C16981) *
                   C50843 * C50781) *
                  C900 +
              ((((C17193 + C17194 + C17195) * C121 +
                 (C17196 + C17197 + C17198) * C50745) *
                    C16981 +
                ((C17199 + C17200 + C17201) * C121 +
                 (C17202 + C17203 + C17204) * C50745) *
                    C50881) *
                   C50843 * C50781 -
               (((C17198 + C17197 + C17196) * C50745 +
                 (C17195 + C17194 + C17193) * C121) *
                    C50881 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50745 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C16981) *
                   C50843 * C898) *
                  C901 +
              ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                  C16979 * C132 + C16985 * C126 + C16980 * C138) *
                     C121 +
                 (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                  C16979 * C146 + C16985 * C137 + C16980 * C147) *
                     C50745) *
                    C16981 +
                ((C17509 + C17510 + C17511) * C121 +
                 (C17512 + C17513 + C17514) * C50745) *
                    C50881) *
                   C50843 * C898 -
               (((C16985 * C281 + C16980 * C292 + C16984 * C278 +
                  C16979 * C290 + C16983 * C277 + C16978 * C289) *
                     C50745 +
                 (C16985 * C262 + C16980 * C282 + C16984 * C260 +
                  C16979 * C274 + C16983 * C259 + C16978 * C273) *
                     C121) *
                    C50881 +
                ((C17514 + C17513 + C17512) * C50745 +
                 (C17511 + C17510 + C17509) * C121) *
                    C16981) *
                   C50843 * C50781) *
                  C902) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50745) *
                   C16981 +
               ((C17181 + C17182 + C17183) * C121 +
                (C17184 + C17185 + C17186) * C50745) *
                   C50881) *
                  C50843 * C969 -
              (((C17187 + C17188 + C17189) * C50745 +
                (C17190 + C17191 + C17192) * C121) *
                   C50881 +
               ((C17186 + C17185 + C17184) * C50745 +
                (C17183 + C17182 + C17181) * C121) *
                   C16981) *
                  C50843 * C970 +
              (((C17192 + C17191 + C17190) * C121 +
                (C17189 + C17188 + C17187) * C50745) *
                   C16981 +
               ((C18147 + C18148 + C18149) * C121 +
                (C18150 + C18151 + C18152) * C50745) *
                   C50881) *
                  C50843 * C971 -
              (((C16985 * C2331 + C16980 * C2335 + C16984 * C2330 +
                 C16979 * C2334 + C16983 * C2329 + C16978 * C2333) *
                    C50745 +
                (C16985 * C2326 + C16980 * C2332 + C16984 * C2325 +
                 C16979 * C2328 + C16983 * C2324 + C16978 * C2327) *
                    C121) *
                   C50881 +
               ((C18152 + C18151 + C18150) * C50745 +
                (C18149 + C18148 + C18147) * C121) *
                   C16981) *
                  C50843 * C972) *
             C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C395 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C392 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C396 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C393) *
               C16981 +
           ((C17181 + C17182 + C17183) * C394 +
            (C17184 + C17185 + C17186) * C391 -
            (C17879 + C17880 + C17881) * C395 -
            (C17882 + C17883 + C17884) * C392 +
            (C18311 + C18312 + C18313) * C396 +
            (C18314 + C18315 + C18316) * C393) *
               C50881) *
              C50843 * C898 +
          (((C17881 + C17880 + C17879) * C395 -
            ((C17186 + C17185 + C17184) * C391 +
             (C17183 + C17182 + C17181) * C394) +
            (C17884 + C17883 + C17882) * C392 -
            (C18313 + C18312 + C18311) * C396 -
            (C18316 + C18315 + C18314) * C393) *
               C16981 +
           ((C16983 * C1438 + C16978 * C1442 + C16984 * C1437 + C16979 * C1441 +
             C16985 * C1436 + C16980 * C1440) *
                C395 -
            ((C17187 + C17188 + C17189) * C391 +
             (C17190 + C17191 + C17192) * C394) +
            (C16983 * C1446 + C16978 * C1450 + C16984 * C1445 + C16979 * C1449 +
             C16985 * C1444 + C16980 * C1448) *
                C392 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C396 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C393) *
               C50881) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C898 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C50781) *
              C900 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C50781 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C898) *
              C901 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C19763 +
            (C20149 + C20150) * C19764 + (C20151 + C20152) * C19765 +
            (C20153 + C20154) * C19766) *
               C50843 * C898 -
           (((C19767 * C2331 + C50686 * C2335) * C50745 +
             (C19767 * C2326 + C50686 * C2332) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + (C20152 + C20151) * C19764 +
            (C20150 + C20149) * C19763) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
              C50843 * C969 -
          (C20611 * C19766 + C20612 * C19765 + (C19918 + C19917) * C19764 +
           (C19916 + C19915) * C19763) *
              C50843 * C970 +
          (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
           (C20619 + C20620) * C19766) *
              C50843 * C971 -
          (((C19767 * C20607 + C50686 * C20609) * C50745 +
            (C19767 * C20606 + C50686 * C20608) * C121) *
               C19766 +
           (C20620 + C20619) * C19765 + C20611 * C19764 + C20612 * C19763) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C394 +
            (C19767 * C133 + C50686 * C143) * C391 -
            (C19767 * C400 + C50686 * C410) * C395 -
            (C19767 * C414 + C50686 * C430) * C392 +
            (C19767 * C401 + C50686 * C415) * C396 +
            (C19767 * C419 + C50686 * C431) * C393) *
               C19763 +
           (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C19764 +
           (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C19765 +
           (C20739 + C20740 - C20741 - C20742 + C20757 + C20758) * C19766) *
              C50843 * C898 +
          ((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C19763 +
           (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C19764 +
           (C20741 - (C20740 + C20739) + C20742 - C20757 - C20758) * C19765 +
           ((C19767 * C4080 + C50686 * C4082) * C395 -
            (C19905 * C391 + C19906 * C394) +
            (C19767 * C4084 + C50686 * C4086) * C392 -
            (C19767 * C20718 + C50686 * C20719) * C396 -
            (C19767 * C20720 + C50686 * C20721) * C393) *
               C19766) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C16981 +
             (C19915 + C19916) * C50881) *
                C5105 +
            ((C22199 * C121 + C22200 * C50745) * C16981 +
             (C21993 + C21994) * C50881) *
                C5106 +
            ((C22201 * C121 + C22202 * C50745) * C16981 +
             (C21995 + C21996) * C50881) *
                C5107) *
               C898 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C16981 + (C19925 + C19926) * C50881) * C5105 +
            ((C22001 + C22002) * C16981 + (C22003 + C22004) * C50881) * C5106 +
            ((C22017 + C22018) * C16981 + (C22019 + C22020) * C50881) * C5107) *
               C50781 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C16981) *
                C5107 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C16981) *
                C5106 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C16981) *
                C5105) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C16981 +
             (C20149 + C20150) * C50881) *
                C5105 +
            ((C22531 * C121 + C22532 * C50745) * C16981 +
             (C22373 + C22374) * C50881) *
                C5106 +
            ((C22533 * C121 + C22534 * C50745) * C16981 +
             (C22375 + C22376) * C50881) *
                C5107) *
               C898 -
           ((((C19767 * C2572 + C50686 * C2575) * C50745 +
              (C19767 * C2566 + C50686 * C2571) * C121) *
                 C50881 +
             (C22376 + C22375) * C16981) *
                C5107 +
            (((C19767 * C1444 + C50686 * C1448) * C50745 +
              (C19767 * C1436 + C50686 * C1440) * C121) *
                 C50881 +
             (C22374 + C22373) * C16981) *
                C5106 +
            ((C20152 + C20151) * C50881 + (C20150 + C20149) * C16981) * C5105) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C16981 +
            (C19915 + C19916) * C50881) *
               C5105 +
           ((C22199 * C121 + C22200 * C50745) * C16981 +
            (C21993 + C21994) * C50881) *
               C5106 +
           ((C22201 * C121 + C22202 * C50745) * C16981 +
            (C21995 + C21996) * C50881) *
               C5107) *
              C969 -
          (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
           ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
           ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
              C970 +
          ((C19931 * C16981 + C19932 * C50881) * C5105 +
           ((C22000 + C21999) * C16981 + (C22989 + C22990) * C50881) * C5106 +
           ((C21998 + C21997) * C16981 + (C22991 + C22992) * C50881) * C5107) *
              C971 -
          ((((C19767 * C20720 + C50686 * C20721) * C50745 +
             (C19767 * C20718 + C50686 * C20719) * C121) *
                C50881 +
            (C22992 + C22991) * C16981) *
               C5107 +
           ((C21100 * C50745 + C21099 * C121) * C50881 +
            (C22990 + C22989) * C16981) *
               C5106 +
           (C20611 * C50881 + C20612 * C16981) * C5105) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C16981 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C50881) *
               C5105 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C16981 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C50881) *
               C5106 +
           ((C22201 * C394 + C22202 * C391 - C22203 * C395 - C22204 * C392 +
             (C19767 * C5400 + C50686 * C5403) * C396 +
             (C19767 * C5405 + C50686 * C5409) * C393) *
                C16981 +
            (C23149 + C23150 - C23151 - C23152 + C23165 + C23166) * C50881) *
               C5107) *
              C898 +
          (((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C16981 +
            (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C50881) *
               C5105 +
           ((C23145 - (C23144 + C23143) + C23146 - C23147 - C23148) * C16981 +
            (C20749 * C395 - (C20422 * C391 + C20421 * C394) + C20750 * C392 -
             C23163 * C396 - C23164 * C393) *
                C50881) *
               C5106 +
           ((C23151 - (C23150 + C23149) + C23152 - C23165 - C23166) * C16981 +
            (C23163 * C395 - (C20750 * C391 + C20749 * C394) + C23164 * C392 -
             (C19767 * C23138 + C50686 * C23139) * C396 -
             (C19767 * C23140 + C50686 * C23141) * C393) *
                C50881) *
               C5107) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[113] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 -
                      (C19767 * C400 + C50686 * C410) * C645 -
                      (C19767 * C414 + C50686 * C430) * C50809) *
                         C19763 +
                     (C20383 + C20384 - C20431 - C20432) * C19764 +
                     (C20389 + C20390 - C20433 - C20434) * C19765 +
                     (C20395 + C20396 - C20435 - C20436) * C19766) *
                        C50843 * C898 +
                    ((C20431 - (C20384 + C20383) + C20432) * C19763 +
                     (C20433 - (C20390 + C20389) + C20434) * C19764 +
                     (C20435 - (C20396 + C20395) + C20436) * C19765 +
                     ((C19767 * C4080 + C50686 * C4082) * C645 -
                      (C19905 * C50973 + C19906 * C644) +
                      (C19767 * C4084 + C50686 * C4086) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C19767 * C399 + C50686 * C409) * C645 -
                      ((C19767 * C134 + C50686 * C144) * C50973 +
                       (C19767 * C123 + C50686 * C130) * C644) +
                      (C19767 * C413 + C50686 * C429) * C50809) *
                         C19763 +
                     (C20437 - (C20403 + C20404) + C20438) * C19764 +
                     (C20439 - (C20409 + C20410) + C20440) * C19765 +
                     (C20441 - (C20415 + C20416) + C20442) * C19766) *
                        C50843 * C898 +
                    ((C20404 + C20403 - C20437 - C20438) * C19763 +
                     (C20410 + C20409 - C20439 - C20440) * C19764 +
                     (C20416 + C20415 - C20441 - C20442) * C19765 +
                     (C19913 * C644 + C19914 * C50973 -
                      (C19767 * C4079 + C50686 * C4081) * C645 -
                      (C19767 * C4083 + C50686 * C4085) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C644 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50973 -
                      (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                       C16979 * C409 + C16983 * C400 + C16978 * C410) *
                          C645 -
                      (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                       C16979 * C429 + C16983 * C414 + C16978 * C430) *
                          C50809) *
                         C16981 +
                     ((C17181 + C17182 + C17183) * C644 +
                      (C17184 + C17185 + C17186) * C50973 -
                      (C17879 + C17880 + C17881) * C645 -
                      (C17882 + C17883 + C17884) * C50809) *
                         C50881) *
                        C50843 * C898 +
                    (((C17881 + C17880 + C17879) * C645 -
                      ((C17186 + C17185 + C17184) * C50973 +
                       (C17183 + C17182 + C17181) * C644) +
                      (C17884 + C17883 + C17882) * C50809) *
                         C16981 +
                     ((C16983 * C1438 + C16978 * C1442 + C16984 * C1437 +
                       C16979 * C1441 + C16985 * C1436 + C16980 * C1440) *
                          C645 -
                      ((C17187 + C17188 + C17189) * C50973 +
                       (C17190 + C17191 + C17192) * C644) +
                      (C16983 * C1446 + C16978 * C1450 + C16984 * C1445 +
                       C16979 * C1449 + C16985 * C1444 + C16980 * C1448) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                       C16979 * C408 + C16985 * C397 + C16980 * C407) *
                          C645 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C50973 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C644) +
                      (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                       C16979 * C428 + C16985 * C411 + C16980 * C427) *
                          C50809) *
                         C16981 +
                     ((C17885 + C17886 + C17887) * C645 -
                      ((C17198 + C17197 + C17196) * C50973 +
                       (C17195 + C17194 + C17193) * C644) +
                      (C17888 + C17889 + C17890) * C50809) *
                         C50881) *
                        C50843 * C898 +
                    (((C17193 + C17194 + C17195) * C644 +
                      (C17196 + C17197 + C17198) * C50973 -
                      (C17887 + C17886 + C17885) * C645 -
                      (C17890 + C17889 + C17888) * C50809) *
                         C16981 +
                     ((C17199 + C17200 + C17201) * C644 +
                      (C17202 + C17203 + C17204) * C50973 -
                      (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                       C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                          C645 -
                      (C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                       C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C644 +
                       (C19767 * C133 + C50686 * C143) * C50973 -
                       C22199 * C645 - C22200 * C50809) *
                          C16981 +
                      (C20383 + C20384 - C20431 - C20432) * C50881) *
                         C5105 +
                     ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                       C22202 * C50809) *
                          C16981 +
                      (C22729 + C22730 - C22731 - C22732) * C50881) *
                         C5106 +
                     ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                       C22204 * C50809) *
                          C16981 +
                      (C22733 + C22734 - C22735 - C22736) * C50881) *
                         C5107) *
                        C898 +
                    (((C20431 - (C20384 + C20383) + C20432) * C16981 +
                      (C20433 - (C20390 + C20389) + C20434) * C50881) *
                         C5105 +
                     ((C22731 - (C22730 + C22729) + C22732) * C16981 +
                      (C20749 * C645 - (C20422 * C50973 + C20421 * C644) +
                       C20750 * C50809) *
                          C50881) *
                         C5106 +
                     ((C22735 - (C22734 + C22733) + C22736) * C16981 +
                      (C23163 * C645 - (C20750 * C50973 + C20749 * C644) +
                       C23164 * C50809) *
                          C50881) *
                         C5107) *
                        C50781) *
                       C50964 +
                   ((((C22207 * C645 -
                       ((C19767 * C134 + C50686 * C144) * C50973 +
                        (C19767 * C123 + C50686 * C130) * C644) +
                       C22208 * C50809) *
                          C16981 +
                      (C20437 - (C20403 + C20404) + C20438) * C50881) *
                         C5105 +
                     ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
                       C22210 * C50809) *
                          C16981 +
                      (C22737 - (C22738 + C22739) + C22740) * C50881) *
                         C5106 +
                     ((C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
                       C22212 * C50809) *
                          C16981 +
                      (C22741 - (C22742 + C22743) + C22744) * C50881) *
                         C5107) *
                        C898 +
                    (((C20404 + C20403 - C20437 - C20438) * C16981 +
                      (C20410 + C20409 - C20439 - C20440) * C50881) *
                         C5105 +
                     ((C22739 + C22738 - C22737 - C22740) * C16981 +
                      (C20427 * C644 + C20428 * C50973 - C22015 * C645 -
                       C22016 * C50809) *
                          C50881) *
                         C5106 +
                     ((C22743 + C22742 - C22741 - C22744) * C16981 +
                      (C22015 * C644 + C22016 * C50973 -
                       (C19767 * C4507 + C50686 * C4513) * C645 -
                       (C19767 * C4515 + C50686 * C4519) * C50809) *
                          C50881) *
                         C5107) *
                        C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C16981 +
           ((C17181 + C17182 + C17183) * C121 +
            (C17184 + C17185 + C17186) * C50745) *
               C50881) *
              C50843 * C969 -
          (((C17187 + C17188 + C17189) * C50745 +
            (C17190 + C17191 + C17192) * C121) *
               C50881 +
           ((C17186 + C17185 + C17184) * C50745 +
            (C17183 + C17182 + C17181) * C121) *
               C16981) *
              C50843 * C970 +
          (((C17192 + C17191 + C17190) * C121 +
            (C17189 + C17188 + C17187) * C50745) *
               C16981 +
           ((C18147 + C18148 + C18149) * C121 +
            (C18150 + C18151 + C18152) * C50745) *
               C50881) *
              C50843 * C971 -
          (((C16985 * C2331 + C16980 * C2335 + C16984 * C2330 + C16979 * C2334 +
             C16983 * C2329 + C16978 * C2333) *
                C50745 +
            (C16985 * C2326 + C16980 * C2332 + C16984 * C2325 + C16979 * C2328 +
             C16983 * C2324 + C16978 * C2327) *
                C121) *
               C50881 +
           ((C18152 + C18151 + C18150) * C50745 +
            (C18149 + C18148 + C18147) * C121) *
               C16981) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C50781) *
              C900 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C898) *
              C901 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C16985 * C281 + C16980 * C292 + C16984 * C278 + C16979 * C290 +
              C16983 * C277 + C16978 * C289) *
                 C50745 +
             (C16985 * C262 + C16980 * C282 + C16984 * C260 + C16979 * C274 +
              C16983 * C259 + C16978 * C273) *
                 C121) *
                C50881 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C898 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C50781) *
              C900 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C50781 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C898) *
              C901 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C19763 +
            (C20149 + C20150) * C19764 + (C20151 + C20152) * C19765 +
            (C20153 + C20154) * C19766) *
               C50843 * C898 -
           (((C19767 * C2331 + C50686 * C2335) * C50745 +
             (C19767 * C2326 + C50686 * C2332) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + (C20152 + C20151) * C19764 +
            (C20150 + C20149) * C19763) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
              C50843 * C969 -
          (C20611 * C19766 + C20612 * C19765 + (C19918 + C19917) * C19764 +
           (C19916 + C19915) * C19763) *
              C50843 * C970 +
          (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
           (C20619 + C20620) * C19766) *
              C50843 * C971 -
          (((C19767 * C20607 + C50686 * C20609) * C50745 +
            (C19767 * C20606 + C50686 * C20608) * C121) *
               C19766 +
           (C20620 + C20619) * C19765 + C20611 * C19764 + C20612 * C19763) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C16981 +
             (C19915 + C19916) * C50881) *
                C5105 +
            ((C22199 * C121 + C22200 * C50745) * C16981 +
             (C21993 + C21994) * C50881) *
                C5106 +
            ((C22201 * C121 + C22202 * C50745) * C16981 +
             (C21995 + C21996) * C50881) *
                C5107) *
               C898 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C16981 + (C19925 + C19926) * C50881) * C5105 +
            ((C22001 + C22002) * C16981 + (C22003 + C22004) * C50881) * C5106 +
            ((C22017 + C22018) * C16981 + (C22019 + C22020) * C50881) * C5107) *
               C50781 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C16981) *
                C5107 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C16981) *
                C5106 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C16981) *
                C5105) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C16981 +
             (C20149 + C20150) * C50881) *
                C5105 +
            ((C22531 * C121 + C22532 * C50745) * C16981 +
             (C22373 + C22374) * C50881) *
                C5106 +
            ((C22533 * C121 + C22534 * C50745) * C16981 +
             (C22375 + C22376) * C50881) *
                C5107) *
               C898 -
           ((((C19767 * C2572 + C50686 * C2575) * C50745 +
              (C19767 * C2566 + C50686 * C2571) * C121) *
                 C50881 +
             (C22376 + C22375) * C16981) *
                C5107 +
            (((C19767 * C1444 + C50686 * C1448) * C50745 +
              (C19767 * C1436 + C50686 * C1440) * C121) *
                 C50881 +
             (C22374 + C22373) * C16981) *
                C5106 +
            ((C20152 + C20151) * C50881 + (C20150 + C20149) * C16981) * C5105) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C16981 +
            (C19915 + C19916) * C50881) *
               C5105 +
           ((C22199 * C121 + C22200 * C50745) * C16981 +
            (C21993 + C21994) * C50881) *
               C5106 +
           ((C22201 * C121 + C22202 * C50745) * C16981 +
            (C21995 + C21996) * C50881) *
               C5107) *
              C969 -
          (((C21997 + C21998) * C50881 + (C21996 + C21995) * C16981) * C5107 +
           ((C21999 + C22000) * C50881 + (C21994 + C21993) * C16981) * C5106 +
           ((C19918 + C19917) * C50881 + (C19916 + C19915) * C16981) * C5105) *
              C970 +
          ((C19931 * C16981 + C19932 * C50881) * C5105 +
           ((C22000 + C21999) * C16981 + (C22989 + C22990) * C50881) * C5106 +
           ((C21998 + C21997) * C16981 + (C22991 + C22992) * C50881) * C5107) *
              C971 -
          ((((C19767 * C20720 + C50686 * C20721) * C50745 +
             (C19767 * C20718 + C50686 * C20719) * C121) *
                C50881 +
            (C22992 + C22991) * C16981) *
               C5107 +
           ((C21100 * C50745 + C21099 * C121) * C50881 +
            (C22990 + C22989) * C16981) *
               C5106 +
           (C20611 * C50881 + C20612 * C16981) * C5105) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[115] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C1551 +
                      (C19767 * C133 + C50686 * C143) * C1549 -
                      (C19767 * C400 + C50686 * C410) * C1552 -
                      (C19767 * C414 + C50686 * C430) * C50809) *
                         C19763 +
                     (C21301 + C21302 - C21303 - C21304) * C19764 +
                     C21321 * C19765 + C21322 * C19766) *
                        C50843 * C50972 +
                    ((C21303 - (C21302 + C21301) + C21304) * C19763 +
                     (C21307 - (C21306 + C21305) + C21308) * C19764 +
                     (C21311 - (C21310 + C21309) + C21312) * C19765 +
                     (C21313 - (C21314 + C21315) + C21316) * C19766) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C19767 * C399 + C50686 * C409) * C1552 -
                      ((C19767 * C134 + C50686 * C144) * C1549 +
                       (C19767 * C123 + C50686 * C130) * C1551) +
                      (C19767 * C413 + C50686 * C429) * C50809) *
                         C19763 +
                     (C21523 - (C21524 + C21525) + C21526) * C19764 +
                     (C21527 - (C21528 + C21529) + C21530) * C19765 +
                     (C21531 - (C21532 + C21533) + C21534) * C19766) *
                        C50843 * C50972 +
                    ((C21525 + C21524 - C21523 - C21526) * C19763 +
                     (C21529 + C21528 - C21527 - C21530) * C19764 +
                     (C21533 + C21532 - C21531 - C21534) * C19765 +
                     (C19913 * C1551 + C19914 * C1549 -
                      (C19767 * C4079 + C50686 * C4081) * C1552 -
                      (C19767 * C4083 + C50686 * C4085) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C1551 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C1549 -
                      (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                       C16979 * C409 + C16983 * C400 + C16978 * C410) *
                          C1552 -
                      (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                       C16979 * C429 + C16983 * C414 + C16978 * C430) *
                          C50809) *
                         C16981 +
                     ((C17181 + C17182 + C17183) * C1551 +
                      (C17184 + C17185 + C17186) * C1549 -
                      (C17879 + C17880 + C17881) * C1552 -
                      (C17882 + C17883 + C17884) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17881 + C17880 + C17879) * C1552 -
                      ((C17186 + C17185 + C17184) * C1549 +
                       (C17183 + C17182 + C17181) * C1551) +
                      (C17884 + C17883 + C17882) * C50809) *
                         C16981 +
                     ((C18815 + C18816 + C18817) * C1552 -
                      ((C17187 + C17188 + C17189) * C1549 +
                       (C17190 + C17191 + C17192) * C1551) +
                      (C18818 + C18819 + C18820) * C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                       C16979 * C408 + C16985 * C397 + C16980 * C407) *
                          C1552 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C1549 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C1551) +
                      (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                       C16979 * C428 + C16985 * C411 + C16980 * C427) *
                          C50809) *
                         C16981 +
                     ((C17885 + C17886 + C17887) * C1552 -
                      ((C17198 + C17197 + C17196) * C1549 +
                       (C17195 + C17194 + C17193) * C1551) +
                      (C17888 + C17889 + C17890) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17193 + C17194 + C17195) * C1551 +
                      (C17196 + C17197 + C17198) * C1549 -
                      (C17887 + C17886 + C17885) * C1552 -
                      (C17890 + C17889 + C17888) * C50809) *
                         C16981 +
                     ((C17199 + C17200 + C17201) * C1551 +
                      (C17202 + C17203 + C17204) * C1549 -
                      (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                       C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                          C1552 -
                      (C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                       C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C1551 +
                       (C19767 * C133 + C50686 * C143) * C1549 -
                       C22199 * C1552 - C22200 * C50809) *
                          C16981 +
                      (C21301 + C21302 - C21303 - C21304) * C50881) *
                         C5105 +
                     ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
                       C22202 * C50809) *
                          C16981 +
                      (C23953 + C23954 - C23955 - C23956) * C50881) *
                         C5106 +
                     ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
                       C22204 * C50809) *
                          C16981 +
                      (C23957 + C23958 - C23959 - C23960) * C50881) *
                         C5107) *
                        C50972 +
                    (((C21303 - (C21302 + C21301) + C21304) * C16981 +
                      (C21307 - (C21306 + C21305) + C21308) * C50881) *
                         C5105 +
                     ((C23955 - (C23954 + C23953) + C23956) * C16981 +
                      (C23961 - (C23962 + C23963) + C23964) * C50881) *
                         C5106 +
                     ((C23959 - (C23958 + C23957) + C23960) * C16981 +
                      (C23965 - (C23966 + C23967) + C23968) * C50881) *
                         C5107) *
                        C50781) *
                       C50964 +
                   ((((C22207 * C1552 -
                       ((C19767 * C134 + C50686 * C144) * C1549 +
                        (C19767 * C123 + C50686 * C130) * C1551) +
                       C22208 * C50809) *
                          C16981 +
                      (C21523 - (C21524 + C21525) + C21526) * C50881) *
                         C5105 +
                     ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
                       C22210 * C50809) *
                          C16981 +
                      (C24271 - (C24272 + C24273) + C24274) * C50881) *
                         C5106 +
                     ((C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
                       C22212 * C50809) *
                          C16981 +
                      (C24275 - (C24276 + C24277) + C24278) * C50881) *
                         C5107) *
                        C50972 +
                    (((C21525 + C21524 - C21523 - C21526) * C16981 +
                      (C21529 + C21528 - C21527 - C21530) * C50881) *
                         C5105 +
                     ((C24273 + C24272 - C24271 - C24274) * C16981 +
                      (C20427 * C1551 + C20428 * C1549 - C22015 * C1552 -
                       C22016 * C50809) *
                          C50881) *
                         C5106 +
                     ((C24277 + C24276 - C24275 - C24278) * C16981 +
                      (C22015 * C1551 + C22016 * C1549 -
                       (C19767 * C4507 + C50686 * C4513) * C1552 -
                       (C19767 * C4515 + C50686 * C4519) * C50809) *
                          C50881) *
                         C5107) *
                        C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1972 +
            (C19767 * C133 + C50686 * C143) * C51019 -
            (C19767 * C400 + C50686 * C410) * C1973 -
            (C19767 * C414 + C50686 * C430) * C51020 +
            (C19767 * C401 + C50686 * C415) * C1974 +
            (C19767 * C419 + C50686 * C431) * C1971) *
               C19763 +
           (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C19764 +
           (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C19765 +
           (C21743 + C21744 - C21745 - C21746 + C21747 + C21748) * C19766) *
              C50843 * C50972 +
          ((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C19763 +
           (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C19764 +
           (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C19765 +
           (C21099 * C1973 - (C19905 * C51019 + C19906 * C1972) +
            C21100 * C51020 - (C19767 * C20718 + C50686 * C20719) * C1974 -
            (C19767 * C20720 + C50686 * C20721) * C1971) *
               C19766) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C1973 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C51020 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C1974 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C1971) *
               C16981 +
           ((C17181 + C17182 + C17183) * C1972 +
            (C17184 + C17185 + C17186) * C51019 -
            (C17879 + C17880 + C17881) * C1973 -
            (C17882 + C17883 + C17884) * C51020 +
            (C18311 + C18312 + C18313) * C1974 +
            (C18314 + C18315 + C18316) * C1971) *
               C50881) *
              C50843 * C50972 +
          (((C17881 + C17880 + C17879) * C1973 -
            ((C17186 + C17185 + C17184) * C51019 +
             (C17183 + C17182 + C17181) * C1972) +
            (C17884 + C17883 + C17882) * C51020 -
            (C18313 + C18312 + C18311) * C1974 -
            (C18316 + C18315 + C18314) * C1971) *
               C16981 +
           ((C18815 + C18816 + C18817) * C1973 -
            ((C17187 + C17188 + C17189) * C51019 +
             (C17190 + C17191 + C17192) * C1972) +
            (C18818 + C18819 + C18820) * C51020 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C1974 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C1971) *
               C50881) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C16981 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50881) *
               C5105 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C16981 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C50881) *
               C5106 +
           ((C22201 * C1972 + C22202 * C51019 - C22203 * C1973 -
             C22204 * C51020 + C24075 * C1974 + C24076 * C1971) *
                C16981 +
            (C24577 + C24578 - C24579 - C24580 + C24581 + C24582) * C50881) *
               C5107) *
              C50972 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C16981 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C50881) *
               C5105 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C16981 +
            (C20749 * C1973 - (C20422 * C51019 + C20421 * C1972) +
             C20750 * C51020 - C23163 * C1974 - C23164 * C1971) *
                C50881) *
               C5106 +
           ((C24579 - (C24578 + C24577) + C24580 - C24581 - C24582) * C16981 +
            (C23163 * C1973 - (C20750 * C51019 + C20749 * C1972) +
             C23164 * C51020 - (C19767 * C23138 + C50686 * C23139) * C1974 -
             (C19767 * C23140 + C50686 * C23141) * C1971) *
                C50881) *
               C5107) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C1551 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C1549 -
                (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
                 C16983 * C400 + C16978 * C410) *
                    C1552 -
                (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
                 C16983 * C414 + C16978 * C430) *
                    C50809) *
                   C16981 +
               ((C17181 + C17182 + C17183) * C1551 +
                (C17184 + C17185 + C17186) * C1549 -
                (C17879 + C17880 + C17881) * C1552 -
                (C17882 + C17883 + C17884) * C50809) *
                   C50881) *
                  C50843 * C50730 * C900 +
              (((C16983 * C399 + C16978 * C409 + C16984 * C398 + C16979 * C408 +
                 C16985 * C397 + C16980 * C407) *
                    C1552 -
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C1549 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C1551) +
                (C16983 * C413 + C16978 * C429 + C16984 * C412 + C16979 * C428 +
                 C16985 * C411 + C16980 * C427) *
                    C50809) *
                   C16981 +
               ((C17885 + C17886 + C17887) * C1552 -
                ((C17198 + C17197 + C17196) * C1549 +
                 (C17195 + C17194 + C17193) * C1551) +
                (C17888 + C17889 + C17890) * C50809) *
                   C50881) *
                  C50843 * C50730 * C901 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C1551 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C1549 -
                (C16985 * C405 + C16980 * C423 + C16984 * C397 + C16979 * C407 +
                 C16983 * C398 + C16978 * C408) *
                    C1552 -
                (C16985 * C424 + C16980 * C435 + C16984 * C411 + C16979 * C427 +
                 C16983 * C412 + C16978 * C428) *
                    C50809) *
                   C16981 +
               ((C17509 + C17510 + C17511) * C1551 +
                (C17512 + C17513 + C17514) * C1549 -
                (C16985 * C784 + C16980 * C793 + C16984 * C783 + C16979 * C788 +
                 C16983 * C782 + C16978 * C787) *
                    C1552 -
                (C16985 * C794 + C16980 * C799 + C16984 * C792 + C16979 * C798 +
                 C16983 * C791 + C16978 * C797) *
                    C50809) *
                   C50881) *
                  C50843 * C50730 * C902) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C1551 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C1549 -
                (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
                 C16983 * C400 + C16978 * C410) *
                    C1552 -
                (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
                 C16983 * C414 + C16978 * C430) *
                    C50809) *
                   C16981 +
               ((C17181 + C17182 + C17183) * C1551 +
                (C17184 + C17185 + C17186) * C1549 -
                (C17879 + C17880 + C17881) * C1552 -
                (C17882 + C17883 + C17884) * C50809) *
                   C50881) *
                  C50843 * C248 +
              (((C17881 + C17880 + C17879) * C1552 -
                ((C17186 + C17185 + C17184) * C1549 +
                 (C17183 + C17182 + C17181) * C1551) +
                (C17884 + C17883 + C17882) * C50809) *
                   C16981 +
               ((C18815 + C18816 + C18817) * C1552 -
                ((C17187 + C17188 + C17189) * C1549 +
                 (C17190 + C17191 + C17192) * C1551) +
                (C18818 + C18819 + C18820) * C50809) *
                   C50881) *
                  C50843 * C249 +
              (((C17192 + C17191 + C17190) * C1551 +
                (C17189 + C17188 + C17187) * C1549 -
                (C18817 + C18816 + C18815) * C1552 -
                (C18820 + C18819 + C18818) * C50809) *
                   C16981 +
               ((C18147 + C18148 + C18149) * C1551 +
                (C18150 + C18151 + C18152) * C1549 -
                (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                 C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                    C1552 -
                (C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                 C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                    C50809) *
                   C50881) *
                  C50843 * C250) *
             C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
            C16985 * C124 + C16980 * C131) *
               C1721 +
           (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
            C16985 * C135 + C16980 * C145) *
               C1717 -
           (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
            C16983 * C400 + C16978 * C410) *
               C1722 -
           (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
            C16983 * C414 + C16978 * C430) *
               C1718 +
           (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
            C16985 * C403 + C16980 * C417) *
               C1723 +
           (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
            C16985 * C421 + C16980 * C433) *
               C1719 -
           (C16985 * C1726 + C16980 * C1730 + C16984 * C1727 + C16979 * C1731 +
            C16983 * C1728 + C16978 * C1732) *
               C1724 -
           (C16985 * C1734 + C16980 * C1738 + C16984 * C1735 + C16979 * C1739 +
            C16983 * C1736 + C16978 * C1740) *
               C1720) *
              C16981 +
          ((C17181 + C17182 + C17183) * C1721 +
           (C17184 + C17185 + C17186) * C1717 -
           (C17879 + C17880 + C17881) * C1722 -
           (C17882 + C17883 + C17884) * C1718 +
           (C18311 + C18312 + C18313) * C1723 +
           (C18314 + C18315 + C18316) * C1719 -
           (C16985 * C5998 + C16980 * C5999 + C16984 * C4505 + C16979 * C4509 +
            C16983 * C4506 + C16978 * C4510) *
               C1724 -
           (C16985 * C6000 + C16980 * C6001 + C16984 * C4511 + C16979 * C4517 +
            C16983 * C4512 + C16978 * C4518) *
               C1720) *
              C50881) *
         C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1551 +
            (C19767 * C133 + C50686 * C143) * C1549 -
            (C19767 * C400 + C50686 * C410) * C1552 -
            (C19767 * C414 + C50686 * C430) * C50809) *
               C19763 +
           (C19899 * C1551 + C19900 * C1549 - C20419 * C1552 -
            C20420 * C50809) *
               C19764 +
           (C19901 * C1551 + C19902 * C1549 - C20421 * C1552 -
            C20422 * C50809) *
               C19765 +
           (C19903 * C1551 + C19904 * C1549 - C20423 * C1552 -
            C20424 * C50809) *
               C19766) *
              C50843 * C50730 * C900 +
          (((C19767 * C399 + C50686 * C409) * C1552 -
            ((C19767 * C134 + C50686 * C144) * C1549 +
             (C19767 * C123 + C50686 * C130) * C1551) +
            (C19767 * C413 + C50686 * C429) * C50809) *
               C19763 +
           (C20425 * C1552 - (C19908 * C1549 + C19907 * C1551) +
            C20426 * C50809) *
               C19764 +
           (C20427 * C1552 - (C19910 * C1549 + C19909 * C1551) +
            C20428 * C50809) *
               C19765 +
           (C20429 * C1552 - (C19912 * C1549 + C19911 * C1551) +
            C20430 * C50809) *
               C19766) *
              C50843 * C50730 * C901 +
          (((C19767 * C124 + C50686 * C131) * C1551 +
            (C19767 * C135 + C50686 * C145) * C1549 -
            (C19767 * C398 + C50686 * C408) * C1552 -
            (C19767 * C412 + C50686 * C428) * C50809) *
               C19763 +
           (C20143 * C1551 + C20144 * C1549 -
            (C19767 * C782 + C50686 * C787) * C1552 -
            (C19767 * C791 + C50686 * C797) * C50809) *
               C19764 +
           (C20145 * C1551 + C20146 * C1549 -
            (C19767 * C1436 + C50686 * C1440) * C1552 -
            (C19767 * C1444 + C50686 * C1448) * C50809) *
               C19765 +
           (C20147 * C1551 + C20148 * C1549 -
            (C19767 * C3088 + C50686 * C3093) * C1552 -
            (C19767 * C3094 + C50686 * C3097) * C50809) *
               C19766) *
              C50843 * C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1551 +
            (C19767 * C133 + C50686 * C143) * C1549 -
            (C19767 * C400 + C50686 * C410) * C1552 -
            (C19767 * C414 + C50686 * C430) * C50809) *
               C19763 +
           (C21301 + C21302 - C21303 - C21304) * C19764 + C21321 * C19765 +
           C21322 * C19766) *
              C50843 * C248 +
          ((C21303 - (C21302 + C21301) + C21304) * C19763 +
           (C21307 - (C21306 + C21305) + C21308) * C19764 +
           (C21311 - (C21310 + C21309) + C21312) * C19765 +
           (C21313 - (C21314 + C21315) + C21316) * C19766) *
              C50843 * C249 +
          (C21321 * C19763 + C21322 * C19764 +
           (C21315 + C21314 - C21313 - C21316) * C19765 +
           (C20617 * C1551 + C20618 * C1549 -
            (C19767 * C21084 + C50686 * C21085) * C1552 -
            (C19767 * C21086 + C50686 * C21087) * C50809) *
               C19766) *
              C50843 * C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19767 * C122 + C50686 * C129) * C1721 +
           (C19767 * C133 + C50686 * C143) * C1717 -
           (C19767 * C400 + C50686 * C410) * C1722 -
           (C19767 * C414 + C50686 * C430) * C1718 +
           (C19767 * C401 + C50686 * C415) * C1723 +
           (C19767 * C419 + C50686 * C431) * C1719 -
           (C19767 * C1728 + C50686 * C1732) * C1724 -
           (C19767 * C1736 + C50686 * C1740) * C1720) *
              C19763 +
          (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 - C20420 * C1718 +
           C20747 * C1723 + C20748 * C1719 -
           (C19767 * C4506 + C50686 * C4510) * C1724 -
           (C19767 * C4512 + C50686 * C4518) * C1720) *
              C19764 +
          (C19901 * C1721 + C19902 * C1717 - C20421 * C1722 - C20422 * C1718 +
           C20749 * C1723 + C20750 * C1719 -
           (C19767 * C4508 + C50686 * C4514) * C1724 -
           (C19767 * C4516 + C50686 * C4520) * C1720) *
              C19765 +
          (C19903 * C1721 + C19904 * C1717 - C20423 * C1722 - C20424 * C1718 +
           C20751 * C1723 + C20752 * C1719 -
           (C19767 * C21388 + C50686 * C21389) * C1724 -
           (C19767 * C21390 + C50686 * C21391) * C1720) *
              C19766) *
         C50843 * C50730 * C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C16981 +
            (C21301 + C21302 - C21303 - C21304) * C50881) *
               C5105 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C16981 +
            (C20419 * C1551 + C20420 * C1549 - C20747 * C1552 -
             C20748 * C50809) *
                C50881) *
               C5106 +
           ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C16981 +
            (C20747 * C1551 + C20748 * C1549 - C22205 * C1552 -
             C22206 * C50809) *
                C50881) *
               C5107) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C16981 +
            (C21523 - (C21524 + C21525) + C21526) * C50881) *
               C5105 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C16981 +
            (C22013 * C1552 - (C20426 * C1549 + C20425 * C1551) +
             C22014 * C50809) *
                C50881) *
               C5106 +
           ((C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
             C22212 * C50809) *
                C16981 +
            (C22213 * C1552 - (C22014 * C1549 + C22013 * C1551) +
             C22214 * C50809) *
                C50881) *
               C5107) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C16981 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C50881) *
               C5105 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C16981 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C50881) *
               C5106 +
           ((C22533 * C1551 + C22534 * C1549 -
             (C19767 * C1726 + C50686 * C1730) * C1552 -
             (C19767 * C1734 + C50686 * C1738) * C50809) *
                C16981 +
            (C22371 * C1551 + C22372 * C1549 -
             (C19767 * C5998 + C50686 * C5999) * C1552 -
             (C19767 * C6000 + C50686 * C6001) * C50809) *
                C50881) *
               C5107) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C16981 +
            (C21301 + C21302 - C21303 - C21304) * C50881) *
               C5105 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C16981 +
            (C23953 + C23954 - C23955 - C23956) * C50881) *
               C5106 +
           ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C16981 +
            (C23957 + C23958 - C23959 - C23960) * C50881) *
               C5107) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C16981 +
            (C21307 - (C21306 + C21305) + C21308) * C50881) *
               C5105 +
           ((C23955 - (C23954 + C23953) + C23956) * C16981 +
            (C23961 - (C23962 + C23963) + C23964) * C50881) *
               C5106 +
           ((C23959 - (C23958 + C23957) + C23960) * C16981 +
            (C23965 - (C23966 + C23967) + C23968) * C50881) *
               C5107) *
              C249 +
          ((C21321 * C16981 + C21322 * C50881) * C5105 +
           ((C23963 + C23962 - C23961 - C23964) * C16981 +
            (C20423 * C1551 + C20424 * C1549 - C20751 * C1552 -
             C20752 * C50809) *
                C50881) *
               C5106 +
           ((C23967 + C23966 - C23965 - C23968) * C16981 +
            (C20751 * C1551 + C20752 * C1549 -
             (C19767 * C21388 + C50686 * C21389) * C1552 -
             (C19767 * C21390 + C50686 * C21391) * C50809) *
                C50881) *
               C5107) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1721 +
            (C19767 * C133 + C50686 * C143) * C1717 - C22199 * C1722 -
            C22200 * C1718 + C22201 * C1723 + C22202 * C1719 - C22203 * C1724 -
            C22204 * C1720) *
               C16981 +
           (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 - C20420 * C1718 +
            C20747 * C1723 + C20748 * C1719 - C22205 * C1724 - C22206 * C1720) *
               C50881) *
              C5105 +
          ((C22199 * C1721 + C22200 * C1717 - C22201 * C1722 - C22202 * C1718 +
            C22203 * C1723 + C22204 * C1719 - C24075 * C1724 - C24076 * C1720) *
               C16981 +
           (C20419 * C1721 + C20420 * C1717 - C20747 * C1722 - C20748 * C1718 +
            C22205 * C1723 + C22206 * C1719 - C23161 * C1724 - C23162 * C1720) *
               C50881) *
              C5106 +
          ((C22201 * C1721 + C22202 * C1717 - C22203 * C1722 - C22204 * C1718 +
            C24075 * C1723 + C24076 * C1719 -
            (C19767 * C7303 + C50686 * C7305) * C1724 -
            (C19767 * C7307 + C50686 * C7309) * C1720) *
               C16981 +
           (C20747 * C1721 + C20748 * C1717 - C22205 * C1722 - C22206 * C1718 +
            C23161 * C1723 + C23162 * C1719 -
            (C19767 * C24066 + C50686 * C24067) * C1724 -
            (C19767 * C24068 + C50686 * C24069) * C1720) *
               C50881) *
              C5107) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1972 +
            (C19767 * C133 + C50686 * C143) * C51019 -
            (C19767 * C400 + C50686 * C410) * C1973 -
            (C19767 * C414 + C50686 * C430) * C51020 +
            (C19767 * C401 + C50686 * C415) * C1974 +
            (C19767 * C419 + C50686 * C431) * C1971) *
               C19763 +
           (C19899 * C1972 + C19900 * C51019 - C20419 * C1973 -
            C20420 * C51020 + C20747 * C1974 + C20748 * C1971) *
               C19764 +
           (C19901 * C1972 + C19902 * C51019 - C20421 * C1973 -
            C20422 * C51020 + C20749 * C1974 + C20750 * C1971) *
               C19765 +
           (C19903 * C1972 + C19904 * C51019 - C20423 * C1973 -
            C20424 * C51020 + C20751 * C1974 + C20752 * C1971) *
               C19766) *
              C50843 * C50730 * C50964 +
          (((C19767 * C399 + C50686 * C409) * C1973 -
            ((C19767 * C134 + C50686 * C144) * C51019 +
             (C19767 * C123 + C50686 * C130) * C1972) +
            (C19767 * C413 + C50686 * C429) * C51020 -
            (C19767 * C402 + C50686 * C416) * C1974 -
            (C19767 * C420 + C50686 * C432) * C1971) *
               C19763 +
           (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
            C20426 * C51020 - (C19767 * C1090 + C50686 * C1094) * C1974 -
            (C19767 * C1098 + C50686 * C1102) * C1971) *
               C19764 +
           (C20427 * C1973 - (C19910 * C51019 + C19909 * C1972) +
            C20428 * C51020 - (C19767 * C2565 + C50686 * C2568) * C1974 -
            (C19767 * C2570 + C50686 * C2574) * C1971) *
               C19765 +
           (C20429 * C1973 - (C19912 * C51019 + C19911 * C1972) +
            C20430 * C51020 - (C19767 * C3561 + C50686 * C3563) * C1974 -
            (C19767 * C3565 + C50686 * C3567) * C1971) *
               C19766) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C1973 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C51020 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C1974 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C1971) *
               C16981 +
           ((C17181 + C17182 + C17183) * C1972 +
            (C17184 + C17185 + C17186) * C51019 -
            (C17879 + C17880 + C17881) * C1973 -
            (C17882 + C17883 + C17884) * C51020 +
            (C18311 + C18312 + C18313) * C1974 +
            (C18314 + C18315 + C18316) * C1971) *
               C50881) *
              C50843 * C50730 * C50964 +
          (((C16983 * C399 + C16978 * C409 + C16984 * C398 + C16979 * C408 +
             C16985 * C397 + C16980 * C407) *
                C1973 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51019 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1972) +
            (C16983 * C413 + C16978 * C429 + C16984 * C412 + C16979 * C428 +
             C16985 * C411 + C16980 * C427) *
                C51020 -
            (C16985 * C404 + C16980 * C418 + C16984 * C403 + C16979 * C417 +
             C16983 * C402 + C16978 * C416) *
                C1974 -
            (C16985 * C422 + C16980 * C434 + C16984 * C421 + C16979 * C433 +
             C16983 * C420 + C16978 * C432) *
                C1971) *
               C16981 +
           ((C17885 + C17886 + C17887) * C1973 -
            ((C17198 + C17197 + C17196) * C51019 +
             (C17195 + C17194 + C17193) * C1972) +
            (C17888 + C17889 + C17890) * C51020 -
            (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 + C16979 * C1093 +
             C16983 * C1090 + C16978 * C1094) *
                C1974 -
            (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 + C16979 * C1101 +
             C16983 * C1098 + C16978 * C1102) *
                C1971) *
               C50881) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C16981 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50881) *
               C5105 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C16981 +
            (C20419 * C1972 + C20420 * C51019 - C20747 * C1973 -
             C20748 * C51020 + C22205 * C1974 + C22206 * C1971) *
                C50881) *
               C5106 +
           ((C22201 * C1972 + C22202 * C51019 - C22203 * C1973 -
             C22204 * C51020 + C24075 * C1974 + C24076 * C1971) *
                C16981 +
            (C20747 * C1972 + C20748 * C51019 - C22205 * C1973 -
             C22206 * C51020 + C23161 * C1974 + C23162 * C1971) *
                C50881) *
               C5107) *
              C50730 * C50964 +
          (((C22207 * C1973 -
             ((C19767 * C134 + C50686 * C144) * C51019 +
              (C19767 * C123 + C50686 * C130) * C1972) +
             C22208 * C51020 - C22209 * C1974 - C22210 * C1971) *
                C16981 +
            (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
             C20426 * C51020 - C22013 * C1974 - C22014 * C1971) *
                C50881) *
               C5105 +
           ((C22209 * C1973 - (C22208 * C51019 + C22207 * C1972) +
             C22210 * C51020 - C22211 * C1974 - C22212 * C1971) *
                C16981 +
            (C22013 * C1973 - (C20426 * C51019 + C20425 * C1972) +
             C22014 * C51020 - C22213 * C1974 - C22214 * C1971) *
                C50881) *
               C5106 +
           ((C22211 * C1973 - (C22210 * C51019 + C22209 * C1972) +
             C22212 * C51020 - (C19767 * C5401 + C50686 * C5404) * C1974 -
             (C19767 * C5406 + C50686 * C5410) * C1971) *
                C16981 +
            (C22213 * C1973 - (C22014 * C51019 + C22013 * C1972) +
             C22214 * C51020 - (C19767 * C6404 + C50686 * C6406) * C1974 -
             (C19767 * C6408 + C50686 * C6410) * C1971) *
                C50881) *
               C5107) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1551 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1549 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C1552 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1551 +
                     (C17184 + C17185 + C17186) * C1549 -
                     (C17879 + C17880 + C17881) * C1552 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C248 +
                   (((C17881 + C17880 + C17879) * C1552 -
                     ((C17186 + C17185 + C17184) * C1549 +
                      (C17183 + C17182 + C17181) * C1551) +
                     (C17884 + C17883 + C17882) * C50809) *
                        C16981 +
                    ((C18815 + C18816 + C18817) * C1552 -
                     ((C17187 + C17188 + C17189) * C1549 +
                      (C17190 + C17191 + C17192) * C1551) +
                     (C18818 + C18819 + C18820) * C50809) *
                        C50881) *
                       C50843 * C249 +
                   (((C17192 + C17191 + C17190) * C1551 +
                     (C17189 + C17188 + C17187) * C1549 -
                     (C18817 + C18816 + C18815) * C1552 -
                     (C18820 + C18819 + C18818) * C50809) *
                        C16981 +
                    ((C18147 + C18148 + C18149) * C1551 +
                     (C18150 + C18151 + C18152) * C1549 -
                     (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                      C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                         C1552 -
                     (C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                      C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                         C50809) *
                        C50881) *
                       C50843 * C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1551 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1549 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C1552 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1551 +
                     (C17184 + C17185 + C17186) * C1549 -
                     (C17879 + C17880 + C17881) * C1552 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C50730 * C900 +
                   (((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                      C16979 * C408 + C16985 * C397 + C16980 * C407) *
                         C1552 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C1549 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C1551) +
                     (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                      C16979 * C428 + C16985 * C411 + C16980 * C427) *
                         C50809) *
                        C16981 +
                    ((C17885 + C17886 + C17887) * C1552 -
                     ((C17198 + C17197 + C17196) * C1549 +
                      (C17195 + C17194 + C17193) * C1551) +
                     (C17888 + C17889 + C17890) * C50809) *
                        C50881) *
                       C50843 * C50730 * C901 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C1551 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C1549 -
                     (C16985 * C405 + C16980 * C423 + C16984 * C397 +
                      C16979 * C407 + C16983 * C398 + C16978 * C408) *
                         C1552 -
                     (C16985 * C424 + C16980 * C435 + C16984 * C411 +
                      C16979 * C427 + C16983 * C412 + C16978 * C428) *
                         C50809) *
                        C16981 +
                    ((C17509 + C17510 + C17511) * C1551 +
                     (C17512 + C17513 + C17514) * C1549 -
                     (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                      C16979 * C788 + C16983 * C782 + C16978 * C787) *
                         C1552 -
                     (C16985 * C794 + C16980 * C799 + C16984 * C792 +
                      C16979 * C798 + C16983 * C791 + C16978 * C797) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C1551 +
                     (C19767 * C133 + C50686 * C143) * C1549 -
                     (C19767 * C400 + C50686 * C410) * C1552 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C19899 * C1551 + C19900 * C1549 - C20419 * C1552 -
                     C20420 * C50809) *
                        C19764 +
                    (C19901 * C1551 + C19902 * C1549 - C20421 * C1552 -
                     C20422 * C50809) *
                        C19765 +
                    (C19903 * C1551 + C19904 * C1549 - C20423 * C1552 -
                     C20424 * C50809) *
                        C19766) *
                       C50843 * C50730 * C900 +
                   (((C19767 * C399 + C50686 * C409) * C1552 -
                     ((C19767 * C134 + C50686 * C144) * C1549 +
                      (C19767 * C123 + C50686 * C130) * C1551) +
                     (C19767 * C413 + C50686 * C429) * C50809) *
                        C19763 +
                    (C20425 * C1552 - (C19908 * C1549 + C19907 * C1551) +
                     C20426 * C50809) *
                        C19764 +
                    (C20427 * C1552 - (C19910 * C1549 + C19909 * C1551) +
                     C20428 * C50809) *
                        C19765 +
                    (C20429 * C1552 - (C19912 * C1549 + C19911 * C1551) +
                     C20430 * C50809) *
                        C19766) *
                       C50843 * C50730 * C901 +
                   (((C19767 * C124 + C50686 * C131) * C1551 +
                     (C19767 * C135 + C50686 * C145) * C1549 -
                     (C19767 * C398 + C50686 * C408) * C1552 -
                     (C19767 * C412 + C50686 * C428) * C50809) *
                        C19763 +
                    (C20143 * C1551 + C20144 * C1549 -
                     (C19767 * C782 + C50686 * C787) * C1552 -
                     (C19767 * C791 + C50686 * C797) * C50809) *
                        C19764 +
                    (C20145 * C1551 + C20146 * C1549 -
                     (C19767 * C1436 + C50686 * C1440) * C1552 -
                     (C19767 * C1444 + C50686 * C1448) * C50809) *
                        C19765 +
                    (C20147 * C1551 + C20148 * C1549 -
                     (C19767 * C3088 + C50686 * C3093) * C1552 -
                     (C19767 * C3094 + C50686 * C3097) * C50809) *
                        C19766) *
                       C50843 * C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C1551 +
                     (C19767 * C133 + C50686 * C143) * C1549 -
                     (C19767 * C400 + C50686 * C410) * C1552 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C21301 + C21302 - C21303 - C21304) * C19764 +
                    C21321 * C19765 + C21322 * C19766) *
                       C50843 * C248 +
                   ((C21303 - (C21302 + C21301) + C21304) * C19763 +
                    (C21307 - (C21306 + C21305) + C21308) * C19764 +
                    (C21311 - (C21310 + C21309) + C21312) * C19765 +
                    (C21313 - (C21314 + C21315) + C21316) * C19766) *
                       C50843 * C249 +
                   (C21321 * C19763 + C21322 * C19764 +
                    (C21315 + C21314 - C21313 - C21316) * C19765 +
                    (C20617 * C1551 + C20618 * C1549 -
                     (C19767 * C21084 + C50686 * C21085) * C1552 -
                     (C19767 * C21086 + C50686 * C21087) * C50809) *
                        C19766) *
                       C50843 * C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C1551 +
                      (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
                      C22200 * C50809) *
                         C16981 +
                     (C21301 + C21302 - C21303 - C21304) * C50881) *
                        C5105 +
                    ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
                      C22202 * C50809) *
                         C16981 +
                     (C20419 * C1551 + C20420 * C1549 - C20747 * C1552 -
                      C20748 * C50809) *
                         C50881) *
                        C5106 +
                    ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
                      C22204 * C50809) *
                         C16981 +
                     (C20747 * C1551 + C20748 * C1549 - C22205 * C1552 -
                      C22206 * C50809) *
                         C50881) *
                        C5107) *
                       C50730 * C900 +
                   (((C22207 * C1552 -
                      ((C19767 * C134 + C50686 * C144) * C1549 +
                       (C19767 * C123 + C50686 * C130) * C1551) +
                      C22208 * C50809) *
                         C16981 +
                     (C21523 - (C21524 + C21525) + C21526) * C50881) *
                        C5105 +
                    ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
                      C22210 * C50809) *
                         C16981 +
                     (C22013 * C1552 - (C20426 * C1549 + C20425 * C1551) +
                      C22014 * C50809) *
                         C50881) *
                        C5106 +
                    ((C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
                      C22212 * C50809) *
                         C16981 +
                     (C22213 * C1552 - (C22014 * C1549 + C22013 * C1551) +
                      C22214 * C50809) *
                         C50881) *
                        C5107) *
                       C50730 * C901 +
                   ((((C19767 * C124 + C50686 * C131) * C1551 +
                      (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
                      C22532 * C50809) *
                         C16981 +
                     (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
                      C22370 * C50809) *
                         C50881) *
                        C5105 +
                    ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
                      C22534 * C50809) *
                         C16981 +
                     (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
                      C22372 * C50809) *
                         C50881) *
                        C5106 +
                    ((C22533 * C1551 + C22534 * C1549 -
                      (C19767 * C1726 + C50686 * C1730) * C1552 -
                      (C19767 * C1734 + C50686 * C1738) * C50809) *
                         C16981 +
                     (C22371 * C1551 + C22372 * C1549 -
                      (C19767 * C5998 + C50686 * C5999) * C1552 -
                      (C19767 * C6000 + C50686 * C6001) * C50809) *
                         C50881) *
                        C5107) *
                       C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C1551 +
                      (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
                      C22200 * C50809) *
                         C16981 +
                     (C21301 + C21302 - C21303 - C21304) * C50881) *
                        C5105 +
                    ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
                      C22202 * C50809) *
                         C16981 +
                     (C23953 + C23954 - C23955 - C23956) * C50881) *
                        C5106 +
                    ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
                      C22204 * C50809) *
                         C16981 +
                     (C23957 + C23958 - C23959 - C23960) * C50881) *
                        C5107) *
                       C248 +
                   (((C21303 - (C21302 + C21301) + C21304) * C16981 +
                     (C21307 - (C21306 + C21305) + C21308) * C50881) *
                        C5105 +
                    ((C23955 - (C23954 + C23953) + C23956) * C16981 +
                     (C23961 - (C23962 + C23963) + C23964) * C50881) *
                        C5106 +
                    ((C23959 - (C23958 + C23957) + C23960) * C16981 +
                     (C23965 - (C23966 + C23967) + C23968) * C50881) *
                        C5107) *
                       C249 +
                   ((C21321 * C16981 + C21322 * C50881) * C5105 +
                    ((C23963 + C23962 - C23961 - C23964) * C16981 +
                     (C20423 * C1551 + C20424 * C1549 - C20751 * C1552 -
                      C20752 * C50809) *
                         C50881) *
                        C5106 +
                    ((C23967 + C23966 - C23965 - C23968) * C16981 +
                     (C20751 * C1551 + C20752 * C1549 -
                      (C19767 * C21388 + C50686 * C21389) * C1552 -
                      (C19767 * C21390 + C50686 * C21391) * C50809) *
                         C50881) *
                        C5107) *
                       C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C50986 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C16981 +
             ((C25605 + C25604) * C121 + (C25607 + C25606) * C50745) * C50881) *
                C50907) *
               C50972 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             ((C25606 + C25607) * C50745 + (C25604 + C25605) * C121) * C16981) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
                C50986) *
               C50781) *
              C51015 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C50986 +
            (((C25612 + C25613) * C121 + (C25614 + C25615) * C50745) * C16981 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C50781 -
           ((((C25615 + C25614) * C50745 + (C25613 + C25612) * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C16981) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C16981) *
                C50986) *
               C50972) *
              C51016 +
          (((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                  C121 +
              (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                  C50745) *
                 C16981 +
             ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
                C50986 +
            (((C49718 * C398 + C50957 * C408 + C49711 * C397 + C50691 * C407) *
                  C121 +
              (C49718 * C412 + C50957 * C428 + C49711 * C411 + C50691 * C427) *
                  C50745) *
                 C16981 +
             ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
                C50907) *
               C50972 -
           ((((C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
               C50957 * C1448) *
                  C50745 +
              (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
               C50957 * C1440) *
                  C121) *
                 C50881 +
             ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C16981) *
                C50907 +
            (((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C50881 +
             ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C16981) *
                C50986) *
               C50781) *
              C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C644 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50973 -
              (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                 C16981 +
             ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
              C28689 * C645 - C28690 * C50809) *
                 C50881) *
                C50986 +
            (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
              (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                 C16981 +
             (C28691 * C644 + C28692 * C50973 - (C26044 + C26043) * C645 -
              (C26046 + C26045) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           (((C28691 * C645 -
              ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
              C28692 * C50809) *
                 C16981 +
             ((C25609 + C25608) * C645 -
              ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
              (C25611 + C25610) * C50809) *
                 C50881) *
                C50986 +
            (((C26043 + C26044) * C645 - (C28690 * C50973 + C28689 * C644) +
              (C26045 + C26046) * C50809) *
                 C16981 +
             ((C26047 + C26048) * C645 - (C26540 * C50973 + C26539 * C644) +
              (C26049 + C26050) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C251 +
          (((((C28007 + C28008) * C645 -
              ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                   C50973 +
               (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                   C644) +
              (C28009 + C28010) * C50809) *
                 C16981 +
             (C28693 * C645 -
              ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
              C28694 * C50809) *
                 C50881) *
                C50986 +
            (((C28012 + C28011) * C645 -
              ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
              (C28014 + C28013) * C50809) *
                 C16981 +
             ((C28016 + C28015) * C645 - (C28695 * C50973 + C28696 * C644) +
              (C28018 + C28017) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           ((((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
              C28696 * C645 - C28695 * C50809) *
                 C16981 +
             ((C24898 + C24899) * C644 + (C24900 + C24901) * C50973 -
              (C25617 + C25616) * C645 - (C25619 + C25618) * C50809) *
                 C50881) *
                C50986 +
            ((C28693 * C644 + C28694 * C50973 - (C28015 + C28016) * C645 -
              (C28017 + C28018) * C50809) *
                 C16981 +
             ((C25616 + C25617) * C644 + (C25618 + C25619) * C50973 -
              (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
               C50957 * C2568) *
                  C645 -
              (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
               C50957 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C50986 +
            (((C49718 * C400 + C50957 * C410 + C49711 * C399 + C50691 * C409) *
                  C121 +
              (C49718 * C414 + C50957 * C430 + C49711 * C413 + C50691 * C429) *
                  C50745) *
                 C16981 +
             ((C25605 + C25604) * C121 + (C25607 + C25606) * C50745) * C50881) *
                C50907) *
               C248 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             ((C25606 + C25607) * C50745 + (C25604 + C25605) * C121) * C16981) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
                C50986) *
               C249 +
           ((C24914 * C16981 +
             ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
                C50986 +
            (((C25609 + C25608) * C121 + (C25611 + C25610) * C50745) * C16981 +
             ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
                C50907) *
               C250) *
              C251 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C50986 +
            (((C25612 + C25613) * C121 + (C25614 + C25615) * C50745) * C16981 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C249 -
           ((((C25615 + C25614) * C50745 + (C25613 + C25612) * C121) * C50881 +
             ((C49711 * C412 + C50691 * C428 + C49718 * C413 + C50957 * C429) *
                  C50745 +
              (C49711 * C398 + C50691 * C408 + C49718 * C399 + C50957 * C409) *
                  C121) *
                 C16981) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C16981) *
                C50986) *
               C248 -
           ((((C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
               C50957 * C3096) *
                  C50745 +
              (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
               C50957 * C3090) *
                  C121) *
                 C50881 +
             ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C16981) *
                C50907 +
            (((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C50881 +
             C24915 * C16981) *
                C50986) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C50986 +
           (((C49718 * C400 + C50957 * C410 + C49711 * C399 + C50691 * C409) *
                 C121 +
             (C49718 * C414 + C50957 * C430 + C49711 * C413 + C50691 * C429) *
                 C50745) *
                C16981 +
            ((C25605 + C25604) * C121 + (C25607 + C25606) * C50745) * C50881) *
               C50907) *
              C50730 * C113 -
          ((((C25615 + C25614) * C50745 + (C25613 + C25612) * C121) * C50881 +
            ((C49711 * C412 + C50691 * C428 + C49718 * C413 + C50957 * C429) *
                 C50745 +
             (C49711 * C398 + C50691 * C408 + C49718 * C399 + C50957 * C409) *
                 C121) *
                C16981) *
               C50907 +
           (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C16981) *
               C50986) *
              C50730 * C114 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C16981 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
               C50986 +
           (((C49718 * C398 + C50957 * C408 + C49711 * C397 + C50691 * C407) *
                 C121 +
             (C49718 * C412 + C50957 * C428 + C49711 * C411 + C50691 * C427) *
                 C50745) *
                C16981 +
            ((C49718 * C782 + C50957 * C787 + C49711 * C783 + C50691 * C788) *
                 C121 +
             (C49718 * C791 + C50957 * C797 + C49711 * C792 + C50691 * C798) *
                 C50745) *
                C50881) *
               C50907) *
              C50730 * C115 -
          ((((C49711 * C794 + C50691 * C799 + C49718 * C792 + C50957 * C798) *
                 C50745 +
             (C49711 * C784 + C50691 * C793 + C49718 * C783 + C50957 * C788) *
                 C121) *
                C50881 +
            ((C49711 * C424 + C50691 * C435 + C49718 * C411 + C50957 * C427) *
                 C50745 +
             (C49711 * C405 + C50691 * C423 + C49718 * C397 + C50957 * C407) *
                 C121) *
                C16981) *
               C50907 +
           (((C49711 * C280 + C50691 * C291 + C49718 * C263 + C50957 * C283) *
                 C50745 +
             (C49711 * C261 + C50691 * C279 + C49718 * C253 + C50957 * C267) *
                 C121) *
                C50881 +
            ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                 C50745 +
             (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                 C121) *
                C16981) *
               C50986) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C394 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C391 -
             (C27999 + C28000) * C395 - (C28001 + C28002) * C392 +
             (C28003 + C28004) * C396 + (C28005 + C28006) * C393) *
                C16981 +
            ((C24882 + C24883) * C394 + (C24884 + C24885) * C391 -
             (C25604 + C25605) * C395 - (C25606 + C25607) * C392 +
             (C26043 + C26044) * C396 + (C26045 + C26046) * C393) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C394 + (C28002 + C28001) * C391 -
             (C28004 + C28003) * C395 - (C28006 + C28005) * C392 +
             (C49718 * C1728 + C50957 * C1732 + C49711 * C1727 +
              C50691 * C1731) *
                 C396 +
             (C49718 * C1736 + C50957 * C1740 + C49711 * C1735 +
              C50691 * C1739) *
                 C393) *
                C16981 +
            ((C25605 + C25604) * C394 + (C25607 + C25606) * C391 -
             (C26044 + C26043) * C395 - (C26046 + C26045) * C392 +
             (C49718 * C4506 + C50957 * C4510 + C49711 * C4505 +
              C50691 * C4509) *
                 C396 +
             (C49718 * C4512 + C50957 * C4518 + C49711 * C4511 +
              C50691 * C4517) *
                 C393) *
                C50881) *
               C50907) *
              C50730 * C251 +
          ((((C28007 + C28008) * C395 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C391 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C394) +
             (C28009 + C28010) * C392 - (C28011 + C28012) * C396 -
             (C28013 + C28014) * C393) *
                C16981 +
            ((C25612 + C25613) * C395 -
             ((C24897 + C24896) * C391 + (C24895 + C24894) * C394) +
             (C25614 + C25615) * C392 - (C28015 + C28016) * C396 -
             (C28017 + C28018) * C393) *
                C50881) *
               C50986 +
           (((C28012 + C28011) * C395 -
             ((C28010 + C28009) * C391 + (C28008 + C28007) * C394) +
             (C28014 + C28013) * C392 -
             (C49711 * C1726 + C50691 * C1730 + C49718 * C1727 +
              C50957 * C1731) *
                 C396 -
             (C49711 * C1734 + C50691 * C1738 + C49718 * C1735 +
              C50957 * C1739) *
                 C393) *
                C16981 +
            ((C28016 + C28015) * C395 -
             ((C25615 + C25614) * C391 + (C25613 + C25612) * C394) +
             (C28018 + C28017) * C392 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C396 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C393) *
                C50881) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                C16981 +
            ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
             (C25604 + C25605) * C645 - (C25606 + C25607) * C50809) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
             (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                C16981 +
            ((C25605 + C25604) * C644 + (C25607 + C25606) * C50973 -
             (C26044 + C26043) * C645 - (C26046 + C26045) * C50809) *
                C50881) *
               C50907) *
              C50730 * C51015 +
          ((((C28007 + C28008) * C645 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50973 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C644) +
             (C28009 + C28010) * C50809) *
                C16981 +
            ((C25612 + C25613) * C645 -
             ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
             (C25614 + C25615) * C50809) *
                C50881) *
               C50986 +
           (((C28012 + C28011) * C645 -
             ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
             (C28014 + C28013) * C50809) *
                C16981 +
            ((C28016 + C28015) * C645 -
             ((C25615 + C25614) * C50973 + (C25613 + C25612) * C644) +
             (C28018 + C28017) * C50809) *
                C50881) *
               C50907) *
              C50730 * C51016 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C644 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50973 -
             (C28427 + C28428) * C645 - (C28429 + C28430) * C50809) *
                C16981 +
            ((C25224 + C25225) * C644 + (C25226 + C25227) * C50973 -
             (C28222 + C28221) * C645 - (C28224 + C28223) * C50809) *
                C50881) *
               C50986 +
           (((C28428 + C28427) * C644 + (C28430 + C28429) * C50973 -
             (C49711 * C404 + C50691 * C418 + C49718 * C403 + C50957 * C417) *
                 C645 -
             (C49711 * C422 + C50691 * C434 + C49718 * C421 + C50957 * C433) *
                 C50809) *
                C16981 +
            ((C28221 + C28222) * C644 + (C28223 + C28224) * C50973 -
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C645 -
             (C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C50986 +
           (((C49718 * C400 + C50957 * C410 + C49711 * C399 + C50691 * C409) *
                 C121 +
             (C49718 * C414 + C50957 * C430 + C49711 * C413 + C50691 * C429) *
                 C50745) *
                C16981 +
            ((C25605 + C25604) * C121 + (C25607 + C25606) * C50745) * C50881) *
               C50907) *
              C50730 * C113 -
          ((((C25615 + C25614) * C50745 + (C25613 + C25612) * C121) * C50881 +
            ((C49711 * C412 + C50691 * C428 + C49718 * C413 + C50957 * C429) *
                 C50745 +
             (C49711 * C398 + C50691 * C408 + C49718 * C399 + C50957 * C409) *
                 C121) *
                C16981) *
               C50907 +
           (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C16981) *
               C50986) *
              C50730 * C114 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C16981 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
               C50986 +
           (((C49718 * C398 + C50957 * C408 + C49711 * C397 + C50691 * C407) *
                 C121 +
             (C49718 * C412 + C50957 * C428 + C49711 * C411 + C50691 * C427) *
                 C50745) *
                C16981 +
            ((C49718 * C782 + C50957 * C787 + C49711 * C783 + C50691 * C788) *
                 C121 +
             (C49718 * C791 + C50957 * C797 + C49711 * C792 + C50691 * C798) *
                 C50745) *
                C50881) *
               C50907) *
              C50730 * C115 -
          ((((C49711 * C794 + C50691 * C799 + C49718 * C792 + C50957 * C798) *
                 C50745 +
             (C49711 * C784 + C50691 * C793 + C49718 * C783 + C50957 * C788) *
                 C121) *
                C50881 +
            ((C49711 * C424 + C50691 * C435 + C49718 * C411 + C50957 * C427) *
                 C50745 +
             (C49711 * C405 + C50691 * C423 + C49718 * C397 + C50957 * C407) *
                 C121) *
                C16981) *
               C50907 +
           (((C49711 * C280 + C50691 * C291 + C49718 * C263 + C50957 * C283) *
                 C50745 +
             (C49711 * C261 + C50691 * C279 + C49718 * C253 + C50957 * C267) *
                 C121) *
                C50881 +
            ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                 C50745 +
             (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                 C121) *
                C16981) *
               C50986) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C50986 +
            (((C49718 * C400 + C50957 * C410 + C49711 * C399 + C50691 * C409) *
                  C121 +
              (C49718 * C414 + C50957 * C430 + C49711 * C413 + C50691 * C429) *
                  C50745) *
                 C16981 +
             ((C25605 + C25604) * C121 + (C25607 + C25606) * C50745) * C50881) *
                C50907) *
               C248 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             ((C25606 + C25607) * C50745 + (C25604 + C25605) * C121) * C16981) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
                C50986) *
               C249 +
           ((C24914 * C16981 +
             ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
                C50986 +
            (((C25609 + C25608) * C121 + (C25611 + C25610) * C50745) * C16981 +
             ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
                C50907) *
               C250) *
              C251 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C50986 +
            (((C25612 + C25613) * C121 + (C25614 + C25615) * C50745) * C16981 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C249 -
           ((((C25615 + C25614) * C50745 + (C25613 + C25612) * C121) * C50881 +
             ((C49711 * C412 + C50691 * C428 + C49718 * C413 + C50957 * C429) *
                  C50745 +
              (C49711 * C398 + C50691 * C408 + C49718 * C399 + C50957 * C409) *
                  C121) *
                 C16981) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C16981) *
                C50986) *
               C248 -
           ((((C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
               C50957 * C3096) *
                  C50745 +
              (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
               C50957 * C3090) *
                  C121) *
                 C50881 +
             ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C16981) *
                C50907 +
            (((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C50881 +
             C24915 * C16981) *
                C50986) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C50986 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C16981 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C51017 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C16981) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
                C50986) *
               C51018 +
           ((C24914 * C16981 +
             ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
                C50986 +
            (((C25609 + C25608) * C121 + (C25611 + C25610) * C50745) * C16981 +
             ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
                C50907) *
               C1204) *
              C50964 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C50986 +
            ((C28693 * C121 + C28694 * C50745) * C16981 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C51018 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C16981) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C16981) *
                C50986) *
               C51017 -
           ((((C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
               C50957 * C3096) *
                  C50745 +
              (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
               C50957 * C3090) *
                  C121) *
                 C50881 +
             ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C16981) *
                C50907 +
            (((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C50881 +
             C24915 * C16981) *
                C50986) *
               C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                C16981 +
            ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
             C28689 * C645 - C28690 * C50809) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
             (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                C16981 +
            (C28691 * C644 + C28692 * C50973 - C29217 * C645 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C51017 +
          (((C28691 * C645 -
             ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
             C28692 * C50809) *
                C16981 +
            (C29877 * C645 -
             ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
             C29878 * C50809) *
                C50881) *
               C50986 +
           ((C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
             C29216 * C50809) *
                C16981 +
            ((C26047 + C26048) * C645 - (C26540 * C50973 + C26539 * C644) +
             (C26049 + C26050) * C50809) *
                C50881) *
               C50907) *
              C51018 +
          ((C26557 * C16981 +
            ((C24893 + C24892) * C644 + (C24891 + C24890) * C50973 -
             (C26553 + C26552) * C645 - (C26555 + C26554) * C50809) *
                C50881) *
               C50986 +
           ((C29877 * C644 + C29878 * C50973 - (C26048 + C26047) * C645 -
             (C26050 + C26049) * C50809) *
                C16981 +
            ((C26552 + C26553) * C644 + (C26554 + C26555) * C50973 -
             (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
              C50957 * C3564) *
                 C645 -
             (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
              C50957 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C50986 +
           (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C16981 +
            (C28691 * C121 + C28692 * C50745) * C50881) *
               C50907) *
              C969 -
          (((C26540 * C50745 + C26539 * C121) * C50881 +
            (C28690 * C50745 + C28689 * C121) * C16981) *
               C50907 +
           (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
               C50986) *
              C970 +
          ((C24914 * C16981 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
               C50986 +
           (((C25609 + C25608) * C121 + (C25611 + C25610) * C50745) * C16981 +
            ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
               C50907) *
              C971 -
          ((((C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
              C50957 * C4086) *
                 C50745 +
             (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
              C50957 * C4082) *
                 C121) *
                C50881 +
            ((C26555 + C26554) * C50745 + (C26553 + C26552) * C121) * C16981) *
               C50907 +
           (((C25879 + C25878) * C50745 + (C25877 + C25876) * C121) * C50881 +
            C25880 * C16981) *
               C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C50986 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C16981 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C898 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C16981) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
                C50986) *
               C50781) *
              C900 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C50986 +
            ((C28693 * C121 + C28694 * C50745) * C16981 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C16981) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C16981) *
                C50986) *
               C898) *
              C901 +
          (((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                  C121 +
              (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                  C50745) *
                 C16981 +
             ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
                C50986 +
            (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C16981 +
             ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
                C50907) *
               C898 -
           ((((C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
               C50957 * C1448) *
                  C50745 +
              (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
               C50957 * C1440) *
                  C121) *
                 C50881 +
             ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C16981) *
                C50907 +
            (((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C50881 +
             ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C16981) *
                C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C394 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C391 -
             (C27999 + C28000) * C395 - (C28001 + C28002) * C392 +
             (C28003 + C28004) * C396 + (C28005 + C28006) * C393) *
                C16981 +
            ((C24882 + C24883) * C394 + (C24884 + C24885) * C391 -
             C28689 * C395 - C28690 * C392 + C29215 * C396 + C29216 * C393) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C394 + (C28002 + C28001) * C391 -
             (C28004 + C28003) * C395 - (C28006 + C28005) * C392 +
             (C49718 * C1728 + C50957 * C1732 + C49711 * C1727 +
              C50691 * C1731) *
                 C396 +
             (C49718 * C1736 + C50957 * C1740 + C49711 * C1735 +
              C50691 * C1739) *
                 C393) *
                C16981 +
            (C28691 * C394 + C28692 * C391 - C29217 * C395 - C29218 * C392 +
             (C29227 + C29228) * C396 + (C29229 + C29230) * C393) *
                C50881) *
               C50907) *
              C898 +
          (((C28691 * C395 -
             ((C24885 + C24884) * C391 + (C24883 + C24882) * C394) +
             C28692 * C392 - C29217 * C396 - C29218 * C393) *
                C16981 +
            ((C25609 + C25608) * C395 -
             ((C24889 + C24888) * C391 + (C24887 + C24886) * C394) +
             (C25611 + C25610) * C392 - (C26048 + C26047) * C396 -
             (C26050 + C26049) * C393) *
                C50881) *
               C50986 +
           ((C29215 * C395 - (C28690 * C391 + C28689 * C394) + C29216 * C392 -
             (C29228 + C29227) * C396 - (C29230 + C29229) * C393) *
                C16981 +
            ((C26047 + C26048) * C395 - (C26540 * C391 + C26539 * C394) +
             (C26049 + C26050) * C392 -
             (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
              C50957 * C4514) *
                 C396 -
             (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
              C50957 * C4520) *
                 C393) *
                C50881) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C644 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50973 -
              (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                 C16981 +
             ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
              C28689 * C645 - C28690 * C50809) *
                 C50881) *
                C50986 +
            (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
              (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                 C16981 +
             (C28691 * C644 + C28692 * C50973 - C29217 * C645 -
              C29218 * C50809) *
                 C50881) *
                C50907) *
               C898 +
           (((C28691 * C645 -
              ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
              C28692 * C50809) *
                 C16981 +
             ((C25609 + C25608) * C645 -
              ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
              (C25611 + C25610) * C50809) *
                 C50881) *
                C50986 +
            ((C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
              C29216 * C50809) *
                 C16981 +
             ((C26047 + C26048) * C645 - (C26540 * C50973 + C26539 * C644) +
              (C26049 + C26050) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50964 +
          (((((C28007 + C28008) * C645 -
              ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                   C50973 +
               (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                   C644) +
              (C28009 + C28010) * C50809) *
                 C16981 +
             (C28693 * C645 -
              ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
              C28694 * C50809) *
                 C50881) *
                C50986 +
            (((C28012 + C28011) * C645 -
              ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
              (C28014 + C28013) * C50809) *
                 C16981 +
             ((C28016 + C28015) * C645 - (C28695 * C50973 + C28696 * C644) +
              (C28018 + C28017) * C50809) *
                 C50881) *
                C50907) *
               C898 +
           ((((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
              C28696 * C645 - C28695 * C50809) *
                 C16981 +
             ((C24898 + C24899) * C644 + (C24900 + C24901) * C50973 -
              (C25617 + C25616) * C645 - (C25619 + C25618) * C50809) *
                 C50881) *
                C50986 +
            ((C28693 * C644 + C28694 * C50973 - (C28015 + C28016) * C645 -
              (C28017 + C28018) * C50809) *
                 C16981 +
             ((C25616 + C25617) * C644 + (C25618 + C25619) * C50973 -
              (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
               C50957 * C2568) *
                  C645 -
              (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
               C50957 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C50986 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C16981 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C898 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C16981) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
                C50986) *
               C50781) *
              C900 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C50986 +
            ((C28693 * C121 + C28694 * C50745) * C16981 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C16981) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C16981) *
                C50986) *
               C898) *
              C901 +
          (((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                  C121 +
              (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                  C50745) *
                 C16981 +
             ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
                C50986 +
            (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C16981 +
             ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
                C50907) *
               C898 -
           ((((C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
               C50957 * C1448) *
                  C50745 +
              (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
               C50957 * C1440) *
                  C121) *
                 C50881 +
             ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C16981) *
                C50907 +
            (((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C50881 +
             ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C16981) *
                C50986) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C50986 +
           (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C16981 +
            (C28691 * C121 + C28692 * C50745) * C50881) *
               C50907) *
              C969 -
          (((C26540 * C50745 + C26539 * C121) * C50881 +
            (C28690 * C50745 + C28689 * C121) * C16981) *
               C50907 +
           (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C16981) *
               C50986) *
              C970 +
          ((C24914 * C16981 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
               C50986 +
           (((C25609 + C25608) * C121 + (C25611 + C25610) * C50745) * C16981 +
            ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
               C50907) *
              C971 -
          ((((C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
              C50957 * C4086) *
                 C50745 +
             (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
              C50957 * C4082) *
                 C121) *
                C50881 +
            ((C26555 + C26554) * C50745 + (C26553 + C26552) * C121) * C16981) *
               C50907 +
           (((C25879 + C25878) * C50745 + (C25877 + C25876) * C121) * C50881 +
            C25880 * C16981) *
               C50986) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C1551 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C1549 -
              (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                 C16981 +
             ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
              C28689 * C1552 - C28690 * C50809) *
                 C50881) *
                C50986 +
            (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
              (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                 C16981 +
             (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
              C29218 * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           (((C28691 * C1552 -
              ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
              C28692 * C50809) *
                 C16981 +
             (C29877 * C1552 -
              ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
              C29878 * C50809) *
                 C50881) *
                C50986 +
            ((C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
              C29216 * C50809) *
                 C16981 +
             ((C26047 + C26048) * C1552 - (C26540 * C1549 + C26539 * C1551) +
              (C26049 + C26050) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50964 +
          (((((C28007 + C28008) * C1552 -
              ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                   C1549 +
               (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                   C1551) +
              (C28009 + C28010) * C50809) *
                 C16981 +
             (C28693 * C1552 -
              ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
              C28694 * C50809) *
                 C50881) *
                C50986 +
            (((C28012 + C28011) * C1552 -
              ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
              (C28014 + C28013) * C50809) *
                 C16981 +
             ((C28016 + C28015) * C1552 - (C28695 * C1549 + C28696 * C1551) +
              (C28018 + C28017) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           ((((C24894 + C24895) * C1551 + (C24896 + C24897) * C1549 -
              C28696 * C1552 - C28695 * C50809) *
                 C16981 +
             ((C24898 + C24899) * C1551 + (C24900 + C24901) * C1549 -
              (C25617 + C25616) * C1552 - (C25619 + C25618) * C50809) *
                 C50881) *
                C50986 +
            ((C28693 * C1551 + C28694 * C1549 - (C28015 + C28016) * C1552 -
              (C28017 + C28018) * C50809) *
                 C16981 +
             ((C25616 + C25617) * C1551 + (C25618 + C25619) * C1549 -
              (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
               C50957 * C2568) *
                  C1552 -
              (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
               C50957 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1972 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C51019 -
             (C27999 + C28000) * C1973 - (C28001 + C28002) * C51020 +
             (C28003 + C28004) * C1974 + (C28005 + C28006) * C1971) *
                C16981 +
            ((C24882 + C24883) * C1972 + (C24884 + C24885) * C51019 -
             C28689 * C1973 - C28690 * C51020 + C29215 * C1974 +
             C29216 * C1971) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C1972 + (C28002 + C28001) * C51019 -
             (C28004 + C28003) * C1973 - (C28006 + C28005) * C51020 +
             (C30406 + C30405) * C1974 + (C30408 + C30407) * C1971) *
                C16981 +
            (C28691 * C1972 + C28692 * C51019 - C29217 * C1973 -
             C29218 * C51020 + (C29227 + C29228) * C1974 +
             (C29229 + C29230) * C1971) *
                C50881) *
               C50907) *
              C50972 +
          (((C28691 * C1973 -
             ((C24885 + C24884) * C51019 + (C24883 + C24882) * C1972) +
             C28692 * C51020 - C29217 * C1974 - C29218 * C1971) *
                C16981 +
            (C29877 * C1973 -
             ((C24889 + C24888) * C51019 + (C24887 + C24886) * C1972) +
             C29878 * C51020 - (C26048 + C26047) * C1974 -
             (C26050 + C26049) * C1971) *
                C50881) *
               C50986 +
           ((C29215 * C1973 - (C28690 * C51019 + C28689 * C1972) +
             C29216 * C51020 - (C29228 + C29227) * C1974 -
             (C29230 + C29229) * C1971) *
                C16981 +
            ((C26047 + C26048) * C1973 - (C26540 * C51019 + C26539 * C1972) +
             (C26049 + C26050) * C51020 -
             (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
              C50957 * C4514) *
                 C1974 -
             (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
              C50957 * C4520) *
                 C1971) *
                C50881) *
               C50907) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C16981 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C16981 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C248 +
          (((C28691 * C1552 -
             ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
             C28692 * C50809) *
                C16981 +
            (C29877 * C1552 -
             ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
             C29878 * C50809) *
                C50881) *
               C50986 +
           ((C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
             C29216 * C50809) *
                C16981 +
            ((C26047 + C26048) * C1552 - (C26540 * C1549 + C26539 * C1551) +
             (C26049 + C26050) * C50809) *
                C50881) *
               C50907) *
              C249 +
          ((C26856 * C16981 +
            ((C24893 + C24892) * C1551 + (C24891 + C24890) * C1549 -
             (C26553 + C26552) * C1552 - (C26555 + C26554) * C50809) *
                C50881) *
               C50986 +
           ((C29877 * C1551 + C29878 * C1549 - (C26048 + C26047) * C1552 -
             (C26050 + C26049) * C50809) *
                C16981 +
            ((C26552 + C26553) * C1551 + (C26554 + C26555) * C1549 -
             (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
              C50957 * C3564) *
                 C1552 -
             (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
              C50957 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C16981 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C16981 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C50730 * C900 +
          ((((C28007 + C28008) * C1552 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C1549 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1551) +
             (C28009 + C28010) * C50809) *
                C16981 +
            (C28693 * C1552 -
             ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
             C28694 * C50809) *
                C50881) *
               C50986 +
           (((C28012 + C28011) * C1552 -
             ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
             (C28014 + C28013) * C50809) *
                C16981 +
            ((C28016 + C28015) * C1552 - (C28695 * C1549 + C28696 * C1551) +
             (C28018 + C28017) * C50809) *
                C50881) *
               C50907) *
              C50730 * C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C1551 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C1549 -
             (C28427 + C28428) * C1552 - (C28429 + C28430) * C50809) *
                C16981 +
            ((C25224 + C25225) * C1551 + (C25226 + C25227) * C1549 -
             (C28222 + C28221) * C1552 - (C28224 + C28223) * C50809) *
                C50881) *
               C50986 +
           (((C28428 + C28427) * C1551 + (C28430 + C28429) * C1549 -
             (C49711 * C404 + C50691 * C418 + C49718 * C403 + C50957 * C417) *
                 C1552 -
             (C49711 * C422 + C50691 * C434 + C49718 * C421 + C50957 * C433) *
                 C50809) *
                C16981 +
            ((C28221 + C28222) * C1551 + (C28223 + C28224) * C1549 -
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C1552 -
             (C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1721 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1717 -
            (C27999 + C28000) * C1722 - (C28001 + C28002) * C1718 +
            (C28003 + C28004) * C1723 + (C28005 + C28006) * C1719 -
            (C30405 + C30406) * C1724 - (C30407 + C30408) * C1720) *
               C16981 +
           ((C24882 + C24883) * C1721 + (C24884 + C24885) * C1717 -
            C28689 * C1722 - C28690 * C1718 + C29215 * C1723 + C29216 * C1719 -
            (C29228 + C29227) * C1724 - (C29230 + C29229) * C1720) *
               C50881) *
              C50986 +
          (((C28000 + C27999) * C1721 + (C28002 + C28001) * C1717 -
            (C28004 + C28003) * C1722 - (C28006 + C28005) * C1718 +
            (C30406 + C30405) * C1723 + (C30408 + C30407) * C1719 -
            (C49711 * C5401 + C50691 * C5404 + C49718 * C5400 +
             C50957 * C5403) *
                C1724 -
            (C49711 * C5406 + C50691 * C5410 + C49718 * C5405 +
             C50957 * C5409) *
                C1720) *
               C16981 +
           (C28691 * C1721 + C28692 * C1717 - C29217 * C1722 - C29218 * C1718 +
            (C29227 + C29228) * C1723 + (C29229 + C29230) * C1719 -
            (C49711 * C6404 + C50691 * C6406 + C49718 * C6405 +
             C50957 * C6407) *
                C1724 -
            (C49711 * C6408 + C50691 * C6410 + C49718 * C6409 +
             C50957 * C6411) *
                C1720) *
               C50881) *
              C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1972 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C51019 -
             (C27999 + C28000) * C1973 - (C28001 + C28002) * C51020 +
             (C28003 + C28004) * C1974 + (C28005 + C28006) * C1971) *
                C16981 +
            ((C24882 + C24883) * C1972 + (C24884 + C24885) * C51019 -
             C28689 * C1973 - C28690 * C51020 + C29215 * C1974 +
             C29216 * C1971) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C1972 + (C28002 + C28001) * C51019 -
             (C28004 + C28003) * C1973 - (C28006 + C28005) * C51020 +
             (C30406 + C30405) * C1974 + (C30408 + C30407) * C1971) *
                C16981 +
            (C28691 * C1972 + C28692 * C51019 - C29217 * C1973 -
             C29218 * C51020 + (C29227 + C29228) * C1974 +
             (C29229 + C29230) * C1971) *
                C50881) *
               C50907) *
              C50730 * C50964 +
          ((((C28007 + C28008) * C1973 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C51019 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1972) +
             (C28009 + C28010) * C51020 - (C28011 + C28012) * C1974 -
             (C28013 + C28014) * C1971) *
                C16981 +
            (C28693 * C1973 -
             ((C24897 + C24896) * C51019 + (C24895 + C24894) * C1972) +
             C28694 * C51020 - (C28015 + C28016) * C1974 -
             (C28017 + C28018) * C1971) *
                C50881) *
               C50986 +
           (((C28012 + C28011) * C1973 -
             ((C28010 + C28009) * C51019 + (C28008 + C28007) * C1972) +
             (C28014 + C28013) * C51020 -
             (C49711 * C1726 + C50691 * C1730 + C49718 * C1727 +
              C50957 * C1731) *
                 C1974 -
             (C49711 * C1734 + C50691 * C1738 + C49718 * C1735 +
              C50957 * C1739) *
                 C1971) *
                C16981 +
            ((C28016 + C28015) * C1973 - (C28695 * C51019 + C28696 * C1972) +
             (C28018 + C28017) * C51020 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C1974 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C1971) *
                C50881) *
               C50907) *
              C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C16981 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C16981 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C50730 * C900 +
          ((((C28007 + C28008) * C1552 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C1549 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1551) +
             (C28009 + C28010) * C50809) *
                C16981 +
            (C28693 * C1552 -
             ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
             C28694 * C50809) *
                C50881) *
               C50986 +
           (((C28012 + C28011) * C1552 -
             ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
             (C28014 + C28013) * C50809) *
                C16981 +
            ((C28016 + C28015) * C1552 - (C28695 * C1549 + C28696 * C1551) +
             (C28018 + C28017) * C50809) *
                C50881) *
               C50907) *
              C50730 * C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C1551 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C1549 -
             (C28427 + C28428) * C1552 - (C28429 + C28430) * C50809) *
                C16981 +
            ((C25224 + C25225) * C1551 + (C25226 + C25227) * C1549 -
             (C28222 + C28221) * C1552 - (C28224 + C28223) * C50809) *
                C50881) *
               C50986 +
           (((C28428 + C28427) * C1551 + (C28430 + C28429) * C1549 -
             (C49711 * C404 + C50691 * C418 + C49718 * C403 + C50957 * C417) *
                 C1552 -
             (C49711 * C422 + C50691 * C434 + C49718 * C421 + C50957 * C433) *
                 C50809) *
                C16981 +
            ((C28221 + C28222) * C1551 + (C28223 + C28224) * C1549 -
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C1552 -
             (C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C16981 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C50986 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C16981 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C248 +
          (((C28691 * C1552 -
             ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
             C28692 * C50809) *
                C16981 +
            (C29877 * C1552 -
             ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
             C29878 * C50809) *
                C50881) *
               C50986 +
           ((C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
             C29216 * C50809) *
                C16981 +
            ((C26047 + C26048) * C1552 - (C26540 * C1549 + C26539 * C1551) +
             (C26049 + C26050) * C50809) *
                C50881) *
               C50907) *
              C249 +
          ((C26856 * C16981 +
            ((C24893 + C24892) * C1551 + (C24891 + C24890) * C1549 -
             (C26553 + C26552) * C1552 - (C26555 + C26554) * C50809) *
                C50881) *
               C50986 +
           ((C29877 * C1551 + C29878 * C1549 - (C26048 + C26047) * C1552 -
             (C26050 + C26049) * C50809) *
                C16981 +
            ((C26552 + C26553) * C1551 + (C26554 + C26555) * C1549 -
             (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
              C50957 * C3564) *
                 C1552 -
             (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
              C50957 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C50972 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C50781) *
              C51015 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C50972) *
              C51016 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50745) *
                C50881) *
               C50843 * C50972 -
           (((C16985 * C281 + C16980 * C292 + C16984 * C278 + C16979 * C290 +
              C16983 * C277 + C16978 * C289) *
                 C50745 +
             (C16985 * C262 + C16980 * C282 + C16984 * C260 + C16979 * C274 +
              C16983 * C259 + C16978 * C273) *
                 C121) *
                C50881 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C50972 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C50781) *
              C51015 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C50781 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C50972) *
              C51016 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C19763 +
            (C20149 + C20150) * C19764 + (C20151 + C20152) * C19765 +
            (C20153 + C20154) * C19766) *
               C50843 * C50972 -
           (((C19767 * C2331 + C50686 * C2335) * C50745 +
             (C19767 * C2326 + C50686 * C2332) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + (C20152 + C20151) * C19764 +
            (C20150 + C20149) * C19763) *
               C50843 * C50781) *
              C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C644 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50973 -
                      (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                       C16979 * C409 + C16983 * C400 + C16978 * C410) *
                          C645 -
                      (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                       C16979 * C429 + C16983 * C414 + C16978 * C430) *
                          C50809) *
                         C16981 +
                     ((C17181 + C17182 + C17183) * C644 +
                      (C17184 + C17185 + C17186) * C50973 -
                      (C17879 + C17880 + C17881) * C645 -
                      (C17882 + C17883 + C17884) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17881 + C17880 + C17879) * C645 -
                      ((C17186 + C17185 + C17184) * C50973 +
                       (C17183 + C17182 + C17181) * C644) +
                      (C17884 + C17883 + C17882) * C50809) *
                         C16981 +
                     ((C16983 * C1438 + C16978 * C1442 + C16984 * C1437 +
                       C16979 * C1441 + C16985 * C1436 + C16980 * C1440) *
                          C645 -
                      ((C17187 + C17188 + C17189) * C50973 +
                       (C17190 + C17191 + C17192) * C644) +
                      (C16983 * C1446 + C16978 * C1450 + C16984 * C1445 +
                       C16979 * C1449 + C16985 * C1444 + C16980 * C1448) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C251 +
                   ((((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                       C16979 * C408 + C16985 * C397 + C16980 * C407) *
                          C645 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C50973 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C644) +
                      (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                       C16979 * C428 + C16985 * C411 + C16980 * C427) *
                          C50809) *
                         C16981 +
                     ((C17885 + C17886 + C17887) * C645 -
                      ((C17198 + C17197 + C17196) * C50973 +
                       (C17195 + C17194 + C17193) * C644) +
                      (C17888 + C17889 + C17890) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17193 + C17194 + C17195) * C644 +
                      (C17196 + C17197 + C17198) * C50973 -
                      (C17887 + C17886 + C17885) * C645 -
                      (C17890 + C17889 + C17888) * C50809) *
                         C16981 +
                     ((C17199 + C17200 + C17201) * C644 +
                      (C17202 + C17203 + C17204) * C50973 -
                      (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                       C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                          C645 -
                      (C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                       C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 -
                      (C19767 * C400 + C50686 * C410) * C645 -
                      (C19767 * C414 + C50686 * C430) * C50809) *
                         C19763 +
                     (C20383 + C20384 - C20431 - C20432) * C19764 +
                     (C20389 + C20390 - C20433 - C20434) * C19765 +
                     (C20395 + C20396 - C20435 - C20436) * C19766) *
                        C50843 * C50972 +
                    ((C20431 - (C20384 + C20383) + C20432) * C19763 +
                     (C20433 - (C20390 + C20389) + C20434) * C19764 +
                     (C20435 - (C20396 + C20395) + C20436) * C19765 +
                     ((C19767 * C4080 + C50686 * C4082) * C645 -
                      (C19905 * C50973 + C19906 * C644) +
                      (C19767 * C4084 + C50686 * C4086) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C251 +
                   ((((C19767 * C399 + C50686 * C409) * C645 -
                      ((C19767 * C134 + C50686 * C144) * C50973 +
                       (C19767 * C123 + C50686 * C130) * C644) +
                      (C19767 * C413 + C50686 * C429) * C50809) *
                         C19763 +
                     (C20437 - (C20403 + C20404) + C20438) * C19764 +
                     (C20439 - (C20409 + C20410) + C20440) * C19765 +
                     (C20441 - (C20415 + C20416) + C20442) * C19766) *
                        C50843 * C50972 +
                    ((C20404 + C20403 - C20437 - C20438) * C19763 +
                     (C20410 + C20409 - C20439 - C20440) * C19764 +
                     (C20416 + C20415 - C20441 - C20442) * C19765 +
                     (C19913 * C644 + C19914 * C50973 -
                      (C19767 * C4079 + C50686 * C4081) * C645 -
                      (C19767 * C4083 + C50686 * C4085) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C248 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C249 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C16981 +
            ((C16983 * C977 + C16978 * C985 + C16984 * C976 + C16979 * C984 +
              C16985 * C975 + C16980 * C983) *
                 C121 +
             (C16983 * C981 + C16978 * C989 + C16984 * C980 + C16979 * C988 +
              C16985 * C979 + C16980 * C987) *
                 C50745) *
                C50881) *
               C50843 * C250) *
              C251 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C249 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C248 -
           (((C16985 * C978 + C16980 * C986 + C16984 * C979 + C16979 * C987 +
              C16983 * C980 + C16978 * C988) *
                 C50745 +
             (C16985 * C974 + C16980 * C982 + C16984 * C975 + C16979 * C983 +
              C16983 * C976 + C16978 * C984) *
                 C121) *
                C50881 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C16981) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C16981 +
           ((C16983 * C256 + C16978 * C270 + C16984 * C255 + C16979 * C269 +
             C16985 * C254 + C16980 * C268) *
                C121 +
            (C16983 * C266 + C16978 * C286 + C16984 * C265 + C16979 * C285 +
             C16985 * C264 + C16980 * C284) *
                C50745) *
               C50881) *
              C50843 * C50730 * C113 -
          (((C16985 * C263 + C16980 * C283 + C16984 * C264 + C16979 * C284 +
             C16983 * C265 + C16978 * C285) *
                C50745 +
            (C16985 * C253 + C16980 * C267 + C16984 * C254 + C16979 * C268 +
             C16983 * C255 + C16978 * C269) *
                C121) *
               C50881 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50745 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C16981) *
              C50843 * C50730 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50745) *
               C16981 +
           ((C16983 * C254 + C16978 * C268 + C16984 * C253 + C16979 * C267 +
             C16985 * C261 + C16980 * C279) *
                C121 +
            (C16983 * C264 + C16978 * C284 + C16984 * C263 + C16979 * C283 +
             C16985 * C280 + C16980 * C291) *
                C50745) *
               C50881) *
              C50843 * C50730 * C115 -
          (((C16985 * C541 + C16980 * C543 + C16984 * C280 + C16979 * C291 +
             C16983 * C263 + C16978 * C283) *
                C50745 +
            (C16985 * C540 + C16980 * C542 + C16984 * C261 + C16979 * C279 +
             C16983 * C253 + C16978 * C267) *
                C121) *
               C50881 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50745 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C16981) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C395 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C392 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C396 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C393) *
               C16981 +
           ((C17181 + C17182 + C17183) * C394 +
            (C17184 + C17185 + C17186) * C391 -
            (C16985 * C782 + C16980 * C787 + C16984 * C781 + C16979 * C786 +
             C16983 * C780 + C16978 * C785) *
                C395 -
            (C16985 * C791 + C16980 * C797 + C16984 * C790 + C16979 * C796 +
             C16983 * C789 + C16978 * C795) *
                C392 +
            (C16983 * C1091 + C16978 * C1095 + C16984 * C1090 + C16979 * C1094 +
             C16985 * C1089 + C16980 * C1093) *
                C396 +
            (C16983 * C1099 + C16978 * C1103 + C16984 * C1098 + C16979 * C1102 +
             C16985 * C1097 + C16980 * C1101) *
                C393) *
               C50881) *
              C50843 * C50730 * C251 +
          (((C16983 * C399 + C16978 * C409 + C16984 * C398 + C16979 * C408 +
             C16985 * C397 + C16980 * C407) *
                C395 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C391 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C394) +
            (C16983 * C413 + C16978 * C429 + C16984 * C412 + C16979 * C428 +
             C16985 * C411 + C16980 * C427) *
                C392 -
            (C16985 * C404 + C16980 * C418 + C16984 * C403 + C16979 * C417 +
             C16983 * C402 + C16978 * C416) *
                C396 -
            (C16985 * C422 + C16980 * C434 + C16984 * C421 + C16979 * C433 +
             C16983 * C420 + C16978 * C432) *
                C393) *
               C16981 +
           ((C16983 * C781 + C16978 * C786 + C16984 * C782 + C16979 * C787 +
             C16985 * C783 + C16980 * C788) *
                C395 -
            ((C17198 + C17197 + C17196) * C391 +
             (C17195 + C17194 + C17193) * C394) +
            (C16983 * C790 + C16978 * C796 + C16984 * C791 + C16979 * C797 +
             C16985 * C792 + C16980 * C798) *
                C392 -
            (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 + C16979 * C1093 +
             C16983 * C1090 + C16978 * C1094) *
                C396 -
            (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 + C16979 * C1101 +
             C16983 * C1098 + C16978 * C1102) *
                C393) *
               C50881) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           ((C19767 * C256 + C50686 * C270) * C121 +
            (C19767 * C266 + C50686 * C286) * C50745) *
               C19764 +
           ((C19767 * C257 + C50686 * C271) * C121 +
            (C19767 * C275 + C50686 * C287) * C50745) *
               C19765 +
           ((C19767 * C977 + C50686 * C985) * C121 +
            (C19767 * C981 + C50686 * C989) * C50745) *
               C19766) *
              C50843 * C50730 * C113 -
          (((C19767 * C980 + C50686 * C988) * C50745 +
            (C19767 * C976 + C50686 * C984) * C121) *
               C19766 +
           ((C19767 * C276 + C50686 * C288) * C50745 +
            (C19767 * C258 + C50686 * C272) * C121) *
               C19765 +
           ((C19767 * C265 + C50686 * C285) * C50745 +
            (C19767 * C255 + C50686 * C269) * C121) *
               C19764 +
           ((C19767 * C134 + C50686 * C144) * C50745 +
            (C19767 * C123 + C50686 * C130) * C121) *
               C19763) *
              C50843 * C50730 * C114 +
          (((C19767 * C124 + C50686 * C131) * C121 +
            (C19767 * C135 + C50686 * C145) * C50745) *
               C19763 +
           ((C19767 * C254 + C50686 * C268) * C121 +
            (C19767 * C264 + C50686 * C284) * C50745) *
               C19764 +
           ((C19767 * C259 + C50686 * C273) * C121 +
            (C19767 * C277 + C50686 * C289) * C50745) *
               C19765 +
           ((C19767 * C975 + C50686 * C983) * C121 +
            (C19767 * C979 + C50686 * C987) * C50745) *
               C19766) *
              C50843 * C50730 * C115 -
          (((C19767 * C978 + C50686 * C986) * C50745 +
            (C19767 * C974 + C50686 * C982) * C121) *
               C19766 +
           ((C19767 * C278 + C50686 * C290) * C50745 +
            (C19767 * C260 + C50686 * C274) * C121) *
               C19765 +
           ((C19767 * C263 + C50686 * C283) * C50745 +
            (C19767 * C253 + C50686 * C267) * C121) *
               C19764 +
           ((C19767 * C136 + C50686 * C146) * C50745 +
            (C19767 * C125 + C50686 * C132) * C121) *
               C19763) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C248 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C249 +
           (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
            ((C19767 * C3391 + C50686 * C3395) * C121 +
             (C19767 * C3393 + C50686 * C3397) * C50745) *
                C19766) *
               C50843 * C250) *
              C251 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C249 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C248 -
           (((C19767 * C3392 + C50686 * C3396) * C50745 +
             (C19767 * C3390 + C50686 * C3394) * C121) *
                C19766 +
            (C19930 + C19929) * C19765 + C19933 * C19764 + C19934 * C19763) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C394 +
            (C19767 * C133 + C50686 * C143) * C391 -
            (C19767 * C400 + C50686 * C410) * C395 -
            (C19767 * C414 + C50686 * C430) * C392 +
            (C19767 * C401 + C50686 * C415) * C396 +
            (C19767 * C419 + C50686 * C431) * C393) *
               C19763 +
           (C19899 * C394 + C19900 * C391 -
            (C19767 * C780 + C50686 * C785) * C395 -
            (C19767 * C789 + C50686 * C795) * C392 +
            (C19767 * C1091 + C50686 * C1095) * C396 +
            (C19767 * C1099 + C50686 * C1103) * C393) *
               C19764 +
           (C19901 * C394 + C19902 * C391 -
            (C19767 * C1438 + C50686 * C1442) * C395 -
            (C19767 * C1446 + C50686 * C1450) * C392 +
            (C19767 * C2564 + C50686 * C2567) * C396 +
            (C19767 * C2569 + C50686 * C2573) * C393) *
               C19765 +
           (C19903 * C394 + C19904 * C391 -
            (C19767 * C3086 + C50686 * C3089) * C395 -
            (C19767 * C3091 + C50686 * C3095) * C392 +
            (C19767 * C3562 + C50686 * C3564) * C396 +
            (C19767 * C3566 + C50686 * C3568) * C393) *
               C19766) *
              C50843 * C50730 * C251 +
          (((C19767 * C399 + C50686 * C409) * C395 -
            ((C19767 * C134 + C50686 * C144) * C391 +
             (C19767 * C123 + C50686 * C130) * C394) +
            (C19767 * C413 + C50686 * C429) * C392 -
            (C19767 * C402 + C50686 * C416) * C396 -
            (C19767 * C420 + C50686 * C432) * C393) *
               C19763 +
           ((C19767 * C781 + C50686 * C786) * C395 -
            (C19908 * C391 + C19907 * C394) +
            (C19767 * C790 + C50686 * C796) * C392 -
            (C19767 * C1090 + C50686 * C1094) * C396 -
            (C19767 * C1098 + C50686 * C1102) * C393) *
               C19764 +
           ((C19767 * C1437 + C50686 * C1441) * C395 -
            (C19910 * C391 + C19909 * C394) +
            (C19767 * C1445 + C50686 * C1449) * C392 -
            (C19767 * C2565 + C50686 * C2568) * C396 -
            (C19767 * C2570 + C50686 * C2574) * C393) *
               C19765 +
           ((C19767 * C3087 + C50686 * C3090) * C395 -
            (C19912 * C391 + C19911 * C394) +
            (C19767 * C3092 + C50686 * C3096) * C392 -
            (C19767 * C3561 + C50686 * C3563) * C396 -
            (C19767 * C3565 + C50686 * C3567) * C393) *
               C19766) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C644 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50973 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C645 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C644 +
                     (C17184 + C17185 + C17186) * C50973 -
                     (C16985 * C782 + C16980 * C787 + C16984 * C781 +
                      C16979 * C786 + C16983 * C780 + C16978 * C785) *
                         C645 -
                     (C16985 * C791 + C16980 * C797 + C16984 * C790 +
                      C16979 * C796 + C16983 * C789 + C16978 * C795) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C51015 +
                   (((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                      C16979 * C408 + C16985 * C397 + C16980 * C407) *
                         C645 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50973 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C644) +
                     (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                      C16979 * C428 + C16985 * C411 + C16980 * C427) *
                         C50809) *
                        C16981 +
                    ((C16983 * C781 + C16978 * C786 + C16984 * C782 +
                      C16979 * C787 + C16985 * C783 + C16980 * C788) *
                         C645 -
                     ((C17198 + C17197 + C17196) * C50973 +
                      (C17195 + C17194 + C17193) * C644) +
                     (C16983 * C790 + C16978 * C796 + C16984 * C791 +
                      C16979 * C797 + C16985 * C792 + C16980 * C798) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C51016 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C644 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C50973 -
                     (C16985 * C405 + C16980 * C423 + C16984 * C397 +
                      C16979 * C407 + C16983 * C398 + C16978 * C408) *
                         C645 -
                     (C16985 * C424 + C16980 * C435 + C16984 * C411 +
                      C16979 * C427 + C16983 * C412 + C16978 * C428) *
                         C50809) *
                        C16981 +
                    ((C17509 + C17510 + C17511) * C644 +
                     (C17512 + C17513 + C17514) * C50973 -
                     (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                      C16979 * C788 + C16983 * C782 + C16978 * C787) *
                         C645 -
                     (C16985 * C794 + C16980 * C799 + C16984 * C792 +
                      C16979 * C798 + C16983 * C791 + C16978 * C797) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C539)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C644 +
                     (C19767 * C133 + C50686 * C143) * C50973 -
                     (C19767 * C400 + C50686 * C410) * C645 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C19899 * C644 + C19900 * C50973 -
                     (C19767 * C780 + C50686 * C785) * C645 -
                     (C19767 * C789 + C50686 * C795) * C50809) *
                        C19764 +
                    (C19901 * C644 + C19902 * C50973 -
                     (C19767 * C1438 + C50686 * C1442) * C645 -
                     (C19767 * C1446 + C50686 * C1450) * C50809) *
                        C19765 +
                    (C19903 * C644 + C19904 * C50973 -
                     (C19767 * C3086 + C50686 * C3089) * C645 -
                     (C19767 * C3091 + C50686 * C3095) * C50809) *
                        C19766) *
                       C50843 * C50730 * C51015 +
                   (((C19767 * C399 + C50686 * C409) * C645 -
                     ((C19767 * C134 + C50686 * C144) * C50973 +
                      (C19767 * C123 + C50686 * C130) * C644) +
                     (C19767 * C413 + C50686 * C429) * C50809) *
                        C19763 +
                    ((C19767 * C781 + C50686 * C786) * C645 -
                     (C19908 * C50973 + C19907 * C644) +
                     (C19767 * C790 + C50686 * C796) * C50809) *
                        C19764 +
                    ((C19767 * C1437 + C50686 * C1441) * C645 -
                     (C19910 * C50973 + C19909 * C644) +
                     (C19767 * C1445 + C50686 * C1449) * C50809) *
                        C19765 +
                    ((C19767 * C3087 + C50686 * C3090) * C645 -
                     (C19912 * C50973 + C19911 * C644) +
                     (C19767 * C3092 + C50686 * C3096) * C50809) *
                        C19766) *
                       C50843 * C50730 * C51016 +
                   (((C19767 * C124 + C50686 * C131) * C644 +
                     (C19767 * C135 + C50686 * C145) * C50973 -
                     (C19767 * C398 + C50686 * C408) * C645 -
                     (C19767 * C412 + C50686 * C428) * C50809) *
                        C19763 +
                    (C20143 * C644 + C20144 * C50973 -
                     (C19767 * C782 + C50686 * C787) * C645 -
                     (C19767 * C791 + C50686 * C797) * C50809) *
                        C19764 +
                    (C20145 * C644 + C20146 * C50973 -
                     (C19767 * C1436 + C50686 * C1440) * C645 -
                     (C19767 * C1444 + C50686 * C1448) * C50809) *
                        C19765 +
                    (C20147 * C644 + C20148 * C50973 -
                     (C19767 * C3088 + C50686 * C3093) * C645 -
                     (C19767 * C3094 + C50686 * C3097) * C50809) *
                        C19766) *
                       C50843 * C50730 * C539)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C16981 +
           ((C16983 * C256 + C16978 * C270 + C16984 * C255 + C16979 * C269 +
             C16985 * C254 + C16980 * C268) *
                C121 +
            (C16983 * C266 + C16978 * C286 + C16984 * C265 + C16979 * C285 +
             C16985 * C264 + C16980 * C284) *
                C50745) *
               C50881) *
              C50843 * C50730 * C113 -
          (((C16985 * C263 + C16980 * C283 + C16984 * C264 + C16979 * C284 +
             C16983 * C265 + C16978 * C285) *
                C50745 +
            (C16985 * C253 + C16980 * C267 + C16984 * C254 + C16979 * C268 +
             C16983 * C255 + C16978 * C269) *
                C121) *
               C50881 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50745 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C16981) *
              C50843 * C50730 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50745) *
               C16981 +
           ((C16983 * C254 + C16978 * C268 + C16984 * C253 + C16979 * C267 +
             C16985 * C261 + C16980 * C279) *
                C121 +
            (C16983 * C264 + C16978 * C284 + C16984 * C263 + C16979 * C283 +
             C16985 * C280 + C16980 * C291) *
                C50745) *
               C50881) *
              C50843 * C50730 * C115 -
          (((C16985 * C541 + C16980 * C543 + C16984 * C280 + C16979 * C291 +
             C16983 * C263 + C16978 * C283) *
                C50745 +
            (C16985 * C540 + C16980 * C542 + C16984 * C261 + C16979 * C279 +
             C16983 * C253 + C16978 * C267) *
                C121) *
               C50881 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50745 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C16981) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C248 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C249 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C16981 +
            ((C16983 * C977 + C16978 * C985 + C16984 * C976 + C16979 * C984 +
              C16985 * C975 + C16980 * C983) *
                 C121 +
             (C16983 * C981 + C16978 * C989 + C16984 * C980 + C16979 * C988 +
              C16985 * C979 + C16980 * C987) *
                 C50745) *
                C50881) *
               C50843 * C250) *
              C251 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C249 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C248 -
           (((C16985 * C978 + C16980 * C986 + C16984 * C979 + C16979 * C987 +
              C16983 * C980 + C16978 * C988) *
                 C50745 +
             (C16985 * C974 + C16980 * C982 + C16984 * C975 + C16979 * C983 +
              C16983 * C976 + C16978 * C984) *
                 C121) *
                C50881 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C16981) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           ((C19767 * C256 + C50686 * C270) * C121 +
            (C19767 * C266 + C50686 * C286) * C50745) *
               C19764 +
           ((C19767 * C257 + C50686 * C271) * C121 +
            (C19767 * C275 + C50686 * C287) * C50745) *
               C19765 +
           ((C19767 * C977 + C50686 * C985) * C121 +
            (C19767 * C981 + C50686 * C989) * C50745) *
               C19766) *
              C50843 * C50730 * C113 -
          (((C19767 * C980 + C50686 * C988) * C50745 +
            (C19767 * C976 + C50686 * C984) * C121) *
               C19766 +
           ((C19767 * C276 + C50686 * C288) * C50745 +
            (C19767 * C258 + C50686 * C272) * C121) *
               C19765 +
           ((C19767 * C265 + C50686 * C285) * C50745 +
            (C19767 * C255 + C50686 * C269) * C121) *
               C19764 +
           ((C19767 * C134 + C50686 * C144) * C50745 +
            (C19767 * C123 + C50686 * C130) * C121) *
               C19763) *
              C50843 * C50730 * C114 +
          (((C19767 * C124 + C50686 * C131) * C121 +
            (C19767 * C135 + C50686 * C145) * C50745) *
               C19763 +
           ((C19767 * C254 + C50686 * C268) * C121 +
            (C19767 * C264 + C50686 * C284) * C50745) *
               C19764 +
           ((C19767 * C259 + C50686 * C273) * C121 +
            (C19767 * C277 + C50686 * C289) * C50745) *
               C19765 +
           ((C19767 * C975 + C50686 * C983) * C121 +
            (C19767 * C979 + C50686 * C987) * C50745) *
               C19766) *
              C50843 * C50730 * C115 -
          (((C19767 * C978 + C50686 * C986) * C50745 +
            (C19767 * C974 + C50686 * C982) * C121) *
               C19766 +
           ((C19767 * C278 + C50686 * C290) * C50745 +
            (C19767 * C260 + C50686 * C274) * C121) *
               C19765 +
           ((C19767 * C263 + C50686 * C283) * C50745 +
            (C19767 * C253 + C50686 * C267) * C121) *
               C19764 +
           ((C19767 * C136 + C50686 * C146) * C50745 +
            (C19767 * C125 + C50686 * C132) * C121) *
               C19763) *
              C50843 * C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C248 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C249 +
           (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
            ((C19767 * C3391 + C50686 * C3395) * C121 +
             (C19767 * C3393 + C50686 * C3397) * C50745) *
                C19766) *
               C50843 * C250) *
              C251 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C249 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C248 -
           (((C19767 * C3392 + C50686 * C3396) * C50745 +
             (C19767 * C3390 + C50686 * C3394) * C121) *
                C19766 +
            (C19930 + C19929) * C19765 + C19933 * C19764 + C19934 * C19763) *
               C50843 * C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C51017 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C51018 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C16981 +
            ((C18147 + C18148 + C18149) * C121 +
             (C18150 + C18151 + C18152) * C50745) *
                C50881) *
               C50843 * C1204) *
              C50964 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C51018 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C51017 -
           (((C16985 * C978 + C16980 * C986 + C16984 * C979 + C16979 * C987 +
              C16983 * C980 + C16978 * C988) *
                 C50745 +
             (C16985 * C974 + C16980 * C982 + C16984 * C975 + C16979 * C983 +
              C16983 * C976 + C16978 * C984) *
                 C121) *
                C50881 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C16981) *
               C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C51017 -
           (C20611 * C19766 + C20612 * C19765 + (C19918 + C19917) * C19764 +
            (C19916 + C19915) * C19763) *
               C50843 * C51018 +
           (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
            (C20619 + C20620) * C19766) *
               C50843 * C1204) *
              C50964 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C51018 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C51017 -
           (((C19767 * C3392 + C50686 * C3396) * C50745 +
             (C19767 * C3390 + C50686 * C3394) * C121) *
                C19766 +
            (C19930 + C19929) * C19765 + C19933 * C19764 + C19934 * C19763) *
               C50843 * C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C644 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50973 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C645 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C644 +
                     (C17184 + C17185 + C17186) * C50973 -
                     (C17879 + C17880 + C17881) * C645 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C51017 +
                   (((C17881 + C17880 + C17879) * C645 -
                     ((C17186 + C17185 + C17184) * C50973 +
                      (C17183 + C17182 + C17181) * C644) +
                     (C17884 + C17883 + C17882) * C50809) *
                        C16981 +
                    ((C18815 + C18816 + C18817) * C645 -
                     ((C17187 + C17188 + C17189) * C50973 +
                      (C17190 + C17191 + C17192) * C644) +
                     (C18818 + C18819 + C18820) * C50809) *
                        C50881) *
                       C50843 * C51018 +
                   (((C17192 + C17191 + C17190) * C644 +
                     (C17189 + C17188 + C17187) * C50973 -
                     (C18817 + C18816 + C18815) * C645 -
                     (C18820 + C18819 + C18818) * C50809) *
                        C16981 +
                    ((C18147 + C18148 + C18149) * C644 +
                     (C18150 + C18151 + C18152) * C50973 -
                     (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                      C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                         C645 -
                     (C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                      C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                         C50809) *
                        C50881) *
                       C50843 * C1204) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C644 +
                     (C19767 * C133 + C50686 * C143) * C50973 -
                     (C19767 * C400 + C50686 * C410) * C645 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C20383 + C20384 - C20431 - C20432) * C19764 +
                    C21101 * C19765 + C21102 * C19766) *
                       C50843 * C51017 +
                   ((C20431 - (C20384 + C20383) + C20432) * C19763 +
                    (C20433 - (C20390 + C20389) + C20434) * C19764 +
                    (C20435 - (C20396 + C20395) + C20436) * C19765 +
                    (C21103 - (C21093 + C21094) + C21104) * C19766) *
                       C50843 * C51018 +
                   (C21101 * C19763 + C21102 * C19764 +
                    (C21094 + C21093 - C21103 - C21104) * C19765 +
                    (C20617 * C644 + C20618 * C50973 -
                     (C19767 * C21084 + C50686 * C21085) * C645 -
                     (C19767 * C21086 + C50686 * C21087) * C50809) *
                        C19766) *
                       C50843 * C1204) *
                  C50713) /
                     (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C16981 +
           ((C17181 + C17182 + C17183) * C121 +
            (C17184 + C17185 + C17186) * C50745) *
               C50881) *
              C50843 * C969 -
          (((C17187 + C17188 + C17189) * C50745 +
            (C17190 + C17191 + C17192) * C121) *
               C50881 +
           ((C17186 + C17185 + C17184) * C50745 +
            (C17183 + C17182 + C17181) * C121) *
               C16981) *
              C50843 * C970 +
          (((C17192 + C17191 + C17190) * C121 +
            (C17189 + C17188 + C17187) * C50745) *
               C16981 +
           ((C18147 + C18148 + C18149) * C121 +
            (C18150 + C18151 + C18152) * C50745) *
               C50881) *
              C50843 * C971 -
          (((C16985 * C2331 + C16980 * C2335 + C16984 * C2330 + C16979 * C2334 +
             C16983 * C2329 + C16978 * C2333) *
                C50745 +
            (C16985 * C2326 + C16980 * C2332 + C16984 * C2325 + C16979 * C2328 +
             C16983 * C2324 + C16978 * C2327) *
                C121) *
               C50881 +
           ((C18152 + C18151 + C18150) * C50745 +
            (C18149 + C18148 + C18147) * C121) *
               C16981) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C50781) *
              C900 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C898) *
              C901 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C16985 * C281 + C16980 * C292 + C16984 * C278 + C16979 * C290 +
              C16983 * C277 + C16978 * C289) *
                 C50745 +
             (C16985 * C262 + C16980 * C282 + C16984 * C260 + C16979 * C274 +
              C16983 * C259 + C16978 * C273) *
                 C121) *
                C50881 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C395 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C392 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C396 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C393) *
               C16981 +
           ((C17181 + C17182 + C17183) * C394 +
            (C17184 + C17185 + C17186) * C391 -
            (C17879 + C17880 + C17881) * C395 -
            (C17882 + C17883 + C17884) * C392 +
            (C18311 + C18312 + C18313) * C396 +
            (C18314 + C18315 + C18316) * C393) *
               C50881) *
              C50843 * C898 +
          (((C17881 + C17880 + C17879) * C395 -
            ((C17186 + C17185 + C17184) * C391 +
             (C17183 + C17182 + C17181) * C394) +
            (C17884 + C17883 + C17882) * C392 -
            (C18313 + C18312 + C18311) * C396 -
            (C18316 + C18315 + C18314) * C393) *
               C16981 +
           ((C16983 * C1438 + C16978 * C1442 + C16984 * C1437 + C16979 * C1441 +
             C16985 * C1436 + C16980 * C1440) *
                C395 -
            ((C17187 + C17188 + C17189) * C391 +
             (C17190 + C17191 + C17192) * C394) +
            (C16983 * C1446 + C16978 * C1450 + C16984 * C1445 + C16979 * C1449 +
             C16985 * C1444 + C16980 * C1448) *
                C392 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C396 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C393) *
               C50881) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C898 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C50781) *
              C900 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C50781 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C898) *
              C901 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C19763 +
            (C20149 + C20150) * C19764 + (C20151 + C20152) * C19765 +
            (C20153 + C20154) * C19766) *
               C50843 * C898 -
           (((C19767 * C2331 + C50686 * C2335) * C50745 +
             (C19767 * C2326 + C50686 * C2332) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + (C20152 + C20151) * C19764 +
            (C20150 + C20149) * C19763) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
              C50843 * C969 -
          (C20611 * C19766 + C20612 * C19765 + (C19918 + C19917) * C19764 +
           (C19916 + C19915) * C19763) *
              C50843 * C970 +
          (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
           (C20619 + C20620) * C19766) *
              C50843 * C971 -
          (((C19767 * C20607 + C50686 * C20609) * C50745 +
            (C19767 * C20606 + C50686 * C20608) * C121) *
               C19766 +
           (C20620 + C20619) * C19765 + C20611 * C19764 + C20612 * C19763) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C394 +
            (C19767 * C133 + C50686 * C143) * C391 -
            (C19767 * C400 + C50686 * C410) * C395 -
            (C19767 * C414 + C50686 * C430) * C392 +
            (C19767 * C401 + C50686 * C415) * C396 +
            (C19767 * C419 + C50686 * C431) * C393) *
               C19763 +
           (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C19764 +
           (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C19765 +
           (C20739 + C20740 - C20741 - C20742 + C20757 + C20758) * C19766) *
              C50843 * C898 +
          ((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C19763 +
           (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C19764 +
           (C20741 - (C20740 + C20739) + C20742 - C20757 - C20758) * C19765 +
           ((C19767 * C4080 + C50686 * C4082) * C395 -
            (C19905 * C391 + C19906 * C394) +
            (C19767 * C4084 + C50686 * C4086) * C392 -
            (C19767 * C20718 + C50686 * C20719) * C396 -
            (C19767 * C20720 + C50686 * C20721) * C393) *
               C19766) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C644 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50973 -
                      (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                       C16979 * C409 + C16983 * C400 + C16978 * C410) *
                          C645 -
                      (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                       C16979 * C429 + C16983 * C414 + C16978 * C430) *
                          C50809) *
                         C16981 +
                     ((C17181 + C17182 + C17183) * C644 +
                      (C17184 + C17185 + C17186) * C50973 -
                      (C17879 + C17880 + C17881) * C645 -
                      (C17882 + C17883 + C17884) * C50809) *
                         C50881) *
                        C50843 * C898 +
                    (((C17881 + C17880 + C17879) * C645 -
                      ((C17186 + C17185 + C17184) * C50973 +
                       (C17183 + C17182 + C17181) * C644) +
                      (C17884 + C17883 + C17882) * C50809) *
                         C16981 +
                     ((C16983 * C1438 + C16978 * C1442 + C16984 * C1437 +
                       C16979 * C1441 + C16985 * C1436 + C16980 * C1440) *
                          C645 -
                      ((C17187 + C17188 + C17189) * C50973 +
                       (C17190 + C17191 + C17192) * C644) +
                      (C16983 * C1446 + C16978 * C1450 + C16984 * C1445 +
                       C16979 * C1449 + C16985 * C1444 + C16980 * C1448) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                       C16979 * C408 + C16985 * C397 + C16980 * C407) *
                          C645 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C50973 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C644) +
                      (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                       C16979 * C428 + C16985 * C411 + C16980 * C427) *
                          C50809) *
                         C16981 +
                     ((C17885 + C17886 + C17887) * C645 -
                      ((C17198 + C17197 + C17196) * C50973 +
                       (C17195 + C17194 + C17193) * C644) +
                      (C17888 + C17889 + C17890) * C50809) *
                         C50881) *
                        C50843 * C898 +
                    (((C17193 + C17194 + C17195) * C644 +
                      (C17196 + C17197 + C17198) * C50973 -
                      (C17887 + C17886 + C17885) * C645 -
                      (C17890 + C17889 + C17888) * C50809) *
                         C16981 +
                     ((C17199 + C17200 + C17201) * C644 +
                      (C17202 + C17203 + C17204) * C50973 -
                      (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                       C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                          C645 -
                      (C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                       C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 -
                      (C19767 * C400 + C50686 * C410) * C645 -
                      (C19767 * C414 + C50686 * C430) * C50809) *
                         C19763 +
                     (C20383 + C20384 - C20431 - C20432) * C19764 +
                     (C20389 + C20390 - C20433 - C20434) * C19765 +
                     (C20395 + C20396 - C20435 - C20436) * C19766) *
                        C50843 * C898 +
                    ((C20431 - (C20384 + C20383) + C20432) * C19763 +
                     (C20433 - (C20390 + C20389) + C20434) * C19764 +
                     (C20435 - (C20396 + C20395) + C20436) * C19765 +
                     ((C19767 * C4080 + C50686 * C4082) * C645 -
                      (C19905 * C50973 + C19906 * C644) +
                      (C19767 * C4084 + C50686 * C4086) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C19767 * C399 + C50686 * C409) * C645 -
                      ((C19767 * C134 + C50686 * C144) * C50973 +
                       (C19767 * C123 + C50686 * C130) * C644) +
                      (C19767 * C413 + C50686 * C429) * C50809) *
                         C19763 +
                     (C20437 - (C20403 + C20404) + C20438) * C19764 +
                     (C20439 - (C20409 + C20410) + C20440) * C19765 +
                     (C20441 - (C20415 + C20416) + C20442) * C19766) *
                        C50843 * C898 +
                    ((C20404 + C20403 - C20437 - C20438) * C19763 +
                     (C20410 + C20409 - C20439 - C20440) * C19764 +
                     (C20416 + C20415 - C20441 - C20442) * C19765 +
                     (C19913 * C644 + C19914 * C50973 -
                      (C19767 * C4079 + C50686 * C4081) * C645 -
                      (C19767 * C4083 + C50686 * C4085) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C17187 + C17188 + C17189) * C50745 +
             (C17190 + C17191 + C17192) * C121) *
                C50881 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50843 * C50781) *
              C900 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C16981 +
            ((C17199 + C17200 + C17201) * C121 +
             (C17202 + C17203 + C17204) * C50745) *
                C50881) *
               C50843 * C50781 -
           (((C17198 + C17197 + C17196) * C50745 +
             (C17195 + C17194 + C17193) * C121) *
                C50881 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50843 * C898) *
              C901 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50745) *
                C50881) *
               C50843 * C898 -
           (((C16985 * C281 + C16980 * C292 + C16984 * C278 + C16979 * C290 +
              C16983 * C277 + C16978 * C289) *
                 C50745 +
             (C16985 * C262 + C16980 * C282 + C16984 * C260 + C16979 * C274 +
              C16983 * C259 + C16978 * C273) *
                 C121) *
                C50881 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C16981 +
           ((C17181 + C17182 + C17183) * C121 +
            (C17184 + C17185 + C17186) * C50745) *
               C50881) *
              C50843 * C969 -
          (((C17187 + C17188 + C17189) * C50745 +
            (C17190 + C17191 + C17192) * C121) *
               C50881 +
           ((C17186 + C17185 + C17184) * C50745 +
            (C17183 + C17182 + C17181) * C121) *
               C16981) *
              C50843 * C970 +
          (((C17192 + C17191 + C17190) * C121 +
            (C17189 + C17188 + C17187) * C50745) *
               C16981 +
           ((C18147 + C18148 + C18149) * C121 +
            (C18150 + C18151 + C18152) * C50745) *
               C50881) *
              C50843 * C971 -
          (((C16985 * C2331 + C16980 * C2335 + C16984 * C2330 + C16979 * C2334 +
             C16983 * C2329 + C16978 * C2333) *
                C50745 +
            (C16985 * C2326 + C16980 * C2332 + C16984 * C2325 + C16979 * C2328 +
             C16983 * C2324 + C16978 * C2327) *
                C121) *
               C50881 +
           ((C18152 + C18151 + C18150) * C50745 +
            (C18149 + C18148 + C18147) * C121) *
               C16981) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C19763 +
            (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
               C50843 * C898 -
           ((C19921 + C19922) * C19766 + (C19920 + C19919) * C19765 +
            (C19918 + C19917) * C19764 + (C19916 + C19915) * C19763) *
               C50843 * C50781) *
              C900 +
          (((C19923 + C19924) * C19763 + (C19925 + C19926) * C19764 +
            (C19927 + C19928) * C19765 + (C19929 + C19930) * C19766) *
               C50843 * C50781 -
           (C19933 * C19766 + C19934 * C19765 + (C19924 + C19923) * C19764 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C19763) *
               C50843 * C898) *
              C901 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C19763 +
            (C20149 + C20150) * C19764 + (C20151 + C20152) * C19765 +
            (C20153 + C20154) * C19766) *
               C50843 * C898 -
           (((C19767 * C2331 + C50686 * C2335) * C50745 +
             (C19767 * C2326 + C50686 * C2332) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + (C20152 + C20151) * C19764 +
            (C20150 + C20149) * C19763) *
               C50843 * C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C19763 +
           (C19915 + C19916) * C19764 + C19931 * C19765 + C19932 * C19766) *
              C50843 * C969 -
          (C20611 * C19766 + C20612 * C19765 + (C19918 + C19917) * C19764 +
           (C19916 + C19915) * C19763) *
              C50843 * C970 +
          (C19931 * C19763 + C19932 * C19764 + (C19922 + C19921) * C19765 +
           (C20619 + C20620) * C19766) *
              C50843 * C971 -
          (((C19767 * C20607 + C50686 * C20609) * C50745 +
            (C19767 * C20606 + C50686 * C20608) * C121) *
               C19766 +
           (C20620 + C20619) * C19765 + C20611 * C19764 + C20612 * C19763) *
              C50843 * C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C1551 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C1549 -
                      (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                       C16979 * C409 + C16983 * C400 + C16978 * C410) *
                          C1552 -
                      (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                       C16979 * C429 + C16983 * C414 + C16978 * C430) *
                          C50809) *
                         C16981 +
                     ((C17181 + C17182 + C17183) * C1551 +
                      (C17184 + C17185 + C17186) * C1549 -
                      (C17879 + C17880 + C17881) * C1552 -
                      (C17882 + C17883 + C17884) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17881 + C17880 + C17879) * C1552 -
                      ((C17186 + C17185 + C17184) * C1549 +
                       (C17183 + C17182 + C17181) * C1551) +
                      (C17884 + C17883 + C17882) * C50809) *
                         C16981 +
                     ((C18815 + C18816 + C18817) * C1552 -
                      ((C17187 + C17188 + C17189) * C1549 +
                       (C17190 + C17191 + C17192) * C1551) +
                      (C18818 + C18819 + C18820) * C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                       C16979 * C408 + C16985 * C397 + C16980 * C407) *
                          C1552 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C1549 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C1551) +
                      (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                       C16979 * C428 + C16985 * C411 + C16980 * C427) *
                          C50809) *
                         C16981 +
                     ((C17885 + C17886 + C17887) * C1552 -
                      ((C17198 + C17197 + C17196) * C1549 +
                       (C17195 + C17194 + C17193) * C1551) +
                      (C17888 + C17889 + C17890) * C50809) *
                         C50881) *
                        C50843 * C50972 +
                    (((C17193 + C17194 + C17195) * C1551 +
                      (C17196 + C17197 + C17198) * C1549 -
                      (C17887 + C17886 + C17885) * C1552 -
                      (C17890 + C17889 + C17888) * C50809) *
                         C16981 +
                     ((C17199 + C17200 + C17201) * C1551 +
                      (C17202 + C17203 + C17204) * C1549 -
                      (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                       C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                          C1552 -
                      (C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                       C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                          C50809) *
                         C50881) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C1551 +
                      (C19767 * C133 + C50686 * C143) * C1549 -
                      (C19767 * C400 + C50686 * C410) * C1552 -
                      (C19767 * C414 + C50686 * C430) * C50809) *
                         C19763 +
                     (C21301 + C21302 - C21303 - C21304) * C19764 +
                     C21321 * C19765 + C21322 * C19766) *
                        C50843 * C50972 +
                    ((C21303 - (C21302 + C21301) + C21304) * C19763 +
                     (C21307 - (C21306 + C21305) + C21308) * C19764 +
                     (C21311 - (C21310 + C21309) + C21312) * C19765 +
                     (C21313 - (C21314 + C21315) + C21316) * C19766) *
                        C50843 * C50781) *
                       C50964 +
                   ((((C19767 * C399 + C50686 * C409) * C1552 -
                      ((C19767 * C134 + C50686 * C144) * C1549 +
                       (C19767 * C123 + C50686 * C130) * C1551) +
                      (C19767 * C413 + C50686 * C429) * C50809) *
                         C19763 +
                     (C21523 - (C21524 + C21525) + C21526) * C19764 +
                     (C21527 - (C21528 + C21529) + C21530) * C19765 +
                     (C21531 - (C21532 + C21533) + C21534) * C19766) *
                        C50843 * C50972 +
                    ((C21525 + C21524 - C21523 - C21526) * C19763 +
                     (C21529 + C21528 - C21527 - C21530) * C19764 +
                     (C21533 + C21532 - C21531 - C21534) * C19765 +
                     (C19913 * C1551 + C19914 * C1549 -
                      (C19767 * C4079 + C50686 * C4081) * C1552 -
                      (C19767 * C4083 + C50686 * C4085) * C50809) *
                         C19766) *
                        C50843 * C50781) *
                       C50718)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C1973 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C51020 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C1974 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C1971) *
               C16981 +
           ((C17181 + C17182 + C17183) * C1972 +
            (C17184 + C17185 + C17186) * C51019 -
            (C17879 + C17880 + C17881) * C1973 -
            (C17882 + C17883 + C17884) * C51020 +
            (C18311 + C18312 + C18313) * C1974 +
            (C18314 + C18315 + C18316) * C1971) *
               C50881) *
              C50843 * C50972 +
          (((C17881 + C17880 + C17879) * C1973 -
            ((C17186 + C17185 + C17184) * C51019 +
             (C17183 + C17182 + C17181) * C1972) +
            (C17884 + C17883 + C17882) * C51020 -
            (C18313 + C18312 + C18311) * C1974 -
            (C18316 + C18315 + C18314) * C1971) *
               C16981 +
           ((C18815 + C18816 + C18817) * C1973 -
            ((C17187 + C17188 + C17189) * C51019 +
             (C17190 + C17191 + C17192) * C1972) +
            (C18818 + C18819 + C18820) * C51020 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C1974 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C1971) *
               C50881) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1972 +
            (C19767 * C133 + C50686 * C143) * C51019 -
            (C19767 * C400 + C50686 * C410) * C1973 -
            (C19767 * C414 + C50686 * C430) * C51020 +
            (C19767 * C401 + C50686 * C415) * C1974 +
            (C19767 * C419 + C50686 * C431) * C1971) *
               C19763 +
           (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C19764 +
           (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C19765 +
           (C21743 + C21744 - C21745 - C21746 + C21747 + C21748) * C19766) *
              C50843 * C50972 +
          ((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C19763 +
           (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C19764 +
           (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C19765 +
           (C21099 * C1973 - (C19905 * C51019 + C19906 * C1972) +
            C21100 * C51020 - (C19767 * C20718 + C50686 * C20719) * C1974 -
            (C19767 * C20720 + C50686 * C20721) * C1971) *
               C19766) *
              C50843 * C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1551 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1549 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C1552 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1551 +
                     (C17184 + C17185 + C17186) * C1549 -
                     (C17879 + C17880 + C17881) * C1552 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C248 +
                   (((C17881 + C17880 + C17879) * C1552 -
                     ((C17186 + C17185 + C17184) * C1549 +
                      (C17183 + C17182 + C17181) * C1551) +
                     (C17884 + C17883 + C17882) * C50809) *
                        C16981 +
                    ((C18815 + C18816 + C18817) * C1552 -
                     ((C17187 + C17188 + C17189) * C1549 +
                      (C17190 + C17191 + C17192) * C1551) +
                     (C18818 + C18819 + C18820) * C50809) *
                        C50881) *
                       C50843 * C249 +
                   (((C17192 + C17191 + C17190) * C1551 +
                     (C17189 + C17188 + C17187) * C1549 -
                     (C18817 + C18816 + C18815) * C1552 -
                     (C18820 + C18819 + C18818) * C50809) *
                        C16981 +
                    ((C18147 + C18148 + C18149) * C1551 +
                     (C18150 + C18151 + C18152) * C1549 -
                     (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                      C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                         C1552 -
                     (C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                      C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                         C50809) *
                        C50881) *
                       C50843 * C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1551 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1549 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C1552 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1551 +
                     (C17184 + C17185 + C17186) * C1549 -
                     (C17879 + C17880 + C17881) * C1552 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C50730 * C900 +
                   (((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                      C16979 * C408 + C16985 * C397 + C16980 * C407) *
                         C1552 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C1549 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C1551) +
                     (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                      C16979 * C428 + C16985 * C411 + C16980 * C427) *
                         C50809) *
                        C16981 +
                    ((C17885 + C17886 + C17887) * C1552 -
                     ((C17198 + C17197 + C17196) * C1549 +
                      (C17195 + C17194 + C17193) * C1551) +
                     (C17888 + C17889 + C17890) * C50809) *
                        C50881) *
                       C50843 * C50730 * C901 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C1551 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C1549 -
                     (C16985 * C405 + C16980 * C423 + C16984 * C397 +
                      C16979 * C407 + C16983 * C398 + C16978 * C408) *
                         C1552 -
                     (C16985 * C424 + C16980 * C435 + C16984 * C411 +
                      C16979 * C427 + C16983 * C412 + C16978 * C428) *
                         C50809) *
                        C16981 +
                    ((C17509 + C17510 + C17511) * C1551 +
                     (C17512 + C17513 + C17514) * C1549 -
                     (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                      C16979 * C788 + C16983 * C782 + C16978 * C787) *
                         C1552 -
                     (C16985 * C794 + C16980 * C799 + C16984 * C792 +
                      C16979 * C798 + C16983 * C791 + C16978 * C797) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                     C16979 * C130 + C16985 * C124 + C16980 * C131) *
                        C1721 +
                    (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                     C16979 * C144 + C16985 * C135 + C16980 * C145) *
                        C1717 -
                    (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                     C16979 * C409 + C16983 * C400 + C16978 * C410) *
                        C1722 -
                    (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                     C16979 * C429 + C16983 * C414 + C16978 * C430) *
                        C1718 +
                    (C16983 * C401 + C16978 * C415 + C16984 * C402 +
                     C16979 * C416 + C16985 * C403 + C16980 * C417) *
                        C1723 +
                    (C16983 * C419 + C16978 * C431 + C16984 * C420 +
                     C16979 * C432 + C16985 * C421 + C16980 * C433) *
                        C1719 -
                    (C16985 * C1726 + C16980 * C1730 + C16984 * C1727 +
                     C16979 * C1731 + C16983 * C1728 + C16978 * C1732) *
                        C1724 -
                    (C16985 * C1734 + C16980 * C1738 + C16984 * C1735 +
                     C16979 * C1739 + C16983 * C1736 + C16978 * C1740) *
                        C1720) *
                       C16981 +
                   ((C17181 + C17182 + C17183) * C1721 +
                    (C17184 + C17185 + C17186) * C1717 -
                    (C17879 + C17880 + C17881) * C1722 -
                    (C17882 + C17883 + C17884) * C1718 +
                    (C18311 + C18312 + C18313) * C1723 +
                    (C18314 + C18315 + C18316) * C1719 -
                    (C16985 * C5998 + C16980 * C5999 + C16984 * C4505 +
                     C16979 * C4509 + C16983 * C4506 + C16978 * C4510) *
                        C1724 -
                    (C16985 * C6000 + C16980 * C6001 + C16984 * C4511 +
                     C16979 * C4517 + C16983 * C4512 + C16978 * C4518) *
                        C1720) *
                       C50881) *
                  C50843 * C50730 * C50713) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C1551 +
                     (C19767 * C133 + C50686 * C143) * C1549 -
                     (C19767 * C400 + C50686 * C410) * C1552 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C19899 * C1551 + C19900 * C1549 - C20419 * C1552 -
                     C20420 * C50809) *
                        C19764 +
                    (C19901 * C1551 + C19902 * C1549 - C20421 * C1552 -
                     C20422 * C50809) *
                        C19765 +
                    (C19903 * C1551 + C19904 * C1549 - C20423 * C1552 -
                     C20424 * C50809) *
                        C19766) *
                       C50843 * C50730 * C900 +
                   (((C19767 * C399 + C50686 * C409) * C1552 -
                     ((C19767 * C134 + C50686 * C144) * C1549 +
                      (C19767 * C123 + C50686 * C130) * C1551) +
                     (C19767 * C413 + C50686 * C429) * C50809) *
                        C19763 +
                    (C20425 * C1552 - (C19908 * C1549 + C19907 * C1551) +
                     C20426 * C50809) *
                        C19764 +
                    (C20427 * C1552 - (C19910 * C1549 + C19909 * C1551) +
                     C20428 * C50809) *
                        C19765 +
                    (C20429 * C1552 - (C19912 * C1549 + C19911 * C1551) +
                     C20430 * C50809) *
                        C19766) *
                       C50843 * C50730 * C901 +
                   (((C19767 * C124 + C50686 * C131) * C1551 +
                     (C19767 * C135 + C50686 * C145) * C1549 -
                     (C19767 * C398 + C50686 * C408) * C1552 -
                     (C19767 * C412 + C50686 * C428) * C50809) *
                        C19763 +
                    (C20143 * C1551 + C20144 * C1549 -
                     (C19767 * C782 + C50686 * C787) * C1552 -
                     (C19767 * C791 + C50686 * C797) * C50809) *
                        C19764 +
                    (C20145 * C1551 + C20146 * C1549 -
                     (C19767 * C1436 + C50686 * C1440) * C1552 -
                     (C19767 * C1444 + C50686 * C1448) * C50809) *
                        C19765 +
                    (C20147 * C1551 + C20148 * C1549 -
                     (C19767 * C3088 + C50686 * C3093) * C1552 -
                     (C19767 * C3094 + C50686 * C3097) * C50809) *
                        C19766) *
                       C50843 * C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C1551 +
                     (C19767 * C133 + C50686 * C143) * C1549 -
                     (C19767 * C400 + C50686 * C410) * C1552 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C21301 + C21302 - C21303 - C21304) * C19764 +
                    C21321 * C19765 + C21322 * C19766) *
                       C50843 * C248 +
                   ((C21303 - (C21302 + C21301) + C21304) * C19763 +
                    (C21307 - (C21306 + C21305) + C21308) * C19764 +
                    (C21311 - (C21310 + C21309) + C21312) * C19765 +
                    (C21313 - (C21314 + C21315) + C21316) * C19766) *
                       C50843 * C249 +
                   (C21321 * C19763 + C21322 * C19764 +
                    (C21315 + C21314 - C21313 - C21316) * C19765 +
                    (C20617 * C1551 + C20618 * C1549 -
                     (C19767 * C21084 + C50686 * C21085) * C1552 -
                     (C19767 * C21086 + C50686 * C21087) * C50809) *
                        C19766) *
                       C50843 * C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C19767 * C122 + C50686 * C129) * C1721 +
                    (C19767 * C133 + C50686 * C143) * C1717 -
                    (C19767 * C400 + C50686 * C410) * C1722 -
                    (C19767 * C414 + C50686 * C430) * C1718 +
                    (C19767 * C401 + C50686 * C415) * C1723 +
                    (C19767 * C419 + C50686 * C431) * C1719 -
                    (C19767 * C1728 + C50686 * C1732) * C1724 -
                    (C19767 * C1736 + C50686 * C1740) * C1720) *
                       C19763 +
                   (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 -
                    C20420 * C1718 + C20747 * C1723 + C20748 * C1719 -
                    (C19767 * C4506 + C50686 * C4510) * C1724 -
                    (C19767 * C4512 + C50686 * C4518) * C1720) *
                       C19764 +
                   (C19901 * C1721 + C19902 * C1717 - C20421 * C1722 -
                    C20422 * C1718 + C20749 * C1723 + C20750 * C1719 -
                    (C19767 * C4508 + C50686 * C4514) * C1724 -
                    (C19767 * C4516 + C50686 * C4520) * C1720) *
                       C19765 +
                   (C19903 * C1721 + C19904 * C1717 - C20423 * C1722 -
                    C20424 * C1718 + C20751 * C1723 + C20752 * C1719 -
                    (C19767 * C21388 + C50686 * C21389) * C1724 -
                    (C19767 * C21390 + C50686 * C21391) * C1720) *
                       C19766) *
                  C50843 * C50730 * C50713) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C16985 * C398 + C16980 * C408 + C16984 * C399 + C16979 * C409 +
             C16983 * C400 + C16978 * C410) *
                C1973 -
            (C16985 * C412 + C16980 * C428 + C16984 * C413 + C16979 * C429 +
             C16983 * C414 + C16978 * C430) *
                C51020 +
            (C16983 * C401 + C16978 * C415 + C16984 * C402 + C16979 * C416 +
             C16985 * C403 + C16980 * C417) *
                C1974 +
            (C16983 * C419 + C16978 * C431 + C16984 * C420 + C16979 * C432 +
             C16985 * C421 + C16980 * C433) *
                C1971) *
               C16981 +
           ((C17181 + C17182 + C17183) * C1972 +
            (C17184 + C17185 + C17186) * C51019 -
            (C17879 + C17880 + C17881) * C1973 -
            (C17882 + C17883 + C17884) * C51020 +
            (C18311 + C18312 + C18313) * C1974 +
            (C18314 + C18315 + C18316) * C1971) *
               C50881) *
              C50843 * C50730 * C50964 +
          (((C16983 * C399 + C16978 * C409 + C16984 * C398 + C16979 * C408 +
             C16985 * C397 + C16980 * C407) *
                C1973 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51019 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1972) +
            (C16983 * C413 + C16978 * C429 + C16984 * C412 + C16979 * C428 +
             C16985 * C411 + C16980 * C427) *
                C51020 -
            (C16985 * C404 + C16980 * C418 + C16984 * C403 + C16979 * C417 +
             C16983 * C402 + C16978 * C416) *
                C1974 -
            (C16985 * C422 + C16980 * C434 + C16984 * C421 + C16979 * C433 +
             C16983 * C420 + C16978 * C432) *
                C1971) *
               C16981 +
           ((C17885 + C17886 + C17887) * C1973 -
            ((C17198 + C17197 + C17196) * C51019 +
             (C17195 + C17194 + C17193) * C1972) +
            (C17888 + C17889 + C17890) * C51020 -
            (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 + C16979 * C1093 +
             C16983 * C1090 + C16978 * C1094) *
                C1974 -
            (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 + C16979 * C1101 +
             C16983 * C1098 + C16978 * C1102) *
                C1971) *
               C50881) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1972 +
            (C19767 * C133 + C50686 * C143) * C51019 -
            (C19767 * C400 + C50686 * C410) * C1973 -
            (C19767 * C414 + C50686 * C430) * C51020 +
            (C19767 * C401 + C50686 * C415) * C1974 +
            (C19767 * C419 + C50686 * C431) * C1971) *
               C19763 +
           (C19899 * C1972 + C19900 * C51019 - C20419 * C1973 -
            C20420 * C51020 + C20747 * C1974 + C20748 * C1971) *
               C19764 +
           (C19901 * C1972 + C19902 * C51019 - C20421 * C1973 -
            C20422 * C51020 + C20749 * C1974 + C20750 * C1971) *
               C19765 +
           (C19903 * C1972 + C19904 * C51019 - C20423 * C1973 -
            C20424 * C51020 + C20751 * C1974 + C20752 * C1971) *
               C19766) *
              C50843 * C50730 * C50964 +
          (((C19767 * C399 + C50686 * C409) * C1973 -
            ((C19767 * C134 + C50686 * C144) * C51019 +
             (C19767 * C123 + C50686 * C130) * C1972) +
            (C19767 * C413 + C50686 * C429) * C51020 -
            (C19767 * C402 + C50686 * C416) * C1974 -
            (C19767 * C420 + C50686 * C432) * C1971) *
               C19763 +
           (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
            C20426 * C51020 - (C19767 * C1090 + C50686 * C1094) * C1974 -
            (C19767 * C1098 + C50686 * C1102) * C1971) *
               C19764 +
           (C20427 * C1973 - (C19910 * C51019 + C19909 * C1972) +
            C20428 * C51020 - (C19767 * C2565 + C50686 * C2568) * C1974 -
            (C19767 * C2570 + C50686 * C2574) * C1971) *
               C19765 +
           (C20429 * C1973 - (C19912 * C51019 + C19911 * C1972) +
            C20430 * C51020 - (C19767 * C3561 + C50686 * C3563) * C1974 -
            (C19767 * C3565 + C50686 * C3567) * C1971) *
               C19766) *
              C50843 * C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1551 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1549 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C1552 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1551 +
                     (C17184 + C17185 + C17186) * C1549 -
                     (C17879 + C17880 + C17881) * C1552 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C50730 * C900 +
                   (((C16983 * C399 + C16978 * C409 + C16984 * C398 +
                      C16979 * C408 + C16985 * C397 + C16980 * C407) *
                         C1552 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C1549 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C1551) +
                     (C16983 * C413 + C16978 * C429 + C16984 * C412 +
                      C16979 * C428 + C16985 * C411 + C16980 * C427) *
                         C50809) *
                        C16981 +
                    ((C17885 + C17886 + C17887) * C1552 -
                     ((C17198 + C17197 + C17196) * C1549 +
                      (C17195 + C17194 + C17193) * C1551) +
                     (C17888 + C17889 + C17890) * C50809) *
                        C50881) *
                       C50843 * C50730 * C901 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C1551 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C1549 -
                     (C16985 * C405 + C16980 * C423 + C16984 * C397 +
                      C16979 * C407 + C16983 * C398 + C16978 * C408) *
                         C1552 -
                     (C16985 * C424 + C16980 * C435 + C16984 * C411 +
                      C16979 * C427 + C16983 * C412 + C16978 * C428) *
                         C50809) *
                        C16981 +
                    ((C17509 + C17510 + C17511) * C1551 +
                     (C17512 + C17513 + C17514) * C1549 -
                     (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                      C16979 * C788 + C16983 * C782 + C16978 * C787) *
                         C1552 -
                     (C16985 * C794 + C16980 * C799 + C16984 * C792 +
                      C16979 * C798 + C16983 * C791 + C16978 * C797) *
                         C50809) *
                        C50881) *
                       C50843 * C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1551 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1549 -
                     (C16985 * C398 + C16980 * C408 + C16984 * C399 +
                      C16979 * C409 + C16983 * C400 + C16978 * C410) *
                         C1552 -
                     (C16985 * C412 + C16980 * C428 + C16984 * C413 +
                      C16979 * C429 + C16983 * C414 + C16978 * C430) *
                         C50809) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1551 +
                     (C17184 + C17185 + C17186) * C1549 -
                     (C17879 + C17880 + C17881) * C1552 -
                     (C17882 + C17883 + C17884) * C50809) *
                        C50881) *
                       C50843 * C248 +
                   (((C17881 + C17880 + C17879) * C1552 -
                     ((C17186 + C17185 + C17184) * C1549 +
                      (C17183 + C17182 + C17181) * C1551) +
                     (C17884 + C17883 + C17882) * C50809) *
                        C16981 +
                    ((C18815 + C18816 + C18817) * C1552 -
                     ((C17187 + C17188 + C17189) * C1549 +
                      (C17190 + C17191 + C17192) * C1551) +
                     (C18818 + C18819 + C18820) * C50809) *
                        C50881) *
                       C50843 * C249 +
                   (((C17192 + C17191 + C17190) * C1551 +
                     (C17189 + C17188 + C17187) * C1549 -
                     (C18817 + C18816 + C18815) * C1552 -
                     (C18820 + C18819 + C18818) * C50809) *
                        C16981 +
                    ((C18147 + C18148 + C18149) * C1551 +
                     (C18150 + C18151 + C18152) * C1549 -
                     (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                      C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                         C1552 -
                     (C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                      C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                         C50809) *
                        C50881) *
                       C50843 * C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C1551 +
                     (C19767 * C133 + C50686 * C143) * C1549 -
                     (C19767 * C400 + C50686 * C410) * C1552 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C19899 * C1551 + C19900 * C1549 - C20419 * C1552 -
                     C20420 * C50809) *
                        C19764 +
                    (C19901 * C1551 + C19902 * C1549 - C20421 * C1552 -
                     C20422 * C50809) *
                        C19765 +
                    (C19903 * C1551 + C19904 * C1549 - C20423 * C1552 -
                     C20424 * C50809) *
                        C19766) *
                       C50843 * C50730 * C900 +
                   (((C19767 * C399 + C50686 * C409) * C1552 -
                     ((C19767 * C134 + C50686 * C144) * C1549 +
                      (C19767 * C123 + C50686 * C130) * C1551) +
                     (C19767 * C413 + C50686 * C429) * C50809) *
                        C19763 +
                    (C20425 * C1552 - (C19908 * C1549 + C19907 * C1551) +
                     C20426 * C50809) *
                        C19764 +
                    (C20427 * C1552 - (C19910 * C1549 + C19909 * C1551) +
                     C20428 * C50809) *
                        C19765 +
                    (C20429 * C1552 - (C19912 * C1549 + C19911 * C1551) +
                     C20430 * C50809) *
                        C19766) *
                       C50843 * C50730 * C901 +
                   (((C19767 * C124 + C50686 * C131) * C1551 +
                     (C19767 * C135 + C50686 * C145) * C1549 -
                     (C19767 * C398 + C50686 * C408) * C1552 -
                     (C19767 * C412 + C50686 * C428) * C50809) *
                        C19763 +
                    (C20143 * C1551 + C20144 * C1549 -
                     (C19767 * C782 + C50686 * C787) * C1552 -
                     (C19767 * C791 + C50686 * C797) * C50809) *
                        C19764 +
                    (C20145 * C1551 + C20146 * C1549 -
                     (C19767 * C1436 + C50686 * C1440) * C1552 -
                     (C19767 * C1444 + C50686 * C1448) * C50809) *
                        C19765 +
                    (C20147 * C1551 + C20148 * C1549 -
                     (C19767 * C3088 + C50686 * C3093) * C1552 -
                     (C19767 * C3094 + C50686 * C3097) * C50809) *
                        C19766) *
                       C50843 * C50730 * C902)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50686 * C129) * C1551 +
                     (C19767 * C133 + C50686 * C143) * C1549 -
                     (C19767 * C400 + C50686 * C410) * C1552 -
                     (C19767 * C414 + C50686 * C430) * C50809) *
                        C19763 +
                    (C21301 + C21302 - C21303 - C21304) * C19764 +
                    C21321 * C19765 + C21322 * C19766) *
                       C50843 * C248 +
                   ((C21303 - (C21302 + C21301) + C21304) * C19763 +
                    (C21307 - (C21306 + C21305) + C21308) * C19764 +
                    (C21311 - (C21310 + C21309) + C21312) * C19765 +
                    (C21313 - (C21314 + C21315) + C21316) * C19766) *
                       C50843 * C249 +
                   (C21321 * C19763 + C21322 * C19764 +
                    (C21315 + C21314 - C21313 - C21316) * C19765 +
                    (C20617 * C1551 + C20618 * C1549 -
                     (C19767 * C21084 + C50686 * C21085) * C1552 -
                     (C19767 * C21086 + C50686 * C21087) * C50809) *
                        C19766) *
                       C50843 * C250) *
                  C50713) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C33829 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C50972 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C50985) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
                C33829) *
               C50781) *
              C51015 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50985 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C33829 +
            ((C28693 * C121 + C28694 * C50745) * C50985 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C50985) *
                C33829) *
               C50972) *
              C51016 +
          (((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                  C121 +
              (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                  C50745) *
                 C50985 +
             ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
                C33829 +
            (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50985 +
             ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
                C50907) *
               C50972 -
           ((((C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
               C50957 * C1448) *
                  C50745 +
              (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
               C50957 * C1440) *
                  C121) *
                 C50881 +
             ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C50985) *
                C50907 +
            (((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C50881 +
             ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C50985) *
                C33829) *
               C50781) *
              C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C644 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50973 -
              (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                 C50985 +
             ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
              C28689 * C645 - C28690 * C50809) *
                 C50881) *
                C33829 +
            (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
              (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                 C50985 +
             (C28691 * C644 + C28692 * C50973 - C29217 * C645 -
              C29218 * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           (((C28691 * C645 -
              ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
              C28692 * C50809) *
                 C50985 +
             (C29877 * C645 -
              ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
              C29878 * C50809) *
                 C50881) *
                C33829 +
            ((C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
              C29216 * C50809) *
                 C50985 +
             ((C26047 + C26048) * C645 - (C26540 * C50973 + C26539 * C644) +
              (C26049 + C26050) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C251 +
          (((((C28007 + C28008) * C645 -
              ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                   C50973 +
               (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                   C644) +
              (C28009 + C28010) * C50809) *
                 C50985 +
             (C28693 * C645 -
              ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
              C28694 * C50809) *
                 C50881) *
                C33829 +
            (((C28012 + C28011) * C645 -
              ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
              (C28014 + C28013) * C50809) *
                 C50985 +
             ((C28016 + C28015) * C645 - (C28695 * C50973 + C28696 * C644) +
              (C28018 + C28017) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           ((((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
              C28696 * C645 - C28695 * C50809) *
                 C50985 +
             ((C24898 + C24899) * C644 + (C24900 + C24901) * C50973 -
              (C25617 + C25616) * C645 - (C25619 + C25618) * C50809) *
                 C50881) *
                C33829 +
            ((C28693 * C644 + C28694 * C50973 - (C28015 + C28016) * C645 -
              (C28017 + C28018) * C50809) *
                 C50985 +
             ((C25616 + C25617) * C644 + (C25618 + C25619) * C50973 -
              (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
               C50957 * C2568) *
                  C645 -
              (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
               C50957 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C33829 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C248 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C50985) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
                C33829) *
               C249 +
           ((C24914 * C50985 +
             ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
                C33829 +
            ((C29877 * C121 + C29878 * C50745) * C50985 +
             ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
                C50907) *
               C250) *
              C251 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50985 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C33829 +
            ((C28693 * C121 + C28694 * C50745) * C50985 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C249 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C50985) *
                C33829) *
               C248 -
           ((((C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
               C50957 * C3096) *
                  C50745 +
              (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
               C50957 * C3090) *
                  C121) *
                 C50881 +
             ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C50985) *
                C50907 +
            (((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C50881 +
             C24915 * C50985) *
                C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C33829 +
           (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
            (C28691 * C121 + C28692 * C50745) * C50881) *
               C50907) *
              C50730 * C113 -
          (((C28695 * C50745 + C28696 * C121) * C50881 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
               C50907 +
           (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50985) *
               C33829) *
              C50730 * C114 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C50985 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
               C33829 +
           (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50985 +
            ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
               C50907) *
              C50730 * C115 -
          ((((C49711 * C794 + C50691 * C799 + C49718 * C792 + C50957 * C798) *
                 C50745 +
             (C49711 * C784 + C50691 * C793 + C49718 * C783 + C50957 * C788) *
                 C121) *
                C50881 +
            ((C49711 * C424 + C50691 * C435 + C49718 * C411 + C50957 * C427) *
                 C50745 +
             (C49711 * C405 + C50691 * C423 + C49718 * C397 + C50957 * C407) *
                 C121) *
                C50985) *
               C50907 +
           (((C49711 * C280 + C50691 * C291 + C49718 * C263 + C50957 * C283) *
                 C50745 +
             (C49711 * C261 + C50691 * C279 + C49718 * C253 + C50957 * C267) *
                 C121) *
                C50881 +
            ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                 C50745 +
             (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                 C121) *
                C50985) *
               C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C394 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C391 -
             (C27999 + C28000) * C395 - (C28001 + C28002) * C392 +
             (C28003 + C28004) * C396 + (C28005 + C28006) * C393) *
                C50985 +
            ((C24882 + C24883) * C394 + (C24884 + C24885) * C391 -
             C28689 * C395 - C28690 * C392 + C29215 * C396 + C29216 * C393) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C394 + (C28002 + C28001) * C391 -
             (C28004 + C28003) * C395 - (C28006 + C28005) * C392 +
             (C30406 + C30405) * C396 + (C30408 + C30407) * C393) *
                C50985 +
            (C28691 * C394 + C28692 * C391 - C29217 * C395 - C29218 * C392 +
             (C29227 + C29228) * C396 + (C29229 + C29230) * C393) *
                C50881) *
               C50907) *
              C50730 * C251 +
          ((((C28007 + C28008) * C395 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C391 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C394) +
             (C28009 + C28010) * C392 - (C28011 + C28012) * C396 -
             (C28013 + C28014) * C393) *
                C50985 +
            (C28693 * C395 -
             ((C24897 + C24896) * C391 + (C24895 + C24894) * C394) +
             C28694 * C392 - (C28015 + C28016) * C396 -
             (C28017 + C28018) * C393) *
                C50881) *
               C33829 +
           (((C28012 + C28011) * C395 -
             ((C28010 + C28009) * C391 + (C28008 + C28007) * C394) +
             (C28014 + C28013) * C392 -
             (C49711 * C1726 + C50691 * C1730 + C49718 * C1727 +
              C50957 * C1731) *
                 C396 -
             (C49711 * C1734 + C50691 * C1738 + C49718 * C1735 +
              C50957 * C1739) *
                 C393) *
                C50985 +
            ((C28016 + C28015) * C395 - (C28695 * C391 + C28696 * C394) +
             (C28018 + C28017) * C392 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C396 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C393) *
                C50881) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                C50985 +
            ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
             C28689 * C645 - C28690 * C50809) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
             (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                C50985 +
            (C28691 * C644 + C28692 * C50973 - C29217 * C645 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C50730 * C51015 +
          ((((C28007 + C28008) * C645 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50973 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C644) +
             (C28009 + C28010) * C50809) *
                C50985 +
            (C28693 * C645 -
             ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
             C28694 * C50809) *
                C50881) *
               C33829 +
           (((C28012 + C28011) * C645 -
             ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
             (C28014 + C28013) * C50809) *
                C50985 +
            ((C28016 + C28015) * C645 - (C28695 * C50973 + C28696 * C644) +
             (C28018 + C28017) * C50809) *
                C50881) *
               C50907) *
              C50730 * C51016 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C644 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50973 -
             (C28427 + C28428) * C645 - (C28429 + C28430) * C50809) *
                C50985 +
            ((C25224 + C25225) * C644 + (C25226 + C25227) * C50973 -
             (C28222 + C28221) * C645 - (C28224 + C28223) * C50809) *
                C50881) *
               C33829 +
           (((C28428 + C28427) * C644 + (C28430 + C28429) * C50973 -
             (C49711 * C404 + C50691 * C418 + C49718 * C403 + C50957 * C417) *
                 C645 -
             (C49711 * C422 + C50691 * C434 + C49718 * C421 + C50957 * C433) *
                 C50809) *
                C50985 +
            ((C28221 + C28222) * C644 + (C28223 + C28224) * C50973 -
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C645 -
             (C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C33829 +
           (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
            (C28691 * C121 + C28692 * C50745) * C50881) *
               C50907) *
              C50730 * C113 -
          (((C28695 * C50745 + C28696 * C121) * C50881 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
               C50907 +
           (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50985) *
               C33829) *
              C50730 * C114 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C50985 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
               C33829 +
           (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50985 +
            ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
               C50907) *
              C50730 * C115 -
          ((((C49711 * C794 + C50691 * C799 + C49718 * C792 + C50957 * C798) *
                 C50745 +
             (C49711 * C784 + C50691 * C793 + C49718 * C783 + C50957 * C788) *
                 C121) *
                C50881 +
            ((C49711 * C424 + C50691 * C435 + C49718 * C411 + C50957 * C427) *
                 C50745 +
             (C49711 * C405 + C50691 * C423 + C49718 * C397 + C50957 * C407) *
                 C121) *
                C50985) *
               C50907 +
           (((C49711 * C280 + C50691 * C291 + C49718 * C263 + C50957 * C283) *
                 C50745 +
             (C49711 * C261 + C50691 * C279 + C49718 * C253 + C50957 * C267) *
                 C121) *
                C50881 +
            ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                 C50745 +
             (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                 C121) *
                C50985) *
               C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C33829 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C248 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C50985) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
                C33829) *
               C249 +
           ((C24914 * C50985 +
             ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
                C33829 +
            ((C29877 * C121 + C29878 * C50745) * C50985 +
             ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
                C50907) *
               C250) *
              C251 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50985 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C33829 +
            ((C28693 * C121 + C28694 * C50745) * C50985 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C249 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C50985) *
                C33829) *
               C248 -
           ((((C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
               C50957 * C3096) *
                  C50745 +
              (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
               C50957 * C3090) *
                  C121) *
                 C50881 +
             ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C50985) *
                C50907 +
            (((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C50881 +
             C24915 * C50985) *
                C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C33829 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C51017 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C50985) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
                C33829) *
               C51018 +
           ((C24914 * C50985 +
             ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
                C33829 +
            ((C29877 * C121 + C29878 * C50745) * C50985 +
             ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
                C50907) *
               C1204) *
              C50964 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50985 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C33829 +
            ((C28693 * C121 + C28694 * C50745) * C50985 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C51018 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C50985) *
                C33829) *
               C51017 -
           ((((C49711 * C3094 + C50691 * C3097 + C49718 * C3092 +
               C50957 * C3096) *
                  C50745 +
              (C49711 * C3088 + C50691 * C3093 + C49718 * C3087 +
               C50957 * C3090) *
                  C121) *
                 C50881 +
             ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C50985) *
                C50907 +
            (((C24905 + C24904) * C50745 + (C24903 + C24902) * C121) * C50881 +
             C24915 * C50985) *
                C33829) *
               C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                C50985 +
            ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
             C28689 * C645 - C28690 * C50809) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
             (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                C50985 +
            (C28691 * C644 + C28692 * C50973 - C29217 * C645 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C51017 +
          (((C28691 * C645 -
             ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
             C28692 * C50809) *
                C50985 +
            (C29877 * C645 -
             ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
             C29878 * C50809) *
                C50881) *
               C33829 +
           ((C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
             C29216 * C50809) *
                C50985 +
            ((C26047 + C26048) * C645 - (C26540 * C50973 + C26539 * C644) +
             (C26049 + C26050) * C50809) *
                C50881) *
               C50907) *
              C51018 +
          ((C26557 * C50985 +
            ((C24893 + C24892) * C644 + (C24891 + C24890) * C50973 -
             (C26553 + C26552) * C645 - (C26555 + C26554) * C50809) *
                C50881) *
               C33829 +
           ((C29877 * C644 + C29878 * C50973 - (C26048 + C26047) * C645 -
             (C26050 + C26049) * C50809) *
                C50985 +
            ((C26552 + C26553) * C644 + (C26554 + C26555) * C50973 -
             (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
              C50957 * C3564) *
                 C645 -
             (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
              C50957 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C33829 +
           (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
            (C28691 * C121 + C28692 * C50745) * C50881) *
               C50907) *
              C969 -
          (((C26540 * C50745 + C26539 * C121) * C50881 +
            (C28690 * C50745 + C28689 * C121) * C50985) *
               C50907 +
           (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
               C33829) *
              C970 +
          ((C24914 * C50985 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
               C33829 +
           ((C29877 * C121 + C29878 * C50745) * C50985 +
            ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
               C50907) *
              C971 -
          ((((C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
              C50957 * C4086) *
                 C50745 +
             (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
              C50957 * C4082) *
                 C121) *
                C50881 +
            ((C26555 + C26554) * C50745 + (C26553 + C26552) * C121) * C50985) *
               C50907 +
           (((C25879 + C25878) * C50745 + (C25877 + C25876) * C121) * C50881 +
            C25880 * C50985) *
               C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C33829 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C898 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C50985) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
                C33829) *
               C50781) *
              C900 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50985 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C33829 +
            ((C28693 * C121 + C28694 * C50745) * C50985 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C50985) *
                C33829) *
               C898) *
              C901 +
          (((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                  C121 +
              (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                  C50745) *
                 C50985 +
             ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
                C33829 +
            (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50985 +
             ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
                C50907) *
               C898 -
           ((((C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
               C50957 * C1448) *
                  C50745 +
              (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
               C50957 * C1440) *
                  C121) *
                 C50881 +
             ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C50985) *
                C50907 +
            (((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C50881 +
             ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C50985) *
                C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C394 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C391 -
             (C27999 + C28000) * C395 - (C28001 + C28002) * C392 +
             (C28003 + C28004) * C396 + (C28005 + C28006) * C393) *
                C50985 +
            ((C24882 + C24883) * C394 + (C24884 + C24885) * C391 -
             C28689 * C395 - C28690 * C392 + C29215 * C396 + C29216 * C393) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C394 + (C28002 + C28001) * C391 -
             (C28004 + C28003) * C395 - (C28006 + C28005) * C392 +
             (C30406 + C30405) * C396 + (C30408 + C30407) * C393) *
                C50985 +
            (C28691 * C394 + C28692 * C391 - C29217 * C395 - C29218 * C392 +
             (C29227 + C29228) * C396 + (C29229 + C29230) * C393) *
                C50881) *
               C50907) *
              C898 +
          (((C28691 * C395 -
             ((C24885 + C24884) * C391 + (C24883 + C24882) * C394) +
             C28692 * C392 - C29217 * C396 - C29218 * C393) *
                C50985 +
            (C29877 * C395 -
             ((C24889 + C24888) * C391 + (C24887 + C24886) * C394) +
             C29878 * C392 - (C26048 + C26047) * C396 -
             (C26050 + C26049) * C393) *
                C50881) *
               C33829 +
           ((C29215 * C395 - (C28690 * C391 + C28689 * C394) + C29216 * C392 -
             (C29228 + C29227) * C396 - (C29230 + C29229) * C393) *
                C50985 +
            ((C26047 + C26048) * C395 - (C26540 * C391 + C26539 * C394) +
             (C26049 + C26050) * C392 -
             (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
              C50957 * C4514) *
                 C396 -
             (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
              C50957 * C4520) *
                 C393) *
                C50881) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C644 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50973 -
              (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                 C50985 +
             ((C24882 + C24883) * C644 + (C24884 + C24885) * C50973 -
              C28689 * C645 - C28690 * C50809) *
                 C50881) *
                C33829 +
            (((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
              (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                 C50985 +
             (C28691 * C644 + C28692 * C50973 - C29217 * C645 -
              C29218 * C50809) *
                 C50881) *
                C50907) *
               C898 +
           (((C28691 * C645 -
              ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
              C28692 * C50809) *
                 C50985 +
             (C29877 * C645 -
              ((C24889 + C24888) * C50973 + (C24887 + C24886) * C644) +
              C29878 * C50809) *
                 C50881) *
                C33829 +
            ((C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
              C29216 * C50809) *
                 C50985 +
             ((C26047 + C26048) * C645 - (C26540 * C50973 + C26539 * C644) +
              (C26049 + C26050) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50964 +
          (((((C28007 + C28008) * C645 -
              ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                   C50973 +
               (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                   C644) +
              (C28009 + C28010) * C50809) *
                 C50985 +
             (C28693 * C645 -
              ((C24897 + C24896) * C50973 + (C24895 + C24894) * C644) +
              C28694 * C50809) *
                 C50881) *
                C33829 +
            (((C28012 + C28011) * C645 -
              ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
              (C28014 + C28013) * C50809) *
                 C50985 +
             ((C28016 + C28015) * C645 - (C28695 * C50973 + C28696 * C644) +
              (C28018 + C28017) * C50809) *
                 C50881) *
                C50907) *
               C898 +
           ((((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
              C28696 * C645 - C28695 * C50809) *
                 C50985 +
             ((C24898 + C24899) * C644 + (C24900 + C24901) * C50973 -
              (C25617 + C25616) * C645 - (C25619 + C25618) * C50809) *
                 C50881) *
                C33829 +
            ((C28693 * C644 + C28694 * C50973 - (C28015 + C28016) * C645 -
              (C28017 + C28018) * C50809) *
                 C50985 +
             ((C25616 + C25617) * C644 + (C25618 + C25619) * C50973 -
              (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
               C50957 * C2568) *
                  C645 -
              (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
               C50957 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C121 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C50745) *
                 C50985 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
                C33829 +
            (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
             (C28691 * C121 + C28692 * C50745) * C50881) *
                C50907) *
               C898 -
           (((C26540 * C50745 + C26539 * C121) * C50881 +
             (C28690 * C50745 + C28689 * C121) * C50985) *
                C50907 +
            (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
             ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
                C33829) *
               C50781) *
              C900 +
          (((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50985 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50745) * C50881) *
                C33829 +
            ((C28693 * C121 + C28694 * C50745) * C50985 +
             ((C25616 + C25617) * C121 + (C25618 + C25619) * C50745) * C50881) *
                C50907) *
               C50781 -
           (((C28695 * C50745 + C28696 * C121) * C50881 +
             ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50985) *
                C50907 +
            (((C24897 + C24896) * C50745 + (C24895 + C24894) * C121) * C50881 +
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50745 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C121) *
                 C50985) *
                C33829) *
               C898) *
              C901 +
          (((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                  C121 +
              (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                  C50745) *
                 C50985 +
             ((C25224 + C25225) * C121 + (C25226 + C25227) * C50745) * C50881) *
                C33829 +
            (((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50985 +
             ((C28221 + C28222) * C121 + (C28223 + C28224) * C50745) * C50881) *
                C50907) *
               C898 -
           ((((C49711 * C1443 + C50691 * C1447 + C49718 * C1444 +
               C50957 * C1448) *
                  C50745 +
              (C49711 * C1435 + C50691 * C1439 + C49718 * C1436 +
               C50957 * C1440) *
                  C121) *
                 C50881 +
             ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C50985) *
                C50907 +
            (((C25231 + C25230) * C50745 + (C25229 + C25228) * C121) * C50881 +
             ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C50985) *
                C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50985 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50745) * C50881) *
               C33829 +
           (((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50985 +
            (C28691 * C121 + C28692 * C50745) * C50881) *
               C50907) *
              C969 -
          (((C26540 * C50745 + C26539 * C121) * C50881 +
            (C28690 * C50745 + C28689 * C121) * C50985) *
               C50907 +
           (((C24889 + C24888) * C50745 + (C24887 + C24886) * C121) * C50881 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50985) *
               C33829) *
              C970 +
          ((C24914 * C50985 +
            ((C24893 + C24892) * C121 + (C24891 + C24890) * C50745) * C50881) *
               C33829 +
           ((C29877 * C121 + C29878 * C50745) * C50985 +
            ((C26552 + C26553) * C121 + (C26554 + C26555) * C50745) * C50881) *
               C50907) *
              C971 -
          ((((C49711 * C4083 + C50691 * C4085 + C49718 * C4084 +
              C50957 * C4086) *
                 C50745 +
             (C49711 * C4079 + C50691 * C4081 + C49718 * C4080 +
              C50957 * C4082) *
                 C121) *
                C50881 +
            ((C26555 + C26554) * C50745 + (C26553 + C26552) * C121) * C50985) *
               C50907 +
           (((C25879 + C25878) * C50745 + (C25877 + C25876) * C121) * C50881 +
            C25880 * C50985) *
               C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                  C1551 +
              (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                  C1549 -
              (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                 C50985 +
             ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
              C28689 * C1552 - C28690 * C50809) *
                 C50881) *
                C33829 +
            (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
              (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                 C50985 +
             (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
              C29218 * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           (((C28691 * C1552 -
              ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
              C28692 * C50809) *
                 C50985 +
             (C29877 * C1552 -
              ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
              C29878 * C50809) *
                 C50881) *
                C33829 +
            ((C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
              C29216 * C50809) *
                 C50985 +
             ((C26047 + C26048) * C1552 - (C26540 * C1549 + C26539 * C1551) +
              (C26049 + C26050) * C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50964 +
          (((((C28007 + C28008) * C1552 -
              ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                   C1549 +
               (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                   C1551) +
              (C28009 + C28010) * C50809) *
                 C50985 +
             (C28693 * C1552 -
              ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
              C28694 * C50809) *
                 C50881) *
                C33829 +
            (((C28012 + C28011) * C1552 -
              ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
              (C28014 + C28013) * C50809) *
                 C50985 +
             ((C28016 + C28015) * C1552 - (C28695 * C1549 + C28696 * C1551) +
              (C28018 + C28017) * C50809) *
                 C50881) *
                C50907) *
               C50972 +
           ((((C24894 + C24895) * C1551 + (C24896 + C24897) * C1549 -
              C28696 * C1552 - C28695 * C50809) *
                 C50985 +
             ((C24898 + C24899) * C1551 + (C24900 + C24901) * C1549 -
              (C25617 + C25616) * C1552 - (C25619 + C25618) * C50809) *
                 C50881) *
                C33829 +
            ((C28693 * C1551 + C28694 * C1549 - (C28015 + C28016) * C1552 -
              (C28017 + C28018) * C50809) *
                 C50985 +
             ((C25616 + C25617) * C1551 + (C25618 + C25619) * C1549 -
              (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
               C50957 * C2568) *
                  C1552 -
              (C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
               C50957 * C2574) *
                  C50809) *
                 C50881) *
                C50907) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1972 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C51019 -
             (C27999 + C28000) * C1973 - (C28001 + C28002) * C51020 +
             (C28003 + C28004) * C1974 + (C28005 + C28006) * C1971) *
                C50985 +
            ((C24882 + C24883) * C1972 + (C24884 + C24885) * C51019 -
             C28689 * C1973 - C28690 * C51020 + C29215 * C1974 +
             C29216 * C1971) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C1972 + (C28002 + C28001) * C51019 -
             (C28004 + C28003) * C1973 - (C28006 + C28005) * C51020 +
             (C30406 + C30405) * C1974 + (C30408 + C30407) * C1971) *
                C50985 +
            (C28691 * C1972 + C28692 * C51019 - C29217 * C1973 -
             C29218 * C51020 + (C29227 + C29228) * C1974 +
             (C29229 + C29230) * C1971) *
                C50881) *
               C50907) *
              C50972 +
          (((C28691 * C1973 -
             ((C24885 + C24884) * C51019 + (C24883 + C24882) * C1972) +
             C28692 * C51020 - C29217 * C1974 - C29218 * C1971) *
                C50985 +
            (C29877 * C1973 -
             ((C24889 + C24888) * C51019 + (C24887 + C24886) * C1972) +
             C29878 * C51020 - (C26048 + C26047) * C1974 -
             (C26050 + C26049) * C1971) *
                C50881) *
               C33829 +
           ((C29215 * C1973 - (C28690 * C51019 + C28689 * C1972) +
             C29216 * C51020 - (C29228 + C29227) * C1974 -
             (C29230 + C29229) * C1971) *
                C50985 +
            ((C26047 + C26048) * C1973 - (C26540 * C51019 + C26539 * C1972) +
             (C26049 + C26050) * C51020 -
             (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
              C50957 * C4514) *
                 C1974 -
             (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
              C50957 * C4520) *
                 C1971) *
                C50881) *
               C50907) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C50985 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C50985 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C248 +
          (((C28691 * C1552 -
             ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
             C28692 * C50809) *
                C50985 +
            (C29877 * C1552 -
             ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
             C29878 * C50809) *
                C50881) *
               C33829 +
           ((C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
             C29216 * C50809) *
                C50985 +
            ((C26047 + C26048) * C1552 - (C26540 * C1549 + C26539 * C1551) +
             (C26049 + C26050) * C50809) *
                C50881) *
               C50907) *
              C249 +
          ((C26856 * C50985 +
            ((C24893 + C24892) * C1551 + (C24891 + C24890) * C1549 -
             (C26553 + C26552) * C1552 - (C26555 + C26554) * C50809) *
                C50881) *
               C33829 +
           ((C29877 * C1551 + C29878 * C1549 - (C26048 + C26047) * C1552 -
             (C26050 + C26049) * C50809) *
                C50985 +
            ((C26552 + C26553) * C1551 + (C26554 + C26555) * C1549 -
             (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
              C50957 * C3564) *
                 C1552 -
             (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
              C50957 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C50985 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C50985 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C50730 * C900 +
          ((((C28007 + C28008) * C1552 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C1549 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1551) +
             (C28009 + C28010) * C50809) *
                C50985 +
            (C28693 * C1552 -
             ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
             C28694 * C50809) *
                C50881) *
               C33829 +
           (((C28012 + C28011) * C1552 -
             ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
             (C28014 + C28013) * C50809) *
                C50985 +
            ((C28016 + C28015) * C1552 - (C28695 * C1549 + C28696 * C1551) +
             (C28018 + C28017) * C50809) *
                C50881) *
               C50907) *
              C50730 * C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C1551 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C1549 -
             (C28427 + C28428) * C1552 - (C28429 + C28430) * C50809) *
                C50985 +
            ((C25224 + C25225) * C1551 + (C25226 + C25227) * C1549 -
             (C28222 + C28221) * C1552 - (C28224 + C28223) * C50809) *
                C50881) *
               C33829 +
           (((C28428 + C28427) * C1551 + (C28430 + C28429) * C1549 -
             (C49711 * C404 + C50691 * C418 + C49718 * C403 + C50957 * C417) *
                 C1552 -
             (C49711 * C422 + C50691 * C434 + C49718 * C421 + C50957 * C433) *
                 C50809) *
                C50985 +
            ((C28221 + C28222) * C1551 + (C28223 + C28224) * C1549 -
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C1552 -
             (C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1721 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1717 -
            (C27999 + C28000) * C1722 - (C28001 + C28002) * C1718 +
            (C28003 + C28004) * C1723 + (C28005 + C28006) * C1719 -
            (C30405 + C30406) * C1724 - (C30407 + C30408) * C1720) *
               C50985 +
           ((C24882 + C24883) * C1721 + (C24884 + C24885) * C1717 -
            C28689 * C1722 - C28690 * C1718 + C29215 * C1723 + C29216 * C1719 -
            (C29228 + C29227) * C1724 - (C29230 + C29229) * C1720) *
               C50881) *
              C33829 +
          (((C28000 + C27999) * C1721 + (C28002 + C28001) * C1717 -
            (C28004 + C28003) * C1722 - (C28006 + C28005) * C1718 +
            (C30406 + C30405) * C1723 + (C30408 + C30407) * C1719 -
            (C49711 * C5401 + C50691 * C5404 + C49718 * C5400 +
             C50957 * C5403) *
                C1724 -
            (C49711 * C5406 + C50691 * C5410 + C49718 * C5405 +
             C50957 * C5409) *
                C1720) *
               C50985 +
           (C28691 * C1721 + C28692 * C1717 - C29217 * C1722 - C29218 * C1718 +
            (C29227 + C29228) * C1723 + (C29229 + C29230) * C1719 -
            (C49711 * C6404 + C50691 * C6406 + C49718 * C6405 +
             C50957 * C6407) *
                C1724 -
            (C49711 * C6408 + C50691 * C6410 + C49718 * C6409 +
             C50957 * C6411) *
                C1720) *
               C50881) *
              C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1972 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C51019 -
             (C27999 + C28000) * C1973 - (C28001 + C28002) * C51020 +
             (C28003 + C28004) * C1974 + (C28005 + C28006) * C1971) *
                C50985 +
            ((C24882 + C24883) * C1972 + (C24884 + C24885) * C51019 -
             C28689 * C1973 - C28690 * C51020 + C29215 * C1974 +
             C29216 * C1971) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C1972 + (C28002 + C28001) * C51019 -
             (C28004 + C28003) * C1973 - (C28006 + C28005) * C51020 +
             (C30406 + C30405) * C1974 + (C30408 + C30407) * C1971) *
                C50985 +
            (C28691 * C1972 + C28692 * C51019 - C29217 * C1973 -
             C29218 * C51020 + (C29227 + C29228) * C1974 +
             (C29229 + C29230) * C1971) *
                C50881) *
               C50907) *
              C50730 * C50964 +
          ((((C28007 + C28008) * C1973 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C51019 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1972) +
             (C28009 + C28010) * C51020 - (C28011 + C28012) * C1974 -
             (C28013 + C28014) * C1971) *
                C50985 +
            (C28693 * C1973 -
             ((C24897 + C24896) * C51019 + (C24895 + C24894) * C1972) +
             C28694 * C51020 - (C28015 + C28016) * C1974 -
             (C28017 + C28018) * C1971) *
                C50881) *
               C33829 +
           (((C28012 + C28011) * C1973 -
             ((C28010 + C28009) * C51019 + (C28008 + C28007) * C1972) +
             (C28014 + C28013) * C51020 -
             (C49711 * C1726 + C50691 * C1730 + C49718 * C1727 +
              C50957 * C1731) *
                 C1974 -
             (C49711 * C1734 + C50691 * C1738 + C49718 * C1735 +
              C50957 * C1739) *
                 C1971) *
                C50985 +
            ((C28016 + C28015) * C1973 - (C28695 * C51019 + C28696 * C1972) +
             (C28018 + C28017) * C51020 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C1974 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C1971) *
                C50881) *
               C50907) *
              C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C50985 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C50985 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C50730 * C900 +
          ((((C28007 + C28008) * C1552 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C1549 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1551) +
             (C28009 + C28010) * C50809) *
                C50985 +
            (C28693 * C1552 -
             ((C24897 + C24896) * C1549 + (C24895 + C24894) * C1551) +
             C28694 * C50809) *
                C50881) *
               C33829 +
           (((C28012 + C28011) * C1552 -
             ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
             (C28014 + C28013) * C50809) *
                C50985 +
            ((C28016 + C28015) * C1552 - (C28695 * C1549 + C28696 * C1551) +
             (C28018 + C28017) * C50809) *
                C50881) *
               C50907) *
              C50730 * C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C1551 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C1549 -
             (C28427 + C28428) * C1552 - (C28429 + C28430) * C50809) *
                C50985 +
            ((C25224 + C25225) * C1551 + (C25226 + C25227) * C1549 -
             (C28222 + C28221) * C1552 - (C28224 + C28223) * C50809) *
                C50881) *
               C33829 +
           (((C28428 + C28427) * C1551 + (C28430 + C28429) * C1549 -
             (C49711 * C404 + C50691 * C418 + C49718 * C403 + C50957 * C417) *
                 C1552 -
             (C49711 * C422 + C50691 * C434 + C49718 * C421 + C50957 * C433) *
                 C50809) *
                C50985 +
            ((C28221 + C28222) * C1551 + (C28223 + C28224) * C1549 -
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C1552 -
             (C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50809) *
                C50881) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C50985 +
            ((C24882 + C24883) * C1551 + (C24884 + C24885) * C1549 -
             C28689 * C1552 - C28690 * C50809) *
                C50881) *
               C33829 +
           (((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C50985 +
            (C28691 * C1551 + C28692 * C1549 - C29217 * C1552 -
             C29218 * C50809) *
                C50881) *
               C50907) *
              C248 +
          (((C28691 * C1552 -
             ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
             C28692 * C50809) *
                C50985 +
            (C29877 * C1552 -
             ((C24889 + C24888) * C1549 + (C24887 + C24886) * C1551) +
             C29878 * C50809) *
                C50881) *
               C33829 +
           ((C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
             C29216 * C50809) *
                C50985 +
            ((C26047 + C26048) * C1552 - (C26540 * C1549 + C26539 * C1551) +
             (C26049 + C26050) * C50809) *
                C50881) *
               C50907) *
              C249 +
          ((C26856 * C50985 +
            ((C24893 + C24892) * C1551 + (C24891 + C24890) * C1549 -
             (C26553 + C26552) * C1552 - (C26555 + C26554) * C50809) *
                C50881) *
               C33829 +
           ((C29877 * C1551 + C29878 * C1549 - (C26048 + C26047) * C1552 -
             (C26050 + C26049) * C50809) *
                C50985 +
            ((C26552 + C26553) * C1551 + (C26554 + C26555) * C1549 -
             (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
              C50957 * C3564) *
                 C1552 -
             (C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
              C50957 * C3568) *
                 C50809) *
                C50881) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C50985 +
             (C19915 + C19916) * C50881) *
                C51023 +
            ((C22199 * C121 + C22200 * C50745) * C50985 +
             (C21993 + C21994) * C50881) *
                C51024 +
            ((C22201 * C121 + C22202 * C50745) * C50985 +
             (C21995 + C21996) * C50881) *
                C44479) *
               C50972 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) *
                C51023) *
               C50781) *
              C51015 +
          ((((C19923 + C19924) * C50985 + (C19925 + C19926) * C50881) * C51023 +
            ((C22001 + C22002) * C50985 + (C22003 + C22004) * C50881) * C51024 +
            ((C22017 + C22018) * C50985 + (C22019 + C22020) * C50881) *
                C44479) *
               C50781 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C50985) *
                C44479 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C50985) *
                C51024 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C50985) *
                C51023) *
               C50972) *
              C51016 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C50985 +
             (C20149 + C20150) * C50881) *
                C51023 +
            ((C22531 * C121 + C22532 * C50745) * C50985 +
             (C22373 + C22374) * C50881) *
                C51024 +
            ((C22533 * C121 + C22534 * C50745) * C50985 +
             (C22375 + C22376) * C50881) *
                C44479) *
               C50972 -
           ((((C19767 * C2572 + C50686 * C2575) * C50745 +
              (C19767 * C2566 + C50686 * C2571) * C121) *
                 C50881 +
             (C22376 + C22375) * C50985) *
                C44479 +
            ((C31602 + C31601) * C50881 + (C22374 + C22373) * C50985) * C51024 +
            ((C20152 + C20151) * C50881 + (C20150 + C20149) * C50985) *
                C51023) *
               C50781) *
              C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C644 +
                       (C19767 * C133 + C50686 * C143) * C50973 -
                       C22199 * C645 - C22200 * C50809) *
                          C50985 +
                      (C20383 + C20384 - C20431 - C20432) * C50881) *
                         C51023 +
                     ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                       C22202 * C50809) *
                          C50985 +
                      (C22729 + C22730 - C22731 - C22732) * C50881) *
                         C51024 +
                     ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                       C22204 * C50809) *
                          C50985 +
                      (C22733 + C22734 - C22735 - C22736) * C50881) *
                         C44479) *
                        C50972 +
                    (((C20431 - (C20384 + C20383) + C20432) * C50985 +
                      (C20433 - (C20390 + C20389) + C20434) * C50881) *
                         C51023 +
                     ((C22731 - (C22730 + C22729) + C22732) * C50985 +
                      (C23653 - (C23654 + C23655) + C23656) * C50881) *
                         C51024 +
                     ((C22735 - (C22734 + C22733) + C22736) * C50985 +
                      (C23657 - (C23658 + C23659) + C23660) * C50881) *
                         C44479) *
                        C50781) *
                       C251 +
                   ((((C22207 * C645 -
                       ((C19767 * C134 + C50686 * C144) * C50973 +
                        (C19767 * C123 + C50686 * C130) * C644) +
                       C22208 * C50809) *
                          C50985 +
                      (C20437 - (C20403 + C20404) + C20438) * C50881) *
                         C51023 +
                     ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
                       C22210 * C50809) *
                          C50985 +
                      (C22737 - (C22738 + C22739) + C22740) * C50881) *
                         C51024 +
                     ((C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
                       C22212 * C50809) *
                          C50985 +
                      (C22741 - (C22742 + C22743) + C22744) * C50881) *
                         C44479) *
                        C50972 +
                    (((C20404 + C20403 - C20437 - C20438) * C50985 +
                      (C20410 + C20409 - C20439 - C20440) * C50881) *
                         C51023 +
                     ((C22739 + C22738 - C22737 - C22740) * C50985 +
                      (C31945 + C31944 - C31943 - C31946) * C50881) *
                         C51024 +
                     ((C22743 + C22742 - C22741 - C22744) * C50985 +
                      (C22015 * C644 + C22016 * C50973 -
                       (C19767 * C4507 + C50686 * C4513) * C645 -
                       (C19767 * C4515 + C50686 * C4519) * C50809) *
                          C50881) *
                         C44479) *
                        C50781) *
                       C50718)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C50985 +
             (C19915 + C19916) * C50881) *
                C51023 +
            ((C22199 * C121 + C22200 * C50745) * C50985 +
             (C21993 + C21994) * C50881) *
                C51024 +
            ((C22201 * C121 + C22202 * C50745) * C50985 +
             (C21995 + C21996) * C50881) *
                C44479) *
               C248 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) *
                C51023) *
               C249 +
           ((C19931 * C50985 + C19932 * C50881) * C51023 +
            (C31299 * C50985 + (C22989 + C22990) * C50881) * C51024 +
            ((C21998 + C21997) * C50985 + (C22991 + C22992) * C50881) *
                C44479) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C50985 + (C19925 + C19926) * C50881) * C51023 +
            ((C22001 + C22002) * C50985 + (C22003 + C22004) * C50881) * C51024 +
            ((C22017 + C22018) * C50985 + (C22019 + C22020) * C50881) *
                C44479) *
               C249 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C50985) *
                C44479 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C50985) *
                C51024 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C50985) *
                C51023) *
               C248 -
           ((((C19767 * C3565 + C50686 * C3567) * C50745 +
              (C19767 * C3561 + C50686 * C3563) * C121) *
                 C50881 +
             (C22020 + C22019) * C50985) *
                C44479 +
            ((C31301 + C31300) * C50881 + C31302 * C50985) * C51024 +
            (C19933 * C50881 + C19934 * C50985) * C51023) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50985 +
            (C19915 + C19916) * C50881) *
               C51023 +
           ((C22199 * C121 + C22200 * C50745) * C50985 +
            (C21993 + C21994) * C50881) *
               C51024 +
           ((C22201 * C121 + C22202 * C50745) * C50985 +
            (C21995 + C21996) * C50881) *
               C44479) *
              C50730 * C113 -
          (((C22018 + C22017) * C50881 +
            (C22210 * C50745 + C22209 * C121) * C50985) *
               C44479 +
           ((C22002 + C22001) * C50881 +
            (C22208 * C50745 + C22207 * C121) * C50985) *
               C51024 +
           ((C19924 + C19923) * C50881 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50985) *
               C51023) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C50985 +
            (C20149 + C20150) * C50881) *
               C51023 +
           ((C22531 * C121 + C22532 * C50745) * C50985 +
            (C22373 + C22374) * C50881) *
               C51024 +
           ((C22533 * C121 + C22534 * C50745) * C50985 +
            (C22375 + C22376) * C50881) *
               C44479) *
              C50730 * C115 -
          ((((C19767 * C1096 + C50686 * C1100) * C50745 +
             (C19767 * C1088 + C50686 * C1092) * C121) *
                C50881 +
            ((C19767 * C422 + C50686 * C434) * C50745 +
             (C19767 * C404 + C50686 * C418) * C121) *
                C50985) *
               C44479 +
           (((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C50881 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C50985) *
               C51024 +
           (((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C50881 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C50985) *
               C51023) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C50985 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C50881) *
               C51023 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C50985 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C50881) *
               C51024 +
           ((C22201 * C394 + C22202 * C391 - C22203 * C395 - C22204 * C392 +
             C24075 * C396 + C24076 * C393) *
                C50985 +
            (C23149 + C23150 - C23151 - C23152 + C23165 + C23166) * C50881) *
               C44479) *
              C50730 * C251 +
          (((C22207 * C395 -
             ((C19767 * C134 + C50686 * C144) * C391 +
              (C19767 * C123 + C50686 * C130) * C394) +
             C22208 * C392 - C22209 * C396 - C22210 * C393) *
                C50985 +
            (C20425 * C395 - (C19908 * C391 + C19907 * C394) + C20426 * C392 -
             C22013 * C396 - C22014 * C393) *
                C50881) *
               C51023 +
           ((C22209 * C395 - (C22208 * C391 + C22207 * C394) + C22210 * C392 -
             C22211 * C396 - C22212 * C393) *
                C50985 +
            (C22013 * C395 - (C20426 * C391 + C20425 * C394) + C22014 * C392 -
             C22213 * C396 - C22214 * C393) *
                C50881) *
               C51024 +
           ((C22211 * C395 - (C22210 * C391 + C22209 * C394) + C22212 * C392 -
             C39368 * C396 - C39369 * C393) *
                C50985 +
            (C22213 * C395 - (C22014 * C391 + C22013 * C394) + C22214 * C392 -
             (C19767 * C6404 + C50686 * C6406) * C396 -
             (C19767 * C6408 + C50686 * C6410) * C393) *
                C50881) *
               C44479) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C644 +
                      (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
                      C22200 * C50809) *
                         C50985 +
                     (C20383 + C20384 - C20431 - C20432) * C50881) *
                        C51023 +
                    ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                      C22202 * C50809) *
                         C50985 +
                     (C22729 + C22730 - C22731 - C22732) * C50881) *
                        C51024 +
                    ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                      C22204 * C50809) *
                         C50985 +
                     (C22733 + C22734 - C22735 - C22736) * C50881) *
                        C44479) *
                       C50730 * C51015 +
                   (((C22207 * C645 -
                      ((C19767 * C134 + C50686 * C144) * C50973 +
                       (C19767 * C123 + C50686 * C130) * C644) +
                      C22208 * C50809) *
                         C50985 +
                     (C20437 - (C20403 + C20404) + C20438) * C50881) *
                        C51023 +
                    ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
                      C22210 * C50809) *
                         C50985 +
                     (C22737 - (C22738 + C22739) + C22740) * C50881) *
                        C51024 +
                    ((C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
                      C22212 * C50809) *
                         C50985 +
                     (C22741 - (C22742 + C22743) + C22744) * C50881) *
                        C44479) *
                       C50730 * C51016 +
                   ((((C19767 * C124 + C50686 * C131) * C644 +
                      (C19767 * C135 + C50686 * C145) * C50973 - C22531 * C645 -
                      C22532 * C50809) *
                         C50985 +
                     (C20143 * C644 + C20144 * C50973 - C22369 * C645 -
                      C22370 * C50809) *
                         C50881) *
                        C51023 +
                    ((C22531 * C644 + C22532 * C50973 - C22533 * C645 -
                      C22534 * C50809) *
                         C50985 +
                     (C22369 * C644 + C22370 * C50973 - C22371 * C645 -
                      C22372 * C50809) *
                         C50881) *
                        C51024 +
                    ((C22533 * C644 + C22534 * C50973 - C39570 * C645 -
                      C39571 * C50809) *
                         C50985 +
                     (C22371 * C644 + C22372 * C50973 -
                      (C19767 * C5998 + C50686 * C5999) * C645 -
                      (C19767 * C6000 + C50686 * C6001) * C50809) *
                         C50881) *
                        C44479) *
                       C50730 * C539)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50985 +
            (C19915 + C19916) * C50881) *
               C51023 +
           ((C22199 * C121 + C22200 * C50745) * C50985 +
            (C21993 + C21994) * C50881) *
               C51024 +
           ((C22201 * C121 + C22202 * C50745) * C50985 +
            (C21995 + C21996) * C50881) *
               C44479) *
              C50730 * C113 -
          (((C22018 + C22017) * C50881 +
            (C22210 * C50745 + C22209 * C121) * C50985) *
               C44479 +
           ((C22002 + C22001) * C50881 +
            (C22208 * C50745 + C22207 * C121) * C50985) *
               C51024 +
           ((C19924 + C19923) * C50881 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50985) *
               C51023) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C50985 +
            (C20149 + C20150) * C50881) *
               C51023 +
           ((C22531 * C121 + C22532 * C50745) * C50985 +
            (C22373 + C22374) * C50881) *
               C51024 +
           ((C22533 * C121 + C22534 * C50745) * C50985 +
            (C22375 + C22376) * C50881) *
               C44479) *
              C50730 * C115 -
          ((((C19767 * C1096 + C50686 * C1100) * C50745 +
             (C19767 * C1088 + C50686 * C1092) * C121) *
                C50881 +
            ((C19767 * C422 + C50686 * C434) * C50745 +
             (C19767 * C404 + C50686 * C418) * C121) *
                C50985) *
               C44479 +
           (((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C50881 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C50985) *
               C51024 +
           (((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C50881 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C50985) *
               C51023) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C50985 +
             (C19915 + C19916) * C50881) *
                C51023 +
            ((C22199 * C121 + C22200 * C50745) * C50985 +
             (C21993 + C21994) * C50881) *
                C51024 +
            ((C22201 * C121 + C22202 * C50745) * C50985 +
             (C21995 + C21996) * C50881) *
                C44479) *
               C248 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) *
                C51023) *
               C249 +
           ((C19931 * C50985 + C19932 * C50881) * C51023 +
            (C31299 * C50985 + (C22989 + C22990) * C50881) * C51024 +
            ((C21998 + C21997) * C50985 + (C22991 + C22992) * C50881) *
                C44479) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C50985 + (C19925 + C19926) * C50881) * C51023 +
            ((C22001 + C22002) * C50985 + (C22003 + C22004) * C50881) * C51024 +
            ((C22017 + C22018) * C50985 + (C22019 + C22020) * C50881) *
                C44479) *
               C249 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C50985) *
                C44479 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C50985) *
                C51024 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C50985) *
                C51023) *
               C248 -
           ((((C19767 * C3565 + C50686 * C3567) * C50745 +
              (C19767 * C3561 + C50686 * C3563) * C121) *
                 C50881 +
             (C22020 + C22019) * C50985) *
                C44479 +
            ((C31301 + C31300) * C50881 + C31302 * C50985) * C51024 +
            (C19933 * C50881 + C19934 * C50985) * C51023) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C50985 +
             (C19915 + C19916) * C50881) *
                C51023 +
            ((C22199 * C121 + C22200 * C50745) * C50985 +
             (C21993 + C21994) * C50881) *
                C51024 +
            ((C22201 * C121 + C22202 * C50745) * C50985 +
             (C21995 + C21996) * C50881) *
                C44479) *
               C51017 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) *
                C51023) *
               C51018 +
           ((C19931 * C50985 + C19932 * C50881) * C51023 +
            (C31299 * C50985 + (C22989 + C22990) * C50881) * C51024 +
            ((C21998 + C21997) * C50985 + (C22991 + C22992) * C50881) *
                C44479) *
               C1204) *
              C50964 +
          ((((C19923 + C19924) * C50985 + (C19925 + C19926) * C50881) * C51023 +
            ((C22001 + C22002) * C50985 + (C22003 + C22004) * C50881) * C51024 +
            ((C22017 + C22018) * C50985 + (C22019 + C22020) * C50881) *
                C44479) *
               C51018 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C50985) *
                C44479 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C50985) *
                C51024 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C50985) *
                C51023) *
               C51017 -
           ((((C19767 * C3565 + C50686 * C3567) * C50745 +
              (C19767 * C3561 + C50686 * C3563) * C121) *
                 C50881 +
             (C22020 + C22019) * C50985) *
                C44479 +
            ((C31301 + C31300) * C50881 + C31302 * C50985) * C51024 +
            (C19933 * C50881 + C19934 * C50985) * C51023) *
               C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C50985 +
            (C20383 + C20384 - C20431 - C20432) * C50881) *
               C51023 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C50985 +
            (C22729 + C22730 - C22731 - C22732) * C50881) *
               C51024 +
           ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
             C22204 * C50809) *
                C50985 +
            (C22733 + C22734 - C22735 - C22736) * C50881) *
               C44479) *
              C51017 +
          (((C20431 - (C20384 + C20383) + C20432) * C50985 +
            (C20433 - (C20390 + C20389) + C20434) * C50881) *
               C51023 +
           ((C22731 - (C22730 + C22729) + C22732) * C50985 +
            (C23653 - (C23654 + C23655) + C23656) * C50881) *
               C51024 +
           ((C22735 - (C22734 + C22733) + C22736) * C50985 +
            (C23657 - (C23658 + C23659) + C23660) * C50881) *
               C44479) *
              C51018 +
          ((C21101 * C50985 + C21102 * C50881) * C51023 +
           (C32838 * C50985 + (C32835 + C32834 - C32833 - C32836) * C50881) *
               C51024 +
           ((C23659 + C23658 - C23657 - C23660) * C50985 +
            (C20751 * C644 + C20752 * C50973 -
             (C19767 * C21388 + C50686 * C21389) * C645 -
             (C19767 * C21390 + C50686 * C21391) * C50809) *
                C50881) *
               C44479) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50985 +
            (C19915 + C19916) * C50881) *
               C51023 +
           ((C22199 * C121 + C22200 * C50745) * C50985 +
            (C21993 + C21994) * C50881) *
               C51024 +
           ((C22201 * C121 + C22202 * C50745) * C50985 +
            (C21995 + C21996) * C50881) *
               C44479) *
              C969 -
          (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
           ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
           ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) * C51023) *
              C970 +
          ((C19931 * C50985 + C19932 * C50881) * C51023 +
           (C31299 * C50985 + (C22989 + C22990) * C50881) * C51024 +
           ((C21998 + C21997) * C50985 + (C22991 + C22992) * C50881) * C44479) *
              C971 -
          ((((C19767 * C20720 + C50686 * C20721) * C50745 +
             (C19767 * C20718 + C50686 * C20719) * C121) *
                C50881 +
            (C22992 + C22991) * C50985) *
               C44479 +
           ((C32193 + C32192) * C50881 + C32191 * C50985) * C51024 +
           (C20611 * C50881 + C20612 * C50985) * C51023) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C50985 +
             (C19915 + C19916) * C50881) *
                C51023 +
            ((C22199 * C121 + C22200 * C50745) * C50985 +
             (C21993 + C21994) * C50881) *
                C51024 +
            ((C22201 * C121 + C22202 * C50745) * C50985 +
             (C21995 + C21996) * C50881) *
                C44479) *
               C898 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) *
                C51023) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C50985 + (C19925 + C19926) * C50881) * C51023 +
            ((C22001 + C22002) * C50985 + (C22003 + C22004) * C50881) * C51024 +
            ((C22017 + C22018) * C50985 + (C22019 + C22020) * C50881) *
                C44479) *
               C50781 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C50985) *
                C44479 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C50985) *
                C51024 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C50985) *
                C51023) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C50985 +
             (C20149 + C20150) * C50881) *
                C51023 +
            ((C22531 * C121 + C22532 * C50745) * C50985 +
             (C22373 + C22374) * C50881) *
                C51024 +
            ((C22533 * C121 + C22534 * C50745) * C50985 +
             (C22375 + C22376) * C50881) *
                C44479) *
               C898 -
           ((((C19767 * C2572 + C50686 * C2575) * C50745 +
              (C19767 * C2566 + C50686 * C2571) * C121) *
                 C50881 +
             (C22376 + C22375) * C50985) *
                C44479 +
            ((C31602 + C31601) * C50881 + (C22374 + C22373) * C50985) * C51024 +
            ((C20152 + C20151) * C50881 + (C20150 + C20149) * C50985) *
                C51023) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C50985 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C50881) *
               C51023 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C50985 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C50881) *
               C51024 +
           ((C22201 * C394 + C22202 * C391 - C22203 * C395 - C22204 * C392 +
             C24075 * C396 + C24076 * C393) *
                C50985 +
            (C23149 + C23150 - C23151 - C23152 + C23165 + C23166) * C50881) *
               C44479) *
              C898 +
          (((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C50985 +
            (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C50881) *
               C51023 +
           ((C23145 - (C23144 + C23143) + C23146 - C23147 - C23148) * C50985 +
            (C32342 - (C32341 + C32340) + C32343 - C32344 - C32345) * C50881) *
               C51024 +
           ((C23151 - (C23150 + C23149) + C23152 - C23165 - C23166) * C50985 +
            (C23163 * C395 - (C20750 * C391 + C20749 * C394) + C23164 * C392 -
             (C19767 * C23138 + C50686 * C23139) * C396 -
             (C19767 * C23140 + C50686 * C23141) * C393) *
                C50881) *
               C44479) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C644 +
                       (C19767 * C133 + C50686 * C143) * C50973 -
                       C22199 * C645 - C22200 * C50809) *
                          C50985 +
                      (C20383 + C20384 - C20431 - C20432) * C50881) *
                         C51023 +
                     ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
                       C22202 * C50809) *
                          C50985 +
                      (C22729 + C22730 - C22731 - C22732) * C50881) *
                         C51024 +
                     ((C22201 * C644 + C22202 * C50973 - C22203 * C645 -
                       C22204 * C50809) *
                          C50985 +
                      (C22733 + C22734 - C22735 - C22736) * C50881) *
                         C44479) *
                        C898 +
                    (((C20431 - (C20384 + C20383) + C20432) * C50985 +
                      (C20433 - (C20390 + C20389) + C20434) * C50881) *
                         C51023 +
                     ((C22731 - (C22730 + C22729) + C22732) * C50985 +
                      (C23653 - (C23654 + C23655) + C23656) * C50881) *
                         C51024 +
                     ((C22735 - (C22734 + C22733) + C22736) * C50985 +
                      (C23657 - (C23658 + C23659) + C23660) * C50881) *
                         C44479) *
                        C50781) *
                       C50964 +
                   ((((C22207 * C645 -
                       ((C19767 * C134 + C50686 * C144) * C50973 +
                        (C19767 * C123 + C50686 * C130) * C644) +
                       C22208 * C50809) *
                          C50985 +
                      (C20437 - (C20403 + C20404) + C20438) * C50881) *
                         C51023 +
                     ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
                       C22210 * C50809) *
                          C50985 +
                      (C22737 - (C22738 + C22739) + C22740) * C50881) *
                         C51024 +
                     ((C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
                       C22212 * C50809) *
                          C50985 +
                      (C22741 - (C22742 + C22743) + C22744) * C50881) *
                         C44479) *
                        C898 +
                    (((C20404 + C20403 - C20437 - C20438) * C50985 +
                      (C20410 + C20409 - C20439 - C20440) * C50881) *
                         C51023 +
                     ((C22739 + C22738 - C22737 - C22740) * C50985 +
                      (C31945 + C31944 - C31943 - C31946) * C50881) *
                         C51024 +
                     ((C22743 + C22742 - C22741 - C22744) * C50985 +
                      (C22015 * C644 + C22016 * C50973 -
                       (C19767 * C4507 + C50686 * C4513) * C645 -
                       (C19767 * C4515 + C50686 * C4519) * C50809) *
                          C50881) *
                         C44479) *
                        C50781) *
                       C50718)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C50985 +
             (C19915 + C19916) * C50881) *
                C51023 +
            ((C22199 * C121 + C22200 * C50745) * C50985 +
             (C21993 + C21994) * C50881) *
                C51024 +
            ((C22201 * C121 + C22202 * C50745) * C50985 +
             (C21995 + C21996) * C50881) *
                C44479) *
               C898 -
           (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
            ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
            ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) *
                C51023) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C50985 + (C19925 + C19926) * C50881) * C51023 +
            ((C22001 + C22002) * C50985 + (C22003 + C22004) * C50881) * C51024 +
            ((C22017 + C22018) * C50985 + (C22019 + C22020) * C50881) *
                C44479) *
               C50781 -
           (((C22018 + C22017) * C50881 +
             (C22210 * C50745 + C22209 * C121) * C50985) *
                C44479 +
            ((C22002 + C22001) * C50881 +
             (C22208 * C50745 + C22207 * C121) * C50985) *
                C51024 +
            ((C19924 + C19923) * C50881 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C50985) *
                C51023) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C50985 +
             (C20149 + C20150) * C50881) *
                C51023 +
            ((C22531 * C121 + C22532 * C50745) * C50985 +
             (C22373 + C22374) * C50881) *
                C51024 +
            ((C22533 * C121 + C22534 * C50745) * C50985 +
             (C22375 + C22376) * C50881) *
                C44479) *
               C898 -
           ((((C19767 * C2572 + C50686 * C2575) * C50745 +
              (C19767 * C2566 + C50686 * C2571) * C121) *
                 C50881 +
             (C22376 + C22375) * C50985) *
                C44479 +
            ((C31602 + C31601) * C50881 + (C22374 + C22373) * C50985) * C51024 +
            ((C20152 + C20151) * C50881 + (C20150 + C20149) * C50985) *
                C51023) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50985 +
            (C19915 + C19916) * C50881) *
               C51023 +
           ((C22199 * C121 + C22200 * C50745) * C50985 +
            (C21993 + C21994) * C50881) *
               C51024 +
           ((C22201 * C121 + C22202 * C50745) * C50985 +
            (C21995 + C21996) * C50881) *
               C44479) *
              C969 -
          (((C21997 + C21998) * C50881 + (C21996 + C21995) * C50985) * C44479 +
           ((C21999 + C22000) * C50881 + (C21994 + C21993) * C50985) * C51024 +
           ((C19918 + C19917) * C50881 + (C19916 + C19915) * C50985) * C51023) *
              C970 +
          ((C19931 * C50985 + C19932 * C50881) * C51023 +
           (C31299 * C50985 + (C22989 + C22990) * C50881) * C51024 +
           ((C21998 + C21997) * C50985 + (C22991 + C22992) * C50881) * C44479) *
              C971 -
          ((((C19767 * C20720 + C50686 * C20721) * C50745 +
             (C19767 * C20718 + C50686 * C20719) * C121) *
                C50881 +
            (C22992 + C22991) * C50985) *
               C44479 +
           ((C32193 + C32192) * C50881 + C32191 * C50985) * C51024 +
           (C20611 * C50881 + C20612 * C50985) * C51023) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C1551 +
                       (C19767 * C133 + C50686 * C143) * C1549 -
                       C22199 * C1552 - C22200 * C50809) *
                          C50985 +
                      (C21301 + C21302 - C21303 - C21304) * C50881) *
                         C51023 +
                     ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
                       C22202 * C50809) *
                          C50985 +
                      (C23953 + C23954 - C23955 - C23956) * C50881) *
                         C51024 +
                     ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
                       C22204 * C50809) *
                          C50985 +
                      (C23957 + C23958 - C23959 - C23960) * C50881) *
                         C44479) *
                        C50972 +
                    (((C21303 - (C21302 + C21301) + C21304) * C50985 +
                      (C21307 - (C21306 + C21305) + C21308) * C50881) *
                         C51023 +
                     ((C23955 - (C23954 + C23953) + C23956) * C50985 +
                      (C23961 - (C23962 + C23963) + C23964) * C50881) *
                         C51024 +
                     ((C23959 - (C23958 + C23957) + C23960) * C50985 +
                      (C23965 - (C23966 + C23967) + C23968) * C50881) *
                         C44479) *
                        C50781) *
                       C50964 +
                   ((((C22207 * C1552 -
                       ((C19767 * C134 + C50686 * C144) * C1549 +
                        (C19767 * C123 + C50686 * C130) * C1551) +
                       C22208 * C50809) *
                          C50985 +
                      (C21523 - (C21524 + C21525) + C21526) * C50881) *
                         C51023 +
                     ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
                       C22210 * C50809) *
                          C50985 +
                      (C24271 - (C24272 + C24273) + C24274) * C50881) *
                         C51024 +
                     ((C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
                       C22212 * C50809) *
                          C50985 +
                      (C24275 - (C24276 + C24277) + C24278) * C50881) *
                         C44479) *
                        C50972 +
                    (((C21525 + C21524 - C21523 - C21526) * C50985 +
                      (C21529 + C21528 - C21527 - C21530) * C50881) *
                         C51023 +
                     ((C24273 + C24272 - C24271 - C24274) * C50985 +
                      (C33432 + C33431 - C33430 - C33433) * C50881) *
                         C51024 +
                     ((C24277 + C24276 - C24275 - C24278) * C50985 +
                      (C22015 * C1551 + C22016 * C1549 -
                       (C19767 * C4507 + C50686 * C4513) * C1552 -
                       (C19767 * C4515 + C50686 * C4519) * C50809) *
                          C50881) *
                         C44479) *
                        C50781) *
                       C50718)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C50985 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50881) *
               C51023 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C50985 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C50881) *
               C51024 +
           ((C22201 * C1972 + C22202 * C51019 - C22203 * C1973 -
             C22204 * C51020 + C24075 * C1974 + C24076 * C1971) *
                C50985 +
            (C24577 + C24578 - C24579 - C24580 + C24581 + C24582) * C50881) *
               C44479) *
              C50972 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C50985 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C50881) *
               C51023 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C50985 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C50881) *
               C51024 +
           ((C24579 - (C24578 + C24577) + C24580 - C24581 - C24582) * C50985 +
            (C23163 * C1973 - (C20750 * C51019 + C20749 * C1972) +
             C23164 * C51020 - (C19767 * C23138 + C50686 * C23139) * C1974 -
             (C19767 * C23140 + C50686 * C23141) * C1971) *
                C50881) *
               C44479) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C50985 +
            (C21301 + C21302 - C21303 - C21304) * C50881) *
               C51023 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C50985 +
            (C23953 + C23954 - C23955 - C23956) * C50881) *
               C51024 +
           ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C50985 +
            (C23957 + C23958 - C23959 - C23960) * C50881) *
               C44479) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C50985 +
            (C21307 - (C21306 + C21305) + C21308) * C50881) *
               C51023 +
           ((C23955 - (C23954 + C23953) + C23956) * C50985 +
            (C23961 - (C23962 + C23963) + C23964) * C50881) *
               C51024 +
           ((C23959 - (C23958 + C23957) + C23960) * C50985 +
            (C23965 - (C23966 + C23967) + C23968) * C50881) *
               C44479) *
              C249 +
          ((C21321 * C50985 + C21322 * C50881) * C51023 +
           (C33137 * C50985 + (C33134 + C33133 - C33132 - C33135) * C50881) *
               C51024 +
           ((C23967 + C23966 - C23965 - C23968) * C50985 +
            (C20751 * C1551 + C20752 * C1549 -
             (C19767 * C21388 + C50686 * C21389) * C1552 -
             (C19767 * C21390 + C50686 * C21391) * C50809) *
                C50881) *
               C44479) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C50985 +
            (C21301 + C21302 - C21303 - C21304) * C50881) *
               C51023 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C50985 +
            (C23953 + C23954 - C23955 - C23956) * C50881) *
               C51024 +
           ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C50985 +
            (C23957 + C23958 - C23959 - C23960) * C50881) *
               C44479) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C50985 +
            (C21523 - (C21524 + C21525) + C21526) * C50881) *
               C51023 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C50985 +
            (C24271 - (C24272 + C24273) + C24274) * C50881) *
               C51024 +
           ((C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
             C22212 * C50809) *
                C50985 +
            (C24275 - (C24276 + C24277) + C24278) * C50881) *
               C44479) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C50985 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C50881) *
               C51023 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C50985 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C50881) *
               C51024 +
           ((C22533 * C1551 + C22534 * C1549 - C39570 * C1552 -
             C39571 * C50809) *
                C50985 +
            (C22371 * C1551 + C22372 * C1549 -
             (C19767 * C5998 + C50686 * C5999) * C1552 -
             (C19767 * C6000 + C50686 * C6001) * C50809) *
                C50881) *
               C44479) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1721 +
            (C19767 * C133 + C50686 * C143) * C1717 - C22199 * C1722 -
            C22200 * C1718 + C22201 * C1723 + C22202 * C1719 - C22203 * C1724 -
            C22204 * C1720) *
               C50985 +
           (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 - C20420 * C1718 +
            C20747 * C1723 + C20748 * C1719 - C22205 * C1724 - C22206 * C1720) *
               C50881) *
              C51023 +
          ((C22199 * C1721 + C22200 * C1717 - C22201 * C1722 - C22202 * C1718 +
            C22203 * C1723 + C22204 * C1719 - C24075 * C1724 - C24076 * C1720) *
               C50985 +
           (C20419 * C1721 + C20420 * C1717 - C20747 * C1722 - C20748 * C1718 +
            C22205 * C1723 + C22206 * C1719 - C23161 * C1724 - C23162 * C1720) *
               C50881) *
              C51024 +
          ((C22201 * C1721 + C22202 * C1717 - C22203 * C1722 - C22204 * C1718 +
            C24075 * C1723 + C24076 * C1719 - C40560 * C1724 - C40561 * C1720) *
               C50985 +
           (C20747 * C1721 + C20748 * C1717 - C22205 * C1722 - C22206 * C1718 +
            C23161 * C1723 + C23162 * C1719 -
            (C19767 * C24066 + C50686 * C24067) * C1724 -
            (C19767 * C24068 + C50686 * C24069) * C1720) *
               C50881) *
              C44479) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C50985 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50881) *
               C51023 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C50985 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C50881) *
               C51024 +
           ((C22201 * C1972 + C22202 * C51019 - C22203 * C1973 -
             C22204 * C51020 + C24075 * C1974 + C24076 * C1971) *
                C50985 +
            (C24577 + C24578 - C24579 - C24580 + C24581 + C24582) * C50881) *
               C44479) *
              C50730 * C50964 +
          (((C22207 * C1973 -
             ((C19767 * C134 + C50686 * C144) * C51019 +
              (C19767 * C123 + C50686 * C130) * C1972) +
             C22208 * C51020 - C22209 * C1974 - C22210 * C1971) *
                C50985 +
            (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
             C20426 * C51020 - C22013 * C1974 - C22014 * C1971) *
                C50881) *
               C51023 +
           ((C22209 * C1973 - (C22208 * C51019 + C22207 * C1972) +
             C22210 * C51020 - C22211 * C1974 - C22212 * C1971) *
                C50985 +
            (C22013 * C1973 - (C20426 * C51019 + C20425 * C1972) +
             C22014 * C51020 - C22213 * C1974 - C22214 * C1971) *
                C50881) *
               C51024 +
           ((C22211 * C1973 - (C22210 * C51019 + C22209 * C1972) +
             C22212 * C51020 - C39368 * C1974 - C39369 * C1971) *
                C50985 +
            (C22213 * C1973 - (C22014 * C51019 + C22013 * C1972) +
             C22214 * C51020 - (C19767 * C6404 + C50686 * C6406) * C1974 -
             (C19767 * C6408 + C50686 * C6410) * C1971) *
                C50881) *
               C44479) *
              C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C50985 +
            (C21301 + C21302 - C21303 - C21304) * C50881) *
               C51023 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C50985 +
            (C23953 + C23954 - C23955 - C23956) * C50881) *
               C51024 +
           ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C50985 +
            (C23957 + C23958 - C23959 - C23960) * C50881) *
               C44479) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C50985 +
            (C21523 - (C21524 + C21525) + C21526) * C50881) *
               C51023 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C50985 +
            (C24271 - (C24272 + C24273) + C24274) * C50881) *
               C51024 +
           ((C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
             C22212 * C50809) *
                C50985 +
            (C24275 - (C24276 + C24277) + C24278) * C50881) *
               C44479) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C50985 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C50881) *
               C51023 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C50985 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C50881) *
               C51024 +
           ((C22533 * C1551 + C22534 * C1549 - C39570 * C1552 -
             C39571 * C50809) *
                C50985 +
            (C22371 * C1551 + C22372 * C1549 -
             (C19767 * C5998 + C50686 * C5999) * C1552 -
             (C19767 * C6000 + C50686 * C6001) * C50809) *
                C50881) *
               C44479) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C50985 +
            (C21301 + C21302 - C21303 - C21304) * C50881) *
               C51023 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C50985 +
            (C23953 + C23954 - C23955 - C23956) * C50881) *
               C51024 +
           ((C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C50985 +
            (C23957 + C23958 - C23959 - C23960) * C50881) *
               C44479) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C50985 +
            (C21307 - (C21306 + C21305) + C21308) * C50881) *
               C51023 +
           ((C23955 - (C23954 + C23953) + C23956) * C50985 +
            (C23961 - (C23962 + C23963) + C23964) * C50881) *
               C51024 +
           ((C23959 - (C23958 + C23957) + C23960) * C50985 +
            (C23965 - (C23966 + C23967) + C23968) * C50881) *
               C44479) *
              C249 +
          ((C21321 * C50985 + C21322 * C50881) * C51023 +
           (C33137 * C50985 + (C33134 + C33133 - C33132 - C33135) * C50881) *
               C51024 +
           ((C23967 + C23966 - C23965 - C23968) * C50985 +
            (C20751 * C1551 + C20752 * C1549 -
             (C19767 * C21388 + C50686 * C21389) * C1552 -
             (C19767 * C21390 + C50686 * C21391) * C50809) *
                C50881) *
               C44479) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[180] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C121 +
                       (C19767 * C133 + C50686 * C143) * C50745) *
                          C2173 +
                      (C19915 + C19916) * C2174 + C19931 * C2175) *
                         C33829 +
                     ((C22199 * C121 + C22200 * C50745) * C2173 +
                      (C21993 + C21994) * C2174 + C31299 * C2175) *
                         C50907) *
                        C50972 -
                    ((C32191 * C2175 + (C21999 + C22000) * C2174 +
                      (C21994 + C21993) * C2173) *
                         C50907 +
                     (C20612 * C2175 + (C19918 + C19917) * C2174 +
                      (C19916 + C19915) * C2173) *
                         C33829) *
                        C50781) *
                       C51015 +
                   ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
                      (C19927 + C19928) * C2175) *
                         C33829 +
                     ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
                      (C31300 + C31301) * C2175) *
                         C50907) *
                        C50781 -
                    ((C31302 * C2175 + (C22002 + C22001) * C2174 +
                      (C22208 * C50745 + C22207 * C121) * C2173) *
                         C50907 +
                     (C19934 * C2175 + (C19924 + C19923) * C2174 +
                      ((C19767 * C134 + C50686 * C144) * C50745 +
                       (C19767 * C123 + C50686 * C130) * C121) *
                          C2173) *
                         C33829) *
                        C50972) *
                       C51016 +
                   (((((C19767 * C124 + C50686 * C131) * C121 +
                       (C19767 * C135 + C50686 * C145) * C50745) *
                          C2173 +
                      (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
                         C33829 +
                     ((C22531 * C121 + C22532 * C50745) * C2173 +
                      (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
                         C50907) *
                        C50972 -
                    ((((C19767 * C3094 + C50686 * C3097) * C50745 +
                       (C19767 * C3088 + C50686 * C3093) * C121) *
                          C2175 +
                      (C31602 + C31601) * C2174 + (C22374 + C22373) * C2173) *
                         C50907 +
                     ((C20154 + C20153) * C2175 + (C20152 + C20151) * C2174 +
                      (C20150 + C20149) * C2173) *
                         C33829) *
                        C50781) *
                       C539)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C121 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50745) *
                         C50831 * C33829 +
                     ((C34174 + C34173 + C34172) * C121 +
                      (C34177 + C34176 + C34175) * C50745) *
                         C50831 * C50907) *
                        C50972 -
                    (((C17882 + C17883 + C17884) * C50745 +
                      (C17879 + C17880 + C17881) * C121) *
                         C50831 * C50907 +
                     ((C17186 + C17185 + C17184) * C50745 +
                      (C17183 + C17182 + C17181) * C121) *
                         C50831 * C33829) *
                        C50781) *
                       C51015 +
                   ((((C17193 + C17194 + C17195) * C121 +
                      (C17196 + C17197 + C17198) * C50745) *
                         C50831 * C33829 +
                     ((C17885 + C17886 + C17887) * C121 +
                      (C17888 + C17889 + C17890) * C50745) *
                         C50831 * C50907) *
                        C50781 -
                    (((C34189 + C34188 + C34187) * C50745 +
                      (C34186 + C34185 + C34184) * C121) *
                         C50831 * C50907 +
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50745 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C121) *
                         C50831 * C33829) *
                        C50972) *
                       C51016 +
                   ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                       C16979 * C132 + C16985 * C126 + C16980 * C138) *
                          C121 +
                      (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                       C16979 * C146 + C16985 * C137 + C16980 * C147) *
                          C50745) *
                         C50831 * C33829 +
                     ((C16983 * C398 + C16978 * C408 + C16984 * C397 +
                       C16979 * C407 + C16985 * C405 + C16980 * C423) *
                          C121 +
                      (C16983 * C412 + C16978 * C428 + C16984 * C411 +
                       C16979 * C427 + C16985 * C424 + C16980 * C435) *
                          C50745) *
                         C50831 * C50907) *
                        C50972 -
                    (((C16985 * C794 + C16980 * C799 + C16984 * C792 +
                       C16979 * C798 + C16983 * C791 + C16978 * C797) *
                          C50745 +
                      (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                       C16979 * C788 + C16983 * C782 + C16978 * C787) *
                          C121) *
                         C50831 * C50907 +
                     ((C17514 + C17513 + C17512) * C50745 +
                      (C17511 + C17510 + C17509) * C121) *
                         C50831 * C33829) *
                        C50781) *
                       C539)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50686 * C129) * C121 +
                      (C19767 * C133 + C50686 * C143) * C50745) *
                         C50831 * C39163 +
                     (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
                     (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
                     (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
                        C50972 -
                    ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
                     (C21996 + C21995) * C50831 * C39165 +
                     (C21994 + C21993) * C50831 * C39164 +
                     (C19916 + C19915) * C50831 * C39163) *
                        C50781) *
                       C51015 +
                   (((C19923 + C19924) * C50831 * C39163 +
                     (C22001 + C22002) * C50831 * C39164 +
                     (C22017 + C22018) * C50831 * C39165 +
                     (C22213 * C121 + C22214 * C50745) * C50831 * C39166) *
                        C50781 -
                    ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
                     (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
                     (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
                     ((C19767 * C134 + C50686 * C144) * C50745 +
                      (C19767 * C123 + C50686 * C130) * C121) *
                         C50831 * C39163) *
                        C50972) *
                       C51016 +
                   ((((C19767 * C124 + C50686 * C131) * C121 +
                      (C19767 * C135 + C50686 * C145) * C50745) *
                         C50831 * C39163 +
                     (C22531 * C121 + C22532 * C50745) * C50831 * C39164 +
                     (C22533 * C121 + C22534 * C50745) * C50831 * C39165 +
                     ((C19767 * C1726 + C50686 * C1730) * C121 +
                      (C19767 * C1734 + C50686 * C1738) * C50745) *
                         C50831 * C39166) *
                        C50972 -
                    (((C19767 * C6000 + C50686 * C6001) * C50745 +
                      (C19767 * C5998 + C50686 * C5999) * C121) *
                         C50831 * C39166 +
                     (C22376 + C22375) * C50831 * C39165 +
                     (C22374 + C22373) * C50831 * C39164 +
                     (C20150 + C20149) * C50831 * C39163) *
                        C50781) *
                       C539)) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C644 +
              (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
              C22200 * C50809) *
                 C2173 +
             (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
                C33829 +
            ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
              C22202 * C50809) *
                 C2173 +
             (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
                C50907) *
               C50972 +
           (((C20431 - (C20384 + C20383) + C20432) * C2173 +
             (C20433 - (C20390 + C20389) + C20434) * C2174 +
             (C20435 - (C20396 + C20395) + C20436) * C2175) *
                C33829 +
            ((C22731 - (C22730 + C22729) + C22732) * C2173 +
             (C23653 - (C23654 + C23655) + C23656) * C2174 +
             (C32833 - (C32834 + C32835) + C32836) * C2175) *
                C50907) *
               C50781) *
              C251 +
          ((((C22207 * C645 -
              ((C19767 * C134 + C50686 * C144) * C50973 +
               (C19767 * C123 + C50686 * C130) * C644) +
              C22208 * C50809) *
                 C2173 +
             (C20437 - (C20403 + C20404) + C20438) * C2174 +
             (C20439 - (C20409 + C20410) + C20440) * C2175) *
                C33829 +
            ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
              C22210 * C50809) *
                 C2173 +
             (C22737 - (C22738 + C22739) + C22740) * C2174 +
             (C31943 - (C31944 + C31945) + C31946) * C2175) *
                C50907) *
               C50972 +
           (((C20404 + C20403 - C20437 - C20438) * C2173 +
             (C20410 + C20409 - C20439 - C20440) * C2174 +
             (C20416 + C20415 - C20441 - C20442) * C2175) *
                C33829 +
            ((C22739 + C22738 - C22737 - C22740) * C2173 +
             (C31945 + C31944 - C31943 - C31946) * C2174 +
             (C20429 * C644 + C20430 * C50973 -
              (C19767 * C3561 + C50686 * C3563) * C645 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C2175) *
                C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C644 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50973 -
             (C34172 + C34173 + C34174) * C645 -
             (C34175 + C34176 + C34177) * C50809) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C644 +
             (C34177 + C34176 + C34175) * C50973 -
             (C34180 + C34179 + C34178) * C645 -
             (C34183 + C34182 + C34181) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17881 + C17880 + C17879) * C645 -
             ((C17186 + C17185 + C17184) * C50973 +
              (C17183 + C17182 + C17181) * C644) +
             (C17884 + C17883 + C17882) * C50809) *
                C50831 * C33829 +
            ((C18311 + C18312 + C18313) * C645 -
             ((C17882 + C17883 + C17884) * C50973 +
              (C17879 + C17880 + C17881) * C644) +
             (C18314 + C18315 + C18316) * C50809) *
                C50831 * C50907) *
               C50781) *
              C251 +
          ((((C34184 + C34185 + C34186) * C645 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C50973 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C644) +
             (C34187 + C34188 + C34189) * C50809) *
                C50831 * C33829 +
            ((C34192 + C34191 + C34190) * C645 -
             ((C34189 + C34188 + C34187) * C50973 +
              (C34186 + C34185 + C34184) * C644) +
             (C34195 + C34194 + C34193) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17193 + C17194 + C17195) * C644 +
             (C17196 + C17197 + C17198) * C50973 -
             (C17887 + C17886 + C17885) * C645 -
             (C17890 + C17889 + C17888) * C50809) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C644 +
             (C17888 + C17889 + C17890) * C50973 -
             (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 +
              C16979 * C1093 + C16983 * C1090 + C16978 * C1094) *
                 C645 -
             (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 +
              C16979 * C1101 + C16983 * C1098 + C16978 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C50831 * C39163 +
            (C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C50831 * C39164 +
            (C22201 * C644 + C22202 * C50973 - C22203 * C645 -
             C22204 * C50809) *
                C50831 * C39165 +
            (C22203 * C644 + C22204 * C50973 - C24075 * C645 -
             C24076 * C50809) *
                C50831 * C39166) *
               C50972 +
           ((C20431 - (C20384 + C20383) + C20432) * C50831 * C39163 +
            (C22731 - (C22730 + C22729) + C22732) * C50831 * C39164 +
            (C22735 - (C22734 + C22733) + C22736) * C50831 * C39165 +
            (C23161 * C645 - (C22206 * C50973 + C22205 * C644) +
             C23162 * C50809) *
                C50831 * C39166) *
               C50781) *
              C251 +
          (((C22207 * C645 -
             ((C19767 * C134 + C50686 * C144) * C50973 +
              (C19767 * C123 + C50686 * C130) * C644) +
             C22208 * C50809) *
                C50831 * C39163 +
            (C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
             C22210 * C50809) *
                C50831 * C39164 +
            (C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
             C22212 * C50809) *
                C50831 * C39165 +
            (C39368 * C645 - (C22212 * C50973 + C22211 * C644) +
             C39369 * C50809) *
                C50831 * C39166) *
               C50972 +
           ((C20404 + C20403 - C20437 - C20438) * C50831 * C39163 +
            (C22739 + C22738 - C22737 - C22740) * C50831 * C39164 +
            (C22743 + C22742 - C22741 - C22744) * C50831 * C39165 +
            (C22213 * C644 + C22214 * C50973 -
             (C19767 * C6404 + C50686 * C6406) * C645 -
             (C19767 * C6408 + C50686 * C6410) * C50809) *
                C50831 * C39166) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50745) *
                   C50831 * C33829 +
               ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
                 C16985 * C398 + C16980 * C408) *
                    C121 +
                (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
                 C16985 * C412 + C16980 * C428) *
                    C50745) *
                   C50831 * C50907) *
                  C50730 * C113 -
              (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
                 C16983 * C413 + C16978 * C429) *
                    C50745 +
                (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
                 C16983 * C399 + C16978 * C409) *
                    C121) *
                   C50831 * C50907 +
               ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
                 C16983 * C134 + C16978 * C144) *
                    C50745 +
                (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
                 C16983 * C123 + C16978 * C130) *
                    C121) *
                   C50831 * C33829) *
                  C50730 * C114 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C121 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C50745) *
                   C50831 * C33829 +
               ((C16983 * C398 + C16978 * C408 + C16984 * C397 + C16979 * C407 +
                 C16985 * C405 + C16980 * C423) *
                    C121 +
                (C16983 * C412 + C16978 * C428 + C16984 * C411 + C16979 * C427 +
                 C16985 * C424 + C16980 * C435) *
                    C50745) *
                   C50831 * C50907) *
                  C50730 * C115 -
              (((C16985 * C648 + C16980 * C649 + C16984 * C424 + C16979 * C435 +
                 C16983 * C411 + C16978 * C427) *
                    C50745 +
                (C16985 * C646 + C16980 * C647 + C16984 * C405 + C16979 * C423 +
                 C16983 * C397 + C16978 * C407) *
                    C121) *
                   C50831 * C50907 +
               ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
                 C16983 * C136 + C16978 * C146) *
                    C50745 +
                (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
                 C16983 * C125 + C16978 * C132) *
                    C121) *
                   C50831 * C33829) *
                  C50730 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50745) *
                    C50831 * C33829 +
                ((C16983 * C400 + C16978 * C410 + C16984 * C399 +
                  C16979 * C409 + C16985 * C398 + C16980 * C408) *
                     C121 +
                 (C16983 * C414 + C16978 * C430 + C16984 * C413 +
                  C16979 * C429 + C16985 * C412 + C16980 * C428) *
                     C50745) *
                    C50831 * C50907) *
                   C248 -
               (((C17882 + C17883 + C17884) * C50745 +
                 (C17879 + C17880 + C17881) * C121) *
                    C50831 * C50907 +
                ((C17186 + C17185 + C17184) * C50745 +
                 (C17183 + C17182 + C17181) * C121) *
                    C50831 * C33829) *
                   C249 +
               (((C17192 + C17191 + C17190) * C121 +
                 (C17189 + C17188 + C17187) * C50745) *
                    C50831 * C33829 +
                ((C18815 + C18816 + C18817) * C121 +
                 (C18818 + C18819 + C18820) * C50745) *
                    C50831 * C50907) *
                   C250) *
                  C251 +
              ((((C17193 + C17194 + C17195) * C121 +
                 (C17196 + C17197 + C17198) * C50745) *
                    C50831 * C33829 +
                ((C17885 + C17886 + C17887) * C121 +
                 (C17888 + C17889 + C17890) * C50745) *
                    C50831 * C50907) *
                   C249 -
               (((C16985 * C411 + C16980 * C427 + C16984 * C412 +
                  C16979 * C428 + C16983 * C413 + C16978 * C429) *
                     C50745 +
                 (C16985 * C397 + C16980 * C407 + C16984 * C398 +
                  C16979 * C408 + C16983 * C399 + C16978 * C409) *
                     C121) *
                    C50831 * C50907 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50745 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C50831 * C33829) *
                   C248 -
               (((C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
                  C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                     C50745 +
                 (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
                  C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                     C121) *
                    C50831 * C50907 +
                ((C17204 + C17203 + C17202) * C50745 +
                 (C17201 + C17200 + C17199) * C121) *
                    C50831 * C33829) *
                   C250) *
                  C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C34172 + C34173 + C34174) * C395 -
            (C34175 + C34176 + C34177) * C392 +
            (C34178 + C34179 + C34180) * C396 +
            (C34181 + C34182 + C34183) * C393) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C394 +
            (C34177 + C34176 + C34175) * C391 -
            (C34180 + C34179 + C34178) * C395 -
            (C34183 + C34182 + C34181) * C392 +
            (C16983 * C1728 + C16978 * C1732 + C16984 * C1727 + C16979 * C1731 +
             C16985 * C1726 + C16980 * C1730) *
                C396 +
            (C16983 * C1736 + C16978 * C1740 + C16984 * C1735 + C16979 * C1739 +
             C16985 * C1734 + C16980 * C1738) *
                C393) *
               C50831 * C50907) *
              C50730 * C251 +
          (((C34184 + C34185 + C34186) * C395 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C391 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C394) +
            (C34187 + C34188 + C34189) * C392 -
            (C34190 + C34191 + C34192) * C396 -
            (C34193 + C34194 + C34195) * C393) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C395 -
            ((C34189 + C34188 + C34187) * C391 +
             (C34186 + C34185 + C34184) * C394) +
            (C34195 + C34194 + C34193) * C392 -
            (C16985 * C1725 + C16980 * C1729 + C16984 * C1726 + C16979 * C1730 +
             C16983 * C1727 + C16978 * C1731) *
                C396 -
            (C16985 * C1733 + C16980 * C1737 + C16984 * C1734 + C16979 * C1738 +
             C16983 * C1735 + C16978 * C1739) *
                C393) *
               C50831 * C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C50730 * C113 -
          ((C31302 * C2175 + (C22002 + C22001) * C2174 +
            (C22208 * C50745 + C22207 * C121) * C2173) *
               C50907 +
           (C19934 * C2175 + (C19924 + C19923) * C2174 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C2173) *
               C33829) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C2173 +
            (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
               C33829 +
           ((C22531 * C121 + C22532 * C50745) * C2173 +
            (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
               C50907) *
              C50730 * C115 -
          ((((C19767 * C1443 + C50686 * C1447) * C50745 +
             (C19767 * C1435 + C50686 * C1439) * C121) *
                C2175 +
            ((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C2174 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C2173) *
               C50907 +
           (((C19767 * C278 + C50686 * C290) * C50745 +
             (C19767 * C260 + C50686 * C274) * C121) *
                C2175 +
            ((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C2174 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C2173) *
               C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C248 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C249 +
           ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
                C33829 +
            (C31299 * C2173 + (C22989 + C22990) * C2174 +
             (C32192 + C32193) * C2175) *
                C50907) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C249 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C248 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C2175 +
             (C31301 + C31300) * C2174 + C31302 * C2173) *
                C50907 +
            ((C19930 + C19929) * C2175 + C19933 * C2174 + C19934 * C2173) *
                C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C2173 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C2174 +
            (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C2175) *
               C33829 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C2173 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C2174 +
            (C32340 + C32341 - C32342 - C32343 + C32344 + C32345) * C2175) *
               C50907) *
              C50730 * C251 +
          (((C22207 * C395 -
             ((C19767 * C134 + C50686 * C144) * C391 +
              (C19767 * C123 + C50686 * C130) * C394) +
             C22208 * C392 - C22209 * C396 - C22210 * C393) *
                C2173 +
            (C20425 * C395 - (C19908 * C391 + C19907 * C394) + C20426 * C392 -
             C22013 * C396 - C22014 * C393) *
                C2174 +
            (C20427 * C395 - (C19910 * C391 + C19909 * C394) + C20428 * C392 -
             C22015 * C396 - C22016 * C393) *
                C2175) *
               C33829 +
           ((C22209 * C395 - (C22208 * C391 + C22207 * C394) + C22210 * C392 -
             C22211 * C396 - C22212 * C393) *
                C2173 +
            (C22013 * C395 - (C20426 * C391 + C20425 * C394) + C22014 * C392 -
             C22213 * C396 - C22214 * C393) *
                C2174 +
            (C22015 * C395 - (C20428 * C391 + C20427 * C394) + C22016 * C392 -
             (C19767 * C4507 + C50686 * C4513) * C396 -
             (C19767 * C4515 + C50686 * C4519) * C393) *
                C2175) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C50831 * C39163 +
           (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
           (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
           (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
              C50730 * C113 -
          ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
           (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
           (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
           ((C19767 * C134 + C50686 * C144) * C50745 +
            (C19767 * C123 + C50686 * C130) * C121) *
               C50831 * C39163) *
              C50730 * C114 +
          (((C19767 * C124 + C50686 * C131) * C121 +
            (C19767 * C135 + C50686 * C145) * C50745) *
               C50831 * C39163 +
           (C22531 * C121 + C22532 * C50745) * C50831 * C39164 +
           (C22533 * C121 + C22534 * C50745) * C50831 * C39165 +
           ((C19767 * C1726 + C50686 * C1730) * C121 +
            (C19767 * C1734 + C50686 * C1738) * C50745) *
               C50831 * C39166) *
              C50730 * C115 -
          (((C19767 * C1733 + C50686 * C1737) * C50745 +
            (C19767 * C1725 + C50686 * C1729) * C121) *
               C50831 * C39166 +
           ((C19767 * C422 + C50686 * C434) * C50745 +
            (C19767 * C404 + C50686 * C418) * C121) *
               C50831 * C39165 +
           ((C19767 * C411 + C50686 * C427) * C50745 +
            (C19767 * C397 + C50686 * C407) * C121) *
               C50831 * C39164 +
           ((C19767 * C136 + C50686 * C146) * C50745 +
            (C19767 * C125 + C50686 * C132) * C121) *
               C50831 * C39163) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50831 * C39163 +
            (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
            (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
            (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
               C248 -
           ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
            (C21996 + C21995) * C50831 * C39165 +
            (C21994 + C21993) * C50831 * C39164 +
            (C19916 + C19915) * C50831 * C39163) *
               C249 +
           (C19931 * C50831 * C39163 + C31299 * C50831 * C39164 +
            (C21998 + C21997) * C50831 * C39165 +
            (C23163 * C121 + C23164 * C50745) * C50831 * C39166) *
               C250) *
              C251 +
          (((C19923 + C19924) * C50831 * C39163 +
            (C22001 + C22002) * C50831 * C39164 +
            (C22017 + C22018) * C50831 * C39165 +
            (C22213 * C121 + C22214 * C50745) * C50831 * C39166) *
               C249 -
           ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
            (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
            (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50831 * C39163) *
               C248 -
           (((C19767 * C4515 + C50686 * C4519) * C50745 +
             (C19767 * C4507 + C50686 * C4513) * C121) *
                C50831 * C39166 +
            (C22020 + C22019) * C50831 * C39165 + C31302 * C50831 * C39164 +
            C19934 * C50831 * C39163) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C394 +
            (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
            C22200 * C392 + C22201 * C396 + C22202 * C393) *
               C50831 * C39163 +
           (C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
            C22203 * C396 + C22204 * C393) *
               C50831 * C39164 +
           (C22201 * C394 + C22202 * C391 - C22203 * C395 - C22204 * C392 +
            C24075 * C396 + C24076 * C393) *
               C50831 * C39165 +
           (C22203 * C394 + C22204 * C391 - C24075 * C395 - C24076 * C392 +
            (C19767 * C7303 + C50686 * C7305) * C396 +
            (C19767 * C7307 + C50686 * C7309) * C393) *
               C50831 * C39166) *
              C50730 * C251 +
          ((C22207 * C395 -
            ((C19767 * C134 + C50686 * C144) * C391 +
             (C19767 * C123 + C50686 * C130) * C394) +
            C22208 * C392 - C22209 * C396 - C22210 * C393) *
               C50831 * C39163 +
           (C22209 * C395 - (C22208 * C391 + C22207 * C394) + C22210 * C392 -
            C22211 * C396 - C22212 * C393) *
               C50831 * C39164 +
           (C22211 * C395 - (C22210 * C391 + C22209 * C394) + C22212 * C392 -
            C39368 * C396 - C39369 * C393) *
               C50831 * C39165 +
           (C39368 * C395 - (C22212 * C391 + C22211 * C394) + C39369 * C392 -
            (C19767 * C7302 + C50686 * C7304) * C396 -
            (C19767 * C7306 + C50686 * C7308) * C393) *
               C50831 * C39166) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C2173 +
            (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
               C33829 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C2173 +
            (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
               C50907) *
              C50730 * C51015 +
          (((C22207 * C645 -
             ((C19767 * C134 + C50686 * C144) * C50973 +
              (C19767 * C123 + C50686 * C130) * C644) +
             C22208 * C50809) *
                C2173 +
            (C20437 - (C20403 + C20404) + C20438) * C2174 +
            (C20439 - (C20409 + C20410) + C20440) * C2175) *
               C33829 +
           ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
             C22210 * C50809) *
                C2173 +
            (C22737 - (C22738 + C22739) + C22740) * C2174 +
            (C31943 - (C31944 + C31945) + C31946) * C2175) *
               C50907) *
              C50730 * C51016 +
          ((((C19767 * C124 + C50686 * C131) * C644 +
             (C19767 * C135 + C50686 * C145) * C50973 - C22531 * C645 -
             C22532 * C50809) *
                C2173 +
            (C20143 * C644 + C20144 * C50973 - C22369 * C645 -
             C22370 * C50809) *
                C2174 +
            (C20145 * C644 + C20146 * C50973 - C31599 * C645 -
             C31600 * C50809) *
                C2175) *
               C33829 +
           ((C22531 * C644 + C22532 * C50973 - C22533 * C645 -
             C22534 * C50809) *
                C2173 +
            (C22369 * C644 + C22370 * C50973 - C22371 * C645 -
             C22372 * C50809) *
                C2174 +
            (C31599 * C644 + C31600 * C50973 -
             (C19767 * C2566 + C50686 * C2571) * C645 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C2175) *
               C50907) *
              C50730 * C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C644 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50973 -
            (C34172 + C34173 + C34174) * C645 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C644 +
            (C34177 + C34176 + C34175) * C50973 -
            (C34180 + C34179 + C34178) * C645 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C50730 * C51015 +
          (((C34184 + C34185 + C34186) * C645 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50973 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C644) +
            (C34187 + C34188 + C34189) * C50809) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C645 -
            ((C34189 + C34188 + C34187) * C50973 +
             (C34186 + C34185 + C34184) * C644) +
            (C34195 + C34194 + C34193) * C50809) *
               C50831 * C50907) *
              C50730 * C51016 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C644 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50973 -
            (C34500 + C34501 + C34502) * C645 -
            (C34503 + C34504 + C34505) * C50809) *
               C50831 * C33829 +
           ((C34502 + C34501 + C34500) * C644 +
            (C34505 + C34504 + C34503) * C50973 -
            (C16985 * C406 + C16980 * C425 + C16984 * C404 + C16979 * C418 +
             C16983 * C403 + C16978 * C417) *
                C645 -
            (C16985 * C426 + C16980 * C436 + C16984 * C422 + C16979 * C434 +
             C16983 * C421 + C16978 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C539)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C644 +
            (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
            C22200 * C50809) *
               C50831 * C39163 +
           (C22199 * C644 + C22200 * C50973 - C22201 * C645 - C22202 * C50809) *
               C50831 * C39164 +
           (C22201 * C644 + C22202 * C50973 - C22203 * C645 - C22204 * C50809) *
               C50831 * C39165 +
           (C22203 * C644 + C22204 * C50973 - C24075 * C645 - C24076 * C50809) *
               C50831 * C39166) *
              C50730 * C51015 +
          ((C22207 * C645 -
            ((C19767 * C134 + C50686 * C144) * C50973 +
             (C19767 * C123 + C50686 * C130) * C644) +
            C22208 * C50809) *
               C50831 * C39163 +
           (C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
            C22210 * C50809) *
               C50831 * C39164 +
           (C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
            C22212 * C50809) *
               C50831 * C39165 +
           (C39368 * C645 - (C22212 * C50973 + C22211 * C644) +
            C39369 * C50809) *
               C50831 * C39166) *
              C50730 * C51016 +
          (((C19767 * C124 + C50686 * C131) * C644 +
            (C19767 * C135 + C50686 * C145) * C50973 - C22531 * C645 -
            C22532 * C50809) *
               C50831 * C39163 +
           (C22531 * C644 + C22532 * C50973 - C22533 * C645 - C22534 * C50809) *
               C50831 * C39164 +
           (C22533 * C644 + C22534 * C50973 - C39570 * C645 - C39571 * C50809) *
               C50831 * C39165 +
           (C39570 * C644 + C39571 * C50973 -
            (C19767 * C5402 + C50686 * C5407) * C645 -
            (C19767 * C5408 + C50686 * C5411) * C50809) *
               C50831 * C39166) *
              C50730 * C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
              C16985 * C398 + C16980 * C408) *
                 C121 +
             (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
              C16985 * C412 + C16980 * C428) *
                 C50745) *
                C50831 * C50907) *
               C248 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C249 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C50831 * C33829 +
            ((C18815 + C18816 + C18817) * C121 +
             (C18818 + C18819 + C18820) * C50745) *
                C50831 * C50907) *
               C250) *
              C251 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C249 -
           (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
              C16983 * C413 + C16978 * C429) *
                 C50745 +
             (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
              C16983 * C399 + C16978 * C409) *
                 C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C248 -
           (((C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
              C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                 C50745 +
             (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
              C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                 C121) *
                C50831 * C50907 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C50831 * C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C50831 * C33829 +
           ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
             C16985 * C398 + C16980 * C408) *
                C121 +
            (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
             C16985 * C412 + C16980 * C428) *
                C50745) *
               C50831 * C50907) *
              C50730 * C113 -
          (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
             C16983 * C413 + C16978 * C429) *
                C50745 +
            (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
             C16983 * C399 + C16978 * C409) *
                C121) *
               C50831 * C50907 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50745 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C50831 * C33829) *
              C50730 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50745) *
               C50831 * C33829 +
           ((C16983 * C398 + C16978 * C408 + C16984 * C397 + C16979 * C407 +
             C16985 * C405 + C16980 * C423) *
                C121 +
            (C16983 * C412 + C16978 * C428 + C16984 * C411 + C16979 * C427 +
             C16985 * C424 + C16980 * C435) *
                C50745) *
               C50831 * C50907) *
              C50730 * C115 -
          (((C16985 * C648 + C16980 * C649 + C16984 * C424 + C16979 * C435 +
             C16983 * C411 + C16978 * C427) *
                C50745 +
            (C16985 * C646 + C16980 * C647 + C16984 * C405 + C16979 * C423 +
             C16983 * C397 + C16978 * C407) *
                C121) *
               C50831 * C50907 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50745 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C50831 * C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C50730 * C113 -
          ((C31302 * C2175 + (C22002 + C22001) * C2174 +
            (C22208 * C50745 + C22207 * C121) * C2173) *
               C50907 +
           (C19934 * C2175 + (C19924 + C19923) * C2174 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C2173) *
               C33829) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C2173 +
            (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
               C33829 +
           ((C22531 * C121 + C22532 * C50745) * C2173 +
            (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
               C50907) *
              C50730 * C115 -
          ((((C19767 * C1443 + C50686 * C1447) * C50745 +
             (C19767 * C1435 + C50686 * C1439) * C121) *
                C2175 +
            ((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C2174 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C2173) *
               C50907 +
           (((C19767 * C278 + C50686 * C290) * C50745 +
             (C19767 * C260 + C50686 * C274) * C121) *
                C2175 +
            ((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C2174 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C2173) *
               C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C248 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C249 +
           ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
                C33829 +
            (C31299 * C2173 + (C22989 + C22990) * C2174 +
             (C32192 + C32193) * C2175) *
                C50907) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C249 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C248 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C2175 +
             (C31301 + C31300) * C2174 + C31302 * C2173) *
                C50907 +
            ((C19930 + C19929) * C2175 + C19933 * C2174 + C19934 * C2173) *
                C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C50831 * C39163 +
           (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
           (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
           (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
              C50730 * C113 -
          ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
           (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
           (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
           ((C19767 * C134 + C50686 * C144) * C50745 +
            (C19767 * C123 + C50686 * C130) * C121) *
               C50831 * C39163) *
              C50730 * C114 +
          (((C19767 * C124 + C50686 * C131) * C121 +
            (C19767 * C135 + C50686 * C145) * C50745) *
               C50831 * C39163 +
           (C22531 * C121 + C22532 * C50745) * C50831 * C39164 +
           (C22533 * C121 + C22534 * C50745) * C50831 * C39165 +
           ((C19767 * C1726 + C50686 * C1730) * C121 +
            (C19767 * C1734 + C50686 * C1738) * C50745) *
               C50831 * C39166) *
              C50730 * C115 -
          (((C19767 * C1733 + C50686 * C1737) * C50745 +
            (C19767 * C1725 + C50686 * C1729) * C121) *
               C50831 * C39166 +
           ((C19767 * C422 + C50686 * C434) * C50745 +
            (C19767 * C404 + C50686 * C418) * C121) *
               C50831 * C39165 +
           ((C19767 * C411 + C50686 * C427) * C50745 +
            (C19767 * C397 + C50686 * C407) * C121) *
               C50831 * C39164 +
           ((C19767 * C136 + C50686 * C146) * C50745 +
            (C19767 * C125 + C50686 * C132) * C121) *
               C50831 * C39163) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50831 * C39163 +
            (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
            (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
            (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
               C248 -
           ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
            (C21996 + C21995) * C50831 * C39165 +
            (C21994 + C21993) * C50831 * C39164 +
            (C19916 + C19915) * C50831 * C39163) *
               C249 +
           (C19931 * C50831 * C39163 + C31299 * C50831 * C39164 +
            (C21998 + C21997) * C50831 * C39165 +
            (C23163 * C121 + C23164 * C50745) * C50831 * C39166) *
               C250) *
              C251 +
          (((C19923 + C19924) * C50831 * C39163 +
            (C22001 + C22002) * C50831 * C39164 +
            (C22017 + C22018) * C50831 * C39165 +
            (C22213 * C121 + C22214 * C50745) * C50831 * C39166) *
               C249 -
           ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
            (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
            (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50831 * C39163) *
               C248 -
           (((C19767 * C4515 + C50686 * C4519) * C50745 +
             (C19767 * C4507 + C50686 * C4513) * C121) *
                C50831 * C39166 +
            (C22020 + C22019) * C50831 * C39165 + C31302 * C50831 * C39164 +
            C19934 * C50831 * C39163) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C51017 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C51018 +
           ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
                C33829 +
            (C31299 * C2173 + (C22989 + C22990) * C2174 +
             (C32192 + C32193) * C2175) *
                C50907) *
               C1204) *
              C50964 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C51018 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C51017 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C2175 +
             (C31301 + C31300) * C2174 + C31302 * C2173) *
                C50907 +
            ((C19930 + C19929) * C2175 + C19933 * C2174 + C19934 * C2173) *
                C33829) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C121 +
             (C34177 + C34176 + C34175) * C50745) *
                C50831 * C50907) *
               C51017 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C51018 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C50831 * C33829 +
            ((C18815 + C18816 + C18817) * C121 +
             (C18818 + C18819 + C18820) * C50745) *
                C50831 * C50907) *
               C1204) *
              C50964 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C51018 -
           (((C34189 + C34188 + C34187) * C50745 +
             (C34186 + C34185 + C34184) * C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C51017 -
           (((C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
              C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                 C50745 +
             (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
              C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                 C121) *
                C50831 * C50907 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C50831 * C33829) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50831 * C39163 +
            (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
            (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
            (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
               C51017 -
           ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
            (C21996 + C21995) * C50831 * C39165 +
            (C21994 + C21993) * C50831 * C39164 +
            (C19916 + C19915) * C50831 * C39163) *
               C51018 +
           (C19931 * C50831 * C39163 + C31299 * C50831 * C39164 +
            (C21998 + C21997) * C50831 * C39165 +
            (C23163 * C121 + C23164 * C50745) * C50831 * C39166) *
               C1204) *
              C50964 +
          (((C19923 + C19924) * C50831 * C39163 +
            (C22001 + C22002) * C50831 * C39164 +
            (C22017 + C22018) * C50831 * C39165 +
            (C22213 * C121 + C22214 * C50745) * C50831 * C39166) *
               C51018 -
           ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
            (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
            (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50831 * C39163) *
               C51017 -
           (((C19767 * C4515 + C50686 * C4519) * C50745 +
             (C19767 * C4507 + C50686 * C4513) * C121) *
                C50831 * C39166 +
            (C22020 + C22019) * C50831 * C39165 + C31302 * C50831 * C39164 +
            C19934 * C50831 * C39163) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C2173 +
            (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
               C33829 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C2173 +
            (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
               C50907) *
              C51017 +
          (((C20431 - (C20384 + C20383) + C20432) * C2173 +
            (C20433 - (C20390 + C20389) + C20434) * C2174 +
            (C20435 - (C20396 + C20395) + C20436) * C2175) *
               C33829 +
           ((C22731 - (C22730 + C22729) + C22732) * C2173 +
            (C23653 - (C23654 + C23655) + C23656) * C2174 +
            (C32833 - (C32834 + C32835) + C32836) * C2175) *
               C50907) *
              C51018 +
          ((C21101 * C2173 + C21102 * C2174 +
            (C21094 + C21093 - C21103 - C21104) * C2175) *
               C33829 +
           (C32838 * C2173 + (C32835 + C32834 - C32833 - C32836) * C2174 +
            (C21099 * C644 + C21100 * C50973 -
             (C19767 * C20718 + C50686 * C20719) * C645 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C2175) *
               C50907) *
              C1204) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C644 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50973 -
            (C34172 + C34173 + C34174) * C645 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C644 +
            (C34177 + C34176 + C34175) * C50973 -
            (C34180 + C34179 + C34178) * C645 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C51017 +
          (((C17881 + C17880 + C17879) * C645 -
            ((C17186 + C17185 + C17184) * C50973 +
             (C17183 + C17182 + C17181) * C644) +
            (C17884 + C17883 + C17882) * C50809) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C645 -
            ((C17882 + C17883 + C17884) * C50973 +
             (C17879 + C17880 + C17881) * C644) +
            (C18314 + C18315 + C18316) * C50809) *
               C50831 * C50907) *
              C51018 +
          (((C17192 + C17191 + C17190) * C644 +
            (C17189 + C17188 + C17187) * C50973 -
            (C18817 + C18816 + C18815) * C645 -
            (C18820 + C18819 + C18818) * C50809) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C644 +
            (C18818 + C18819 + C18820) * C50973 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C645 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C50809) *
               C50831 * C50907) *
              C1204) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C644 +
            (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
            C22200 * C50809) *
               C50831 * C39163 +
           (C22199 * C644 + C22200 * C50973 - C22201 * C645 - C22202 * C50809) *
               C50831 * C39164 +
           (C22201 * C644 + C22202 * C50973 - C22203 * C645 - C22204 * C50809) *
               C50831 * C39165 +
           (C22203 * C644 + C22204 * C50973 - C24075 * C645 - C24076 * C50809) *
               C50831 * C39166) *
              C51017 +
          ((C20431 - (C20384 + C20383) + C20432) * C50831 * C39163 +
           (C22731 - (C22730 + C22729) + C22732) * C50831 * C39164 +
           (C22735 - (C22734 + C22733) + C22736) * C50831 * C39165 +
           (C23161 * C645 - (C22206 * C50973 + C22205 * C644) +
            C23162 * C50809) *
               C50831 * C39166) *
              C51018 +
          (C21101 * C50831 * C39163 + C32838 * C50831 * C39164 +
           (C23659 + C23658 - C23657 - C23660) * C50831 * C39165 +
           (C23163 * C644 + C23164 * C50973 -
            (C19767 * C23138 + C50686 * C23139) * C645 -
            (C19767 * C23140 + C50686 * C23141) * C50809) *
               C50831 * C39166) *
              C1204) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50745) *
                    C50831 * C33829 +
                ((C34174 + C34173 + C34172) * C121 +
                 (C34177 + C34176 + C34175) * C50745) *
                    C50831 * C50907) *
                   C898 -
               (((C17882 + C17883 + C17884) * C50745 +
                 (C17879 + C17880 + C17881) * C121) *
                    C50831 * C50907 +
                ((C17186 + C17185 + C17184) * C50745 +
                 (C17183 + C17182 + C17181) * C121) *
                    C50831 * C33829) *
                   C50781) *
                  C900 +
              ((((C17193 + C17194 + C17195) * C121 +
                 (C17196 + C17197 + C17198) * C50745) *
                    C50831 * C33829 +
                ((C17885 + C17886 + C17887) * C121 +
                 (C17888 + C17889 + C17890) * C50745) *
                    C50831 * C50907) *
                   C50781 -
               (((C34189 + C34188 + C34187) * C50745 +
                 (C34186 + C34185 + C34184) * C121) *
                    C50831 * C50907 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50745 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C50831 * C33829) *
                   C898) *
                  C901 +
              ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                  C16979 * C132 + C16985 * C126 + C16980 * C138) *
                     C121 +
                 (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                  C16979 * C146 + C16985 * C137 + C16980 * C147) *
                     C50745) *
                    C50831 * C33829 +
                ((C34502 + C34501 + C34500) * C121 +
                 (C34505 + C34504 + C34503) * C50745) *
                    C50831 * C50907) *
                   C898 -
               (((C16985 * C794 + C16980 * C799 + C16984 * C792 +
                  C16979 * C798 + C16983 * C791 + C16978 * C797) *
                     C50745 +
                 (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                  C16979 * C788 + C16983 * C782 + C16978 * C787) *
                     C121) *
                    C50831 * C50907 +
                ((C17514 + C17513 + C17512) * C50745 +
                 (C17511 + C17510 + C17509) * C121) *
                    C50831 * C33829) *
                   C50781) *
                  C902) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50745) *
                   C50831 * C33829 +
               ((C34174 + C34173 + C34172) * C121 +
                (C34177 + C34176 + C34175) * C50745) *
                   C50831 * C50907) *
                  C969 -
              (((C17882 + C17883 + C17884) * C50745 +
                (C17879 + C17880 + C17881) * C121) *
                   C50831 * C50907 +
               ((C17186 + C17185 + C17184) * C50745 +
                (C17183 + C17182 + C17181) * C121) *
                   C50831 * C33829) *
                  C970 +
              (((C17192 + C17191 + C17190) * C121 +
                (C17189 + C17188 + C17187) * C50745) *
                   C50831 * C33829 +
               ((C18815 + C18816 + C18817) * C121 +
                (C18818 + C18819 + C18820) * C50745) *
                   C50831 * C50907) *
                  C971 -
              (((C16985 * C3094 + C16980 * C3097 + C16984 * C3092 +
                 C16979 * C3096 + C16983 * C3091 + C16978 * C3095) *
                    C50745 +
                (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 +
                 C16979 * C3090 + C16983 * C3086 + C16978 * C3089) *
                    C121) *
                   C50831 * C50907 +
               ((C18152 + C18151 + C18150) * C50745 +
                (C18149 + C18148 + C18147) * C121) *
                   C50831 * C33829) *
                  C972) *
             C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C34172 + C34173 + C34174) * C395 -
            (C34175 + C34176 + C34177) * C392 +
            (C34178 + C34179 + C34180) * C396 +
            (C34181 + C34182 + C34183) * C393) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C394 +
            (C34177 + C34176 + C34175) * C391 -
            (C34180 + C34179 + C34178) * C395 -
            (C34183 + C34182 + C34181) * C392 +
            (C16983 * C1728 + C16978 * C1732 + C16984 * C1727 + C16979 * C1731 +
             C16985 * C1726 + C16980 * C1730) *
                C396 +
            (C16983 * C1736 + C16978 * C1740 + C16984 * C1735 + C16979 * C1739 +
             C16985 * C1734 + C16980 * C1738) *
                C393) *
               C50831 * C50907) *
              C898 +
          (((C17881 + C17880 + C17879) * C395 -
            ((C17186 + C17185 + C17184) * C391 +
             (C17183 + C17182 + C17181) * C394) +
            (C17884 + C17883 + C17882) * C392 -
            (C18313 + C18312 + C18311) * C396 -
            (C18316 + C18315 + C18314) * C393) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C395 -
            ((C17882 + C17883 + C17884) * C391 +
             (C17879 + C17880 + C17881) * C394) +
            (C18314 + C18315 + C18316) * C392 -
            (C16985 * C5998 + C16980 * C5999 + C16984 * C4505 + C16979 * C4509 +
             C16983 * C4506 + C16978 * C4510) *
                C396 -
            (C16985 * C6000 + C16980 * C6001 + C16984 * C4511 + C16979 * C4517 +
             C16983 * C4512 + C16978 * C4518) *
                C393) *
               C50831 * C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C898 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C50781 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C2173 +
             (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
                C33829 +
            ((C22531 * C121 + C22532 * C50745) * C2173 +
             (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
                C50907) *
               C898 -
           ((((C19767 * C3094 + C50686 * C3097) * C50745 +
              (C19767 * C3088 + C50686 * C3093) * C121) *
                 C2175 +
             (C31602 + C31601) * C2174 + (C22374 + C22373) * C2173) *
                C50907 +
            ((C20154 + C20153) * C2175 + (C20152 + C20151) * C2174 +
             (C20150 + C20149) * C2173) *
                C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C969 -
          ((C32191 * C2175 + (C21999 + C22000) * C2174 +
            (C21994 + C21993) * C2173) *
               C50907 +
           (C20612 * C2175 + (C19918 + C19917) * C2174 +
            (C19916 + C19915) * C2173) *
               C33829) *
              C970 +
          ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
               C33829 +
           (C31299 * C2173 + (C22989 + C22990) * C2174 +
            (C32192 + C32193) * C2175) *
               C50907) *
              C971 -
          ((((C19767 * C21086 + C50686 * C21087) * C50745 +
             (C19767 * C21084 + C50686 * C21085) * C121) *
                C2175 +
            (C32193 + C32192) * C2174 + C32191 * C2173) *
               C50907 +
           ((C20620 + C20619) * C2175 + C20611 * C2174 + C20612 * C2173) *
               C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C2173 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C2174 +
            (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C2175) *
               C33829 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C2173 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C2174 +
            (C32340 + C32341 - C32342 - C32343 + C32344 + C32345) * C2175) *
               C50907) *
              C898 +
          (((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C2173 +
            (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C2174 +
            (C20741 - (C20740 + C20739) + C20742 - C20757 - C20758) * C2175) *
               C33829 +
           ((C23145 - (C23144 + C23143) + C23146 - C23147 - C23148) * C2173 +
            (C32342 - (C32341 + C32340) + C32343 - C32344 - C32345) * C2174 +
            (C20751 * C395 - (C20424 * C391 + C20423 * C394) + C20752 * C392 -
             (C19767 * C21388 + C50686 * C21389) * C396 -
             (C19767 * C21390 + C50686 * C21391) * C393) *
                C2175) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50831 * C39163 +
            (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
            (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
            (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
               C898 -
           ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
            (C21996 + C21995) * C50831 * C39165 +
            (C21994 + C21993) * C50831 * C39164 +
            (C19916 + C19915) * C50831 * C39163) *
               C50781) *
              C900 +
          (((C19923 + C19924) * C50831 * C39163 +
            (C22001 + C22002) * C50831 * C39164 +
            (C22017 + C22018) * C50831 * C39165 +
            (C22213 * C121 + C22214 * C50745) * C50831 * C39166) *
               C50781 -
           ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
            (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
            (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50831 * C39163) *
               C898) *
              C901 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C50831 * C39163 +
            (C22531 * C121 + C22532 * C50745) * C50831 * C39164 +
            (C22533 * C121 + C22534 * C50745) * C50831 * C39165 +
            (C39570 * C121 + C39571 * C50745) * C50831 * C39166) *
               C898 -
           (((C19767 * C6000 + C50686 * C6001) * C50745 +
             (C19767 * C5998 + C50686 * C5999) * C121) *
                C50831 * C39166 +
            (C22376 + C22375) * C50831 * C39165 +
            (C22374 + C22373) * C50831 * C39164 +
            (C20150 + C20149) * C50831 * C39163) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C50831 * C39163 +
           (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
           (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
           (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
              C969 -
          ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
           (C21996 + C21995) * C50831 * C39165 +
           (C21994 + C21993) * C50831 * C39164 +
           (C19916 + C19915) * C50831 * C39163) *
              C970 +
          (C19931 * C50831 * C39163 + C31299 * C50831 * C39164 +
           (C21998 + C21997) * C50831 * C39165 +
           (C23163 * C121 + C23164 * C50745) * C50831 * C39166) *
              C971 -
          (((C19767 * C21390 + C50686 * C21391) * C50745 +
            (C19767 * C21388 + C50686 * C21389) * C121) *
               C50831 * C39166 +
           (C22992 + C22991) * C50831 * C39165 + C32191 * C50831 * C39164 +
           C20612 * C50831 * C39163) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C394 +
            (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
            C22200 * C392 + C22201 * C396 + C22202 * C393) *
               C50831 * C39163 +
           (C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
            C22203 * C396 + C22204 * C393) *
               C50831 * C39164 +
           (C22201 * C394 + C22202 * C391 - C22203 * C395 - C22204 * C392 +
            C24075 * C396 + C24076 * C393) *
               C50831 * C39165 +
           (C22203 * C394 + C22204 * C391 - C24075 * C395 - C24076 * C392 +
            (C19767 * C7303 + C50686 * C7305) * C396 +
            (C19767 * C7307 + C50686 * C7309) * C393) *
               C50831 * C39166) *
              C898 +
          ((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C50831 *
               C39163 +
           (C23145 - (C23144 + C23143) + C23146 - C23147 - C23148) * C50831 *
               C39164 +
           (C23151 - (C23150 + C23149) + C23152 - C23165 - C23166) * C50831 *
               C39165 +
           (C23161 * C395 - (C22206 * C391 + C22205 * C394) + C23162 * C392 -
            (C19767 * C24066 + C50686 * C24067) * C396 -
            (C19767 * C24068 + C50686 * C24069) * C393) *
               C50831 * C39166) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C644 +
              (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
              C22200 * C50809) *
                 C2173 +
             (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
                C33829 +
            ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
              C22202 * C50809) *
                 C2173 +
             (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
                C50907) *
               C898 +
           (((C20431 - (C20384 + C20383) + C20432) * C2173 +
             (C20433 - (C20390 + C20389) + C20434) * C2174 +
             (C20435 - (C20396 + C20395) + C20436) * C2175) *
                C33829 +
            ((C22731 - (C22730 + C22729) + C22732) * C2173 +
             (C23653 - (C23654 + C23655) + C23656) * C2174 +
             (C32833 - (C32834 + C32835) + C32836) * C2175) *
                C50907) *
               C50781) *
              C50964 +
          ((((C22207 * C645 -
              ((C19767 * C134 + C50686 * C144) * C50973 +
               (C19767 * C123 + C50686 * C130) * C644) +
              C22208 * C50809) *
                 C2173 +
             (C20437 - (C20403 + C20404) + C20438) * C2174 +
             (C20439 - (C20409 + C20410) + C20440) * C2175) *
                C33829 +
            ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
              C22210 * C50809) *
                 C2173 +
             (C22737 - (C22738 + C22739) + C22740) * C2174 +
             (C31943 - (C31944 + C31945) + C31946) * C2175) *
                C50907) *
               C898 +
           (((C20404 + C20403 - C20437 - C20438) * C2173 +
             (C20410 + C20409 - C20439 - C20440) * C2174 +
             (C20416 + C20415 - C20441 - C20442) * C2175) *
                C33829 +
            ((C22739 + C22738 - C22737 - C22740) * C2173 +
             (C31945 + C31944 - C31943 - C31946) * C2174 +
             (C20429 * C644 + C20430 * C50973 -
              (C19767 * C3561 + C50686 * C3563) * C645 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C2175) *
                C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C644 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50973 -
             (C34172 + C34173 + C34174) * C645 -
             (C34175 + C34176 + C34177) * C50809) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C644 +
             (C34177 + C34176 + C34175) * C50973 -
             (C34180 + C34179 + C34178) * C645 -
             (C34183 + C34182 + C34181) * C50809) *
                C50831 * C50907) *
               C898 +
           (((C17881 + C17880 + C17879) * C645 -
             ((C17186 + C17185 + C17184) * C50973 +
              (C17183 + C17182 + C17181) * C644) +
             (C17884 + C17883 + C17882) * C50809) *
                C50831 * C33829 +
            ((C18311 + C18312 + C18313) * C645 -
             ((C17882 + C17883 + C17884) * C50973 +
              (C17879 + C17880 + C17881) * C644) +
             (C18314 + C18315 + C18316) * C50809) *
                C50831 * C50907) *
               C50781) *
              C50964 +
          ((((C34184 + C34185 + C34186) * C645 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C50973 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C644) +
             (C34187 + C34188 + C34189) * C50809) *
                C50831 * C33829 +
            ((C34192 + C34191 + C34190) * C645 -
             ((C34189 + C34188 + C34187) * C50973 +
              (C34186 + C34185 + C34184) * C644) +
             (C34195 + C34194 + C34193) * C50809) *
                C50831 * C50907) *
               C898 +
           (((C17193 + C17194 + C17195) * C644 +
             (C17196 + C17197 + C17198) * C50973 -
             (C17887 + C17886 + C17885) * C645 -
             (C17890 + C17889 + C17888) * C50809) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C644 +
             (C17888 + C17889 + C17890) * C50973 -
             (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 +
              C16979 * C1093 + C16983 * C1090 + C16978 * C1094) *
                 C645 -
             (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 +
              C16979 * C1101 + C16983 * C1098 + C16978 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C50831 * C39163 +
            (C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C50831 * C39164 +
            (C22201 * C644 + C22202 * C50973 - C22203 * C645 -
             C22204 * C50809) *
                C50831 * C39165 +
            (C22203 * C644 + C22204 * C50973 - C24075 * C645 -
             C24076 * C50809) *
                C50831 * C39166) *
               C898 +
           ((C20431 - (C20384 + C20383) + C20432) * C50831 * C39163 +
            (C22731 - (C22730 + C22729) + C22732) * C50831 * C39164 +
            (C22735 - (C22734 + C22733) + C22736) * C50831 * C39165 +
            (C23161 * C645 - (C22206 * C50973 + C22205 * C644) +
             C23162 * C50809) *
                C50831 * C39166) *
               C50781) *
              C50964 +
          (((C22207 * C645 -
             ((C19767 * C134 + C50686 * C144) * C50973 +
              (C19767 * C123 + C50686 * C130) * C644) +
             C22208 * C50809) *
                C50831 * C39163 +
            (C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
             C22210 * C50809) *
                C50831 * C39164 +
            (C22211 * C645 - (C22210 * C50973 + C22209 * C644) +
             C22212 * C50809) *
                C50831 * C39165 +
            (C39368 * C645 - (C22212 * C50973 + C22211 * C644) +
             C39369 * C50809) *
                C50831 * C39166) *
               C898 +
           ((C20404 + C20403 - C20437 - C20438) * C50831 * C39163 +
            (C22739 + C22738 - C22737 - C22740) * C50831 * C39164 +
            (C22743 + C22742 - C22741 - C22744) * C50831 * C39165 +
            (C22213 * C644 + C22214 * C50973 -
             (C19767 * C6404 + C50686 * C6406) * C645 -
             (C19767 * C6408 + C50686 * C6410) * C50809) *
                C50831 * C39166) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C121 +
            (C34177 + C34176 + C34175) * C50745) *
               C50831 * C50907) *
              C969 -
          (((C17882 + C17883 + C17884) * C50745 +
            (C17879 + C17880 + C17881) * C121) *
               C50831 * C50907 +
           ((C17186 + C17185 + C17184) * C50745 +
            (C17183 + C17182 + C17181) * C121) *
               C50831 * C33829) *
              C970 +
          (((C17192 + C17191 + C17190) * C121 +
            (C17189 + C17188 + C17187) * C50745) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C121 +
            (C18818 + C18819 + C18820) * C50745) *
               C50831 * C50907) *
              C971 -
          (((C16985 * C3094 + C16980 * C3097 + C16984 * C3092 + C16979 * C3096 +
             C16983 * C3091 + C16978 * C3095) *
                C50745 +
            (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 + C16979 * C3090 +
             C16983 * C3086 + C16978 * C3089) *
                C121) *
               C50831 * C50907 +
           ((C18152 + C18151 + C18150) * C50745 +
            (C18149 + C18148 + C18147) * C121) *
               C50831 * C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C121 +
             (C34177 + C34176 + C34175) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C50781) *
              C900 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C50781 -
           (((C34189 + C34188 + C34187) * C50745 +
             (C34186 + C34185 + C34184) * C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C898) *
              C901 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C50831 * C33829 +
            ((C34502 + C34501 + C34500) * C121 +
             (C34505 + C34504 + C34503) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C16985 * C794 + C16980 * C799 + C16984 * C792 + C16979 * C798 +
              C16983 * C791 + C16978 * C797) *
                 C50745 +
             (C16985 * C784 + C16980 * C793 + C16984 * C783 + C16979 * C788 +
              C16983 * C782 + C16978 * C787) *
                 C121) *
                C50831 * C50907 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C50831 * C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C898 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C50781 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C2173 +
             (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
                C33829 +
            ((C22531 * C121 + C22532 * C50745) * C2173 +
             (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
                C50907) *
               C898 -
           ((((C19767 * C3094 + C50686 * C3097) * C50745 +
              (C19767 * C3088 + C50686 * C3093) * C121) *
                 C2175 +
             (C31602 + C31601) * C2174 + (C22374 + C22373) * C2173) *
                C50907 +
            ((C20154 + C20153) * C2175 + (C20152 + C20151) * C2174 +
             (C20150 + C20149) * C2173) *
                C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C969 -
          ((C32191 * C2175 + (C21999 + C22000) * C2174 +
            (C21994 + C21993) * C2173) *
               C50907 +
           (C20612 * C2175 + (C19918 + C19917) * C2174 +
            (C19916 + C19915) * C2173) *
               C33829) *
              C970 +
          ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
               C33829 +
           (C31299 * C2173 + (C22989 + C22990) * C2174 +
            (C32192 + C32193) * C2175) *
               C50907) *
              C971 -
          ((((C19767 * C21086 + C50686 * C21087) * C50745 +
             (C19767 * C21084 + C50686 * C21085) * C121) *
                C2175 +
            (C32193 + C32192) * C2174 + C32191 * C2173) *
               C50907 +
           ((C20620 + C20619) * C2175 + C20611 * C2174 + C20612 * C2173) *
               C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C50831 * C39163 +
            (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
            (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
            (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
               C898 -
           ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
            (C21996 + C21995) * C50831 * C39165 +
            (C21994 + C21993) * C50831 * C39164 +
            (C19916 + C19915) * C50831 * C39163) *
               C50781) *
              C900 +
          (((C19923 + C19924) * C50831 * C39163 +
            (C22001 + C22002) * C50831 * C39164 +
            (C22017 + C22018) * C50831 * C39165 +
            (C22213 * C121 + C22214 * C50745) * C50831 * C39166) *
               C50781 -
           ((C22212 * C50745 + C22211 * C121) * C50831 * C39166 +
            (C22210 * C50745 + C22209 * C121) * C50831 * C39165 +
            (C22208 * C50745 + C22207 * C121) * C50831 * C39164 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C50831 * C39163) *
               C898) *
              C901 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C50831 * C39163 +
            (C22531 * C121 + C22532 * C50745) * C50831 * C39164 +
            (C22533 * C121 + C22534 * C50745) * C50831 * C39165 +
            (C39570 * C121 + C39571 * C50745) * C50831 * C39166) *
               C898 -
           (((C19767 * C6000 + C50686 * C6001) * C50745 +
             (C19767 * C5998 + C50686 * C5999) * C121) *
                C50831 * C39166 +
            (C22376 + C22375) * C50831 * C39165 +
            (C22374 + C22373) * C50831 * C39164 +
            (C20150 + C20149) * C50831 * C39163) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C121 +
            (C19767 * C133 + C50686 * C143) * C50745) *
               C50831 * C39163 +
           (C22199 * C121 + C22200 * C50745) * C50831 * C39164 +
           (C22201 * C121 + C22202 * C50745) * C50831 * C39165 +
           (C22203 * C121 + C22204 * C50745) * C50831 * C39166) *
              C969 -
          ((C22206 * C50745 + C22205 * C121) * C50831 * C39166 +
           (C21996 + C21995) * C50831 * C39165 +
           (C21994 + C21993) * C50831 * C39164 +
           (C19916 + C19915) * C50831 * C39163) *
              C970 +
          (C19931 * C50831 * C39163 + C31299 * C50831 * C39164 +
           (C21998 + C21997) * C50831 * C39165 +
           (C23163 * C121 + C23164 * C50745) * C50831 * C39166) *
              C971 -
          (((C19767 * C21390 + C50686 * C21391) * C50745 +
            (C19767 * C21388 + C50686 * C21389) * C121) *
               C50831 * C39166 +
           (C22992 + C22991) * C50831 * C39165 + C32191 * C50831 * C39164 +
           C20612 * C50831 * C39163) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C1551 +
              (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
              C22200 * C50809) *
                 C2173 +
             (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
                C33829 +
            ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
              C22202 * C50809) *
                 C2173 +
             (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
                C50907) *
               C50972 +
           (((C21303 - (C21302 + C21301) + C21304) * C2173 +
             (C21307 - (C21306 + C21305) + C21308) * C2174 +
             (C21311 - (C21310 + C21309) + C21312) * C2175) *
                C33829 +
            ((C23955 - (C23954 + C23953) + C23956) * C2173 +
             (C23961 - (C23962 + C23963) + C23964) * C2174 +
             (C33132 - (C33133 + C33134) + C33135) * C2175) *
                C50907) *
               C50781) *
              C50964 +
          ((((C22207 * C1552 -
              ((C19767 * C134 + C50686 * C144) * C1549 +
               (C19767 * C123 + C50686 * C130) * C1551) +
              C22208 * C50809) *
                 C2173 +
             (C21523 - (C21524 + C21525) + C21526) * C2174 +
             (C21527 - (C21528 + C21529) + C21530) * C2175) *
                C33829 +
            ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
              C22210 * C50809) *
                 C2173 +
             (C24271 - (C24272 + C24273) + C24274) * C2174 +
             (C33430 - (C33431 + C33432) + C33433) * C2175) *
                C50907) *
               C50972 +
           (((C21525 + C21524 - C21523 - C21526) * C2173 +
             (C21529 + C21528 - C21527 - C21530) * C2174 +
             (C21533 + C21532 - C21531 - C21534) * C2175) *
                C33829 +
            ((C24273 + C24272 - C24271 - C24274) * C2173 +
             (C33432 + C33431 - C33430 - C33433) * C2174 +
             (C20429 * C1551 + C20430 * C1549 -
              (C19767 * C3561 + C50686 * C3563) * C1552 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C2175) *
                C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C1551 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C1549 -
             (C34172 + C34173 + C34174) * C1552 -
             (C34175 + C34176 + C34177) * C50809) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C1551 +
             (C34177 + C34176 + C34175) * C1549 -
             (C34180 + C34179 + C34178) * C1552 -
             (C34183 + C34182 + C34181) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17881 + C17880 + C17879) * C1552 -
             ((C17186 + C17185 + C17184) * C1549 +
              (C17183 + C17182 + C17181) * C1551) +
             (C17884 + C17883 + C17882) * C50809) *
                C50831 * C33829 +
            ((C18311 + C18312 + C18313) * C1552 -
             ((C17882 + C17883 + C17884) * C1549 +
              (C17879 + C17880 + C17881) * C1551) +
             (C18314 + C18315 + C18316) * C50809) *
                C50831 * C50907) *
               C50781) *
              C50964 +
          ((((C34184 + C34185 + C34186) * C1552 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C1549 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C1551) +
             (C34187 + C34188 + C34189) * C50809) *
                C50831 * C33829 +
            ((C34192 + C34191 + C34190) * C1552 -
             ((C34189 + C34188 + C34187) * C1549 +
              (C34186 + C34185 + C34184) * C1551) +
             (C34195 + C34194 + C34193) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17193 + C17194 + C17195) * C1551 +
             (C17196 + C17197 + C17198) * C1549 -
             (C17887 + C17886 + C17885) * C1552 -
             (C17890 + C17889 + C17888) * C50809) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C1551 +
             (C17888 + C17889 + C17890) * C1549 -
             (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 +
              C16979 * C1093 + C16983 * C1090 + C16978 * C1094) *
                 C1552 -
             (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 +
              C16979 * C1101 + C16983 * C1098 + C16978 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C50831 * C39163 +
            (C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C50831 * C39164 +
            (C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
             C22204 * C50809) *
                C50831 * C39165 +
            (C22203 * C1551 + C22204 * C1549 - C24075 * C1552 -
             C24076 * C50809) *
                C50831 * C39166) *
               C50972 +
           ((C21303 - (C21302 + C21301) + C21304) * C50831 * C39163 +
            (C23955 - (C23954 + C23953) + C23956) * C50831 * C39164 +
            (C23959 - (C23958 + C23957) + C23960) * C50831 * C39165 +
            (C23161 * C1552 - (C22206 * C1549 + C22205 * C1551) +
             C23162 * C50809) *
                C50831 * C39166) *
               C50781) *
              C50964 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C50831 * C39163 +
            (C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C50831 * C39164 +
            (C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
             C22212 * C50809) *
                C50831 * C39165 +
            (C39368 * C1552 - (C22212 * C1549 + C22211 * C1551) +
             C39369 * C50809) *
                C50831 * C39166) *
               C50972 +
           ((C21525 + C21524 - C21523 - C21526) * C50831 * C39163 +
            (C24273 + C24272 - C24271 - C24274) * C50831 * C39164 +
            (C24277 + C24276 - C24275 - C24278) * C50831 * C39165 +
            (C22213 * C1551 + C22214 * C1549 -
             (C19767 * C6404 + C50686 * C6406) * C1552 -
             (C19767 * C6408 + C50686 * C6410) * C50809) *
                C50831 * C39166) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50907) *
              C50972 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C2173 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C2174 +
            (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C2175) *
               C33829 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C2173 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C2174 +
            (C20751 * C1973 - (C20424 * C51019 + C20423 * C1972) +
             C20752 * C51020 - (C19767 * C21388 + C50686 * C21389) * C1974 -
             (C19767 * C21390 + C50686 * C21391) * C1971) *
                C2175) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C34172 + C34173 + C34174) * C1973 -
            (C34175 + C34176 + C34177) * C51020 +
            (C34178 + C34179 + C34180) * C1974 +
            (C34181 + C34182 + C34183) * C1971) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1972 +
            (C34177 + C34176 + C34175) * C51019 -
            (C34180 + C34179 + C34178) * C1973 -
            (C34183 + C34182 + C34181) * C51020 +
            (C35980 + C35979 + C35978) * C1974 +
            (C35983 + C35982 + C35981) * C1971) *
               C50831 * C50907) *
              C50972 +
          (((C17881 + C17880 + C17879) * C1973 -
            ((C17186 + C17185 + C17184) * C51019 +
             (C17183 + C17182 + C17181) * C1972) +
            (C17884 + C17883 + C17882) * C51020 -
            (C18313 + C18312 + C18311) * C1974 -
            (C18316 + C18315 + C18314) * C1971) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C1973 -
            ((C17882 + C17883 + C17884) * C51019 +
             (C17879 + C17880 + C17881) * C1972) +
            (C18314 + C18315 + C18316) * C51020 -
            (C16985 * C5998 + C16980 * C5999 + C16984 * C4505 + C16979 * C4509 +
             C16983 * C4506 + C16978 * C4510) *
                C1974 -
            (C16985 * C6000 + C16980 * C6001 + C16984 * C4511 + C16979 * C4517 +
             C16983 * C4512 + C16978 * C4518) *
                C1971) *
               C50831 * C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1972 +
            (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
            C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
               C50831 * C39163 +
           (C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
            C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
               C50831 * C39164 +
           (C22201 * C1972 + C22202 * C51019 - C22203 * C1973 -
            C22204 * C51020 + C24075 * C1974 + C24076 * C1971) *
               C50831 * C39165 +
           (C22203 * C1972 + C22204 * C51019 - C24075 * C1973 -
            C24076 * C51020 + C40560 * C1974 + C40561 * C1971) *
               C50831 * C39166) *
              C50972 +
          ((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C50831 *
               C39163 +
           (C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C50831 *
               C39164 +
           (C24579 - (C24578 + C24577) + C24580 - C24581 - C24582) * C50831 *
               C39165 +
           (C23161 * C1973 - (C22206 * C51019 + C22205 * C1972) +
            C23162 * C51020 - (C19767 * C24066 + C50686 * C24067) * C1974 -
            (C19767 * C24068 + C50686 * C24069) * C1971) *
               C50831 * C39166) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C1551 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C1549 -
                (C34172 + C34173 + C34174) * C1552 -
                (C34175 + C34176 + C34177) * C50809) *
                   C50831 * C33829 +
               ((C34174 + C34173 + C34172) * C1551 +
                (C34177 + C34176 + C34175) * C1549 -
                (C34180 + C34179 + C34178) * C1552 -
                (C34183 + C34182 + C34181) * C50809) *
                   C50831 * C50907) *
                  C50730 * C900 +
              (((C34184 + C34185 + C34186) * C1552 -
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C1549 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C1551) +
                (C34187 + C34188 + C34189) * C50809) *
                   C50831 * C33829 +
               ((C34192 + C34191 + C34190) * C1552 -
                ((C34189 + C34188 + C34187) * C1549 +
                 (C34186 + C34185 + C34184) * C1551) +
                (C34195 + C34194 + C34193) * C50809) *
                   C50831 * C50907) *
                  C50730 * C901 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C1551 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C1549 -
                (C34500 + C34501 + C34502) * C1552 -
                (C34503 + C34504 + C34505) * C50809) *
                   C50831 * C33829 +
               ((C34502 + C34501 + C34500) * C1551 +
                (C34505 + C34504 + C34503) * C1549 -
                (C16985 * C406 + C16980 * C425 + C16984 * C404 + C16979 * C418 +
                 C16983 * C403 + C16978 * C417) *
                    C1552 -
                (C16985 * C426 + C16980 * C436 + C16984 * C422 + C16979 * C434 +
                 C16983 * C421 + C16978 * C433) *
                    C50809) *
                   C50831 * C50907) *
                  C50730 * C902) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C1551 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C1549 -
                (C34172 + C34173 + C34174) * C1552 -
                (C34175 + C34176 + C34177) * C50809) *
                   C50831 * C33829 +
               ((C34174 + C34173 + C34172) * C1551 +
                (C34177 + C34176 + C34175) * C1549 -
                (C34180 + C34179 + C34178) * C1552 -
                (C34183 + C34182 + C34181) * C50809) *
                   C50831 * C50907) *
                  C248 +
              (((C17881 + C17880 + C17879) * C1552 -
                ((C17186 + C17185 + C17184) * C1549 +
                 (C17183 + C17182 + C17181) * C1551) +
                (C17884 + C17883 + C17882) * C50809) *
                   C50831 * C33829 +
               ((C18311 + C18312 + C18313) * C1552 -
                ((C17882 + C17883 + C17884) * C1549 +
                 (C17879 + C17880 + C17881) * C1551) +
                (C18314 + C18315 + C18316) * C50809) *
                   C50831 * C50907) *
                  C249 +
              (((C17192 + C17191 + C17190) * C1551 +
                (C17189 + C17188 + C17187) * C1549 -
                (C18817 + C18816 + C18815) * C1552 -
                (C18820 + C18819 + C18818) * C50809) *
                   C50831 * C33829 +
               ((C18815 + C18816 + C18817) * C1551 +
                (C18818 + C18819 + C18820) * C1549 -
                (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 +
                 C16979 * C2568 + C16983 * C2564 + C16978 * C2567) *
                    C1552 -
                (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 +
                 C16979 * C2574 + C16983 * C2569 + C16978 * C2573) *
                    C50809) *
                   C50831 * C50907) *
                  C250) *
             C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
            C16985 * C124 + C16980 * C131) *
               C1721 +
           (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
            C16985 * C135 + C16980 * C145) *
               C1717 -
           (C34172 + C34173 + C34174) * C1722 -
           (C34175 + C34176 + C34177) * C1718 +
           (C34178 + C34179 + C34180) * C1723 +
           (C34181 + C34182 + C34183) * C1719 -
           (C35978 + C35979 + C35980) * C1724 -
           (C35981 + C35982 + C35983) * C1720) *
              C50831 * C33829 +
          ((C34174 + C34173 + C34172) * C1721 +
           (C34177 + C34176 + C34175) * C1717 -
           (C34180 + C34179 + C34178) * C1722 -
           (C34183 + C34182 + C34181) * C1718 +
           (C35980 + C35979 + C35978) * C1723 +
           (C35983 + C35982 + C35981) * C1719 -
           (C16985 * C5402 + C16980 * C5407 + C16984 * C5401 + C16979 * C5404 +
            C16983 * C5400 + C16978 * C5403) *
               C1724 -
           (C16985 * C5408 + C16980 * C5411 + C16984 * C5406 + C16979 * C5410 +
            C16983 * C5405 + C16978 * C5409) *
               C1720) *
              C50831 * C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C2173 +
            (C21523 - (C21524 + C21525) + C21526) * C2174 +
            (C21527 - (C21528 + C21529) + C21530) * C2175) *
               C33829 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C2173 +
            (C24271 - (C24272 + C24273) + C24274) * C2174 +
            (C33430 - (C33431 + C33432) + C33433) * C2175) *
               C50907) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C2173 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C2174 +
            (C20145 * C1551 + C20146 * C1549 - C31599 * C1552 -
             C31600 * C50809) *
                C2175) *
               C33829 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C2173 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C2174 +
            (C31599 * C1551 + C31600 * C1549 -
             (C19767 * C2566 + C50686 * C2571) * C1552 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C2175) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C2173 +
            (C21307 - (C21306 + C21305) + C21308) * C2174 +
            (C21311 - (C21310 + C21309) + C21312) * C2175) *
               C33829 +
           ((C23955 - (C23954 + C23953) + C23956) * C2173 +
            (C23961 - (C23962 + C23963) + C23964) * C2174 +
            (C33132 - (C33133 + C33134) + C33135) * C2175) *
               C50907) *
              C249 +
          ((C21321 * C2173 + C21322 * C2174 +
            (C21315 + C21314 - C21313 - C21316) * C2175) *
               C33829 +
           (C33137 * C2173 + (C33134 + C33133 - C33132 - C33135) * C2174 +
            (C21099 * C1551 + C21100 * C1549 -
             (C19767 * C20718 + C50686 * C20719) * C1552 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C2175) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1721 +
            (C19767 * C133 + C50686 * C143) * C1717 - C22199 * C1722 -
            C22200 * C1718 + C22201 * C1723 + C22202 * C1719 - C22203 * C1724 -
            C22204 * C1720) *
               C2173 +
           (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 - C20420 * C1718 +
            C20747 * C1723 + C20748 * C1719 - C22205 * C1724 - C22206 * C1720) *
               C2174 +
           (C19901 * C1721 + C19902 * C1717 - C20421 * C1722 - C20422 * C1718 +
            C20749 * C1723 + C20750 * C1719 - C23163 * C1724 - C23164 * C1720) *
               C2175) *
              C33829 +
          ((C22199 * C1721 + C22200 * C1717 - C22201 * C1722 - C22202 * C1718 +
            C22203 * C1723 + C22204 * C1719 - C24075 * C1724 - C24076 * C1720) *
               C2173 +
           (C20419 * C1721 + C20420 * C1717 - C20747 * C1722 - C20748 * C1718 +
            C22205 * C1723 + C22206 * C1719 - C23161 * C1724 - C23162 * C1720) *
               C2174 +
           (C20421 * C1721 + C20422 * C1717 - C20749 * C1722 - C20750 * C1718 +
            C23163 * C1723 + C23164 * C1719 -
            (C19767 * C23138 + C50686 * C23139) * C1724 -
            (C19767 * C23140 + C50686 * C23141) * C1720) *
               C2175) *
              C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1551 +
            (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
            C22200 * C50809) *
               C50831 * C39163 +
           (C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
            C22202 * C50809) *
               C50831 * C39164 +
           (C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
            C22204 * C50809) *
               C50831 * C39165 +
           (C22203 * C1551 + C22204 * C1549 - C24075 * C1552 -
            C24076 * C50809) *
               C50831 * C39166) *
              C50730 * C900 +
          ((C22207 * C1552 -
            ((C19767 * C134 + C50686 * C144) * C1549 +
             (C19767 * C123 + C50686 * C130) * C1551) +
            C22208 * C50809) *
               C50831 * C39163 +
           (C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
            C22210 * C50809) *
               C50831 * C39164 +
           (C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
            C22212 * C50809) *
               C50831 * C39165 +
           (C39368 * C1552 - (C22212 * C1549 + C22211 * C1551) +
            C39369 * C50809) *
               C50831 * C39166) *
              C50730 * C901 +
          (((C19767 * C124 + C50686 * C131) * C1551 +
            (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
            C22532 * C50809) *
               C50831 * C39163 +
           (C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
            C22534 * C50809) *
               C50831 * C39164 +
           (C22533 * C1551 + C22534 * C1549 - C39570 * C1552 -
            C39571 * C50809) *
               C50831 * C39165 +
           (C39570 * C1551 + C39571 * C1549 -
            (C19767 * C5402 + C50686 * C5407) * C1552 -
            (C19767 * C5408 + C50686 * C5411) * C50809) *
               C50831 * C39166) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1551 +
            (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
            C22200 * C50809) *
               C50831 * C39163 +
           (C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
            C22202 * C50809) *
               C50831 * C39164 +
           (C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
            C22204 * C50809) *
               C50831 * C39165 +
           (C22203 * C1551 + C22204 * C1549 - C24075 * C1552 -
            C24076 * C50809) *
               C50831 * C39166) *
              C248 +
          ((C21303 - (C21302 + C21301) + C21304) * C50831 * C39163 +
           (C23955 - (C23954 + C23953) + C23956) * C50831 * C39164 +
           (C23959 - (C23958 + C23957) + C23960) * C50831 * C39165 +
           (C23161 * C1552 - (C22206 * C1549 + C22205 * C1551) +
            C23162 * C50809) *
               C50831 * C39166) *
              C249 +
          (C21321 * C50831 * C39163 + C33137 * C50831 * C39164 +
           (C23967 + C23966 - C23965 - C23968) * C50831 * C39165 +
           (C23163 * C1551 + C23164 * C1549 -
            (C19767 * C23138 + C50686 * C23139) * C1552 -
            (C19767 * C23140 + C50686 * C23141) * C50809) *
               C50831 * C39166) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19767 * C122 + C50686 * C129) * C1721 +
           (C19767 * C133 + C50686 * C143) * C1717 - C22199 * C1722 -
           C22200 * C1718 + C22201 * C1723 + C22202 * C1719 - C22203 * C1724 -
           C22204 * C1720) *
              C50831 * C39163 +
          (C22199 * C1721 + C22200 * C1717 - C22201 * C1722 - C22202 * C1718 +
           C22203 * C1723 + C22204 * C1719 - C24075 * C1724 - C24076 * C1720) *
              C50831 * C39164 +
          (C22201 * C1721 + C22202 * C1717 - C22203 * C1722 - C22204 * C1718 +
           C24075 * C1723 + C24076 * C1719 - C40560 * C1724 - C40561 * C1720) *
              C50831 * C39165 +
          (C22203 * C1721 + C22204 * C1717 - C24075 * C1722 - C24076 * C1718 +
           C40560 * C1723 + C40561 * C1719 -
           (C19767 * C40551 + C50686 * C40552) * C1724 -
           (C19767 * C40553 + C50686 * C40554) * C1720) *
              C50831 * C39166) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50907) *
              C50730 * C50964 +
          (((C22207 * C1973 -
             ((C19767 * C134 + C50686 * C144) * C51019 +
              (C19767 * C123 + C50686 * C130) * C1972) +
             C22208 * C51020 - C22209 * C1974 - C22210 * C1971) *
                C2173 +
            (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
             C20426 * C51020 - C22013 * C1974 - C22014 * C1971) *
                C2174 +
            (C20427 * C1973 - (C19910 * C51019 + C19909 * C1972) +
             C20428 * C51020 - C22015 * C1974 - C22016 * C1971) *
                C2175) *
               C33829 +
           ((C22209 * C1973 - (C22208 * C51019 + C22207 * C1972) +
             C22210 * C51020 - C22211 * C1974 - C22212 * C1971) *
                C2173 +
            (C22013 * C1973 - (C20426 * C51019 + C20425 * C1972) +
             C22014 * C51020 - C22213 * C1974 - C22214 * C1971) *
                C2174 +
            (C22015 * C1973 - (C20428 * C51019 + C20427 * C1972) +
             C22016 * C51020 - (C19767 * C4507 + C50686 * C4513) * C1974 -
             (C19767 * C4515 + C50686 * C4519) * C1971) *
                C2175) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C34172 + C34173 + C34174) * C1973 -
            (C34175 + C34176 + C34177) * C51020 +
            (C34178 + C34179 + C34180) * C1974 +
            (C34181 + C34182 + C34183) * C1971) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1972 +
            (C34177 + C34176 + C34175) * C51019 -
            (C34180 + C34179 + C34178) * C1973 -
            (C34183 + C34182 + C34181) * C51020 +
            (C35980 + C35979 + C35978) * C1974 +
            (C35983 + C35982 + C35981) * C1971) *
               C50831 * C50907) *
              C50730 * C50964 +
          (((C34184 + C34185 + C34186) * C1973 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51019 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1972) +
            (C34187 + C34188 + C34189) * C51020 -
            (C34190 + C34191 + C34192) * C1974 -
            (C34193 + C34194 + C34195) * C1971) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C1973 -
            ((C34189 + C34188 + C34187) * C51019 +
             (C34186 + C34185 + C34184) * C1972) +
            (C34195 + C34194 + C34193) * C51020 -
            (C16985 * C1725 + C16980 * C1729 + C16984 * C1726 + C16979 * C1730 +
             C16983 * C1727 + C16978 * C1731) *
                C1974 -
            (C16985 * C1733 + C16980 * C1737 + C16984 * C1734 + C16979 * C1738 +
             C16983 * C1735 + C16978 * C1739) *
                C1971) *
               C50831 * C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1972 +
            (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
            C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
               C50831 * C39163 +
           (C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
            C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
               C50831 * C39164 +
           (C22201 * C1972 + C22202 * C51019 - C22203 * C1973 -
            C22204 * C51020 + C24075 * C1974 + C24076 * C1971) *
               C50831 * C39165 +
           (C22203 * C1972 + C22204 * C51019 - C24075 * C1973 -
            C24076 * C51020 + C40560 * C1974 + C40561 * C1971) *
               C50831 * C39166) *
              C50730 * C50964 +
          ((C22207 * C1973 -
            ((C19767 * C134 + C50686 * C144) * C51019 +
             (C19767 * C123 + C50686 * C130) * C1972) +
            C22208 * C51020 - C22209 * C1974 - C22210 * C1971) *
               C50831 * C39163 +
           (C22209 * C1973 - (C22208 * C51019 + C22207 * C1972) +
            C22210 * C51020 - C22211 * C1974 - C22212 * C1971) *
               C50831 * C39164 +
           (C22211 * C1973 - (C22210 * C51019 + C22209 * C1972) +
            C22212 * C51020 - C39368 * C1974 - C39369 * C1971) *
               C50831 * C39165 +
           (C39368 * C1973 - (C22212 * C51019 + C22211 * C1972) +
            C39369 * C51020 - (C19767 * C7302 + C50686 * C7304) * C1974 -
            (C19767 * C7306 + C50686 * C7308) * C1971) *
               C50831 * C39166) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1551 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1549 -
            (C34172 + C34173 + C34174) * C1552 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1551 +
            (C34177 + C34176 + C34175) * C1549 -
            (C34180 + C34179 + C34178) * C1552 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C248 +
          (((C17881 + C17880 + C17879) * C1552 -
            ((C17186 + C17185 + C17184) * C1549 +
             (C17183 + C17182 + C17181) * C1551) +
            (C17884 + C17883 + C17882) * C50809) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C1552 -
            ((C17882 + C17883 + C17884) * C1549 +
             (C17879 + C17880 + C17881) * C1551) +
            (C18314 + C18315 + C18316) * C50809) *
               C50831 * C50907) *
              C249 +
          (((C17192 + C17191 + C17190) * C1551 +
            (C17189 + C17188 + C17187) * C1549 -
            (C18817 + C18816 + C18815) * C1552 -
            (C18820 + C18819 + C18818) * C50809) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C1551 +
            (C18818 + C18819 + C18820) * C1549 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C1552 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C50809) *
               C50831 * C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1551 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1549 -
            (C34172 + C34173 + C34174) * C1552 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1551 +
            (C34177 + C34176 + C34175) * C1549 -
            (C34180 + C34179 + C34178) * C1552 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C50730 * C900 +
          (((C34184 + C34185 + C34186) * C1552 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C1549 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1551) +
            (C34187 + C34188 + C34189) * C50809) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C1552 -
            ((C34189 + C34188 + C34187) * C1549 +
             (C34186 + C34185 + C34184) * C1551) +
            (C34195 + C34194 + C34193) * C50809) *
               C50831 * C50907) *
              C50730 * C901 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C1551 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C1549 -
            (C34500 + C34501 + C34502) * C1552 -
            (C34503 + C34504 + C34505) * C50809) *
               C50831 * C33829 +
           ((C34502 + C34501 + C34500) * C1551 +
            (C34505 + C34504 + C34503) * C1549 -
            (C16985 * C406 + C16980 * C425 + C16984 * C404 + C16979 * C418 +
             C16983 * C403 + C16978 * C417) *
                C1552 -
            (C16985 * C426 + C16980 * C436 + C16984 * C422 + C16979 * C434 +
             C16983 * C421 + C16978 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C2173 +
            (C21523 - (C21524 + C21525) + C21526) * C2174 +
            (C21527 - (C21528 + C21529) + C21530) * C2175) *
               C33829 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C2173 +
            (C24271 - (C24272 + C24273) + C24274) * C2174 +
            (C33430 - (C33431 + C33432) + C33433) * C2175) *
               C50907) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C2173 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C2174 +
            (C20145 * C1551 + C20146 * C1549 - C31599 * C1552 -
             C31600 * C50809) *
                C2175) *
               C33829 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C2173 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C2174 +
            (C31599 * C1551 + C31600 * C1549 -
             (C19767 * C2566 + C50686 * C2571) * C1552 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C2175) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C2173 +
            (C21307 - (C21306 + C21305) + C21308) * C2174 +
            (C21311 - (C21310 + C21309) + C21312) * C2175) *
               C33829 +
           ((C23955 - (C23954 + C23953) + C23956) * C2173 +
            (C23961 - (C23962 + C23963) + C23964) * C2174 +
            (C33132 - (C33133 + C33134) + C33135) * C2175) *
               C50907) *
              C249 +
          ((C21321 * C2173 + C21322 * C2174 +
            (C21315 + C21314 - C21313 - C21316) * C2175) *
               C33829 +
           (C33137 * C2173 + (C33134 + C33133 - C33132 - C33135) * C2174 +
            (C21099 * C1551 + C21100 * C1549 -
             (C19767 * C20718 + C50686 * C20719) * C1552 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C2175) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1551 +
            (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
            C22200 * C50809) *
               C50831 * C39163 +
           (C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
            C22202 * C50809) *
               C50831 * C39164 +
           (C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
            C22204 * C50809) *
               C50831 * C39165 +
           (C22203 * C1551 + C22204 * C1549 - C24075 * C1552 -
            C24076 * C50809) *
               C50831 * C39166) *
              C50730 * C900 +
          ((C22207 * C1552 -
            ((C19767 * C134 + C50686 * C144) * C1549 +
             (C19767 * C123 + C50686 * C130) * C1551) +
            C22208 * C50809) *
               C50831 * C39163 +
           (C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
            C22210 * C50809) *
               C50831 * C39164 +
           (C22211 * C1552 - (C22210 * C1549 + C22209 * C1551) +
            C22212 * C50809) *
               C50831 * C39165 +
           (C39368 * C1552 - (C22212 * C1549 + C22211 * C1551) +
            C39369 * C50809) *
               C50831 * C39166) *
              C50730 * C901 +
          (((C19767 * C124 + C50686 * C131) * C1551 +
            (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
            C22532 * C50809) *
               C50831 * C39163 +
           (C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
            C22534 * C50809) *
               C50831 * C39164 +
           (C22533 * C1551 + C22534 * C1549 - C39570 * C1552 -
            C39571 * C50809) *
               C50831 * C39165 +
           (C39570 * C1551 + C39571 * C1549 -
            (C19767 * C5402 + C50686 * C5407) * C1552 -
            (C19767 * C5408 + C50686 * C5411) * C50809) *
               C50831 * C39166) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1551 +
            (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
            C22200 * C50809) *
               C50831 * C39163 +
           (C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
            C22202 * C50809) *
               C50831 * C39164 +
           (C22201 * C1551 + C22202 * C1549 - C22203 * C1552 -
            C22204 * C50809) *
               C50831 * C39165 +
           (C22203 * C1551 + C22204 * C1549 - C24075 * C1552 -
            C24076 * C50809) *
               C50831 * C39166) *
              C248 +
          ((C21303 - (C21302 + C21301) + C21304) * C50831 * C39163 +
           (C23955 - (C23954 + C23953) + C23956) * C50831 * C39164 +
           (C23959 - (C23958 + C23957) + C23960) * C50831 * C39165 +
           (C23161 * C1552 - (C22206 * C1549 + C22205 * C1551) +
            C23162 * C50809) *
               C50831 * C39166) *
              C249 +
          (C21321 * C50831 * C39163 + C33137 * C50831 * C39164 +
           (C23967 + C23966 - C23965 - C23968) * C50831 * C39165 +
           (C23163 * C1551 + C23164 * C1549 -
            (C19767 * C23138 + C50686 * C23139) * C1552 -
            (C19767 * C23140 + C50686 * C23141) * C50809) *
               C50831 * C39166) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C51023 +
            ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
                C51024 +
            (C44773 * C121 + C44774 * C50745) * C50831 * C44479) *
               C50972 -
           ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
            (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
                C51023) *
               C50781) *
              C51015 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50831 *
                C51023 +
            (C28693 * C121 + C28694 * C50745) * C50831 * C51024 +
            ((C28016 + C28015) * C121 + (C28018 + C28017) * C50745) * C50831 *
                C44479) *
               C50781 -
           ((C44776 * C50745 + C44775 * C121) * C50831 * C44479 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
                C51024 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50831 * C51023) *
               C50972) *
              C51016 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C50831 * C51023 +
            ((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50831 *
                C51024 +
            ((C49718 * C403 + C50957 * C417 + C49711 * C404 + C50691 * C418) *
                 C121 +
             (C49718 * C421 + C50957 * C433 + C49711 * C422 + C50691 * C434) *
                 C50745) *
                C50831 * C44479) *
               C50972 -
           (((C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50745 +
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C121) *
                C50831 * C44479 +
            ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C50831 *
                C51024 +
            ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C50831 *
                C51023) *
               C50781) *
              C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                C50831 * C51023 +
            ((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
             (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                C50831 * C51024 +
            (C44773 * C644 + C44774 * C50973 - (C30405 + C30406) * C645 -
             (C30407 + C30408) * C50809) *
                C50831 * C44479) *
               C50972 +
           ((C28691 * C645 -
             ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
             C28692 * C50809) *
                C50831 * C51023 +
            (C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
             C29216 * C50809) *
                C50831 * C51024 +
            ((C29227 + C29228) * C645 - (C29218 * C50973 + C29217 * C644) +
             (C29229 + C29230) * C50809) *
                C50831 * C44479) *
               C50781) *
              C251 +
          ((((C28007 + C28008) * C645 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50973 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C644) +
             (C28009 + C28010) * C50809) *
                C50831 * C51023 +
            ((C28012 + C28011) * C645 -
             ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
             (C28014 + C28013) * C50809) *
                C50831 * C51024 +
            ((C44786 + C44785) * C645 - (C44776 * C50973 + C44775 * C644) +
             (C44788 + C44787) * C50809) *
                C50831 * C44479) *
               C50972 +
           (((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
             C28696 * C645 - C28695 * C50809) *
                C50831 * C51023 +
            (C28693 * C644 + C28694 * C50973 - (C28015 + C28016) * C645 -
             (C28017 + C28018) * C50809) *
                C50831 * C51024 +
            ((C28016 + C28015) * C644 + (C28018 + C28017) * C50973 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C645 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C50809) *
                C50831 * C44479) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C51023 +
            ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
                C51024 +
            ((C28003 + C28004) * C121 + (C28005 + C28006) * C50745) * C50831 *
                C44479) *
               C248 -
           ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
            (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
                C51023) *
               C249 +
           (C24914 * C50831 * C51023 +
            (C29877 * C121 + C29878 * C50745) * C50831 * C51024 +
            ((C26047 + C26048) * C121 + (C26049 + C26050) * C50745) * C50831 *
                C44479) *
               C250) *
              C251 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50831 *
                C51023 +
            (C28693 * C121 + C28694 * C50745) * C50831 * C51024 +
            ((C28016 + C28015) * C121 + (C28018 + C28017) * C50745) * C50831 *
                C44479) *
               C249 -
           (((C28013 + C28014) * C50745 + (C28011 + C28012) * C121) * C50831 *
                C44479 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
                C51024 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50831 * C51023) *
               C248 -
           (((C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
              C50957 * C2574) *
                 C50745 +
             (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
              C50957 * C2568) *
                 C121) *
                C50831 * C44479 +
            ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C50831 *
                C51024 +
            C24915 * C50831 * C51023) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C51023 +
           ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
               C51024 +
           ((C28003 + C28004) * C121 + (C28005 + C28006) * C50745) * C50831 *
               C44479) *
              C50730 * C113 -
          (((C28013 + C28014) * C50745 + (C28011 + C28012) * C121) * C50831 *
               C44479 +
           ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
               C51024 +
           ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                C50745 +
            (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                C121) *
               C50831 * C51023) *
              C50730 * C114 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C121 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C50745) *
               C50831 * C51023 +
           ((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50831 *
               C51024 +
           ((C49718 * C403 + C50957 * C417 + C49711 * C404 + C50691 * C418) *
                C121 +
            (C49718 * C421 + C50957 * C433 + C49711 * C422 + C50691 * C434) *
                C50745) *
               C50831 * C44479) *
              C50730 * C115 -
          (((C49711 * C426 + C50691 * C436 + C49718 * C422 + C50957 * C434) *
                C50745 +
            (C49711 * C406 + C50691 * C425 + C49718 * C404 + C50957 * C418) *
                C121) *
               C50831 * C44479 +
           ((C49711 * C424 + C50691 * C435 + C49718 * C411 + C50957 * C427) *
                C50745 +
            (C49711 * C405 + C50691 * C423 + C49718 * C397 + C50957 * C407) *
                C121) *
               C50831 * C51024 +
           ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                C50745 +
            (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                C121) *
               C50831 * C51023) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C394 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C391 -
            (C27999 + C28000) * C395 - (C28001 + C28002) * C392 +
            C44773 * C396 + C44774 * C393) *
               C50831 * C51023 +
           ((C28000 + C27999) * C394 + (C28002 + C28001) * C391 -
            (C28004 + C28003) * C395 - (C28006 + C28005) * C392 +
            (C30406 + C30405) * C396 + (C30408 + C30407) * C393) *
               C50831 * C51024 +
           (C44773 * C394 + C44774 * C391 - (C30405 + C30406) * C395 -
            (C30407 + C30408) * C392 +
            (C49718 * C5400 + C50957 * C5403 + C49711 * C5401 +
             C50691 * C5404) *
                C396 +
            (C49718 * C5405 + C50957 * C5409 + C49711 * C5406 +
             C50691 * C5410) *
                C393) *
               C50831 * C44479) *
              C50730 * C251 +
          (((C28007 + C28008) * C395 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C391 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C394) +
            (C28009 + C28010) * C392 - C44775 * C396 - C44776 * C393) *
               C50831 * C51023 +
           ((C28012 + C28011) * C395 -
            ((C28010 + C28009) * C391 + (C28008 + C28007) * C394) +
            (C28014 + C28013) * C392 - (C44785 + C44786) * C396 -
            (C44787 + C44788) * C393) *
               C50831 * C51024 +
           ((C44786 + C44785) * C395 - (C44776 * C391 + C44775 * C394) +
            (C44788 + C44787) * C392 -
            (C49711 * C5402 + C50691 * C5407 + C49718 * C5401 +
             C50957 * C5404) *
                C396 -
            (C49711 * C5408 + C50691 * C5411 + C49718 * C5406 +
             C50957 * C5410) *
                C393) *
               C50831 * C44479) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C644 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50973 -
            (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
               C50831 * C51023 +
           ((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
            (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
               C50831 * C51024 +
           (C44773 * C644 + C44774 * C50973 - (C30405 + C30406) * C645 -
            (C30407 + C30408) * C50809) *
               C50831 * C44479) *
              C50730 * C51015 +
          (((C28007 + C28008) * C645 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50973 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C644) +
            (C28009 + C28010) * C50809) *
               C50831 * C51023 +
           ((C28012 + C28011) * C645 -
            ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
            (C28014 + C28013) * C50809) *
               C50831 * C51024 +
           ((C44786 + C44785) * C645 - (C44776 * C50973 + C44775 * C644) +
            (C44788 + C44787) * C50809) *
               C50831 * C44479) *
              C50730 * C51016 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C644 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C50973 -
            (C28427 + C28428) * C645 - (C28429 + C28430) * C50809) *
               C50831 * C51023 +
           ((C28428 + C28427) * C644 + (C28430 + C28429) * C50973 -
            (C45089 + C45090) * C645 - (C45091 + C45092) * C50809) *
               C50831 * C51024 +
           ((C45090 + C45089) * C644 + (C45092 + C45091) * C50973 -
            (C49711 * C1725 + C50691 * C1729 + C49718 * C1726 +
             C50957 * C1730) *
                C645 -
            (C49711 * C1733 + C50691 * C1737 + C49718 * C1734 +
             C50957 * C1738) *
                C50809) *
               C50831 * C44479) *
              C50730 * C539)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C51023 +
           ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
               C51024 +
           ((C28003 + C28004) * C121 + (C28005 + C28006) * C50745) * C50831 *
               C44479) *
              C50730 * C113 -
          (((C28013 + C28014) * C50745 + (C28011 + C28012) * C121) * C50831 *
               C44479 +
           ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
               C51024 +
           ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                C50745 +
            (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                C121) *
               C50831 * C51023) *
              C50730 * C114 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C121 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C50745) *
               C50831 * C51023 +
           ((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50831 *
               C51024 +
           ((C49718 * C403 + C50957 * C417 + C49711 * C404 + C50691 * C418) *
                C121 +
            (C49718 * C421 + C50957 * C433 + C49711 * C422 + C50691 * C434) *
                C50745) *
               C50831 * C44479) *
              C50730 * C115 -
          (((C49711 * C426 + C50691 * C436 + C49718 * C422 + C50957 * C434) *
                C50745 +
            (C49711 * C406 + C50691 * C425 + C49718 * C404 + C50957 * C418) *
                C121) *
               C50831 * C44479 +
           ((C49711 * C424 + C50691 * C435 + C49718 * C411 + C50957 * C427) *
                C50745 +
            (C49711 * C405 + C50691 * C423 + C49718 * C397 + C50957 * C407) *
                C121) *
               C50831 * C51024 +
           ((C49711 * C137 + C50691 * C147 + C49718 * C136 + C50957 * C146) *
                C50745 +
            (C49711 * C126 + C50691 * C138 + C49718 * C125 + C50957 * C132) *
                C121) *
               C50831 * C51023) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C51023 +
            ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
                C51024 +
            ((C28003 + C28004) * C121 + (C28005 + C28006) * C50745) * C50831 *
                C44479) *
               C248 -
           ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
            (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
                C51023) *
               C249 +
           (C24914 * C50831 * C51023 +
            (C29877 * C121 + C29878 * C50745) * C50831 * C51024 +
            ((C26047 + C26048) * C121 + (C26049 + C26050) * C50745) * C50831 *
                C44479) *
               C250) *
              C251 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50831 *
                C51023 +
            (C28693 * C121 + C28694 * C50745) * C50831 * C51024 +
            ((C28016 + C28015) * C121 + (C28018 + C28017) * C50745) * C50831 *
                C44479) *
               C249 -
           (((C28013 + C28014) * C50745 + (C28011 + C28012) * C121) * C50831 *
                C44479 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
                C51024 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50831 * C51023) *
               C248 -
           (((C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
              C50957 * C2574) *
                 C50745 +
             (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
              C50957 * C2568) *
                 C121) *
                C50831 * C44479 +
            ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C50831 *
                C51024 +
            C24915 * C50831 * C51023) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C51023 +
            ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
                C51024 +
            (C44773 * C121 + C44774 * C50745) * C50831 * C44479) *
               C51017 -
           ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
            (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
                C51023) *
               C51018 +
           (C24914 * C50831 * C51023 +
            (C29877 * C121 + C29878 * C50745) * C50831 * C51024 +
            ((C26047 + C26048) * C121 + (C26049 + C26050) * C50745) * C50831 *
                C44479) *
               C1204) *
              C50964 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50831 *
                C51023 +
            (C28693 * C121 + C28694 * C50745) * C50831 * C51024 +
            ((C28016 + C28015) * C121 + (C28018 + C28017) * C50745) * C50831 *
                C44479) *
               C51018 -
           ((C44776 * C50745 + C44775 * C121) * C50831 * C44479 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
                C51024 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50831 * C51023) *
               C51017 -
           (((C49711 * C2572 + C50691 * C2575 + C49718 * C2570 +
              C50957 * C2574) *
                 C50745 +
             (C49711 * C2566 + C50691 * C2571 + C49718 * C2565 +
              C50957 * C2568) *
                 C121) *
                C50831 * C44479 +
            ((C25619 + C25618) * C50745 + (C25617 + C25616) * C121) * C50831 *
                C51024 +
            C24915 * C50831 * C51023) *
               C1204) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C644 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50973 -
            (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
               C50831 * C51023 +
           ((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
            (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
               C50831 * C51024 +
           (C44773 * C644 + C44774 * C50973 - (C30405 + C30406) * C645 -
            (C30407 + C30408) * C50809) *
               C50831 * C44479) *
              C51017 +
          ((C28691 * C645 -
            ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
            C28692 * C50809) *
               C50831 * C51023 +
           (C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
            C29216 * C50809) *
               C50831 * C51024 +
           ((C29227 + C29228) * C645 - (C29218 * C50973 + C29217 * C644) +
            (C29229 + C29230) * C50809) *
               C50831 * C44479) *
              C51018 +
          (C26557 * C50831 * C51023 +
           (C29877 * C644 + C29878 * C50973 - (C26048 + C26047) * C645 -
            (C26050 + C26049) * C50809) *
               C50831 * C51024 +
           ((C26047 + C26048) * C644 + (C26049 + C26050) * C50973 -
            (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
             C50957 * C4514) *
                C645 -
            (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
             C50957 * C4520) *
                C50809) *
               C50831 * C44479) *
              C1204) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C51023 +
           ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
               C51024 +
           (C44773 * C121 + C44774 * C50745) * C50831 * C44479) *
              C969 -
          ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
           (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
           ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
               C51023) *
              C970 +
          (C24914 * C50831 * C51023 +
           (C29877 * C121 + C29878 * C50745) * C50831 * C51024 +
           ((C26047 + C26048) * C121 + (C26049 + C26050) * C50745) * C50831 *
               C44479) *
              C971 -
          (((C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
             C50957 * C3568) *
                C50745 +
            (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
             C50957 * C3564) *
                C121) *
               C50831 * C44479 +
           ((C26555 + C26554) * C50745 + (C26553 + C26552) * C121) * C50831 *
               C51024 +
           C25880 * C50831 * C51023) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C51023 +
            ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
                C51024 +
            (C44773 * C121 + C44774 * C50745) * C50831 * C44479) *
               C898 -
           ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
            (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
                C51023) *
               C50781) *
              C900 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50831 *
                C51023 +
            (C28693 * C121 + C28694 * C50745) * C50831 * C51024 +
            ((C28016 + C28015) * C121 + (C28018 + C28017) * C50745) * C50831 *
                C44479) *
               C50781 -
           ((C44776 * C50745 + C44775 * C121) * C50831 * C44479 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
                C51024 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50831 * C51023) *
               C898) *
              C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C50831 * C51023 +
            ((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50831 *
                C51024 +
            ((C45090 + C45089) * C121 + (C45092 + C45091) * C50745) * C50831 *
                C44479) *
               C898 -
           (((C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50745 +
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C121) *
                C50831 * C44479 +
            ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C50831 *
                C51024 +
            ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C50831 *
                C51023) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C394 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C391 -
            (C27999 + C28000) * C395 - (C28001 + C28002) * C392 +
            C44773 * C396 + C44774 * C393) *
               C50831 * C51023 +
           ((C28000 + C27999) * C394 + (C28002 + C28001) * C391 -
            (C28004 + C28003) * C395 - (C28006 + C28005) * C392 +
            (C30406 + C30405) * C396 + (C30408 + C30407) * C393) *
               C50831 * C51024 +
           (C44773 * C394 + C44774 * C391 - (C30405 + C30406) * C395 -
            (C30407 + C30408) * C392 +
            (C49718 * C5400 + C50957 * C5403 + C49711 * C5401 +
             C50691 * C5404) *
                C396 +
            (C49718 * C5405 + C50957 * C5409 + C49711 * C5406 +
             C50691 * C5410) *
                C393) *
               C50831 * C44479) *
              C898 +
          ((C28691 * C395 -
            ((C24885 + C24884) * C391 + (C24883 + C24882) * C394) +
            C28692 * C392 - C29217 * C396 - C29218 * C393) *
               C50831 * C51023 +
           (C29215 * C395 - (C28690 * C391 + C28689 * C394) + C29216 * C392 -
            (C29228 + C29227) * C396 - (C29230 + C29229) * C393) *
               C50831 * C51024 +
           ((C29227 + C29228) * C395 - (C29218 * C391 + C29217 * C394) +
            (C29229 + C29230) * C392 -
            (C49711 * C6404 + C50691 * C6406 + C49718 * C6405 +
             C50957 * C6407) *
                C396 -
            (C49711 * C6408 + C50691 * C6410 + C49718 * C6409 +
             C50957 * C6411) *
                C393) *
               C50831 * C44479) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C644 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50973 -
             (C27999 + C28000) * C645 - (C28001 + C28002) * C50809) *
                C50831 * C51023 +
            ((C28000 + C27999) * C644 + (C28002 + C28001) * C50973 -
             (C28004 + C28003) * C645 - (C28006 + C28005) * C50809) *
                C50831 * C51024 +
            (C44773 * C644 + C44774 * C50973 - (C30405 + C30406) * C645 -
             (C30407 + C30408) * C50809) *
                C50831 * C44479) *
               C898 +
           ((C28691 * C645 -
             ((C24885 + C24884) * C50973 + (C24883 + C24882) * C644) +
             C28692 * C50809) *
                C50831 * C51023 +
            (C29215 * C645 - (C28690 * C50973 + C28689 * C644) +
             C29216 * C50809) *
                C50831 * C51024 +
            ((C29227 + C29228) * C645 - (C29218 * C50973 + C29217 * C644) +
             (C29229 + C29230) * C50809) *
                C50831 * C44479) *
               C50781) *
              C50964 +
          ((((C28007 + C28008) * C645 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C50973 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C644) +
             (C28009 + C28010) * C50809) *
                C50831 * C51023 +
            ((C28012 + C28011) * C645 -
             ((C28010 + C28009) * C50973 + (C28008 + C28007) * C644) +
             (C28014 + C28013) * C50809) *
                C50831 * C51024 +
            ((C44786 + C44785) * C645 - (C44776 * C50973 + C44775 * C644) +
             (C44788 + C44787) * C50809) *
                C50831 * C44479) *
               C898 +
           (((C24894 + C24895) * C644 + (C24896 + C24897) * C50973 -
             C28696 * C645 - C28695 * C50809) *
                C50831 * C51023 +
            (C28693 * C644 + C28694 * C50973 - (C28015 + C28016) * C645 -
             (C28017 + C28018) * C50809) *
                C50831 * C51024 +
            ((C28016 + C28015) * C644 + (C28018 + C28017) * C50973 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C645 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C50809) *
                C50831 * C44479) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C121 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C50745) *
                C50831 * C51023 +
            ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
                C51024 +
            (C44773 * C121 + C44774 * C50745) * C50831 * C44479) *
               C898 -
           ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
            (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
            ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
                C51023) *
               C50781) *
              C900 +
          ((((C24894 + C24895) * C121 + (C24896 + C24897) * C50745) * C50831 *
                C51023 +
            (C28693 * C121 + C28694 * C50745) * C50831 * C51024 +
            ((C28016 + C28015) * C121 + (C28018 + C28017) * C50745) * C50831 *
                C44479) *
               C50781 -
           ((C44776 * C50745 + C44775 * C121) * C50831 * C44479 +
            ((C28010 + C28009) * C50745 + (C28008 + C28007) * C121) * C50831 *
                C51024 +
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C50745 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C121) *
                C50831 * C51023) *
               C898) *
              C901 +
          ((((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                 C121 +
             (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                 C50745) *
                C50831 * C51023 +
            ((C28428 + C28427) * C121 + (C28430 + C28429) * C50745) * C50831 *
                C51024 +
            ((C45090 + C45089) * C121 + (C45092 + C45091) * C50745) * C50831 *
                C44479) *
               C898 -
           (((C49711 * C1096 + C50691 * C1100 + C49718 * C1097 +
              C50957 * C1101) *
                 C50745 +
             (C49711 * C1088 + C50691 * C1092 + C49718 * C1089 +
              C50957 * C1093) *
                 C121) *
                C50831 * C44479 +
            ((C28224 + C28223) * C50745 + (C28222 + C28221) * C121) * C50831 *
                C51024 +
            ((C25227 + C25226) * C50745 + (C25225 + C25224) * C121) * C50831 *
                C51023) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C121 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C50745) *
               C50831 * C51023 +
           ((C28000 + C27999) * C121 + (C28002 + C28001) * C50745) * C50831 *
               C51024 +
           (C44773 * C121 + C44774 * C50745) * C50831 * C44479) *
              C969 -
          ((C29218 * C50745 + C29217 * C121) * C50831 * C44479 +
           (C28690 * C50745 + C28689 * C121) * C50831 * C51024 +
           ((C24885 + C24884) * C50745 + (C24883 + C24882) * C121) * C50831 *
               C51023) *
              C970 +
          (C24914 * C50831 * C51023 +
           (C29877 * C121 + C29878 * C50745) * C50831 * C51024 +
           ((C26047 + C26048) * C121 + (C26049 + C26050) * C50745) * C50831 *
               C44479) *
              C971 -
          (((C49711 * C3565 + C50691 * C3567 + C49718 * C3566 +
             C50957 * C3568) *
                C50745 +
            (C49711 * C3561 + C50691 * C3563 + C49718 * C3562 +
             C50957 * C3564) *
                C121) *
               C50831 * C44479 +
           ((C26555 + C26554) * C50745 + (C26553 + C26552) * C121) * C50831 *
               C51024 +
           C25880 * C50831 * C51023) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                 C1551 +
             (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                 C1549 -
             (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
                C50831 * C51023 +
            ((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
             (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
                C50831 * C51024 +
            (C44773 * C1551 + C44774 * C1549 - C46553 * C1552 -
             C46554 * C50809) *
                C50831 * C44479) *
               C50972 +
           ((C28691 * C1552 -
             ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
             C28692 * C50809) *
                C50831 * C51023 +
            (C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
             C29216 * C50809) *
                C50831 * C51024 +
            ((C29227 + C29228) * C1552 - (C29218 * C1549 + C29217 * C1551) +
             (C29229 + C29230) * C50809) *
                C50831 * C44479) *
               C50781) *
              C50964 +
          ((((C28007 + C28008) * C1552 -
             ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                  C1549 +
              (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                  C1551) +
             (C28009 + C28010) * C50809) *
                C50831 * C51023 +
            ((C28012 + C28011) * C1552 -
             ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
             (C28014 + C28013) * C50809) *
                C50831 * C51024 +
            ((C44786 + C44785) * C1552 - (C44776 * C1549 + C44775 * C1551) +
             (C44788 + C44787) * C50809) *
                C50831 * C44479) *
               C50972 +
           (((C24894 + C24895) * C1551 + (C24896 + C24897) * C1549 -
             C28696 * C1552 - C28695 * C50809) *
                C50831 * C51023 +
            (C28693 * C1551 + C28694 * C1549 - (C28015 + C28016) * C1552 -
             (C28017 + C28018) * C50809) *
                C50831 * C51024 +
            ((C28016 + C28015) * C1551 + (C28018 + C28017) * C1549 -
             (C49711 * C5998 + C50691 * C5999 + C49718 * C4505 +
              C50957 * C4509) *
                 C1552 -
             (C49711 * C6000 + C50691 * C6001 + C49718 * C4511 +
              C50957 * C4517) *
                 C50809) *
                C50831 * C44479) *
               C50781) *
              C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1972 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C51019 -
            (C27999 + C28000) * C1973 - (C28001 + C28002) * C51020 +
            C44773 * C1974 + C44774 * C1971) *
               C50831 * C51023 +
           ((C28000 + C27999) * C1972 + (C28002 + C28001) * C51019 -
            (C28004 + C28003) * C1973 - (C28006 + C28005) * C51020 +
            (C30406 + C30405) * C1974 + (C30408 + C30407) * C1971) *
               C50831 * C51024 +
           (C44773 * C1972 + C44774 * C51019 - C46553 * C1973 -
            C46554 * C51020 + (C46564 + C46563) * C1974 +
            (C46566 + C46565) * C1971) *
               C50831 * C44479) *
              C50972 +
          ((C28691 * C1973 -
            ((C24885 + C24884) * C51019 + (C24883 + C24882) * C1972) +
            C28692 * C51020 - C29217 * C1974 - C29218 * C1971) *
               C50831 * C51023 +
           (C29215 * C1973 - (C28690 * C51019 + C28689 * C1972) +
            C29216 * C51020 - (C29228 + C29227) * C1974 -
            (C29230 + C29229) * C1971) *
               C50831 * C51024 +
           ((C29227 + C29228) * C1973 - (C29218 * C51019 + C29217 * C1972) +
            (C29229 + C29230) * C51020 -
            (C49711 * C6404 + C50691 * C6406 + C49718 * C6405 +
             C50957 * C6407) *
                C1974 -
            (C49711 * C6408 + C50691 * C6410 + C49718 * C6409 +
             C50957 * C6411) *
                C1971) *
               C50831 * C44479) *
              C50781) *
         C50713) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
               C50831 * C51023 +
           ((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
            (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
               C50831 * C51024 +
           (C44773 * C1551 + C44774 * C1549 - (C30405 + C30406) * C1552 -
            (C30407 + C30408) * C50809) *
               C50831 * C44479) *
              C248 +
          ((C28691 * C1552 -
            ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
            C28692 * C50809) *
               C50831 * C51023 +
           (C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
            C29216 * C50809) *
               C50831 * C51024 +
           ((C29227 + C29228) * C1552 - (C29218 * C1549 + C29217 * C1551) +
            (C29229 + C29230) * C50809) *
               C50831 * C44479) *
              C249 +
          (C26856 * C50831 * C51023 +
           (C29877 * C1551 + C29878 * C1549 - (C26048 + C26047) * C1552 -
            (C26050 + C26049) * C50809) *
               C50831 * C51024 +
           ((C26047 + C26048) * C1551 + (C26049 + C26050) * C1549 -
            (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
             C50957 * C4514) *
                C1552 -
            (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
             C50957 * C4520) *
                C50809) *
               C50831 * C44479) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
               C50831 * C51023 +
           ((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
            (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
               C50831 * C51024 +
           (C44773 * C1551 + C44774 * C1549 - (C30405 + C30406) * C1552 -
            (C30407 + C30408) * C50809) *
               C50831 * C44479) *
              C50730 * C900 +
          (((C28007 + C28008) * C1552 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C1549 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C1551) +
            (C28009 + C28010) * C50809) *
               C50831 * C51023 +
           ((C28012 + C28011) * C1552 -
            ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
            (C28014 + C28013) * C50809) *
               C50831 * C51024 +
           ((C44786 + C44785) * C1552 - (C44776 * C1549 + C44775 * C1551) +
            (C44788 + C44787) * C50809) *
               C50831 * C44479) *
              C50730 * C901 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C1551 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C1549 -
            (C28427 + C28428) * C1552 - (C28429 + C28430) * C50809) *
               C50831 * C51023 +
           ((C28428 + C28427) * C1551 + (C28430 + C28429) * C1549 -
            (C45089 + C45090) * C1552 - (C45091 + C45092) * C50809) *
               C50831 * C51024 +
           ((C45090 + C45089) * C1551 + (C45092 + C45091) * C1549 -
            (C49711 * C1725 + C50691 * C1729 + C49718 * C1726 +
             C50957 * C1730) *
                C1552 -
            (C49711 * C1733 + C50691 * C1737 + C49718 * C1734 +
             C50957 * C1738) *
                C50809) *
               C50831 * C44479) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
               C1721 +
           (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
               C1717 -
           (C27999 + C28000) * C1722 - (C28001 + C28002) * C1718 +
           C44773 * C1723 + C44774 * C1719 - C46553 * C1724 - C46554 * C1720) *
              C50831 * C51023 +
          ((C28000 + C27999) * C1721 + (C28002 + C28001) * C1717 -
           (C28004 + C28003) * C1722 - (C28006 + C28005) * C1718 +
           (C30406 + C30405) * C1723 + (C30408 + C30407) * C1719 -
           (C46563 + C46564) * C1724 - (C46565 + C46566) * C1720) *
              C50831 * C51024 +
          (C44773 * C1721 + C44774 * C1717 - C46553 * C1722 - C46554 * C1718 +
           (C46564 + C46563) * C1723 + (C46566 + C46565) * C1719 -
           (C49711 * C7302 + C50691 * C7304 + C49718 * C7303 + C50957 * C7305) *
               C1724 -
           (C49711 * C7306 + C50691 * C7308 + C49718 * C7307 + C50957 * C7309) *
               C1720) *
              C50831 * C44479) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1972 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C51019 -
            (C27999 + C28000) * C1973 - (C28001 + C28002) * C51020 +
            C44773 * C1974 + C44774 * C1971) *
               C50831 * C51023 +
           ((C28000 + C27999) * C1972 + (C28002 + C28001) * C51019 -
            (C28004 + C28003) * C1973 - (C28006 + C28005) * C51020 +
            (C30406 + C30405) * C1974 + (C30408 + C30407) * C1971) *
               C50831 * C51024 +
           (C44773 * C1972 + C44774 * C51019 - C46553 * C1973 -
            C46554 * C51020 + (C46564 + C46563) * C1974 +
            (C46566 + C46565) * C1971) *
               C50831 * C44479) *
              C50730 * C50964 +
          (((C28007 + C28008) * C1973 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C51019 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C1972) +
            (C28009 + C28010) * C51020 - C44775 * C1974 - C44776 * C1971) *
               C50831 * C51023 +
           ((C28012 + C28011) * C1973 -
            ((C28010 + C28009) * C51019 + (C28008 + C28007) * C1972) +
            (C28014 + C28013) * C51020 - (C44785 + C44786) * C1974 -
            (C44787 + C44788) * C1971) *
               C50831 * C51024 +
           ((C44786 + C44785) * C1973 - (C44776 * C51019 + C44775 * C1972) +
            (C44788 + C44787) * C51020 -
            (C49711 * C5402 + C50691 * C5407 + C49718 * C5401 +
             C50957 * C5404) *
                C1974 -
            (C49711 * C5408 + C50691 * C5411 + C49718 * C5406 +
             C50957 * C5410) *
                C1971) *
               C50831 * C44479) *
              C50730 * C50718)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
               C50831 * C51023 +
           ((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
            (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
               C50831 * C51024 +
           (C44773 * C1551 + C44774 * C1549 - (C30405 + C30406) * C1552 -
            (C30407 + C30408) * C50809) *
               C50831 * C44479) *
              C50730 * C900 +
          (((C28007 + C28008) * C1552 -
            ((C49711 * C135 + C50691 * C145 + C49718 * C134 + C50957 * C144) *
                 C1549 +
             (C49711 * C124 + C50691 * C131 + C49718 * C123 + C50957 * C130) *
                 C1551) +
            (C28009 + C28010) * C50809) *
               C50831 * C51023 +
           ((C28012 + C28011) * C1552 -
            ((C28010 + C28009) * C1549 + (C28008 + C28007) * C1551) +
            (C28014 + C28013) * C50809) *
               C50831 * C51024 +
           ((C44786 + C44785) * C1552 - (C44776 * C1549 + C44775 * C1551) +
            (C44788 + C44787) * C50809) *
               C50831 * C44479) *
              C50730 * C901 +
          (((C49718 * C124 + C50957 * C131 + C49711 * C125 + C50691 * C132) *
                C1551 +
            (C49718 * C135 + C50957 * C145 + C49711 * C136 + C50691 * C146) *
                C1549 -
            (C28427 + C28428) * C1552 - (C28429 + C28430) * C50809) *
               C50831 * C51023 +
           ((C28428 + C28427) * C1551 + (C28430 + C28429) * C1549 -
            (C45089 + C45090) * C1552 - (C45091 + C45092) * C50809) *
               C50831 * C51024 +
           ((C45090 + C45089) * C1551 + (C45092 + C45091) * C1549 -
            (C49711 * C1725 + C50691 * C1729 + C49718 * C1726 +
             C50957 * C1730) *
                C1552 -
            (C49711 * C1733 + C50691 * C1737 + C49718 * C1734 +
             C50957 * C1738) *
                C50809) *
               C50831 * C44479) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50957 * C129 + C49711 * C123 + C50691 * C130) *
                C1551 +
            (C49718 * C133 + C50957 * C143 + C49711 * C134 + C50691 * C144) *
                C1549 -
            (C27999 + C28000) * C1552 - (C28001 + C28002) * C50809) *
               C50831 * C51023 +
           ((C28000 + C27999) * C1551 + (C28002 + C28001) * C1549 -
            (C28004 + C28003) * C1552 - (C28006 + C28005) * C50809) *
               C50831 * C51024 +
           (C44773 * C1551 + C44774 * C1549 - (C30405 + C30406) * C1552 -
            (C30407 + C30408) * C50809) *
               C50831 * C44479) *
              C248 +
          ((C28691 * C1552 -
            ((C24885 + C24884) * C1549 + (C24883 + C24882) * C1551) +
            C28692 * C50809) *
               C50831 * C51023 +
           (C29215 * C1552 - (C28690 * C1549 + C28689 * C1551) +
            C29216 * C50809) *
               C50831 * C51024 +
           ((C29227 + C29228) * C1552 - (C29218 * C1549 + C29217 * C1551) +
            (C29229 + C29230) * C50809) *
               C50831 * C44479) *
              C249 +
          (C26856 * C50831 * C51023 +
           (C29877 * C1551 + C29878 * C1549 - (C26048 + C26047) * C1552 -
            (C26050 + C26049) * C50809) *
               C50831 * C51024 +
           ((C26047 + C26048) * C1551 + (C26049 + C26050) * C1549 -
            (C49711 * C4507 + C50691 * C4513 + C49718 * C4508 +
             C50957 * C4514) *
                C1552 -
            (C49711 * C4515 + C50691 * C4519 + C49718 * C4516 +
             C50957 * C4520) *
                C50809) *
               C50831 * C44479) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C121 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50745) *
                         C50831 * C33829 +
                     ((C34174 + C34173 + C34172) * C121 +
                      (C34177 + C34176 + C34175) * C50745) *
                         C50831 * C50907) *
                        C50972 -
                    (((C17882 + C17883 + C17884) * C50745 +
                      (C17879 + C17880 + C17881) * C121) *
                         C50831 * C50907 +
                     ((C17186 + C17185 + C17184) * C50745 +
                      (C17183 + C17182 + C17181) * C121) *
                         C50831 * C33829) *
                        C50781) *
                       C51015 +
                   ((((C17193 + C17194 + C17195) * C121 +
                      (C17196 + C17197 + C17198) * C50745) *
                         C50831 * C33829 +
                     ((C17885 + C17886 + C17887) * C121 +
                      (C17888 + C17889 + C17890) * C50745) *
                         C50831 * C50907) *
                        C50781 -
                    (((C34189 + C34188 + C34187) * C50745 +
                      (C34186 + C34185 + C34184) * C121) *
                         C50831 * C50907 +
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50745 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C121) *
                         C50831 * C33829) *
                        C50972) *
                       C51016 +
                   ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                       C16979 * C132 + C16985 * C126 + C16980 * C138) *
                          C121 +
                      (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                       C16979 * C146 + C16985 * C137 + C16980 * C147) *
                          C50745) *
                         C50831 * C33829 +
                     ((C16983 * C398 + C16978 * C408 + C16984 * C397 +
                       C16979 * C407 + C16985 * C405 + C16980 * C423) *
                          C121 +
                      (C16983 * C412 + C16978 * C428 + C16984 * C411 +
                       C16979 * C427 + C16985 * C424 + C16980 * C435) *
                          C50745) *
                         C50831 * C50907) *
                        C50972 -
                    (((C16985 * C794 + C16980 * C799 + C16984 * C792 +
                       C16979 * C798 + C16983 * C791 + C16978 * C797) *
                          C50745 +
                      (C16985 * C784 + C16980 * C793 + C16984 * C783 +
                       C16979 * C788 + C16983 * C782 + C16978 * C787) *
                          C121) *
                         C50831 * C50907 +
                     ((C17514 + C17513 + C17512) * C50745 +
                      (C17511 + C17510 + C17509) * C121) *
                         C50831 * C33829) *
                        C50781) *
                       C539)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50686 * C129) * C121 +
                       (C19767 * C133 + C50686 * C143) * C50745) *
                          C2173 +
                      (C19915 + C19916) * C2174 + C19931 * C2175) *
                         C33829 +
                     ((C22199 * C121 + C22200 * C50745) * C2173 +
                      (C21993 + C21994) * C2174 + C31299 * C2175) *
                         C50907) *
                        C50972 -
                    ((C32191 * C2175 + (C21999 + C22000) * C2174 +
                      (C21994 + C21993) * C2173) *
                         C50907 +
                     (C20612 * C2175 + (C19918 + C19917) * C2174 +
                      (C19916 + C19915) * C2173) *
                         C33829) *
                        C50781) *
                       C51015 +
                   ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
                      (C19927 + C19928) * C2175) *
                         C33829 +
                     ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
                      (C31300 + C31301) * C2175) *
                         C50907) *
                        C50781 -
                    ((C31302 * C2175 + (C22002 + C22001) * C2174 +
                      (C22208 * C50745 + C22207 * C121) * C2173) *
                         C50907 +
                     (C19934 * C2175 + (C19924 + C19923) * C2174 +
                      ((C19767 * C134 + C50686 * C144) * C50745 +
                       (C19767 * C123 + C50686 * C130) * C121) *
                          C2173) *
                         C33829) *
                        C50972) *
                       C51016 +
                   (((((C19767 * C124 + C50686 * C131) * C121 +
                       (C19767 * C135 + C50686 * C145) * C50745) *
                          C2173 +
                      (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
                         C33829 +
                     ((C22531 * C121 + C22532 * C50745) * C2173 +
                      (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
                         C50907) *
                        C50972 -
                    ((((C19767 * C3094 + C50686 * C3097) * C50745 +
                       (C19767 * C3088 + C50686 * C3093) * C121) *
                          C2175 +
                      (C31602 + C31601) * C2174 + (C22374 + C22373) * C2173) *
                         C50907 +
                     ((C20154 + C20153) * C2175 + (C20152 + C20151) * C2174 +
                      (C20150 + C20149) * C2173) *
                         C33829) *
                        C50781) *
                       C539)) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C644 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50973 -
             (C34172 + C34173 + C34174) * C645 -
             (C34175 + C34176 + C34177) * C50809) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C644 +
             (C34177 + C34176 + C34175) * C50973 -
             (C34180 + C34179 + C34178) * C645 -
             (C34183 + C34182 + C34181) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17881 + C17880 + C17879) * C645 -
             ((C17186 + C17185 + C17184) * C50973 +
              (C17183 + C17182 + C17181) * C644) +
             (C17884 + C17883 + C17882) * C50809) *
                C50831 * C33829 +
            ((C18311 + C18312 + C18313) * C645 -
             ((C17882 + C17883 + C17884) * C50973 +
              (C17879 + C17880 + C17881) * C644) +
             (C18314 + C18315 + C18316) * C50809) *
                C50831 * C50907) *
               C50781) *
              C251 +
          ((((C34184 + C34185 + C34186) * C645 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C50973 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C644) +
             (C34187 + C34188 + C34189) * C50809) *
                C50831 * C33829 +
            ((C34192 + C34191 + C34190) * C645 -
             ((C34189 + C34188 + C34187) * C50973 +
              (C34186 + C34185 + C34184) * C644) +
             (C34195 + C34194 + C34193) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17193 + C17194 + C17195) * C644 +
             (C17196 + C17197 + C17198) * C50973 -
             (C17887 + C17886 + C17885) * C645 -
             (C17890 + C17889 + C17888) * C50809) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C644 +
             (C17888 + C17889 + C17890) * C50973 -
             (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 +
              C16979 * C1093 + C16983 * C1090 + C16978 * C1094) *
                 C645 -
             (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 +
              C16979 * C1101 + C16983 * C1098 + C16978 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C644 +
              (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
              C22200 * C50809) *
                 C2173 +
             (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
                C33829 +
            ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
              C22202 * C50809) *
                 C2173 +
             (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
                C50907) *
               C50972 +
           (((C20431 - (C20384 + C20383) + C20432) * C2173 +
             (C20433 - (C20390 + C20389) + C20434) * C2174 +
             (C20435 - (C20396 + C20395) + C20436) * C2175) *
                C33829 +
            ((C22731 - (C22730 + C22729) + C22732) * C2173 +
             (C23653 - (C23654 + C23655) + C23656) * C2174 +
             (C32833 - (C32834 + C32835) + C32836) * C2175) *
                C50907) *
               C50781) *
              C251 +
          ((((C22207 * C645 -
              ((C19767 * C134 + C50686 * C144) * C50973 +
               (C19767 * C123 + C50686 * C130) * C644) +
              C22208 * C50809) *
                 C2173 +
             (C20437 - (C20403 + C20404) + C20438) * C2174 +
             (C20439 - (C20409 + C20410) + C20440) * C2175) *
                C33829 +
            ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
              C22210 * C50809) *
                 C2173 +
             (C22737 - (C22738 + C22739) + C22740) * C2174 +
             (C31943 - (C31944 + C31945) + C31946) * C2175) *
                C50907) *
               C50972 +
           (((C20404 + C20403 - C20437 - C20438) * C2173 +
             (C20410 + C20409 - C20439 - C20440) * C2174 +
             (C20416 + C20415 - C20441 - C20442) * C2175) *
                C33829 +
            ((C22739 + C22738 - C22737 - C22740) * C2173 +
             (C31945 + C31944 - C31943 - C31946) * C2174 +
             (C20429 * C644 + C20430 * C50973 -
              (C19767 * C3561 + C50686 * C3563) * C645 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C2175) *
                C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
              C16985 * C398 + C16980 * C408) *
                 C121 +
             (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
              C16985 * C412 + C16980 * C428) *
                 C50745) *
                C50831 * C50907) *
               C248 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C249 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C50831 * C33829 +
            ((C18815 + C18816 + C18817) * C121 +
             (C18818 + C18819 + C18820) * C50745) *
                C50831 * C50907) *
               C250) *
              C251 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C249 -
           (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
              C16983 * C413 + C16978 * C429) *
                 C50745 +
             (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
              C16983 * C399 + C16978 * C409) *
                 C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C248 -
           (((C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
              C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                 C50745 +
             (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
              C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                 C121) *
                C50831 * C50907 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C50831 * C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C50831 * C33829 +
           ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
             C16985 * C398 + C16980 * C408) *
                C121 +
            (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
             C16985 * C412 + C16980 * C428) *
                C50745) *
               C50831 * C50907) *
              C50730 * C113 -
          (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
             C16983 * C413 + C16978 * C429) *
                C50745 +
            (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
             C16983 * C399 + C16978 * C409) *
                C121) *
               C50831 * C50907 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50745 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C50831 * C33829) *
              C50730 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50745) *
               C50831 * C33829 +
           ((C16983 * C398 + C16978 * C408 + C16984 * C397 + C16979 * C407 +
             C16985 * C405 + C16980 * C423) *
                C121 +
            (C16983 * C412 + C16978 * C428 + C16984 * C411 + C16979 * C427 +
             C16985 * C424 + C16980 * C435) *
                C50745) *
               C50831 * C50907) *
              C50730 * C115 -
          (((C16985 * C648 + C16980 * C649 + C16984 * C424 + C16979 * C435 +
             C16983 * C411 + C16978 * C427) *
                C50745 +
            (C16985 * C646 + C16980 * C647 + C16984 * C405 + C16979 * C423 +
             C16983 * C397 + C16978 * C407) *
                C121) *
               C50831 * C50907 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50745 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C50831 * C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C34172 + C34173 + C34174) * C395 -
            (C34175 + C34176 + C34177) * C392 +
            (C34178 + C34179 + C34180) * C396 +
            (C34181 + C34182 + C34183) * C393) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C394 +
            (C34177 + C34176 + C34175) * C391 -
            (C34180 + C34179 + C34178) * C395 -
            (C34183 + C34182 + C34181) * C392 +
            (C16983 * C1728 + C16978 * C1732 + C16984 * C1727 + C16979 * C1731 +
             C16985 * C1726 + C16980 * C1730) *
                C396 +
            (C16983 * C1736 + C16978 * C1740 + C16984 * C1735 + C16979 * C1739 +
             C16985 * C1734 + C16980 * C1738) *
                C393) *
               C50831 * C50907) *
              C50730 * C251 +
          (((C34184 + C34185 + C34186) * C395 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C391 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C394) +
            (C34187 + C34188 + C34189) * C392 -
            (C34190 + C34191 + C34192) * C396 -
            (C34193 + C34194 + C34195) * C393) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C395 -
            ((C34189 + C34188 + C34187) * C391 +
             (C34186 + C34185 + C34184) * C394) +
            (C34195 + C34194 + C34193) * C392 -
            (C16985 * C1725 + C16980 * C1729 + C16984 * C1726 + C16979 * C1730 +
             C16983 * C1727 + C16978 * C1731) *
                C396 -
            (C16985 * C1733 + C16980 * C1737 + C16984 * C1734 + C16979 * C1738 +
             C16983 * C1735 + C16978 * C1739) *
                C393) *
               C50831 * C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C50730 * C113 -
          ((C31302 * C2175 + (C22002 + C22001) * C2174 +
            (C22208 * C50745 + C22207 * C121) * C2173) *
               C50907 +
           (C19934 * C2175 + (C19924 + C19923) * C2174 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C2173) *
               C33829) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C2173 +
            (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
               C33829 +
           ((C22531 * C121 + C22532 * C50745) * C2173 +
            (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
               C50907) *
              C50730 * C115 -
          ((((C19767 * C1443 + C50686 * C1447) * C50745 +
             (C19767 * C1435 + C50686 * C1439) * C121) *
                C2175 +
            ((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C2174 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C2173) *
               C50907 +
           (((C19767 * C278 + C50686 * C290) * C50745 +
             (C19767 * C260 + C50686 * C274) * C121) *
                C2175 +
            ((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C2174 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C2173) *
               C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C248 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C249 +
           ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
                C33829 +
            (C31299 * C2173 + (C22989 + C22990) * C2174 +
             (C32192 + C32193) * C2175) *
                C50907) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C249 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C248 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C2175 +
             (C31301 + C31300) * C2174 + C31302 * C2173) *
                C50907 +
            ((C19930 + C19929) * C2175 + C19933 * C2174 + C19934 * C2173) *
                C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C2173 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C2174 +
            (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C2175) *
               C33829 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C2173 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C2174 +
            (C32340 + C32341 - C32342 - C32343 + C32344 + C32345) * C2175) *
               C50907) *
              C50730 * C251 +
          (((C22207 * C395 -
             ((C19767 * C134 + C50686 * C144) * C391 +
              (C19767 * C123 + C50686 * C130) * C394) +
             C22208 * C392 - C22209 * C396 - C22210 * C393) *
                C2173 +
            (C20425 * C395 - (C19908 * C391 + C19907 * C394) + C20426 * C392 -
             C22013 * C396 - C22014 * C393) *
                C2174 +
            (C20427 * C395 - (C19910 * C391 + C19909 * C394) + C20428 * C392 -
             C22015 * C396 - C22016 * C393) *
                C2175) *
               C33829 +
           ((C22209 * C395 - (C22208 * C391 + C22207 * C394) + C22210 * C392 -
             C22211 * C396 - C22212 * C393) *
                C2173 +
            (C22013 * C395 - (C20426 * C391 + C20425 * C394) + C22014 * C392 -
             C22213 * C396 - C22214 * C393) *
                C2174 +
            (C22015 * C395 - (C20428 * C391 + C20427 * C394) + C22016 * C392 -
             (C19767 * C4507 + C50686 * C4513) * C396 -
             (C19767 * C4515 + C50686 * C4519) * C393) *
                C2175) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C644 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50973 -
            (C34172 + C34173 + C34174) * C645 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C644 +
            (C34177 + C34176 + C34175) * C50973 -
            (C34180 + C34179 + C34178) * C645 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C50730 * C51015 +
          (((C34184 + C34185 + C34186) * C645 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50973 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C644) +
            (C34187 + C34188 + C34189) * C50809) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C645 -
            ((C34189 + C34188 + C34187) * C50973 +
             (C34186 + C34185 + C34184) * C644) +
            (C34195 + C34194 + C34193) * C50809) *
               C50831 * C50907) *
              C50730 * C51016 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C644 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50973 -
            (C34500 + C34501 + C34502) * C645 -
            (C34503 + C34504 + C34505) * C50809) *
               C50831 * C33829 +
           ((C34502 + C34501 + C34500) * C644 +
            (C34505 + C34504 + C34503) * C50973 -
            (C16985 * C406 + C16980 * C425 + C16984 * C404 + C16979 * C418 +
             C16983 * C403 + C16978 * C417) *
                C645 -
            (C16985 * C426 + C16980 * C436 + C16984 * C422 + C16979 * C434 +
             C16983 * C421 + C16978 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C539)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C2173 +
            (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
               C33829 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C2173 +
            (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
               C50907) *
              C50730 * C51015 +
          (((C22207 * C645 -
             ((C19767 * C134 + C50686 * C144) * C50973 +
              (C19767 * C123 + C50686 * C130) * C644) +
             C22208 * C50809) *
                C2173 +
            (C20437 - (C20403 + C20404) + C20438) * C2174 +
            (C20439 - (C20409 + C20410) + C20440) * C2175) *
               C33829 +
           ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
             C22210 * C50809) *
                C2173 +
            (C22737 - (C22738 + C22739) + C22740) * C2174 +
            (C31943 - (C31944 + C31945) + C31946) * C2175) *
               C50907) *
              C50730 * C51016 +
          ((((C19767 * C124 + C50686 * C131) * C644 +
             (C19767 * C135 + C50686 * C145) * C50973 - C22531 * C645 -
             C22532 * C50809) *
                C2173 +
            (C20143 * C644 + C20144 * C50973 - C22369 * C645 -
             C22370 * C50809) *
                C2174 +
            (C20145 * C644 + C20146 * C50973 - C31599 * C645 -
             C31600 * C50809) *
                C2175) *
               C33829 +
           ((C22531 * C644 + C22532 * C50973 - C22533 * C645 -
             C22534 * C50809) *
                C2173 +
            (C22369 * C644 + C22370 * C50973 - C22371 * C645 -
             C22372 * C50809) *
                C2174 +
            (C31599 * C644 + C31600 * C50973 -
             (C19767 * C2566 + C50686 * C2571) * C645 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C2175) *
               C50907) *
              C50730 * C539)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C50831 * C33829 +
           ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
             C16985 * C398 + C16980 * C408) *
                C121 +
            (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
             C16985 * C412 + C16980 * C428) *
                C50745) *
               C50831 * C50907) *
              C50730 * C113 -
          (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
             C16983 * C413 + C16978 * C429) *
                C50745 +
            (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
             C16983 * C399 + C16978 * C409) *
                C121) *
               C50831 * C50907 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50745 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C50831 * C33829) *
              C50730 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50745) *
               C50831 * C33829 +
           ((C16983 * C398 + C16978 * C408 + C16984 * C397 + C16979 * C407 +
             C16985 * C405 + C16980 * C423) *
                C121 +
            (C16983 * C412 + C16978 * C428 + C16984 * C411 + C16979 * C427 +
             C16985 * C424 + C16980 * C435) *
                C50745) *
               C50831 * C50907) *
              C50730 * C115 -
          (((C16985 * C648 + C16980 * C649 + C16984 * C424 + C16979 * C435 +
             C16983 * C411 + C16978 * C427) *
                C50745 +
            (C16985 * C646 + C16980 * C647 + C16984 * C405 + C16979 * C423 +
             C16983 * C397 + C16978 * C407) *
                C121) *
               C50831 * C50907 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50745 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C50831 * C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C16983 * C400 + C16978 * C410 + C16984 * C399 + C16979 * C409 +
              C16985 * C398 + C16980 * C408) *
                 C121 +
             (C16983 * C414 + C16978 * C430 + C16984 * C413 + C16979 * C429 +
              C16985 * C412 + C16980 * C428) *
                 C50745) *
                C50831 * C50907) *
               C248 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C249 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C50831 * C33829 +
            ((C18815 + C18816 + C18817) * C121 +
             (C18818 + C18819 + C18820) * C50745) *
                C50831 * C50907) *
               C250) *
              C251 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C249 -
           (((C16985 * C411 + C16980 * C427 + C16984 * C412 + C16979 * C428 +
              C16983 * C413 + C16978 * C429) *
                 C50745 +
             (C16985 * C397 + C16980 * C407 + C16984 * C398 + C16979 * C408 +
              C16983 * C399 + C16978 * C409) *
                 C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C248 -
           (((C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
              C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                 C50745 +
             (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
              C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                 C121) *
                C50831 * C50907 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C50831 * C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C50730 * C113 -
          ((C31302 * C2175 + (C22002 + C22001) * C2174 +
            (C22208 * C50745 + C22207 * C121) * C2173) *
               C50907 +
           (C19934 * C2175 + (C19924 + C19923) * C2174 +
            ((C19767 * C134 + C50686 * C144) * C50745 +
             (C19767 * C123 + C50686 * C130) * C121) *
                C2173) *
               C33829) *
              C50730 * C114 +
          ((((C19767 * C124 + C50686 * C131) * C121 +
             (C19767 * C135 + C50686 * C145) * C50745) *
                C2173 +
            (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
               C33829 +
           ((C22531 * C121 + C22532 * C50745) * C2173 +
            (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
               C50907) *
              C50730 * C115 -
          ((((C19767 * C1443 + C50686 * C1447) * C50745 +
             (C19767 * C1435 + C50686 * C1439) * C121) *
                C2175 +
            ((C19767 * C792 + C50686 * C798) * C50745 +
             (C19767 * C783 + C50686 * C788) * C121) *
                C2174 +
            ((C19767 * C411 + C50686 * C427) * C50745 +
             (C19767 * C397 + C50686 * C407) * C121) *
                C2173) *
               C50907 +
           (((C19767 * C278 + C50686 * C290) * C50745 +
             (C19767 * C260 + C50686 * C274) * C121) *
                C2175 +
            ((C19767 * C263 + C50686 * C283) * C50745 +
             (C19767 * C253 + C50686 * C267) * C121) *
                C2174 +
            ((C19767 * C136 + C50686 * C146) * C50745 +
             (C19767 * C125 + C50686 * C132) * C121) *
                C2173) *
               C33829) *
              C50730 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C248 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C249 +
           ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
                C33829 +
            (C31299 * C2173 + (C22989 + C22990) * C2174 +
             (C32192 + C32193) * C2175) *
                C50907) *
               C250) *
              C251 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C249 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C248 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C2175 +
             (C31301 + C31300) * C2174 + C31302 * C2173) *
                C50907 +
            ((C19930 + C19929) * C2175 + C19933 * C2174 + C19934 * C2173) *
                C33829) *
               C250) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C121 +
             (C34177 + C34176 + C34175) * C50745) *
                C50831 * C50907) *
               C51017 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C51018 +
           (((C17192 + C17191 + C17190) * C121 +
             (C17189 + C17188 + C17187) * C50745) *
                C50831 * C33829 +
            ((C18815 + C18816 + C18817) * C121 +
             (C18818 + C18819 + C18820) * C50745) *
                C50831 * C50907) *
               C1204) *
              C50964 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C51018 -
           (((C34189 + C34188 + C34187) * C50745 +
             (C34186 + C34185 + C34184) * C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C51017 -
           (((C16985 * C1443 + C16980 * C1447 + C16984 * C1444 +
              C16979 * C1448 + C16983 * C1445 + C16978 * C1449) *
                 C50745 +
             (C16985 * C1435 + C16980 * C1439 + C16984 * C1436 +
              C16979 * C1440 + C16983 * C1437 + C16978 * C1441) *
                 C121) *
                C50831 * C50907 +
            ((C17204 + C17203 + C17202) * C50745 +
             (C17201 + C17200 + C17199) * C121) *
                C50831 * C33829) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C51017 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C51018 +
           ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
                C33829 +
            (C31299 * C2173 + (C22989 + C22990) * C2174 +
             (C32192 + C32193) * C2175) *
                C50907) *
               C1204) *
              C50964 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C51018 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C51017 -
           ((((C19767 * C4083 + C50686 * C4085) * C50745 +
              (C19767 * C4079 + C50686 * C4081) * C121) *
                 C2175 +
             (C31301 + C31300) * C2174 + C31302 * C2173) *
                C50907 +
            ((C19930 + C19929) * C2175 + C19933 * C2174 + C19934 * C2173) *
                C33829) *
               C1204) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C644 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50973 -
            (C34172 + C34173 + C34174) * C645 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C644 +
            (C34177 + C34176 + C34175) * C50973 -
            (C34180 + C34179 + C34178) * C645 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C51017 +
          (((C17881 + C17880 + C17879) * C645 -
            ((C17186 + C17185 + C17184) * C50973 +
             (C17183 + C17182 + C17181) * C644) +
            (C17884 + C17883 + C17882) * C50809) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C645 -
            ((C17882 + C17883 + C17884) * C50973 +
             (C17879 + C17880 + C17881) * C644) +
            (C18314 + C18315 + C18316) * C50809) *
               C50831 * C50907) *
              C51018 +
          (((C17192 + C17191 + C17190) * C644 +
            (C17189 + C17188 + C17187) * C50973 -
            (C18817 + C18816 + C18815) * C645 -
            (C18820 + C18819 + C18818) * C50809) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C644 +
            (C18818 + C18819 + C18820) * C50973 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C645 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C50809) *
               C50831 * C50907) *
              C1204) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C644 +
             (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
             C22200 * C50809) *
                C2173 +
            (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
               C33829 +
           ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
             C22202 * C50809) *
                C2173 +
            (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
               C50907) *
              C51017 +
          (((C20431 - (C20384 + C20383) + C20432) * C2173 +
            (C20433 - (C20390 + C20389) + C20434) * C2174 +
            (C20435 - (C20396 + C20395) + C20436) * C2175) *
               C33829 +
           ((C22731 - (C22730 + C22729) + C22732) * C2173 +
            (C23653 - (C23654 + C23655) + C23656) * C2174 +
            (C32833 - (C32834 + C32835) + C32836) * C2175) *
               C50907) *
              C51018 +
          ((C21101 * C2173 + C21102 * C2174 +
            (C21094 + C21093 - C21103 - C21104) * C2175) *
               C33829 +
           (C32838 * C2173 + (C32835 + C32834 - C32833 - C32836) * C2174 +
            (C21099 * C644 + C21100 * C50973 -
             (C19767 * C20718 + C50686 * C20719) * C645 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C2175) *
               C50907) *
              C1204) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C121 +
            (C34177 + C34176 + C34175) * C50745) *
               C50831 * C50907) *
              C969 -
          (((C17882 + C17883 + C17884) * C50745 +
            (C17879 + C17880 + C17881) * C121) *
               C50831 * C50907 +
           ((C17186 + C17185 + C17184) * C50745 +
            (C17183 + C17182 + C17181) * C121) *
               C50831 * C33829) *
              C970 +
          (((C17192 + C17191 + C17190) * C121 +
            (C17189 + C17188 + C17187) * C50745) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C121 +
            (C18818 + C18819 + C18820) * C50745) *
               C50831 * C50907) *
              C971 -
          (((C16985 * C3094 + C16980 * C3097 + C16984 * C3092 + C16979 * C3096 +
             C16983 * C3091 + C16978 * C3095) *
                C50745 +
            (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 + C16979 * C3090 +
             C16983 * C3086 + C16978 * C3089) *
                C121) *
               C50831 * C50907 +
           ((C18152 + C18151 + C18150) * C50745 +
            (C18149 + C18148 + C18147) * C121) *
               C50831 * C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C121 +
             (C34177 + C34176 + C34175) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C50781) *
              C900 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C50781 -
           (((C34189 + C34188 + C34187) * C50745 +
             (C34186 + C34185 + C34184) * C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C898) *
              C901 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C50831 * C33829 +
            ((C34502 + C34501 + C34500) * C121 +
             (C34505 + C34504 + C34503) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C16985 * C794 + C16980 * C799 + C16984 * C792 + C16979 * C798 +
              C16983 * C791 + C16978 * C797) *
                 C50745 +
             (C16985 * C784 + C16980 * C793 + C16984 * C783 + C16979 * C788 +
              C16983 * C782 + C16978 * C787) *
                 C121) *
                C50831 * C50907 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C50831 * C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C394 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C391 -
            (C34172 + C34173 + C34174) * C395 -
            (C34175 + C34176 + C34177) * C392 +
            (C34178 + C34179 + C34180) * C396 +
            (C34181 + C34182 + C34183) * C393) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C394 +
            (C34177 + C34176 + C34175) * C391 -
            (C34180 + C34179 + C34178) * C395 -
            (C34183 + C34182 + C34181) * C392 +
            (C16983 * C1728 + C16978 * C1732 + C16984 * C1727 + C16979 * C1731 +
             C16985 * C1726 + C16980 * C1730) *
                C396 +
            (C16983 * C1736 + C16978 * C1740 + C16984 * C1735 + C16979 * C1739 +
             C16985 * C1734 + C16980 * C1738) *
                C393) *
               C50831 * C50907) *
              C898 +
          (((C17881 + C17880 + C17879) * C395 -
            ((C17186 + C17185 + C17184) * C391 +
             (C17183 + C17182 + C17181) * C394) +
            (C17884 + C17883 + C17882) * C392 -
            (C18313 + C18312 + C18311) * C396 -
            (C18316 + C18315 + C18314) * C393) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C395 -
            ((C17882 + C17883 + C17884) * C391 +
             (C17879 + C17880 + C17881) * C394) +
            (C18314 + C18315 + C18316) * C392 -
            (C16985 * C5998 + C16980 * C5999 + C16984 * C4505 + C16979 * C4509 +
             C16983 * C4506 + C16978 * C4510) *
                C396 -
            (C16985 * C6000 + C16980 * C6001 + C16984 * C4511 + C16979 * C4517 +
             C16983 * C4512 + C16978 * C4518) *
                C393) *
               C50831 * C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C898 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C50781 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C2173 +
             (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
                C33829 +
            ((C22531 * C121 + C22532 * C50745) * C2173 +
             (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
                C50907) *
               C898 -
           ((((C19767 * C3094 + C50686 * C3097) * C50745 +
              (C19767 * C3088 + C50686 * C3093) * C121) *
                 C2175 +
             (C31602 + C31601) * C2174 + (C22374 + C22373) * C2173) *
                C50907 +
            ((C20154 + C20153) * C2175 + (C20152 + C20151) * C2174 +
             (C20150 + C20149) * C2173) *
                C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C969 -
          ((C32191 * C2175 + (C21999 + C22000) * C2174 +
            (C21994 + C21993) * C2173) *
               C50907 +
           (C20612 * C2175 + (C19918 + C19917) * C2174 +
            (C19916 + C19915) * C2173) *
               C33829) *
              C970 +
          ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
               C33829 +
           (C31299 * C2173 + (C22989 + C22990) * C2174 +
            (C32192 + C32193) * C2175) *
               C50907) *
              C971 -
          ((((C19767 * C21086 + C50686 * C21087) * C50745 +
             (C19767 * C21084 + C50686 * C21085) * C121) *
                C2175 +
            (C32193 + C32192) * C2174 + C32191 * C2173) *
               C50907 +
           ((C20620 + C20619) * C2175 + C20611 * C2174 + C20612 * C2173) *
               C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C394 +
             (C19767 * C133 + C50686 * C143) * C391 - C22199 * C395 -
             C22200 * C392 + C22201 * C396 + C22202 * C393) *
                C2173 +
            (C20723 + C20724 - C20725 - C20726 + C20753 + C20754) * C2174 +
            (C20731 + C20732 - C20733 - C20734 + C20755 + C20756) * C2175) *
               C33829 +
           ((C22199 * C394 + C22200 * C391 - C22201 * C395 - C22202 * C392 +
             C22203 * C396 + C22204 * C393) *
                C2173 +
            (C23143 + C23144 - C23145 - C23146 + C23147 + C23148) * C2174 +
            (C32340 + C32341 - C32342 - C32343 + C32344 + C32345) * C2175) *
               C50907) *
              C898 +
          (((C20725 - (C20724 + C20723) + C20726 - C20753 - C20754) * C2173 +
            (C20733 - (C20732 + C20731) + C20734 - C20755 - C20756) * C2174 +
            (C20741 - (C20740 + C20739) + C20742 - C20757 - C20758) * C2175) *
               C33829 +
           ((C23145 - (C23144 + C23143) + C23146 - C23147 - C23148) * C2173 +
            (C32342 - (C32341 + C32340) + C32343 - C32344 - C32345) * C2174 +
            (C20751 * C395 - (C20424 * C391 + C20423 * C394) + C20752 * C392 -
             (C19767 * C21388 + C50686 * C21389) * C396 -
             (C19767 * C21390 + C50686 * C21391) * C393) *
                C2175) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C644 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50973 -
             (C34172 + C34173 + C34174) * C645 -
             (C34175 + C34176 + C34177) * C50809) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C644 +
             (C34177 + C34176 + C34175) * C50973 -
             (C34180 + C34179 + C34178) * C645 -
             (C34183 + C34182 + C34181) * C50809) *
                C50831 * C50907) *
               C898 +
           (((C17881 + C17880 + C17879) * C645 -
             ((C17186 + C17185 + C17184) * C50973 +
              (C17183 + C17182 + C17181) * C644) +
             (C17884 + C17883 + C17882) * C50809) *
                C50831 * C33829 +
            ((C18311 + C18312 + C18313) * C645 -
             ((C17882 + C17883 + C17884) * C50973 +
              (C17879 + C17880 + C17881) * C644) +
             (C18314 + C18315 + C18316) * C50809) *
                C50831 * C50907) *
               C50781) *
              C50964 +
          ((((C34184 + C34185 + C34186) * C645 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C50973 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C644) +
             (C34187 + C34188 + C34189) * C50809) *
                C50831 * C33829 +
            ((C34192 + C34191 + C34190) * C645 -
             ((C34189 + C34188 + C34187) * C50973 +
              (C34186 + C34185 + C34184) * C644) +
             (C34195 + C34194 + C34193) * C50809) *
                C50831 * C50907) *
               C898 +
           (((C17193 + C17194 + C17195) * C644 +
             (C17196 + C17197 + C17198) * C50973 -
             (C17887 + C17886 + C17885) * C645 -
             (C17890 + C17889 + C17888) * C50809) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C644 +
             (C17888 + C17889 + C17890) * C50973 -
             (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 +
              C16979 * C1093 + C16983 * C1090 + C16978 * C1094) *
                 C645 -
             (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 +
              C16979 * C1101 + C16983 * C1098 + C16978 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C644 +
              (C19767 * C133 + C50686 * C143) * C50973 - C22199 * C645 -
              C22200 * C50809) *
                 C2173 +
             (C20383 + C20384 - C20431 - C20432) * C2174 + C21101 * C2175) *
                C33829 +
            ((C22199 * C644 + C22200 * C50973 - C22201 * C645 -
              C22202 * C50809) *
                 C2173 +
             (C22729 + C22730 - C22731 - C22732) * C2174 + C32838 * C2175) *
                C50907) *
               C898 +
           (((C20431 - (C20384 + C20383) + C20432) * C2173 +
             (C20433 - (C20390 + C20389) + C20434) * C2174 +
             (C20435 - (C20396 + C20395) + C20436) * C2175) *
                C33829 +
            ((C22731 - (C22730 + C22729) + C22732) * C2173 +
             (C23653 - (C23654 + C23655) + C23656) * C2174 +
             (C32833 - (C32834 + C32835) + C32836) * C2175) *
                C50907) *
               C50781) *
              C50964 +
          ((((C22207 * C645 -
              ((C19767 * C134 + C50686 * C144) * C50973 +
               (C19767 * C123 + C50686 * C130) * C644) +
              C22208 * C50809) *
                 C2173 +
             (C20437 - (C20403 + C20404) + C20438) * C2174 +
             (C20439 - (C20409 + C20410) + C20440) * C2175) *
                C33829 +
            ((C22209 * C645 - (C22208 * C50973 + C22207 * C644) +
              C22210 * C50809) *
                 C2173 +
             (C22737 - (C22738 + C22739) + C22740) * C2174 +
             (C31943 - (C31944 + C31945) + C31946) * C2175) *
                C50907) *
               C898 +
           (((C20404 + C20403 - C20437 - C20438) * C2173 +
             (C20410 + C20409 - C20439 - C20440) * C2174 +
             (C20416 + C20415 - C20441 - C20442) * C2175) *
                C33829 +
            ((C22739 + C22738 - C22737 - C22740) * C2173 +
             (C31945 + C31944 - C31943 - C31946) * C2174 +
             (C20429 * C644 + C20430 * C50973 -
              (C19767 * C3561 + C50686 * C3563) * C645 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C2175) *
                C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50745) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C121 +
             (C34177 + C34176 + C34175) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C17882 + C17883 + C17884) * C50745 +
             (C17879 + C17880 + C17881) * C121) *
                C50831 * C50907 +
            ((C17186 + C17185 + C17184) * C50745 +
             (C17183 + C17182 + C17181) * C121) *
                C50831 * C33829) *
               C50781) *
              C900 +
          ((((C17193 + C17194 + C17195) * C121 +
             (C17196 + C17197 + C17198) * C50745) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C121 +
             (C17888 + C17889 + C17890) * C50745) *
                C50831 * C50907) *
               C50781 -
           (((C34189 + C34188 + C34187) * C50745 +
             (C34186 + C34185 + C34184) * C121) *
                C50831 * C50907 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50745 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50831 * C33829) *
               C898) *
              C901 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50745) *
                C50831 * C33829 +
            ((C34502 + C34501 + C34500) * C121 +
             (C34505 + C34504 + C34503) * C50745) *
                C50831 * C50907) *
               C898 -
           (((C16985 * C794 + C16980 * C799 + C16984 * C792 + C16979 * C798 +
              C16983 * C791 + C16978 * C797) *
                 C50745 +
             (C16985 * C784 + C16980 * C793 + C16984 * C783 + C16979 * C788 +
              C16983 * C782 + C16978 * C787) *
                 C121) *
                C50831 * C50907 +
            ((C17514 + C17513 + C17512) * C50745 +
             (C17511 + C17510 + C17509) * C121) *
                C50831 * C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50745) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C121 +
            (C34177 + C34176 + C34175) * C50745) *
               C50831 * C50907) *
              C969 -
          (((C17882 + C17883 + C17884) * C50745 +
            (C17879 + C17880 + C17881) * C121) *
               C50831 * C50907 +
           ((C17186 + C17185 + C17184) * C50745 +
            (C17183 + C17182 + C17181) * C121) *
               C50831 * C33829) *
              C970 +
          (((C17192 + C17191 + C17190) * C121 +
            (C17189 + C17188 + C17187) * C50745) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C121 +
            (C18818 + C18819 + C18820) * C50745) *
               C50831 * C50907) *
              C971 -
          (((C16985 * C3094 + C16980 * C3097 + C16984 * C3092 + C16979 * C3096 +
             C16983 * C3091 + C16978 * C3095) *
                C50745 +
            (C16985 * C3088 + C16980 * C3093 + C16984 * C3087 + C16979 * C3090 +
             C16983 * C3086 + C16978 * C3089) *
                C121) *
               C50831 * C50907 +
           ((C18152 + C18151 + C18150) * C50745 +
            (C18149 + C18148 + C18147) * C121) *
               C50831 * C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C121 +
              (C19767 * C133 + C50686 * C143) * C50745) *
                 C2173 +
             (C19915 + C19916) * C2174 + C19931 * C2175) *
                C33829 +
            ((C22199 * C121 + C22200 * C50745) * C2173 +
             (C21993 + C21994) * C2174 + C31299 * C2175) *
                C50907) *
               C898 -
           ((C32191 * C2175 + (C21999 + C22000) * C2174 +
             (C21994 + C21993) * C2173) *
                C50907 +
            (C20612 * C2175 + (C19918 + C19917) * C2174 +
             (C19916 + C19915) * C2173) *
                C33829) *
               C50781) *
              C900 +
          ((((C19923 + C19924) * C2173 + (C19925 + C19926) * C2174 +
             (C19927 + C19928) * C2175) *
                C33829 +
            ((C22001 + C22002) * C2173 + (C22003 + C22004) * C2174 +
             (C31300 + C31301) * C2175) *
                C50907) *
               C50781 -
           ((C31302 * C2175 + (C22002 + C22001) * C2174 +
             (C22208 * C50745 + C22207 * C121) * C2173) *
                C50907 +
            (C19934 * C2175 + (C19924 + C19923) * C2174 +
             ((C19767 * C134 + C50686 * C144) * C50745 +
              (C19767 * C123 + C50686 * C130) * C121) *
                 C2173) *
                C33829) *
               C898) *
              C901 +
          (((((C19767 * C124 + C50686 * C131) * C121 +
              (C19767 * C135 + C50686 * C145) * C50745) *
                 C2173 +
             (C20149 + C20150) * C2174 + (C20151 + C20152) * C2175) *
                C33829 +
            ((C22531 * C121 + C22532 * C50745) * C2173 +
             (C22373 + C22374) * C2174 + (C31601 + C31602) * C2175) *
                C50907) *
               C898 -
           ((((C19767 * C3094 + C50686 * C3097) * C50745 +
              (C19767 * C3088 + C50686 * C3093) * C121) *
                 C2175 +
             (C31602 + C31601) * C2174 + (C22374 + C22373) * C2173) *
                C50907 +
            ((C20154 + C20153) * C2175 + (C20152 + C20151) * C2174 +
             (C20150 + C20149) * C2173) *
                C33829) *
               C50781) *
              C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C121 +
             (C19767 * C133 + C50686 * C143) * C50745) *
                C2173 +
            (C19915 + C19916) * C2174 + C19931 * C2175) *
               C33829 +
           ((C22199 * C121 + C22200 * C50745) * C2173 +
            (C21993 + C21994) * C2174 + C31299 * C2175) *
               C50907) *
              C969 -
          ((C32191 * C2175 + (C21999 + C22000) * C2174 +
            (C21994 + C21993) * C2173) *
               C50907 +
           (C20612 * C2175 + (C19918 + C19917) * C2174 +
            (C19916 + C19915) * C2173) *
               C33829) *
              C970 +
          ((C19931 * C2173 + C19932 * C2174 + (C19922 + C19921) * C2175) *
               C33829 +
           (C31299 * C2173 + (C22989 + C22990) * C2174 +
            (C32192 + C32193) * C2175) *
               C50907) *
              C971 -
          ((((C19767 * C21086 + C50686 * C21087) * C50745 +
             (C19767 * C21084 + C50686 * C21085) * C121) *
                C2175 +
            (C32193 + C32192) * C2174 + C32191 * C2173) *
               C50907 +
           ((C20620 + C20619) * C2175 + C20611 * C2174 + C20612 * C2173) *
               C33829) *
              C972) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C1551 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C1549 -
             (C34172 + C34173 + C34174) * C1552 -
             (C34175 + C34176 + C34177) * C50809) *
                C50831 * C33829 +
            ((C34174 + C34173 + C34172) * C1551 +
             (C34177 + C34176 + C34175) * C1549 -
             (C34180 + C34179 + C34178) * C1552 -
             (C34183 + C34182 + C34181) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17881 + C17880 + C17879) * C1552 -
             ((C17186 + C17185 + C17184) * C1549 +
              (C17183 + C17182 + C17181) * C1551) +
             (C17884 + C17883 + C17882) * C50809) *
                C50831 * C33829 +
            ((C18311 + C18312 + C18313) * C1552 -
             ((C17882 + C17883 + C17884) * C1549 +
              (C17879 + C17880 + C17881) * C1551) +
             (C18314 + C18315 + C18316) * C50809) *
                C50831 * C50907) *
               C50781) *
              C50964 +
          ((((C34184 + C34185 + C34186) * C1552 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C1549 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C1551) +
             (C34187 + C34188 + C34189) * C50809) *
                C50831 * C33829 +
            ((C34192 + C34191 + C34190) * C1552 -
             ((C34189 + C34188 + C34187) * C1549 +
              (C34186 + C34185 + C34184) * C1551) +
             (C34195 + C34194 + C34193) * C50809) *
                C50831 * C50907) *
               C50972 +
           (((C17193 + C17194 + C17195) * C1551 +
             (C17196 + C17197 + C17198) * C1549 -
             (C17887 + C17886 + C17885) * C1552 -
             (C17890 + C17889 + C17888) * C50809) *
                C50831 * C33829 +
            ((C17885 + C17886 + C17887) * C1551 +
             (C17888 + C17889 + C17890) * C1549 -
             (C16985 * C1088 + C16980 * C1092 + C16984 * C1089 +
              C16979 * C1093 + C16983 * C1090 + C16978 * C1094) *
                 C1552 -
             (C16985 * C1096 + C16980 * C1100 + C16984 * C1097 +
              C16979 * C1101 + C16983 * C1098 + C16978 * C1102) *
                 C50809) *
                C50831 * C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50686 * C129) * C1551 +
              (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
              C22200 * C50809) *
                 C2173 +
             (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
                C33829 +
            ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
              C22202 * C50809) *
                 C2173 +
             (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
                C50907) *
               C50972 +
           (((C21303 - (C21302 + C21301) + C21304) * C2173 +
             (C21307 - (C21306 + C21305) + C21308) * C2174 +
             (C21311 - (C21310 + C21309) + C21312) * C2175) *
                C33829 +
            ((C23955 - (C23954 + C23953) + C23956) * C2173 +
             (C23961 - (C23962 + C23963) + C23964) * C2174 +
             (C33132 - (C33133 + C33134) + C33135) * C2175) *
                C50907) *
               C50781) *
              C50964 +
          ((((C22207 * C1552 -
              ((C19767 * C134 + C50686 * C144) * C1549 +
               (C19767 * C123 + C50686 * C130) * C1551) +
              C22208 * C50809) *
                 C2173 +
             (C21523 - (C21524 + C21525) + C21526) * C2174 +
             (C21527 - (C21528 + C21529) + C21530) * C2175) *
                C33829 +
            ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
              C22210 * C50809) *
                 C2173 +
             (C24271 - (C24272 + C24273) + C24274) * C2174 +
             (C33430 - (C33431 + C33432) + C33433) * C2175) *
                C50907) *
               C50972 +
           (((C21525 + C21524 - C21523 - C21526) * C2173 +
             (C21529 + C21528 - C21527 - C21530) * C2174 +
             (C21533 + C21532 - C21531 - C21534) * C2175) *
                C33829 +
            ((C24273 + C24272 - C24271 - C24274) * C2173 +
             (C33432 + C33431 - C33430 - C33433) * C2174 +
             (C20429 * C1551 + C20430 * C1549 -
              (C19767 * C3561 + C50686 * C3563) * C1552 -
              (C19767 * C3565 + C50686 * C3567) * C50809) *
                 C2175) *
                C50907) *
               C50781) *
              C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C34172 + C34173 + C34174) * C1973 -
            (C34175 + C34176 + C34177) * C51020 +
            (C34178 + C34179 + C34180) * C1974 +
            (C34181 + C34182 + C34183) * C1971) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1972 +
            (C34177 + C34176 + C34175) * C51019 -
            (C34180 + C34179 + C34178) * C1973 -
            (C34183 + C34182 + C34181) * C51020 +
            (C35980 + C35979 + C35978) * C1974 +
            (C35983 + C35982 + C35981) * C1971) *
               C50831 * C50907) *
              C50972 +
          (((C17881 + C17880 + C17879) * C1973 -
            ((C17186 + C17185 + C17184) * C51019 +
             (C17183 + C17182 + C17181) * C1972) +
            (C17884 + C17883 + C17882) * C51020 -
            (C18313 + C18312 + C18311) * C1974 -
            (C18316 + C18315 + C18314) * C1971) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C1973 -
            ((C17882 + C17883 + C17884) * C51019 +
             (C17879 + C17880 + C17881) * C1972) +
            (C18314 + C18315 + C18316) * C51020 -
            (C16985 * C5998 + C16980 * C5999 + C16984 * C4505 + C16979 * C4509 +
             C16983 * C4506 + C16978 * C4510) *
                C1974 -
            (C16985 * C6000 + C16980 * C6001 + C16984 * C4511 + C16979 * C4517 +
             C16983 * C4512 + C16978 * C4518) *
                C1971) *
               C50831 * C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50907) *
              C50972 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C2173 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C2174 +
            (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C2175) *
               C33829 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C2173 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C2174 +
            (C20751 * C1973 - (C20424 * C51019 + C20423 * C1972) +
             C20752 * C51020 - (C19767 * C21388 + C50686 * C21389) * C1974 -
             (C19767 * C21390 + C50686 * C21391) * C1971) *
                C2175) *
               C50907) *
              C50781) *
         C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1551 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1549 -
            (C34172 + C34173 + C34174) * C1552 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1551 +
            (C34177 + C34176 + C34175) * C1549 -
            (C34180 + C34179 + C34178) * C1552 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C248 +
          (((C17881 + C17880 + C17879) * C1552 -
            ((C17186 + C17185 + C17184) * C1549 +
             (C17183 + C17182 + C17181) * C1551) +
            (C17884 + C17883 + C17882) * C50809) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C1552 -
            ((C17882 + C17883 + C17884) * C1549 +
             (C17879 + C17880 + C17881) * C1551) +
            (C18314 + C18315 + C18316) * C50809) *
               C50831 * C50907) *
              C249 +
          (((C17192 + C17191 + C17190) * C1551 +
            (C17189 + C17188 + C17187) * C1549 -
            (C18817 + C18816 + C18815) * C1552 -
            (C18820 + C18819 + C18818) * C50809) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C1551 +
            (C18818 + C18819 + C18820) * C1549 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C1552 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C50809) *
               C50831 * C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1551 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1549 -
            (C34172 + C34173 + C34174) * C1552 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1551 +
            (C34177 + C34176 + C34175) * C1549 -
            (C34180 + C34179 + C34178) * C1552 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C50730 * C900 +
          (((C34184 + C34185 + C34186) * C1552 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C1549 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1551) +
            (C34187 + C34188 + C34189) * C50809) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C1552 -
            ((C34189 + C34188 + C34187) * C1549 +
             (C34186 + C34185 + C34184) * C1551) +
            (C34195 + C34194 + C34193) * C50809) *
               C50831 * C50907) *
              C50730 * C901 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C1551 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C1549 -
            (C34500 + C34501 + C34502) * C1552 -
            (C34503 + C34504 + C34505) * C50809) *
               C50831 * C33829 +
           ((C34502 + C34501 + C34500) * C1551 +
            (C34505 + C34504 + C34503) * C1549 -
            (C16985 * C406 + C16980 * C425 + C16984 * C404 + C16979 * C418 +
             C16983 * C403 + C16978 * C417) *
                C1552 -
            (C16985 * C426 + C16980 * C436 + C16984 * C422 + C16979 * C434 +
             C16983 * C421 + C16978 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
            C16985 * C124 + C16980 * C131) *
               C1721 +
           (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
            C16985 * C135 + C16980 * C145) *
               C1717 -
           (C34172 + C34173 + C34174) * C1722 -
           (C34175 + C34176 + C34177) * C1718 +
           (C34178 + C34179 + C34180) * C1723 +
           (C34181 + C34182 + C34183) * C1719 -
           (C35978 + C35979 + C35980) * C1724 -
           (C35981 + C35982 + C35983) * C1720) *
              C50831 * C33829 +
          ((C34174 + C34173 + C34172) * C1721 +
           (C34177 + C34176 + C34175) * C1717 -
           (C34180 + C34179 + C34178) * C1722 -
           (C34183 + C34182 + C34181) * C1718 +
           (C35980 + C35979 + C35978) * C1723 +
           (C35983 + C35982 + C35981) * C1719 -
           (C16985 * C5402 + C16980 * C5407 + C16984 * C5401 + C16979 * C5404 +
            C16983 * C5400 + C16978 * C5403) *
               C1724 -
           (C16985 * C5408 + C16980 * C5411 + C16984 * C5406 + C16979 * C5410 +
            C16983 * C5405 + C16978 * C5409) *
               C1720) *
              C50831 * C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C2173 +
            (C21523 - (C21524 + C21525) + C21526) * C2174 +
            (C21527 - (C21528 + C21529) + C21530) * C2175) *
               C33829 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C2173 +
            (C24271 - (C24272 + C24273) + C24274) * C2174 +
            (C33430 - (C33431 + C33432) + C33433) * C2175) *
               C50907) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C2173 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C2174 +
            (C20145 * C1551 + C20146 * C1549 - C31599 * C1552 -
             C31600 * C50809) *
                C2175) *
               C33829 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C2173 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C2174 +
            (C31599 * C1551 + C31600 * C1549 -
             (C19767 * C2566 + C50686 * C2571) * C1552 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C2175) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C2173 +
            (C21307 - (C21306 + C21305) + C21308) * C2174 +
            (C21311 - (C21310 + C21309) + C21312) * C2175) *
               C33829 +
           ((C23955 - (C23954 + C23953) + C23956) * C2173 +
            (C23961 - (C23962 + C23963) + C23964) * C2174 +
            (C33132 - (C33133 + C33134) + C33135) * C2175) *
               C50907) *
              C249 +
          ((C21321 * C2173 + C21322 * C2174 +
            (C21315 + C21314 - C21313 - C21316) * C2175) *
               C33829 +
           (C33137 * C2173 + (C33134 + C33133 - C33132 - C33135) * C2174 +
            (C21099 * C1551 + C21100 * C1549 -
             (C19767 * C20718 + C50686 * C20719) * C1552 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C2175) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50686 * C129) * C1721 +
            (C19767 * C133 + C50686 * C143) * C1717 - C22199 * C1722 -
            C22200 * C1718 + C22201 * C1723 + C22202 * C1719 - C22203 * C1724 -
            C22204 * C1720) *
               C2173 +
           (C19899 * C1721 + C19900 * C1717 - C20419 * C1722 - C20420 * C1718 +
            C20747 * C1723 + C20748 * C1719 - C22205 * C1724 - C22206 * C1720) *
               C2174 +
           (C19901 * C1721 + C19902 * C1717 - C20421 * C1722 - C20422 * C1718 +
            C20749 * C1723 + C20750 * C1719 - C23163 * C1724 - C23164 * C1720) *
               C2175) *
              C33829 +
          ((C22199 * C1721 + C22200 * C1717 - C22201 * C1722 - C22202 * C1718 +
            C22203 * C1723 + C22204 * C1719 - C24075 * C1724 - C24076 * C1720) *
               C2173 +
           (C20419 * C1721 + C20420 * C1717 - C20747 * C1722 - C20748 * C1718 +
            C22205 * C1723 + C22206 * C1719 - C23161 * C1724 - C23162 * C1720) *
               C2174 +
           (C20421 * C1721 + C20422 * C1717 - C20749 * C1722 - C20750 * C1718 +
            C23163 * C1723 + C23164 * C1719 -
            (C19767 * C23138 + C50686 * C23139) * C1724 -
            (C19767 * C23140 + C50686 * C23141) * C1720) *
               C2175) *
              C50907) *
         C50730 * C50713) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1972 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51019 -
            (C34172 + C34173 + C34174) * C1973 -
            (C34175 + C34176 + C34177) * C51020 +
            (C34178 + C34179 + C34180) * C1974 +
            (C34181 + C34182 + C34183) * C1971) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1972 +
            (C34177 + C34176 + C34175) * C51019 -
            (C34180 + C34179 + C34178) * C1973 -
            (C34183 + C34182 + C34181) * C51020 +
            (C35980 + C35979 + C35978) * C1974 +
            (C35983 + C35982 + C35981) * C1971) *
               C50831 * C50907) *
              C50730 * C50964 +
          (((C34184 + C34185 + C34186) * C1973 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51019 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1972) +
            (C34187 + C34188 + C34189) * C51020 -
            (C34190 + C34191 + C34192) * C1974 -
            (C34193 + C34194 + C34195) * C1971) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C1973 -
            ((C34189 + C34188 + C34187) * C51019 +
             (C34186 + C34185 + C34184) * C1972) +
            (C34195 + C34194 + C34193) * C51020 -
            (C16985 * C1725 + C16980 * C1729 + C16984 * C1726 + C16979 * C1730 +
             C16983 * C1727 + C16978 * C1731) *
                C1974 -
            (C16985 * C1733 + C16980 * C1737 + C16984 * C1734 + C16979 * C1738 +
             C16983 * C1735 + C16978 * C1739) *
                C1971) *
               C50831 * C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1972 +
             (C19767 * C133 + C50686 * C143) * C51019 - C22199 * C1973 -
             C22200 * C51020 + C22201 * C1974 + C22202 * C1971) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22199 * C1972 + C22200 * C51019 - C22201 * C1973 -
             C22202 * C51020 + C22203 * C1974 + C22204 * C1971) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50907) *
              C50730 * C50964 +
          (((C22207 * C1973 -
             ((C19767 * C134 + C50686 * C144) * C51019 +
              (C19767 * C123 + C50686 * C130) * C1972) +
             C22208 * C51020 - C22209 * C1974 - C22210 * C1971) *
                C2173 +
            (C20425 * C1973 - (C19908 * C51019 + C19907 * C1972) +
             C20426 * C51020 - C22013 * C1974 - C22014 * C1971) *
                C2174 +
            (C20427 * C1973 - (C19910 * C51019 + C19909 * C1972) +
             C20428 * C51020 - C22015 * C1974 - C22016 * C1971) *
                C2175) *
               C33829 +
           ((C22209 * C1973 - (C22208 * C51019 + C22207 * C1972) +
             C22210 * C51020 - C22211 * C1974 - C22212 * C1971) *
                C2173 +
            (C22013 * C1973 - (C20426 * C51019 + C20425 * C1972) +
             C22014 * C51020 - C22213 * C1974 - C22214 * C1971) *
                C2174 +
            (C22015 * C1973 - (C20428 * C51019 + C20427 * C1972) +
             C22016 * C51020 - (C19767 * C4507 + C50686 * C4513) * C1974 -
             (C19767 * C4515 + C50686 * C4519) * C1971) *
                C2175) *
               C50907) *
              C50730 * C50718)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1551 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1549 -
            (C34172 + C34173 + C34174) * C1552 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1551 +
            (C34177 + C34176 + C34175) * C1549 -
            (C34180 + C34179 + C34178) * C1552 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C50730 * C900 +
          (((C34184 + C34185 + C34186) * C1552 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C1549 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1551) +
            (C34187 + C34188 + C34189) * C50809) *
               C50831 * C33829 +
           ((C34192 + C34191 + C34190) * C1552 -
            ((C34189 + C34188 + C34187) * C1549 +
             (C34186 + C34185 + C34184) * C1551) +
            (C34195 + C34194 + C34193) * C50809) *
               C50831 * C50907) *
              C50730 * C901 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C1551 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C1549 -
            (C34500 + C34501 + C34502) * C1552 -
            (C34503 + C34504 + C34505) * C50809) *
               C50831 * C33829 +
           ((C34502 + C34501 + C34500) * C1551 +
            (C34505 + C34504 + C34503) * C1549 -
            (C16985 * C406 + C16980 * C425 + C16984 * C404 + C16979 * C418 +
             C16983 * C403 + C16978 * C417) *
                C1552 -
            (C16985 * C426 + C16980 * C436 + C16984 * C422 + C16979 * C434 +
             C16983 * C421 + C16978 * C433) *
                C50809) *
               C50831 * C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1551 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1549 -
            (C34172 + C34173 + C34174) * C1552 -
            (C34175 + C34176 + C34177) * C50809) *
               C50831 * C33829 +
           ((C34174 + C34173 + C34172) * C1551 +
            (C34177 + C34176 + C34175) * C1549 -
            (C34180 + C34179 + C34178) * C1552 -
            (C34183 + C34182 + C34181) * C50809) *
               C50831 * C50907) *
              C248 +
          (((C17881 + C17880 + C17879) * C1552 -
            ((C17186 + C17185 + C17184) * C1549 +
             (C17183 + C17182 + C17181) * C1551) +
            (C17884 + C17883 + C17882) * C50809) *
               C50831 * C33829 +
           ((C18311 + C18312 + C18313) * C1552 -
            ((C17882 + C17883 + C17884) * C1549 +
             (C17879 + C17880 + C17881) * C1551) +
            (C18314 + C18315 + C18316) * C50809) *
               C50831 * C50907) *
              C249 +
          (((C17192 + C17191 + C17190) * C1551 +
            (C17189 + C17188 + C17187) * C1549 -
            (C18817 + C18816 + C18815) * C1552 -
            (C18820 + C18819 + C18818) * C50809) *
               C50831 * C33829 +
           ((C18815 + C18816 + C18817) * C1551 +
            (C18818 + C18819 + C18820) * C1549 -
            (C16985 * C2566 + C16980 * C2571 + C16984 * C2565 + C16979 * C2568 +
             C16983 * C2564 + C16978 * C2567) *
                C1552 -
            (C16985 * C2572 + C16980 * C2575 + C16984 * C2570 + C16979 * C2574 +
             C16983 * C2569 + C16978 * C2573) *
                C50809) *
               C50831 * C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C50730 * C900 +
          (((C22207 * C1552 -
             ((C19767 * C134 + C50686 * C144) * C1549 +
              (C19767 * C123 + C50686 * C130) * C1551) +
             C22208 * C50809) *
                C2173 +
            (C21523 - (C21524 + C21525) + C21526) * C2174 +
            (C21527 - (C21528 + C21529) + C21530) * C2175) *
               C33829 +
           ((C22209 * C1552 - (C22208 * C1549 + C22207 * C1551) +
             C22210 * C50809) *
                C2173 +
            (C24271 - (C24272 + C24273) + C24274) * C2174 +
            (C33430 - (C33431 + C33432) + C33433) * C2175) *
               C50907) *
              C50730 * C901 +
          ((((C19767 * C124 + C50686 * C131) * C1551 +
             (C19767 * C135 + C50686 * C145) * C1549 - C22531 * C1552 -
             C22532 * C50809) *
                C2173 +
            (C20143 * C1551 + C20144 * C1549 - C22369 * C1552 -
             C22370 * C50809) *
                C2174 +
            (C20145 * C1551 + C20146 * C1549 - C31599 * C1552 -
             C31600 * C50809) *
                C2175) *
               C33829 +
           ((C22531 * C1551 + C22532 * C1549 - C22533 * C1552 -
             C22534 * C50809) *
                C2173 +
            (C22369 * C1551 + C22370 * C1549 - C22371 * C1552 -
             C22372 * C50809) *
                C2174 +
            (C31599 * C1551 + C31600 * C1549 -
             (C19767 * C2566 + C50686 * C2571) * C1552 -
             (C19767 * C2572 + C50686 * C2575) * C50809) *
                C2175) *
               C50907) *
              C50730 * C902)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50686 * C129) * C1551 +
             (C19767 * C133 + C50686 * C143) * C1549 - C22199 * C1552 -
             C22200 * C50809) *
                C2173 +
            (C21301 + C21302 - C21303 - C21304) * C2174 + C21321 * C2175) *
               C33829 +
           ((C22199 * C1551 + C22200 * C1549 - C22201 * C1552 -
             C22202 * C50809) *
                C2173 +
            (C23953 + C23954 - C23955 - C23956) * C2174 + C33137 * C2175) *
               C50907) *
              C248 +
          (((C21303 - (C21302 + C21301) + C21304) * C2173 +
            (C21307 - (C21306 + C21305) + C21308) * C2174 +
            (C21311 - (C21310 + C21309) + C21312) * C2175) *
               C33829 +
           ((C23955 - (C23954 + C23953) + C23956) * C2173 +
            (C23961 - (C23962 + C23963) + C23964) * C2174 +
            (C33132 - (C33133 + C33134) + C33135) * C2175) *
               C50907) *
              C249 +
          ((C21321 * C2173 + C21322 * C2174 +
            (C21315 + C21314 - C21313 - C21316) * C2175) *
               C33829 +
           (C33137 * C2173 + (C33134 + C33133 - C33132 - C33135) * C2174 +
            (C21099 * C1551 + C21100 * C1549 -
             (C19767 * C20718 + C50686 * C20719) * C1552 -
             (C19767 * C20720 + C50686 * C20721) * C50809) *
                C2175) *
               C50907) *
              C250) *
         C50713) /
            (p * q * std::sqrt(p + q));
}
